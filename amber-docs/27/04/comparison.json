{"files":[{"patch":"@@ -28,0 +28,1 @@\n+    - [FAQ](faq\/simple_source_files_and_instance_main_methods)\n@@ -29,0 +30,1 @@\n+    - [FAQ](faq\/module_imports)\n","filename":"site\/_index.md","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,13 @@\n+\n+## Module Import Declarations\n+### Frequently Asked Questions {.subtitle}\n+\n+#### What about class name clashes? Like `java.util.List` and `java.sql.List`? {#class_name_clash}\n+- [\"Compiler error \\(which you can then resolve with, say, `import java.sql.Date`\\)\"](https:\/\/old.reddit.com\/r\/java\/comments\/1bqneuy\/jep_draft_module_import_declarations_preview\/kx4usz8\/)\n+    - [Archived link](https:\/\/web.archive.org\/web\/20250319015257\/https:\/\/old.reddit.com\/r\/java\/comments\/1bqneuy\/jep_draft_module_import_declarations_preview\/kx4d3dk\/)\n+\n+#### Why modules specifically? {#why_modules_specifically}\n+- [\\[The\\] goal is to align the dependency granularity with the source code.](https:\/\/old.reddit.com\/r\/java\/comments\/1bqneuy\/jep_draft_module_import_declarations_preview\/kx7uzth\/)\n+    - [Archived link](https:\/\/web.archive.org\/web\/20250319015802\/https:\/\/old.reddit.com\/r\/java\/comments\/1bqneuy\/jep_draft_module_import_declarations_preview\/kx7uzth\/)\n+- [`import module M` in your sources should align with \\[...\\] `requires M` in your module-info.java]()\n+    - [Archived link](https:\/\/web.archive.org\/web\/20250319015802\/https:\/\/old.reddit.com\/r\/java\/comments\/1bqneuy\/jep_draft_module_import_declarations_preview\/kx7uzth\/)\n","filename":"site\/faq\/module_imports.md","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+\n+## Simple Source Files and Instance Main Methods\n+### Frequently Asked Questions {.subtitle}\n+\n+#### Why don't you just get rid of `void main()` too? {#get_rid_of_void_main}\n+- [\"The semantics of a field and a local variable are very different\"](https:\/\/mail.openjdk.org\/pipermail\/amber-dev\/2024-May\/008767.html)\n+\n+#### Why don't you just add `readInt\/readDouble` to `java.io.IO`? {#read_nums_too}\n+- [\"Methods that are automatically imported in this way _effectively become part of the langauge_.  The bar for that is very high.\"](https:\/\/mail.openjdk.org\/pipermail\/amber-dev\/2024-November\/009039.html)\n+- [\"Because it greatly complicates the \"reading state\" that has to be understood by the user\"](https:\/\/mail.openjdk.org\/pipermail\/amber-dev\/2024-November\/009033.html)\n+\n+#### Why don't you just static import all of `java.lang`? {#static_import_java_lang}\n+- [\"It creates a perverse incentive to put MORE stuff in java.lang, just to get the importing.\"](https:\/\/mail.openjdk.org\/pipermail\/amber-dev\/2025-January\/009200.html)\n","filename":"site\/faq\/simple_source_files_and_instance_main_methods.md","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"}]}