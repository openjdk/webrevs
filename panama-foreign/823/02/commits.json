[{"commit":{"message":"merge fixes"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestReentrantUpcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"}],"sha":"a3126b5b71a9ce3fb91d5d0cc10e1eeb435ad9ad"},{"commit":{"message":"Merge branch 'foreign-memaccess+abi' into 136"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"}],"sha":"d9701f4b2dddd91b481886319dbcc723f032e9e6"},{"commit":{"message":"Fix issue in custom arena code\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java"}],"sha":"21ebfddd0a434c247249da093304aa55c962c652"},{"commit":{"message":"8298096: Refine javadoc for Linker\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"}],"sha":"32ffd898810694c8860a39f2d2e16a00b84bc508"},{"commit":{"message":"8304276: Add javadoc for custom arena\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java"}],"sha":"63855aa004596e65d3c96f047bb5b39d46cb058a"},{"commit":{"message":"Fix minor typos in ffi document\n\nReviewed-by: jvernee"},"files":[{"filename":"doc\/panama_ffi.md"}],"sha":"026dd0736a9b68226bfb00935d96d25c5c6b96cf"},{"commit":{"message":"Refresh FFM API documents\n\nReviewed-by: jvernee"},"files":[{"filename":"doc\/panama_ffi.md"},{"filename":"doc\/panama_memaccess.md"}],"sha":"f8c989ceeed85c67e20b0b8ba4f0e457687a603c"},{"commit":{"message":"8296315: Add get\/set-AtIndex methods for byte, boolean\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"}],"sha":"36e9987e45d70d60bc2f471ec94e22f445793930"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"8fe753faff762162ab1796935a981b2fb1192652"},{"commit":{"message":"8303835: Remove uncaught exception handler linker option\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/LibFallback.java"},{"filename":"src\/java.base\/share\/native\/libfallbackLinker\/fallbackLinker.c"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"}],"sha":"2a22d914371a5094f8dcfc270694de4dbffdd930"},{"commit":{"message":"Fix override in ValueLayout\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"}],"sha":"097817f49f1b1bfa61e120c3b4a3d0cb24a4abc6"},{"commit":{"message":"8303888: Add AddressLayout.withoutTargetLayout\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AddressLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"}],"sha":"873d4b3b85b165d3b9fe44045b96f9e39f3a1d5e"},{"commit":{"message":"8303879: Add MemoryLayout.withoutName()\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AddressLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/PaddingLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/StructLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/UnionLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"}],"sha":"01db58db4d92d990243eca0f7125163cdfd8cd23"},{"commit":{"message":"8303757: MemorySegment::reinterpret should accept an Arena\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/LibFallback.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"8dcd168ef7f765d1379edbac972ffc4751997c64"},{"commit":{"message":"8303666: Move address layout outside of ValueLayout namespace\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AddressLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemoryInspectionUtil.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutPrincipalTotalityTest.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/platform\/PlatformLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/NativeType.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/PointerBench.java"}],"sha":"8fb623d4b3bd509bc548f249167d18d0845cad31"},{"commit":{"message":"8303667: Drop MemoryLayout::valueLayout factory\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"}],"sha":"3e5ec05c0e263e06ff0d36f8ddb1374dea18c0c6"},{"commit":{"message":"8301803: Rename MemorySegment::array\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"a377942fcffcab11fb9c7a7388a2e763720f0190"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"2f3153a172ae5d78d033367027b11c054f1c126f"},{"commit":{"message":"8303017: Passing by-value structs whose size is not power of 2 doesn't work on all platforms\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/arraystructs\/TestArrayStructs.java"}],"sha":"82e8c9df442806ea440b6106b4d50281232061cb"},{"commit":{"message":"8303519: Replace Binding.Context with an arena\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingInterpreter.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"}],"sha":"a7df48c8b0eed89dbb8c6a0ff441e483b3385ddb"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"}],"sha":"28e714d91d3adff8c2cabbf4fa52d81e910180ff"},{"commit":{"message":"8302990: Reduce duplication in test code\n8293827: Padding computed by CallGeneratorHelper can be incorrect\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"f6269d770067e34d04c2289cf246566445146d0f"},{"commit":{"message":"Fix typo in TestLayouts\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"5d296084e40e36ecc52bc1bdc1b1f9258749838c"},{"commit":{"message":"8302885: Implementations of MemorySegment::reinterpret should be final\n\nReviewed-by: jvernee, sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"82be27b167d861ba4be4fcdf17fe0a039e14a979"},{"commit":{"message":"Add additional tests\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"19dfe2a8ce019c86a1135c50ff14dfefef038d07"},{"commit":{"message":"8302346: Lift upcall sharing mechanism to AbstractLinker\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"9664ae3022ab3c2980df402009886bb0d971e742"},{"commit":{"message":"Fix failing test\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/platform\/PlatformLayouts.java"}],"sha":"1dfb72989379ed063b2d119cdced0ff3bf2c85a1"},{"commit":{"message":"Add tests\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"}],"sha":"a8edf8c933f1299765b132988308ba3d6750d6b8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"42c6814d99059dbcc3734724c6e316ebcd782bc0"},{"commit":{"message":"8302556: Find better way to create unsafe native segments\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/LibFallback.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainDirect.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/JavaLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"01dc5a9203323371f4c8e87f13e513eca6ab5477"},{"commit":{"message":"Remove PlatformLayout\n\nReviewed-by: mcimadamore, jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLinuxAArch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestMacOsAArch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestRISCV64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsAArch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/platform\/PlatformLayouts.java"}],"sha":"0a6c3c60bcb7cd37d801099c8b00b86f8b8b144f"},{"commit":{"message":"Simplify code now that bitSize is always aligned to byte boundaries\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"}],"sha":"2c378000405d65345bb799bccdc1facc06b63f8d"},{"commit":{"message":"Simplify ValueLayouts\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"}],"sha":"8dd8ba53215c35adfed472d2a89aa6a7bcdfd48d"},{"commit":{"message":"Remove specialized zero-lenght mapped segment\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"96dedbe93d1a4209104c8d15dafef672beef5823"},{"commit":{"message":"Remove dead code, add tests and fixes\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"f20e2674113e9aa5526ce8ed1af67ee083f36d65"},{"commit":{"message":"Improve test coverage in the jdk.internal.layout package\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractGroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/PaddingLayoutImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/SequenceLayoutImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"281c2d4d6a6ab6de1ad37d37d442ce1484e2d781"},{"commit":{"message":"Fix typo in vector test template\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"2da9da024dfa640549529fdc6d3ace9e0c6a401b"},{"commit":{"message":"ValueLayouts: Improve test coverage and more\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"e51a2eca250f04d55039371220bb495f1defe3ec"},{"commit":{"message":"Generalize PointerInvoke to benchmark by-ref segment return\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libPtr.c"}],"sha":"e3a46c9a1ae783e4209d87a807f987d8e05d74ea"},{"commit":{"message":"8301806: TestNulls does not cover all API classes\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"}],"sha":"e3bbd8380b9192cd1ed95062985158e7b320a2e1"},{"commit":{"message":"8301801: Implement arena-centric API\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentScope.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FFIType.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/LibFallback.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestAddressDereference.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestDereferencePath.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestLargeSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryInspection.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/dontrelease\/TestDontRelease.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainDirect.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/nested\/TestNested.java"},{"filename":"test\/jdk\/java\/foreign\/normalize\/TestNormalize.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/trivial\/TestTrivial.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/MapToMemorySegmentTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkMismatchAcquire.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkOps.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverSlice.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentVsBits.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySessionClose.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ParallelSum.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestLoadBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/PointerBench.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"d501f737977ea2186737c7d91e81a06725ea074c"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"140f83870ded70839b7b205192a6f4a5bc256677"},{"commit":{"message":"8300294: Add tests for by-value unions and structs with nested fixed-length arrays\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FFIType.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLinuxAArch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/nested\/TestNested.java"}],"sha":"5311430254613512f6fd7f7d287f18fed3e307a5"},{"commit":{"message":"8302098: Fix initialization order in NativeMemorySegmentImpl\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"}],"sha":"cabef4551925ab9e9154afc58a58ff3c963cc280"},{"commit":{"message":"Add `final` to AbstractMemorySegmentImpl::asUnbounded\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"}],"sha":"5f2c36655a0aac5004427bbb0085dabd08a110c9"},{"commit":{"message":"Fix test failures following 8300201\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"}],"sha":"f61f3a31af4976d0e64d3bfa72cda95b501e2a7d"},{"commit":{"message":"8301262: Simplify the CaptureCallState support\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/downcallLinker.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CapturableState.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"},{"filename":"test\/jdk\/java\/foreign\/trivial\/TestTrivial.java"}],"sha":"bf1334c5bd1cb5ef01e144bfc0dceaa016ba857a"},{"commit":{"message":"8301261: Add linker option for specifying uncaught exception handler\n8301249: Linker::upcalStub should accept linker options\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/LibFallback.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"src\/java.base\/share\/native\/libfallbackLinker\/fallbackLinker.c"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/UpcallTestHelper.java"}],"sha":"cbd263509ebb8fbdb0552ff433376a765bf1946f"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/hotspot\/share\/prims\/upcallLinker.cpp"}],"sha":"9be3d51a1ecc2f58291559b75e4ec8c3d53bc13c"},{"commit":{"message":"Fix javadoc \"highest-order\" rather than \"upper\"\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"}],"sha":"e159f2f62459ed6f47fd1137cc75f992dba5f616"},{"commit":{"message":"8300201: When storing MemoryAddress.ofLong(0x0000000080000000L), MemorySegment.get is not equal to MemorySegment.set because of the expanded sign\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"}],"sha":"8050ecb5505f2787308f47edd0c1d647a4b7b51b"},{"commit":{"message":"8301360: Add dereference layout paths to memory layout API\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"test\/jdk\/java\/foreign\/TestDereferencePath.java"}],"sha":"a943c2eb10ba40c36d5a6e874160d0a747457510"},{"commit":{"message":"8299730: Add trivial call linker option\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/downcallLinker_zero.cpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/hotspot\/share\/prims\/upcallLinker.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"test\/jdk\/java\/foreign\/UpcallTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/trivial\/TestTrivial.java"},{"filename":"test\/jdk\/java\/foreign\/trivial\/TestTrivialUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/trivial\/libTrivial.c"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadVirtual.java"}],"sha":"200a116b385b58da964940f8f499e102b11780a0"},{"commit":{"message":"8301228: Add more ways to resize zero-length memory segments\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SlicingAllocator.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/SequenceLayoutImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAddressDereference.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/libAddressDereference.c"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/NativeType.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/PointerBench.java"}],"sha":"add0cf9969dc7b22542c9e40f8feee116950b5e9"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"}],"sha":"a2822b6383c6f0ce1c9881b0e12cad25a1987410"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestRISCV64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"},{"filename":"test\/jdk\/java\/foreign\/dontrelease\/TestDontRelease.java"},{"filename":"test\/jdk\/java\/foreign\/normalize\/TestNormalize.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"}],"sha":"219d0ab43019b9efd4b109c8a441b86321ac2c80"},{"commit":{"message":"8287516: Implement fallback Linker\n\nReviewed-by: mcimadamore"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/data\/hotspot-symbols\/symbols-shared"},{"filename":"make\/devkit\/createLibffiBundle.sh"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/foreignGlobals_zero.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/globalDefinitions_zero.hpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FFIABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FFIStatus.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FFIType.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/fallback\/LibFallback.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/ForeignLinkerSupport.java"},{"filename":"src\/java.base\/share\/native\/libfallbackLinker\/fallbackLinker.c"},{"filename":"src\/java.base\/share\/native\/libjava\/ForeignLinkerSupport.c"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java"}],"sha":"850aa09e5b326c25a706f3eb3b1c13eab1b2968d"},{"commit":{"message":"8300785: Add way to select group element paths by index\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"8a005941e527204a0fc0b1ef6fe833c69f02980c"},{"commit":{"message":"8299181: PaddingLayout unable to return byteAlignment value\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractGroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/MemoryLayoutUtil.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/PaddingLayoutImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/SequenceLayoutImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"477cc26fe153b406c5b7477dec08a6ecb3d93a0f"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"}],"sha":"cad86458886932a2a9e7d6008b8f882153325406"},{"commit":{"message":"Fix build problem on linux-x86\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestMacOsAArch64CallArranger.java"}],"sha":"a263977c27dacc1c5717e75013ef4c9a95f27734"},{"commit":{"message":"8299911: Refactor struct handling in AArch64 CallArranger\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestMacOsAArch64CallArranger.java"}],"sha":"ac10d37f3e9c2b9ef7fd7a810c6c051f4eeaa0af"},{"commit":{"message":"Clean up Utils\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"}],"sha":"3863b6a550eea110f7b9d1ca049871dbb1988516"},{"commit":{"message":"8295290: Add Windows ARM64 ABI support to the Foreign Function & Memory API\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsAArch64CallArranger.java"}],"sha":"08225e4f5e00837e974098a933f27267f3c0dbc5"},{"commit":{"message":"Update linker docs to reflect valist removal\n\nReviewed-by: jvernee"},"files":[{"filename":"doc\/panama_ffi.html"},{"filename":"doc\/panama_ffi.md"}],"sha":"5427e47b4dae9d22a9fa5c4ebfd8959d789b5757"},{"commit":{"message":"8299736: Drop VaList\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/libVaList.c"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libVaList.c"}],"sha":"4617dee95b649a5eb7fbd8a83d4e2c8af1250116"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"}],"sha":"fb7b3ea03da1c66944aeef49493ce595fedfccf4"},{"commit":{"message":"Add benchmarks to MemorySegmentVsBits\n\nReviewed-by: uschindler, mcimadamore"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentVsBits.java"}],"sha":"23d1e3748f0e6575b2dc1cf99fb59773fc4472f7"},{"commit":{"message":"Add benchmark\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentVsBits.java"}],"sha":"aed122101d73b0acac25b70a325bf0615d8f7153"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"test\/jdk\/TEST.groups"}],"sha":"1f33f4a1a2f65e763e22c87c29ee2489fd1bed1e"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"}],"sha":"00b8ac5b55e97f45f7138495a57f56b61d2958da"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"f13fc898ab92dbfffae9241befe620a56b7c2b1e"},{"commit":{"message":"Update foreign memory doc\n\nReviewed-by: jvernee"},"files":[{"filename":"doc\/panama_memaccess.md"}],"sha":"4d988e44011caf10200b7a31954e072927cc6a1b"},{"commit":{"message":"Update foreign linker doc\n\nReviewed-by: jvernee"},"files":[{"filename":"doc\/panama_ffi.md"}],"sha":"78d460f04d93f3df8e8f703e78780a152793f44a"},{"commit":{"message":"8298532: Declare private constructors for FFM internal Architecture implementations\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"}],"sha":"7f33d1c700a1407cfe4c09d6cac3caf943343cae"},{"commit":{"message":"Merge master"},"files":[{"filename":".jcheck\/conf"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/downcallLinker_zero.cpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/PaddingLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentScope.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/StructLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/UnionLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SlicingAllocator.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutPrincipalTotalityTest.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestLargeSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryInspection.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLinuxAArch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/dontrelease\/TestDontRelease.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainDirect.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/normalize\/TestNormalize.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/MapToMemorySegmentTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkMismatchAcquire.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkOps.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverSlice.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySessionClose.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ParallelSum.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestLoadBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"59fd48632f59944c7ebd517e066cfa0cd29b16d5"},{"commit":{"message":"Move Linux & MacOs CallArranger tests into separate files\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestLinuxAArch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestMacOsAArch64CallArranger.java"}],"sha":"d379ca1ca32926591fbf8a4afdae1a4a52b3cb63"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"afb904735b1afc26dfe3b81f2273f43f0dbef929"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"cd169fdd727f89ba5e524afe28854fd8f4579c6f"},{"commit":{"message":"8296973: saving errno on a value-returning function crashes the JVM\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"}],"sha":"617198dbbbbed1a7fdb9fdfe981ca09fec8bcf5b"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"d62b512607a01cdf799bcf4db607833e38fbfd06"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"b8d867cf507c7ceedc74d999153beb033833fafb"},{"commit":{"message":"8296417: Make memory session a pure lifetime abstraction\n\nReviewed-by: jvernee, pminborg"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SlicingAllocator.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestLargeSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryInspection.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/dontrelease\/TestDontRelease.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/normalize\/TestNormalize.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkMismatchAcquire.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkOps.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverSlice.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySessionClose.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ParallelSum.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestLoadBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/PointerBench.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"2c9ab7cf2bff8acfc42d5040e63613414dfe6158"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"4c9f5e3c44d4d15480996e69b168a382029a6107"},{"commit":{"message":"8295353: Mark Register v24 as Volatile in Foreign Function & Memory C ABI Definition\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"}],"sha":"bee7072450d85ab017b00e70aab9bd262e7615e8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"}],"sha":"9e9d4115bb73ffd206a3494933cdddeee71ff588"},{"commit":{"message":"8294970: Add linker option for saving thread-locals that the VM can overwrite\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.cpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CapturableState.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"}],"sha":"b3477cae1abd2369fc12f8262858e3259f6b809c"},{"commit":{"message":"8275584: Incorrect stack spilling in CallArranger on MacOS\/AArch64\n\nCo-authored-by: Jorn Vernee <jvernee@openjdk.org>\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"}],"sha":"d575ec5528a1ebaf9efaa24c34c69288ef0592a2"},{"commit":{"message":"8295780: API doc enhancement needed for MemorySegment.get\/setUtf8String, MemoryAddress.ofLong\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"}],"sha":"0714b72fe187081936a0152eee9f21554cbbc0ab"},{"commit":{"message":"8294871: The spec on the method MemorySegment::segmentOffset() should be corrected\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"}],"sha":"4786b169ac49876497e4d46f3389e505c4d24817"},{"commit":{"message":"Add @sealedGraph tag to MemoryLayout\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"}],"sha":"916c746fce0891cac41fbb72aa132942b1ae7547"},{"commit":{"message":"Merge master"},"files":[{"filename":"README.md"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"595945b66c85661c66480d4ec6d8475c80703a1e"},{"commit":{"message":"8294621: [Panama] Copying from a StringCharBuffer-backed MemorySegment results in crash\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"}],"sha":"7d7d242557f493ed8643f075481329cc05d56f6c"},{"commit":{"message":"8295265: Refactor handling of special values passed to stubs\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/foreignGlobals_zero.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"15a1ec23efc74e5e483168cd8d75cabb0148e544"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":".jcheck\/conf"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"d5798b3fe78464f1841a89a9676384ea51cec566"},{"commit":{"message":"8294986: Possible mismatched acquire\/release in binding specializer\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"test\/jdk\/java\/foreign\/dontrelease\/TestDontRelease.java"}],"sha":"b9e9a20a4e6f3d3d0f35dd35499911eca0de6893"},{"commit":{"message":"Merge master"},"files":[{"filename":"README.md"},{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java"}],"sha":"22f873023862ef3fc80baec9baa0c3fe0bdfe0d0"},{"commit":{"message":"8294309: Downcall and Upcall unboxing code should reject heap segments\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/UpcallTestHelper.java"}],"sha":"ca57d13ebc27989abee43769655812e092d9ac36"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"7c98f564e744ef5715a7983f2949456fee9a9695"},{"commit":{"message":"8292034: Improve javadoc after memory segment\/memory address unification\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"9d5141d89088ae62118604694c3803875a3494b7"},{"commit":{"message":"8294365: LoopOverOfAddress.java benchmark fails to compile\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java"}],"sha":"9343e0ac550baa94fcd9d68e112eadff9a411d4d"},{"commit":{"message":"8293367: Enable native access for modules not in the boot layer\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java"}],"sha":"cc210a145df4537f980f4759b75c17820fa5e221"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"2c395a604b148a0783fee40586144186a594f7b7"},{"commit":{"message":"Fix style and remove redundant method\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/PaddingLayoutImpl.java"}],"sha":"9296ca122322642ce0ff0b3eb30496afb821918b"},{"commit":{"message":"Break out functionality to internal class\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"}],"sha":"2859b4894fb0388aa7941a28ed8525b64568c2eb"},{"commit":{"message":"8292047: Consider ways to add linkage parameters to downcall handles\n\nReviewed-by: mcimadamore"},"files":[{"filename":"doc\/panama_ffi.md"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"}],"sha":"60a47cb071f48a44e95c3b4a6defcf477738db0d"},{"commit":{"message":"Convert classes into records\n\nReviewed-by: jvernee, sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"5b63be82e9db32ad02111b1fd3fa2abf0d1f8a5c"},{"commit":{"message":"Add an internal MemoryInspection class\n\nReviewed-by: mcimadamore, sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemoryInspection.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemoryInspectionUtil.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryInspection.java"}],"sha":"b30ae8f70f335c654cccb0e6a924edf12c17238e"},{"commit":{"message":"8284300: Explicitly reject layouts that don't have the correct alignment during linking\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"}],"sha":"268ed1aa30bc9f6fe5049fb159dc31e6d7abf7b7"},{"commit":{"message":"Split Stream operations, fix final and class properties\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractGroupLayout.java"}],"sha":"455313339811e9aaa94ec2808007d9eb98e7f8e7"},{"commit":{"message":"Rename parameter names\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/StructLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/UnionLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"e024427ae6c5ba2bae5073bbcbe8ad056e432b30"},{"commit":{"message":"Fix imports\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"}],"sha":"abb929b6da68808475a018aa57871d0fed41ce22"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"}],"sha":"cb272592d5043aaa2d9f013eac37620de50418ef"},{"commit":{"message":"Fix tests using stale `SymbolLookup::lookup`\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"}],"sha":"269c2fe911e7aadfececf9396b93db052b66c6eb"},{"commit":{"message":"8291873: Implement return value normalization in Java\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"test\/jdk\/java\/foreign\/normalize\/TestNormalize.java"}],"sha":"3e8ef17b89244a7daac63b08a8a25fb0a12c24e9"},{"commit":{"message":"8293400: Modify static constructors in MemorySegment\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkMismatchAcquire.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkOps.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverSlice.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySessionClose.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ParallelSum.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestLoadBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"fea1f25d056bff31ae50ca70796f16f2aa273a37"},{"commit":{"message":"8292037: Consider moving Linker::methodType as FunctionDescriptor::toMethodType\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"}],"sha":"f890e56b9357bff8578e1efe8a172b1809d639cf"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"aabdbd9052558ec6c4706a19c2c4d80423a4b87e"},{"commit":{"message":"8293495: Revisit name of SymbolLookup::lookup\n\nReviewed-by: sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"}],"sha":"2bdb662a786a34a0d7cb7014b73cb74243a4c613"},{"commit":{"message":"8275644: Replace VMReg in shuffling code with something more fine grained.\n\nReviewed-by: mcimadamore, ngasson"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/downcallLinker_zero.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/foreignGlobals_zero.cpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"123463f9ffdf39e1570e9b1063c8b5fb2dfd9371"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"60e656e0caad0b72b33467509eb9f18e96e135d8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"3e4879f87a876e6441ff10ed954f615e1e300609"},{"commit":{"message":"8292957: Remove redundant MemoryLayout::is* methods\n\nReviewed-by: sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"a6db156805ad5d10818ba66d9c88320726f1bfdd"},{"commit":{"message":"8292918: Split FunctionDescriptor into an interface and implementation(s)\n\nReviewed-by: sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"}],"sha":"a3256f0357963d41fe2cda6fd1c9684f42818d01"},{"commit":{"message":"8291826: Rework MemoryLayout Sealed Hierarchy\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/PaddingLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/StructLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/UnionLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractGroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/MemoryLayoutUtil.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/PaddingLayoutImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/SequenceLayoutImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/ValueLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutPrincipalTotalityTest.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"}],"sha":"8f8f03c7ec80f7ee39298723bfd0cdfed38ee386"},{"commit":{"message":"8292851: MemorySegment arithmetics performed with int accuracy where long is required\n\nReviewed-by: sundar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"test\/jdk\/java\/foreign\/TestLargeSegmentCopy.java"}],"sha":"a0a12ac1e5ccae8467500413263e7cf99ba64c68"},{"commit":{"message":"Micro optimizations and tidy\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"}],"sha":"b670b630fc136e810b4c0a0673e91415c7629903"},{"commit":{"message":"Tighten up sealed\/final classes\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"}],"sha":"4282818288fecf239d159d540a93b1aea4bf7ae3"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"}],"sha":"defe92a30a48eaa8db2e1e2fa55d2d46f507ea93"},{"commit":{"message":"Fix regression\n\nReviewed-by: psandoz"},"files":[],"sha":"e4ce9eaf8dffdc926d7f0422b0c6dd2da942dd2b"},{"commit":{"message":"8292174: Add unaligned layouts to ValueLayout\n\nReviewed-by: mcimadamore, psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/JavaLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java"}],"sha":"62eb59fea208c25e2306f67177e63f6fc80d4449"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"c6afdc1f5d969fe23f7ffe7901782db3db8c201d"},{"commit":{"message":"Rename layout variable and parameter names to be consistent\n\nReviewed-by: jvernee, mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/PaddingLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"}],"sha":"7f24473927f58bbf210f33bc7ee4a098eb22f03a"},{"commit":{"message":"8292038: Split factories to create sequence layouts\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"f4d6c3bab539443bb03389e5ed90a85fc9ad0125"},{"commit":{"message":"Rename and fix issues around CABI\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"60691ac93bded5cb83d537722fb11d6b32f826ee"},{"commit":{"message":"Fix bug in hashCode after JDK-8291473\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"1db053f7c9f24ef99b15c3c20969375689c28335"},{"commit":{"message":"8292078: Thread-safety issues in AbstractLinker implementations\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"6b46ed9f06355443eca748d0735016b1b0f2f8a5"},{"commit":{"message":"8291913: Remove the TraceOptimizedUpcallStubs flag\n\nReviewed-by: mcimadamore"},"files":[],"sha":"218a003c13fce0c204b1a9fb368bbef1fc1a7ce5"},{"commit":{"message":"Cleanup class issues\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"}],"sha":"24bc8020d5b1cda0bc8085d2913882c1724ed097"},{"commit":{"message":"8291286: Improve JavaDocs for static constructors in MemorySession\n\nReviewed-by: mcimadamore"},"files":[],"sha":"adb988742c1a569f24dac697fd5ba78c1ebf67f5"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"92f4fb2418986ba5422631d05c2c7565273bc2e3"},{"commit":{"message":"Revert changes to ValueLayout.OfAddress::toString\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java"}],"sha":"0c2b6100b1ce546d8974bbb11a577bbef5508644"},{"commit":{"message":"8291473: Unify MemorySegment and MemoryAddress\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainDirect.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadVirtual.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/NativeType.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/PointerBench.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"8b1af9a16441ea69d8013f048656279f90ac7dc1"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java"}],"sha":"4696051d3682120697cf0e4660bc22cf62964938"},{"commit":{"message":"8290880: Add static MemorySegment::mismatch method\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"}],"sha":"bb2ef3e25abd6d4fb1286f58ea013eb5afe12b25"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"}],"sha":"a275b7b0e78e82e9cdc2948746aefa01da9e8889"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"de251eaca872b3846b7a955f040af2952e07302c"},{"commit":{"message":"8289285: Use records for binding classes\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"37b7935e5193d55748fddbd98a71be4ec5ce519f"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/cpu\/zero\/globalDefinitions_zero.hpp"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"1976cbf3084ae96f6f04cb1c59e6faadc633fbf2"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"}],"sha":"af41580db53a629d781d6370a7d42377fc2707a8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/ImplicitAttach.java"}],"sha":"a5e7d0d5693135b6db4b82588925bcd8ac4ff3b0"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"9e975021033a39dcd0375e6bf43b33d2666c658b"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":".jcheck\/conf"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"4d38a114d258a72a89ae604b92dcd5de1496743d"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java"}],"sha":"3d11035dc8520eb45cd0a11829ee41e0c833c597"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/upcallLinker.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java"}],"sha":"d81f6632cdde922b78f1992fd0ea62d26ad231e2"},{"commit":{"message":"Update docs\n\nReviewed-by: jvernee"},"files":[{"filename":"README.md"},{"filename":"doc\/panama_ffi.md"},{"filename":"doc\/panama_memaccess.md"}],"sha":"21452ec32b27ba906ec06253e4a7af9037728174"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/downcallLinker_zero.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/foreignGlobals_zero.cpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/hotspot\/share\/prims\/upcallLinker.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/PaddingLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySessionImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingInterpreter.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64VaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemorySession.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainDirect.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java"},{"filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/MapToMemorySegmentTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkMismatchAcquire.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkOps.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadVirtual.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/JavaLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverSlice.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySessionClose.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ParallelSum.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestLoadBytes.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libPtr.c"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libVaList.c"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"}],"sha":"333999581aa307942eab110f6f33a6fb02afff9d"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"b4e38e04a3aefec656763e4c5f6b3d0d14fb0d6c"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"7d7af7c2590463451b6ae8d971a4f62fd9799d87"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"e42073c30f323684f39d521a51a219e8dba723f9"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/cpu\/zero\/globalDefinitions_zero.hpp"}],"sha":"3f7bf03e89e8ed90d49a213d3e5075464ceb827c"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"91e1cb5be6f7e732ea987ba5a7f4a6c0b14a715f"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"551405dcef3b66a2fd7e03915174d71822b4297e"},{"commit":{"message":"Switch to daemon threads for async upcalls\n\nReviewed-by: jvernee"},"files":[],"sha":"028fe2e403f0788dbf980d82cff7dcd72f245b58"},{"commit":{"message":"8270851: Logic for attaching\/detaching native threads could be improved\n\nReviewed-by: jvernee, dholmes"},"files":[],"sha":"0c14a6d503386e12282f12388b7f4c67840077a3"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"}],"sha":"ab79fd7def4c579fd2d73b888e3b5b7cec7a2783"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"6327f81b375abe03305d73087d399c0bd607faf7"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"bda0becdcbe96874d86783324c83edfaf9e5fcf9"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"62cc5b3b4a0f5e90b36f462378626556776898e7"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"3fcce092349c77dccd26f5540116e1676590b9ad"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"6af29ab17c2896fc9c57825e74e06e2afb678c01"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"8230a7f60de38ffc50a8460a9e891b539084cdd8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"948122059f12a377af6252cec172058f12933a1f"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"0fe826cedb297069455a02edab217dbfe99109f8"},{"commit":{"message":"Merge branch 'foreign-preview' into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"4b11c98bc5ac89d382d0ff306065500c33517f1b"},{"commit":{"message":"8277845: Clean up use if ProgrammableInvoker\/UpcallHandler.USE_INTRINSICS in tests.\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"}],"sha":"1e1574c9cb6186fd0087019cef81b6c67d26db29"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"673040766e5a3f6420a287bbb289cc09137f7c22"},{"commit":{"message":"Merge master"},"files":[{"filename":".jcheck\/conf"}],"sha":"e0afc86aee18d229dc7446b37d721b5dfb638397"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"638f0f9b0f7434dbac1c65f0b50d5c2de6aa7960"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"58c5b1f2d4aaf7f936b850a678393c4e2d21d13a"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"23a049aebd614ba701fc5945f184758120ea2172"},{"commit":{"message":"8278151: Heap segments should handle alignment constraints in a deterministic fashion\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"9200854c79a1732fa2d79dd2466651149bc285e2"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"151f433ee759e237f52ba1b847a365fcfc972da7"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"}],"sha":"8a16279e9270c333d6f0f0f1edb88d427908e4e8"},{"commit":{"message":"8277945: Use snippets in jdk.incubator.foreign API documentation\n\nReviewed-by: psandoz, mcimadamore, sundar"},"files":[],"sha":"43478b9bdbeb2c827b89ae4ac369805bb0641fd6"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"}],"sha":"ac67414d41ac8dc6e59d947a57f45b109b22d78d"},{"commit":{"message":"8277657: OptimizedEntryBlob should extend RuntimeBlob directly\n\nReviewed-by: mcimadamore"},"files":[],"sha":"77dbcdb8991711f3a660bad16b5355a801779a81"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"e47a8d6995a9119b5bd65a6e1d329a4bf80f58e1"},{"commit":{"message":"Add missing include for Linux\n\nReviewed-by: mcimadamore"},"files":[],"sha":"68e97308327340b18167def38490f741c2a7d532"},{"commit":{"message":"8275647: Enable multi-register return values for optimized upcall stubs\n\nReviewed-by: mcimadamore, ngasson"},"files":[],"sha":"fb07746ab9eb121e9b5e9e0d07cf9ad6f5eabc9a"},{"commit":{"message":"8276987: Optimized upcall stub should be printed with -XX:+PrintStubCode\n\nReviewed-by: jvernee"},"files":[],"sha":"4029dd5dacf73ca528d70ff2addda2dc027b093d"},{"commit":{"message":"Merge master"},"files":[],"sha":"0d3ad18170c77ea160621f072b6d222722b410b4"},{"commit":{"message":"8275646: Implement optimized upcall stubs on AArch64\n\nReviewed-by: jvernee"},"files":[],"sha":"9e9ba2e99d3218f37b89e9cd0dae431f471be487"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"330a9f8c53b62e5f11775b2842709c77835a4971"},{"commit":{"message":"8255903: Enable multi-register return values for native invokers\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"818dcfc8e7c0383efb3438a19fc7e24bfdbfcae7"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"ed9bcef8c489db9d6a781f806ec88e2acaad8d23"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"0d35f42d99656b17f901041ef5f72565789beda7"},{"commit":{"message":"8275332: Variadic functions don't work on Linux\/AArch64\n\nReviewed-by: mcimadamore, jvernee"},"files":[],"sha":"87cfa79ba80af7b79a5d9873fe093bed459b88ec"},{"commit":{"message":"8255902: Enable stack arguments for native invokers & optimized upcall stubs\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b8d4b8a47a9212d1958ccd7d8a611412a6a7b5bf"},{"commit":{"message":"Address failures in jdk.incubator.foreign benchmarks\n\nReviewed-by: mcimadamore"},"files":[],"sha":"de6083abc288d912f8f2e69a0e47ae761ec503f1"},{"commit":{"message":"8275382: foreign-memaccess+abi branch fails to build with error Undefined symbol: “typeArrayOopDesc::long_at(int) const”\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"}],"sha":"5158b94c92b9c3a36fc2d01a34c9f91337950dbb"},{"commit":{"message":"8274912: Eagerly generate native invokers\n\nReviewed-by: ngasson, mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"}],"sha":"1aa1c29c16cba9f4389c32fd55b5e4653e6a5fff"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"e5e373e84f2881c258664a4525b8958f65204a42"},{"commit":{"message":"8275054: Racy updates when releasing confined scopes\n\nReviewed-by: jvernee"},"files":[],"sha":"b0cf974bdb0afcd736909128f940ce8c3f6d4285"},{"commit":{"message":"8275061: Exceptions thrown from non-void upcalls are not handled\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"}],"sha":"960846267ec1c3a907d363982ed5d0d0e1eaea1f"},{"commit":{"message":"8274978: Add implicit allocator factory\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"fd9d6cc103bdf53384323a622cbedd4ea35b4164"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"f18f08823395b73f1b23c35030f4311145be21dd"},{"commit":{"message":"API refresh - part two\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"}],"sha":"da42112d4941ecf04fa2473a2a54385870b5fb3d"},{"commit":{"message":"8274602: Generalize UpcallStub into NativeSymbol\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"3882cde67f3ef7a9325339a4672b6a853411bd45"},{"commit":{"message":"8274157: java.foreign: Add method MemorySegment::asOverlappingSlice\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java"}],"sha":"2aaf59d31225f9988a845a240c0dd075cfd52563"},{"commit":{"message":"8274648: Improve logic for acquiring by reference parameters in downcall handles\n\nReviewed-by: jvernee"},"files":[],"sha":"6a077704882aa6db630ffa82515d3d084a7cc16a"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"cc87961729db329101d1e64b1413fd1118c277be"},{"commit":{"message":"8274592: Performance regression in upcalls\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"}],"sha":"9cd966f1944a6109d1cc537510c3beae50348439"},{"commit":{"message":"TestScopedOperations does not work as expected\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"}],"sha":"451119083514a197f055babb567596ef07c27d2f"},{"commit":{"message":"Make Addressable sealed again\n\nReviewed-by: jvernee"},"files":[],"sha":"ab61f0688fe856dd2cb76735eb057170d55ba49c"},{"commit":{"message":"8274287: Add a way to specify block size of unbounded arena allocator\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"5ce4e30bb880e45daa86c757dba1e990baa8de76"},{"commit":{"message":"8274285: By reference parameters should be kept alive during downcalls\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"}],"sha":"208d6b7b959e222b2141ff192a442bde86a08292"},{"commit":{"message":"Fix VarHandleTestExact\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"}],"sha":"934554032fdce622f95f7f70728470d3b5679a29"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"1414f2c2c56409ee8b7a51026f28a1b5277c03f3"},{"commit":{"message":"8274219: Add back generic factory to create value layouts\n\nReviewed-by: jvernee, psandoz"},"files":[],"sha":"79b304b4f423189e84bc6085e576ac1d9c9e6ab3"},{"commit":{"message":"8273905: Foreign API refresh\n\nReviewed-by: uschindler, psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"}],"sha":"831e75bcb2eff79be1b2fb743aea9a2a2560cbd8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/modules\/java.base\/Lib.gmk"}],"sha":"b0283a4c4f196ef20ea7b6f2c59cf529d6ef6bb8"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"b29641ad0d86f4494d56f79fc6b72c111764922b"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"c3d9643e8e95c8daf2d0a93bf15395c9d57e1468"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"21a22d313c26f504b0b36c64b07d1cbe5f034b5c"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"40b7c48d94e62f9d80b12140ad4f0db653daacd6"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"238965b190fd60160064bf068c3e47715f5373df"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"b818e9cf12860f6e79612c5513e7cfa0ae3bc101"},{"commit":{"message":"Add var handle support for boolean and MemoryAddress carrier\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"ca701b8a67c3f10b8e279a5a45b628fe5c54c2aa"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"556006f7d9d6fc6eb418196505cb1038442f3a33"},{"commit":{"message":"Merge master"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java"}],"sha":"8c3c0804771993939865ab212c890f9a66ff97c5"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"5b860a41139a8f7a595e87077918d722fead630c"},{"commit":{"message":"8261972: CLinker.C_VA_LIST layout does not match platform layout for va_list\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"59281cd64b5109b6b635377c03ce1155e53765b9"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"9613c7380737f28b7fcccabfa696dccdcdc58c9c"},{"commit":{"message":"8269807: Implement the fix for JDK-8269240 in the panama-foreign repo\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"}],"sha":"fed85e7eaf8c33adc6b6f3857d3f4211adf485fa"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"5fe1fb6f1f1ca8d469e016606130e9eae5098c80"},{"commit":{"message":"Add support for high-level functions to copy to and from Java arrays\n\nReviewed-by: jvernee, uschindler"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"}],"sha":"e3a68dbfb261252835e6f429053f97f8abd9334c"},{"commit":{"message":"Merge master"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"347a5a71a6560e121e6873c213cecf51900754bb"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"7c94f63f1265fd27567c33c41395953516e2b40a"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"}],"sha":"0d9d64da3f9e2a7a3fb7ed714ae89d6d0a3c9c87"},{"commit":{"message":"Fix a couple of CI build problems\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b4cde2e8147c02be482c97706d676ef61e0ee065"},{"commit":{"message":"8268230: Foreign Linker API & Windows user32\/kernel32: String conversion seems broken\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"},{"filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"}],"sha":"782aeb49a5114fa64d729b1ad06271d70b82e698"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/libVaList.c"}],"sha":"599b146ee5c679b618d616edc4e855877a12b822"},{"commit":{"message":"8268633: CLinker::toJavaString doesn't check for NULL address\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java"}],"sha":"3cc47de0a6e3e2b29aa663478b2072f6ed40b054"},{"commit":{"message":"8268673: Stack walk across optimized entry frame on fresh native thread fails\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"}],"sha":"2287ca5a530c348bc4ec7c0c6774e8ed9101dffa"},{"commit":{"message":"8268266: Investigate way to lazily customize upcall lambda forms\n\nReviewed-by: mcimadamore"},"files":[],"sha":"ef8327da2198b60be51e575a38503992ce63a727"},{"commit":{"message":"8268169: The system lookup can not find stdio functions such as printf on Windows 10\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"fc80193ffc6c6dbeab8ef7e98da19e47b4616af8"},{"commit":{"message":"Merge master"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"9b8046d7f3e579f89b30561b8e533ab2a76d3297"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"3caff916e7aeef7d3888be00b17d9b7e4c38cefb"},{"commit":{"message":"Merge master"},"files":[{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"}],"sha":"1a6aa790fee31d31c92e829cdef1a53cac7bb6f2"},{"commit":{"message":"8267989: Exceptions thrown during upcalls should be handled\n8268031: VarHandle combinator check for exceptions is too strict\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"}],"sha":"d1b8b67021f037b362780354b4caa0b77e9c6e29"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"0e1678d5d0bbb3f0010b07f46eb8d6e5841ddb79"},{"commit":{"message":"8267240: Bounded arena allocator doesn't work if bounded size > BLOCK_SIZE\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"18f0e477e335f17bc9d192771adf0d56f31c4d21"},{"commit":{"message":"Remove printf and vprintf tests\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"5cf32176f5a87bb689c5016aad6db5135dd0e29f"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"91ce7fdeee760d62c4df1e60c34025e5b17ff625"},{"commit":{"message":"8266911: On Windows the system lookup should load ucrtbase if possible\n\nReviewed-by: mcimadamore"},"files":[],"sha":"f7874145711b52f8c86183db8109a9ae62ab881c"},{"commit":{"message":"8266916: Simplify logic for creating libSysLookup\n\nReviewed-by: sundar"},"files":[],"sha":"669eb8764b0d1db1f6719e51080414ea549ed37f"},{"commit":{"message":"8266814: Improve library loading with SymbolLookup abstraction\n\nReviewed-by: jvernee, sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"9d22e4349cc38cdfdaeb21c259114316e81ec0f7"},{"commit":{"message":"8266626: Check that the target address of a native call is not NULL\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"}],"sha":"872b126f9cf17b87832eb979d301d92d36e78351"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"bb6156f3c0e51caa4d8658ca982c6ded69a8de4f"},{"commit":{"message":"Minor Windows build fixes\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9472dff21fbf41cca7e934d28019891b3d8f6131"},{"commit":{"message":"8266627: CLinker allocateMemory, freeMemory implementation should not use default lookup\n\nReviewed-by: jvernee"},"files":[],"sha":"d0a7098c48af49e67879aa6d3fcef6300df6f180"},{"commit":{"message":"8265222: revisit foreign library loading\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"e8043ed7982e8609bcf0e5104cc37b5148caa40d"},{"commit":{"message":"8266371: Memory segment bound check fails because of small segment optimizations\n\nReviewed-by: sundar, chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"db8a85d10a6477bcf944710b5133b17550358ae4"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"}],"sha":"500294210799454e0f8435f3c30221b117a166ef"},{"commit":{"message":"Simplify ResourceScope::acquire for implicit scopes\n\nReviewed-by: psandoz"},"files":[],"sha":"f189b8b3b0aec392559fc115bbbd8a377beab2c1"},{"commit":{"message":"Clarify IllegalArgumentException on MemorySegment::[spliterator,elements]\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"ee1b125c80c238ea616ae27dc00b26cd8fe5163b"},{"commit":{"message":"8265974: ResourceScope code does not handle close vs. add races well\n\nReviewed-by: psandoz"},"files":[],"sha":"c529f18a43b60db4c25f07e197e23f906b883c72"},{"commit":{"message":"8265751: MemoryAddress should have a scope accessor\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"}],"sha":"b3adcb65b2c7e1679b3e8de678a37754c7c22961"},{"commit":{"message":"8265760: Memory segments\/addresses should have an isNative predicate\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"122c7b6d966c9c533d569821cf0bfe164c29614c"},{"commit":{"message":"8264933: Improve stream support in memory segments\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"94660a1648500f15b8b493654560cf94d1ccfb5a"},{"commit":{"message":"Make TestHandshake more tolerant to spurious failures\n\nReviewed-by: chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"}],"sha":"d48b8df0152f54e82edf0d09a7d874e4be2dfe4c"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"16cbd9521677fccbbd19114f1dabb9a06b6f6496"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"90e7541a17da20303e7c7d250a1b917ed17e3f3b"},{"commit":{"message":"Improve NIO channel support for buffer views over segments\n\nCo-authored-by: Patrick Concannon <pconcannon@openjdk.org>\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/AbstractChannelsTest.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java"},{"filename":"test\/jdk\/java\/foreign\/channels\/TestSocketChannels.java"}],"sha":"8c53fef14e333b6062e09bbbf967bae1c8a4161d"},{"commit":{"message":"Misc javadoc fixes\n\nReviewed-by: chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"}],"sha":"c2812d9e0161d9171229abc475597508a2c6b0bd"},{"commit":{"message":"Investigate alternate strategy to acquire resource scopes\n\nReviewed-by: chegar, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"}],"sha":"d9e7935db91f5b1ccb1af042e93c9b1608df3bdd"},{"commit":{"message":"Improve ResourceScope javadoc\n\nReviewed-by: psandoz, chegar"},"files":[],"sha":"d0c986c978d0a22b87cd4fa8f3e4436ca331bfcc"},{"commit":{"message":"Add benchmark on ResourceScope::close\n\nReviewed-by: jvernee"},"files":[],"sha":"3389a81bb645ba898685b7fdb5389347d579ebac"},{"commit":{"message":"Fix bad call to segment factory in VarHandleExactTest\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"}],"sha":"ff1fab422a8e4e9eed1d510ba1b40d24f6b6a43f"},{"commit":{"message":"Fix another slip up in spliterator test\n\nReviewed-by: psandoz"},"files":[],"sha":"032f955d405091f6868a02958295bd6f572ccad8"},{"commit":{"message":"Add exhaustive test for resource scope handle\n\nReviewed-by: chegar"},"files":[],"sha":"99b08b6907d16e7f5548174ad42423eeb8ef00f6"},{"commit":{"message":"Add test for resource scope acquire with bulk operation\n\nReviewed-by: chegar"},"files":[{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"}],"sha":"ee5d616876c7344decd97c83fa77b19d52ed69c1"},{"commit":{"message":"8265185: make sure all code snippets in jdk.incubator.foreign javadoc comments are proper\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9b7f5ed8a5cadea14e6f47b379c6bd9d92933d84"},{"commit":{"message":"8265185: make sure all code snippets in jdk.incubator.foreign javadoc comments are proper\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b29dd932789a60b0905e7e16154b612565a3355b"},{"commit":{"message":"8265069: Fix javadoc for restricted methods\n\nReviewed-by: mcimadamore"},"files":[],"sha":"fa7befe845572900937818b3870cf5436fac0825"},{"commit":{"message":"8265072: Use MemoryAddress instead of MemorySegment in CLinker::upcallStub\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"b034c4d415f5c3c873b89ff6d3bc6633e677e027"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"4ced941c5f48b3a7984a39031c5429560c46e6c6"},{"commit":{"message":"8264515: Rename static factory methods in the foreign API\n\nReviewed-by: jvernee, sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"a9a5eac10a9903e58b38cbd1fa688756f94a823f"},{"commit":{"message":"8264763: Add support for extended map modes in mapped segments\n\nReviewed-by: sundar"},"files":[],"sha":"e9b8a6a69c12b6836b49d33db00bc8cd8327e96c"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"b5b1ebd4893e1858269317960e233fb31d66b22a"},{"commit":{"message":"8264515: Rename static factory methods in the foreign API\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"26b3f4d9f15f4833d3079c5cf02a029e60e898a4"},{"commit":{"message":"8264397: Use the blessed modifier order in jdk.incubator.foreign\n\nReviewed-by: mcimadamore"},"files":[],"sha":"784d64836a4ad46db550c757e15ca76c65accaf3"},{"commit":{"message":"8264280: Foreign linker should be more friendly with implicit scopes\n\nReviewed-by: jvernee"},"files":[],"sha":"54b02d86e28e074e5d7d9c8749639c6f605ffe1b"},{"commit":{"message":"8264434: Remove ResourceScope-less overload from API\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"a4ba76c32d55bc81add386b85d95e8ca37d37782"},{"commit":{"message":"8264402: drop \"Restricted\" suffix for methods enabled by enable-native-access and add fine grained native-access for CLinker\n\nReviewed-by: jvernee, mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"ab46878c1a1935d20db95588376096d02c8b8357"},{"commit":{"message":"8264422: SpliteratorTest fails after ResourceScope integration\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"}],"sha":"b85801e6eb445fb13d165b85e6ac97ece1f3788f"},{"commit":{"message":"8264386: LibraryLookup should be more friendly with implicit unloading\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"d70c1e406bb04305d4427eb0fd6b773cccdf2fb7"},{"commit":{"message":"Fix assert on jdk.module.enable.native.access\n\nReviewed-by: psandoz, mcimadamore"},"files":[],"sha":"64069698d6c361accbec7d07781dbf74411690eb"},{"commit":{"message":"8263459: Add better support for restricted methods\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainInvoke.java"},{"filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/PanamaMainReflection.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"f25302093b1130a7453ee6fd547323d6a0866e3c"},{"commit":{"message":"8264280: Foreign linker should be more friendly with implicit scopes\n\nReviewed-by: psandoz, jvernee"},"files":[],"sha":"1dde0f2216bcb12deda911bfa65a714c8ff90385"},{"commit":{"message":"8264187: Add a method for creating a slicing MethodHandle\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"43cd3a9996e23fd5e191a87743707c8c732afe1f"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"4e697c742f375d909f3e1fcc958b80b9cb7a4cdf"},{"commit":{"message":"8264176: ResourceScope handles should keep parent scope reachable\n\nReviewed-by: jvernee, psandoz"},"files":[],"sha":"44b790b206a4e103abcaef284a8ca6fe6f8adc46"},{"commit":{"message":"8263018: Improve API for lifecycle of native resources\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"4192f7b19fb39689e860ce04493db465070709f4"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"}],"sha":"387ae8bca77e815b9a585247a2193a8304dfd5dd"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"c7bfd8f9c212ec4a8ca0d4e7bd4deef5f87959e4"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"}],"sha":"249187777c7d6ddbbef739706dff82500e2f7439"},{"commit":{"message":"8262118: Specialize upcalls\n\nReviewed-by: mcimadamore, vlivanov"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"}],"sha":"96c29d5271d655c1a967ffd67041b21da056d503"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java"}],"sha":"549f8764a544e8a16d01bc5bd7e6b94ea722615d"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"02b7783b79d7422d2c98957ce5b7f69ee0f6761a"},{"commit":{"message":"Add a benchmark for strlen using Foreign Linker API\n\nReviewed-by: jvernee"},"files":[],"sha":"299121371084fd295b60a7925a592788e1460121"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"fa60fd02479483798d3e4cda497f3358899eaf4d"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"4e054fa978bfb0e168b455c862236350a1b40270"},{"commit":{"message":"8258238: Some jextract samples crash with: \"updating map that does not need updating\"\n\nReviewed-by: ngasson, mcimadamore"},"files":[],"sha":"a8e8cc4dc6eae092106d2822a004c912d27e4ddf"},{"commit":{"message":"Add stack walk test case that doesn't verify oops\n\nReviewed-by: vlivanov"},"files":[{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"}],"sha":"d207b2cf3d20107ce2245893d9f20d64f24231f3"},{"commit":{"message":"8258516: Allow passing a target address as an argument to a native MethodHandle\n\nReviewed-by: mcimadamore, vlivanov"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"}],"sha":"a983f556357af80b41b1ec928967a6a12ce36ba1"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"}],"sha":"95b9ef9d739bb2abce33309a405acad4cddaa899"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"aea0196d66508ecec505e58686a5c562c37371ee"},{"commit":{"message":"Make `UNSAFE` variable static final\n\nReviewed-by: mcimadamore"},"files":[],"sha":"962361e0cc9cae9b8f61e834867563d66ff584b1"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/data\/hotspot-symbols\/symbols-shared"},{"filename":"src\/hotspot\/cpu\/zero\/globalDefinitions_zero.hpp"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"e69b59e536c35376f3fbe4f30c3aa1164b106bf2"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"017bf202401fc29add36975d86c9cbaf40a1aef0"},{"commit":{"message":"Removed duplicate profile_memory_access function from methodData.cpp\n\nReviewed-by: mcimadamore"},"files":[],"sha":"cfdacf13acc2d8fc1742449b81d3786ac0533b52"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"59f5071c932e22293ac7e876d5f322ebaf9ead09"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[],"sha":"5a8d47fd226708e46f56ec82294e9c786f6850c1"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"}],"sha":"857045bdfee00b54e6f85a3b865dc9d0f4128d21"},{"commit":{"message":"8258238: Some jextract samples crash with: \"updating map that does not need updating\"\n\nReviewed-by: mcimadamore"},"files":[],"sha":"f4899689d558f1bc15894c17c6218e10d57c66ca"},{"commit":{"message":"8257692: Using both heap and native segments can degrade performance\n\nReviewed-by: jvernee, psandoz, vlivanov"},"files":[],"sha":"e367491179b00c3e02e05a9e7edfb5a779ddac40"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"1f0ac20378a63e5115675f41e8b2215536904f95"},{"commit":{"message":"Automatic merge of master into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"0927cd0c9b764b8f12c74d3ad0af5e608292e005"},{"commit":{"message":"Fix discrepancies between master and foreign-memaccess+abi\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"0bcdc8529c1fba69df4cf8cd082dfa89a6c90bae"},{"commit":{"message":"Merge branch 'master' into foreign-memaccess+abi"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"900f0e10548251c5af35ebe1add7459d66ec279f"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"7b7486d5f140ba09ef52249dcbddf1585b7a7e0d"},{"commit":{"message":"8257075: MemoryAcccess methods are missing @ForceInline annotations\n\nReviewed-by: jvernee, chegar"},"files":[],"sha":"c51cb7c6b166e22cd157f09ec4b9039f822a9070"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"be7be720ca406ffeb63933fbaf702143f0f01161"},{"commit":{"message":"8252504: Add a method to MemoryLayout which returns a offset-computing method handle\n\nReviewed-by: mcimadamore, chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"2293ba7ea13f62348acdcbd794f6fe624a4e1c8f"},{"commit":{"message":"8256466: MemoryLayout factories do not guard against null layouts\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"3dd700d9447f4f44eb0e41220e35370d7f65bd57"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"}],"sha":"34df73d7c989b5d7938a6bb3542388ac7823f7e1"},{"commit":{"message":"8256466: MemoryLayout factories do not guard against null layouts\n\nReviewed-by: jvernee, chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"cbdce31b6bac131acd21b28b414619c0dc7498bd"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"16268b35d2f1bd6de474404c6f3f2ed271be836e"},{"commit":{"message":"Merge master"},"files":[{"filename":".jcheck\/conf"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"}],"sha":"fa0bfcedccee6fdade1d00a6d35ad2a9da909923"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f6f57fb2cdeb70d84d0da83acacf628973750395"},{"commit":{"message":"8256466: MemoryLayout factories do not guard against null layouts\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"b2012d892c0da39be397440bedc7d8c7be530885"},{"commit":{"message":"8256247: TestUpcallHighArity fails on AArch64\n\nReviewed-by: jvernee"},"files":[],"sha":"5d42840784262b91770d85dc864f29bc3596fbed"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"f0331d45729adba0eef1a295a675960e196b3f0f"},{"commit":{"message":"Merge master"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java"}],"sha":"b87627878b506f1cf0b31db9476145d1ae9332d8"},{"commit":{"message":"8256080: AArch64: fatal error with unexpected intrinsic id _linkToNative\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"}],"sha":"4695f7ad04a23b5baea625cc3231d10531946146"},{"commit":{"message":"Fix Aarch64 build failure\n\nReviewed-by: jvernee"},"files":[],"sha":"a1eac0ee87208a43bea060d0c50938643996e0cb"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"66692532d6d1bc0b5398886997036dab31282601"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"4ff386970b18d3cb9745444a257c4c374b65fdec"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4b0e1067ed994116142989bfc0495880cd88f455"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"49d786c2449019ebc9586f54733accbbb9486571"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"bb7939ef8dfe848dbdc0cd06184f8b4f02897f0c"},{"commit":{"message":"Add benchmark for floating point memory access var handle performance\n\nReviewed-by: jvernee, psandoz"},"files":[],"sha":"9255b30de82f6a3e0c2abb4b5f48393e310e049a"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"caa058ca29979fef7cec62021b1baa1e9365e601"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"3a792d5362ea05cae27d563e748b06c1e45208bc"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"c32f1085d985ef83bf7c7c783007408a9f2b049e"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java"},{"filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template"}],"sha":"63df0eca6c5f389fe4e852da2a96deff1c1da49a"},{"commit":{"message":"8254682: Close MemorySegments passed to upcalls after the upcall is done\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"}],"sha":"76b9a24ec95863d22ece9f6d9e76633bbfcde341"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"5332632e234739ffde93407849f05cf41102c789"},{"commit":{"message":"8254343: Revisit API for supporting mapped memory segments\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"}],"sha":"bb8c61d7c74d29070e7dbdb66be85bce64ba9f59"},{"commit":{"message":"8254260: Consider splitting binding recipe operators that serve a dual role\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"eb96bd6a1b1eb1c0871cac84020d9b82def9daf2"},{"commit":{"message":"Merge foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"}],"sha":"735b04c7e728aa1edf57583912a16ae324eac06d"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"9f32656f2f16a8359c5304943ccc5d8d48be5e56"},{"commit":{"message":"Misc javadoc fixes (take two)\n\nReviewed-by: jvernee, sundar"},"files":[],"sha":"89c13c583438079c929d8291776479ffa6dcfbdf"},{"commit":{"message":"Misc javadoc fixes\n\nReviewed-by: jvernee, sundar"},"files":[],"sha":"ac51890adc347cb055be3a840216a6c1d51b852d"},{"commit":{"message":"8254156: Simplify ABI classification logic\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"}],"sha":"6663aabea65f380e40676e7a447724e0acc4c784"},{"commit":{"message":"Update intrinsic annotation on linkToNative\n\nReviewed-by: mcimadamore"},"files":[],"sha":"63535ccb35b2c298dbdf95185f6de7e599f84782"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"df683806d5f3b798c8e0f2354c04ea65cecc5ed8"},{"commit":{"message":"8253937: Simplify support for shared memory segment\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"}],"sha":"875417e679a555738bf375e82e3e0eda3632d3e9"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"627f4c6af1cfef856f0e13e0784d15a3b0130d82"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"cc8271d67edf40dd65ba567faee67b1003393099"},{"commit":{"message":"8253823: Investigate ways to make handoff-like operation more explicit\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"60816761750f8d13f4fb0f3e3022ca58d4e580be"},{"commit":{"message":"Merge foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"67d3d30b1e0533e4778b43dc1bd4c31f7dbc1799"},{"commit":{"message":"Investigate ways to make handoff-like operation more explicit (foreign-memacess edition)\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"b6d387e1715d891f845931f4c168a07a95c1144f"},{"commit":{"message":"8253796: Consider making CValueLayout public.\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"}],"sha":"36c8aa755c9b2e8ce0cb8d60fbcb8bf0ee9fc77d"},{"commit":{"message":"8253255: Investigate replacing ABI layout attributes with custom subtypes of ValueLayout\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutEquality.java"}],"sha":"79c2bf5dd5e74c1af15005acacc377fc9fac3f01"},{"commit":{"message":"Transition back to java on safepoint poll slow-path when returning from an optimized native call\n\nReviewed-by: mcimadamore"},"files":[],"sha":"48f5c38a1dcbb2f1f73da90a77925785354d10ad"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"5fd73137c477987707c82b960cd3316e7a54e5b4"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"e0811b70a55c96c19d65ccd6dd78e8218d40bd5f"},{"commit":{"message":"Turn on downcall intrinsics by default\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"}],"sha":"6ab5d40b4d3d4c62b193194da46cceca79d5d346"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4184caf7f95eb3a8f1e4268f1b6b1c29663bea0b"},{"commit":{"message":"8253472: Hotspot code should special case ScopedAccessError\n\nReviewed-by: eosterlund, jvernee, sundar"},"files":[],"sha":"27ae2787db8973cef03868f634c04c4295def26d"},{"commit":{"message":"8253373: Add package-level javadoc for foreign linker support\n\nReviewed-by: sundar, jvernee"},"files":[],"sha":"ce708b0c5e2e8a91ef31030d41f37bfbb8c7dd99"},{"commit":{"message":"8253430: Improve the LibraryLookup API\n\nReviewed-by: jvernee, sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"7b0109d153ec8f85485ed631ae1fb0f4304ec9aa"},{"commit":{"message":"8253360: LibraryLookup javadoc should be clearer about how to create restricted segments\n\nReviewed-by: sundar, psandoz"},"files":[],"sha":"2d67ef18be357baeefb208aea2e8582e7d3f25b5"},{"commit":{"message":"8233007: Add upcall tests that test stack arguments on Windows\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"5c39293ffa834a52976400946beae193812fac3b"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"415a53d3911c7bdd8849355e947c53f7b48181c5"},{"commit":{"message":"8253355: Add some overloads to memory access API\n\nReviewed-by: sundar, jvernee"},"files":[],"sha":"926437ca8ec50bcc0e182404276d9d31f23ddbb5"},{"commit":{"message":"Merge master"},"files":[{"filename":".jcheck\/conf"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"881c569b3e01bd5d07095aaafd696e7cf5159c68"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"98ebdb417385cfd5256c10e2e4900fa74d6bd90d"},{"commit":{"message":"8253306: jcheck should not be too picky about PR messages on panama-foreign\n\nReviewed-by: henryjen"},"files":[{"filename":".jcheck\/conf"}],"sha":"a32f96612adf2b616e6cc18f28d9181ffcb5684d"},{"commit":{"message":"8253305: The threshold for the shared segment handshake stackwalk is too low\n\nReviewed-by: psandoz"},"files":[],"sha":"4f044a0a0e3948c119e8cf996d7e4a85270de6d2"},{"commit":{"message":"8239780: FunctionDescriptor factories and combinators should check whether return layout is null\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java"}],"sha":"4e74387b58509c18c37cc714ce37ec27e3476674"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"6a297294a725b709760d9c3d5f22c694185bee31"},{"commit":{"message":"8253287: jcheck merge check is too strict\n\nReviewed-by: jvernee"},"files":[{"filename":".jcheck\/conf"}],"sha":"64294f3000e961cf4820cbc1189269258d782290"},{"commit":{"message":"Merge foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"ee6a975429bb71ff187ff55f319a4bd49973e5b1"},{"commit":{"message":"8253243: Investigate ways to make MemorySegment::ofNativeRestricted more composable\n\nReviewed-by: sundar, psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"f8f8eb1b458fe2009f45bd90b0b0a5565d78f426"},{"commit":{"message":"Fix the merge message regex"},"files":[],"sha":"08e416eff5179a059c12b7ebe1394ffc1db659e5"},{"commit":{"message":"8248560: Specify the behaviour of the ForeignLinker returned by CSupport::getSystemLinker\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"dbc7901e6fa3fea11ca8388af0593d9f128fdde7"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"50ecec42167f96d39a36122a28f96dab79eaf10a"},{"commit":{"message":"8253063: ScopedAccessError is sometimes thrown spuriously\n\nReviewed-by: eosterlund, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"}],"sha":"1cc7a78a8d402fb18cf817f7482ff1bcabb538be"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"61f7abc78172b1aa72e5c79c67a335bb7dfcaa22"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":".jcheck\/conf"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"16f0b444414fb03e21bee0bf2fec1663f6f0cde6"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"7fa9bcf4eca4063dfb705a343849d10df877c813"},{"commit":{"message":"8253025: Add support for registering a segment with a Cleaner\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"0b0c1fa83778e25689d46613e051d28181f70456"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"caeff954a76443fa08cd8386f7f6ddedb8937e19"},{"commit":{"message":"8253055: ScopedAccessException should be an Error\n\nReviewed-by: psandoz"},"files":[],"sha":"7d283dff055e2c2a417f1ff773d50f289ee0d3dd"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"f48fc63902db7562d69aee75b014f9550add7053"},{"commit":{"message":"8252757: Add support for shared segments (followup)\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"266fe530afb2e5123c54c64cdee8df917430665b"},{"commit":{"message":"8252757: Add support for shared segments\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"04e65632ef411e501b6a71d69788de94440c3d4a"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"9e7430ff8de95127f1a89e6d0f0f2875993d8c44"},{"commit":{"message":"8252866: MemoryAccess.setAddress should take Addressable, not MemoryAddress (follow up)\n\nReviewed-by: sundar"},"files":[],"sha":"bb4f95ae43f10a1dc6db4886da647ae80ef21efb"},{"commit":{"message":"8252872: NativeScope should take Addressable instead of MemoryAddress\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"5f6355318d500c981615f70bf915bcb46166bb15"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"a064fb907bb079b94052d534a70dce0b7e313da5"},{"commit":{"message":"8252866: MemoryAccess.setAddress should take Addressable, not MemoryAddress\n\nReviewed-by: sundar"},"files":[],"sha":"424c71b3d6f545a9245545cdd9fd50ce249a6e1e"},{"commit":{"message":"8248809: Consider supporting address dereference\/allocation for platforms where pointers are not 64 bits\n\nReviewed-by: psandoz, jvernee"},"files":[],"sha":"c607a358d0980fe111dacfa48490ad9f69a6301c"},{"commit":{"message":"8252838: Panama foreign-abi branch fails to build\n\nReviewed-by: jvernee"},"files":[],"sha":"769c0808f977ec753564c88af7598a4ebd9f1524"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f6e1fcd5cb343e264dc6ceaca19a3589b556f1de"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"6b225df08363234735a9ba60a87658346fe2d039"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"c604fbf5ee05655639935826d2e6eebc826b441f"},{"commit":{"message":"8252770: MemorySegment::allocateNative should honor direct memory limits\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"}],"sha":"2c1e564d13f0e7e9fe6151d2bb395f3c205a5ca1"},{"commit":{"message":"8251047: GC stackwalking doesn't work when intrinsics are enabled (followup)\n\nReviewed-by: vlivanov"},"files":[{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"}],"sha":"b52c7bacc42c7fabe1436fe2e49ab81277d145d3"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"1e9639a90b41ed1a1b7972519e1ec38c62a1de49"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"README.md"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"39e27c7c621dcb0b7bda788891db9b3b4c15a044"},{"commit":{"message":"8251047: GC stackwalking doesn't work when intrinsics are enabled\n\nReviewed-by: mcimadamore"},"files":[],"sha":"f8cc3f439836cb07b337e2288509f01665fb9567"},{"commit":{"message":"Fix implicit default constructor linting warnings\n\nReviewed-by: sundar"},"files":[],"sha":"0546e792759ef97579d690462a26d66f48efb324"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"608bc9841758615634eb97f1ad3922e1474c7098"},{"commit":{"message":"Unsafe ParallelSum test is broken\n\nReviewed-by: jvernee, sundar"},"files":[],"sha":"81c746337e30129fa287bd0d12bee965a6a99094"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"8445c22355653e3c796397e984990a39c241aeac"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"8422fa32bb06431ac5ed43f75c45eb14998d7224"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"b3e5148788984180724c45782cb731d620479601"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"a3c7c9641b34085819add8b9d0ad44f62777e68e"},{"commit":{"message":"8248421: CSupport should have a way to free memory allocated outside Java\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"f694ce0ec7f65c35f9242c96e7909f3a377a9dbd"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"fdc66a5da81b88b3f5d414e3ce805903a65074d0"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[],"sha":"b0687b52dfc466e1997e106f058bb0941c5d5f9c"},{"commit":{"message":"8251048: Add some upcall benchmarks\n\nReviewed-by: mcimadamore"},"files":[],"sha":"0cf5d863c79614f2ac27b635c911c1f81ae4b724"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"7cabdab563559fb29bb3811b94f08ad633f8c177"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"fe4ffe233fdf0a5a1d6fae83e636eb8a8adc20a2"},{"commit":{"message":"8250798: [Test] Cleanup @modules jtreg directives for jdk_foreign tests\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"c342261a38fa473bd0f3b36f0144e5bc86f9781e"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"ba0628915448f6e86cf814c7596525bdab176516"},{"commit":{"message":"8249879: Split MemorySegment and MemoryAddress (minor javadoc tweak)\n\nReviewed-by: jvernee"},"files":[],"sha":"bad4a83bdd233461e6af352a5f8bfd2a6430da36"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"44c3420ebe6f6dbb1951d892b47ef2b44d6a3468"},{"commit":{"message":"8249879: Split MemorySegment and MemoryAddress (test fix)\n\nReviewed-by: jvernee, sundar"},"files":[],"sha":"825d8316712b57b62a9abed6af6c5f054d81e8d0"},{"commit":{"message":"Fix wrong ret_addr_offset value for some native calls.\n\nReviewed-by: mcimadamore"},"files":[],"sha":"f8ca84b232bfbea949fcf71722497c02c464b5c2"},{"commit":{"message":"Merge foreign-memaccess\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"7dd8adefb6fe49ea8c8d097593ba1718ff2328d7"},{"commit":{"message":"8249879: Split MemorySegment and MemoryAddress\n\nReviewed-by: henryjen, psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"21442f610000903d8f5df84afcfdf2941f1a281e"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4aec236bc49b988e2615c0053372cb974000288b"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"00986e8234468f7a7fa0ee250be7ac313fa3de7a"},{"commit":{"message":"8249803: Add LibraryLookup.Symbol (javadoc followup)\n\nReviewed-by: jvernee"},"files":[],"sha":"1c65193372cdbd70df7ea3c31d512afdddf79a9f"},{"commit":{"message":"8249803: Add LibraryLookup.Symbol\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"d3f539131ce2fa712541adc4019a4c1b84161782"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f980dde96c3ea3aa6182c93fd5b53bd79bdd6e20"},{"commit":{"message":"8249790: Add Addressable abstraction (followup)\n\nReviewed-by: jvernee"},"files":[],"sha":"5c034e625326de5c5e3b3446ab86c91b0cb423cd"},{"commit":{"message":"Merge foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"fb5d171e5223bee8e78c3b7eef03ba5c27710116"},{"commit":{"message":"8249790: Add Addressable abstraction\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"98c88d06994357df06a5575030a80fbf2031d356"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"5da427bdd9f01ecf163e2ecb721ef8963bec7dc6"},{"commit":{"message":"8249753: Add restricted factory to access everything segment\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"0c76b50188b42eca265e74f8eef3face5bd6cfff"},{"commit":{"message":"Test the Java VaList implementation on every platform\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/libVaList.c"}],"sha":"177effcba85e9bf0d029db4f894dd3a715205a93"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"04f9fc3d7cc0be0a434a41791316572eff0fb494"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"}],"sha":"05f747037093fa3b2c8846d81e290a2f5bcdd21a"},{"commit":{"message":"8248420: Add a variant of VaList::make which takes a NativeScope\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"997b6fad87a86226530fa91b09762a9703cc1a8b"},{"commit":{"message":"Add missing codeCache.hpp include to upcallStubs.cpp\n\nReviewed-by: psandoz"},"files":[],"sha":"83d338c57efded6f040d3589d57445cc73823814"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"41f85dc22b0e5181b53793c1ae300044a85a8b2e"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[],"sha":"9ab4d7b08e10af011f0ac65f36f769ae42dab24b"},{"commit":{"message":"AArch64 build fixes\n\nReviewed-by: psandoz"},"files":[],"sha":"281c534520e355962ccfd0c376bb16e7e52352c0"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"27368a8b78142d4a66f19daaf9094a0e320d06c0"},{"commit":{"message":"8248487: Add static helpers to access segments (continued) - benchmark fix\n\nReviewed-by: jvernee"},"files":[],"sha":"c45dc25e0a432033ba41bf279009318834241341"},{"commit":{"message":"8248487: Add static helpers to access segments (continued)\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"5827d28e72c82abf544e8fad0ac8a8d74b901606"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"7baacf5e368eaabf482fbb6439379f48b75266d1"},{"commit":{"message":"8248487: Add static helpers to access segments (continued)\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"3a5eb82fcc53390f08aa4332d7d5835da7279107"},{"commit":{"message":"8247993: AArch64: add support for VaList\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/libVaList.c"}],"sha":"3c80669b5b53bb8dabbcc051f2cdb56d70857636"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"6d6233cc5c9c3a63632c18fb19137d5c1694b249"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"f414a2366429589218f04f7d339cf9405faa822e"},{"commit":{"message":"8248480: Switch isVarArg layout attribute to Boolean\n\nReviewed-by: mcimadamore"},"files":[],"sha":"272a141f5182b688106582f79658ae596ad9e22d"},{"commit":{"message":"Fix javadoc issues in foreign-abi\n\nReviewed-by: jvernee"},"files":[],"sha":"3d5b523f4af104c4317b7f20f6041beea6d5d7af"},{"commit":{"message":"Copy stubs from Compile arena to nmethod stub array\n\nReviewed-by: henryjen"},"files":[],"sha":"e84922ec6f45ca1cb49c183cb1dfbd7b48117758"},{"commit":{"message":"Turn off down call intrinsics by default\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"}],"sha":"0e3850cd567ce971f6861bcc8a5eccc3d8714da5"},{"commit":{"message":"8248331: Intrinsify downcall handles in C2\n\nReviewed-by: vlivanov"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"69e9a61e17abca3169021bd52082d6472e6126cb"},{"commit":{"message":"Improve StdLibTest to use new helpers\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"77fc7982eeb9fd2809d5d49cabcbaa6c25d0ef19"},{"commit":{"message":"8248499: Add methods to allocate off heap arrays from Java arrays\n\nReviewed-by: sundar, jvernee, psandoz, henryjen"},"files":[],"sha":"56aecf9408a82a04b317ba5e2b04eb23f2601d78"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"cef954c7ed77db16f1d6a4f02bc0e38a76198d14"},{"commit":{"message":"8248487: Add static helpers to access segments\n\nReviewed-by: sundar, jvernee, chegar, henryjen"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"56d796fc3edaad8de85b23cdeda3b29cfa97bdbe"},{"commit":{"message":"8248458: CSupport.toJavaStringInternal should be moved SharedUtils\n\nReviewed-by: mcimadamore"},"files":[],"sha":"1cad6f6dc7c1f6ba42a96bb838b8bada7ac8b846"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"9b6ec8615995e56419ce05b2c796e72de8abe66b"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"}],"sha":"778a3f049791950466bb4e1613f528719af660c3"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"370945b4af8d5fbc1d4c3f6ca42c8ebd9e0d41ce"},{"commit":{"message":"8248237: VarHandleByteArrayView nioAccess field should be static final\n\nReviewed-by: henryjen, mcimadamore"},"files":[],"sha":"73cff1a006833459b974947217027eeeb46b2f59"},{"commit":{"message":"8247937: Specialize downcall binding recipes using MethodHandle combinators\n\nReviewed-by: mcimadamore"},"files":[],"sha":"5db208ab701cace32a3ff9511911053acee9f72d"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"54e3c3e088dcf3297e8ecb5e01ea6147e8fc542d"},{"commit":{"message":"8247924: Improve javadoc of Foreign Memory Access API (part three)\n\nReviewed-by: jvernee"},"files":[],"sha":"0c8f2c532422a5fb7e2f226c285b4d57557c488c"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"734b24dabf20d2da59a6054c5d3aa8a944a3ecb2"},{"commit":{"message":"8247924: Improve javadoc of Foreign Memory Access API (part two)\n\nReviewed-by: jvernee"},"files":[],"sha":"8ccc74d6e0455341d2acbdd1468d9a5ca31489bd"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4a313fe0f08909f15c90990480cec983ce75fe97"},{"commit":{"message":"8247924: Improve javadoc of Foreign Memory Access API (part one)\n\nReviewed-by: jvernee"},"files":[],"sha":"432c19e9ff628b0264f1edb8061a673007e9991e"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"fc4801959fa6d1a976f109d40ea19f9a94d58ec4"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"615091bbda5b3729be58e9920d09a5e0c28a5587"},{"commit":{"message":"8247678: StdLibTest fails to create an empty VaList on Windows\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"2ed13bf9313018510b444b8a92545822871a61fe"},{"commit":{"message":"8247488: Add support for string helpers in CSupport (decoding support)\n\nReviewed-by: henryjen, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"5c7c216eafa68cae84f795dfb8237c95bb7f93f2"},{"commit":{"message":"Tweak API and javadoc for VaList\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"17bd644cf5169817e1a10cc36c527f6bd4aa82ba"},{"commit":{"message":"Add test for vprintf\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"133193acf44125e58e496224a1977f3e57fbc5b9"},{"commit":{"message":"8247439: NativeAllocationScope should have a way to register existing segments onto it (followup)\n\nReviewed-by: psandoz"},"files":[],"sha":"23cca5d667c1375d60d802421d1f0060f3fd851d"},{"commit":{"message":"8247488: Add support for string helpers in CSupport\n\nReviewed-by: henryjen"},"files":[],"sha":"a16d2773afa894d32330d4299af51fa4730f6ffa"},{"commit":{"message":"8247488: Add support for string helpers in CSupport\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"7e181537de4d8786539e7d97febca1cb61eea713"},{"commit":{"message":"8247439: NativeAllocationScope should have a way to register existing segments onto it\n\nReviewed-by: sundar"},"files":[],"sha":"febed0ead80754dca7ffe5bdc34ab17abe470032"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"dc20b34daca292dcc8f78d5690f29ed8e4ea0ae2"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"7ba07588205c7322e857bd0088a2de64860790a3"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"dcf79ea830014926d169a541b85b4536ac2cb7ba"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[],"sha":"83e007659bb35b187a1016d81785a89d9252435a"},{"commit":{"message":"8245988: Add a special VaList carrier\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/libVaList.c"}],"sha":"a36e19c65682cefd2852f52ee7eefddb5d8ef691"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"20e38d3e2d30bf8bdb93c0bcfa717f2f13267b2b"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"445768b3904208a8196a2f68cf91d4932ab1b006"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"560473815db5226e97abbc909071e167ae430b32"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[],"sha":"0215250226e7da9e59e1c990f4d5788b964c6b6b"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"a5d4de383de32e50f0f9875b0f3039af1b1dc4dd"},{"commit":{"message":"8246052: MemorySegment::mapFromPath should take an offset\n\nReviewed-by: psandoz"},"files":[],"sha":"cb7f1e115b6b5b7868c6306a79941dce7f0b900f"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"27cab4707cf067b540f5cd9850d9d6c8aa3f081b"},{"commit":{"message":"8246053: Add a mask for default access modesAdd a default access mode flag\n\nReviewed-by: sundar, chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"fee6f89ebaa2c8695e0c059f30e17ea710308af1"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"fe116212936a2b7312a1ec5e520e1013684a9672"},{"commit":{"message":"8246052: MemorySegment::mapFromPath should take an offset\n\nReviewed-by: sundar, chegar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"648b843fe0a15ed4e143808696a6f76c08af3e7d"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"937760dafd5049c238741730043d9f8377f09fa7"},{"commit":{"message":"8246040: java\/foreign\/TestAddressHandle fails on big endian platforms\n\nReviewed-by: sundar, jvernee, chegar"},"files":[],"sha":"35352932211c0ef3965e38c9f430d5f7f21fb670"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"74d58d6275355e5d320ef0963233bde3a34c18b0"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"dedc7d8f35ce5b567d39aa76e25938bdbf2160db"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"88a9d2fe66b29a1dd8497461d7d28ee3272658b5"},{"commit":{"message":"Add MemorySegment::mismatch\n\nReviewed-by: mcimadamore, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"}],"sha":"cd397502f19f72fa8a926f4508d3913c8ace9059"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"6accc3eb1de32515eb81a1da9e117403adf43c93"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"f024ca7de9d28bbaa27e57e8d4f547db5ea06002"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4a1c846d848537946c22545b4323982ec6569361"},{"commit":{"message":"8245459: Add support for complex filter value var handle adaptation\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"}],"sha":"f72b57472a676191f0616473d4053a71052460c1"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"b00a1e72b0b000b54e839f7814ee5651454865fc"},{"commit":{"message":"Clarify exception behaviour for MemorySegment::toByteArray when the segment does not feature the READ access mode.\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"}],"sha":"0dc2fed332fdfdbecbd4008c650d2f0ba77e1e6a"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"155835001018c7f4cff8e52612138b5d14f7ff92"},{"commit":{"message":"Add unsigned adapter handles\n\nReviewed-by: mcimadamore, jvernee"},"files":[],"sha":"3193db4c91d808ec9a00c13c074456678e65286d"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"931bde9d798440d6a11ca3a618a135dd04500b07"},{"commit":{"message":"8245227: VarHandle adaptation fails when non-crackable direct method handles are used as adapters\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"}],"sha":"645021438aae3c7ae2ea21695445d574787ac0f4"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"23cb4c58cef0d7302329287f1182460b6df23b29"},{"commit":{"message":"Add benchmark to measure performance of VH adapters\n\nReviewed-by: jvernee, psandoz"},"files":[],"sha":"e2d2dba6f2c7c5ad1247be3cffc098b830242919"},{"commit":{"message":"Rename SystemABI to ForeignLinker, and move C support to a separate class.\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"eebb9a2fd8e60b7ac478d47732a32b36c8aa1f34"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f0c2d3abda80f5fb44253b5386a5f6acd54a7319"},{"commit":{"message":"Move MemoryAddress::copy (more review feedback)\n\nReviewed-by: psandoz"},"files":[],"sha":"0bc9c6bc13acc7c8044219b883bf1e9848a37776"},{"commit":{"message":"Move MemoryAddress::copy (ABI version)\n\nReviewed-by: jvernee"},"files":[],"sha":"90a47d1d0bd2f33579341d88c3ebcd8e9610fb37"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"d4ce7aacc6804bacf50a3829cef639e638c77b6e"},{"commit":{"message":"Move MemoryAddress::copy\n\nReviewed-by: chegar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"3487383884a0c2af1fa58186e771b54598c92805"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"c8df5aabc8a0749b0398a88686df2a9bd5d4ec24"},{"commit":{"message":"Move \"owner\" field and thread-confinement checks to MemoryScope\n\nReviewed-by: mcimadamore"},"files":[],"sha":"928a8af198d93a262223532af5e344b14a7e6399"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"9192f4c6dab71d9cce7208d1f3d11df0b37a1d78"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/cpu\/zero\/globalDefinitions_zero.hpp"}],"sha":"39ab61868cc2c968033d0b3d1c1755717b833f42"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"b1eb5e82bd282c5770554ceb954a7cd565caabb5"},{"commit":{"message":"Add MemorySegment::fill\n\nReviewed-by: jlaskey, jvernee, psandoz, mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"2349db7ad56d9cdcba34f7a7c9fc3e2286befa98"},{"commit":{"message":"8244938: Crash in foreign ABI CallArranger class when a test native function returns a nested struct\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"}],"sha":"32d1f6cd627875e7733f0010def09b1bde8e60ef"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4d1d5bfd2581756b401551012d477b262a15c66c"},{"commit":{"message":"Simplify MemoryScope implementation to use StampedLock\n\nReviewed-by: psandoz"},"files":[],"sha":"667f7f0288bc79736c50cdfc2e10945168f1a124"},{"commit":{"message":"8244720: Check MethodType and FunctionDescritpor used when linking\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java"}],"sha":"5deb924ba71db88251975dffeec89c3ef336be46"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"39a8e0103919fd59d6d7b87ece60f17d8d6b6da6"},{"commit":{"message":"Add MemoryLayout::byteOffset\n\nReviewed-by: jvernee, mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"1bd65632289146ec5c1d65c3884f938827f8fa88"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"e95c3745dd8b0cc10f9a7c08a0476830eda594f9"},{"commit":{"message":"Alternative scalable MemoryScope (followup)\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"d3b7d9817a86cd2ee26973f9fe465a3b011bc31e"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"4c8987ce438a063e801871333b69b1ad59fb2376"},{"commit":{"message":"Alternative scalable MemoryScope\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"e1ae7db0e2117bca21a154981c125dabaceebe92"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"38d76d5132260aede5ce1ce88c5982c749444203"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"46b7d054ec1ff9cb59f50a2bd358a998ee1a398a"},{"commit":{"message":"JDK-8244601: Cleanup support for upcall handles\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"d8f37ce8535500e818bd97d8cbbf9cdecddd29a0"},{"commit":{"message":"Workaround JDK-8239083\n\nReviewed-by: sundar"},"files":[],"sha":"023cac3726c9a5a4f8c83d59e912271ed649abb9"},{"commit":{"message":"JDK-8244270: reorganize ABI-dependent layout constants (second attempt)\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"50e5acd7699da49948bcf12fead5953e87356e79"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"0783de0c9843fe7d25612bda6ab1e987d610ab18"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/modules\/java.base\/Lib.gmk"}],"sha":"4397c2d060856538f52cc8165dc94fd0cc9fa0fc"},{"commit":{"message":"JDK-8243669: Improve library loading for Panama libraries\n\nReviewed-by: sundar, jvernee, mchung"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"7b6d99324af12e11fae9635c36105f312484e6d2"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f84874ef87b82b70105534f24c08fca7e5cada82"},{"commit":{"message":"8244128: Allocations larger than MAX_ALIGN can fail to be sliced to proper size.\n\nReviewed-by: mcimadamore"},"files":[],"sha":"98ad8aab9282ea6a1d7e8eb8c701028da888fe20"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"63c69a0d69b99a164772b39a620a48b6532316b7"},{"commit":{"message":"8244127: \"memory stomping error\" when running java\/foreign\/TestNative.java on a debug build\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"7fad4adf3317ee12b4d161f09edda95a2ae44cbe"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"bb6a7af2cf89dbd5bb88b2a460a6c60b36f6ed48"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"d9e1e9e582144160eecefd6ecd8bc186625db500"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f3fb9db361318a4179ac8b205d2d553a9a550127"},{"commit":{"message":"JDK-8243073: Add support for serial confinement\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"7ac8a2a06f60d821dd843a105563d0c747bf82d4"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"d2d6a8f980bdca78c28b0cbed15c66dabe292b16"},{"commit":{"message":"JDK-8243300: Move var handle combinators into foreign incubator module\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"}],"sha":"10acfce6078fba74ed844a44d18a2c8dd3091acc"},{"commit":{"message":"Fix bad use of MemorySegment::spliterator in TestSharedAccess\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"1652f8fd7efa8534736dc050a1c830548c0811a9"},{"commit":{"message":"Merge foreign-memaccess\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"7e9058d3fe602d4a1310095ae648f9b1c9c520fe"},{"commit":{"message":"JDK-8243284: Remove Foreign class\n\nReviewed-by: sundar, jvernee, henryjen"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"38d3757d6d9e1f51614e6b5629d2506dcb27522e"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"237b8a5dff090076bdcfac1adcd5db7836fe4fa0"},{"commit":{"message":"JDK-8243064: Add more support for mapped memory segments\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"}],"sha":"ef155501fc7a9ae5d0e4bff13ae7a13d4f66ba7f"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"dba7e9753953a63f3b3116917684e81c271a9509"},{"commit":{"message":"JDK-8243089: Foreign address manipulation always fails with exception\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"c1117a5565888495f4d590faf38af39f55b041de"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"27babc1299e5f4c376c4fa27a87d616c465ee6d5"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"}],"sha":"472d08419dcafbc8557f9476e1b7cade1f0d56f3"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"37cdc8b029a6023141efd8c02630f0faf681dcf7"},{"commit":{"message":"Preserve memory scope for buffer segments\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"fbd3a83d063d3ddcf56b8a34a160ca9239a175b6"},{"commit":{"message":"Merge foreign-memaccess"},"files":[],"sha":"69150ac02dda97cd705397a4f534164a542fe4b3"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"5daea007020af6db8a9fbb2d72f9667bcc4bf74c"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"36ab7f1a77cd47566fa07e8179f84611ec4afe10"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"2f753b57de3e39788c6c187e88ba5f5e46d9afa6"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"8c017abfa74ba546310631a85c2202695ae7f3a7"},{"commit":{"message":"Revert \"JDK-8242127: reorganize ABI-dependent layout constants\"\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"a5039dd0f9166e250f747fc02ab7ac8ae9a7ce9f"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"013046a811138addfdd68c59d8f3c64663dbc7cc"},{"commit":{"message":"JDK-8242127: reorganize ABI-dependent layout constants\n\nReviewed-by: jvernee, sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"f7e7b9d6e76e54b1b5d4ff97d2a034769652e132"},{"commit":{"message":"JDK-8242102: foreign-abi build is broken\n\nReviewed-by: sundar"},"files":[],"sha":"e4a84da9ef2d952c0886981c219e704db4264e7d"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"9dec1936a3f54e09579b5faf872968bf9293fea1"},{"commit":{"message":"JDK-8242061: AllocationScope is too general\n\nReviewed-by: jvernee"},"files":[],"sha":"9bda42062d5b6e228e470a16524e4f85322aa22a"},{"commit":{"message":"Merge"},"files":[],"sha":"f353d0b34139c58be67678a385db3e8ed13de631"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"84ac260ec7374f85f943d8668625319eea650492"},{"commit":{"message":"Merge\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"a4b62b2d30b9844fce0bde8282a25eeec1f92133"},{"commit":{"message":"Merge address combinator changes"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"}],"sha":"b34e300af311f02b68fc73af956d32dd1dce6f8a"},{"commit":{"message":"8242028: Remove C string to\/from Java string utilities from Foreign class\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"b641dd2b777010b7986baa6f0955f7ecdf7b7ab0"},{"commit":{"message":"JDK-8241998: Revisit Foreign::ofNativeUnchecked\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"16d5710302687f17bf0ed12ad91675e9fd5693ba"},{"commit":{"message":"8241994: Missing SystemABI.layoutFor mappings for LONG_DOUBLE\n\nReviewed-by: sundar, mcimadamore"},"files":[],"sha":"b994b02d28a39f948221183359dc1c278a13b4c2"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"f5632af299092bd5bb1406e550129651361dfbd4"},{"commit":{"message":"Merge"},"files":[],"sha":"98cec1f925e7eb0f428881497a0e0928577eac16"},{"commit":{"message":"Merge\n\nReviewed-by: sundar, jvernee"},"files":[],"sha":"c7b7e488fa04e908b387476f355190fe2f328562"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"8c35a40dd15c1dd5dcbd03b408dcda7e9fcfa79c"},{"commit":{"message":"8241816: foreign-abi and foreign-jextract panama branches fail to build and test\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9e835e3d9475dfcd0c1d9fde35a76c8e347b4ae9"},{"commit":{"message":"8241712: AArch64: TestDowncall fails with IllegalArgumentException: No ABI attribute present\n\nReviewed-by: jvernee"},"files":[],"sha":"d793157ab094920b224f09f5eabdf2b551835556"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"d2dc414c3bfd4ddac7da4870f9d5c9cd21d7e050"},{"commit":{"message":"8241504: Expose MemoryLayout annotations\/attributes in the public API\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"}],"sha":"3eda91765f4211bb03cd74676834c43ba16cfa60"},{"commit":{"message":"Backport 8237573 to foreign-abi\n\nReviewed-by: mcimadamore, sundar"},"files":[],"sha":"b5a5df54f418b520961933589133403e8cb1f450"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"ac326fa5d93f74e332d3fb73ab7356b72d81f514"},{"commit":{"message":"Miscellaneous cleanups\n\nReviewed-by: henryjen"},"files":[],"sha":"01908bc5524d93f448da63acc6b79cbfe075625a"},{"commit":{"message":"8241309: foreign-abi branch has javadoc errors\n\nReviewed-by: sundar"},"files":[],"sha":"37f564082881e4db7e57f6f86f1c926d32f75baf"},{"commit":{"message":"8237585: Dismantle ForeignUnsafe\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"138342db4f7061497334a526d729048d1e3cd05e"},{"commit":{"message":"8241148: need a way to create MemorySegment with contents from java String and a way to read a C char* as java String\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"9ebefc6f0a15ebe073e9461454ed3142f269f4c3"},{"commit":{"message":"8241017: Enhance AllocationScope to support \"unbounded\" mode\n\nReviewed-by: jvernee, sundar"},"files":[],"sha":"4e1c1c816dffb7fad1cbd9bfc82b6f6fb45425c1"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"89040c9c72b6eae3e2ffeb9f3f04f462f2a63d4b"},{"commit":{"message":"Merge\n\nReviewed-by: jvernee"},"files":[],"sha":"96ffeca989091b35a2a05c32ddb63b1c4395c1da"},{"commit":{"message":"8240874: Add finer-grained access control for memory segments (#47)\n\nReviewed-by: psandoz, jvernee\r\n\r\nCo-authored-by: Maurizio Cimadamore <mcimadamore@openjdk.org>"},"files":[],"sha":"fc9fbf57f93218cbd7a0a18128d1b1cab3c04f8d"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"ff700a430d4b256f1a20330b6ad4fe5d22daaaca"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"65b95d7779424461396288b2f93d8044ed901187"},{"commit":{"message":"8240173: Confusing overflow error when trying to dereference a nothing segment\n\nReviewed-by: psandoz"},"files":[],"sha":"1b4e10e5acedc8d8fd7f0e20ad6b7bdce5a0bb53"},{"commit":{"message":"8239784: Circular initialization causes C_XXX constants to be null\n\nReviewed-by: sundar"},"files":[],"sha":"38fe00c0e50e5dfc82f7be7a8d069cb2ffe89bea"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"cd2fed3a66670177a9808685de410a7159c5f39c"},{"commit":{"message":"8239345: need an enum for standard C types and a way to get a memory layout for those C types\n\nReviewed-by: jvernee, mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"}],"sha":"83bf29cece3e457d8d9b0167bf011b1a3dbfd77a"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"e0acaa6e989fdbb681459731e4b0ef891c4feceb"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"42582c5432cde7c9b9069534bae23b67cf5b777e"},{"commit":{"message":"8238192: Reimplement MemoryAddress memory access handles on top of var handle combinators\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"}],"sha":"0113d7e68dfa3630f15a6afe63e5cf839d7bedde"},{"commit":{"message":"8238226: Revisit FunctionDescriptor\n8237580: Add a method for transforming varargs FunctionDescriptors into fixed-arity ones\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"741750b752dd1ab713d5125b2f9377bc45c965fa"},{"commit":{"message":"Merge\n\nManual merge of foreign-memaccess into foreign-abi\n\nReviewed-by: mcimadamore"},"files":[],"sha":"3b9d0f03f459c594606eccee9b78a68091b66a39"},{"commit":{"message":"8238837: AArch64: TestUpcall failures after JDK-8237358\n\nReviewed-by: jvernee"},"files":[],"sha":"85bb08ad740cbfb48b033acc270ffd6642d21d91"},{"commit":{"message":"8237359: Clean up Binding\n8238227: The COPY_BUFFER operator should take a MemoryLayout\n8238235: Add extensive documentation to Binding\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"33a8007842c4f341f773d3423d0a5069a51cc35b"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"2bf307dbff185794995a028a3048b5a521134767"},{"commit":{"message":"Automatic merge of foreign-memaccess into foreign-abi"},"files":[],"sha":"97bf8f02cadcc1e7c9e31b24dcff5d95794614c6"},{"commit":{"message":"8237360: Add tests that test binding recipe generation directly\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"fc45676e4c7e56f977539cd18f4260147ab86b70"},{"commit":{"message":"Merge remote-tracking branch 'remotes\/origin\/foreign-memaccess' into foreign-abi"},"files":[],"sha":"ce2897c8ba453cc66fd77442b57b12cccd4120e9"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"74dbfbcc2b5d1c5760f54aaadd40a63f58133ce2"},{"commit":{"message":"8238217: panama fails to build because of use of x87 instructions in 64 bit mode\n\nReviewed-by: mcimadamore, vlivanov"},"files":[],"sha":"d10d186ff40f1ec814f09262d6ce322cfc3f5d96"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"200e24bdaaa0ef1e058d3d4a2bc882444209bbec"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"7f6bb0d77627e45079919f41cfd403ed9350b406"},{"commit":{"message":"8237357: Add verification code for binding recipes\n\nReviewed-by: mcimadamore"},"files":[],"sha":"a2e5fdc995c6dc5e64b82e21d922444d892250a4"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"968207e0008a46832a3a3de717591ac0731b85ec"},{"commit":{"message":"8237358: Split the DEREFERENCE binding operator into a load\/store + move\n\nReviewed-by: mcimadamore"},"files":[],"sha":"88df1c99eec676eee6fdc9b295e4896f15f86dd2"},{"commit":{"message":"8237899: Add support for scoped allocation\n\nChanges:\n* Made AllocationScope::sp private\n* fix spurious alignment in copyright header in TestAllocationScope\n\nReviewed-by: jvernee, sundar"},"files":[],"sha":"1013caee16038c74ee6c19f6928c89062092bb2b"},{"commit":{"message":"8237899: Add support for scoped allocation\n\nReviewed-by: jvernee"},"files":[],"sha":"d2a888e437e67335d596ec627171cf3294980325"},{"commit":{"message":"8237356: Refactor shared code in CallArranger\n\nReviewed-by: mcimadamore"},"files":[],"sha":"6c541d2db336ec6a29d5cb1867e35614cc6fa92c"},{"commit":{"message":"8237762: Add platform dependent MemoryLayout constants\n\nReviewed-by: forax, mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"65d9f31c250c039d32e39464337faada4c9cb7cd"},{"commit":{"message":"8237761: Add way to determine the current ABI\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"}],"sha":"b8dd4d3a61985ad6a4320dbe03a52f6729dc3017"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"807cdd1ca4e7edd7e58c08a420cd03714eacd500"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"87754dd3ba380334b38a8107e1c1e778467c819f"},{"commit":{"message":"8237351: Add method to SystemABI for explicitly freeing upcall stubs\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"6b479c025aa2c85d3b50714a438440bced0fa9e5"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"e6b965cbda7c7ad2d2452a0aa594a8cce23529cf"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"3fa5454c25393d5dca67343447f2a53b66626910"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"48d9a0a14caea39235c3d52ff2d123df6bb6aa64"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"12217bed249823300de0ab206d8265fece7cef3b"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"7af2f49b1d8b9a0ce243ef2adaeee9ab4cdca346"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"d9ca8c0215239f83a72c11519a7191edc1a91e6e"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"3220e3253e9a8690bd5c83dae22f8f0dd5acd53f"},{"commit":{"message":"8236453: Test for wrong memory address value\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"}],"sha":"0bf1f61561bf7fd4cfce9412c9cdb937b2b0dbea"},{"commit":{"message":"8236454: Use MethodHandle.linkToStatic to call MemoryAddress.ofLong\n\nReviewed-by: mcimadamore"},"files":[],"sha":"efcd100f6bc288f9f0c71680750a81a3c5b7f6c3"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"babd04017ca48485148824593206163b2d6247a2"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"48946e5b97914d14fc6f8ee2e36cbc3d465aa92d"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"dbbfed841feb8465ee152862a05edb566559cae0"},{"commit":{"message":"8236004: Memory access var handles should support MemoryAddress carrier\n\nReviewed-by: psandoz, jvernee"},"files":[],"sha":"c2a1757022f5c28d295fbf1be4743eb1619659ed"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"40c8ca414e44a44d2bd6b529bb68a3f567ccec8a"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"80192a39fd8989a29dc9dc2c07cdab31c59fafcf"},{"commit":{"message":"8235258: Add support for empty segments and rebased addresses\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"a064e40b5822ba74f1295fcd02602a3b63af3ed8"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"7b0f71caf726c4e23ddc5ac53ee33ba6db9a8a6d"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"8435e6f5f00f9b89d10b24a71c8e28561804472a"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"91a27097883cbc66a85a763b35fb4f2ec0249050"},{"commit":{"message":"Manual merge with foreign-memacess"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"1684542c764e1a283b23676287a2e4ffecbc1452"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"ed38bf5435bb83dc1f7e78b640f3fa3bf2452ee3"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"76716e031ec0f5f81bfaefbc0e6e754d446e6789"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"722a78ce3cad2360557b40e0896924df65067dc0"},{"commit":{"message":"8233317: Add the ProgrammableInvoker\n\nContributed-by: jvernee, mcimadamore, Nick Gasson <nick.gasson@arm.com>\n\nReviewed-by: mcimadamore"},"files":[],"sha":"379a3dcca6dc8d8943a25b10eb251e94451b3483"},{"commit":{"message":"8232907: NPE in FunctionDescriptor::hashCode for function without return type (void)\n\nReviewed-by: mcimadamore"},"files":[],"sha":"d6119e32a773e1d961ba7514876d7e706b61edc8"},{"commit":{"message":"8232628: foreign-abi usability issues\n\nReviewed-by: jvernee"},"files":[],"sha":"14171b1721167d0d1ebd9c625ed5c26f62fe38c4"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"0a79ae9c502f054c01d2e37950a0af483aad5bfe"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"4ad2fac4de44f6f23941528c49279652d6090965"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"0aa19fd69666484e49c62e2769c1ff0ff473fbc7"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"a2d74f1d3d072fbbfd0614264d2345abf6b7dadb"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"cabcc88c270f11def4e149ded9a1a64476fea45d"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"84880816cc66a4d9ef7134b1aeeace1fe24876e5"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"9553696b57841da467d3fa307fea598290ba6831"},{"commit":{"message":"8230806: Use libTestUpcall in TestUpcall\n\nReviewed-by: mcimadamore"},"files":[],"sha":"5f731deea6012f9effed24d08173cd0ae0b16fb6"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"a0ae74f5e1dc1f3669593700ec82c3cea64753e9"},{"commit":{"message":"8229918: Fix clash between recent CallingSequenceTest patch and Windows varargs support patch\n\nReviewed-by: henryjen, nick.gasson@arm.com\n"},"files":[],"sha":"7ee075a9481aba7cce496e95fa3d507ac266dd22"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"83ff7ffbe25dd26a2f7528f2a7a086974649af83"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"c7bff7cd3a9779baf2bb1ff5fdb24c1840f700a0"},{"commit":{"message":"[foreign-abi] 8228762: import CallingSequenceBuilder unit tests\n\nReviewed-by: mcimadamore, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"}],"sha":"cb796747abc5d6c4efb56e0e3ec92cce31f26d8a"},{"commit":{"message":"8228509: Add support for binding varargs functions on Windows\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"}],"sha":"d64026d5470325f06fafcc4b6230169673a7b1c8"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"3384b90d765e2e25002d3427dc56686299f36616"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"359c22acbd5ddfa10808aeca3cb9defd0f3d452a"},{"commit":{"message":"8228486: Add ABI-specific layout constants"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"3c9cfeeced11c674bd46f37c42c11a7c7fb9c079"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"83c276224993b23fb85167130679dab90dc3e77d"},{"commit":{"message":"Manual merge with foreign-memaccess"},"files":[],"sha":"87ead40a3e1b52b2a4d24d8d5f3b9008ebf754cf"},{"commit":{"message":"8227718: Add support for SystemABI\n\nInitial push\n"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"76e0346bdee990092e539e3189f6c3c1bba278dd"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"84b93d84e36210778a0fa3289f79bce3473cc400"},{"commit":{"message":"Automatic merge with foreign-memaccess"},"files":[],"sha":"ecf578d45532326a9fc1328d49ab1d945146ce22"},{"commit":{"message":"Add dependency file for branch foreign-abi"},"files":[],"sha":"56cae7324282938c22c9eaf03df1dfb41f519943"},{"commit":{"message":"Create foreign-abi branch"},"files":[],"sha":"c116a1675a9c1ca5c0b78b2b038e1409a1f2b27b"},{"commit":{"message":"Memory access implementation rewrite - post cleanup\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"38e1b13b34aa6aa9c9bf6b16f1c556277710ffea"},{"commit":{"message":"JDK-8242495: Restructure implementation of memory segments\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java"},{"filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"b4e216fdd5242e1f4267e1431bb897544b82bc92"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"test\/jdk\/TEST.groups"}],"sha":"f87c680b06f9ea1c2cb38350f9b588d538019b38"},{"commit":{"message":"Add JMH test for loop over sliced segment\n\nReviewed-by: jvernee"},"files":[],"sha":"a808727189fa97227c937f70a026aad8db281806"},{"commit":{"message":"JDK-8242253: Clarify bulk of addresses backed by same storage\n\nCo-authored-by: Florian Weimer <fweimer@redhat.com>\nReviewed-by: mcimadamore"},"files":[],"sha":"9808959f1c6c8ce5ae81701e7c03fc03d7c54f6f"},{"commit":{"message":"Fix javadoc in jdk.incubator.foreign.Foreign\n\nReviewed-by: jvernee"},"files":[],"sha":"52c0c6eb7b9d88e94c4de06e31d8b13288d3257e"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/cpu\/zero\/globalDefinitions_zero.hpp"}],"sha":"5c7a6d15a7be958e68fc9a176d38c2efe97d50cf"},{"commit":{"message":"JDK-8242051: Clarify difference between checked and unchecked addresses\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"fe152a6525a2e74d6433b855d89ed9aca454b9a0"},{"commit":{"message":"Backport Foreign methods from foreign-abi back to foreign-memaccess\n\nReviewed-by: henryjen"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"6e6ec3963bc3e78667c288f57e3f04e57d9f6aa5"},{"commit":{"message":"JDK-8242048: Add API point to get raw long value out of a MemoryAddress\n\nReviewed-by: sundar, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"05098b042e1faedc36b74e91e90e29af21810860"},{"commit":{"message":"JDK-8242046: Add a predicate to determine if MemoryLayout is a padding layout\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"aa24d19ad0f52dc1675549f4aba666cf00f3fbf1"},{"commit":{"message":"JDK-8242011: Add support for memory address combinator\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"f683a7fd69932b442c708027002b6e0d5c664f6a"},{"commit":{"message":"JDK-8241866:Add API to reshape sequence layouts\n\nReviewed-by: jvernee, psandoz"},"files":[],"sha":"c21cd1d2f917796460dbc5192c8e53701ad61d44"},{"commit":{"message":"Backport misc changes from foreign-abi\n\nReviewed-by: mcimadamore, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"b126f277ea8440dc9c5bf9e5826e5c9558491454"},{"commit":{"message":"JDK-8241849: Add unsafe way to create unconfined memory segment view\n\nReviewed-by: sundar"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"d34b4444ce5de3ec887a445c5287168947c1ea42"},{"commit":{"message":"JDK-8241772: MemorySegment should offer a spliterator\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java"}],"sha":"86609afb1bc455fa4463dd63199fd7b3338ba1cd"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"}],"sha":"e993b2081a83797ac70ec9caeb142742fafa456a"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"65f25d822a36c3417ad183c01c55eeeafe3e3ac0"},{"commit":{"message":"8241011: Internal access modes should be filtered\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"15eb92ada49ab637ec321ad6cbcae8e6024dbe02"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"af93b670639a5af68e2491260bde9b4dac70f703"},{"commit":{"message":"8240874: Add finer-grained access control for memory segments\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"a539900498f3661decd0767fcf74a4d6d21c2766"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[],"sha":"5153187a61457e707d62daddcadd3f8b9771f88d"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"771a3883a37bc10d865c6606462d39852fd80af4"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/libraries.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"8677a47fb1ed82fcbe8122998953b447224eb326"},{"commit":{"message":"8239079: Add a benchmark for concurrent use of memory access API\n\nReviewed-by: psandoz, jvernee"},"files":[],"sha":"c8a1590e5c6e5a9cdfbd90d1406b5cfffb6ff615"},{"commit":{"message":"Automatic merge of master into foreign-memaccess"},"files":[{"filename":"make\/conf\/jib-profiles.js"}],"sha":"b9cf3d8bfe3c9e22ec65651728c1f86a1fdd1a12"},{"commit":{"message":"8238320: What is the alignment of padding layouts?\n\nReviewed-by: jvernee, psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"}],"sha":"2a3457304ebd5b71f4ce95cc9db710af762ffba5"},{"commit":{"message":"Merge\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"}],"sha":"810ece6752c6911c88cdd515482c4179eeee74bb"},{"commit":{"message":"8238549: Add explicit cast to correct implementation type in VarHandle implementation methods\n\nReviewed-by: jvernee"},"files":[],"sha":"b5d94cd678386bcf69290068374f8c477c8d460e"},{"commit":{"message":"8238494: Odd behavior when using VarHandle::toMethodHandle on a memory access handle\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"}],"sha":"20caeb88c678368473431d4682497ddb64ca4c16"},{"commit":{"message":"Merge"},"files":[{"filename":".jcheck\/conf"}],"sha":"a6b640aa2b1994ee4d126f748873d16971cbae64"},{"commit":{"message":"8237349: Memory access var handles are never called with exact types\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"}],"sha":"e66a2ad17c2ce0d15103f41111a911e97faa9ae6"},{"commit":{"message":"Automatic merge with default"},"files":[{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"}],"sha":"7eee5ab59ee59780a56f20c92d2a35701f958828"},{"commit":{"message":"8238158: Remove spurious capturing lambda from AbstractLayout\n\nReviewed-by: sundar, jvernee"},"files":[],"sha":"605064ed7284ecb5d87ccbf32678a033ad9c96c6"},{"commit":{"message":"8237648: Add support for var handle adaptation\n\nReviewed-by: psandoz, jvernee, forax"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"}],"sha":"a831f2adebf6b8c3d753b9e7dcc90f0633fc412c"},{"commit":{"message":"Manual merge with default"},"files":[],"sha":"27bf608754db623c8a09146c8a972ac668b78799"},{"commit":{"message":"Manual merge with default"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"4896a46ec01548c0baeddf6f6ebbae9edbd7ebec"},{"commit":{"message":"8237082: Workaround C2 limitations when working with long loops\n\nReviewed-by: psandoz, jvernee"},"files":[],"sha":"553ce8e1a0edab07911b493e2ce881b81b520af9"},{"commit":{"message":"8219852: Create a set of standard benchmarks\n\nReviewed-by: jvernee"},"files":[],"sha":"a1fe38acece3108601848214a98ac11db7b5d2ad"},{"commit":{"message":"8219852: Create a set of standard benchmarks\n\nReviewed-by: mcimadamore"},"files":[],"sha":"68577ccb59a945b116ef0cb670d9981bec70535c"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"29649c4f5a5450047800a2823bae684baeea01ed"},{"commit":{"message":"8235837: Memory access API refinements\n\nUpdated methd names:\nadd -> addOffset\nowner -> ownerThread\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"c35c8dd5bda13e667f9f982668cbfc0d5db274b4"},{"commit":{"message":"8235837: Memory access API refinements\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"6aaa064c5bd698a1eba125c3348535ef41069440"},{"commit":{"message":"8236267: Cleanup support for layouts with undefined size\n\nReviewed-by: psandoz, jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"674c1936f880a44e6947b5b3cd4018611c645e41"},{"commit":{"message":"Automatic merge with default"},"files":[{"filename":"test\/jdk\/TEST.groups"}],"sha":"97b296ed40fa2e6867b738bd3c10331b182451d3"},{"commit":{"message":"8236452: Test for wrong first coordinate type\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"}],"sha":"59b42d1ced219dc277c642df9cb86d662309ceeb"},{"commit":{"message":"8235836: Cleanup memory access API javadoc\n\nFixup bad search\/replace\n\nReviewed-by: psandoz"},"files":[],"sha":"6d86752fa9afe22bb824e97883c5b6e56a4324eb"},{"commit":{"message":"Merge"},"files":[],"sha":"45eaccf5d374df1ed53fd01046a639d7f58b1676"},{"commit":{"message":"8235836: Cleanup memory access API javadoc\n\nReviewed-by: psandoz"},"files":[],"sha":"c0234dc69059a2ca10a75a3d75c956dc225a43de"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"ec504113eaeb27c32a1bbf596660bb98aca9e9b3"},{"commit":{"message":"Manual merge with default"},"files":[],"sha":"b33434d324eb9da03cffd04f2bbfe665c921f8b9"},{"commit":{"message":"8235259: Java layout constants should use native endianness\n\nReviewed-by: psandoz"},"files":[],"sha":"10b58ab9e624a68d80194b4a1d2b6df87aec8a04"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"793ce66438c310abb2a60e873797d538c8291566"},{"commit":{"message":"8234814: Eager layout size computation trips on unbound sequence layouts\n\nReviewed-by: jvernee"},"files":[],"sha":"0937eeb8182c032e63b5d31878611e43bde0c7af"},{"commit":{"message":"8234644: Misc cleanup of the memory access API implementation\n\nReviewed-by: psandoz"},"files":[],"sha":"f8be71622232863fb64389032d57f401f5a245eb"},{"commit":{"message":"8234581: Cleanup use of exceptions in the memory access API\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"2595505f3fe5691c865d9cdec9f8ea9725c4a35f"},{"commit":{"message":"8234337: Misc foreign memory acess API cleanups\n\nJavaDoc tweaks\n\nReviewed-by: mcimadamore"},"files":[],"sha":"8bfb767068a52f4bb0c2e38b5bc5dea00f0d0802"},{"commit":{"message":"8234337: Misc foreign memory acess API cleanups\n\nquick followup - examples using MemoryHandles are out of sync\n"},"files":[],"sha":"1eb869a2cf784deffa3c61190d03d78f4eb84fe3"},{"commit":{"message":"8234337: Misc foreign memory acess API cleanups\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"5f5ea90ad6845fc8e68c4a409e589d74e783138e"},{"commit":{"message":"8234073: Add support for deterministic shared segments\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"b0bcded1430e608bff3a01c78bfb24c5abc14adf"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"6406cc3213e9605aabe3adb20210f9df976e005f"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"09f874dc4b66992cfb28c4a90bcbe2b6dd5343ba"},{"commit":{"message":"8233698: GCC 4.8.5 build failure after JDK-8233530\n\nReviewed-by: stuefe, dholmes, kbarrett"},"files":[],"sha":"a57683f3e0224078d602e5787f6ec99aa5cc4bfb"},{"commit":{"message":"8233671: [TESTBUG] runtime\/cds\/appcds\/sharedStrings\/FlagCombo.java fails to compile without jfr\n\nReviewed-by: iklam"},"files":[],"sha":"9ca5e79bf28af331b3c172dbc4e3d42bcb5cb825"},{"commit":{"message":"8233658: Escape + in the expression describing Runtime.Version string\n\nReviewed-by: naoto"},"files":[],"sha":"68a7b58abba73491abe96143e6aea5dba06cbcdd"},{"commit":{"message":"8223940: Private key not supported by chosen signature algorithm\n\nReviewed-by: valeriep"},"files":[],"sha":"b7f557e5c7a934f5d962748e7162e131fcc336ad"},{"commit":{"message":"8231955: ARM32: Address displacement is 0 for volatile field access because of Unsafe field access\n\nReviewed-by: dlong"},"files":[],"sha":"7fbb1f5ae1c675920f67a3af7fc66b0c6cbaf976"},{"commit":{"message":"8233600: Cross-builds fails after JDK-8233285\n\nReviewed-by: shade, erikj"},"files":[],"sha":"708890f2ca411d0a20993dee7f42e1940bdb9f43"},{"commit":{"message":"8233695: AArch64 build failures after -Wno-extra removal\n\nReviewed-by: aph"},"files":[],"sha":"270c5ea37e3e381d61e93c97ae5a08a865301b93"},{"commit":{"message":"8233401: Shenandoah: Refactor\/cleanup Shenandoah load barrier code\n\nReviewed-by: aph, shade, rkennke"},"files":[],"sha":"476cfd1547570aa98fc452f0d5bc3c9216f6d53c"},{"commit":{"message":"8233375: JFR emergency dump does not recover thread state\n\nReviewed-by: dholmes, mgronlun"},"files":[],"sha":"b2e6cba0b40e1866fa10c37a95f53f2614773d3e"},{"commit":{"message":"8233659: [TESTBUG] runtime\/cds\/appcds\/CommandLineFlagCombo.java fails when jfr is disabled\n\nReviewed-by: iklam"},"files":[],"sha":"9c2bb3ccf31837f17e66864564f13083f4f4911a"},{"commit":{"message":"8233650: Javadoc for Math.floorMod(int, int) gives wrong example\n\nReviewed-by: bpb"},"files":[],"sha":"1c2b406ab5a77adfcc95a2c0217b3484db795626"},{"commit":{"message":"8233599: ARM32 Build failed due to 8232050 missing an include\n\nReviewed-by: dholmes"},"files":[],"sha":"8ca82e314797f6823474ac5c0dedd5b41297ace5"},{"commit":{"message":"8233622: (zipfs) open\/test\/jdk\/jdk\/nio\/zipfs\/CopyMoveTests.java has incorrect bug label\n\nReviewed-by: rriggs"},"files":[],"sha":"50a14e368771fb718e96dacade4b801f2bdceddf"},{"commit":{"message":"8233608: Minimal build broken after JDK-8233494\n\nReviewed-by: shade"},"files":[],"sha":"87e7ddc8d7c0c8dbfc3065b00a0aafab303f6a41"},{"commit":{"message":"8233590: Compiler thread creation fails with assert(_c2_count > 0 || _c1_count > 0) failed: No compilers?\n\nHandle the case with -XX:-TieredCompilation properly\n\nReviewed-by: shade, thartmann"},"files":[],"sha":"1c40d6fdfbccf4ab0111b0c8d21c490c0942b377"},{"commit":{"message":"8233496: AOT tests failures with 'java.lang.RuntimeException: Failed to find sun\/hotspot\/WhiteBox.class'\n\nReviewed-by: kvn, thartmann"},"files":[],"sha":"ddaa12237e9958ca26bb1e905aa22c5dce3120cd"},{"commit":{"message":"8232209: Update double-conversion license file to version 3.1.5\n\nReviewed-by: sundar"},"files":[],"sha":"50ef4854dc74f1cf43e96c4b70dc1ab404e5462b"},{"commit":{"message":"8233530: gcc 5.4 build warning -Wc++14-compat after JDK-8233359\n\nReviewed-by: dholmes, goetz"},"files":[],"sha":"1be39aa9c71398f784d411465904171c9df996fe"},{"commit":{"message":"8233081: C1: PatchingStub for field access copies too much\n\nReviewed-by: thartmann, dlong"},"files":[],"sha":"c15dfbfd6001240977ccc41722ec53dc32de66ac"},{"commit":{"message":"8232896: ZGC: Enable C2 clone intrinsic\n\nReviewed-by: pliden, kvn"},"files":[],"sha":"3ca7e3f6ff42c98b9ffa0fde429990d8acf95d15"},{"commit":{"message":"8232880: Update test documentation with additional settings for client UI tooltip tests\n\nReviewed-by: aivanov, serb, ihse"},"files":[],"sha":"55f7c48828d30d760dfd0baf4a0da9faf830a4a4"},{"commit":{"message":"8233574: Shenandoah: build is broken without jfr\n\nReviewed-by: rkennke, shade"},"files":[],"sha":"3762eb00f059700aa3090861638b7bfb84b3b7ad"},{"commit":{"message":"8233495: Some fieldDescriptor methods can pass existing constantPoolHandle\n\nReviewed-by: lfoltan, coleenp"},"files":[],"sha":"dd8e82f46ebd19b0ad005a9b76debd03ad8d2903"},{"commit":{"message":"8233494: Avoid calling MallocTracker::record_malloc and record_free when NMT is off\n\nReviewed-by: mdoerr, zgu"},"files":[],"sha":"af729c390c450414dc4b3daff7e46305be8ee959"},{"commit":{"message":"8233429: Minimal and zero VM build broken after JDK-8227003\n\nCo-authored-by: Igor Veresov <igor.veresov@oracle.com>\nReviewed-by: iveresov, shade, thartmann"},"files":[],"sha":"9f62f4586d0a9e60a19b66ef455158f5d6987012"},{"commit":{"message":"8233019: java.lang.Class.isPrimitive() (C1) returns wrong result if Klass* is aligned to 32bit\n\nReviewed-by: mdoerr, dlong, aph"},"files":[],"sha":"13cc1154f0ff3009b7ce16ec7a08b89a406da8d7"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"55c0ee5dcbe4022ff354ad01ddc3952e8e807df8"},{"commit":{"message":"8232273: Add support for shared memory segments\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"}],"sha":"e1007374efe28b04d9a9b73e22e55f4b0e57a490"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"ca1d10dd7eeaa1f525480ffc0cb621b006a1df70"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"1d3e932ddaf0548d75497b1718c3086036bf1a7b"},{"commit":{"message":"Merge"},"files":[],"sha":"be6d55c178bfc81be9238853a089f0cae5151cbb"},{"commit":{"message":"8231402: layout API implementation is not constant enough\n\nReviewed-by: jvernee"},"files":[],"sha":"880c9c64eafdbb53b0b855fcc59e0219ff564525"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"4185a496ecd34884b9f6adab28d1c417d74fa06b"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"8aaa8a7d29b0d2146051438b7e1dee9780213e71"},{"commit":{"message":"8231162: JVMTI RawMonitorWait triggers assertion failure: Only JavaThreads can be interruptible\n\nReviewed-by: dcubed"},"files":[],"sha":"8a2c4975d5f5c1c009fc7bf4e7e9c431bbea1e91"},{"commit":{"message":"8066774: Rename the annotations arrays names in ClassFileParser\n\nReviewed-by: shade, coleenp, dholmes"},"files":[],"sha":"14cc870429bb74ea1e290e1ffd13c0a0db1996e4"},{"commit":{"message":"8186825: some memory leak issues in the transport_startTransport\n\nReviewed-by: sspitsyn, phh"},"files":[],"sha":"0edf6c13416f6ed755783356189233be88e7d060"},{"commit":{"message":"8231087: Shenandoah: Self-fixing load reference barriers for C1\/C2\n\nReviewed-by: shade"},"files":[],"sha":"9516e6d2fd8ebc3bb99b9c8ac2034f3cae2e5573"},{"commit":{"message":"8231086: Shenandoah: Stronger invariant for object-arraycopy\n\nReviewed-by: shade"},"files":[],"sha":"9510e7fe5d47e2c38c23204552f68fc53bdcad87"},{"commit":{"message":"8231085: C2\/GC: Better GC-interface for expanding clone\n\nReviewed-by: eosterlund"},"files":[],"sha":"5eb643144be5c423ef538361068e354707bbfa22"},{"commit":{"message":"Merge"},"files":[],"sha":"b9cd2cecaacab37d46ff346430dbe6be9a0aa358"},{"commit":{"message":"Added tag jdk-13-ga for changeset 9c250a7600e1"},"files":[],"sha":"dcd4014cd8a6f49a564cbb95387ad01a80a20bed"},{"commit":{"message":"8231145: [Graal] org.graalvm.compiler.debug.test.DebugContextTest fails because DebugContextTest.testLogging.input is not available\n\nReviewed-by: erikj, iveresov, ihse"},"files":[],"sha":"f482d3071c4b68e5e1c296deb58b646dfbd11638"},{"commit":{"message":"8231176: Test tools\/javac\/options\/BCPOrSystemNotSpecified.java broken on Windows\n\nTemporarily disabling BCPOrSystemNotSpecified.java test on Windows.\n\nReviewed-by: vromero"},"files":[],"sha":"a88d08457580eb113fbca0313917ecdca016c2b7"},{"commit":{"message":"8207266: ThreadMXBean::getThreadAllocatedBytes() can be quicker for self thread\n\nAdd com.sun.management.getCurrentThreadAllocatedBytes, implement getThreadAllocatedBytes(long) independent of getThreadAllocatedBytes(long[])\n\nReviewed-by: mchung, dholmes, sspitsyn"},"files":[],"sha":"aa318d070e53b85c46204bbb4e105a12aa047013"},{"commit":{"message":"8228460: bootstrap class path not set in conjunction with -source 11\n\nEnsuring implicit system module path is checked for the no-bootclasspath warning for -source >= 9.\n\nReviewed-by: vromero"},"files":[],"sha":"a51a8527e7b0c201563d6417e51a57c95b0859a6"},{"commit":{"message":"8228482: fix xlc16\/xlclang comparison of distinct pointer types and string literal conversion warnings\n\nReviewed-by: clanger, mdoerr"},"files":[],"sha":"b9e177677cf55822898ab141bea015c6fc60b54c"},{"commit":{"message":"8231027: Correct typos\n\nReviewed-by: lancea, dholmes, erikj"},"files":[],"sha":"f8a875bfce3b6fbb6ed685c4edc4b5e2aaba64e5"},{"commit":{"message":"8230424: Use platform independent code for Thread.interrupt support\n8231094: os::sleep in assert message should be changed to JavaThread::sleep\n\nReviewed-by: rehn, dcubed"},"files":[],"sha":"5bca86f9f46b65060b220e7e7a3322bf20f94c1d"},{"commit":{"message":"8231024: Improve the debug info when the output is truncated\n\nReviewed-by: iklam, dholmes"},"files":[],"sha":"f94f7f2212587a1888a1ae34bdfc00ba059e31c0"},{"commit":{"message":"8230870: (zipfs) Add a ZIP FS test that is similar to test\/jdk\/java\/util\/zip\/EntryCount64k.java\n\nReviewed-by: clanger, martin"},"files":[],"sha":"f21fb3e433b100cabfd263cb13523beffa123bee"},{"commit":{"message":"8231124: Missing closedir call with JDK-8223490\n\nReviewed-by: naoto"},"files":[],"sha":"b59950bc4958ee4cb860e971c818b6d22997363c"},{"commit":{"message":"8230350: Shenandoah: Assertion failed when GC is cancelled by a worker thread\n\nReviewed-by: rkennke"},"files":[],"sha":"f88c32f6f6a05daedf48e6ba44e4928a802ee9f4"},{"commit":{"message":"8230943: False deadlock detection with -XX:+CIPrintCompileQueue after JDK-8163511\n\nReviewed-by: dholmes, thartmann"},"files":[],"sha":"4fb41f2617215b1dffdd555eabe1456b3ea57441"},{"commit":{"message":"8223490: Optimize search algorithm for determining default time zone\n\nReviewed-by: naoto, rriggs"},"files":[],"sha":"788b2414c169e1c96ff91e5dcdbbc0d21b64dd73"},{"commit":{"message":"8231051: Remove check_obj_alignment() and replace with is_object_aligned()\n\nReviewed-by: tschatzl, shade"},"files":[],"sha":"89b0250e4a04c7cb947aea809c1dac19ee35f631"},{"commit":{"message":"8230841: Remove oopDesc::equals()\n\nReviewed-by: rkennke, tschatzl"},"files":[],"sha":"2d6874b861270ea67322d5976a30202bdb6adb1c"},{"commit":{"message":"8230808: Remove Access::equals()\n\nReviewed-by: tschatzl, shade"},"files":[],"sha":"cb50d3b4f3c3cb85a5312fdf20a3229b88302f53"},{"commit":{"message":"8230796: Remove BarrierSet::oop_equals_operator_allowed()\n\nReviewed-by: tschatzl, shade"},"files":[],"sha":"0848c76a66e00b3b60c706471386a796147df338"},{"commit":{"message":"8230900: missing ReleaseStringUTFChars in java.desktop native code\n\nReviewed-by: clanger, prr"},"files":[],"sha":"c6543f1a2a41fb33f51ec98df886193580777f1f"},{"commit":{"message":"8230901: missing ReleaseStringUTFChars in serviceability native code\n\nReviewed-by: stuefe, sspitsyn"},"files":[],"sha":"f808d8a0ce4dbb35e0babfe7eba5ae74d7845e80"},{"commit":{"message":"8230742: Make AggressiveUnboxing a diagnostic flag\n\nAggressiveUnboxing is enabled by default. It should therefore be a diagnostic flag.\n\nReviewed-by: roland, shade"},"files":[],"sha":"2df5ae8220cdfb44ac4c6770267b26ff5dd2c86d"},{"commit":{"message":"8230854: Cleanup SuppressWarnings in test lib and remove noisy traces in StreamPumper\n\nReviewed-by: stuefe, dholmes"},"files":[],"sha":"75e8b6ed4b767ad8e4ea5a313ddcceefed6513ae"},{"commit":{"message":"8230850: Test sun\/tools\/jcmd\/TestProcessHelper.java fails intermittently\n\nReviewed-by: stuefe, cjplummer, sgehwolf"},"files":[],"sha":"2f5ce4c6cd847586035f8e0bc99baccb01cd8c58"},{"commit":{"message":"8231033: Problemlist ReservedStackTest\n8231034: ProblemList failing ThreadMXBean tests\n\nReviewed-by: darcy"},"files":[],"sha":"c2cbaa69d504108558490cb037935a6e5f920cdc"},{"commit":{"message":"8230882: Use @index in javax.lang.model javadoc\n\nReviewed-by: jjg"},"files":[],"sha":"b6cc5abdf7f2782a91da747811e5e8125bee34b4"},{"commit":{"message":"8230910: libsspi_bridge does not build on Windows 32bit\n\nReviewed-by: alanb, weijun"},"files":[],"sha":"dcbc28790d1b68fa9921b618de622ca0d02962e2"},{"commit":{"message":"8216354: Syntax error in toolchain_windows.m4\n\nReviewed-by: erikj, dholmes, clanger"},"files":[],"sha":"db2c6cc90d939385e0e361bd198929dc42b893f0"},{"commit":{"message":"8225490: Miscellaneous changes imported from jsr166 CVS 2019-09\n\nReviewed-by: martin, alanb"},"files":[],"sha":"eb1eadb69fa0df2f7299425ff37a5fb6f718162d"},{"commit":{"message":"8145138: CyclicBarrier\/Basic.java failed with \"3 not equal to 4\"\n\nReviewed-by: martin, alanb"},"files":[],"sha":"9275097a0239ae73fc071e435d908b37b18eb1bd"},{"commit":{"message":"8221168: java\/util\/concurrent\/CountDownLatch\/Basic.java fails\n\nReviewed-by: martin, alanb"},"files":[],"sha":"064f69d6ab6e76ad5dff1fde285524ac10febc80"},{"commit":{"message":"8227235: rare failures in testForkHelpQuiesce tck tests\n\nReviewed-by: martin, alanb"},"files":[],"sha":"f634f777f6f83db4bf76d1a75f72fdcf3da6c720"},{"commit":{"message":"8229442: AQS and lock classes refresh\n\nReviewed-by: martin"},"files":[],"sha":"80fe274875a084794ccafcd00696586e384255b1"},{"commit":{"message":"8231025: Incorrect method tag offset for big endian platform\n\nReviewed-by: egahlin"},"files":[],"sha":"dbc8df3b97aae772399b3a8a2a8c3f306f65dd9e"},{"commit":{"message":"8225797: OldObjectSample event creates unexpected amount of checkpoint data\n\nReviewed-by: egahlin"},"files":[],"sha":"0f2eb3ad856b2674f1531eed2a0ebb5e5e162cf2"},{"commit":{"message":"8230085: (fs) FileStore::isReadOnly is always true on macOS Catalina\n\nReviewed-by: alanb"},"files":[],"sha":"c57ad7ffc016bb62ef13937d1568f44f0a189cd9"},{"commit":{"message":"8230938: Deprecate MonitorBound\n\nReviewed-by: dholmes"},"files":[],"sha":"c0e1f9ee6c529e287818171f5104704b26f2024b"},{"commit":{"message":"8230937: Update bugid in ProblemList for vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001.java\n\nReviewed-by: dholmes, mchung"},"files":[],"sha":"5c3cc74c83ba94b6e48f58b1b58eeec21e8b7359"},{"commit":{"message":"8230881: serviceability\/sa\/TestJmapCore tests fail with java.lang.RuntimeException: Could not find dump file\n\nReviewed-by: dholmes, cjplummer"},"files":[],"sha":"9597fcd85feae4014c41979e44a26326698ad30d"},{"commit":{"message":"8151678: com\/sun\/jndi\/ldap\/LdapTimeoutTest.java failed due to timeout on DeadServerNoTimeoutTest is incorrect\n\nReviewed-by: dfuchs, martin, robm"},"files":[],"sha":"49a4d4b87ecf56d44b644df65f9a2a2c74f922f3"},{"commit":{"message":"8230878: ZGC: Use THREAD_LOCAL instead of __thread\n\nReviewed-by: kbarrett"},"files":[],"sha":"17abb078fc36a500174c6eb7ddddf5ef209283d2"},{"commit":{"message":"8230877: Rename THREAD_LOCAL_DECL to THREAD_LOCAL\n\nReviewed-by: kbarrett, dholmes"},"files":[],"sha":"f3d8d57cd39c4bd2b8a4972e885b5874800b047f"},{"commit":{"message":"8230846: ZGC: Make ZUtils::alloc_aligned() posix-specific\n\nReviewed-by: stefank"},"files":[],"sha":"39fd81e4a73b82341e52d2a3a6f6d29ea7480e11"},{"commit":{"message":"8230845: ZGC: Implement ZLock using os::PlatformMutex\n\nReviewed-by: stefank"},"files":[],"sha":"334c609caf84f23b5fbfb835abe07a8b93c30886"},{"commit":{"message":"8230829: Matcher matches a surrogate pair that crosses border of the region\n\nReviewed-by: naoto"},"files":[],"sha":"5e7e0e7bbe794e34bc628f921054d17813e0e2dd"},{"commit":{"message":"8186988: use log_warning() and log_error() instead of tty->print_cr for CDS warning and error messages\n\nReviewed-by: stuefe, iklam, dholmes"},"files":[],"sha":"e8ee2800f5bc66016bf73dc0d367c03522c4df14"},{"commit":{"message":"8230858: Replace wildcard address with loopback or local host in tests - part 23\n\nAdd new traces for better diagnosis, refrain binding to the wildcard address when possible.\n\nReviewed-by: chegar, xuelei"},"files":[],"sha":"e9eaba3d538fcd2d8b5642f227433d69faef2552"},{"commit":{"message":"8230470: Shenandoah doesn't need change from JDK-8212610 anymore\n\nReviewed-by: thartmann"},"files":[],"sha":"9b81fe37f2cad09a54e401f937c513f97659e012"},{"commit":{"message":"8230888: jfrVirtualMemory.cpp should include globals.hpp\n\nReviewed-by: dholmes, mgronlun"},"files":[],"sha":"88d59bc878f34634c315b7ae2d1b49fe0898d71d"},{"commit":{"message":"8220416: Comparison of klass pointers is not optimized any more\n\nEnables dead klass pointer optimization (since JDK-6964458) again.\n\nReviewed-by: roland, thartmann"},"files":[],"sha":"316985c85c9a2ba96016ceb7fab192ce0e8d5d6a"},{"commit":{"message":"8230762: Change MacroAssembler::debug32\/64 to use fatal instead of assert\n\nAlways call fatal from debug32\/64 to also crash in product build as a follow-up to JDK-8225653.\n\nReviewed-by: roland, thartmann"},"files":[],"sha":"9c145fa1cdaf13220e7416c66975c1f168f818d3"},{"commit":{"message":"8229701: aarch64: C2 OSR compilation fails with \"shouldn't process one node several times\" in final graph reshaping\n\nReviewed-by: thartmann, kvn"},"files":[],"sha":"ec5451c117ab7170afa23041b489ef16f952a908"},{"commit":{"message":"8230856: Java_java_net_NetworkInterface_getByName0 on unix misses ReleaseStringUTFChars in early return\n\nReviewed-by: dfuchs, stuefe, vtewari"},"files":[],"sha":"af94e6e681cc7f41c904dd21ae2909af73321189"},{"commit":{"message":"8230861: missing ReleaseStringUTFChars in Java_sun_security_pkcs11_wrapper_PKCS11_connect\n\nReviewed-by: alanb, stuefe"},"files":[],"sha":"2f496251acc8f11a152c96a8da4a6bb433bbf7bf"},{"commit":{"message":"8230586: Encapsulate fields in filemap.hpp\n\nReviewed-by: ccheung"},"files":[],"sha":"988ac4fec079583f5a987d82610e2e5fca470774"},{"commit":{"message":"8230423: Move os::sleep to JavaThread::sleep\n\nReviewed-by: rehn, dcubed"},"files":[],"sha":"99252bd9d6c3d6129c2ec3ce3a0e39c5e843e41f"},{"commit":{"message":"Added tag jdk-14+14 for changeset cddef3bde924"},"files":[],"sha":"091cf3608b3facf932ae53fa747370197e0f3c9a"},{"commit":{"message":"8230830: No required ResourceMark in src\/hotspot\/share\/prims\/jvmtiImpl.cpp:JvmtiSuspendControl::print()\n\nReviewed-by: dholmes, cjplummer, sspitsyn"},"files":[],"sha":"27cb3414969c315fba2fff2c35f227a6119add72"},{"commit":{"message":"8229378: jdwp library loader in linker_md.c quietly truncates on buffer overflow\n\nCheck buffer overflow when the jdwp agent full dll name is built\n\nReviewed-by: cjplummer, sspitsyn"},"files":[],"sha":"d57af047374f29e96ebe78de165a0dd8c6a41d03"},{"commit":{"message":"8230734: Remove default constructors from java.compiler\n\nReviewed-by: jjg"},"files":[],"sha":"a8ea6b279afda515ddca89fbe944cb6e772f1d80"},{"commit":{"message":"Manual merge with default"},"files":[],"sha":"26a6509d2454eeaf9d4f6eb1734f155d1140b676"},{"commit":{"message":"8230674: Heap dumps should exclude dormant CDS archived objects of unloaded classes\n\nReviewed-by: dholmes, jiangli"},"files":[],"sha":"e90970b67bb3cd1980ac873b0c9465e53f494e37"},{"commit":{"message":"8230342: LineNumberReader.getLineNumber() returns inconsistent results after EOF\n\nReviewed-by: rriggs, dfuchs"},"files":[],"sha":"4285853d91e2d49e817975524a80bf46aad9e466"},{"commit":{"message":"8192057: com\/sun\/jdi\/BadHandshakeTest.java fails with java.net.ConnectException\n\nReviewed-by: sspitsyn, rrich"},"files":[],"sha":"c920b4a5c0258dde6e4d4f25ce575138374e5e9d"},{"commit":{"message":"8229202: Docker reporting causes secondary crashes in error handling\n\nReviewed-by: coleenp, hseigel, mseledtsov"},"files":[],"sha":"591c4f80f1baa0bd1034243287567aaa589f8fb9"},{"commit":{"message":"8230136: DateTimeFormatterBuilder.FractionPrinterParser#parse fails to verify minWidth\n\nReviewed-by: joehw, scolebourne, rriggs"},"files":[],"sha":"ee9bd9bf041cc4d33d65280c1a83a12ed557741d"},{"commit":{"message":"8230398: Remove NULL checks before FREE_C_HEAP_ARRAY\n\nReviewed-by: dholmes, kbarrett, tschatzl"},"files":[],"sha":"4b6f9ed07f87325ac4dd4d43d672ca5d5ee277c6"},{"commit":{"message":"8227168: Cleanup usage of NEW_C_HEAP_ARRAY\n\nReviewed-by: coleenp, dholmes, kbarrett, tschatzl"},"files":[],"sha":"eafb888c18827ea8239528e029f2f0c15ef04547"},{"commit":{"message":"8230794: Improve assert to get more information about the JDK-8227695 failure\n\nReviewed-by: kbarrett, sjohanss"},"files":[],"sha":"a73f96ef609acb99a9507254361d67dc65fdb156"},{"commit":{"message":"8229960: Remove sun.nio.cs.map system property\n\nReviewed-by: alanb"},"files":[],"sha":"28b972e5ce652372fb2c2fef23d976148d4bcf51"},{"commit":{"message":"8230813: Add JDK-8010500 to compiler\/loopopts\/superword\/TestFuzzPreLoop.java bug list\n\nReviewed-by: zgu"},"files":[],"sha":"7c2fe7025bb7a0470ce106f54d5a015e12aa2776"},{"commit":{"message":"8229785: MethodType::fromMethodDescriptorString should require security permission if loader is null\n\nReviewed-by: vromero"},"files":[],"sha":"5d397eea9f6e389da6488bc3021657822d44f643"},{"commit":{"message":"8225761: Update --release 13 symbol information after JDK 13 GA\n\nReviewed-by: jlahoda"},"files":[],"sha":"5dc5bc881a9aaba2be05a86723bdc8304023f1ee"},{"commit":{"message":"8230781: Add JTREG_FAILURE_HANDLER_TIMEOUT to control timeout handler timeout\n\nReviewed-by: erikj"},"files":[],"sha":"fb70acd2ca6275b9a76f30d378c5e78b2de50197"},{"commit":{"message":"8230303: JDB hangs when running monitor command\n\nReviewed-by: sspitsyn"},"files":[],"sha":"9898fc138237a39432d647cb66b7ff3c4c83eeaa"},{"commit":{"message":"8230709: Array index out of bounds in ES6 mode\n\nReviewed-by: attila"},"files":[],"sha":"1a81892aa68b1e967e7906cc3dda6fd3a36e9dbe"},{"commit":{"message":"8230766: Changed message in IllegalMonitorStateException\n\nReviewed-by: attila, jlaskey"},"files":[],"sha":"c49ed302bbbcab63767f58aac12ce70cd63eb6b4"},{"commit":{"message":"8230566: ZGC: Don't substitute klass pointer during array clearing\n\nReviewed-by: stefank, eosterlund"},"files":[],"sha":"24ed3d4eefeea60ec2bec60d6e17911cc2cfd511"},{"commit":{"message":"8230769: BufImg_SetupICM add ReleasePrimitiveArrayCritical call in early return\n\nReviewed-by: prr, stuefe"},"files":[],"sha":"7ecde2ec48056051a15ca0db620fa1b7fce6de0f"},{"commit":{"message":"8230711: ConnectionGraph::unique_java_object(Node* N) return NULL if n is not in the CG\n\nReviewed-by: mdoerr"},"files":[],"sha":"36768f2a725f766b4779112859e432160bd4893b"},{"commit":{"message":"8230454: [Graal] Add \"com\/sun\/crypto\/provider\/KeyFactory\/TestProviderLeak.java\" to Graal problem list\n\nReviewed-by: dlong"},"files":[],"sha":"0a5346041963323c4f0dfcaaf0131cfc6aea28c6"},{"commit":{"message":"8225653: Provide more information when hitting SIGILL from HaltNode\n\nAdd information string for each HaltNode which is printed if hit at runtime.\n\nReviewed-by: vlivanov, thartmann"},"files":[],"sha":"2c3973af9ba453bc67c225760afc7162d9dae184"},{"commit":{"message":"8207800: always_do_update_barrier is unused\n\nReviewed-by: shade, tschatzl"},"files":[],"sha":"51b0eab33031edcf0286a72f760bb702a62a9caa"},{"commit":{"message":"8221361: Eliminate two-phase initialization for PtrQueueSet classes\n\nMove allocator and CBL monitor init to constructor.\n\nReviewed-by: tschatzl, shade"},"files":[],"sha":"8b67b75f5001bf43bf63484279633909e106ec40"},{"commit":{"message":"8230284: Accounting currency format support does not cope with explicit number system\n\nReviewed-by: rriggs"},"files":[],"sha":"ea0fbbca51318f5090daf4fd6217139c3e4ab4f8"},{"commit":{"message":"8230516: invalid html in jdwp-protocol.html\n\nReviewed-by: dtitov, sspitsyn"},"files":[],"sha":"6794a686819554742ec906bbbc749a9241f7e452"},{"commit":{"message":"8212117: Class.forName may return a reference to a loaded but not linked Class\n\nReviewed-by: dholmes, mchung"},"files":[],"sha":"a4613d4a8f3f177a55458556c5af7c682727eefc"},{"commit":{"message":"8230526: jdk.internal.net.http.PlainProxyConnection is never reused by HttpClient\n\nFixed the PlainProxyConnection lookup key.\n\nReviewed-by: chegar"},"files":[],"sha":"10e4fd4b95ebbf62d450d7a35ccf90dfe481ab71"},{"commit":{"message":"8230723: Remove default constructors from java.lang and java.io\n\nReviewed-by: bpb, rriggs"},"files":[],"sha":"10f1f10f2effff3ecd83138fb66f8028cc4c80ea"},{"commit":{"message":"8177389: Hyphen \"-\" should be removed in URL class documentation\n\nJavadoc of java.net.URL constructor updated to remove an unnecessary hyphen\n\nReviewed-by: dfuchs"},"files":[],"sha":"c84e19f3ca286386493915763bf4ad05370cb7b2"},{"commit":{"message":"8230132: java\/net\/NetworkInterface\/NetworkInterfaceRetrievalTests.java to skip Teredo Tunneling Pseudo-Interface\n\nThe test is updated to skip Teredo pseudo interfaces on windows.\n\nReviewed-by: michaelm, vtewari, aefimov"},"files":[],"sha":"1f87cb017ffb0a53c6a017b65b123ef568b8b2e7"},{"commit":{"message":"8230669: [s390] C1: assert(is_bound() || is_unused()) failed: Label was never bound to a location, but it was used as a jmp target\n\nReviewed-by: phh, xliu"},"files":[],"sha":"032819ee9d53b10a4118f845b2ce5bee7225634a"},{"commit":{"message":"8230708: Hotspot fails to build on linux-sparc with gcc-9\n\nReviewed-by: dholmes, phh"},"files":[],"sha":"5f29e88563de8fa38109489a11fb6a465f604d66"},{"commit":{"message":"8230564: Remove os_ext.hpp\n\nReviewed-by: coleenp, dholmes"},"files":[],"sha":"014535bd794c0fd0c3f28fd9c3c442cb21fca187"},{"commit":{"message":"8230563: Remove arguments_ext.cpp\n\nReviewed-by: dholmes, coleenp"},"files":[],"sha":"4db6ba164888511cc561556d9029d3ea0744a0d0"},{"commit":{"message":"8230562: Remove g1HeapSizingPolicy_ext.cpp\n\nReviewed-by: dholmes, sjohanss"},"files":[],"sha":"57514a065a8267d2654599b5e71e329654f47f53"},{"commit":{"message":"8230561: Remove logTag_ext.hpp\n\nReviewed-by: dholmes, coleenp"},"files":[],"sha":"539a59fa4f2cad924cab8cb3653dc97f5154dfee"},{"commit":{"message":"8224599: Remove globals_ext.hpp\n\nReviewed-by: coleenp, kvn, gziemski, ehelin"},"files":[],"sha":"7384f6cdcfbab70751c49672fb4bb6d6a671389e"},{"commit":{"message":"8228758: assert(_no_handle_mark_nesting == 0) failed: allocating handle inside NoHandleMark\n\nReviewed-by: coleenp, dcubed, dholmes"},"files":[],"sha":"ffa889731a54addfd38e4e166cde6ae34c28047d"},{"commit":{"message":"8230129: Add jtreg \"serviceability\/sa\/ClhsdbInspect.java\" to graal problem list\n\nReviewed-by: dlong, thartmann"},"files":[],"sha":"de87e8e86038021de1dc296fa8cf99c4c7d8692f"},{"commit":{"message":"8230422: Convert uninterruptible os::sleep calls to os::naked_short_sleep\n\nReviewed-by: kbarrett, dcubed, shade"},"files":[],"sha":"394d6ac55b1f59265c6522fee324f76517ed5a96"},{"commit":{"message":"8226953: AOT: assert(oopDesc::is_oop(obj)) failed: not an oop\n\nReviewed-by: dlong"},"files":[],"sha":"f9e0cdbed9b31594e9253b9886f77d32903edb0a"},{"commit":{"message":"8230730: UseCompressedOops test crash with assertion failure\n\nReviewed-by: stefank, eosterlund"},"files":[],"sha":"ecf83c94b8c7c5dcaa43dc960085887bee9e7d77"},{"commit":{"message":"8230662: Remove dead code from MethodTypeForm\n\nReviewed-by: vlivanov, mchung"},"files":[],"sha":"c788d9841cf7f3148ad181454662dc735762953f"},{"commit":{"message":"8230715: Baseline compare build on Windows fails intermittently in file type for jvm.pdb\n\nReviewed-by: mikael"},"files":[],"sha":"9c3ff105df8781b8f53e52ae0816fec15ef2654a"},{"commit":{"message":"8230680: latest Graal unittests depend on jdk.internal.module\n\nReviewed-by: iignatyev"},"files":[],"sha":"cc6d60db4fd756a441772f29652576df2ca142ab"},{"commit":{"message":"8230404: Refactor logged card refinement support in G1DirtyCardQueueSet\n\nSeparate concurrent refinement from STW refinement.\n\nReviewed-by: sjohanss, tschatzl"},"files":[],"sha":"40565a845c35e608f7273a1c6097e2a88ca30280"},{"commit":{"message":"8230666: Exclude serviceability\/sa\/TestInstanceKlassSize.java on linuxppc64 and linuxppc64le\n\nReviewed-by: dcubed"},"files":[],"sha":"c159a4e0f29f2f6c44667d21145378f199a85676"},{"commit":{"message":"8230694: http.keepAlive system property is inconsistently\/incorrectly documented\n\nTrivially fixed the net-properties.html file\n\nReviewed-by: alanb"},"files":[],"sha":"5399449a43a52829806046b9f6a6b05bc82342a1"},{"commit":{"message":"8230363: C2: Let ConnectionGraph::not_global_escape(Node* n) return false if n is not in the CG\n\nReviewed-by: thartmann, mdoerr"},"files":[],"sha":"d7ca08a5cc64c8d3941493d98423a49b5bc1b922"},{"commit":{"message":"8230671: x86_32 build failures after JDK-8229496\n\nReviewed-by: thartmann"},"files":[],"sha":"c417c473a419ad35ba359fe6b809e26631aab5fc"},{"commit":{"message":"8229831: Upgrade Character.isUnicodeIdentifierStart\/Part() methods to the latest standard\n\nReviewed-by: rriggs"},"files":[],"sha":"2aac0e925dfeff98da4ff0e2de5e939aefaa3bc6"},{"commit":{"message":"8187898: PrintStream should override FilterOutputStream#write(byte[]) with a method that has no throws clause\n\nReviewed-by: alanb, rriggs, lancea, darcy"},"files":[],"sha":"4d70cdac4f03723eee97f1157cb031a88d182eb1"},{"commit":{"message":"8230681: Add @since tag to java.io.Serial\n\nReviewed-by: lancea, bpb"},"files":[],"sha":"cebd13dbaab5bc44eb422aeec1a3a3e2822ea6b2"},{"commit":{"message":"8227563: jvmti\/scenarios\/contention\/TC05\/tc05t001 fails due to \"ERROR: tc05t001.cpp, 278: (waitedThreadCpuTime - waitThreadCpuTime) < (EXPECTED_ACCURACY * 1000000)\"\n\nReviewed-by: amenkov, cjplummer, sspitsyn"},"files":[],"sha":"8b42387ea6212027e7db25175feff078696a91ef"},{"commit":{"message":"8229280: Test failures on several linux hosts after JDK-8181493\n\nReviewed-by: alanb, clanger, dfuchs"},"files":[],"sha":"d2db14b83641a6b161db26d2f751b220fc3d271e"},{"commit":{"message":"8230632: [TESTBUG] appcds\/NonExistClasspath.java and ClassPathAttr.java failed when running in hotspot_appcds_dynamic test group\n\nExclude NonExistClasspath.java from the test group; increase timeout for ClassPathAttr.java.\n\nReviewed-by: dcubed, iklam"},"files":[],"sha":"a1002d68fcc126c71b6f11c0595a500b9e177785"},{"commit":{"message":"8228854: Default ErrorListener reports warnings and errors to the console\n\nReviewed-by: lancea"},"files":[],"sha":"77b3801f6c787cd7db563bcf39d7dfad224dfea9"},{"commit":{"message":"8230646: Epsilon does not extend TLABs to max size\n\nReviewed-by: tschatzl, zgu"},"files":[],"sha":"675eecaacf37b5b1f451b735b5e72941f6caf1f0"},{"commit":{"message":"8229496: SIGFPE (division by zero) in C2 OSR compiled method\n\nAdding a CastNode to keep the dependency between the div\/mod operation and the zero check.\n\nReviewed-by: roland, mdoerr"},"files":[],"sha":"a4b46ccc234dce3601afcab4dedf0579cfc4f4c7"},{"commit":{"message":"8177068: incomplete classpath causes NPE in Flow\n\nUndo completions that failed during speculative attribution, so that the appropriate CompletionFailures are thrown again and properly reported.\n\nReviewed-by: vromero"},"files":[],"sha":"2fa3eddd3c5dd0957f5e3e955460b5181994c8b4"},{"commit":{"message":"8230466: check malloc\/calloc results in jdk.hotspot.agent\n\nReviewed-by: cjplummer, ysuenaga, sspitsyn"},"files":[],"sha":"5c4be9cc8a24e0f1470230934a9824742ae50797"},{"commit":{"message":"8230642: 8224815 broke Shenandoah build\n\nReviewed-by: shade"},"files":[],"sha":"4b65e2b3db984ea266d6262efa15fc9c50d0ba1a"},{"commit":{"message":"8224815: Remove non-GC uses of CollectedHeap::is_in_reserved()\n\nReviewed-by: stefank, coleenp"},"files":[],"sha":"f869706f5f6c424f7c617a2eabfe30ff21a7ad1c"},{"commit":{"message":"8229189: Improve JFR leak profiler tracing to deal with discontiguous heaps\n\nReviewed-by: mgronlun, egahlin"},"files":[],"sha":"d19e6eae9e5735bd848f04eaa701ab730af3688d"},{"commit":{"message":"8228967: Trust\/Key store and SSL context utilities for tests\n\nReviewed-by: xuelei"},"files":[],"sha":"655cf14138d78931af7d9098e70efe8f872ebae9"},{"commit":{"message":"Added tag jdk-14+13 for changeset fbbe6672ae15"},"files":[],"sha":"cc268aa7a4c8703c30f4e5d8f3f6a62b777c8ac6"},{"commit":{"message":"8230626: Make UnknownFooException strings more informative\n\nReviewed-by: jjg, mr"},"files":[],"sha":"7004b3f3e76df3505a27c9bdfd10768d317925c1"},{"commit":{"message":"8230624: [TESTBUG] Problemlist JFR compiler\/TestCodeSweeper.java\n\nAdded the test to the problem list\n\nReviewed-by: egahlin"},"files":[],"sha":"39465f49eb4d3f955a75864ccb2d1ee6d0415b7d"},{"commit":{"message":"8230435: Replace wildcard address with loopback or local host in tests - part 22\n\nFixes tests to use the loopback address whenever possible. It also fixes some safe publishing issues, or add diagnostics in some of the tests.\n\nReviewed-by: michaelm"},"files":[],"sha":"f71db3074c44c554b600c506adaa5b145edf4420"},{"commit":{"message":"8171405: java\/net\/URLConnection\/ResendPostBody.java failed with \"Error while cleaning up threads after test\"\n\nTest cleaned up to improve safe termination\n\nReviewed-by: michaelm, vtewari, dfuchs"},"files":[],"sha":"7b49c40ee96cb5fc78071cd87c7c4edcd50417b3"},{"commit":{"message":"8230159: Add test to verify that com.sun.net.httpserver.BasicAuthenticator constructors throw expected exceptions\n\nNew BasicAuthenticatorExceptionCheck.java test added\n\nReviewed-by: chegar, dfuchs, vtewari"},"files":[],"sha":"662348c71061d71d3cbe47dbae3547fa4a78c7ee"},{"commit":{"message":"8229450: C2 compilation fails with assert(found_sfpt) failed\n\nReviewed-by: roland, thartmann"},"files":[],"sha":"0a92dc786d1e5f3162067154beec8f079437f4f7"},{"commit":{"message":"8230401: ClassLoaderData::_keep_alive is read with wrong type in c2i entry barrier\n\nReviewed-by: zgu, tschatzl, iklam"},"files":[],"sha":"ea436110f6cecf3a056a2020640db65a56c1db3e"},{"commit":{"message":"8230434: [C1, C2] Release barrier for volatile field stores in constructors implemented inconsistently\n\nReviewed-by: shade, lucy"},"files":[],"sha":"b0e727124f012af6da934ba65dfa6c8e083e78b1"},{"commit":{"message":"8209802: Garbage collectors should register JFR types themselves to avoid build errors\n\nReviewed-by: kbarrett, tschatzl"},"files":[],"sha":"f7d0ece0a177c143f08dbeee44cb823bcb3d3d0f"},{"commit":{"message":"8230431: Move G1 trace code from gcTrace* to G1 directory\n\nReviewed-by: kbarrett, lkorinth"},"files":[],"sha":"bb63558420bd31a6070ef133e5acb03003ece415"},{"commit":{"message":"8229182: runtime\/containers\/docker\/TestMemoryAwareness.java test fails on SLES12\n\nReviewed-by: clanger, mseledtsov"},"files":[],"sha":"a41b9a71acdf69b78104677a1ca899ff36293a60"},{"commit":{"message":"8230485: add handling of aix tar in configure\n\nReviewed-by: erikj"},"files":[],"sha":"7cb28198a17a2f957883908055acfe27258034d8"},{"commit":{"message":"8226221: Update PKCS11 tests to use NSS 3.46 libs\n\nReviewed-by: xuelei"},"files":[],"sha":"dfe4ba5045e351431778a431188d0912a5e305ab"},{"commit":{"message":"6313903: Thread.sleep(3) might wake up immediately on windows\n\nReviewed-by: rehn, dcubed, rriggs"},"files":[],"sha":"99c17fbf338acc43e692a49151d0f485de475356"},{"commit":{"message":"8227236: assert(singleton != __null && singleton != declared_interface) failed\n\nReviewed-by: dlong"},"files":[],"sha":"4dc79c2e054fe2edd7bf6441f0d4c87bb4e5c5e0"},{"commit":{"message":"8230483: Shenandoah: consistently disable concurrent roots for Traversal mode\n\nReviewed-by: shade"},"files":[],"sha":"fd89fedccf1b78d2af95e7d7118caf075e6bceec"},{"commit":{"message":"8223714: HTTPSetAuthenticatorTest could be made more resilient\n\nHTTPTestServer (in the test infrastructure) will no longer stop accepting requests if a previous request processing failed\n\nReviewed-by: dfuchs"},"files":[],"sha":"6b2e444aa1e9f6d2c6ade2aa1fb445805964ed85"},{"commit":{"message":"8230428: Cleanup dead CastIP node code in formssel.cpp\n\nRemoved dead code.\n\nReviewed-by: roland"},"files":[],"sha":"47e005582b493f17e9e18777c553e2bb4ad6e559"},{"commit":{"message":"Merge"},"files":[],"sha":"5ded63ef02370d700489ba17f494bc9a90a90374"},{"commit":{"message":"8227411: TestTimeMultiple.java failed \"assert(!lease()) failed: invariant\"\n\nReviewed-by: egahlin"},"files":[],"sha":"4e43486172dab9e1f69d12736c2d7cc662053d01"},{"commit":{"message":"8229437: assert(is_aligned(ref, HeapWordSize)) failed: invariant\n\nReviewed-by: egahlin"},"files":[],"sha":"8f9d63df41b8b806148984627208636a86d83543"},{"commit":{"message":"8229422: Taskqueue: Outdated selection of weak memory model platforms\n\nReviewed-by: tschatzl, dholmes, drwhite"},"files":[],"sha":"e77e5da78580751dc093306902165e0607296476"},{"commit":{"message":"8230425: Shenandoah forces +UseNUMAInterleaving even after explicitly disabled\n\nReviewed-by: rkennke"},"files":[],"sha":"c25e2fd8ec4dfee2d0d2ab354d198ec43d53ca6c"},{"commit":{"message":"8229235: com.sun.net.httpserver.HttpExchange should implement AutoCloseable\n\nReviewed-by: dfuchs, michaelm"},"files":[],"sha":"77adc77ce3da56ee27d73039e788910b1972e446"},{"commit":{"message":"8230238: Add another regression test for JDK-8134739\n\nReviewed-by: kvn"},"files":[],"sha":"5110530d5b3e2d45cad00c7bd4e90370cb5cf7e4"},{"commit":{"message":"8224214: [AIX] Remove support for legacy xlc compiler\n\nReviewed-by: erikj, kbarrett, mdoerr, dholmes"},"files":[],"sha":"b7821ad399f2e70f19eff7aca8bf8226fcc311be"},{"commit":{"message":"8230373: Use java.io.Serial in generated exception types\n\nReviewed-by: erikj, alanb"},"files":[],"sha":"2399a8d764e63145c27af17c3c3023ebdb939347"},{"commit":{"message":"8230372: Remove G1GCPhaseTimes::MergeLBProcessedBuffers\n\nRemoved no longer needed phase time.\n\nReviewed-by: sjohanss, tschatzl"},"files":[],"sha":"a72d25fcc7bb8a590f7596abac00c5190931cf54"},{"commit":{"message":"8227224: GenCollectedHeap: add subspace transitions for young gen for gc+heap=info log lines\n\nReviewed-by: kbarrett, tschatzl"},"files":[],"sha":"448e003050bca906983264f7530320fc8b1be56e"},{"commit":{"message":"8230337: Clarify intention of Elements.{getPackageOf, getModuleOf}\n\nReviewed-by: jjg"},"files":[],"sha":"f14e213524cf0acaeed70c17faaafe5ed2c544db"},{"commit":{"message":"8230327: Make G1DirtyCardQueueSet free-id init unconditional\n\nRemove conditional init and make the set an inline member.\n\nReviewed-by: sjohanss, lkorinth, tschatzl"},"files":[],"sha":"1668370dfe4e0c8d49de5668a71376b17eefe7bf"},{"commit":{"message":"8230390: Problemlist SA tests with AOT\n\nPutting tests on the problem list.\n\nReviewed-by: roland"},"files":[],"sha":"79c14f088c6620a0c2d1b25f73526b3531b11c27"},{"commit":{"message":"8193596: java\/net\/DatagramPacket\/ReuseBuf.java failed due to timeout\n\nThe test is changed to bind to InetAddress.getLocalHost() instead of binding to the wildcard.\n\nReviewed-by: alanb, dfuchs, msheppar"},"files":[],"sha":"aa5d8f64eea2ac86d8a0fb0fe495e92cba023478"},{"commit":{"message":"8230310: SocksSocketImpl should handle the IllegalArgumentException thrown by ProxySelector.select usage\n\nCatch the IAE thrown by ProxySelector.select and wrap it into a IOException\n\nReviewed-by: dfuchs"},"files":[],"sha":"6fa4babbb2082fcd269771a0926de421fc986f08"},{"commit":{"message":"8230105: -XDfind=diamond crashes\n\nAvoiding side-effects in Analyzer's speculative attribution.\n\nReviewed-by: mcimadamore, vromero"},"files":[],"sha":"1d71dd8604c9c08339992051ff94d0c86f749a64"},{"commit":{"message":"8230307: ZGC: Make zGlobals and zArguments OS agnostic\n\nReviewed-by: pliden, smonteith"},"files":[],"sha":"277ef756c4d2250047af05b3f13d8c86fe611ed4"},{"commit":{"message":"8230388: Problemlist additional compiler\/rtm tests\n\nPutting tests on the problem list.\n\nReviewed-by: roland"},"files":[],"sha":"05d4e7a26966453682f9c918b450004ee9ba6893"},{"commit":{"message":"8230004: jdk\/internal\/jimage\/JImageOpenTest.java runs no test\n\nReviewed-by: alanb"},"files":[],"sha":"647f487510e89a990dd521c8a867fe3163d276fa"},{"commit":{"message":"8230203: Replace markWord enums with typed constants\n\nReviewed-by: kbarrett, dholmes"},"files":[],"sha":"3149ed4993b2525803b7ace8b4dbdabf1208e5f1"},{"commit":{"message":"8230376: [TESTBUG] runtime\/StackTrace\/HiddenFrameTest.java fails with release VM\n\nReviewed-by: dholmes"},"files":[],"sha":"c7f0ae07cdd2862bc3ed9bfebde14edbdea428b4"},{"commit":{"message":"8229797: [JVMCI] Clean up no longer used JVMCI::dependencies_invalid value\n\nCo-authored-by: Xiaohong Gong <xiaohong.gong@arm.com>\nReviewed-by: dlong, coleenp"},"files":[],"sha":"6a48a4e5ed86d0f171a1d808293e26db729c5d2d"},{"commit":{"message":"8229997: Apply java.io.Serial annotations in java.base\n\nReviewed-by: alanb, rriggs"},"files":[],"sha":"9d764ee48ee7c2e7be7a25aee2ed7bed2fcd2000"},{"commit":{"message":"8230332: G1DirtyCardQueueSet _notify_when_complete is always true\n\nRemoved _notify_when_complete, assume true value where formerly used.\n\nReviewed-by: sjohanss, tschatzl"},"files":[],"sha":"6d064a747e3d35cc51d0b57800ea0544f0545ca3"},{"commit":{"message":"8228960: [TESTBUG] containers\/docker\/TestJcmdWithSideCar.java: jcmd reports main class as Unknown\n\nWaiting for child output to start main() before running jcmd\n\nReviewed-by: dholmes, bobv"},"files":[],"sha":"489f8027be30be42dcebdf6330ad73ed7f70a5e0"},{"commit":{"message":"8230109: G1DirtyCardQueueSet should use card counts rather than buffer counts\n\nConsistently use card counts\n\nReviewed-by: sjohanss, sangheki"},"files":[],"sha":"b6b6a37fe1b8768fefed222b3fa4de2f8a6aa8c1"},{"commit":{"message":"8230037: Confused MetaData dumped by PrintOptoAssembly\n\nReviewed-by: kvn, bsrbnd"},"files":[],"sha":"647e4d75571668c283906e2e3723073032273c78"},{"commit":{"message":"8229999: Apply java.io.Serial annotations to security types in java.base\n\nReviewed-by: rriggs, mullan"},"files":[],"sha":"6d4ef5aaf3a66eec5a54bda2371a9a34d332ba74"},{"commit":{"message":"8182119: jdk.hotspot.agent's META-INF\/services\/com.sun.jdi.connect.Connector no longer needed\n\nReviewed-by: sspitsyn, amenkov, alanb"},"files":[],"sha":"470d32df73af3723d499c7af9f95012af453d90e"},{"commit":{"message":"8229284: jdk\/internal\/platform\/cgroup\/TestCgroupMetrics.java fails for - memory:getMemoryUsage\n\nReviewed-by: mseledtsov, sgehwolf"},"files":[],"sha":"b6fac7fe07d24cc40060a2c7688a279178e750b4"},{"commit":{"message":"8229210: [TESTBUG] Move gc stress tests from JFR directory tree to gc\/stress\n\nMoved the tests\n\nReviewed-by: egahlin"},"files":[],"sha":"1bc974d8a70acae5ef5272155126c471d9e73c54"},{"commit":{"message":"8230338: Accurate error message about bad Unicode block name\n\nReviewed-by: rriggs"},"files":[],"sha":"d607548f20872d78bb9e22069cb7aa2c61ffdabb"},{"commit":{"message":"8230302: GenerateJLIClassesPlugin can generate invalid DirectMethodHandle methods\n\nReviewed-by: mchung"},"files":[],"sha":"b4c63048bb65f293b369887a35832f9984d50e95"},{"commit":{"message":"8216977: ShowHiddenFrames use in java_lang_StackTraceElement::fill_in appears broken\n\nReturn NULL source file and negative line number for hidden frames.\n\nReviewed-by: dholmes, hseigel"},"files":[],"sha":"e2287af876fe30ebcdb1de9d4e4da0784fbf20d6"},{"commit":{"message":"8230449: Simplify creation of handles for memory slices\n\nReviewed-by: jvernee"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"117f1a46b5f92d8942ea34759ceb90b9d1d6bba5"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"80d6aeb773889970c8ef48d03bd48e44b81c30a6"},{"commit":{"message":"8229181: Add support for mapped memory segments"},"files":[],"sha":"f3699360b9c13a54d5cd42f6c472f7d1da4d2ab2"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"836600648a118701ea4409077d8aa2e6e25f02a0"},{"commit":{"message":"8228584: DefaultModules test fails with incubating modules"},"files":[],"sha":"191f4431c18c2989dd41bb173bea47549d684ae5"},{"commit":{"message":"8228487: Find a better name for MemoryLayout::ofValue"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"b79a01d5b7aafc060162643b2db10e06cf4c2d86"},{"commit":{"message":"8228444: Add common value layout constants\n8228447: Remove kinds from value layouts​"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"36378a4bc55e183dceac5dbe45f240657023adbd"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"68a1a01459891fcb56027677bcbe7a6cd8f0f2a8"},{"commit":{"message":"8227394: Add MemorySegment::asByteBuffer convenience method\n\nMove asByteBuffer method from MemoryAddress to MemorySegment\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"bebbfdbc78a33d232e8f3ad8ff6e27f41f2beeea"},{"commit":{"message":"8227548: AddressVarHandleGenerator produces unverifiable code\n\nReviewed-by: sundar"},"files":[],"sha":"506a9748b715d0a7beb80dd854ad091ebf4d7a1e"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"b8a20a964dd3716b378c1d10c85071e92cc6babb"},{"commit":{"message":"8227393: Add Constable support to the layout API"},"files":[],"sha":"5cb9ce7ec1c4080bd14d371453e4af956453612c"},{"commit":{"message":"8227424: C2 assertion failures with debug build\n\nReviewed-by: mcimadamore"},"files":[],"sha":"59dcdf5eae3ebf7c8cbab32e261cf26d177c80d7"},{"commit":{"message":"8227285: Fix memory access API naming issues"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"dba2d33aa9fa67a1b690b741d1d8bcedc83ca4c8"},{"commit":{"message":"8227278: Remove CompoundLayout"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"d4091db2ae524a951f7f584a2a84fb4608c9068d"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"3ab8d5ff0b137eda8781a3a35fd6fb0d71a779ee"},{"commit":{"message":"8227107: Add missing toString implementation to MemorySegmentImpl"},"files":[],"sha":"f073350e2ea43d576ba797f4056759015a0a6058"},{"commit":{"message":"8226949: Move memory access API to incubator module"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"c3097e08fdacea3d918a341347dcf6d942c1e056"},{"commit":{"message":"8226527: Add package-info javadoc\n\nJavadoc and API overhaul\n"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"b718454e960358a95bceaaa394d2776265325dbb"},{"commit":{"message":"8226421: Remove LayoutPath API\n\nWe settled for a less drastic option where LayoutPath is now 'confined'\nto operations on compound layouts (e.g. offset and dereferenceHandle).\n"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"9ad0bd8eec2a89851a62da27d6fca1bf9d2399f6"},{"commit":{"message":"Automatic merge with default"},"files":[],"sha":"d891382b2f282f9b424ef65b731e9af863eedd26"},{"commit":{"message":"8226526: Add extra static checks to MemoryAccessVarHandles"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"81ce3702af6abdc964330474ffbfe42da4efcf1f"},{"commit":{"message":"8226519: Add layout helper methods to obtain size and alignment in bytes"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"b688c8b606d1b619a51a85fbd9b5a12cf15997c4"},{"commit":{"message":"Automatic merge with default"},"files":[{"filename":"make\/autoconf\/libraries.m4"}],"sha":"105e5a707278e759eefdf23e6bcc00524d51f4ad"},{"commit":{"message":"8225720: Cleanup var handle address generation with byte carriers"},"files":[],"sha":"270f437fc76fdf1861872a7ea85ff058814fbe88"},{"commit":{"message":"8225172: Add way to create deref VarHandles without using the Layout API\n\nReviewed-by: mcimadamore"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"}],"sha":"02b0d015a91044572a4390582e34d8084a9f380e"},{"commit":{"message":"8225515: Remove MemoryScope from public API"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"3d5328206929a92dfbcb0265ab1fc05201b0f5ae"},{"commit":{"message":"RFR 8224993: Add Unsafe support for MemoryAddress\n\nChanges to sun.misc.Unsafe were accidentally removed\n"},"files":[],"sha":"6e0d514fdb0f9b227567da90e8de8ed35b5d7ee7"},{"commit":{"message":"8224993: Add Unsafe support for MemoryAddress\n\n* Fix bad call from sun.misc.Unsafe to itself\n* remove redundant checks from MmeoryAddressImpl::copy\n"},"files":[],"sha":"a91748dbf659c3d82257440a1e9f777370a068b3"},{"commit":{"message":"8224993: 8224843: Refine ByteBuffer interop support​\n\nAdd combinatorial test for memory address bulk copy\n"},"files":[],"sha":"ca9fc9069c41e83f725b18efa50bd1c214194077"},{"commit":{"message":"8224993: Add Unsafe support for MemoryAddress"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestNative.java"}],"sha":"0549ce3f79dc45cb40d2ff604335386d2e0525ea"},{"commit":{"message":"8224843: Refine ByteBuffer interop support"},"files":[],"sha":"c1a3475c9f2af8e014d738e8ea7d222de23b4aca"},{"commit":{"message":"8224614: Cleanup MemoryScope and its implementation"},"files":[],"sha":"33829766a45f9d90296b87559d08e7ee852a5fc5"},{"commit":{"message":"8224483: Split MemoryAddress into separate address\/region abstractions\n\nFix typo in MemoryAddress javadoc\n"},"files":[],"sha":"e52e5a9642a2c98ece79898ecea67ac92b4b99ba"},{"commit":{"message":"8224483: Split MemoryAddress into separate address\/region abstractions"},"files":[],"sha":"dba8ff11430c6bc22336c4ed448887429ce5f0f8"},{"commit":{"message":"8224134:Fix javadoc issues"},"files":[],"sha":"40dcde316108966ae0f11c58148d331d71dba975"},{"commit":{"message":"8224041: Name of layout classes should end with \"Layout\" suffix"},"files":[],"sha":"3e7dfd7c1d083e68068c670ac971bd9bd4bb3a57"},{"commit":{"message":"8224040: Misc improvements to layout API"},"files":[],"sha":"e181b45f6885e22efed0b5f7be2b1801a3b24a6e"},{"commit":{"message":"8224039: Remove unnecessary layout classes"},"files":[],"sha":"0d3188bd78cb65cb1bb2efadf290f2bfb6ea7d30"},{"commit":{"message":"8224037: Remove layout attributes"},"files":[],"sha":"5ba7580912821d6b62e8e4c266c3d9bb85e4e1d9"},{"commit":{"message":"8223978: Add alignment support to layouts"},"files":[],"sha":"9649f5d2bdc90440433de190ded0a6dbfc05f8e5"},{"commit":{"message":"8223786: Rename layout annotation to layout attribute"},"files":[],"sha":"f61cd5dc8ac7e8e5f2e18786d34db87ac8a53c6b"},{"commit":{"message":"8223778: Path lookup API refinements"},"files":[],"sha":"35d488c1b4164f8610b9d68bddf8e4b3887bc4b7"},{"commit":{"message":"8223768: Rethink relationship between Sequence vs. Group layouts\n\nSplit Group and Sequence; add Compound supertype.\n"},"files":[],"sha":"bebf58551b4bdec01a3327916aff15102470ab04"},{"commit":{"message":"8223712: Investigate more fluent LayoutPath API"},"files":[],"sha":"257c2fd7509d25bb37eb1a45fb847b710a3675e3"},{"commit":{"message":"8223629: Remove Descriptor and Function\n\nForgot to hg add\/remove files\n\nReviewed-by: sundar"},"files":[],"sha":"6e4a8475369e922b12800b17813265303449ddc8"},{"commit":{"message":"8223629: Remove Descriptor and Function\n\nReviewed-by: sundar"},"files":[],"sha":"f05c8a6ce5e49093a389f2e211ae6bf80ac450d6"},{"commit":{"message":"8223614: Flatten package hierarchy\n\nReviewed-by: sundar"},"files":[],"sha":"5d72a193f6ad8066ef65a35215d8b3f770018d62"},{"commit":{"message":"8222765: Implement foreign memory access through VarHandle​"},"files":[],"sha":"92db57cb24d147b343bd007838f4993a7f29c835"}]