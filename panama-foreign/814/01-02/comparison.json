{"files":[{"patch":"@@ -206,1 +206,1 @@\n-     * Nameless layouts can be checked for equality to see if they are otherwise equal.\n+     * This can be useful to compare two layouts that have different names, but are otherwise equal.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -438,1 +438,1 @@\n-     * A nameless value layout constant whose size is the same as that of a machine address ({@code size_t}),\n+     * A value layout constant whose size is the same as that of a machine address ({@code size_t}),\n@@ -444,1 +444,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code byte},\n+     * A value layout constant whose size is the same as that of a Java {@code byte},\n@@ -450,1 +450,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code boolean},\n+     * A value layout constant whose size is the same as that of a Java {@code boolean},\n@@ -456,1 +456,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code char},\n+     * A value layout constant whose size is the same as that of a Java {@code char},\n@@ -462,1 +462,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code short},\n+     * A value layout constant whose size is the same as that of a Java {@code short},\n@@ -468,1 +468,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code int},\n+     * A value layout constant whose size is the same as that of a Java {@code int},\n@@ -474,1 +474,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code long},\n+     * A value layout constant whose size is the same as that of a Java {@code long},\n@@ -480,1 +480,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code float},\n+     * A value layout constant whose size is the same as that of a Java {@code float},\n@@ -486,1 +486,1 @@\n-     * A nameless value layout constant whose size is the same as that of a Java {@code double},\n+     * A value layout constant whose size is the same as that of a Java {@code double},\n@@ -492,1 +492,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a machine address ({@code size_t}),\n+     * An unaligned value layout constant whose size is the same as that of a machine address ({@code size_t}),\n@@ -504,1 +504,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a Java {@code char}\n+     * An unaligned value layout constant whose size is the same as that of a Java {@code char}\n@@ -516,1 +516,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a Java {@code short}\n+     * An unaligned value layout constant whose size is the same as that of a Java {@code short}\n@@ -528,1 +528,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a Java {@code int}\n+     * An unaligned value layout constant whose size is the same as that of a Java {@code int}\n@@ -540,1 +540,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a Java {@code long}\n+     * An unaligned value layout constant whose size is the same as that of a Java {@code long}\n@@ -552,1 +552,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a Java {@code float}\n+     * An unaligned value layout constant whose size is the same as that of a Java {@code float}\n@@ -564,1 +564,1 @@\n-     * A nameless unaligned value layout constant whose size is the same as that of a Java {@code double}\n+     * An unaligned value layout constant whose size is the same as that of a Java {@code double}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}