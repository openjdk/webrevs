{"files":[{"patch":"@@ -286,1 +286,1 @@\n-                iota.compare(GE, iota.broadcast(Float.floatToFloat16((float)indexLimit)));\n+                iota.compare(GE, Float.floatToFloat16((float)indexLimit));\n@@ -372,1 +372,1 @@\n-                iota.compare(GE, iota.broadcast(Float.floatToFloat16((float)indexLimit)));\n+                iota.compare(GE, Float.floatToFloat16((float)indexLimit));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractMask.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-\/\/import jdk.internal.vm.annotation.IntrinsicCandidate;\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2067,1 +2067,1 @@\n-                return v.add(sc == 1 ? iota : iota.mul(Halffloat.valueOf((float) sc)));\n+                return v.add(sc == 1 ? iota : iota.mul(Float.floatToFloat16((float) sc)));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/HalffloatVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2696,1 +2696,1 @@\n-                return v.add(sc == 1 ? iota : iota.mul(Halffloat.valueOf((float) sc)));\n+                return v.add(sc == 1 ? iota : iota.mul(Float.floatToFloat16((float) sc)));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static byte valueOf(int i) {\n+    static byte genValue(int i) {\n@@ -957,1 +957,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -961,1 +961,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -965,1 +965,1 @@\n-                            i -> (((byte)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((byte)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static byte valueOf(int i) {\n+    static byte genValue(int i) {\n@@ -957,1 +957,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -961,1 +961,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -965,1 +965,1 @@\n-                            i -> (((byte)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((byte)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static byte valueOf(int i) {\n+    static byte genValue(int i) {\n@@ -957,1 +957,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -961,1 +961,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -965,1 +965,1 @@\n-                            i -> (((byte)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((byte)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static byte valueOf(int i) {\n+    static byte genValue(int i) {\n@@ -957,1 +957,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -961,1 +961,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -965,1 +965,1 @@\n-                            i -> (((byte)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((byte)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -905,1 +905,1 @@\n-    static byte valueOf(int i) {\n+    static byte genValue(int i) {\n@@ -962,1 +962,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -966,1 +966,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -970,1 +970,1 @@\n-                            i -> (((byte)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((byte)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static double valueOf(int i) {\n+    static double genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static double valueOf(long i) {\n+    static double genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1079,1 +1079,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1083,1 +1083,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1087,1 +1087,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static double valueOf(int i) {\n+    static double genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static double valueOf(long i) {\n+    static double genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1079,1 +1079,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1083,1 +1083,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1087,1 +1087,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static double valueOf(int i) {\n+    static double genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static double valueOf(long i) {\n+    static double genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1079,1 +1079,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1083,1 +1083,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1087,1 +1087,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static double valueOf(int i) {\n+    static double genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static double valueOf(long i) {\n+    static double genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1079,1 +1079,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1083,1 +1083,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1087,1 +1087,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-    static double valueOf(int i) {\n+    static double genValue(int i) {\n@@ -1000,1 +1000,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1004,1 +1004,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1008,1 +1008,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1042,1 +1042,1 @@\n-    static double valueOf(long i) {\n+    static double genValue(long i) {\n@@ -1049,1 +1049,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1053,1 +1053,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1057,1 +1057,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1084,1 +1084,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1088,1 +1088,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1092,1 +1092,1 @@\n-                            i -> (((double)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((double)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static float valueOf(int i) {\n+    static float genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static float valueOf(long i) {\n+    static float genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1090,1 +1090,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1094,1 +1094,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1098,1 +1098,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static float valueOf(int i) {\n+    static float genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static float valueOf(long i) {\n+    static float genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1090,1 +1090,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1094,1 +1094,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1098,1 +1098,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static float valueOf(int i) {\n+    static float genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static float valueOf(long i) {\n+    static float genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1090,1 +1090,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1094,1 +1094,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1098,1 +1098,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    static float valueOf(int i) {\n+    static float genValue(int i) {\n@@ -995,1 +995,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -999,1 +999,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1003,1 +1003,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1037,1 +1037,1 @@\n-    static float valueOf(long i) {\n+    static float genValue(long i) {\n@@ -1044,1 +1044,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1048,1 +1048,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1052,1 +1052,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1090,1 +1090,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1094,1 +1094,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1098,1 +1098,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-    static float valueOf(int i) {\n+    static float genValue(int i) {\n@@ -1000,1 +1000,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1004,1 +1004,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1008,1 +1008,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1042,1 +1042,1 @@\n-    static float valueOf(long i) {\n+    static float genValue(long i) {\n@@ -1049,1 +1049,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1053,1 +1053,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1057,1 +1057,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1095,1 +1095,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1099,1 +1099,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1103,1 +1103,1 @@\n-                            i -> (((float)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((float)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -998,1 +998,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1002,1 +1002,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1006,1 +1006,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1040,1 +1040,1 @@\n-    static short valueOf(long i) {\n+    static short genValue(long i) {\n@@ -1047,1 +1047,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1051,1 +1051,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1055,1 +1055,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1093,1 +1093,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1097,1 +1097,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1101,1 +1101,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1437,5 +1437,0 @@\n-        Class<?> ETYPE = short.class;\n-        if (ETYPE == double.class || ETYPE == long.class)\n-            scale = 1000000;\n-        else if (ETYPE == byte.class && SPECIES.length() >= 64)\n-            scale = 1;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Halffloat128VectorTests.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -998,1 +998,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1002,1 +1002,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1006,1 +1006,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1040,1 +1040,1 @@\n-    static short valueOf(long i) {\n+    static short genValue(long i) {\n@@ -1047,1 +1047,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1051,1 +1051,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1055,1 +1055,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1093,1 +1093,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1097,1 +1097,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1101,1 +1101,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1437,5 +1437,0 @@\n-        Class<?> ETYPE = short.class;\n-        if (ETYPE == double.class || ETYPE == long.class)\n-            scale = 1000000;\n-        else if (ETYPE == byte.class && SPECIES.length() >= 64)\n-            scale = 1;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Halffloat256VectorTests.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -998,1 +998,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1002,1 +1002,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1006,1 +1006,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1040,1 +1040,1 @@\n-    static short valueOf(long i) {\n+    static short genValue(long i) {\n@@ -1047,1 +1047,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1051,1 +1051,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1055,1 +1055,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1093,1 +1093,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1097,1 +1097,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1101,1 +1101,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1437,5 +1437,0 @@\n-        Class<?> ETYPE = short.class;\n-        if (ETYPE == double.class || ETYPE == long.class)\n-            scale = 1000000;\n-        else if (ETYPE == byte.class && SPECIES.length() >= 64)\n-            scale = 1;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Halffloat512VectorTests.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -998,1 +998,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1002,1 +1002,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1006,1 +1006,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1040,1 +1040,1 @@\n-    static short valueOf(long i) {\n+    static short genValue(long i) {\n@@ -1047,1 +1047,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1051,1 +1051,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1055,1 +1055,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1093,1 +1093,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1097,1 +1097,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1101,1 +1101,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1437,5 +1437,0 @@\n-        Class<?> ETYPE = short.class;\n-        if (ETYPE == double.class || ETYPE == long.class)\n-            scale = 1000000;\n-        else if (ETYPE == byte.class && SPECIES.length() >= 64)\n-            scale = 1;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Halffloat64VectorTests.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -981,1 +981,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -1003,1 +1003,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1007,1 +1007,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1011,1 +1011,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1045,1 +1045,1 @@\n-    static short valueOf(long i) {\n+    static short genValue(long i) {\n@@ -1052,1 +1052,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1056,1 +1056,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1060,1 +1060,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1098,1 +1098,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1102,1 +1102,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1106,1 +1106,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1442,5 +1442,0 @@\n-        Class<?> ETYPE = short.class;\n-        if (ETYPE == double.class || ETYPE == long.class)\n-            scale = 1000000;\n-        else if (ETYPE == byte.class && SPECIES.length() >= 64)\n-            scale = 1;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/HalffloatMaxVectorTests.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static int valueOf(int i) {\n+    static int genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((int)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((int)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static int valueOf(int i) {\n+    static int genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((int)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((int)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static int valueOf(int i) {\n+    static int genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((int)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((int)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static int valueOf(int i) {\n+    static int genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((int)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((int)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -905,1 +905,1 @@\n-    static int valueOf(int i) {\n+    static int genValue(int i) {\n@@ -952,1 +952,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -956,1 +956,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -960,1 +960,1 @@\n-                            i -> (((int)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((int)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -857,1 +857,1 @@\n-    static long valueOf(int i) {\n+    static long genValue(int i) {\n@@ -879,1 +879,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -883,1 +883,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -887,1 +887,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -937,1 +937,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -941,1 +941,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -945,1 +945,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -857,1 +857,1 @@\n-    static long valueOf(int i) {\n+    static long genValue(int i) {\n@@ -879,1 +879,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -883,1 +883,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -887,1 +887,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -937,1 +937,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -941,1 +941,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -945,1 +945,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -857,1 +857,1 @@\n-    static long valueOf(int i) {\n+    static long genValue(int i) {\n@@ -879,1 +879,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -883,1 +883,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -887,1 +887,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -937,1 +937,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -941,1 +941,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -945,1 +945,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -857,1 +857,1 @@\n-    static long valueOf(int i) {\n+    static long genValue(int i) {\n@@ -879,1 +879,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -883,1 +883,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -887,1 +887,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -937,1 +937,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -941,1 +941,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -945,1 +945,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -862,1 +862,1 @@\n-    static long valueOf(int i) {\n+    static long genValue(int i) {\n@@ -884,1 +884,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -888,1 +888,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -892,1 +892,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -942,1 +942,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -946,1 +946,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -950,1 +950,1 @@\n-                            i -> (((long)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((long)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -947,1 +947,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -951,1 +951,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -955,1 +955,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -905,1 +905,1 @@\n-    static short valueOf(int i) {\n+    static short genValue(int i) {\n@@ -952,1 +952,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -956,1 +956,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -960,1 +960,1 @@\n-                            i -> (((short)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> (((short)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -69,2 +69,1 @@\n-    @Setup\n-    public void init() {\n+    static $type$ genValue(int i) {\n@@ -72,4 +71,1 @@\n-        as = fill(i -> Halffloat.valueOf(2*i));\n-        bs = fill(i -> Halffloat.valueOf(i+1));\n-        cs = fill(i -> Halffloat.valueOf(i+5));\n-        rs = fill(i -> Halffloat.valueOf(0));\n+        return Halffloat.valueOf(i);\n@@ -77,4 +73,1 @@\n-        as = fill(i -> ($type$)(2*i));\n-        bs = fill(i -> ($type$)(i+1));\n-        cs = fill(i -> ($type$)(i+5));\n-        rs = fill(i -> ($type$)0);\n+        return ($type$) i;\n@@ -82,0 +75,8 @@\n+    }\n+\n+    @Setup\n+    public void init() {\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Perf-Scalar-header.template","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -102,4 +102,1 @@\n-    @Setup\n-    public void init() {\n-        size += size % SPECIES.length(); \/\/ FIXME: add post-loops\n-\n+    static $type$ genValue(int i) {\n@@ -107,4 +104,1 @@\n-        a = fill(i -> Halffloat.valueOf(2*i));\n-        b = fill(i -> Halffloat.valueOf(i+1));\n-        c = fill(i -> Halffloat.valueOf(i+5));\n-        r = fill(i -> Halffloat.valueOf(0));\n+        return Halffloat.valueOf(i);\n@@ -112,4 +106,1 @@\n-        a = fill(i -> ($type$)(2*i));\n-        b = fill(i -> ($type$)(i+1));\n-        c = fill(i -> ($type$)(i+5));\n-        r = fill(i -> ($type$)0);\n+        return ($type$) i;\n@@ -117,0 +108,1 @@\n+    }\n@@ -118,0 +110,7 @@\n+    @Setup\n+    public void init() {\n+        size += size % SPECIES.length(); \/\/ FIXME: add post-loops\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Perf-header.template","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1038,1 +1038,1 @@\n-    static $type$ valueOf(int i) {\n+    static $type$ genValue(int i) {\n@@ -1066,1 +1066,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1070,1 +1070,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1074,1 +1074,1 @@\n-                            i -> ((($type$)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> ((($type$)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1116,1 +1116,1 @@\n-    static $type$ valueOf(long i) {\n+    static $type$ genValue(long i) {\n@@ -1127,1 +1127,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1131,1 +1131,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1135,1 +1135,1 @@\n-                            i -> ((($type$)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> ((($type$)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1197,1 +1197,1 @@\n-                            i -> valueOf(-i * 5));\n+                            i -> genValue(-i * 5));\n@@ -1201,1 +1201,1 @@\n-                            i -> valueOf(i * 5));\n+                            i -> genValue(i * 5));\n@@ -1205,1 +1205,1 @@\n-                            i -> ((($type$)(i + 1) == 0) ? valueOf(1) : valueOf(i + 1)));\n+                            i -> ((($type$)(i + 1) == 0) ? genValue(1) : genValue(i + 1)));\n@@ -1705,5 +1705,0 @@\n-        Class<?> ETYPE = $type$.class;\n-        if (ETYPE == double.class || ETYPE == long.class)\n-            scale = 1000000;\n-        else if (ETYPE == byte.class && SPECIES.length() >= 64)\n-            scale = 1;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static byte genValue(int i) {\n+        return (byte) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (byte)(2*i));\n-        b = fill(i -> (byte)(i+1));\n-        c = fill(i -> (byte)(i+5));\n-        r = fill(i -> (byte)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static byte genValue(int i) {\n+        return (byte) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (byte)(2*i));\n-        b = fill(i -> (byte)(i+1));\n-        c = fill(i -> (byte)(i+5));\n-        r = fill(i -> (byte)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static byte genValue(int i) {\n+        return (byte) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (byte)(2*i));\n-        b = fill(i -> (byte)(i+1));\n-        c = fill(i -> (byte)(i+5));\n-        r = fill(i -> (byte)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static byte genValue(int i) {\n+        return (byte) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (byte)(2*i));\n-        b = fill(i -> (byte)(i+1));\n-        c = fill(i -> (byte)(i+5));\n-        r = fill(i -> (byte)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static byte genValue(int i) {\n+        return (byte) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (byte)(2*i));\n-        b = fill(i -> (byte)(i+1));\n-        c = fill(i -> (byte)(i+5));\n-        r = fill(i -> (byte)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+    static byte genValue(int i) {\n+        return (byte) i;\n+    }\n+\n@@ -66,4 +70,4 @@\n-        as = fill(i -> (byte)(2*i));\n-        bs = fill(i -> (byte)(i+1));\n-        cs = fill(i -> (byte)(i+5));\n-        rs = fill(i -> (byte)0);\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static double genValue(int i) {\n+        return (double) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (double)(2*i));\n-        b = fill(i -> (double)(i+1));\n-        c = fill(i -> (double)(i+5));\n-        r = fill(i -> (double)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static double genValue(int i) {\n+        return (double) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (double)(2*i));\n-        b = fill(i -> (double)(i+1));\n-        c = fill(i -> (double)(i+5));\n-        r = fill(i -> (double)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static double genValue(int i) {\n+        return (double) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (double)(2*i));\n-        b = fill(i -> (double)(i+1));\n-        c = fill(i -> (double)(i+5));\n-        r = fill(i -> (double)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static double genValue(int i) {\n+        return (double) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (double)(2*i));\n-        b = fill(i -> (double)(i+1));\n-        c = fill(i -> (double)(i+5));\n-        r = fill(i -> (double)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static double genValue(int i) {\n+        return (double) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (double)(2*i));\n-        b = fill(i -> (double)(i+1));\n-        c = fill(i -> (double)(i+5));\n-        r = fill(i -> (double)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/DoubleMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -63,0 +63,4 @@\n+    static double genValue(int i) {\n+        return (double) i;\n+    }\n+\n@@ -65,4 +69,4 @@\n-        as = fill(i -> (double)(2*i));\n-        bs = fill(i -> (double)(i+1));\n-        cs = fill(i -> (double)(i+5));\n-        rs = fill(i -> (double)0);\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/DoubleScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static float genValue(int i) {\n+        return (float) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (float)(2*i));\n-        b = fill(i -> (float)(i+1));\n-        c = fill(i -> (float)(i+5));\n-        r = fill(i -> (float)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static float genValue(int i) {\n+        return (float) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (float)(2*i));\n-        b = fill(i -> (float)(i+1));\n-        c = fill(i -> (float)(i+5));\n-        r = fill(i -> (float)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static float genValue(int i) {\n+        return (float) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (float)(2*i));\n-        b = fill(i -> (float)(i+1));\n-        c = fill(i -> (float)(i+5));\n-        r = fill(i -> (float)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static float genValue(int i) {\n+        return (float) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (float)(2*i));\n-        b = fill(i -> (float)(i+1));\n-        c = fill(i -> (float)(i+5));\n-        r = fill(i -> (float)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+    static float genValue(int i) {\n+        return (float) i;\n+    }\n+\n@@ -78,6 +82,4 @@\n-\n-        a = fill(i -> (float)(2*i));\n-        b = fill(i -> (float)(i+1));\n-        c = fill(i -> (float)(i+5));\n-        r = fill(i -> (float)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/FloatMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -63,0 +63,4 @@\n+    static float genValue(int i) {\n+        return (float) i;\n+    }\n+\n@@ -65,4 +69,4 @@\n-        as = fill(i -> (float)(2*i));\n-        bs = fill(i -> (float)(i+1));\n-        cs = fill(i -> (float)(i+5));\n-        rs = fill(i -> (float)0);\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/FloatScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -76,0 +76,4 @@\n+    static short genValue(int i) {\n+        return Halffloat.valueOf(i);\n+    }\n+\n@@ -79,6 +83,4 @@\n-\n-        a = fill(i -> Halffloat.valueOf(2*i));\n-        b = fill(i -> Halffloat.valueOf(i+1));\n-        c = fill(i -> Halffloat.valueOf(i+5));\n-        r = fill(i -> Halffloat.valueOf(0));\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Halffloat128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,0 +76,4 @@\n+    static short genValue(int i) {\n+        return Halffloat.valueOf(i);\n+    }\n+\n@@ -79,6 +83,4 @@\n-\n-        a = fill(i -> Halffloat.valueOf(2*i));\n-        b = fill(i -> Halffloat.valueOf(i+1));\n-        c = fill(i -> Halffloat.valueOf(i+5));\n-        r = fill(i -> Halffloat.valueOf(0));\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Halffloat256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,0 +76,4 @@\n+    static short genValue(int i) {\n+        return Halffloat.valueOf(i);\n+    }\n+\n@@ -79,6 +83,4 @@\n-\n-        a = fill(i -> Halffloat.valueOf(2*i));\n-        b = fill(i -> Halffloat.valueOf(i+1));\n-        c = fill(i -> Halffloat.valueOf(i+5));\n-        r = fill(i -> Halffloat.valueOf(0));\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Halffloat512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,0 +76,4 @@\n+    static short genValue(int i) {\n+        return Halffloat.valueOf(i);\n+    }\n+\n@@ -79,6 +83,4 @@\n-\n-        a = fill(i -> Halffloat.valueOf(2*i));\n-        b = fill(i -> Halffloat.valueOf(i+1));\n-        c = fill(i -> Halffloat.valueOf(i+5));\n-        r = fill(i -> Halffloat.valueOf(0));\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Halffloat64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,0 +76,4 @@\n+    static short genValue(int i) {\n+        return Halffloat.valueOf(i);\n+    }\n+\n@@ -79,6 +83,4 @@\n-\n-        a = fill(i -> Halffloat.valueOf(2*i));\n-        b = fill(i -> Halffloat.valueOf(i+1));\n-        c = fill(i -> Halffloat.valueOf(i+5));\n-        r = fill(i -> Halffloat.valueOf(0));\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/HalffloatMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+    static short genValue(int i) {\n+        return Halffloat.valueOf(i);\n+    }\n+\n@@ -66,4 +70,4 @@\n-        as = fill(i -> Halffloat.valueOf(2*i));\n-        bs = fill(i -> Halffloat.valueOf(i+1));\n-        cs = fill(i -> Halffloat.valueOf(i+5));\n-        rs = fill(i -> Halffloat.valueOf(0));\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/HalffloatScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static int genValue(int i) {\n+        return (int) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (int)(2*i));\n-        b = fill(i -> (int)(i+1));\n-        c = fill(i -> (int)(i+5));\n-        r = fill(i -> (int)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static int genValue(int i) {\n+        return (int) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (int)(2*i));\n-        b = fill(i -> (int)(i+1));\n-        c = fill(i -> (int)(i+5));\n-        r = fill(i -> (int)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static int genValue(int i) {\n+        return (int) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (int)(2*i));\n-        b = fill(i -> (int)(i+1));\n-        c = fill(i -> (int)(i+5));\n-        r = fill(i -> (int)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static int genValue(int i) {\n+        return (int) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (int)(2*i));\n-        b = fill(i -> (int)(i+1));\n-        c = fill(i -> (int)(i+5));\n-        r = fill(i -> (int)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static int genValue(int i) {\n+        return (int) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (int)(2*i));\n-        b = fill(i -> (int)(i+1));\n-        c = fill(i -> (int)(i+5));\n-        r = fill(i -> (int)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+    static int genValue(int i) {\n+        return (int) i;\n+    }\n+\n@@ -66,4 +70,4 @@\n-        as = fill(i -> (int)(2*i));\n-        bs = fill(i -> (int)(i+1));\n-        cs = fill(i -> (int)(i+5));\n-        rs = fill(i -> (int)0);\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static long genValue(int i) {\n+        return (long) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (long)(2*i));\n-        b = fill(i -> (long)(i+1));\n-        c = fill(i -> (long)(i+5));\n-        r = fill(i -> (long)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static long genValue(int i) {\n+        return (long) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (long)(2*i));\n-        b = fill(i -> (long)(i+1));\n-        c = fill(i -> (long)(i+5));\n-        r = fill(i -> (long)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static long genValue(int i) {\n+        return (long) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (long)(2*i));\n-        b = fill(i -> (long)(i+1));\n-        c = fill(i -> (long)(i+5));\n-        r = fill(i -> (long)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static long genValue(int i) {\n+        return (long) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (long)(2*i));\n-        b = fill(i -> (long)(i+1));\n-        c = fill(i -> (long)(i+5));\n-        r = fill(i -> (long)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static long genValue(int i) {\n+        return (long) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (long)(2*i));\n-        b = fill(i -> (long)(i+1));\n-        c = fill(i -> (long)(i+5));\n-        r = fill(i -> (long)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+    static long genValue(int i) {\n+        return (long) i;\n+    }\n+\n@@ -66,4 +70,4 @@\n-        as = fill(i -> (long)(2*i));\n-        bs = fill(i -> (long)(i+1));\n-        cs = fill(i -> (long)(i+5));\n-        rs = fill(i -> (long)0);\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static short genValue(int i) {\n+        return (short) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (short)(2*i));\n-        b = fill(i -> (short)(i+1));\n-        c = fill(i -> (short)(i+5));\n-        r = fill(i -> (short)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short128Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static short genValue(int i) {\n+        return (short) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (short)(2*i));\n-        b = fill(i -> (short)(i+1));\n-        c = fill(i -> (short)(i+5));\n-        r = fill(i -> (short)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short256Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static short genValue(int i) {\n+        return (short) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (short)(2*i));\n-        b = fill(i -> (short)(i+1));\n-        c = fill(i -> (short)(i+5));\n-        r = fill(i -> (short)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short512Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static short genValue(int i) {\n+        return (short) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (short)(2*i));\n-        b = fill(i -> (short)(i+1));\n-        c = fill(i -> (short)(i+5));\n-        r = fill(i -> (short)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short64Vector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+    static short genValue(int i) {\n+        return (short) i;\n+    }\n+\n@@ -94,6 +98,4 @@\n-\n-        a = fill(i -> (short)(2*i));\n-        b = fill(i -> (short)(i+1));\n-        c = fill(i -> (short)(i+5));\n-        r = fill(i -> (short)0);\n-\n+        a = fill(i -> genValue(2*i));\n+        b = fill(i -> genValue(i+1));\n+        c = fill(i -> genValue(i+5));\n+        r = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ShortMaxVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+    static short genValue(int i) {\n+        return (short) i;\n+    }\n+\n@@ -66,4 +70,4 @@\n-        as = fill(i -> (short)(2*i));\n-        bs = fill(i -> (short)(i+1));\n-        cs = fill(i -> (short)(i+5));\n-        rs = fill(i -> (short)0);\n+        as = fill(i -> genValue(2*i));\n+        bs = fill(i -> genValue(i+1));\n+        cs = fill(i -> genValue(i+5));\n+        rs = fill(i -> genValue(0));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ShortScalar.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"}]}