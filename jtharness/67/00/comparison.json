{"files":[{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+\n+public class TestTree1 extends Test {\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+\n+          TestTree tree = mainFrame.getTestTree();\n+          TreePath root = tree.getRoot();\n+          if (!tree.isExpanded(root)) {\n+               tree.click(root);\n+          }\n+          tree.click(root);\n+          try {\n+               tree.waitForCollapse(root);\n+          } catch (TimeoutExpiredException e) {\n+               if (!tree.isExpanded(root)) {\n+                    errors.add(\"Tree root is not collapsed after mouse click\");\n+               }\n+          }\n+          tree.click(root);\n+          try {\n+               tree.waitForExpand(root);\n+          } catch (TimeoutExpiredException e) {\n+               if (!tree.isExpanded(root)) {\n+                    errors.add(\"Tree root is not expanded after mouse click\");\n+               }\n+          }\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test checks that root element would be collapsed and expanded after double click on it\";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree1.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+public class TestTree2 extends Test {\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(false);\n+\n+          mainFrame.openDefaultTestSuite();\n+\n+          TestTree testTree = mainFrame.getTestTree();\n+          TreePath[] visibleRows = testTree.getVisibleRows();\n+          testTree.click(visibleRows[1]);\n+          if(testTree.getVisibleRowCount() != 10) {\n+               errors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 10 expected (1st click)\");\n+          }\n+          testTree.click(visibleRows[1]);\n+          if(testTree.getVisibleRowCount() != 4) {\n+               errors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 4 expected (2nd click)\");\n+          }\n+          TreePath[] click = testTree.click(visibleRows[2]);\n+          if(testTree.getVisibleRowCount() != 7) {\n+               errors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 7 expected (3rd click)\");\n+          }\n+          testTree.click(click[2]);\n+          if(testTree.getVisibleRowCount() != 10) {\n+               errors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 10 expected (4th click)\");\n+          }\n+          testTree.click(visibleRows[2]);\n+          if(testTree.getVisibleRowCount() != 4) {\n+               errors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 4 expected (5th click)\");\n+          }\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test checks that rows are expanded\/collapsed normaly.\";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree2.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+public class TestTree3 extends Test {\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          TestTree tree = mainFrame.getTestTree();\n+\n+          tree.click(2);\n+          tree.click(4);\n+          tree.click(1);\n+\n+          tree.selectRows(2, 3, 5, 7, 9, 10);\n+\n+          Icon testNotRunIcon = IconFactory.getTestIcon(IconFactory.NOT_RUN, false, true);\n+          Icon dirNotRunIcon = IconFactory.getTestFolderIcon(IconFactory.NOT_RUN, false, true);\n+\n+          Icon testPassedIcon = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+          Icon directoryPassedIcon = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\n+          Icon testFiledIcon = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+          Icon dirFiledIcon = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+          tree.runTests().waitForDone();\n+\n+          TreePath[] paths = tree.getSelectedRows();\n+          for (TreePath path : paths) {\n+               Icon icon = tree.getIcon(path);\n+               if (tree.isTest(path)) {\n+                    if (icon != testPassedIcon) {\n+                         errors.add(\"Icon on path \" + path + \" is invalid\");\n+                    }\n+               } else {\n+                    if (path.toString().contains(\"DoublyLinkedList\")) {\n+                         if (icon != dirFiledIcon) {\n+                              errors.add(\"Icon on path \" + path + \" is invalid\");\n+                         }\n+                    } else {\n+                         if (icon != directoryPassedIcon) {\n+                              errors.add(\"Icon on path \" + path + \" is invalid\");\n+                         }\n+                    }\n+               }\n+          }\n+\n+          tree.click(9);\n+          if (tree.getIcon(10) != testPassedIcon) {\n+               errors.add(\"Icon on path \" + tree.getPathForRow(10) + \" is invalid\");\n+          }\n+          if (tree.getIcon(11) != testPassedIcon) {\n+               errors.add(\"Icon on path \" + tree.getPathForRow(11) + \" is invalid\");\n+          }\n+          if (tree.getIcon(12) != testFiledIcon) {\n+               errors.add(\"Icon on path \" + tree.getPathForRow(12) + \" is invalid\");\n+          }\n+          if (tree.getIcon(13) != testPassedIcon) {\n+               errors.add(\"Icon on path \" + tree.getPathForRow(13) + \" is invalid\");\n+          }\n+\n+          tree.clearResults();\n+\n+          tree.click(19);\n+          for (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+               TreePath path = tree.getPathForRow(i);\n+               Icon icon = tree.getIcon(path);\n+               if (tree.isTest(path)) {\n+                    if (icon != testNotRunIcon) {\n+                         errors.add(\"Icon on tests path \" + path + \" is invalid after clearing\");\n+                    }\n+               } else {\n+                    if (icon != dirNotRunIcon) {\n+                         errors.add(\"Icon on directories path \" + path + \" is invalid after clearing\");\n+                    }\n+               }\n+          }\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test selects some tests in the test tree, executes them, checks their icons, clears them and checks icons again.\";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree3.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+public class TestTree4 extends Test {\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          TestTree tree = mainFrame.getTestTree();\n+\n+          tree.click(1);\n+          tree.selectRows(3);\n+\n+          Icon passedTestIcon = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+          Icon passedTestFolderIcon = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+          Icon notrunTestFolderIcon = IconFactory.getTestFolderIcon(IconFactory.NOT_RUN, false, true);\n+          Icon notrunTestIcon = IconFactory.getTestIcon(IconFactory.NOT_RUN, false, true);\n+\n+          tree.runTests().waitForDone();\n+\n+          if (tree.getIcon(3) != passedTestIcon) {\n+               errors.add(\"Incorrect icon for path \" + tree.getPathForRow(3) + \", passed icon expected\");\n+          }\n+          if (tree.getIcon(2) != notrunTestIcon) {\n+               errors.add(\"Incorrect icon for path \" + tree.getPathForRow(2) + \", not run icon expected\");\n+          }\n+          if (tree.getIcon(4) != notrunTestIcon) {\n+               errors.add(\"Incorrect icon for path \" + tree.getPathForRow(4) + \", not run icon expected\");\n+          }\n+\n+          if (tree.getIcon(1) != notrunTestFolderIcon) {\n+               errors.add(\"Incorrect icon for path \" + tree.getPathForRow(1) + \", not run icon expected\");\n+          }\n+\n+          tree.selectRows(2, 4, 5, 6, 7);\n+\n+          tree.runTests().waitForDone();\n+\n+          if (tree.getIcon(1) != passedTestFolderIcon) {\n+               errors.add(\"Incorrect icon for path \" + tree.getPathForRow(1) + \", passed icon expected\");\n+          }\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test checks that is case when one of many test is runned in test folder, folder will have 'not run' icon. When all others tests are runned - it should obtain new status.\";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree4.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+public class TestTree5 extends Test {\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          TestTree tree = mainFrame.getTestTree();\n+\n+          tree.click(2);\n+          tree.click(1);\n+\n+          tree.selectRows(1, 2);\n+          TreePath[] selectedPaths = tree.getSelectedRows();\n+\n+          TreePath root = tree.getRoot();\n+          tree.clickPopup(root);\n+          TreePath[] selectedPaths1 = tree.getSelectedRows();\n+          if (selectedPaths.length != selectedPaths1.length) {\n+               errors.add(\"Selection changed when performing right click\");\n+          } else {\n+               for (int i = 0; i < selectedPaths.length; i++) {\n+                    if (!selectedPaths[i].equals(selectedPaths1[i])) {\n+                         errors.add(\"Selection changed when performing right click\");\n+                         break;\n+                    }\n+               }\n+          }\n+\n+                mainFrame.click();\n+          tree.selectRows(1);\n+          tree.clickPopup(root);\n+          selectedPaths = tree.getSelectedRows();\n+          if (selectedPaths.length != 1) {\n+               errors.add(\"Selection has \" + selectedPaths.length + \" elements while expected 1\");\n+          }\n+          if (!selectedPaths[0].equals(root)) {\n+               errors.add(\"Root element \" + root + \" was expected to be selected, found \" + selectedPaths[0]);\n+          }\n+\n+                mainFrame.click();\n+          tree.selectRows(1, 2, 3, 4);\n+          TreePath path = tree.getPathForRow(5);\n+          tree.click(path);\n+          selectedPaths = tree.getSelectedRows();\n+          if (selectedPaths.length != 1) {\n+               errors.add(\"Selection has \" + selectedPaths.length + \" elements while expected 1\");\n+          }\n+          if (!selectedPaths[0].equals(path)) {\n+               errors.add(\"Element \" + path + \" was expected to be selected, found \" + selectedPaths[0]);\n+          }\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test checks that performing right-click when only 1 test is selected will replace selection and in case when many tests are selecter will not replace selection.\";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree5.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"}]}