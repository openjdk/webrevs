{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.javatest.exec.StatusModifierInterface;\n@@ -42,0 +43,2 @@\n+import java.util.Iterator;\n+import java.util.ServiceLoader;\n@@ -211,0 +214,1 @@\n+    private static StatusModifierInterface statusModifier;\n@@ -468,1 +472,1 @@\n-        testResult.setStatus(execStatus);\n+        testResult.setStatus(tryModifyStatus(execStatus, td));\n@@ -480,0 +484,57 @@\n+\n+    \/**\n+     * This method runs the statusModifier stored in the private variable. In case the statusModifier is null\n+     * it calls the method to search a statusModifierInterface implementation.\n+     * @param originalStatus - original status of the testrun\n+     * @param td - description of the test\n+     * @return status after modification (the proposedStatus by default)\n+     *\/\n+    private Status tryModifyStatus(Status originalStatus, TestDescription td){\n+        if (statusModifier == null) {\n+            searchStatusModifier();\n+        }\n+        \/\/in case the status has been modified by this function we want to log it for any user controlling the results.\n+        Status newStatus = statusModifier.modify(originalStatus, td);\n+        if(newStatus != originalStatus){\n+            newStatus = new Status(newStatus.getType(), newStatus.getReason() +\n+                    \" - The status of this test result has been modified by external code.\");\n+        }\n+        return newStatus;\n+    }\n+\n+\n+    \/**\n+     * This method tries to search for alternative implementations of statusModifierInterface. Currently\n+     * only one implementation is allowed to be present at any given time. If no implementation is found\n+     * the method provides a default implementation which returns the status that has been given to it.\n+     *\/\n+    private synchronized void searchStatusModifier(){\n+        ServiceLoader<StatusModifierInterface> loader = ServiceLoader.load(StatusModifierInterface.class);\n+\n+        Iterator<StatusModifierInterface> iterator = loader.iterator();\n+        StatusModifierInterface service = null;\n+\n+        while (iterator.hasNext()) {\n+            if (service != null) {\n+                \/\/ Found more than one implementation, throw an exception\n+                throw new IllegalStateException(\"Multiple implementations of the StatusModifierInterface found!\");\n+            }\n+\n+            service = iterator.next();\n+        }\n+\n+        if (service == null) {\n+            class DefaultModifier implements StatusModifierInterface {\n+\n+\n+                @Override\n+                public Status modify(Status originalStatus, TestDescription td) {\n+                    return originalStatus;\n+                }\n+            }\n+            service = new DefaultModifier();\n+        }\n+\n+        statusModifier = service;\n+    }\n+\n","filename":"src\/com\/sun\/javatest\/Script.java","additions":62,"deletions":1,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.javatest.exec;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.TestDescription;\n+\n+\/**\n+ * Enables users to create their own status modifications for purposes of different testing strategies.\n+ * This allows user to omit certain kinds of failures or pinpoint tests that passed even though the jvm\n+ * crashed in the process without being intended to.\n+ *\/\n+public interface StatusModifierInterface {\n+    Status modify(Status originalStatus, TestDescription td);\n+}\n","filename":"src\/com\/sun\/javatest\/exec\/StatusModifierInterface.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"}]}