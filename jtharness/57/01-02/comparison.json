{"files":[{"patch":"@@ -29,1 +29,1 @@\n-import com.sun.javatest.exec.ResultModifierInterface;\n+import com.sun.javatest.exec.StatusModifierInterface;\n@@ -214,1 +214,1 @@\n-    private static ResultModifierInterface resultModifier;\n+    private static StatusModifierInterface statusModifier;\n@@ -472,1 +472,1 @@\n-        testResult.setStatus(tryModifyResult(execStatus, td));\n+        testResult.setStatus(tryModifyStatus(execStatus, td));\n@@ -486,3 +486,3 @@\n-     * This method runs the resultModifier stored in the private variable. In case the resultModifier is null\n-     * it calls the method to search a resultModifierInterface implementation.\n-     * @param proposedStatus - original status of the testrun\n+     * This method runs the statusModifier stored in the private variable. In case the statusModifier is null\n+     * it calls the method to search a statusModifierInterface implementation.\n+     * @param originalStatus - original status of the testrun\n@@ -492,3 +492,3 @@\n-    private Status tryModifyResult(Status proposedStatus, TestDescription td){\n-        if (resultModifier == null) {\n-            searchResultModifier();\n+    private Status tryModifyStatus(Status originalStatus, TestDescription td){\n+        if (statusModifier == null) {\n+            searchStatusModifier();\n@@ -497,2 +497,2 @@\n-        Status newStatus = resultModifier.modifyStatus(proposedStatus, td);\n-        if(newStatus != proposedStatus){\n+        Status newStatus = statusModifier.modify(originalStatus, td);\n+        if(newStatus != originalStatus){\n@@ -507,1 +507,1 @@\n-     * This method tries to search for alternative implementations of resultModifierInterface. Currently\n+     * This method tries to search for alternative implementations of statusModifierInterface. Currently\n@@ -511,2 +511,2 @@\n-    private synchronized void searchResultModifier(){\n-        ServiceLoader<ResultModifierInterface> loader = ServiceLoader.load(ResultModifierInterface.class);\n+    private synchronized void searchStatusModifier(){\n+        ServiceLoader<StatusModifierInterface> loader = ServiceLoader.load(StatusModifierInterface.class);\n@@ -514,2 +514,2 @@\n-        Iterator<ResultModifierInterface> iterator = loader.iterator();\n-        ResultModifierInterface service = null;\n+        Iterator<StatusModifierInterface> iterator = loader.iterator();\n+        StatusModifierInterface service = null;\n@@ -520,1 +520,1 @@\n-                throw new IllegalStateException(\"Multiple implementations of the ResultModifierInterface found!\");\n+                throw new IllegalStateException(\"Multiple implementations of the StatusModifierInterface found!\");\n@@ -527,1 +527,1 @@\n-            class DefaultModifier implements ResultModifierInterface{\n+            class DefaultModifier implements StatusModifierInterface {\n@@ -531,1 +531,1 @@\n-                public Status modifyStatus(Status originalStatus, TestDescription td) {\n+                public Status modify(Status originalStatus, TestDescription td) {\n@@ -538,1 +538,1 @@\n-        resultModifier = service;\n+        statusModifier = service;\n","filename":"src\/com\/sun\/javatest\/Script.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-public interface ResultModifierInterface {\n-    Status modifyStatus(Status originalStatus, TestDescription td);\n+public interface StatusModifierInterface {\n+    Status modify(Status originalStatus, TestDescription td);\n","filename":"src\/com\/sun\/javatest\/exec\/StatusModifierInterface.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/com\/sun\/javatest\/exec\/ResultModifierInterface.java","status":"renamed"}]}