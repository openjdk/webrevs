{"files":[{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Load;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class Config_Load7 extends Test {\n+\n+    public void testImpl() throws Exception {\n+     JTFrame mainFrame = new JTFrame(true);\n+\n+     mainFrame.openDefaultTestSuite();\n+     addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+     Configuration configuration = mainFrame.getConfiguration();\n+     configuration.load(ConfigTools.CONFIG_NAME, true);\n+\n+     ConfigDialog config = configuration.openByKey();\n+     config.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\n+     verifyOpeningNewConfigFile(config);\n+    }\n+\n+    private boolean verifyOpeningNewConfigFile(ConfigDialog config) {\n+     JListOperator list = new JListOperator(config.getConfigDialog());\n+     list.selectItem(1);\n+     return new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\")).getText().equals(ConfigTools.SECOND_CONFIG_NAME);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+     return \"Load a configuration, open Configuration Editor. Load another configuration from it. Configuration Editor internals should be repainted\";\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load7.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Config_TestTree1 extends Test {\n+     \/**\n+      * This test case verifies that selecting number of tests during execution will\n+      * not change from what was selected.\n+      *\/\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          Configuration conf = mainFrame.getConfiguration();\n+          conf.load(CONFIG_NAME, true);\n+\n+          ConfigDialog cd = conf.openByMenu(true);\n+          ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+\n+          int initRowCount = tree.getRowCount();\n+          SelectionTree stree = tree.getTree();\n+          int initSelected = stree.getSelection().length;\n+          if (initRowCount != 4) {\n+               errors.add(\"Initially there are not 3 visible rows in the tree\");\n+          }\n+          if (initSelected != 1) {\n+               errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+          }\n+\n+          tree.clickOnRow(0);\n+          if (stree.getSelectionRows()[0] != 0) {\n+               errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 0\");\n+          }\n+          tree.clickOnRow(1);\n+          if (stree.getSelectionRows()[0] != 1) {\n+               errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 1\");\n+          }\n+          tree.clickOnRow(2);\n+          if (stree.getSelectionRows()[0] != 2) {\n+               errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 2\");\n+          }\n+\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Visible row count changes after clicking on row\");\n+          }\n+          if (initSelected != stree.getSelection().length) {\n+               errors.add(\"Selected row count changed: was \" + initSelected + \" now \" + stree.getSelection().length);\n+          }\n+\n+          tree.clickOnCheckbox(0);\n+          if (stree.getSelection().length != 0) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected row while 0 expected\");\n+          }\n+          tree.clickOnCheckbox(1);\n+          if (stree.getSelection().length != 1) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected row while 1 expected\");\n+          }\n+          tree.clickOnCheckbox(2);\n+          if (stree.getSelection().length != 2) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected row while 1 expected (root)\");\n+          }\n+\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Visible row count changes after clicking on checkbox\");\n+          }\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != 1) {\n+               errors.add(\"Tree is not collapsed after clicking on first row. Rows visible: \" + tree.getRowCount());\n+          }\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Tree is not expanded after clicking on first row\");\n+          }\n+\n+          tree.clickOnArrow(2);\n+          if (tree.getRowCount() == initRowCount) {\n+               errors.add(\"Tree is not expanded after clicking on 2 row. Rows visible: \" + tree.getRowCount());\n+          }\n+          initRowCount = tree.getRowCount();\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != 1) {\n+               errors.add(\"Tree is not collapsed after clicking on first row. Rows visible: \" + tree.getRowCount());\n+          }\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Tree is not expanded after clicking on first row\");\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree1.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Config_TestTree2 extends Test {\n+     \/**\n+      * This test verifies that multiple tests can be chosen and executed in Test\n+      * Tree by pressing right mouse button -> Execute Tests.\n+      *\/\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          Configuration conf = mainFrame.getConfiguration();\n+          conf.load(CONFIG_NAME, true);\n+\n+          ConfigDialog cd = conf.openByMenu(true);\n+          ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+\n+          int initRowCount = tree.getRowCount();\n+          SelectionTree stree = tree.getTree();\n+          int initSelected = stree.getSelection().length;\n+          if (initRowCount != 4) {\n+               errors.add(\"Initially there are 4 visible rows in the tree\");\n+          }\n+          if (initSelected != 1) {\n+               errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+          }\n+\n+          tree.openContextMenu(-1).pushCollapseAll();\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 3\");\n+          }\n+\n+          tree.openContextMenu(-1).pushExpandAll();\n+          if (tree.getRowCount() != 29) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 29\");\n+          }\n+\n+          tree.openContextMenu(-1).pushCollapseAll();\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 3 (after collapsing)\");\n+          }\n+\n+          tree.openContextMenu(-1).pushDeselectAll();\n+          if (stree.getSelection().length != 0) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 0\");\n+          }\n+\n+          tree.openContextMenu(-1).pushSelectAll();\n+          if (stree.getSelection().length != 1) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 1\");\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree2.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Config_TestTree3 extends Test {\n+     \/**\n+      * This test verifies that multiple test results can be cleared Test Tree by\n+      * pressing right mouse button -> Clear Results.\n+      *\/\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          Configuration conf = mainFrame.getConfiguration();\n+          conf.load(CONFIG_NAME, true);\n+\n+          ConfigDialog cd = conf.openByMenu(true);\n+          ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+\n+          int initRowCount = tree.getRowCount();\n+          SelectionTree stree = tree.getTree();\n+          int initSelected = stree.getSelection().length;\n+          if (initRowCount != 4) {\n+               errors.add(\"Initially there are not 4 visible rows in the tree\");\n+          }\n+          if (initSelected != 1) {\n+               errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+          }\n+\n+          tree.openContextMenu(-1).pushExpandAll();\n+          if (tree.getRowCount() != 29) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 29\");\n+          }\n+\n+          tree.clickOnCheckbox(7);\n+          tree.clickOnCheckbox(8);\n+          if (stree.getSelection().length != 6) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 6\");\n+          }\n+\n+          tree.openContextMenu(9).pushSelectAll();\n+          if (stree.getSelection().length != 7) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 7\");\n+          }\n+\n+          tree.openContextMenu(1).pushDeselectAll();\n+          tree.clickOnCheckbox(10);\n+          if (stree.getSelection().length != 4) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 4\");\n+          }\n+\n+          tree.openContextMenu(0).pushDeselectAll();\n+          if (stree.getSelection().length != 0) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 0\");\n+          }\n+\n+          tree.openContextMenu(3).pushSelectAll();\n+          tree.openContextMenu(4).pushSelectAll();\n+          if (stree.getSelection().length != 2) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 2\");\n+          }\n+\n+          tree.openContextMenu(9).pushCollapseAll();\n+          if (tree.getRowCount() != 25) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 25\");\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree3.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+public class New9 extends New {\n+     \/**\n+      * This test case verifies that creating an existing workdirectory will create\n+      * an error message.\n+      *\/\n+     public static void main(String[] args) {\n+          JUnitCore.main(\"jthtest.gui.New.New9\");\n+     }\n+\n+     @Test\n+     public void testNew9() {\n+          startTestRun(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          pickDefaultTestsuite(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          createConfiguration(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          pickExistingWorkDir(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          new JDialogOperator(mainFrame, \"Error\");\n+     }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/New\/New9.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,258 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Arrays;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuItem;\n+import javax.swing.MenuElement;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import static jthtest.menu.Menu.*;\n+\n+public class Menu01 extends Test {\n+\n+     public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, Exception {\n+          Tools.startJavatestNewDesktop();\n+\n+          JFrameOperator mainFrame = Tools.findMainFrame();\n+          JMenuBarOperator menu = getMenuBar(mainFrame);\n+\n+          MenuElement[] menuElements = menu.getSubElements();\n+          int menuCount = menuElements.length;\n+          if (menuCount != 4) {\n+               StringBuilder message = new StringBuilder(\"Found less then 4 menu elements. Expected \");\n+               message.append(getFileMenuName()).append(\", \");\n+               message.append(getToolsMenuName()).append(\", \");\n+               message.append(getWindowsMenuName()).append(\", \");\n+               message.append(getHelpMenuName());\n+               message.append(\", found: \");\n+               for (int i = 0; i < menuCount; i++) {\n+                    message.append(((JMenuItem) menuElements[i].getComponent()).getText());\n+               }\n+               errors.add(message.toString());\n+          }\n+\n+          if (menuCount > 0) {\n+               JMenuOperator item = new JMenuOperator((JMenu) (menuElements[0].getComponent()));\n+\n+               String menuName = getFileMenuName();\n+               System.out.println(\"menuName\" + menuName);\n+\n+               if (!menuName.equals(item.getText())) {\n+                    errors.add(\"First menu element is not \" + menuName + \". Found \" + item.getText());\n+               } else {\n+                    JMenuItemOperator[] elements = menu.showMenuItems(menuName);\n+                    if (elements.length != 6) {\n+                         StringBuilder message = new StringBuilder(\"Expected 8 File menu subelements: \");\n+                         message.append(getFile_OpenQuickStartMenuName()).append(\", \").append(getFile_OpenMenuName())\n+                                   .append(\", \");\n+                         message.append(getFile_RecentWorkDirectoryMenuName()).append(\", \")\n+                                   .append(getFile_PreferencesMenuName());\n+                         message.append(\", \").append(getFile_CloseMenuName()).append(\", \").append(getFile_ExitMenuName())\n+                                   .append(\". Found: \");\n+                         for (JMenuItemOperator e : elements) {\n+                              message.append(((JMenuItem) e.getComponent()).getText()).append(\"; \");\n+                         }\n+\n+                         errors.add(message.toString());\n+                    }\n+                    if (elements.length > 0) {\n+                         JMenuItem subitem = (JMenuItem) elements[0].getComponent();\n+                         System.out.println(\"subitem.getText()\" + subitem.getText());\n+                         if (!getFile_OpenQuickStartMenuName().equals(subitem.getText())) {\n+                              errors.add(\"First menu subelement of File menu is \" + subitem.getText() + \" while expected \"\n+                                        + getFile_OpenQuickStartMenuName());\n+                         }\n+                    }\n+                    if (elements.length > 1) {\n+                         JMenuItem subitem = (JMenuItem) elements[1].getComponent();\n+                         if (!getFile_OpenMenuName().equals(subitem.getText())) {\n+                              errors.add(\"Second menu subelement of File menu is \" + subitem.getText() + \" while expected \"\n+                                        + getFile_OpenMenuName());\n+                         } else {\n+                              JMenuItemOperator openSubElements[] = menu.showMenuItems(new String[] { menuName, \"Open\" },\n+                                        new Tools.SimpleStringComparator());\n+\n+                              if (openSubElements.length != 2) {\n+                                   errors.add(\"File->Open menu contains \" + openSubElements.length + \" while expected 2. \");\n+                              }\n+\n+                              if (openSubElements.length > 0) {\n+                                   JMenuItemOperator subsubitem = openSubElements[0];\n+                                   if (!getFile_Open_WorkDirectoryMenuName().equals(subsubitem.getText())) {\n+                                        errors.add(\"First menu subelement of File->Open menu is \" + subsubitem.getText()\n+                                                  + \" while expected \" + Menu.getFile_Open_WorkDirectoryMenuName());\n+                                   }\n+                              }\n+                              if (openSubElements.length > 1) {\n+                                   JMenuItemOperator subsubitem = openSubElements[1];\n+                                   if (!getFile_Open_TestSuiteMenuName().equals(subsubitem.getText())) {\n+                                        errors.add(\"First menu subelement of File->Open menu is \" + subsubitem.getText()\n+                                                  + \" while expected \" + Menu.getFile_Open_TestSuiteMenuName());\n+                                   }\n+                              }\n+                         }\n+\n+                    }\n+                    if (elements.length > 2) {\n+                         JMenuItem subitem = (JMenuItem) elements[2].getComponent();\n+                         if (!getFile_RecentWorkDirectoryMenuName().equals(subitem.getText())) {\n+                              errors.add(\"Third menu subelement of File menu is \" + subitem.getText() + \" while expected \"\n+                                        + Menu.getFile_RecentWorkDirectoryMenuName());\n+                         } else {\n+                              MenuElement[] subElements = subitem.getSubElements();\n+                              if (subElements.length != 1) {\n+                                   errors.add(\"File->RecentWorkDirectort menu contains \" + subElements.length\n+                                             + \" subelements while expected 1\");\n+                              }\n+                         }\n+                    }\n+                    if (elements.length > 3) {\n+                         JMenuItem subitem = (JMenuItem) elements[3].getComponent();\n+                         if (!getFile_PreferencesMenuName().equals(subitem.getText())) {\n+                              errors.add(\"Fifth menu subelement of File menu is \" + subitem.getText() + \" while expected \"\n+                                        + Menu.getFile_PreferencesMenuName());\n+                         }\n+                    }\n+                    if (elements.length > 4) {\n+                         JMenuItem subitem = (JMenuItem) elements[4].getComponent();\n+                         if (!getFile_CloseMenuName().equals(subitem.getText())) {\n+                              errors.add(\"Seventh menu subelement of File menu is \" + subitem.getText() + \" while expected \"\n+                                        + Menu.getFile_CloseMenuName());\n+                         }\n+                    }\n+                    if (elements.length > 5) {\n+                         JMenuItem subitem = (JMenuItem) elements[5].getComponent();\n+                         if (!getFile_ExitMenuName().equals(subitem.getText())) {\n+                              errors.add(\"Last menu subelement of File menu is \" + subitem.getText() + \" while expected \"\n+                                        + Menu.getFile_ExitMenuName());\n+                         }\n+                    }\n+               }\n+          }\n+\n+          if (menuCount > 1) {\n+               JMenuItemOperator item = new JMenuItemOperator((JMenuItem) menuElements[1].getComponent());\n+\n+               String menuName = getToolsMenuName();\n+\n+               if (!menuName.equals(item.getText())) {\n+                    errors.add(\"Second menu element is not \" + menuName + \". Found \" + item.getText());\n+               } else {\n+                    JMenuItemOperator[] elements = menu.showMenuItems(menuName, new Tools.SimpleStringComparator());\n+                    System.out.println(elements);\n+                    if (elements.length != 3) {\n+                         errors.add(\"Tools menu contains \" + elements.length + \" while expected 4. \");\n+                    }\n+\n+                    String[] elementsNames = new String[elements.length];\n+                    int i = 0;\n+                    for (JMenuItemOperator op : elements) {\n+                         elementsNames[i++] = op.getText();\n+                    }\n+                    Arrays.sort(elementsNames);\n+                    int num = 0;\n+                    if (elements.length > num) {\n+                         String subitemName = elementsNames[num];\n+                         String name = getTools_AgentMonitorMenuName();\n+                         if (!name.equals(subitemName)) {\n+                              errors.add(\"First menu subelement of Tools menu is \" + subitemName + \" while expected \" + name);\n+                         }\n+                    }\n+                    num = 1;\n+                    if (elements.length > num) {\n+                         String subitemName = elementsNames[num];\n+                         \/\/ String name = getTools_OpenQuickStartWizardMenuName();\n+                         String name = getTools_ReportConverterMenuName();\n+                         if (!name.equals(subitemName)) {\n+                              errors.add(\"First menu subelement of Tools menu is \" + subitemName + \" while expected \" + name);\n+                         }\n+                    }\n+               }\n+          }\n+\n+          if (menuCount > 2) {\n+               JMenuItemOperator item = new JMenuItemOperator((JMenuItem) menuElements[2].getComponent());\n+               String menuName = getWindowsMenuName();\n+               if (!menuName.equals(item.getText())) {\n+                    errors.add(\"Third menu element is not \" + menuName + \". Found \" + item.getText());\n+               }\n+          }\n+\n+          if (menuCount > 3) {\n+               JMenuItemOperator item = new JMenuItemOperator((JMenuItem) menuElements[3].getComponent());\n+\n+               String menuName = getHelpMenuName();\n+\n+               if (!menuName.equals(item.getText())) {\n+                    errors.add(\"Fourth menu element is not \" + menuName + \". Found \" + item.getText());\n+               } else {\n+                    JMenuItemOperator[] elements = menu.showMenuItems(menuName);\n+\n+                    if (elements.length != 3) {\n+                         errors.add(\"Help menu contains \" + elements.length + \" while expected 4. \");\n+                    }\n+\n+                    if (elements.length > 0) {\n+                         JMenuItemOperator subitem = elements[0];\n+                         String name = getHelp_OnlineHelpMenuName();\n+                         if (!name.equals(subitem.getText())) {\n+                              errors.add(\"First menu subelement of menu Help is \" + subitem.getText() + \" while expected \"\n+                                        + name);\n+                         }\n+                    }\n+                    if (elements.length > 1) {\n+                         JMenuItemOperator subitem = elements[1];\n+                         String name = getHelp_AboutJTHarnessMenuName();\n+                         if (!name.equals(subitem.getText())) {\n+                              errors.add(\"Second menu subelement of menu Help is \" + subitem.getText() + \" while expected \"\n+                                        + name);\n+                         }\n+                    }\n+                    if (elements.length > 2) {\n+                         JMenuItemOperator subitem = elements[2];\n+                         String name = getHelp_AboutJVMMenuName();\n+                         if (!name.equals(subitem.getText())) {\n+                              errors.add(\"Third menu subelement of menu Help is \" + subitem.getText() + \" while expected \"\n+                                        + name);\n+                         }\n+                    }\n+               }\n+          }\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test checks menu items in \\\"NewDesktop\\\" JavaTest frame. Tools menu subelements are checked sorted\";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/menu\/Menu01.java","additions":258,"deletions":0,"binary":false,"changes":258,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import static jthtest.menu.Menu.*;\n+\n+\n+public class Menu02 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+     Tools.startJavatestNewDesktop();\n+\n+     JFrameOperator op = Tools.findMainFrame();\n+\n+     getFileMenu(op);\n+     getFile_CloseMenu(op);\n+     getFile_ExitMenu(op);\n+     getFile_OpenMenu(op);\n+     getFile_OpenQuickStartMenu(op);\n+     getFile_Open_TestSuiteMenu(op);\n+     getFile_Open_WorkDirectoryMenu(op);\n+     getFile_PreferencesMenu(op);\n+     getFile_RecentWorkDirectoryMenu(op);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+     return \"This test checks internal methods are working. NewDesktop JavaTest is used\";\n+    }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/menu\/Menu02.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import static jthtest.Tools.*;\n+import static jthtest.menu.Menu.*;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+\n+public class Menu03 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+     startJavatest();\n+\n+     JFrameOperator mainFrame = findMainFrame();\n+     openTestSuite(mainFrame);\n+\n+     JMenuItemOperator item;\n+     getFile_CreateWorkDirectoryMenu(mainFrame);\n+     getConfigureMenu(mainFrame);\n+     item = getConfigure_EditConfigurationMenu(mainFrame);\n+     if(item.isEnabled())\n+         errors.add(\"Configure->Edit Configuration menu is enabled while expected to be disabled\");\n+     item = getConfigure_EditQuickSetMenu(mainFrame);\n+     if(item.isEnabled())\n+         errors.add(\"Configure->Edit Quick Set menu is enabled while expected to be disabled\");\n+     getConfigure_LoadConfigurationMenu(mainFrame);\n+     getConfigure_LoadRecentConfigurationMenu(mainFrame);\n+     getConfigure_NewConfigurationMenu(mainFrame);\n+\n+     getRunTestsMenu(mainFrame);\n+     getRunTests_MonitorProgressMenu(mainFrame);\n+     getRunTests_StartMenu(mainFrame);\n+     getRunTests_StopMenu(mainFrame);\n+\n+     getReportMenu(mainFrame);\n+     getReport_CreateReportMenu(mainFrame);\n+     getReport_OpenReportMenu(mainFrame);\n+\n+     getViewMenu(mainFrame);\n+     getView_ConfigurationMenu(mainFrame);\n+     getView_FilterMenu(mainFrame);\n+     getView_LogsMenu(mainFrame);\n+     getView_PropertiesMenu(mainFrame);\n+     getView_TestSuiteErrorsMenu(mainFrame);\n+\n+    }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/menu\/Menu03.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+\n+import jthtest.tools.JTFrame;\n+import jthtest.workdir.Workdir;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import static jthtest.Tools.*;\n+import static jthtest.menu.Menu.*;\n+\n+public class Menu04 extends Test {\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          if (mainFrame.getFile_CloseMenu().isEnabled()) {\n+               errors.add(\"File->Close menu is enabled when unexpected (NewDesktop)\");\n+          }\n+\n+          mainFrame.openDefaultTestSuite();\n+\n+          if (!mainFrame.getFile_CloseMenu().isEnabled()) {\n+               errors.add(\"File->Close menu is disabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+\n+          if (mainFrame.getConfigure_EditConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->Edit Configuration menu is enabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (mainFrame.getConfigure_EditQuickSetMenu().isEnabled()) {\n+               errors.add(\"Configure->Edit Quick Set menu is enabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->Load Recent Configuration menu is enabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->Load Configuration menu is disabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (!mainFrame.getConfigure_NewConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->New Configuration menu is disabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+\n+          if (mainFrame.getReport_CreateReportMenu().isEnabled()) {\n+               errors.add(\"Report->Create Report menu is enabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (mainFrame.getReport_OpenReportMenu().isEnabled()) {\n+               errors.add(\"Report->Open Report menu is enabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+\n+          if (!mainFrame.getView_PropertiesMenu().isEnabled()) {\n+               errors.add(\"View->Properties menu is disabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (mainFrame.getView_LogsMenu().isEnabled()) {\n+               errors.add(\"View->Logs menu is enabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+          if (!mainFrame.getView_Configuration_ShowChecklistMenu().isEnabled()) {\n+               errors.add(\"View->Configuration->Show Checklist menu is disabled when unexpected (TS selected, no WD, no config)\");\n+          }\n+\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+          if (mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->Load Recent Configuration menu is enabled when unexpected (TS selected, WD created, no config)\");\n+          }\n+\n+          if (!mainFrame.getView_PropertiesMenu().isEnabled()) {\n+               errors.add(\"View->Properties menu is disabled when unexpected (TS selected, WD created, no config)\");\n+          }\n+          if (!mainFrame.getView_LogsMenu().isEnabled()) {\n+               errors.add(\"View->Logs menu is disabled when unexpected (TS selected, WD created, no config)\");\n+          }\n+          if (!mainFrame.getReport_CreateReportMenu().isEnabled()) {\n+               errors.add(\"Report->Create Report menu is disabled when unexpected (TS selected, WD created, no config)\");\n+          }\n+          if (!mainFrame.getReport_OpenReportMenu().isEnabled()) {\n+               errors.add(\"Report->Open Report menu is disabled when unexpected (TS selected, WD created, no config)\");\n+          }\n+          if (mainFrame.getView_Configuration_ShowChecklistMenu().isEnabled()) {\n+               errors.add(\"View->Configuration->Show Checklist menu is enabled when unexpected (TS selected, WD created, no config)\");\n+          }\n+\n+          mainFrame.getConfiguration().load(CONFIG_NAME, true);\n+\n+          if (!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->Load Configuration menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+          }\n+          if (!mainFrame.getConfigure_NewConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->New Configuration menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+          }\n+          if (!mainFrame.getConfigure_EditConfigurationMenu().isEnabled()) {\n+               errors.add(\"Configure->Edit Configuration menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+          }\n+          if (!mainFrame.getConfigure_EditQuickSetMenu().isEnabled()) {\n+               errors.add(\"Configure->Edit Quick Set menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+          }\n+\n+     }\n+\n+     @Override\n+     public String getDescription() {\n+          return \"This test checks that all menu items are enabled\/disabled when it is needed. \";\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/menu\/Menu04.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+\n+public class Menu05 extends Test {\n+\n+    public Menu05() {\n+        depricated = true; \/\/ ConfigDialog is now modal, no need to block menu items\n+    }\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+     mainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+     if(!mainFrame.getConfigure_EditConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Edit Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_EditQuickSetMenu().isEnabled())\n+         errors.add(\"Configure->Edit Quick Set menu is disabled before Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Load Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Load Recent Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_NewConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->New Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+\n+     ConfigDialog cd = mainFrame.getConfiguration().openByMenu(true);\n+\n+     if(mainFrame.getConfigure_EditConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Edit Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+     if(mainFrame.getConfigure_EditQuickSetMenu().isEnabled())\n+         errors.add(\"Configure->Edit Quick Set menu is enabled while Configuration Editor is opened while unexpected\");\n+     if(mainFrame.getConfigure_LoadConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Load Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+     if(mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Load Recent Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+     if(mainFrame.getConfigure_NewConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->New Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+\n+     cd.closeByMenu();\n+\n+     if(!mainFrame.getConfigure_EditConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Edit Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_EditQuickSetMenu().isEnabled())\n+         errors.add(\"Configure->Edit Quick Set menu is disabled after Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Load Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->Load Recent Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+     if(!mainFrame.getConfigure_NewConfigurationMenu().isEnabled())\n+         errors.add(\"Configure->New Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+     return \"This test checks that all Configure menu subelements are disabled when Configuration Editor is opened and are enabled after it's closing\";\n+    }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/menu\/Menu05.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}