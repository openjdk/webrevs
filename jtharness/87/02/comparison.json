{"files":[{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011,2024 Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import java.util.Arrays;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.Task.Waiter;\n+import jthtest.tools.TestTree;\n+\n+public abstract class TT_SelectionCE extends Test {\n+\n+     \/**\n+      * This is a base class for TT_SelectionCE which contains TestTree functions\n+      *\/\n+\n+     public TT_SelectionCE(String description, int[] rows) {\n+          this.testDescription = description;\n+          this.rows = rows;\n+     }\n+\n+     protected abstract void make();\n+\n+     protected void openTree() {\n+          tree.click(2);\n+          tree.click(1);\n+     }\n+\n+     protected boolean check(int init[], int res[]) {\n+          return !Arrays.equals(init, res);\n+     }\n+\n+     @Override\n+     public final void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+          tree = mainFrame.getTestTree();\n+\n+          openTree();\n+          tree.selectRows(rows);\n+          make();\n+\n+          \/\/ waiter 10 sec\n+          Waiter waiter = new Waiter() {\n+\n+               @Override\n+               protected boolean check() {\n+                    res = tree.getSelectedRowsIndexes();\n+                    if (res == null) {\n+                         return false;\n+                    }\n+                    Arrays.sort(res);\n+\n+                    return !TT_SelectionCE.this.check(rows, res);\n+               }\n+\n+               int[] res = {};\n+\n+               @Override\n+               protected String getTimeoutExceptionDescription() {\n+                    return String.format(\n+                              \"Error occured - selection lost. Initialy selected rows: %s. After %s selected rows: %s\",\n+                              Arrays.toString(rows), testDescription, Arrays.toString(res));\n+               }\n+          };\n+\n+          waiter.getResult();\n+     }\n+\n+     protected TestTree tree;\n+     private String testDescription = \"\";\n+     private int[] rows;\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011,2024 Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+public class TT_SelectionCE1 extends TT_SelectionCE {\n+\n+     \/**\n+      * Check that selection on TestTree on main page doesn't dissapear when opening\n+      * Create New Configuration and closing it without saving. Includes root path.\n+      *\/\n+\n+     public TT_SelectionCE1() {\n+          super(\"creating and cancelling ConfigEditor\", new int[] { 0, 1, 2, 3, 5, 8, 10 });\n+          knownFail = true;\n+     }\n+\n+     public void make() {\n+          ConfigDialog cd = mainFrame.getConfiguration().create(true);\n+          cd.closeByMenu();\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE1.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+public class TestTree11 extends Test {\n+\n+     \/**\n+      * This test clears all the tree, then twisely runs all tests by menu and checks\n+      * icons\n+      *\/\n+\n+     private TestTree tree;\n+     private Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+     private Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          tree = mainFrame.getTestTree();\n+\n+          tree.click(2);\n+          tree.click(5);\n+          tree.click(4);\n+          tree.click(3);\n+          tree.click(1);\n+\n+          tree.clearResults();\n+          mainFrame.runTests().waitForDone();\n+          checkTests();\n+          mainFrame.runTests().waitForDone();\n+          checkTests();\n+     }\n+\n+     private void checkTests() {\n+          for (int i = 1; i < tree.getVisibleRowCount(); i++) {\n+               TreePath path = tree.getPathForRow(i);\n+               Icon icon = tree.getIcon(path);\n+               if (i == 0) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Tree root icon is not failed as expected\");\n+                    }\n+               } else if (i == 8) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 9) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 12) {\n+                    if (icon != failedTest) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               }\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree11.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+public class TestTree12 extends Test {\n+\n+     \/**\n+      * This test clears all the tree, then twisely runs all tests by menu clearing\n+      * results between the attempts and checks icons\n+      *\/\n+\n+     private TestTree tree;\n+     private Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+     private Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          tree = mainFrame.getTestTree();\n+\n+          tree.click(2);\n+          tree.click(5);\n+          tree.click(4);\n+          tree.click(3);\n+          tree.click(1);\n+\n+          tree.clearResults();\n+          mainFrame.runTests().waitForDone();\n+          checkTests();\n+          tree.clearResults();\n+          mainFrame.runTests().waitForDone();\n+          checkTests();\n+     }\n+\n+     private void checkTests() {\n+          for (int i = 1; i < tree.getVisibleRowCount(); i++) {\n+               TreePath path = tree.getPathForRow(i);\n+               Icon icon = tree.getIcon(path);\n+               if (i == 0) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Tree root icon is not failed as expected\");\n+                    }\n+               } else if (i == 8) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 9) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 12) {\n+                    if (icon != failedTest) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               }\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree12.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+public class TestTree13 extends Test {\n+\n+     \/**\n+      * This test clears all the tree, then runs all tests firstly by menu and then\n+      * by mouse and checks icons\n+      *\/\n+\n+     private TestTree tree;\n+     private Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+     private Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          tree = mainFrame.getTestTree();\n+\n+          tree.click(2);\n+          tree.click(5);\n+          tree.click(4);\n+          tree.click(3);\n+          tree.click(1);\n+\n+          tree.clearResults();\n+          mainFrame.runTests().waitForDone();\n+          checkTests();\n+          tree.runAllTests().waitForDone();\n+          checkTests();\n+     }\n+\n+     private void checkTests() {\n+          for (int i = 1; i < tree.getVisibleRowCount(); i++) {\n+               TreePath path = tree.getPathForRow(i);\n+               Icon icon = tree.getIcon(path);\n+               if (i == 0) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Tree root icon is not failed as expected\");\n+                    }\n+               } else if (i == 8) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 9) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 12) {\n+                    if (icon != failedTest) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               }\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree13.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+public class TestTree14 extends Test {\n+\n+     \/**\n+      * This test clears all the tree, then runs all tests firstly by menu and then\n+      * after clearing by mouse and checks icons\n+      *\/\n+\n+     private TestTree tree;\n+     private Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+     private Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+     private Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+          tree = mainFrame.getTestTree();\n+\n+          tree.click(2);\n+          tree.click(5);\n+          tree.click(4);\n+          tree.click(3);\n+          tree.click(1);\n+\n+          tree.clearResults();\n+          mainFrame.runTests().waitForDone();\n+          checkTests();\n+          tree.clearResults();\n+          tree.runAllTests().waitForDone();\n+          checkTests();\n+     }\n+\n+     private void checkTests() {\n+          for (int i = 1; i < tree.getVisibleRowCount(); i++) {\n+               TreePath path = tree.getPathForRow(i);\n+               Icon icon = tree.getIcon(path);\n+               if (i == 0) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Tree root icon is not failed as expected\");\n+                    }\n+               } else if (i == 8) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 9) {\n+                    if (icon != failedTestFolder) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               } else if (i == 12) {\n+                    if (icon != failedTest) {\n+                         errors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+                    }\n+               }\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree14.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"}]}