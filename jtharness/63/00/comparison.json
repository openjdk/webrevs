{"files":[{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Load;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class Config_Load7 extends Test {\n+\n+    public void testImpl() throws Exception {\n+     JTFrame mainFrame = new JTFrame(true);\n+\n+     mainFrame.openDefaultTestSuite();\n+     addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+     Configuration configuration = mainFrame.getConfiguration();\n+     configuration.load(ConfigTools.CONFIG_NAME, true);\n+\n+     ConfigDialog config = configuration.openByKey();\n+     config.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\n+     verifyOpeningNewConfigFile(config);\n+    }\n+\n+    private boolean verifyOpeningNewConfigFile(ConfigDialog config) {\n+     JListOperator list = new JListOperator(config.getConfigDialog());\n+     list.selectItem(1);\n+     return new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\")).getText().equals(ConfigTools.SECOND_CONFIG_NAME);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+     return \"Load a configuration, open Configuration Editor. Load another configuration from it. Configuration Editor internals should be repainted\";\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load7.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Config_TestTree1 extends Test {\n+     \/**\n+      * This test case verifies that selecting number of tests during execution will\n+      * not change from what was selected.\n+      *\/\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          Configuration conf = mainFrame.getConfiguration();\n+          conf.load(CONFIG_NAME, true);\n+\n+          ConfigDialog cd = conf.openByMenu(true);\n+          ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+\n+          int initRowCount = tree.getRowCount();\n+          SelectionTree stree = tree.getTree();\n+          int initSelected = stree.getSelection().length;\n+          if (initRowCount != 4) {\n+               errors.add(\"Initially there are not 3 visible rows in the tree\");\n+          }\n+          if (initSelected != 1) {\n+               errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+          }\n+\n+          tree.clickOnRow(0);\n+          if (stree.getSelectionRows()[0] != 0) {\n+               errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 0\");\n+          }\n+          tree.clickOnRow(1);\n+          if (stree.getSelectionRows()[0] != 1) {\n+               errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 1\");\n+          }\n+          tree.clickOnRow(2);\n+          if (stree.getSelectionRows()[0] != 2) {\n+               errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 2\");\n+          }\n+\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Visible row count changes after clicking on row\");\n+          }\n+          if (initSelected != stree.getSelection().length) {\n+               errors.add(\"Selected row count changed: was \" + initSelected + \" now \" + stree.getSelection().length);\n+          }\n+\n+          tree.clickOnCheckbox(0);\n+          if (stree.getSelection().length != 0) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected row while 0 expected\");\n+          }\n+          tree.clickOnCheckbox(1);\n+          if (stree.getSelection().length != 1) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected row while 1 expected\");\n+          }\n+          tree.clickOnCheckbox(2);\n+          if (stree.getSelection().length != 2) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected row while 1 expected (root)\");\n+          }\n+\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Visible row count changes after clicking on checkbox\");\n+          }\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != 1) {\n+               errors.add(\"Tree is not collapsed after clicking on first row. Rows visible: \" + tree.getRowCount());\n+          }\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Tree is not expanded after clicking on first row\");\n+          }\n+\n+          tree.clickOnArrow(2);\n+          if (tree.getRowCount() == initRowCount) {\n+               errors.add(\"Tree is not expanded after clicking on 2 row. Rows visible: \" + tree.getRowCount());\n+          }\n+          initRowCount = tree.getRowCount();\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != 1) {\n+               errors.add(\"Tree is not collapsed after clicking on first row. Rows visible: \" + tree.getRowCount());\n+          }\n+\n+          tree.clickOnArrow(0);\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"Tree is not expanded after clicking on first row\");\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree1.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Config_TestTree2 extends Test {\n+     \/**\n+      * This test verifies that multiple tests can be chosen and executed in Test\n+      * Tree by pressing right mouse button -> Execute Tests.\n+      *\/\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          Configuration conf = mainFrame.getConfiguration();\n+          conf.load(CONFIG_NAME, true);\n+\n+          ConfigDialog cd = conf.openByMenu(true);\n+          ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+\n+          int initRowCount = tree.getRowCount();\n+          SelectionTree stree = tree.getTree();\n+          int initSelected = stree.getSelection().length;\n+          if (initRowCount != 4) {\n+               errors.add(\"Initially there are 4 visible rows in the tree\");\n+          }\n+          if (initSelected != 1) {\n+               errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+          }\n+\n+          tree.openContextMenu(-1).pushCollapseAll();\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 3\");\n+          }\n+\n+          tree.openContextMenu(-1).pushExpandAll();\n+          if (tree.getRowCount() != 29) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 29\");\n+          }\n+\n+          tree.openContextMenu(-1).pushCollapseAll();\n+          if (tree.getRowCount() != initRowCount) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 3 (after collapsing)\");\n+          }\n+\n+          tree.openContextMenu(-1).pushDeselectAll();\n+          if (stree.getSelection().length != 0) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 0\");\n+          }\n+\n+          tree.openContextMenu(-1).pushSelectAll();\n+          if (stree.getSelection().length != 1) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 1\");\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree2.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Config_TestTree3 extends Test {\n+     \/**\n+      * This test verifies that multiple test results can be cleared Test Tree by\n+      * pressing right mouse button -> Clear Results.\n+      *\/\n+     @Override\n+     public void testImpl() throws Exception {\n+          mainFrame = new JTFrame(true);\n+          mainFrame.openDefaultTestSuite();\n+          addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+          Configuration conf = mainFrame.getConfiguration();\n+          conf.load(CONFIG_NAME, true);\n+\n+          ConfigDialog cd = conf.openByMenu(true);\n+          ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+\n+          int initRowCount = tree.getRowCount();\n+          SelectionTree stree = tree.getTree();\n+          int initSelected = stree.getSelection().length;\n+          if (initRowCount != 4) {\n+               errors.add(\"Initially there are not 4 visible rows in the tree\");\n+          }\n+          if (initSelected != 1) {\n+               errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+          }\n+\n+          tree.openContextMenu(-1).pushExpandAll();\n+          if (tree.getRowCount() != 29) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 29\");\n+          }\n+\n+          tree.clickOnCheckbox(7);\n+          tree.clickOnCheckbox(8);\n+          if (stree.getSelection().length != 6) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 6\");\n+          }\n+\n+          tree.openContextMenu(9).pushSelectAll();\n+          if (stree.getSelection().length != 7) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 7\");\n+          }\n+\n+          tree.openContextMenu(1).pushDeselectAll();\n+          tree.clickOnCheckbox(10);\n+          if (stree.getSelection().length != 4) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 4\");\n+          }\n+\n+          tree.openContextMenu(0).pushDeselectAll();\n+          if (stree.getSelection().length != 0) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 0\");\n+          }\n+\n+          tree.openContextMenu(3).pushSelectAll();\n+          tree.openContextMenu(4).pushSelectAll();\n+          if (stree.getSelection().length != 2) {\n+               errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 2\");\n+          }\n+\n+          tree.openContextMenu(9).pushCollapseAll();\n+          if (tree.getRowCount() != 25) {\n+               errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 25\");\n+          }\n+     }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree3.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+public class New9 extends New {\n+     \/**\n+      * This test case verifies that creating an existing workdirectory will create\n+      * an error message.\n+      *\/\n+     public static void main(String[] args) {\n+          JUnitCore.main(\"jthtest.gui.New.New9\");\n+     }\n+\n+     @Test\n+     public void testNew9() {\n+          startTestRun(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          pickDefaultTestsuite(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          createConfiguration(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          pickExistingWorkDir(quickStartDialog);\n+\n+          next(quickStartDialog);\n+\n+          new JDialogOperator(mainFrame, \"Error\");\n+     }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/New\/New9.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}