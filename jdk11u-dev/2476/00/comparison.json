{"files":[{"patch":"@@ -1,61 +0,0 @@\n-\/*\n- * Copyright (c) 2006, 2017, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug     6395981 6458819 7025784 8028543 8028544 8193291\n- * @summary JavaCompilerTool and Tool must specify version of JLS and JVMS\n- * @author  Peter von der Ah\\u00e9\n- * @modules java.compiler\n- *          jdk.compiler\n- * @run main\/fail T6395981\n- * @run main\/fail T6395981 RELEASE_3 RELEASE_5 RELEASE_6\n- * @run main\/fail T6395981 RELEASE_0 RELEASE_1 RELEASE_2 RELEASE_3 RELEASE_4 RELEASE_5 RELEASE_6\n- * @run main T6395981 RELEASE_3 RELEASE_4 RELEASE_5 RELEASE_6 RELEASE_7 RELEASE_8 RELEASE_9 RELEASE_10 RELEASE_11\n- *\/\n-\n-import java.util.EnumSet;\n-import java.util.Set;\n-import javax.lang.model.SourceVersion;\n-import javax.tools.Tool;\n-import javax.tools.ToolProvider;\n-import static javax.lang.model.SourceVersion.*;\n-\n-public class T6395981 {\n-    public static void main(String... args) {\n-        Tool compiler = ToolProvider.getSystemJavaCompiler();\n-        Set<SourceVersion> expected = EnumSet.noneOf(SourceVersion.class);\n-        for (String arg : args)\n-            expected.add(SourceVersion.valueOf(arg));\n-        Set<SourceVersion> found = compiler.getSourceVersions();\n-        Set<SourceVersion> notExpected = EnumSet.copyOf(found);\n-        for (SourceVersion version : expected) {\n-            if (!found.contains(version))\n-                throw new AssertionError(\"Expected source version not found: \" + version);\n-            else\n-                notExpected.remove(version);\n-        }\n-        if (!notExpected.isEmpty())\n-            throw new AssertionError(\"Unexpected source versions: \" + notExpected);\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/api\/T6395981.java","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2006, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     6395981 6458819 7025784 8028543 8028544 8193291\n+ * @summary JavaCompilerTool and Tool must specify version of JLS and JVMS\n+ * @author  Peter von der Ah\\u00e9\n+ * @modules java.compiler\n+ *          jdk.compiler\n+ * @run main\/fail TestGetSourceVersions\n+ * @run main\/fail TestGetSourceVersions RELEASE_3  RELEASE_5  RELEASE_6\n+ * @run main\/fail TestGetSourceVersions RELEASE_0  RELEASE_1  RELEASE_2  RELEASE_3  RELEASE_4\n+ *                                      RELEASE_5  RELEASE_6\n+ * @run main TestGetSourceVersions      RELEASE_3  RELEASE_4  RELEASE_5  RELEASE_6  RELEASE_7\n+ *                                      RELEASE_8  RELEASE_9  RELEASE_10 RELEASE_11\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+import javax.lang.model.SourceVersion;\n+import javax.tools.Tool;\n+import javax.tools.ToolProvider;\n+import static javax.lang.model.SourceVersion.*;\n+\n+public class TestGetSourceVersions {\n+    public static void main(String... args) {\n+        Tool compiler = ToolProvider.getSystemJavaCompiler();\n+        Set<SourceVersion> expected = EnumSet.noneOf(SourceVersion.class);\n+        for (String arg : args)\n+            expected.add(SourceVersion.valueOf(arg));\n+        Set<SourceVersion> found = compiler.getSourceVersions();\n+        Set<SourceVersion> notExpected = EnumSet.copyOf(found);\n+        for (SourceVersion version : expected) {\n+            if (!found.contains(version))\n+                throw new AssertionError(\"Expected source version not found: \" + version);\n+            else\n+                notExpected.remove(version);\n+        }\n+        if (!notExpected.isEmpty())\n+            throw new AssertionError(\"Unexpected source versions: \" + notExpected);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetSourceVersions.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}