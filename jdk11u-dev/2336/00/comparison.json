{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## libpng v1.6.39\n+## libpng v1.6.40\n@@ -12,2 +12,2 @@\n-Copyright (c) 1995-2022 The PNG Reference Library Authors.\n-Copyright (c) 2018-2022 Cosmin Truta\n+Copyright (c) 1995-2023 The PNG Reference Library Authors.\n+Copyright (c) 2018-2023 Cosmin Truta\n@@ -178,0 +178,1 @@\n+ * Philippe Antoine\n@@ -196,0 +197,1 @@\n+   - Wan-Teh Chang\n","filename":"src\/java.desktop\/share\/legal\/libpng.md","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-    all configurable options can be selected from command-line instead\n+    all configurable options can be selected from command line instead\n@@ -945,1 +945,1 @@\n-  Fixed seqence-point bug in contrib\/pngminus\/png2pnm (Martin Zinser)\n+  Fixed sequence-point bug in contrib\/pngminus\/png2pnm (Martin Zinser)\n@@ -2298,1 +2298,1 @@\n-  Reformated sources in libpng style (3-space indentation, comment format)\n+  Reformatted sources in libpng style (3-space indentation, comment format)\n@@ -2664,1 +2664,1 @@\n-  Added defineable PNG_USER_CHUNK_CACHE_MAX, PNG_USER_CHUNK_MALLOC_MAX,\n+  Added definable PNG_USER_CHUNK_CACHE_MAX, PNG_USER_CHUNK_MALLOC_MAX,\n@@ -3922,1 +3922,1 @@\n-    option is now done automagically only when required, so that commandline\n+    option is now done automagically only when required, so that command-line\n@@ -4055,1 +4055,1 @@\n-  Fixed PNG_LIBPNG_BUILD_BASE_TYPE definition. \n+  Fixed PNG_LIBPNG_BUILD_BASE_TYPE definition.\n@@ -4965,1 +4965,1 @@\n-    \n+\n@@ -5456,1 +5456,1 @@\n-    in the BigEndian tests by not testing it, making the BE code the same \n+    in the BigEndian tests by not testing it, making the BE code the same\n@@ -5520,1 +5520,1 @@\n-    were accidentally removed from libpng-1.6.17. \n+    were accidentally removed from libpng-1.6.17.\n@@ -5930,1 +5930,1 @@\n-  Replaced local eXIf_buf with info_ptr-eXIf_buf in png_handle_eXIf().\n+  Replaced local eXIf_buf with info_ptr->eXIf_buf in png_handle_eXIf().\n@@ -5953,1 +5953,1 @@\n-  \n+\n@@ -6124,0 +6124,8 @@\n+Version 1.6.40 [June 21, 2023]\n+  Fixed the eXIf chunk multiplicity checks.\n+  Fixed a memory leak in pCAL processing.\n+  Corrected the validity report about tRNS inside png_get_valid().\n+  Fixed various build issues on *BSD, Mac and Windows.\n+  Updated the configurations and the scripts for continuous integration.\n+  Cleaned up the code, the build scripts, and the documentation.\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/CHANGES","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * Copyright (c) 1995-2022 The PNG Reference Library Authors.\n- * Copyright (c) 2018-2022 Cosmin Truta.\n+ * Copyright (c) 1995-2023 The PNG Reference Library Authors.\n+ * Copyright (c) 2018-2023 Cosmin Truta.\n@@ -134,1 +134,1 @@\n-be appreciated.\n\\ No newline at end of file\n+be appreciated.\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/LICENSE","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-README for libpng version 1.6.39\n+README for libpng version 1.6.40\n@@ -4,2 +4,2 @@\n-See the note about version numbers near the top of png.h.\n-See INSTALL for instructions on how to install libpng.\n+See the note about version numbers near the top of `png.h`.\n+See `INSTALL` for instructions on how to install libpng.\n@@ -7,3 +7,3 @@\n-Libpng comes in several distribution formats.  Get libpng-*.tar.gz or\n-libpng-*.tar.xz if you want UNIX-style line endings in the text files,\n-or lpng*.7z or lpng*.zip if you want DOS-style line endings.\n+Libpng comes in several distribution formats.  Get `libpng-*.tar.gz`\n+or `libpng-*.tar.xz` if you want UNIX-style line endings in the text\n+files, or `lpng*.7z` or `lpng*.zip` if you want DOS-style line endings.\n@@ -11,7 +11,5 @@\n-Version 0.89 was the first official release of libpng.  Don't let the\n-fact that it's the first release fool you.  The libpng library has been\n-in extensive use and testing since mid-1995.  By late 1997 it had\n-finally gotten to the stage where there hadn't been significant\n-changes to the API in some time, and people have a bad feeling about\n-libraries with versions < 1.0.  Version 1.0.0 was released in\n-March 1998.\n+For a detailed description on using libpng, read `libpng-manual.txt`.\n+For examples of libpng in a program, see `example.c` and `pngtest.c`.\n+For usage information and restrictions (what little they are) on libpng,\n+see `png.h`.  For a description on using zlib (the compression library\n+used by libpng) and zlib's restrictions, see `zlib.h`.\n@@ -19,56 +17,1 @@\n-****\n-Note that some of the changes to the png_info structure render this\n-version of the library binary incompatible with libpng-0.89 or\n-earlier versions if you are using a shared library.  The type of the\n-\"filler\" parameter for png_set_filler() has changed from png_byte to\n-png_uint_32, which will affect shared-library applications that use\n-this function.\n-\n-To avoid problems with changes to the internals of the png info_struct,\n-new APIs have been made available in 0.95 to avoid direct application\n-access to info_ptr.  These functions are the png_set_<chunk> and\n-png_get_<chunk> functions.  These functions should be used when\n-accessing\/storing the info_struct data, rather than manipulating it\n-directly, to avoid such problems in the future.\n-\n-It is important to note that the APIs did not make current programs\n-that access the info struct directly incompatible with the new\n-library, through libpng-1.2.x.  In libpng-1.4.x, which was meant to\n-be a transitional release, members of the png_struct and the\n-info_struct can still be accessed, but the compiler will issue a\n-warning about deprecated usage.  Since libpng-1.5.0, direct access\n-to these structs is not allowed, and the definitions of the structs\n-reside in private pngstruct.h and pnginfo.h header files that are not\n-accessible to applications.  It is strongly suggested that new\n-programs use the new APIs (as shown in example.c and pngtest.c), and\n-older programs be converted to the new format, to facilitate upgrades\n-in the future.\n-****\n-\n-Additions since 0.90 include the ability to compile libpng as a\n-Windows DLL, and new APIs for accessing data in the info struct.\n-Experimental functions include the ability to set weighting and cost\n-factors for row filter selection, direct reads of integers from buffers\n-on big-endian processors that support misaligned data access, faster\n-methods of doing alpha composition, and more accurate 16->8 bit color\n-conversion.\n-\n-The additions since 0.89 include the ability to read from a PNG stream\n-which has had some (or all) of the signature bytes read by the calling\n-application.  This also allows the reading of embedded PNG streams that\n-do not have the PNG file signature.  As well, it is now possible to set\n-the library action on the detection of chunk CRC errors.  It is possible\n-to set different actions based on whether the CRC error occurred in a\n-critical or an ancillary chunk.\n-\n-For a detailed description on using libpng, read libpng-manual.txt.\n-For examples of libpng in a program, see example.c and pngtest.c.  For\n-usage information and restrictions (what little they are) on libpng,\n-see png.h.  For a description on using zlib (the compression library\n-used by libpng) and zlib's restrictions, see zlib.h\n-\n-I have included a general makefile, as well as several machine and\n-compiler specific ones, but you may have to modify one for your own\n-needs.\n-\n-You should use zlib 1.0.4 or later to run this, but it MAY work with\n+You should use zlib 1.0.4 or later to run this, but it _may_ work with\n@@ -81,1 +24,1 @@\n-replacement for fread() and fwrite(), if you are so inclined.\n+replacement for `fread()` and `fwrite()`, if you are so inclined.\n@@ -84,1 +27,1 @@\n-https:\/\/zlib.net.\n+https:\/\/zlib.net .\n@@ -90,2 +33,2 @@\n-This code is currently being archived at libpng.sourceforge.io in the\n-[DOWNLOAD] area, and at http:\/\/libpng.download\/src .\n+This code is currently being archived at https:\/\/libpng.sourceforge.io\n+in the download area, and at http:\/\/libpng.download\/src .\n@@ -97,2 +40,2 @@\n-Send comments\/corrections\/commendations to png-mng-implement at\n-lists.sourceforge.net (subscription required; visit\n+Send comments, corrections and commendations to `png-mng-implement`\n+at `lists.sourceforge.net`.  (Subscription is required; visit\n@@ -100,1 +43,6 @@\n-to subscribe).\n+to subscribe.)\n+\n+Send general questions about the PNG specification to `png-mng-misc`\n+at `lists.sourceforge.net`.  (Subscription is required; visit\n+https:\/\/lists.sourceforge.net\/lists\/listinfo\/png-mng-misc\n+to subscribe.)\n@@ -102,4 +50,53 @@\n-Send general questions about the PNG specification to png-mng-misc\n-at lists.sourceforge.net (subscription required; visit\n-https:\/\/lists.sourceforge.net\/lists\/listinfo\/png-mng-misc to\n-subscribe).\n+Historical notes\n+----------------\n+\n+The libpng library has been in extensive use and testing since mid-1995.\n+Version 0.89, published a year later, was the first official release.\n+By late 1997, it had finally gotten to the stage where there hadn't\n+been significant changes to the API in some time, and people have a bad\n+feeling about libraries with versions below 1.0.  Version 1.0.0 was\n+released in March 1998.\n+\n+Note that some of the changes to the `png_info` structure render this\n+version of the library binary incompatible with libpng-0.89 or\n+earlier versions if you are using a shared library.  The type of the\n+`filler` parameter for `png_set_filler()` has changed from `png_byte`\n+to `png_uint_32`, which will affect shared-library applications that\n+use this function.\n+\n+To avoid problems with changes to the internals of the `info_struct`,\n+new APIs have been made available in 0.95 to avoid direct application\n+access to `info_ptr`.  These functions are the `png_set_<chunk>` and\n+`png_get_<chunk>` functions.  These functions should be used when\n+accessing\/storing the `info_struct` data, rather than manipulating it\n+directly, to avoid such problems in the future.\n+\n+It is important to note that the APIs did not make current programs\n+that access the info struct directly incompatible with the new\n+library, through libpng-1.2.x.  In libpng-1.4.x, which was meant to\n+be a transitional release, members of the `png_struct` and the\n+`info_struct` can still be accessed, but the compiler will issue a\n+warning about deprecated usage.  Since libpng-1.5.0, direct access\n+to these structs is not allowed, and the definitions of the structs\n+reside in private `pngstruct.h` and `pnginfo.h` header files that are\n+not accessible to applications.  It is strongly suggested that new\n+programs use the new APIs (as shown in `example.c` and `pngtest.c`),\n+and older programs be converted to the new format, to facilitate\n+upgrades in the future.\n+\n+The additions since 0.89 include the ability to read from a PNG stream\n+which has had some (or all) of the signature bytes read by the calling\n+application.  This also allows the reading of embedded PNG streams that\n+do not have the PNG file signature.  As well, it is now possible to set\n+the library action on the detection of chunk CRC errors.  It is possible\n+to set different actions based on whether the CRC error occurred in a\n+critical or an ancillary chunk.\n+\n+The additions since 0.90 include the ability to compile libpng as a\n+Windows DLL, and new APIs for accessing data in the `info_struct`.\n+Experimental functions included the ability to set weighting and cost\n+factors for row filter selection, direct reads of integers from buffers\n+on big-endian processors that support misaligned data access, faster\n+methods of doing alpha composition, and more accurate 16-to-8 bit color\n+conversion.  Some of these experimental functions, such as the weighted\n+filter heuristics, have since been removed.\n@@ -107,1 +104,2 @@\n-Files in this distribution:\n+Files included in this distribution\n+-----------------------------------\n@@ -156,1 +154,1 @@\n-        examples\/     =>  Example programs\n+        examples\/     =>  Examples of libpng usage\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/README","additions":80,"deletions":82,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2022 Cosmin Truta\n+ * Copyright (c) 2018-2023 Cosmin Truta\n@@ -45,1 +45,1 @@\n-typedef png_libpng_version_1_6_39 Your_png_h_is_not_version_1_6_39;\n+typedef png_libpng_version_1_6_40 Your_png_h_is_not_version_1_6_40;\n@@ -846,2 +846,2 @@\n-      \"libpng version 1.6.39\" PNG_STRING_NEWLINE \\\n-      \"Copyright (c) 2018-2022 Cosmin Truta\" PNG_STRING_NEWLINE \\\n+      \"libpng version 1.6.40\" PNG_STRING_NEWLINE \\\n+      \"Copyright (c) 2018-2023 Cosmin Truta\" PNG_STRING_NEWLINE \\\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/png.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * libpng version 1.6.39 - November 20, 2022\n+ * libpng version 1.6.40\n@@ -34,1 +34,1 @@\n- * Copyright (c) 2018-2022 Cosmin Truta\n+ * Copyright (c) 2018-2023 Cosmin Truta\n@@ -46,1 +46,1 @@\n- *   libpng versions 1.6.36, December 2018, through 1.6.39, November 2022:\n+ *   libpng versions 1.6.36, December 2018, through 1.6.40, June 2023:\n@@ -58,2 +58,2 @@\n- *  * Copyright (c) 1995-2022 The PNG Reference Library Authors.\n- *  * Copyright (c) 2018-2022 Cosmin Truta.\n+ *  * Copyright (c) 1995-2023 The PNG Reference Library Authors.\n+ *  * Copyright (c) 2018-2023 Cosmin Truta.\n@@ -270,1 +270,1 @@\n- *    1.6.39                  16    10639  16.so.16.39[.0]\n+ *    1.6.40                  16    10640  16.so.16.40[.0]\n@@ -309,2 +309,2 @@\n-#define PNG_LIBPNG_VER_STRING \"1.6.39\"\n-#define PNG_HEADER_VERSION_STRING \" libpng version 1.6.39 - November 20, 2022\\n\"\n+#define PNG_LIBPNG_VER_STRING \"1.6.40\"\n+#define PNG_HEADER_VERSION_STRING \" libpng version 1.6.40 - June 21, 2023\\n\"\n@@ -318,1 +318,1 @@\n-#define PNG_LIBPNG_VER_RELEASE 39\n+#define PNG_LIBPNG_VER_RELEASE 40\n@@ -349,1 +349,1 @@\n-#define PNG_LIBPNG_VER 10639 \/* 1.6.39 *\/\n+#define PNG_LIBPNG_VER 10640 \/* 1.6.40 *\/\n@@ -459,1 +459,1 @@\n-typedef char* png_libpng_version_1_6_39;\n+typedef char* png_libpng_version_1_6_40;\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/png.h","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * libpng version 1.6.39\n+ * libpng version 1.6.40\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngconf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018 Cosmin Truta\n+ * Copyright (c) 2018-2023 Cosmin Truta\n@@ -52,0 +52,10 @@\n+   {\n+#ifdef PNG_READ_tRNS_SUPPORTED\n+      \/* png_handle_PLTE() may have canceled a valid tRNS chunk but left the\n+       * 'valid' flag for the detection of duplicate chunks. Do not report a\n+       * valid tRNS chunk in this case.\n+       *\/\n+      if (flag == PNG_INFO_tRNS && png_ptr->num_trans == 0)\n+         return(0);\n+#endif\n+\n@@ -53,0 +63,1 @@\n+   }\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngget.c","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-\/* libpng version 1.6.39 *\/\n+\/* libpng version 1.6.40 *\/\n@@ -36,1 +36,1 @@\n-\/* Copyright (c) 2018-2022 Cosmin Truta *\/\n+\/* Copyright (c) 2018-2023 Cosmin Truta *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pnglibconf.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2022 Cosmin Truta\n+ * Copyright (c) 2018-2023 Cosmin Truta\n@@ -657,1 +657,1 @@\n-                   \/*             0x4000U (unused) *\/\n+#define PNG_WROTE_eXIf            0x4000U\n@@ -1941,1 +1941,1 @@\n-\/* Result codes for the parser (boolean - true meants ok, false means\n+\/* Result codes for the parser (boolean - true means ok, false means\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngpriv.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2022 Cosmin Truta\n+ * Copyright (c) 2018-2023 Cosmin Truta\n@@ -168,1 +168,1 @@\n-    png_bytep eXIf_buf)\n+    png_bytep exif)\n@@ -172,1 +172,1 @@\n-  PNG_UNUSED(eXIf_buf)\n+  PNG_UNUSED(exif)\n@@ -177,1 +177,1 @@\n-    png_uint_32 num_exif, png_bytep eXIf_buf)\n+    png_uint_32 num_exif, png_bytep exif)\n@@ -179,1 +179,1 @@\n-   int i;\n+   png_bytep new_exif;\n@@ -183,1 +183,2 @@\n-   if (png_ptr == NULL || info_ptr == NULL)\n+   if (png_ptr == NULL || info_ptr == NULL ||\n+       (png_ptr->mode & PNG_WROTE_eXIf) != 0)\n@@ -186,5 +187,1 @@\n-   if (info_ptr->exif)\n-   {\n-      png_free(png_ptr, info_ptr->exif);\n-      info_ptr->exif = NULL;\n-   }\n+   new_exif = png_voidcast(png_bytep, png_malloc_warn(png_ptr, num_exif));\n@@ -192,6 +189,1 @@\n-   info_ptr->num_exif = num_exif;\n-\n-   info_ptr->exif = png_voidcast(png_bytep, png_malloc_warn(png_ptr,\n-       info_ptr->num_exif));\n-\n-   if (info_ptr->exif == NULL)\n+   if (new_exif == NULL)\n@@ -203,1 +195,1 @@\n-   info_ptr->free_me |= PNG_FREE_EXIF;\n+   memcpy(new_exif, exif, (size_t)num_exif);\n@@ -205,2 +197,1 @@\n-   for (i = 0; i < (int) info_ptr->num_exif; i++)\n-      info_ptr->exif[i] = eXIf_buf[i];\n+   png_free_data(png_ptr, info_ptr, PNG_FREE_EXIF, 0);\n@@ -208,0 +199,3 @@\n+   info_ptr->num_exif = num_exif;\n+   info_ptr->exif = new_exif;\n+   info_ptr->free_me |= PNG_FREE_EXIF;\n@@ -268,1 +262,0 @@\n-\n@@ -272,2 +265,0 @@\n-   info_ptr->free_me |= PNG_FREE_HIST;\n-\n@@ -277,0 +268,1 @@\n+   info_ptr->free_me |= PNG_FREE_HIST;\n@@ -398,0 +390,2 @@\n+   info_ptr->free_me |= PNG_FREE_PCAL;\n+\n@@ -414,1 +408,0 @@\n-\n@@ -426,1 +419,0 @@\n-\n@@ -444,1 +436,0 @@\n-\n@@ -452,1 +443,0 @@\n-   info_ptr->free_me |= PNG_FREE_PCAL;\n@@ -509,1 +499,1 @@\n-      png_free (png_ptr, info_ptr->scal_s_width);\n+      png_free(png_ptr, info_ptr->scal_s_width);\n@@ -513,1 +503,0 @@\n-\n@@ -519,1 +508,0 @@\n-   info_ptr->valid |= PNG_INFO_sCAL;\n@@ -521,0 +509,1 @@\n+   info_ptr->valid |= PNG_INFO_sCAL;\n@@ -656,0 +645,1 @@\n+\n@@ -658,1 +648,0 @@\n-\n@@ -660,1 +649,0 @@\n-\n@@ -1051,1 +1039,0 @@\n-          info_ptr->valid |= PNG_INFO_tRNS;\n@@ -1053,0 +1040,1 @@\n+          info_ptr->valid |= PNG_INFO_tRNS;\n@@ -1085,1 +1073,0 @@\n-      info_ptr->valid |= PNG_INFO_tRNS;\n@@ -1087,0 +1074,1 @@\n+      info_ptr->valid |= PNG_INFO_tRNS;\n@@ -1120,1 +1108,0 @@\n-\n@@ -1125,0 +1112,1 @@\n+\n@@ -1278,1 +1266,0 @@\n-\n@@ -1283,0 +1270,1 @@\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngset.c","additions":24,"deletions":36,"binary":false,"changes":60,"status":"modified"}]}