{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,3 +59,1 @@\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -386,2 +384,3 @@\n-        String nssLibDir = fetchNssLib(osid);\n-        if (nssLibDir == null) {\n+        Path libraryName = Path.of(System.mapLibraryName(library));\n+        Path nssLibPath = fetchNssLib(osid, libraryName);\n+        if (nssLibPath == null) {\n@@ -391,8 +390,1 @@\n-\n-        String libraryName = System.mapLibraryName(library);\n-        Path libPath = Paths.get(nssLibDir).resolve(libraryName);\n-        if (!Files.exists(libPath)) {\n-            throw new SkippedException(\"NSS library \\\"\" + libraryName + \"\\\" was not found in \" + nssLibDir);\n-        }\n-\n-        return libPath;\n+        return nssLibPath;\n@@ -837,1 +829,1 @@\n-    private static String fetchNssLib(String osId) {\n+    private static Path fetchNssLib(String osId, Path libraryName) {\n@@ -840,1 +832,1 @@\n-                return fetchNssLib(WINDOWS_X64.class);\n+                return fetchNssLib(WINDOWS_X64.class, libraryName);\n@@ -843,1 +835,1 @@\n-                return fetchNssLib(MACOSX_X64.class);\n+                return fetchNssLib(MACOSX_X64.class, libraryName);\n@@ -846,1 +838,1 @@\n-                return fetchNssLib(MACOSX_AARCH64.class);\n+                return fetchNssLib(MACOSX_AARCH64.class, libraryName);\n@@ -852,1 +844,1 @@\n-                    return fetchNssLib(LINUX_X64.class);\n+                    return fetchNssLib(LINUX_X64.class, libraryName);\n@@ -859,1 +851,1 @@\n-                    return fetchNssLib(LINUX_AARCH64.class);\n+                    return fetchNssLib(LINUX_AARCH64.class, libraryName);\n@@ -866,2 +858,2 @@\n-    private static String fetchNssLib(Class<?> clazz) {\n-        String path = null;\n+    private static Path fetchNssLib(Class<?> clazz, Path libraryName) {\n+        Path path = null;\n@@ -869,4 +861,4 @@\n-            path = ArtifactResolver.resolve(clazz).entrySet().stream()\n-                    .findAny().get().getValue() + File.separator + \"nss\"\n-                    + File.separator + \"lib\" + File.separator;\n-        } catch (ArtifactResolverException e) {\n+            Path p = ArtifactResolver.resolve(clazz).entrySet().stream()\n+                    .findAny().get().getValue();\n+            path = findNSSLibrary(p, libraryName);\n+        } catch (ArtifactResolverException | IOException e) {\n@@ -886,0 +878,10 @@\n+    private static Path findNSSLibrary(Path path, Path libraryName) throws IOException {\n+        try(Stream<Path> files = Files.find(path, 10,\n+                (tp, attr) -> tp.getFileName().equals(libraryName))) {\n+\n+            return files.findAny()\n+                        .orElseThrow(() -> new SkippedException(\n+                        \"NSS library \\\"\" + libraryName + \"\\\" was not found in \" + path));\n+        }\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":28,"deletions":26,"binary":false,"changes":54,"status":"modified"}]}