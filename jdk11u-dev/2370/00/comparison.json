{"files":[{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+  @test\n+  @bug 4173633\n+  @summary Test for infinite recursion when JMenu with separator\n+  @run main bug4173633\n+*\/\n+\n+import javax.swing.JMenu;\n+\n+public class bug4173633 {\n+    public static void main(String[] args) {\n+        JMenu m = new JMenu(\"bug4173633\");\n+        m.addSeparator();\n+        if (m.getItem(0) == m) {\n+            throw new RuntimeException(\"BUG 4173633 FAILED\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4173633.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4186641 4242461\n+  @summary JMenu.getPopupMenuOrigin() protected (not privet) now.\n+  @key headful\n+  @run main bug4186641\n+*\/\n+\n+import java.awt.Point;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+\n+\n+public class bug4186641 {\n+\n+    volatile static JFrame fr;\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            init();\n+            if (fr != null) {\n+                fr.dispose();\n+            }\n+        });\n+    }\n+\n+    public static void init() {\n+        class TestJMenu extends JMenu {\n+            public TestJMenu() {\n+                super(\"Test\");\n+            }\n+\n+            void test() {\n+                Point testpoint = getPopupMenuOrigin();\n+            }\n+        }\n+\n+        TestJMenu mnu = new TestJMenu();\n+        fr = new JFrame(\"bug4186641\");\n+        JMenuBar mb = new JMenuBar();\n+        fr.setJMenuBar(mb);\n+        mb.add(mnu);\n+        JMenuItem mi = new JMenuItem(\"test\");\n+        mnu.add(mi);\n+        fr.setSize(100,100);\n+        fr.setVisible(true);\n+        mnu.setVisible(true);\n+\n+        mnu.test();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4186641.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4219523\n+  @summary Tests if JMenu completely uninstalls UI\n+  @run main bug4219523\n+*\/\n+\n+import java.awt.Insets;\n+\n+import javax.swing.JMenuItem;\n+import javax.swing.plaf.basic.BasicMenuItemUI;\n+\n+\n+public class bug4219523 {\n+    public static void main(String args[]) {\n+        class TestMenuItem extends JMenuItem {\n+            public int SetMarginCalls;\n+            TestMenuItem(){\n+                super();\n+                SetMarginCalls = 0;\n+            }\n+            public void setMargin(Insets m){\n+                if (m == null) SetMarginCalls++;\n+                super.setMargin(m);\n+            }\n+        }\n+        BasicMenuItemUI bmiui = new BasicMenuItemUI();\n+        TestMenuItem mi = new TestMenuItem();\n+        bmiui.installUI(mi);\n+        int installCall = mi.SetMarginCalls;\n+        bmiui.uninstallUI(mi);\n+        if (mi.SetMarginCalls <= installCall) {\n+            throw new Error(\"Test failed: Uninstall UI does \" +\n+                    \"not uninstall DefaultMargin properties\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4219523.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 5013739\n+  @summary MNEMONIC CONFLICTS IN DISABLED\/HIDDEN MENU ITEMS\n+  @library ..\/regtesthelpers\n+  @build JRobot\n+  @key headful\n+  @run main bug5013739\n+*\/\n+\n+import java.awt.Component;\n+import java.awt.Point;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.KeyEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+\n+public class bug5013739 {\n+\n+    static boolean passed = true;\n+    static JFrame mainFrame;\n+    static JMenu file;\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            mainFrame = new JFrame(\"Bug5013739\");\n+            JMenuBar mb = new JMenuBar();\n+            mainFrame.setJMenuBar(mb);\n+            file = new JMenu(\"File\");\n+            JMenuItem about = new JMenuItem(\"About\");\n+            about.setMnemonic('A');\n+            about.addActionListener(new AbstractAction() {\n+                public void actionPerformed(ActionEvent evt) {\n+                    passed = false;\n+                }\n+            });\n+            file.add(about);\n+            about.setVisible(false);\n+            file.add(\"Open\");\n+            file.add(\"Close\");\n+            file.setMnemonic('F');\n+            mb.add(file);\n+            mainFrame.pack();\n+            mainFrame.setVisible(true);\n+            Util.blockTillDisplayed(mainFrame);\n+        });\n+\n+        try {\n+            JRobot robo = JRobot.getRobot();\n+            robo.delay(500);\n+            robo.clickMouseOn(file);\n+            robo.hitKey(KeyEvent.VK_A);\n+            robo.delay(1000);\n+        } finally {\n+            if (mainFrame != null) {\n+                SwingUtilities.invokeAndWait(() -> mainFrame.dispose());\n+            }\n+        }\n+        if (!passed) {\n+            throw new RuntimeException(\"Hidden menu item is selectable \"+\n+                    \"via mnemonic. Test failed.\");\n+        }\n+    }\n+}\n+\n+class Util {\n+    public static Point blockTillDisplayed(Component comp) {\n+        Point p = null;\n+        while (p == null) {\n+            try {\n+                p = comp.getLocationOnScreen();\n+            } catch (IllegalStateException e) {\n+                try {\n+                    Thread.sleep(1000);\n+                } catch (InterruptedException ie) {\n+                }\n+            }\n+        }\n+        return p;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug5013739.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"}]}