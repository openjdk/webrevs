{"files":[{"patch":"@@ -327,0 +327,2 @@\n+        actionMap.put(\"aquaOpenPopupOrhighlightLast\", openPopupOrHighlightLast);\n+        actionMap.put(\"aquaOpenPopupOrhighlightFirst\", openPopupOrHighlightFirst);\n@@ -585,0 +587,21 @@\n+    @SuppressWarnings(\"serial\") \/\/ anonymous class\n+    private final Action openPopupOrHighlightLast = new ComboBoxAction() {\n+        @Override\n+        void performComboBoxAction(final AquaComboBoxUI ui) {\n+            final int size = listBox.getModel().getSize();\n+            listBox.setSelectedIndex(size - 1);\n+            listBox.ensureIndexIsVisible(size - 1);\n+            comboBox.setSelectedIndex(ui.getPopup().getList().getSelectedIndex());\n+        }\n+    };\n+\n+    @SuppressWarnings(\"serial\") \/\/ anonymous class\n+    private final Action openPopupOrHighlightFirst = new ComboBoxAction() {\n+        @Override\n+        void performComboBoxAction(final AquaComboBoxUI ui) {\n+           listBox.setSelectedIndex(0);\n+           listBox.ensureIndexIsVisible(0);\n+           comboBox.setSelectedIndex(ui.getPopup().getList().getSelectedIndex());\n+        }\n+    };\n+\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxUI.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -223,0 +223,4 @@\n+            \"alt DOWN\", \"aquaOpenPopupOrhighlightLast\",\n+            \"alt KP_DOWN\", \"aquaOpenPopupOrhighlightLast\",\n+            \"alt UP\", \"aquaOpenPopupOrhighlightFirst\",\n+            \"alt KP_UP\", \"aquaOpenPopupOrhighlightFirst\",\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaKeyBindings.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+ * @bug 7148092\n+ * @requires (os.family == \"mac\")\n+ * @summary Tests that alt+down arrow pulls down JComboBox popup\n+ * @key headful\n+ * @run main TestAltUpDownComboBox\n+*\/\n+\n+import java.awt.Container;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.BoxLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JComboBox;\n+import javax.swing.SwingUtilities;\n+\n+public class TestAltUpDownComboBox {\n+\n+    private static JFrame frame;\n+    private static JComboBox combo;\n+\n+    public static void main(String[] argv) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"\");\n+                Object[] fruits = {\"Banana\", \"Pear\", \"Apple\"};\n+                combo = new JComboBox(fruits);\n+                Container pane = frame.getContentPane();\n+                pane.setLayout(new BoxLayout(pane, BoxLayout.X_AXIS));\n+                pane.add(combo);\n+\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+            robot.delay(1000);\n+\n+            if (!combo.isPopupVisible()) {\n+                throw new RuntimeException(\"comboBox is not visible\");\n+            }\n+\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+            robot.delay(1000);\n+\n+            if (combo.getSelectedIndex() != combo.getItemCount() - 1) {\n+                System.out.println(combo.getSelectedIndex());\n+                throw new RuntimeException(\"Alt+Down did not select last entry\");\n+            }\n+\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_UP);\n+            robot.keyRelease(KeyEvent.VK_UP);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+            robot.delay(1000);\n+\n+            if (combo.getSelectedIndex() != 0) {\n+                System.out.println(combo.getSelectedIndex());\n+                throw new RuntimeException(\"Alt+Up did not select first entry\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/aqua\/TestAltUpDownComboBox.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}