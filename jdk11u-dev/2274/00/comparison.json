{"files":[{"patch":"@@ -709,1 +709,0 @@\n-javax\/swing\/plaf\/basic\/Test6984643.java 8198340 windows-all\n@@ -729,1 +728,0 @@\n-javax\/swing\/JMenuItem\/6249972\/bug6249972.java 8233640 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n- * @library ..\/..\/..\/..\/lib\/testlibrary\n- * @build ExtendedRobot\n@@ -39,0 +37,4 @@\n+import java.awt.event.InputEvent;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n@@ -42,2 +44,2 @@\n-\n-    private JFrame frame;\n+    private static JFrame frame;\n+    private static Robot robot;\n@@ -46,0 +48,2 @@\n+    private volatile Point p = null;\n+    private volatile Dimension size = null;\n@@ -48,2 +52,12 @@\n-        bug6249972 bugTest = new bug6249972();\n-        bugTest.test();\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n+            bug6249972 bugTest = new bug6249972();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            bugTest.test();\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            }\n+        }\n@@ -53,22 +67,18 @@\n-        SwingUtilities.invokeAndWait(\n-                new Runnable() {\n-                    public void run() {\n-                        frame = new JFrame(\"bug6249972\");\n-                        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-\n-                        JMenuBar bar = new JMenuBar();\n-                        frame.setJMenuBar(bar);\n-\n-                        menu = new JMenu(\"Problem\");\n-                        bar.add(menu);\n-\n-                        JMenuItem item = new JMenuItem(\"JMenuItem(String,'z')\", 'z');\n-                        item.addActionListener(bug6249972.this);\n-                        menu.add(item);\n-\n-                        frame.setLocationRelativeTo(null);\n-                        frame.pack();\n-                        frame.setVisible(true);\n-                    }\n-                }\n-        );\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame(\"bug6249972\");\n+            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+            JMenuBar bar = new JMenuBar();\n+            frame.setJMenuBar(bar);\n+\n+            menu = new JMenu(\"Problem\");\n+            bar.add(menu);\n+\n+            JMenuItem item = new JMenuItem(\"JMenuItem(String,'z')\", 'z');\n+            item.addActionListener(bug6249972.this);\n+            menu.add(item);\n+\n+            frame.setLocationRelativeTo(null);\n+            frame.pack();\n+            frame.setVisible(true);\n+        });\n@@ -79,4 +89,4 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n-        robot.waitForIdle();\n-        java.awt.Point p = menu.getLocationOnScreen();\n-        java.awt.Dimension size = menu.getSize();\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = menu.getLocationOnScreen();\n+            size = menu.getSize();\n+        });\n@@ -86,2 +96,3 @@\n-        robot.click();\n-        robot.delay(100);\n+        robot.waitForIdle();\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -90,1 +101,3 @@\n-        robot.type(KeyEvent.VK_Z);\n+        robot.delay(100);\n+        robot.keyPress(KeyEvent.VK_Z);\n+        robot.keyRelease(KeyEvent.VK_Z);\n@@ -93,1 +106,1 @@\n-        frame.dispose(); \/\/ Try to stop the event dispatch thread\n+        robot.delay(1000);\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/6249972\/bug6249972.java","additions":49,"deletions":36,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+    private static JFrame frame;\n@@ -49,1 +50,1 @@\n-        robot.setAutoDelay(50);\n+        robot.setAutoDelay(100);\n@@ -52,1 +53,1 @@\n-\n+            @Override\n@@ -59,0 +60,1 @@\n+        robot.delay(1000);\n@@ -60,2 +62,3 @@\n-        Point point = getClickPoint();\n-        robot.mouseMove(point.x, point.y);\n+        try {\n+            Point point = getClickPoint();\n+            robot.mouseMove(point.x, point.y);\n@@ -63,3 +66,3 @@\n-        \/\/ click count 3\n-        click(1);\n-        assertNotEditing();\n+            \/\/ click count 3\n+            click(1);\n+            assertNotEditing();\n@@ -67,2 +70,2 @@\n-        click(2);\n-        assertNotEditing();\n+            click(2);\n+            assertNotEditing();\n@@ -70,4 +73,4 @@\n-        click(3);\n-        assertEditing();\n-        cancelCellEditing();\n-        assertNotEditing();\n+            click(3);\n+            assertEditing();\n+            cancelCellEditing();\n+            assertNotEditing();\n@@ -75,2 +78,2 @@\n-        click(4);\n-        checkSelectedText(FIRST);\n+            click(4);\n+            checkSelectedText(FIRST);\n@@ -78,2 +81,2 @@\n-        click(5);\n-        checkSelectedText(ALL);\n+            click(5);\n+            checkSelectedText(ALL);\n@@ -81,2 +84,2 @@\n-        \/\/ click count 4\n-        setClickCountToStart(4);\n+            \/\/ click count 4\n+            setClickCountToStart(4);\n@@ -84,2 +87,2 @@\n-        click(1);\n-        assertNotEditing();\n+            click(1);\n+            assertNotEditing();\n@@ -87,2 +90,2 @@\n-        click(2);\n-        assertNotEditing();\n+            click(2);\n+            assertNotEditing();\n@@ -90,2 +93,2 @@\n-        click(3);\n-        assertNotEditing();\n+            click(3);\n+            assertNotEditing();\n@@ -93,4 +96,4 @@\n-        click(4);\n-        assertEditing();\n-        cancelCellEditing();\n-        assertNotEditing();\n+            click(4);\n+            assertEditing();\n+            cancelCellEditing();\n+            assertNotEditing();\n@@ -98,2 +101,2 @@\n-        click(5);\n-        checkSelectedText(FIRST);\n+            click(5);\n+            checkSelectedText(FIRST);\n@@ -101,2 +104,2 @@\n-        click(6);\n-        checkSelectedText(ALL);\n+            click(6);\n+            checkSelectedText(ALL);\n@@ -104,3 +107,3 @@\n-        \/\/ start path editing\n-        startPathEditing();\n-        assertEditing();\n+            \/\/ start path editing\n+            startPathEditing();\n+            assertEditing();\n@@ -108,2 +111,2 @@\n-        click(1);\n-        checkSelection(null);\n+            click(1);\n+            checkSelection(null);\n@@ -111,2 +114,2 @@\n-        click(2);\n-        checkSelection(FIRST);\n+            click(2);\n+            checkSelection(FIRST);\n@@ -114,2 +117,7 @@\n-        click(3);\n-        checkSelection(ALL);\n+            click(3);\n+            checkSelection(ALL);\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            }\n+        }\n@@ -121,2 +129,3 @@\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n@@ -151,1 +160,1 @@\n-        JFrame frame = new JFrame();\n+        frame = new JFrame();\n@@ -161,0 +170,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JTree\/6263446\/bug6263446.java","additions":55,"deletions":45,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        SwingUtilities.invokeLater(new Runnable() {\n+        SwingUtilities.invokeAndWait(new Runnable() {\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/Test6984643.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}