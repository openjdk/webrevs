{"files":[{"patch":"@@ -4,1 +4,1 @@\n-version=11.0.25\n+version=11.0.26\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-DEFAULT_VERSION_UPDATE=25\n+DEFAULT_VERSION_UPDATE=26\n@@ -36,1 +36,1 @@\n-DEFAULT_VERSION_DATE=2024-10-15\n+DEFAULT_VERSION_DATE=2025-01-21\n","filename":"make\/autoconf\/version-numbers","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @test TestStressG1Humongous\n+ * @test\n@@ -34,1 +34,28 @@\n- * @run driver\/timeout=1300 gc.stress.TestStressG1Humongous\n+ * @run driver\/timeout=180 gc.stress.TestStressG1Humongous 4 3 1.1 120\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.gc.G1\n+ * @requires !vm.flightRecorder\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver\/timeout=180 gc.stress.TestStressG1Humongous 16 5 2.1 120\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.gc.G1\n+ * @requires !vm.flightRecorder\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver\/timeout=180 gc.stress.TestStressG1Humongous 32 4 0.6 120\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.gc.G1\n+ * @requires !vm.flightRecorder\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver\/timeout=900 gc.stress.TestStressG1Humongous 1 7 0.6 600\n@@ -51,0 +78,4 @@\n+        if (args.length != 4) {\n+            throw new IllegalArgumentException(\"Test expects 4 arguments\");\n+        }\n+\n@@ -53,6 +84,0 @@\n-        \/\/ Heap size, region size, threads, humongous size, timeout\n-        run(heapSize, 4, 3, 1.1, 120);\n-        run(heapSize, 16, 5, 2.1, 120);\n-        run(heapSize, 32, 4, 0.6, 120);\n-        run(heapSize, 1, 7, 0.6, 600);\n-    }\n@@ -60,2 +85,6 @@\n-    private static void run(int heapSize, int regionSize, int threads, double humongousSize, int timeout)\n-            throws Exception {\n+        \/\/ Region size, threads, humongous size, and timeout passed as @run arguments\n+        int regionSize = Integer.parseInt(args[0]);\n+        int threads = Integer.parseInt(args[1]);\n+        double humongousSize = Double.parseDouble(args[2]);\n+        int timeout = Integer.parseInt(args[3]);\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Humongous.java","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -1,43 +0,0 @@\n-<html>\n-<!--\n-  Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n-  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-  This code is free software; you can redistribute it and\/or modify it\n-  under the terms of the GNU General Public License version 2 only, as\n-  published by the Free Software Foundation.\n-\n-  This code is distributed in the hope that it will be useful, but WITHOUT\n-  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-  version 2 for more details (a copy is included in the LICENSE file that\n-  accompanied this code).\n-\n-  You should have received a copy of the GNU General Public License version\n-  2 along with this work; if not, write to the Free Software Foundation,\n-  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n-  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-  or visit www.oracle.com if you need additional information or have any\n-  questions.\n-  -->\n-\n-<!--  \n-  @test\n-  @bug 6243382 8006070\n-  @summary Dragging of mouse outside of a List and Choice area don't work properly on XAWT\n-  @author Dmitry.Cherepanov@SUN.COM area=awt.list\n-  @run applet\/manual=yesno MouseDraggedOutCauseScrollingTest.html\n-  -->\n-<head>\n-<title> ManualYesNoTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>ManualYesNoTest<br>Bug ID: <\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"MouseDraggedOutCauseScrollingTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/List\/MouseDraggedOutCauseScrollingTest\/MouseDraggedOutCauseScrollingTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-  test\n+  @test\n@@ -28,2 +28,3 @@\n-  @author Dmitry.Cherepanov@SUN.COM area=awt.list\n-  @run applet\/manual=yesno MouseDraggedOutCauseScrollingTest.html\n+  @requires (os.family == \"linux\")\n+  @library \/java\/awt\/regtesthelpers\n+  @run main\/manual MouseDraggedOutCauseScrollingTest\n@@ -32,2 +33,5 @@\n-import java.applet.Applet;\n-import java.awt.*;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.List;\n+import java.awt.Toolkit;\n@@ -35,5 +39,1 @@\n-public class MouseDraggedOutCauseScrollingTest extends Applet\n-{\n-    Choice choice;\n-    List singleList;\n-    List multipleList;\n+public class MouseDraggedOutCauseScrollingTest {\n@@ -41,3 +41,3 @@\n-    public void init()\n-    {\n-        this.setLayout (new GridLayout (1, 3));\n+    static Frame createUI() {\n+        Frame frame = new Frame(\"MouseDraggedOutCausesScrollingTest\");\n+        frame.setLayout(new GridLayout(1, 3));\n@@ -45,3 +45,3 @@\n-        choice = new Choice();\n-        singleList = new List(3, false);\n-        multipleList = new List(3, true);\n+        Choice choice = new Choice();\n+        List singleList = new List(3, false);\n+        List multipleList = new List(3, true);\n@@ -62,3 +62,6 @@\n-        this.add(choice);\n-        this.add(singleList);\n-        this.add(multipleList);\n+        frame.add(choice);\n+        frame.add(singleList);\n+        frame.add(multipleList);\n+        frame.setSize(400, 100);\n+        return frame;\n+    }\n@@ -66,0 +69,1 @@\n+    public static void main(String[] args) throws Exception {\n@@ -67,0 +71,1 @@\n+\n@@ -68,29 +73,2 @@\n-            String[] instructions =\n-            {\n-                \"This test is not applicable to the current platform. Press PASS\"\n-            };\n-            Sysout.createDialogWithInstructions( instructions );\n-        } else {\n-            String[] instructions =\n-            {\n-                \"0) Please note, that this is only Motif\/XAWT test. At first, make the applet active\",\n-                \"1.1) Click on the choice\",\n-                \"1.2) Press the left button of the mouse and keep on any item of the choice, for example 5\",\n-                \"1.3) Drag mouse out of the area of the unfurled list, at the same time hold the X coordinate of the mouse position about the same\",\n-                \"1.4) To make sure, that when the Y coordinate of the mouse position higher of the upper bound of the list then scrolling UP of the list and selected item changes on the upper. If not, the test failed\",\n-                \"1.5) To make sure, that when the Y coordinate of the mouse position under of the lower bound of the list then scrolling DOWN of the list and selected item changes on the lower. If not, the test failed\",\n-                \"-----------------------------------\",\n-                \"2.1) Click on the single list\",\n-                \"2.2) Press the left button of the mouse and keep on any item of the list, for example 5\",\n-                \"2.3) Drag mouse out of the area of the unfurled list, at the same time hold the X coordinate of the mouse position about the same\",\n-                \"2.4) To make sure, that when the Y coordinate of the mouse position higher of the upper bound of the list then scrolling UP of the list and selected item changes on the upper. If not, the test failed\",\n-                \"2.5) To make sure, that when the Y coordinate of the mouse position under of the lower bound of the list then scrolling DOWN of the list and selected item changes on the lower. If not, the test failed\",\n-                \"-----------------------------------\",\n-                \"3.1) Click on the multiple list\",\n-                \"3.2) Press the left button of the mouse and keep on any item of the list, for example 5\",\n-                \"3.3) Drag mouse out of the area of the unfurled list, at the same time hold the X coordinate of the mouse position about the same\",\n-                \"3.4) To make sure, that when the Y coordinate of the mouse position higher of the upper bound of the list then scrolling of the list NO OCCURED and selected item NO CHANGES on the upper. If not, the test failed\",\n-                \"3.5) To make sure, that when the Y coordinate of the mouse position under of the lower bound of the list then scrolling of the list NO OCCURED and selected item NO CHANGES on the lower. If not, the test failed\",\n-                \"4) Test passed.\"\n-            };\n-            Sysout.createDialogWithInstructions( instructions );\n+              System.out.println(INAPPLICABLE);\n+              return;\n@@ -99,145 +77,8 @@\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        setSize (400,100);\n-        setVisible(true);\n-        validate();\n-\n-    }\/\/ start()\n-\n-}\/\/ class ManualYesNoTest\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n+        PassFailJFrame\n+            .builder()\n+            .instructions(INSTRUCTIONS)\n+            .rows(40)\n+            .columns(70)\n+            .testUI(MouseDraggedOutCauseScrollingTest::createUI)\n+            .build()\n+            .awaitAndCheck();\n@@ -246,1 +87,38 @@\n-}\/\/ TestDialog  class\n+    static final String INAPPLICABLE = \"The test is not applicable to the current platform. Test PASSES.\";\n+    static final String INSTRUCTIONS = \"0) Please note, that this is an XAWT\/Linux only test. First, make the test window is active.\\n\" +\n+            \"-----------------------------------\\n\" +\n+            \"1.1) Click on the Choice.\\n\" +\n+            \"1.2) Press and hold down the left button of the mouse to select (eg) item 5 in the choice.\\n\" +\n+            \"1.3) Drag the mouse vertically out of the area of the open list,\\n\" +\n+            \"     keeping the X coordinate of the mouse position about the same.\\n\" +\n+            \"1.4) Check that when the Y coordinate of the mouse position is higher than the upper bound of the list\\n\" +\n+            \"     then the list continues to scrolls UP and the selected item changes at the top until you reach the topmost item.\\n\" +\n+            \"     If not, the test failed. Press FAIL.\\n\" +\n+            \"1.5) Check that when the Y coordinate of the mouse position is lower than the lower bound of the list\\n\" +\n+            \"     then the list continues to scroll DOWN and the selected item changes at the bottom until you reach the bottommost item.\\n\" +\n+            \"     If not, the test failed. Press FAIL.\\n\" +\n+            \"-----------------------------------\\n\" +\n+            \"2.1) Click on the Single List.\\n\" +\n+            \"2.2) Press and hold down the left button of the mouse to select (eg) item 5 in the list.\\n\" +\n+            \"2.3) Drag the mouse vertically out of the area of the open list,\\n\" +\n+            \"     keeping the X coordinate of the mouse position about the same.\\n\" +\n+            \"2.4) Check that when the Y coordinate of the mouse position is higher than the upper bound of the list\\n\" +\n+            \"     then the list continues to scrolls UP and the selected item changes at the top until you reach the topmost item.\\n\" +\n+            \"     If not, the test failed. Press FAIL.\\n\" +\n+            \"2.5) Check that when the Y coordinate of the mouse position is lower than the lower bound of the list\\n\" +\n+            \"     then the list continues to scroll DOWN and the selected item changes at the bottom until you reach the bottommost item.\\n\" +\n+            \"     If not, the test failed. Press FAIL.\\n\" +\n+            \"-----------------------------------\\n\" +\n+            \"3.1) Click on the Multiple List.\\n\" +\n+            \"3.2) Press and hold down the left button of the mouse to select (eg) item 5 in the list.\\n\" +\n+            \"3.3) Drag the mouse vertically out of the area of the open list,\\n\" +\n+            \"     keeping the X coordinate of the mouse position about the same.\\n\" +\n+            \"3.4) Check that when the Y coordinate of the mouse is higher than the upper bound of the list\\n\" +\n+            \"     that scrolling of the list DOES NOT OCCUR and the selected item IS UNCHANGED at the top.\\n\" +\n+            \"     If not, the test failed. Press FAIL.\\n\" +\n+            \"3.5) Check that when the Y coordinate of the mouse is below the lower bound of the list\\n\" +\n+            \"     that scrolling of the list DOES NOT OCCUR and the selected item IS UNCHANGED at the bottom.\\n\" +\n+            \"     If not, the test failed. Press FAIL.\\n\" +\n+            \"-----------------------------------\\n\" +\n+            \"4) The test has now passed. Press PASS.\";\n+}\n","filename":"test\/jdk\/java\/awt\/List\/MouseDraggedOutCauseScrollingTest\/MouseDraggedOutCauseScrollingTest.java","additions":73,"deletions":195,"binary":false,"changes":268,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-<!--\n-Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n-DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-This code is free software; you can redistribute it and\/or modify it\n-under the terms of the GNU General Public License version 2 only, as\n-published by the Free Software Foundation.\n-\n-This code is distributed in the hope that it will be useful, but WITHOUT\n-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-version 2 for more details (a copy is included in the LICENSE file that\n-accompanied this code).\n-\n-You should have received a copy of the GNU General Public License version\n-2 along with this work; if not, write to the Free Software Foundation,\n-Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n-Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-or visit www.oracle.com if you need additional information or have any\n-questions.\n--->\n-\n-<html>\n-<head>\n-<title> PrintDialogsTest <\/title>\n-<\/head>\n-<body>\n-<applet code=\"PrintDialogsTest.class\" width=250 height=350><\/applet>\n-\n-Please select dialog modality type and parent; also select\n-the print auxiliary dialog to be displayed (Page Setup or Print dialog).\n-Then click \"Start test\" button.\n-\n-When the windows will appear check if modal blocking for Dialog works as expected.\n-Then push \"Open\" button on the Dialog to show the auxiliary dialog and check\n-if it blocks the rest of the application. Then close it and check correctness\n-of modal blocking behavior for the Dialog again. To close all the test\n-windows please push \"Finish\" button.\n-\n-To finish the overall test push \"Pass\" or \"Fail\" button depending on result.\n-\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/Modal\/PrintDialogsTest\/PrintDialogsTest.html","additions":0,"deletions":44,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @summary Check if Print and Page Setup dialogs lock other windows;\n+ * @summary Check if Print and Page Setup dialogs block other windows;\n@@ -30,2 +30,2 @@\n- *\n- * @run applet\/manual=yesno PrintDialogsTest.html\n+ * @library \/java\/awt\/regtesthelpers\n+ * @run main\/manual PrintDialogsTest\n@@ -35,2 +35,10 @@\n-import java.applet.Applet;\n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Checkbox;\n+import java.awt.CheckboxGroup;\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import java.awt.EventQueue;\n+import java.awt.GridLayout;\n+import java.awt.Label;\n+import java.awt.Panel;\n@@ -42,1 +50,47 @@\n-public class PrintDialogsTest extends Applet implements ActionListener {\n+public class PrintDialogsTest extends Panel implements ActionListener {\n+\n+    static final String INSTRUCTIONS =\n+        \"This test is free format, which means there is no enforced or guided sequence.\" + \"\\n\" +\n+\n+        \"Please select each of \" + \"\\n\" +\n+        \"(a) The dialog parent type.\" + \"\\n\" +\n+        \"(b) The dialog modality type\" + \"\\n\" +\n+        \"(c) The print dialog type (Print dialog or Page Setup dialog)\" + \"\\n\" +\n+\n+        \"Once the choices have been made click the \\\"Start test\\\" button.\" + \"\\n\" +\n+\n+        \"Three windows will appear\" + \"\\n\" +\n+        \"(1) A Frame or a Dialog - in the case you selected \\\"Dialog\\\" as the parent type\" + \"\\n\" +\n+        \"(2) a Window (ie an undecorated top-level)\" + \"\\n\" +\n+        \"(3) A dialog with two buttons \\\"Open\\\" and \\\"Finish\\\"\" + \"\\n\" +\n+\n+        \"Now check as follows whether modal blocking works as expected.\" + \"\\n\" +\n+        \"Windows (1) and (2) contain a button which you should be able to press\" + \"\\n\" +\n+        \"ONLY if you selected \\\"Non-modal\\\", or \\\"Modeless\\\" for modality type.\" + \"\\n\" +\n+        \"In other cases window (3) will block input to (1) and (2)\" + \"\\n\" +\n+\n+        \"Then push the \\\"Open\\\" button on the Dialog to show the printing dialog and check\" + \"\\n\" +\n+        \"if it blocks the rest of the application - ie all of windows (1), (2) and (3)\" + \"\\n\" +\n+        \"should ALWAYS be blocked when the print dialog is showing.\" + \"\\n\" +\n+        \"Now cancel the printing dialog and check the correctness of modal blocking\" + \"\\n\" +\n+        \"behavior for the Dialog again.\" + \"\\n\" +\n+        \"To close all the 3 test windows please push the \\\"Finish\\\" button.\" + \"\\n\" +\n+\n+        \"Repeat all the above for different combinations, which should include\" + \"\\n\" +\n+        \"using all of the Dialog parent choices and all of the Dialog Modality types.\" + \"\\n\" +\n+\n+        \"If any behave incorrectly, note the combination of choices and press Fail.\" + \"\\n\" +\n+\n+        \"If all behave correctly, press Pass.\";\n+\n+    public static void main(String[] args) throws Exception {\n+\n+         PassFailJFrame.builder()\n+             .instructions(INSTRUCTIONS)\n+             .rows(35)\n+             .columns(60)\n+             .testUI(PrintDialogsTest::createUI)\n+             .testTimeOut(10)\n+             .build()\n+             .awaitAndCheck();\n+    }\n@@ -51,0 +105,8 @@\n+    private static Frame createUI() {\n+        Frame frame = new Frame(\"Dialog Modality Testing\");\n+        PrintDialogsTest test = new PrintDialogsTest();\n+        test.createGUI();\n+        frame.add(test);\n+        frame.pack();\n+        return frame;\n+    }\n@@ -102,1 +164,0 @@\n-        setSize(350, 200);\n@@ -104,1 +165,1 @@\n-        panel.setLayout(new GridLayout(18, 1));\n+        panel.setLayout(new GridLayout(21, 1));\n@@ -109,0 +170,1 @@\n+        panel.add(new Label(\" \")); \/\/ spacing\n@@ -126,0 +188,1 @@\n+        panel.add(new Label(\" \")); \/\/ spacing\n@@ -142,1 +205,1 @@\n-        add(panel);\n+        panel.add(new Label(\" \")); \/\/ spacing\n@@ -151,8 +214,1 @@\n-        validate();\n-        setVisible(true);\n-    }\n-\n-    public void start() {\n-        try {\n-            EventQueue.invokeAndWait(this::createGUI);\n-        } catch (Exception e) {}\n+        add(panel);\n","filename":"test\/jdk\/java\/awt\/Modal\/PrintDialogsTest\/PrintDialogsTest.java","additions":74,"deletions":18,"binary":false,"changes":92,"status":"modified"}]}