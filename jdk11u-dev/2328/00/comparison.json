{"files":[{"patch":"@@ -40,1 +40,1 @@\n-    private static final String TEST_CASE_IMPL_CLASS_NAME = \"compiler.codecache.stress.Helper$TestCaseImpl\";\n+    private static final String TEST_CASE_IMPL_CLASS_NAME = \"compiler.codecache.stress.TestCaseImpl\";\n@@ -109,30 +109,0 @@\n-\n-    public static class TestCaseImpl implements TestCase {\n-        private static final int RETURN_VALUE = 42;\n-        private static final int RECURSION_DEPTH = 10;\n-        private volatile int i;\n-\n-        @Override\n-        public Callable<Integer> getCallable() {\n-            return () -> {\n-                i = 0;\n-                return method();\n-            };\n-        }\n-\n-        @Override\n-        public int method() {\n-            ++i;\n-            int result = RETURN_VALUE;\n-            if (i < RECURSION_DEPTH) {\n-                return result + method();\n-            }\n-            return result;\n-        }\n-\n-        @Override\n-        public int expectedValue() {\n-            return RETURN_VALUE * RECURSION_DEPTH;\n-        }\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/Helper.java","additions":1,"deletions":31,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @build sun.hotspot.WhiteBox\n+ * @build sun.hotspot.WhiteBox compiler.codecache.stress.Helper compiler.codecache.stress.TestCaseImpl\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/RandomAllocationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @build sun.hotspot.WhiteBox\n+ * @build sun.hotspot.WhiteBox compiler.codecache.stress.Helper compiler.codecache.stress.TestCaseImpl\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/ReturnBlobToWrongHeapTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.codecache.stress;\n+\n+import java.util.concurrent.Callable;\n+\n+public class TestCaseImpl implements Helper.TestCase {\n+    private static final int RETURN_VALUE = 42;\n+    private static final int RECURSION_DEPTH = 10;\n+    private volatile int i;\n+\n+    @Override\n+    public Callable<Integer> getCallable() {\n+        return () -> {\n+            i = 0;\n+            return method();\n+        };\n+    }\n+\n+    @Override\n+    public int method() {\n+        ++i;\n+        int result = RETURN_VALUE;\n+        if (i < RECURSION_DEPTH) {\n+            return result + method();\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public int expectedValue() {\n+        return RETURN_VALUE * RECURSION_DEPTH;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/TestCaseImpl.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -32,1 +32,1 @@\n- * @build sun.hotspot.WhiteBox\n+ * @build sun.hotspot.WhiteBox compiler.codecache.stress.Helper compiler.codecache.stress.TestCaseImpl\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}