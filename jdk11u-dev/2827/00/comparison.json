{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.misc.JavaSecurityPropertiesAccess;\n@@ -66,0 +67,3 @@\n+    \/* cache a copy for recording purposes *\/\n+    private static Properties initialSecurityProperties;\n+\n@@ -83,0 +87,7 @@\n+        \/\/ Set up JavaSecurityPropertiesAccess in SharedSecrets\n+        SharedSecrets.setJavaSecurityPropertiesAccess(new JavaSecurityPropertiesAccess() {\n+            @Override\n+            public Properties getInitialProperties() {\n+                return initialSecurityProperties;\n+            }\n+        });\n@@ -108,0 +119,8 @@\n+        initialSecurityProperties = (Properties) props.clone();\n+        if (sdebug != null) {\n+            for (String key : props.stringPropertyNames()) {\n+                sdebug.println(\"Initial security property: \" + key + \"=\" +\n+                    props.getProperty(key));\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/Security.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.misc;\n+\n+import java.util.Properties;\n+\n+public interface JavaSecurityPropertiesAccess {\n+    Properties getInitialProperties();\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/JavaSecurityPropertiesAccess.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -39,0 +39,1 @@\n+import java.security.Security;\n@@ -77,0 +78,1 @@\n+    private static JavaSecurityPropertiesAccess javaSecurityPropertiesAccess;\n@@ -251,0 +253,13 @@\n+    public static void setJavaSecurityPropertiesAccess(JavaSecurityPropertiesAccess jspa) {\n+        javaSecurityPropertiesAccess = jspa;\n+    }\n+\n+    public static JavaSecurityPropertiesAccess getJavaSecurityPropertiesAccess() {\n+        var access = javaSecurityPropertiesAccess;\n+        if (access == null) {\n+            unsafe.ensureClassInitialized(Security.class);\n+            access = javaSecurityPropertiesAccess;\n+        }\n+        return access;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/SharedSecrets.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jfr.events;\n+\n+import jdk.jfr.Category;\n+import jdk.jfr.Description;\n+import jdk.jfr.Label;\n+import jdk.jfr.Name;\n+\n+@Category({\"Java Development Kit\", \"Security\"})\n+@Label(\"Initial Security Property\")\n+@Name(\"jdk.InitialSecurityProperty\")\n+@Description(\"Initial Security Properties\")\n+public final class InitialSecurityPropertyEvent extends AbstractJDKEvent {\n+    @Label(\"Key\")\n+    public String key;\n+\n+    @Label(\"Value\")\n+    public String value;\n+}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/InitialSecurityPropertyEvent.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Properties;\n@@ -31,0 +32,1 @@\n+import jdk.internal.misc.SharedSecrets;\n@@ -41,0 +43,1 @@\n+import jdk.jfr.events.InitialSecurityPropertyEvent;\n@@ -83,1 +86,3 @@\n-        jdk.internal.event.X509ValidationEvent.class\n+        jdk.internal.event.X509ValidationEvent.class,\n+\n+        InitialSecurityPropertyEvent.class,\n@@ -100,0 +105,1 @@\n+    private static final Runnable emitInitialSecurityProperties = JDKEvents::emitInitialSecurityProperties;\n@@ -114,0 +120,1 @@\n+                RequestEngine.addTrustedJDKHook(InitialSecurityPropertyEvent.class, emitInitialSecurityProperties);\n@@ -170,0 +177,13 @@\n+        RequestEngine.removeHook(JDKEvents::emitInitialSecurityProperties);\n+    }\n+\n+    private static void emitInitialSecurityProperties() {\n+        Properties p = SharedSecrets.getJavaSecurityPropertiesAccess().getInitialProperties();\n+        if (p != null) {\n+            for (String key : p.stringPropertyNames()) {\n+                InitialSecurityPropertyEvent e = new InitialSecurityPropertyEvent();\n+                e.key = key;\n+                e.value = p.getProperty(key);\n+                e.commit();\n+            }\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/JDKEvents.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -611,0 +611,5 @@\n+    <event name=\"jdk.InitialSecurityProperty\">\n+      <setting name=\"enabled\">true<\/setting>\n+      <setting name=\"period\">beginChunk<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -611,0 +611,5 @@\n+    <event name=\"jdk.InitialSecurityProperty\">\n+      <setting name=\"enabled\">true<\/setting>\n+      <setting name=\"period\">beginChunk<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @bug 8155246 8292297\n+ * @bug 8155246 8292297 8292177\n@@ -45,0 +45,8 @@\n+    private static final String EXPECTED_DEBUG_OUTPUT =\n+        \"Initial security property: crypto.policy=unlimited\";\n+\n+    private static final String UNEXPECTED_DEBUG_OUTPUT =\n+            \"Initial security property: postInitTest=shouldNotRecord\";\n+\n+    private static boolean overrideDetected = false;\n+\n@@ -55,0 +63,1 @@\n+            Security.setProperty(\"postInitTest\", \"shouldNotRecord\");\n@@ -102,0 +111,4 @@\n+\n+            if (!overrideDetected) {\n+                throw new RuntimeException(\"Override scenario not seen\");\n+            }\n@@ -108,1 +121,16 @@\n-        oa.shouldHaveExitValue(exitCode).shouldContain(output);\n+        oa.shouldHaveExitValue(exitCode)\n+                .shouldContain(output);\n+\n+        \/\/ extra checks on debug output\n+        if (exitCode != 1) {\n+            if (oa.getStderr().contains(\"overriding other security properties files!\")) {\n+                overrideDetected = true;\n+                \/\/ master file is not in use - only provider properties are set in custom file\n+                oa.shouldContain(\"security.provider.2=SunRsaSign\")\n+                        .shouldNotContain(EXPECTED_DEBUG_OUTPUT)\n+                        .shouldNotContain(UNEXPECTED_DEBUG_OUTPUT);\n+            } else {\n+                oa.shouldContain(EXPECTED_DEBUG_OUTPUT)\n+                        .shouldNotContain(UNEXPECTED_DEBUG_OUTPUT);\n+            }\n+        }\n","filename":"test\/jdk\/java\/security\/Security\/ConfigFileTest.java","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -202,0 +202,1 @@\n+        settingValues.put(EventNames.InitialSecurityProperty + \"#threshold\", \"0 ns\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestActiveSettingEvent.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jfr.event.security;\n+\n+import jdk.internal.misc.SharedSecrets;\n+import jdk.jfr.Recording;\n+import jdk.jfr.consumer.RecordedEvent;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.jfr.EventNames;\n+import jdk.test.lib.jfr.Events;\n+\n+import java.security.Security;\n+import java.util.List;\n+import java.util.Properties;\n+\n+\/*\n+ * @test\n+ * @bug 8292177\n+ * @summary InitialSecurityProperty JFR event\n+ * @key jfr\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run main\/othervm jdk.jfr.event.security.TestInitialSecurityPropertyEvent\n+ *\/\n+public class TestInitialSecurityPropertyEvent {\n+\n+    private static final String SEC_KEY = \"security.overridePropertiesFile\";\n+    public static void main(String[] args) throws Exception {\n+        try (Recording recording = new Recording()) {\n+            recording.enable(EventNames.InitialSecurityProperty)\n+                    .with(\"period\", \"beginChunk\");\n+            recording.start();\n+            \/\/ this property edit should not be recorded\n+            Security.setProperty(SEC_KEY, \"false\");\n+            recording.stop();\n+\n+            Properties p = SharedSecrets.getJavaSecurityPropertiesAccess().getInitialProperties();\n+            List<RecordedEvent> events = Events.fromRecording(recording);\n+            if (events.size() == 0) {\n+                throw new Exception(\"No security properties - Security class may not have loaded ?\");\n+            }\n+            Asserts.assertEquals(events.size(), p.size(), \"Incorrect number of events\");\n+            assertEvent(events, SEC_KEY, \"true\");\n+        }\n+    }\n+\n+    private static void assertEvent(List<RecordedEvent> events, String key, String origValue) throws Exception {\n+        for (RecordedEvent e : events) {\n+            if (e.getString(\"key\").equals(key)) {\n+                Events.assertField(e, \"value\").equal(origValue);\n+                return;\n+            }\n+        }\n+        System.out.println(events);\n+        throw new Exception(\"Incorrect value for \" + key + \" property recorded\");\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/event\/security\/TestInitialSecurityPropertyEvent.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -35,1 +35,1 @@\n-    public final static String PREFIX = \"jdk.\";\n+    public static final String PREFIX = \"jdk.\";\n@@ -39,16 +39,16 @@\n-    public final static String JVMInformation = PREFIX + \"JVMInformation\";\n-    public final static String InitialSystemProperty = PREFIX + \"InitialSystemProperty\";\n-    public final static String IntFlag = PREFIX + \"IntFlag\";\n-    public final static String UnsignedIntFlag = PREFIX + \"UnsignedIntFlag\";\n-    public final static String LongFlag = PREFIX + \"LongFlag\";\n-    public final static String UnsignedLongFlag = PREFIX + \"UnsignedLongFlag\";\n-    public final static String DoubleFlag = PREFIX + \"DoubleFlag\";\n-    public final static String BooleanFlag = PREFIX + \"BooleanFlag\";\n-    public final static String StringFlag = PREFIX + \"StringFlag\";\n-    public final static String IntFlagChanged = PREFIX + \"IntFlagChanged\";\n-    public final static String UnsignedIntFlagChanged = PREFIX + \"UnsignedIntFlagChanged\";\n-    public final static String LongFlagChanged = PREFIX + \"LongFlagChanged\";\n-    public final static String UnsignedLongFlagChanged = PREFIX + \"UnsignedLongFlagChanged\";\n-    public final static String DoubleFlagChanged = PREFIX + \"DoubleFlagChanged\";\n-    public final static String BooleanFlagChanged = PREFIX + \"BooleanFlagChanged\";\n-    public final static String StringFlagChanged = PREFIX + \"StringFlagChanged\";\n+    public static final String JVMInformation = PREFIX + \"JVMInformation\";\n+    public static final String InitialSystemProperty = PREFIX + \"InitialSystemProperty\";\n+    public static final String IntFlag = PREFIX + \"IntFlag\";\n+    public static final String UnsignedIntFlag = PREFIX + \"UnsignedIntFlag\";\n+    public static final String LongFlag = PREFIX + \"LongFlag\";\n+    public static final String UnsignedLongFlag = PREFIX + \"UnsignedLongFlag\";\n+    public static final String DoubleFlag = PREFIX + \"DoubleFlag\";\n+    public static final String BooleanFlag = PREFIX + \"BooleanFlag\";\n+    public static final String StringFlag = PREFIX + \"StringFlag\";\n+    public static final String IntFlagChanged = PREFIX + \"IntFlagChanged\";\n+    public static final String UnsignedIntFlagChanged = PREFIX + \"UnsignedIntFlagChanged\";\n+    public static final String LongFlagChanged = PREFIX + \"LongFlagChanged\";\n+    public static final String UnsignedLongFlagChanged = PREFIX + \"UnsignedLongFlagChanged\";\n+    public static final String DoubleFlagChanged = PREFIX + \"DoubleFlagChanged\";\n+    public static final String BooleanFlagChanged = PREFIX + \"BooleanFlagChanged\";\n+    public static final String StringFlagChanged = PREFIX + \"StringFlagChanged\";\n@@ -57,32 +57,32 @@\n-    public final static String VMException = PREFIX + \"JavaErrorThrow\";\n-    public final static String ThreadStart = PREFIX + \"ThreadStart\";\n-    public final static String ThreadEnd = PREFIX + \"ThreadEnd\";\n-    public final static String ThreadSleep = PREFIX + \"ThreadSleep\";\n-    public final static String ThreadPark = PREFIX + \"ThreadPark\";\n-    public final static String JavaMonitorEnter = PREFIX + \"JavaMonitorEnter\";\n-    public final static String JavaMonitorWait = PREFIX + \"JavaMonitorWait\";\n-    public final static String JavaMonitorInflate = PREFIX + \"JavaMonitorInflate\";\n-    public final static String ClassLoad = PREFIX + \"ClassLoad\";\n-    public final static String ClassDefine = PREFIX + \"ClassDefine\";\n-    public final static String ClassUnload = PREFIX + \"ClassUnload\";\n-    public final static String SafepointBegin = PREFIX + \"SafepointBegin\";\n-    public final static String SafepointStateSyncronization = PREFIX + \"SafepointStateSynchronization\";\n-    public final static String SafepointWaitBlocked = PREFIX + \"SafepointWaitBlocked\";\n-    public final static String SafepointCleanup = PREFIX + \"SafepointCleanup\";\n-    public final static String SafepointCleanupTask = PREFIX + \"SafepointCleanupTask\";\n-    public final static String SafepointEnd = PREFIX + \"SafepointEnd\";\n-    public final static String ExecuteVMOperation = PREFIX + \"ExecuteVMOperation\";\n-    public final static String Shutdown = PREFIX + \"Shutdown\";\n-    public final static String VMError = PREFIX + \"VMError\";\n-    public final static String JavaThreadStatistics = PREFIX + \"JavaThreadStatistics\";\n-    public final static String ClassLoadingStatistics = PREFIX + \"ClassLoadingStatistics\";\n-    public final static String ClassLoaderStatistics = PREFIX + \"ClassLoaderStatistics\";\n-    public final static String ThreadAllocationStatistics = PREFIX + \"ThreadAllocationStatistics\";\n-    public final static String ExecutionSample = PREFIX + \"ExecutionSample\";\n-    public final static String NativeMethodSample = PREFIX + \"NativeMethodSample\";\n-    public final static String ExecutionSampling = PREFIX + \"ExecutionSampling\";\n-    public final static String ThreadDump = PREFIX + \"ThreadDump\";\n-    public final static String OldObjectSample = PREFIX + \"OldObjectSample\";\n-    public final static String BiasedLockRevocation = PREFIX + \"BiasedLockRevocation\";\n-    public final static String BiasedLockSelfRevocation = PREFIX + \"BiasedLockSelfRevocation\";\n-    public final static String BiasedLockClassRevocation = PREFIX + \"BiasedLockClassRevocation\";\n+    public static final String VMException = PREFIX + \"JavaErrorThrow\";\n+    public static final String ThreadStart = PREFIX + \"ThreadStart\";\n+    public static final String ThreadEnd = PREFIX + \"ThreadEnd\";\n+    public static final String ThreadSleep = PREFIX + \"ThreadSleep\";\n+    public static final String ThreadPark = PREFIX + \"ThreadPark\";\n+    public static final String JavaMonitorEnter = PREFIX + \"JavaMonitorEnter\";\n+    public static final String JavaMonitorWait = PREFIX + \"JavaMonitorWait\";\n+    public static final String JavaMonitorInflate = PREFIX + \"JavaMonitorInflate\";\n+    public static final String ClassLoad = PREFIX + \"ClassLoad\";\n+    public static final String ClassDefine = PREFIX + \"ClassDefine\";\n+    public static final String ClassUnload = PREFIX + \"ClassUnload\";\n+    public static final String SafepointBegin = PREFIX + \"SafepointBegin\";\n+    public static final String SafepointStateSyncronization = PREFIX + \"SafepointStateSynchronization\";\n+    public static final String SafepointWaitBlocked = PREFIX + \"SafepointWaitBlocked\";\n+    public static final String SafepointCleanup = PREFIX + \"SafepointCleanup\";\n+    public static final String SafepointCleanupTask = PREFIX + \"SafepointCleanupTask\";\n+    public static final String SafepointEnd = PREFIX + \"SafepointEnd\";\n+    public static final String ExecuteVMOperation = PREFIX + \"ExecuteVMOperation\";\n+    public static final String Shutdown = PREFIX + \"Shutdown\";\n+    public static final String VMError = PREFIX + \"VMError\";\n+    public static final String JavaThreadStatistics = PREFIX + \"JavaThreadStatistics\";\n+    public static final String ClassLoadingStatistics = PREFIX + \"ClassLoadingStatistics\";\n+    public static final String ClassLoaderStatistics = PREFIX + \"ClassLoaderStatistics\";\n+    public static final String ThreadAllocationStatistics = PREFIX + \"ThreadAllocationStatistics\";\n+    public static final String ExecutionSample = PREFIX + \"ExecutionSample\";\n+    public static final String NativeMethodSample = PREFIX + \"NativeMethodSample\";\n+    public static final String ExecutionSampling = PREFIX + \"ExecutionSampling\";\n+    public static final String ThreadDump = PREFIX + \"ThreadDump\";\n+    public static final String OldObjectSample = PREFIX + \"OldObjectSample\";\n+    public static final String BiasedLockRevocation = PREFIX + \"BiasedLockRevocation\";\n+    public static final String BiasedLockSelfRevocation = PREFIX + \"BiasedLockSelfRevocation\";\n+    public static final String BiasedLockClassRevocation = PREFIX + \"BiasedLockClassRevocation\";\n@@ -91,42 +91,42 @@\n-    public final static String GCHeapSummary = PREFIX + \"GCHeapSummary\";\n-    public final static String MetaspaceSummary = PREFIX + \"MetaspaceSummary\";\n-    public final static String MetaspaceGCThreshold = PREFIX + \"MetaspaceGCThreshold\";\n-    public final static String MetaspaceAllocationFailure = PREFIX + \"MetaspaceAllocationFailure\";\n-    public final static String MetaspaceOOM = PREFIX + \"MetaspaceOOM\";\n-    public final static String MetaspaceChunkFreeListSummary = PREFIX + \"MetaspaceChunkFreeListSummary\";\n-    public final static String PSHeapSummary = PREFIX + \"PSHeapSummary\";\n-    public final static String G1HeapSummary = PREFIX + \"G1HeapSummary\";\n-    public final static String G1HeapRegionInformation = PREFIX + \"G1HeapRegionInformation\";\n-    public final static String G1HeapRegionTypeChange = PREFIX + \"G1HeapRegionTypeChange\";\n-    public final static String ShenandoahHeapRegionInformation = PREFIX + \"ShenandoahHeapRegionInformation\";\n-    public final static String ShenandoahHeapRegionStateChange = PREFIX + \"ShenandoahHeapRegionStateChange\";\n-    public final static String TenuringDistribution = PREFIX + \"TenuringDistribution\";\n-    public final static String GarbageCollection = PREFIX + \"GarbageCollection\";\n-    public final static String ParallelOldCollection = PREFIX + \"ParallelOldGarbageCollection\";\n-    public final static String YoungGarbageCollection = PREFIX + \"YoungGarbageCollection\";\n-    public final static String OldGarbageCollection = PREFIX + \"OldGarbageCollection\";\n-    public final static String G1GarbageCollection = PREFIX + \"G1GarbageCollection\";\n-    public final static String G1MMU = PREFIX + \"G1MMU\";\n-    public final static String EvacuationInfo = PREFIX + \"EvacuationInfo\";\n-    public final static String GCReferenceStatistics = PREFIX + \"GCReferenceStatistics\";\n-    public final static String ObjectCountAfterGC = PREFIX + \"ObjectCountAfterGC\";\n-    public final static String PromoteObjectInNewPLAB = PREFIX + \"PromoteObjectInNewPLAB\";\n-    public final static String PromoteObjectOutsidePLAB = PREFIX + \"PromoteObjectOutsidePLAB\";\n-    public final static String PromotionFailed = PREFIX + \"PromotionFailed\";\n-    public final static String EvacuationFailed = PREFIX + \"EvacuationFailed\";\n-    public final static String ConcurrentModeFailure = PREFIX + \"ConcurrentModeFailure\";\n-    public final static String GCPhasePause = PREFIX + \"GCPhasePause\";\n-    public final static String GCPhasePauseLevel1 = PREFIX + \"GCPhasePauseLevel1\";\n-    public final static String GCPhasePauseLevel2 = PREFIX + \"GCPhasePauseLevel2\";\n-    public final static String GCPhasePauseLevel3 = PREFIX + \"GCPhasePauseLevel3\";\n-    public final static String ObjectCount = PREFIX + \"ObjectCount\";\n-    public final static String GCConfiguration = PREFIX + \"GCConfiguration\";\n-    public final static String GCSurvivorConfiguration = PREFIX + \"GCSurvivorConfiguration\";\n-    public final static String GCTLABConfiguration = PREFIX + \"GCTLABConfiguration\";\n-    public final static String GCHeapConfiguration = PREFIX + \"GCHeapConfiguration\";\n-    public final static String YoungGenerationConfiguration = PREFIX + \"YoungGenerationConfiguration\";\n-    public final static String G1AdaptiveIHOP = PREFIX + \"G1AdaptiveIHOP\";\n-    public final static String G1EvacuationYoungStatistics = PREFIX + \"G1EvacuationYoungStatistics\";\n-    public final static String G1EvacuationOldStatistics = PREFIX + \"G1EvacuationOldStatistics\";\n-    public final static String G1BasicIHOP = PREFIX + \"G1BasicIHOP\";\n-    public final static String AllocationRequiringGC = PREFIX + \"AllocationRequiringGC\";\n+    public static final String GCHeapSummary = PREFIX + \"GCHeapSummary\";\n+    public static final String MetaspaceSummary = PREFIX + \"MetaspaceSummary\";\n+    public static final String MetaspaceGCThreshold = PREFIX + \"MetaspaceGCThreshold\";\n+    public static final String MetaspaceAllocationFailure = PREFIX + \"MetaspaceAllocationFailure\";\n+    public static final String MetaspaceOOM = PREFIX + \"MetaspaceOOM\";\n+    public static final String MetaspaceChunkFreeListSummary = PREFIX + \"MetaspaceChunkFreeListSummary\";\n+    public static final String PSHeapSummary = PREFIX + \"PSHeapSummary\";\n+    public static final String G1HeapSummary = PREFIX + \"G1HeapSummary\";\n+    public static final String G1HeapRegionInformation = PREFIX + \"G1HeapRegionInformation\";\n+    public static final String G1HeapRegionTypeChange = PREFIX + \"G1HeapRegionTypeChange\";\n+    public static final String ShenandoahHeapRegionInformation = PREFIX + \"ShenandoahHeapRegionInformation\";\n+    public static final String ShenandoahHeapRegionStateChange = PREFIX + \"ShenandoahHeapRegionStateChange\";\n+    public static final String TenuringDistribution = PREFIX + \"TenuringDistribution\";\n+    public static final String GarbageCollection = PREFIX + \"GarbageCollection\";\n+    public static final String ParallelOldCollection = PREFIX + \"ParallelOldGarbageCollection\";\n+    public static final String YoungGarbageCollection = PREFIX + \"YoungGarbageCollection\";\n+    public static final String OldGarbageCollection = PREFIX + \"OldGarbageCollection\";\n+    public static final String G1GarbageCollection = PREFIX + \"G1GarbageCollection\";\n+    public static final String G1MMU = PREFIX + \"G1MMU\";\n+    public static final String EvacuationInfo = PREFIX + \"EvacuationInfo\";\n+    public static final String GCReferenceStatistics = PREFIX + \"GCReferenceStatistics\";\n+    public static final String ObjectCountAfterGC = PREFIX + \"ObjectCountAfterGC\";\n+    public static final String PromoteObjectInNewPLAB = PREFIX + \"PromoteObjectInNewPLAB\";\n+    public static final String PromoteObjectOutsidePLAB = PREFIX + \"PromoteObjectOutsidePLAB\";\n+    public static final String PromotionFailed = PREFIX + \"PromotionFailed\";\n+    public static final String EvacuationFailed = PREFIX + \"EvacuationFailed\";\n+    public static final String ConcurrentModeFailure = PREFIX + \"ConcurrentModeFailure\";\n+    public static final String GCPhasePause = PREFIX + \"GCPhasePause\";\n+    public static final String GCPhasePauseLevel1 = PREFIX + \"GCPhasePauseLevel1\";\n+    public static final String GCPhasePauseLevel2 = PREFIX + \"GCPhasePauseLevel2\";\n+    public static final String GCPhasePauseLevel3 = PREFIX + \"GCPhasePauseLevel3\";\n+    public static final String ObjectCount = PREFIX + \"ObjectCount\";\n+    public static final String GCConfiguration = PREFIX + \"GCConfiguration\";\n+    public static final String GCSurvivorConfiguration = PREFIX + \"GCSurvivorConfiguration\";\n+    public static final String GCTLABConfiguration = PREFIX + \"GCTLABConfiguration\";\n+    public static final String GCHeapConfiguration = PREFIX + \"GCHeapConfiguration\";\n+    public static final String YoungGenerationConfiguration = PREFIX + \"YoungGenerationConfiguration\";\n+    public static final String G1AdaptiveIHOP = PREFIX + \"G1AdaptiveIHOP\";\n+    public static final String G1EvacuationYoungStatistics = PREFIX + \"G1EvacuationYoungStatistics\";\n+    public static final String G1EvacuationOldStatistics = PREFIX + \"G1EvacuationOldStatistics\";\n+    public static final String G1BasicIHOP = PREFIX + \"G1BasicIHOP\";\n+    public static final String AllocationRequiringGC = PREFIX + \"AllocationRequiringGC\";\n@@ -135,14 +135,14 @@\n-    public final static String Compilation = PREFIX + \"Compilation\";\n-    public final static String CompilerPhase = PREFIX + \"CompilerPhase\";\n-    public final static String CompilationFailure = PREFIX + \"CompilationFailure\";\n-    public final static String CompilerInlining = PREFIX + \"CompilerInlining\";\n-    public final static String CompilerStatistics = PREFIX + \"CompilerStatistics\";\n-    public final static String CompilerConfig = PREFIX + \"CompilerConfiguration\";\n-    public final static String CodeCacheStatistics = PREFIX + \"CodeCacheStatistics\";\n-    public final static String CodeCacheConfiguration = PREFIX + \"CodeCacheConfiguration\";\n-    public final static String CodeSweeperStatistics = PREFIX + \"CodeSweeperStatistics\";\n-    public final static String CodeSweeperConfiguration = PREFIX + \"CodeSweeperConfiguration\";\n-    public final static String SweepCodeCache = PREFIX + \"SweepCodeCache\";\n-    public final static String CodeCacheFull = PREFIX + \"CodeCacheFull\";\n-    public final static String ObjectAllocationInNewTLAB = PREFIX + \"ObjectAllocationInNewTLAB\";\n-    public final static String ObjectAllocationOutsideTLAB = PREFIX + \"ObjectAllocationOutsideTLAB\";\n+    public static final String Compilation = PREFIX + \"Compilation\";\n+    public static final String CompilerPhase = PREFIX + \"CompilerPhase\";\n+    public static final String CompilationFailure = PREFIX + \"CompilationFailure\";\n+    public static final String CompilerInlining = PREFIX + \"CompilerInlining\";\n+    public static final String CompilerStatistics = PREFIX + \"CompilerStatistics\";\n+    public static final String CompilerConfig = PREFIX + \"CompilerConfiguration\";\n+    public static final String CodeCacheStatistics = PREFIX + \"CodeCacheStatistics\";\n+    public static final String CodeCacheConfiguration = PREFIX + \"CodeCacheConfiguration\";\n+    public static final String CodeSweeperStatistics = PREFIX + \"CodeSweeperStatistics\";\n+    public static final String CodeSweeperConfiguration = PREFIX + \"CodeSweeperConfiguration\";\n+    public static final String SweepCodeCache = PREFIX + \"SweepCodeCache\";\n+    public static final String CodeCacheFull = PREFIX + \"CodeCacheFull\";\n+    public static final String ObjectAllocationInNewTLAB = PREFIX + \"ObjectAllocationInNewTLAB\";\n+    public static final String ObjectAllocationOutsideTLAB = PREFIX + \"ObjectAllocationOutsideTLAB\";\n@@ -151,11 +151,11 @@\n-    public final static String OSInformation = PREFIX + \"OSInformation\";\n-    public final static String VirtualizationInformation = PREFIX + \"VirtualizationInformation\";\n-    public final static String CPUInformation = PREFIX + \"CPUInformation\";\n-    public final static String CPULoad = PREFIX + \"CPULoad\";\n-    public final static String ThreadCPULoad = PREFIX + \"ThreadCPULoad\";\n-    public final static String SystemProcess = PREFIX + \"SystemProcess\";\n-    public final static String ThreadContextSwitchRate = PREFIX + \"ThreadContextSwitchRate\";\n-    public final static String InitialEnvironmentVariable = PREFIX + \"InitialEnvironmentVariable\";\n-    public final static String NativeLibrary = PREFIX + \"NativeLibrary\";\n-    public final static String PhysicalMemory = PREFIX + \"PhysicalMemory\";\n-    public final static String NetworkUtilization = PREFIX + \"NetworkUtilization\";\n+    public static final String OSInformation = PREFIX + \"OSInformation\";\n+    public static final String VirtualizationInformation = PREFIX + \"VirtualizationInformation\";\n+    public static final String CPUInformation = PREFIX + \"CPUInformation\";\n+    public static final String CPULoad = PREFIX + \"CPULoad\";\n+    public static final String ThreadCPULoad = PREFIX + \"ThreadCPULoad\";\n+    public static final String SystemProcess = PREFIX + \"SystemProcess\";\n+    public static final String ThreadContextSwitchRate = PREFIX + \"ThreadContextSwitchRate\";\n+    public static final String InitialEnvironmentVariable = PREFIX + \"InitialEnvironmentVariable\";\n+    public static final String NativeLibrary = PREFIX + \"NativeLibrary\";\n+    public static final String PhysicalMemory = PREFIX + \"PhysicalMemory\";\n+    public static final String NetworkUtilization = PREFIX + \"NetworkUtilization\";\n@@ -169,11 +169,12 @@\n-    public final static String ExceptionStatistics = PREFIX + \"ExceptionStatistics\";\n-    public final static String JavaExceptionThrow = PREFIX + \"JavaExceptionThrow\";\n-    public final static String JavaErrorThrow = PREFIX + \"JavaErrorThrow\";\n-    public final static String ModuleRequire = PREFIX + \"ModuleRequire\";\n-    public final static String ModuleExport = PREFIX + \"ModuleExport\";\n-    public final static String TLSHandshake = PREFIX + \"TLSHandshake\";\n-    public final static String X509Certificate = PREFIX + \"X509Certificate\";\n-    public final static String X509Validation = PREFIX + \"X509Validation\";\n-    public final static String SecurityProperty = PREFIX + \"SecurityPropertyModification\";\n-    public final static String SecurityProviderService = PREFIX + \"SecurityProviderService\";\n-    public final static String Deserialization = PREFIX + \"Deserialization\";\n+    public static final String ExceptionStatistics = PREFIX + \"ExceptionStatistics\";\n+    public static final String JavaExceptionThrow = PREFIX + \"JavaExceptionThrow\";\n+    public static final String JavaErrorThrow = PREFIX + \"JavaErrorThrow\";\n+    public static final String ModuleRequire = PREFIX + \"ModuleRequire\";\n+    public static final String ModuleExport = PREFIX + \"ModuleExport\";\n+    public static final String TLSHandshake = PREFIX + \"TLSHandshake\";\n+    public static final String X509Certificate = PREFIX + \"X509Certificate\";\n+    public static final String X509Validation = PREFIX + \"X509Validation\";\n+    public static final String InitialSecurityProperty = PREFIX + \"InitialSecurityProperty\";\n+    public static final String SecurityProperty = PREFIX + \"SecurityPropertyModification\";\n+    public static final String SecurityProviderService = PREFIX + \"SecurityProviderService\";\n+    public static final String Deserialization = PREFIX + \"Deserialization\";\n@@ -182,5 +183,5 @@\n-    public final static String DumpReason = PREFIX + \"DumpReason\";\n-    public final static String DataLoss = PREFIX + \"DataLoss\";\n-    public final static String CPUTimeStampCounter = PREFIX + \"CPUTimeStampCounter\";\n-    public final static String ActiveRecording = PREFIX + \"ActiveRecording\";\n-    public final static String ActiveSetting = PREFIX + \"ActiveSetting\";\n+    public static final String DumpReason = PREFIX + \"DumpReason\";\n+    public static final String DataLoss = PREFIX + \"DataLoss\";\n+    public static final String CPUTimeStampCounter = PREFIX + \"CPUTimeStampCounter\";\n+    public static final String ActiveRecording = PREFIX + \"ActiveRecording\";\n+    public static final String ActiveSetting = PREFIX + \"ActiveSetting\";\n","filename":"test\/lib\/jdk\/test\/lib\/jfr\/EventNames.java","additions":133,"deletions":132,"binary":false,"changes":265,"status":"modified"}]}