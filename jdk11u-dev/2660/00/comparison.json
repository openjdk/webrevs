{"files":[{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4265784 4267291\n+ * @summary Tests work of TAB key in JTextArea\n+ * @key headful\n+ * @run main bug4265784\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+public class bug4265784 {\n+    static JFrame frame;\n+    static JTextArea ta;\n+    static volatile Point p;\n+    static volatile int pos;\n+    static volatile int pos1;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4265784\");\n+                ta = new JTextArea();\n+                frame.getContentPane().add(ta);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                p = ta.getLocationOnScreen();\n+            });\n+            robot.mouseMove(p.x + 10, p.y + 10);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pos = ta.getCaretPosition();\n+            });\n+            System.out.println(pos);\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pos1 = ta.getCaretPosition();\n+            });\n+            System.out.println(pos1);\n+            if (pos == pos1) {\n+                throw new RuntimeException(\"TAB ignored\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTextArea\/bug4265784.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"}]}