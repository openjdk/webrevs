{"files":[{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4234034\n+ * @summary Tests NullPointerException when ToolTip invoked via keyboard\n+ * @key headful\n+ * @run main bug4234034\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4234034 {\n+    static JFrame frame;\n+    static JButton button;\n+\n+    public static void main(String args[]) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4323121\");\n+                button = new JButton(\"Press tab, then Ctrl+F1\");\n+                button.setToolTipText(\"Tooltip for button\");\n+                frame.getContentPane().add(button);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            robot.keyPress(KeyEvent.VK_F1);\n+            robot.keyRelease(KeyEvent.VK_F1);\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4234034.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4323121\n+ * @summary Tests whether any button that extends JButton always\n+            returns true for isArmed()\n+ * @key headful\n+ * @run main bug4323121\n+ *\/\n+\n+import java.awt.Graphics;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4323121 {\n+\n+    static JFrame frame;\n+    static testButton button;\n+    static volatile Point pt;\n+    static volatile int buttonW;\n+    static volatile int buttonH;\n+    static volatile boolean failed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4323121\");\n+                button = new testButton(\"gotcha\");\n+                frame.getContentPane().add(button);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pt = button.getLocationOnScreen();\n+                buttonW = button.getSize().width;\n+                buttonH = button.getSize().height;\n+            });\n+            robot.mouseMove(pt.x + buttonW \/ 2, pt.y + buttonH \/ 2);\n+            robot.waitForIdle();\n+            if (failed) {\n+                throw new RuntimeException(\"Any created button returns \" +\n+                                    \"true for isArmed()\");\n+            }\n+        } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    static class testButton extends JButton implements MouseMotionListener, MouseListener {\n+        public testButton(String label) {\n+            super(label);\n+            addMouseMotionListener(this);\n+            addMouseListener(this);\n+        }\n+\n+        protected void paintComponent(Graphics g) {\n+            super.paintComponent(g);\n+        }\n+\n+        protected void paintBorder(Graphics g) {\n+        }\n+\n+        public void mousePressed(MouseEvent e) {\n+        }\n+\n+        public void mouseDragged(MouseEvent e) {\n+        }\n+\n+        public void mouseMoved(MouseEvent e) {\n+        }\n+\n+        public void mouseReleased(MouseEvent e) {\n+        }\n+\n+        public void mouseEntered(MouseEvent e) {\n+            if (getModel().isArmed()) {\n+                failed = true;\n+            }\n+        }\n+\n+        public void mouseExited(MouseEvent e) {\n+        }\n+\n+        public void mouseClicked(MouseEvent e) {\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4323121.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4490179\n+ * @summary Tests that JButton only responds to left mouse clicks.\n+ * @key headful\n+ * @run main bug4490179\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4490179 {\n+    static JFrame frame;\n+    static JButton button;\n+    static volatile Point pt;\n+    static volatile int buttonW;\n+    static volatile int buttonH;\n+    static volatile boolean passed = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4490179\");\n+                button = new JButton(\"Button\");\n+                frame.getContentPane().add(button);\n+                button.addActionListener(new ActionListener() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        passed = false;\n+                    }\n+                });\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pt = button.getLocationOnScreen();\n+                buttonW = button.getSize().width;\n+                buttonH = button.getSize().height;\n+            });\n+\n+            robot.mouseMove(pt.x + buttonW \/ 2, pt.y + buttonH \/ 2);\n+            robot.waitForIdle();\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test Failed\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4490179.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"}]}