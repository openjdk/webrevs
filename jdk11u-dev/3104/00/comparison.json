{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,17 @@\n+\n+        \/\/ Check whether swapping really works for this test\n+        \/\/ On some systems there is no swap space enabled. And running\n+        \/\/ 'java -Xms{mem-limit} -Xmx{mem-limit} -version' would fail due to swap space size being 0.\n+        DockerRunOptions preOpts =\n+                new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", \"-version\");\n+        preOpts.addDockerOpts(\"--volume\", Utils.TEST_CLASSES + \":\/test-classes\/\")\n+                .addDockerOpts(\"--memory=\" + value)\n+                .addJavaOpts(\"-Xms\" + value)\n+                .addJavaOpts(\"-Xmx\" + value);\n+        OutputAnalyzer oa = DockerTestUtils.dockerRunJava(preOpts);\n+        String output = oa.getOutput();\n+        if (!output.contains(\"version\")) {\n+            System.out.println(\"Swapping doesn't work for this test.\");\n+            return;\n+        }\n+\n@@ -119,1 +136,7 @@\n-        DockerTestUtils.dockerRunJava(opts).shouldHaveExitValue(0).shouldContain(\"TEST PASSED!!!\");\n+        oa = DockerTestUtils.dockerRunJava(opts);\n+        output = oa.getOutput();\n+        if (output.contains(\"Ignoring test\")) {\n+            System.out.println(\"Ignored by the tester\");\n+            return;\n+        }\n+        oa.shouldHaveExitValue(0).shouldContain(\"TEST PASSED!!!\");\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/TestDockerMemoryMetrics.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"}]}