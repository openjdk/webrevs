{"files":[{"patch":"@@ -33,0 +33,1 @@\n+ *        compiler.codecache.stress.TestCaseImpl\n@@ -56,1 +57,1 @@\n-public class OverloadCompileQueueTest implements Runnable {\n+class LockUnlockThread extends Thread {\n@@ -58,0 +59,26 @@\n+    private static final int DELAY_BETWEEN_LOCKS = 100;\n+    private final Random rng = Utils.getRandomInstance();\n+\n+    public volatile boolean isActive = true;\n+\n+    @Override\n+    public void run() {\n+        try {\n+            while (isActive) {\n+                int timeInLockedState = rng.nextInt(MAX_SLEEP);\n+                Helper.WHITE_BOX.lockCompilation();\n+                Thread.sleep(timeInLockedState);\n+                Helper.WHITE_BOX.unlockCompilation();\n+                Thread.sleep(DELAY_BETWEEN_LOCKS);\n+            }\n+        } catch (InterruptedException e) {\n+            if (isActive) {\n+                throw new Error(\"TESTBUG: LockUnlockThread was unexpectedly interrupted\", e);\n+            }\n+        } finally {\n+            Helper.WHITE_BOX.unlockCompilation();\n+        }\n+    }\n+}\n+\n+public class OverloadCompileQueueTest implements Runnable {\n@@ -66,1 +93,0 @@\n-    private final Random rng = Utils.getRandomInstance();\n@@ -81,1 +107,4 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws InterruptedException {\n+        LockUnlockThread lockUnlockThread = new LockUnlockThread();\n+        lockUnlockThread.start();\n+\n@@ -86,1 +115,0 @@\n-    }\n@@ -88,2 +116,3 @@\n-    public OverloadCompileQueueTest() {\n-        Helper.startInfiniteLoopThread(this::lockUnlock, 100L);\n+        lockUnlockThread.isActive = false;\n+        lockUnlockThread.interrupt();\n+        lockUnlockThread.join();\n@@ -109,12 +138,0 @@\n-    private void lockUnlock() {\n-        try {\n-            int sleep = rng.nextInt(MAX_SLEEP);\n-            Helper.WHITE_BOX.lockCompilation();\n-            Thread.sleep(sleep);\n-        } catch (InterruptedException e) {\n-            throw new Error(\"TESTBUG: lockUnlocker thread was unexpectedly interrupted\", e);\n-        } finally {\n-            Helper.WHITE_BOX.unlockCompilation();\n-        }\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/OverloadCompileQueueTest.java","additions":35,"deletions":18,"binary":false,"changes":53,"status":"modified"}]}