{"files":[{"patch":"@@ -28,1 +28,1 @@\n- *\n+ * @build sun.hotspot.WhiteBox\n@@ -33,1 +33,2 @@\n-\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n@@ -37,0 +38,1 @@\n+ *                   -XX:+WhiteBoxAPI\n@@ -53,0 +55,2 @@\n+import sun.hotspot.code.Compiler;\n+\n@@ -223,1 +227,10 @@\n-        run(c, null, setDefaultAction);\n+        testMismatched(c, setDefaultAction, false);\n+    }\n+\n+    static void testMismatched(Callable<?> c, Runnable setDefaultAction, boolean objectArray) throws Exception {\n+        if (Compiler.isGraalEnabled() && !objectArray) {\n+            \/\/ Graal will constant fold mismatched reads from primitive stable arrays\n+            run(c, setDefaultAction, null);\n+        } else {\n+            run(c, null, setDefaultAction);\n+        }\n@@ -309,2 +322,2 @@\n-        testMismatched(Test::testL_J, Test::changeL); \/\/ long & double are always as large as an OOP\n-        testMismatched(Test::testL_D, Test::changeL);\n+        testMismatched(Test::testL_J, Test::changeL, true); \/\/ long & double are always as large as an OOP\n+        testMismatched(Test::testL_D, Test::changeL, true);\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/UnsafeGetStableArrayElement.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"}]}