{"files":[{"patch":"@@ -1,42 +0,0 @@\n-<html>\n-<!--\n- Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<!--  \n-  @test\n-  @bug 4082144 7150100\n-  @summary  Ensures that TextArea.select() works when called \n-            before setVisible() \n-  @author Eric.Hawkes: area=TextComponent\n-  @run applet\/manual=yesno SelectionVisible.html\n-  -->\n-<head>\n-<title> SelectionVisible <\/title>\n-<\/head>\n-<body>\n-\n-<h1> SelectionVisible<br> Bugid: 4082144 <\/h1>\n-\n-<APPLET CODE=\"SelectionVisible.class\" WIDTH=400 HEIGHT=160><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/TextArea\/SelectionVisible\/SelectionVisible.html","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,6 +24,1 @@\n-\n-import java.applet.Applet;\n-import java.awt.BorderLayout;\n-import java.awt.Dimension;\n-import java.awt.FlowLayout;\n-import java.awt.Panel;\n+import java.awt.Frame;\n@@ -31,0 +26,12 @@\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static java.awt.EventQueue.invokeAndWait;\n+\n+\/*\n+  @test\n+  @key headful\n+  @bug 4082144 7150100\n+  @summary  Ensures that TextArea.select() works when called\n+            before setVisible()\n+  @run main SelectionVisible\n+*\/\n@@ -32,1 +39,1 @@\n-public final class SelectionVisible extends Applet {\n+public class SelectionVisible {\n@@ -34,1 +41,2 @@\n-    private TextArea ta;\n+    private static TextArea ta;\n+    private static Frame frame;\n@@ -36,2 +44,2 @@\n-    @Override\n-    public void init() {\n+    public static void createTestUI() {\n+        frame = new Frame(\"Test 4082144 7150100\");\n@@ -42,14 +50,4 @@\n-        final TextArea instruction = new TextArea(\"INSTRUCTIONS:\\n\"\n-                                                 + \"The text 34567 should be selected in the TextArea.\\n\"\n-                                                 + \"If this is what you observe, then the test passes.\\n\"\n-                                                 + \"Otherwise, the test fails.\", 40, 5,\n-                                         TextArea.SCROLLBARS_NONE);\n-        instruction.setEditable(false);\n-        instruction.setPreferredSize(new Dimension(300, 70));\n-        final Panel panel = new Panel();\n-        panel.setLayout(new FlowLayout());\n-        panel.add(ta);\n-        setLayout(new BorderLayout());\n-        add(instruction, BorderLayout.CENTER);\n-        add(panel, BorderLayout.PAGE_END);\n-    }\n+        frame.add(ta);\n+        frame.setLocationRelativeTo(null);\n+        frame.pack();\n+        frame.setVisible(true);\n@@ -57,3 +55,0 @@\n-    @Override\n-    public void start() {\n-        setVisible(true);\n@@ -62,0 +57,25 @@\n+\n+    public static void test() throws InterruptedException,\n+            InvocationTargetException {\n+        String selectedText = ta.getSelectedText();\n+        System.out.println(\"selectedText : \" + selectedText);\n+        invokeAndWait(SelectionVisible::disposeFrame);\n+        if (!selectedText.equals(\"34\\n567\")) {\n+            throw new RuntimeException(\"Expected '34\\n567' to be \" +\n+                    \"selected text, but got \" + selectedText);\n+        }\n+        System.out.println(\"Test passed\");\n+    }\n+\n+    public static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        invokeAndWait(SelectionVisible::createTestUI);\n+        test();\n+    }\n+\n","filename":"test\/jdk\/java\/awt\/TextArea\/SelectionVisible\/SelectionVisible.java","additions":48,"deletions":28,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-<html>\n-<!--\n- Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<!--  \n-  @test\n-  @bug 4082144 7150100\n-  @summary  Ensures that TextField.select() works when called \n-            before setVisible() \n-  @author Eric.Hawkes: area=TextComponent\n-  @run applet\/manual=yesno SelectionVisible.html\n-  -->\n-<head>\n-<title> SelectionVisible <\/title>\n-<\/head>\n-<body>\n-\n-<h1> SelectionVisible<br> Bugid: 4082144 <\/h1>\n-\n-<APPLET CODE=\"SelectionVisible.class\" WIDTH=400 HEIGHT=160><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/TextField\/SelectionVisible\/SelectionVisible.html","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,7 +24,1 @@\n-\n-import java.applet.Applet;\n-import java.awt.BorderLayout;\n-import java.awt.Dimension;\n-import java.awt.FlowLayout;\n-import java.awt.Panel;\n-import java.awt.TextArea;\n+import java.awt.Frame;\n@@ -32,0 +26,11 @@\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static java.awt.EventQueue.invokeAndWait;\n+\/*\n+  @test\n+  @key headful\n+  @bug 4082144 7150100\n+  @summary  Ensures that TextField.select() works when called\n+            before setVisible()\n+  @run main SelectionVisible\n+ *\/\n@@ -33,1 +38,1 @@\n-public final class SelectionVisible extends Applet {\n+public class SelectionVisible {\n@@ -35,1 +40,2 @@\n-    TextField tf;\n+    private static Frame frame;\n+    private static TextField tf;\n@@ -37,2 +43,2 @@\n-    @Override\n-    public void init() {\n+    public static void createTestUI() {\n+        frame = new Frame(\"Test TextField.select()\");\n@@ -42,0 +48,17 @@\n+        frame.add(tf);\n+        frame.setSize(200,200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void test() throws InterruptedException,\n+            InvocationTargetException {\n+        String selectedText = tf.getSelectedText();\n+        System.out.println(\"Selected Text : \" + selectedText);\n+        invokeAndWait(SelectionVisible::disposeFrame);\n+        if (!selectedText.equals(\"012345\")) {\n+            throw new RuntimeException(\"Expected 012345 to be selected but \" +\n+                    \"got \" + selectedText);\n+        }\n+        System.out.println(\"Test passed\");\n+    }\n@@ -43,13 +66,4 @@\n-        final TextArea ta = new TextArea(\"INSTRUCTIONS:\\n\"\n-                                         + \"The text 012345 should be selected in the TextField.\\n\"\n-                                         + \"If this is what you observe, then the test passes.\\n\"\n-                                         + \"Otherwise, the test fails.\", 40, 5,\n-                                         TextArea.SCROLLBARS_NONE);\n-        ta.setEditable(false);\n-        ta.setPreferredSize(new Dimension(300, 70));\n-        final Panel panel = new Panel();\n-        panel.setLayout(new FlowLayout());\n-        panel.add(tf);\n-        setLayout(new BorderLayout());\n-        add(ta, BorderLayout.CENTER);\n-        add(panel, BorderLayout.PAGE_END);\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n@@ -58,4 +72,4 @@\n-    @Override\n-    public void start() {\n-        setVisible(true);\n-        tf.requestFocus();\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        invokeAndWait(SelectionVisible::createTestUI);\n+        test();\n","filename":"test\/jdk\/java\/awt\/TextField\/SelectionVisible\/SelectionVisible.java","additions":43,"deletions":29,"binary":false,"changes":72,"status":"modified"}]}