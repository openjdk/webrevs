{"files":[{"patch":"@@ -145,17 +145,0 @@\n-  AC_ARG_ENABLE([xcode14], [AS_HELP_STRING([--enable-xcode14],\n-      [add additional CFLAGS for compiling with XCode 14 toolset @<:@enabled@:>@])])\n-\n-  # Set default values\n-  CFLAGS_XCODE14_DEPR_DECLARATIONS=\"\"\n-  CFLAGS_XCODE14_DEPR_NON_PROTOTYPE=\"\"\n-  if test \"x$enable_xcode14\" = \"xyes\"; then\n-    if test \"x$OPENJDK_BUILD_OS\" != \"xmacosx\"; then\n-      AC_MSG_ERROR([--enable-xcode14 can only be set if building on macosx])\n-    fi\n-    CFLAGS_XCODE14_DEPR_DECLARATIONS=\"-Wno-deprecated-declarations\"\n-    CFLAGS_XCODE14_DEPR_NON_PROTOTYPE=\"-Wno-deprecated-non-prototype\"\n-    AC_MSG_RESULT([Building on macosx with XCode 14 flags])\n-  fi\n-  AC_SUBST(CFLAGS_XCODE14_DEPR_DECLARATIONS)\n-  AC_SUBST(CFLAGS_XCODE14_DEPR_NON_PROTOTYPE)\n-\n@@ -229,0 +212,7 @@\n+      if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+        CLANG_VERSION_MAJOR=`echo $CLANG_VERSION_NUMBER | awk -F. '{print $1}'`\n+        # Add \"-Wno-deprecated-declarations\" and \"-Wno-deprecated-non-prototype\" on macosx\/clang >= 14.x.y\n+        if [ \"0$CLANG_VERSION_MAJOR\" -gt 13 ]; then\n+          DISABLED_WARNINGS=\"unused-parameter unused deprecated-declarations deprecated-non-prototype\"\n+        fi\n+      fi\n","filename":"make\/autoconf\/flags-cflags.m4","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -775,2 +775,0 @@\n-CFLAGS_XCODE14_DEPR_DECLARATIONS=@CFLAGS_XCODE14_DEPR_DECLARATIONS@\n-CFLAGS_XCODE14_DEPR_NON_PROTOTYPE=@CFLAGS_XCODE14_DEPR_NON_PROTOTYPE@\n","filename":"make\/autoconf\/spec.gmk.in","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,0 @@\n-  else ifeq ($(call isBuildOs, macosx), true)\n-    ADLC_CFLAGS := $(CFLAGS_XCODE14_DEPR_DECLARATIONS)\n","filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    CFLAGS_macosx := -fPIC $(CFLAGS_XCODE14_DEPR_DECLARATIONS), \\\n+    CFLAGS_macosx := -fPIC, \\\n","filename":"make\/launcher\/Launcher-jdk.pack.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -211,4 +211,0 @@\n-ifeq ($(call isBuildOs, macosx), true)\n-  LIBAWT_CFLAGS += $(CFLAGS_XCODE14_DEPR_NON_PROTOTYPE)\n-endif\n-\n@@ -938,1 +934,1 @@\n-  LIBAWT_LWAWT_CFLAGS := $(X_CFLAGS) $(X_LIBS) $(CFLAGS_XCODE14_DEPR_NON_PROTOTYPE)\n+  LIBAWT_LWAWT_CFLAGS := $(X_CFLAGS) $(X_LIBS)\n","filename":"make\/lib\/Awt2dLibraries.gmk","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,1 +68,0 @@\n-      CFLAGS_macosx := $(CFLAGS_XCODE14_DEPR_DECLARATIONS), \\\n","filename":"make\/lib\/Lib-java.desktop.gmk","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    CFLAGS_macosx := $(CFLAGS_XCODE14_DEPR_DECLARATIONS), \\\n","filename":"make\/lib\/Lib-jdk.pack.gmk","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -149,5 +149,0 @@\n-ifeq ($(call isBuildOs, macosx), true)\n-   NSK_AOD_INCLUDES += $(CFLAGS_XCODE14_DEPR_DECLARATIONS)\n-   JVMTI_COMMON_INCLUDES += $(CFLAGS_XCODE14_DEPR_DECLARATIONS)\n-endif\n-\n","filename":"make\/test\/JtregNativeHotspot.gmk","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}