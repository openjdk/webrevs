{"files":[{"patch":"@@ -712,1 +712,9 @@\n-  return TieredCompilation ? MIN2((CompLevel) TieredStopAtLevel, CompLevel_highest_tier) : CompLevel_highest_tier;\n+  CompLevel level = CompLevel_none;\n+  if (!Arguments::is_interpreter_only()) {\n+    if (TieredCompilation) {\n+      level = MIN2((CompLevel) TieredStopAtLevel, CompLevel_highest_tier);\n+    } else {\n+      level = CompLevel_highest_tier;\n+    }\n+  }\n+  return level;\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+ * @run main\/othervm -Xint\n+ * -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * compiler.codegen.aes.CTR_Wraparound 32\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/CTR_Wraparound.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,3 @@\n+ * @run main\/othervm -Xint\n+ * -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * compiler.codegen.aes.Test8292158\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/Test8292158.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,3 @@\n+ * @run main\/othervm\/timeout=600 -Xint -DcheckOutput=true -Dmode=CBC\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *      compiler.codegen.aes.TestAESMain\n@@ -61,0 +64,3 @@\n+ * @run main\/othervm\/timeout=600 -Xint -DcheckOutput=true -Dmode=ECB\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *      compiler.codegen.aes.TestAESMain\n@@ -83,0 +89,3 @@\n+ * @run main\/othervm\/timeout=600 -Xint -DcheckOutput=true -Dmode=GCM\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *      compiler.codegen.aes.TestAESMain\n@@ -104,0 +113,3 @@\n+ *      compiler.codegen.aes.TestAESMain\n+ * @run main\/othervm\/timeout=600 -Xint -DcheckOutput=true -Dmode=CTR\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestAESMain.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,0 +36,3 @@\n+ * @run main\/othervm -Xint\n+ *     -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *      compiler.codegen.aes.TestCipherBlockChainingEncrypt\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestCipherBlockChainingEncrypt.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,0 +43,6 @@\n+ * @run main\/othervm -Xbootclasspath\/a:.\n+ *                   -Xint\n+ *                   -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+WhiteBoxAPI\n+ *                   -XX:-UseCRC32Intrinsics\n+ *                   compiler.intrinsics.IntrinsicAvailableTest\n@@ -50,0 +56,1 @@\n+import jtreg.SkippedException;\n@@ -116,0 +123,3 @@\n+        if (Platform.isInt()) {\n+            throw new SkippedException(\"Compiler not available with -Xint\");\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/IntrinsicAvailableTest.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,0 +35,5 @@\n+ * @run main\/othervm -Xint\n+ *                   -Xbootclasspath\/a:.\n+ *                   -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+WhiteBoxAPI\n+ *                   compiler.intrinsics.IntrinsicDisabledTest\n@@ -50,0 +55,1 @@\n+import jtreg.SkippedException;\n@@ -202,1 +208,3 @@\n-        if (Platform.isServer() && !Platform.isEmulatedClient() &&\n+        if (Platform.isInt()) {\n+            throw new SkippedException(\"Compiler not available with -Xint\");\n+        } else if (Platform.isServer() && !Platform.isEmulatedClient() &&\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/IntrinsicDisabledTest.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+ *      compiler.intrinsics.base64.TestBase64\n+ * @run main\/othervm\/timeout=600 -Xint -DcheckOutput=true\n+ *       -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/base64\/TestBase64.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+ * @run main\/othervm -Xint -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *      compiler.intrinsics.bigInteger.MontgomeryMultiplyTest\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bigInteger\/MontgomeryMultiplyTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}