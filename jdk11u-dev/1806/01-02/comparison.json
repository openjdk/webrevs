{"files":[{"patch":"@@ -49,0 +49,7 @@\n+\n+\/\/ these constants are duplicated in CAccessibility.java\n+#define JAVA_AX_ALL_CHILDREN (-1)\n+#define JAVA_AX_SELECTED_CHILDREN (-2)\n+#define JAVA_AX_VISIBLE_CHILDREN (-3)\n+\/\/ If the value is >=0, it's an index\n+\n@@ -122,0 +129,13 @@\n+\n+@interface ScrollAreaAccessibility : JavaComponentAccessibility {\n+\n+}\n+- (NSArray *)initializeAttributeNamesWithEnv:(JNIEnv *)env;\n+- (NSArray *)accessibilityContentsAttribute;\n+- (BOOL)accessibilityIsContentsAttributeSettable;\n+- (id)accessibilityVerticalScrollBarAttribute;\n+- (BOOL)accessibilityIsVerticalScrollBarAttributeSettable;\n+- (id)accessibilityHorizontalScrollBarAttribute;\n+- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;\n+@end\n+\n@@ -378,0 +398,2 @@\n+        } else if ([javaRole isEqualToString:@\"scrollpane\"]) {\n+            newChild = [ScrollAreaAccessibility alloc];\n@@ -1872,0 +1894,99 @@\n+@implementation ScrollAreaAccessibility\n+\n+- (NSArray *)initializeAttributeNamesWithEnv:(JNIEnv *)env\n+{\n+    NSMutableArray *names = (NSMutableArray *)[super initializeAttributeNamesWithEnv:env];\n+\n+    [names addObject:NSAccessibilityHorizontalScrollBarAttribute];\n+    [names addObject:NSAccessibilityVerticalScrollBarAttribute];\n+    [names addObject:NSAccessibilityContentsAttribute];\n+\n+    return names;\n+}\n+\n+- (id)accessibilityHorizontalScrollBarAttribute\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+\n+    NSArray *children = [JavaComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n+    if ([children count] <= 0) return nil;\n+\n+    \/\/ The scroll bars are in the children.\n+    JavaComponentAccessibility *aElement;\n+    NSEnumerator *enumerator = [children objectEnumerator];\n+    while ((aElement = (JavaComponentAccessibility *)[enumerator nextObject])) {\n+        if ([[aElement accessibilityRoleAttribute] isEqualToString:NSAccessibilityScrollBarRole]) {\n+            jobject elementAxContext = [aElement axContextWithEnv:env];\n+            if (isHorizontal(env, elementAxContext, fComponent)) {\n+                (*env)->DeleteLocalRef(env, elementAxContext);\n+                return aElement;\n+            }\n+            (*env)->DeleteLocalRef(env, elementAxContext);\n+        }\n+    }\n+\n+    return nil;\n+}\n+\n+- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable\n+{\n+    return NO;\n+}\n+\n+- (id)accessibilityVerticalScrollBarAttribute\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+\n+    NSArray *children = [JavaComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n+    if ([children count] <= 0) return nil;\n+\n+    \/\/ The scroll bars are in the children.\n+    NSEnumerator *enumerator = [children objectEnumerator];\n+    JavaComponentAccessibility *aElement;\n+    while ((aElement = (JavaComponentAccessibility *)[enumerator nextObject])) {\n+        if ([[aElement accessibilityRoleAttribute] isEqualToString:NSAccessibilityScrollBarRole]) {\n+            jobject elementAxContext = [aElement axContextWithEnv:env];\n+            if (isVertical(env, elementAxContext, fComponent)) {\n+                (*env)->DeleteLocalRef(env, elementAxContext);\n+                return aElement;\n+            }\n+            (*env)->DeleteLocalRef(env, elementAxContext);\n+        }\n+    }\n+\n+    return nil;\n+}\n+\n+- (BOOL)accessibilityIsVerticalScrollBarAttributeSettable\n+{\n+    return NO;\n+}\n+\n+- (NSArray *)accessibilityContentsAttribute\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    NSArray *children = [JavaComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n+\n+    if ([children count] <= 0) return nil;\n+    NSArray *contents = [NSMutableArray arrayWithCapacity:[children count]];\n+\n+    \/\/ The scroll bars are in the children. children less the scroll bars is the contents\n+    NSEnumerator *enumerator = [children objectEnumerator];\n+    JavaComponentAccessibility *aElement;\n+    while ((aElement = (JavaComponentAccessibility *)[enumerator nextObject])) {\n+        if (![[aElement accessibilityRoleAttribute] isEqualToString:NSAccessibilityScrollBarRole]) {\n+            \/\/ no scroll bars in contents\n+            [(NSMutableArray *)contents addObject:aElement];\n+        }\n+    }\n+\n+    return contents;\n+}\n+\n+- (BOOL)accessibilityIsContentsAttributeSettable\n+{\n+    return NO;\n+}\n+\n+@end\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":121,"deletions":0,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -32,6 +32,0 @@\n-\/\/ these constants are duplicated in CAccessibility.java\n-#define JAVA_AX_ALL_CHILDREN (-1)\n-#define JAVA_AX_SELECTED_CHILDREN (-2)\n-#define JAVA_AX_VISIBLE_CHILDREN (-3)\n-\/\/ If the value is >=0, it's an index\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:35];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:29];\n@@ -64,6 +64,0 @@\n-    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"awtcomponent\"];\n-    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"canvas\"];\n-    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"groupbox\"];\n-    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"internalframe\"];\n-    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"swingcomponent\"];\n-    [rolesMap setObject:@\"ToolbarAccessibility\" forKey:@\"toolbar\"];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}