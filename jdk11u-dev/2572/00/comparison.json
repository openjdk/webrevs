{"files":[{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComponent;\n+import javax.swing.JSpinner;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectOutputStream;\n+\n+\/*\n+ * @test\n+ * @bug 4522737\n+ * @summary Cannot serialize JSpinner twice.\n+ * @run main bug4522737\n+ *\/\n+\n+public class bug4522737 {\n+    public static void main(String[] args) throws Exception {\n+        final JComponent originalComponent = new JSpinner();\n+\n+        ByteArrayOutputStream byteArrayOutputStream =\n+                new ByteArrayOutputStream();\n+        ObjectOutputStream objectOutputStream =\n+                new ObjectOutputStream(byteArrayOutputStream);\n+        objectOutputStream.writeObject(originalComponent);\n+\n+        objectOutputStream = new ObjectOutputStream(byteArrayOutputStream);\n+        objectOutputStream.writeObject(originalComponent);\n+\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/bug4522737.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,117 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerDateModel;\n+import javax.swing.SpinnerListModel;\n+import javax.swing.SpinnerNumberModel;\n+import javax.swing.SwingUtilities;\n+import java.awt.Font;\n+import java.awt.GridLayout;\n+import java.awt.Robot;\n+\n+\/*\n+ * @test\n+ * @bug 4656590\n+ * @summary JSpinner.setFont() does nothing\n+ * @key headful\n+ * @run main bug4656590\n+ *\/\n+\n+public class bug4656590 {\n+    private static JSpinner[] spinner = new JSpinner[6];\n+    private static Font font = new Font(\"Arial\", Font.BOLD, 24);\n+    private static volatile boolean failed = false;\n+    private static JFrame frame;\n+    private static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                frame.getContentPane().setLayout(new GridLayout(3, 2));\n+                spinner[0] = new JSpinner();\n+                spinner[0].setModel(new SpinnerNumberModel());\n+                spinner[0].setFont(font);\n+                frame.getContentPane().add(spinner[0]);\n+\n+                spinner[1] = new JSpinner();\n+                spinner[1].setModel(new SpinnerDateModel());\n+                spinner[1].setFont(font);\n+                frame.getContentPane().add(spinner[1]);\n+\n+                spinner[2] = new JSpinner();\n+                spinner[2].setModel(new SpinnerListModel\n+                        (new Object[]{\"one\", \"two\", \"three\"}));\n+                spinner[2].setFont(font);\n+                frame.getContentPane().add(spinner[2]);\n+\n+                spinner[3] = new JSpinner();\n+                spinner[3].setFont(font);\n+                spinner[3].setModel(new SpinnerNumberModel());\n+                frame.getContentPane().add(spinner[3]);\n+\n+                spinner[4] = new JSpinner();\n+                spinner[4].setFont(font);\n+                spinner[4].setModel(new SpinnerDateModel());\n+                frame.getContentPane().add(spinner[4]);\n+\n+                spinner[5] = new JSpinner();\n+                spinner[5].setFont(font);\n+                spinner[5].setModel(new SpinnerListModel\n+                        (new Object[]{\"one\", \"two\", \"three\"}));\n+                frame.getContentPane().add(spinner[5]);\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                JFormattedTextField ftf;\n+                for (int i = 1; i < 6; i++) {\n+                    ftf = ((JSpinner.DefaultEditor)\n+                            spinner[i].getEditor()).getTextField();\n+                    if (!ftf.getFont().equals(font)) {\n+                        failed = true;\n+                    }\n+                }\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            if (failed) {\n+                throw new RuntimeException(\"JSpinner.setFont() \" +\n+                        \"doesn't set the font properly\");\n+            }\n+            System.out.println(\"Test Passed!\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/bug4656590.java","additions":117,"deletions":0,"binary":false,"changes":117,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JSpinner;\n+import javax.swing.JTextField;\n+import javax.swing.SpinnerNumberModel;\n+import javax.swing.SwingUtilities;\n+import java.awt.Component;\n+import java.awt.FlowLayout;\n+import java.awt.Robot;\n+\n+\/*\n+ * @test\n+ * @bug 4680204\n+ * @summary JSpinner shows ToolTipText only on it's border\n+ * @key headful\n+ * @run main bug4680204\n+ *\/\n+\n+public class bug4680204 {\n+\n+    private static JSpinner sp1, sp2;\n+    private static final String TOOL_TIP_TEXT = \"ToolTipText\";\n+    private static JFrame frame;\n+    private static Robot robot;\n+    private static volatile boolean failed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                frame.getContentPane().setLayout(new FlowLayout());\n+\n+                sp1 = new JSpinner(new SpinnerNumberModel(1, 1, 100, 1));\n+                sp1.setToolTipText(TOOL_TIP_TEXT);\n+                frame.getContentPane().add(sp1);\n+\n+                sp2 = new JSpinner();\n+                sp2.setToolTipText(TOOL_TIP_TEXT);\n+                frame.getContentPane().add(sp2);\n+                sp2.setModel(new SpinnerNumberModel(1, 1, 100, 1));\n+                frame.setLocationRelativeTo(null);\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                Component[] children = sp1.getComponents();\n+                for (int i = 0; i < children.length; i++) {\n+                    if (children[i] instanceof JSpinner.DefaultEditor) {\n+                        JTextField tf = ((JSpinner.DefaultEditor) children[i]).getTextField();\n+                        if (!TOOL_TIP_TEXT.equals(tf.getToolTipText())) {\n+                            failed = true;\n+                        }\n+                    } else if (children[i] instanceof JComponent) {\n+                        String text = ((JComponent) children[i]).getToolTipText();\n+                        if (!TOOL_TIP_TEXT.equals(text)) {\n+                            failed = true;\n+                        }\n+                    }\n+                }\n+\n+                children = sp2.getComponents();\n+                for (int i = 0; i < children.length; i++) {\n+                    if (children[i] instanceof JSpinner.DefaultEditor) {\n+                        JTextField tf = ((JSpinner.DefaultEditor) children[i]).getTextField();\n+                        if (!TOOL_TIP_TEXT.equals(tf.getToolTipText())) {\n+                            failed = true;\n+                        }\n+                    } else if (children[i] instanceof JComponent) {\n+                        String text = ((JComponent) children[i]).getToolTipText();\n+                        if (!TOOL_TIP_TEXT.equals(text)) {\n+                            failed = true;\n+                        }\n+                    }\n+                }\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            if (failed) {\n+                throw new RuntimeException(\"The tooltip text is not correctly set for JSpinner\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/bug4680204.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JSpinner;\n+\n+\/*\n+ * @test\n+ * @bug 4862257\n+ * @summary Class cast Exception occurred when JButton is set to JSpinner\n+ * @run main bug4862257\n+ *\/\n+\n+public class bug4862257 {\n+    public static void main(String[] argv) {\n+        JSpinner spinner = new JSpinner();\n+        spinner.setEditor(new JButton(\"JButton\"));\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/bug4862257.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.SpinnerDateModel;\n+\n+\/*\n+ * @test\n+ * @bug 5104421\n+ * @summary SpinnerDateModel.setValue(Object) throws exception with incorrect message\n+ * @run main bug5104421\n+ *\/\n+\n+public class bug5104421 {\n+    public static void main(String[] args) {\n+        SpinnerDateModel model = new SpinnerDateModel();\n+        try {\n+            model.setValue(Integer.valueOf(42));\n+        } catch (IllegalArgumentException e) {\n+            if (e.getMessage().toLowerCase().indexOf(\"null value\") != -1) {\n+                throw new RuntimeException(\"SpinnerDateModel.setValue(Object) throws \" +\n+                        \"exception with incorrect message\");\n+            }\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/bug5104421.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}