{"files":[{"patch":"@@ -61,0 +61,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -116,1 +118,5 @@\n-        main(new Basic(), args);\n+        try {\n+            main(new Basic(), args);\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/Basic.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -122,1 +124,5 @@\n-        main(new ClientAuth());\n+        try {\n+            main(new ClientAuth());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/ClientAuth.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -65,1 +67,5 @@\n-        main(new SecretKeysBasic());\n+        try {\n+            main(new SecretKeysBasic());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/SecretKeysBasic.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+import jtreg.SkippedException;\n@@ -67,2 +68,0 @@\n-    private boolean enableSM = false;\n-\n@@ -70,1 +69,0 @@\n-\n@@ -72,1 +70,0 @@\n-\n@@ -75,1 +72,0 @@\n-\n@@ -77,1 +73,0 @@\n-\n@@ -80,3 +75,0 @@\n-    private static final String DEFAULT_POLICY =\n-            BASE + SEP + \"..\" + SEP + \"policy\";\n-\n@@ -90,0 +82,19 @@\n+    private static final String DEFAULT_POLICY = BASE + SEP + \"..\" + SEP + \"policy\";\n+    private static final String PKCS11_REL_PATH = \"sun\/security\/pkcs11\";\n+    private static final char[] HEX_DIGITS = \"0123456789abcdef\".toCharArray();\n+\n+    static double nss_version = -1;\n+    static ECCState nss_ecc_status = ECCState.Basic;\n+\n+    \/\/ The NSS library we need to search for in getNSSLibDir()\n+    \/\/ Default is \"libsoftokn3.so\", listed as \"softokn3\"\n+    \/\/ The other is \"libnss3.so\", listed as \"nss3\".\n+    static String nss_library = \"softokn3\";\n+\n+    \/\/ NSS versions of each library.  It is simpler to keep nss_version\n+    \/\/ for quick checking for generic testing than many if-else statements.\n+    static double softoken3_version = -1;\n+    static double nss3_version = -1;\n+    static Provider pkcs11 = newPKCS11Provider();\n+    private static String PKCS11_BASE;\n+    private static Map<String, String[]> osMap;\n@@ -104,9 +115,7 @@\n-    \/\/ NSS version info\n-    public static enum ECCState { None, Basic, Extended };\n-    static double nss_version = -1;\n-    static ECCState nss_ecc_status = ECCState.Extended;\n-\n-    \/\/ The NSS library we need to search for in getNSSLibDir()\n-    \/\/ Default is \"libsoftokn3.so\", listed as \"softokn3\"\n-    \/\/ The other is \"libnss3.so\", listed as \"nss3\".\n-    static String nss_library = \"softokn3\";\n+    static {\n+        try {\n+            PKCS11_BASE = getBase();\n+        } catch (Exception e) {\n+            \/\/ ignore\n+        }\n+    }\n@@ -114,5 +123,1 @@\n-    \/\/ NSS versions of each library.  It is simplier to keep nss_version\n-    \/\/ for quick checking for generic testing than many if-else statements.\n-    static double softoken3_version = -1;\n-    static double nss3_version = -1;\n-    static Provider pkcs11 = newPKCS11Provider();\n+    private boolean enableSM = false;\n@@ -155,1 +160,1 @@\n-        ServiceLoader sl = ServiceLoader.load(java.security.Provider.class);\n+        ServiceLoader<Provider> sl = ServiceLoader.load(java.security.Provider.class);\n@@ -173,2 +178,2 @@\n-                Class clazz = Class.forName(\"sun.security.pkcs11.SunPKCS11\");\n-                p = (Provider) clazz.newInstance();\n+                Class<?> clazz = Class.forName(\"sun.security.pkcs11.SunPKCS11\");\n+                p = (Provider) clazz.getDeclaredConstructor().newInstance();\n@@ -208,32 +213,0 @@\n-    public abstract void main(Provider p) throws Exception;\n-\n-    protected boolean skipTest(Provider p) {\n-        return false;\n-    }\n-\n-    private void premain(Provider p) throws Exception {\n-        if (skipTest(p)) {\n-            return;\n-        }\n-\n-        \/\/ set a security manager and policy before a test case runs,\n-        \/\/ and disable them after the test case finished\n-        try {\n-            if (enableSM) {\n-                System.setSecurityManager(new SecurityManager());\n-            }\n-            long start = System.currentTimeMillis();\n-            System.out.printf(\n-                    \"Running test with provider %s (security manager %s) ...%n\",\n-                        p.getName(), enableSM ? \"enabled\" : \"disabled\");\n-            main(p);\n-            long stop = System.currentTimeMillis();\n-            System.out.println(\"Completed test with provider \" + p.getName() +\n-                \" (\" + (stop - start) + \" ms).\");\n-        } finally {\n-            if (enableSM) {\n-                System.setSecurityManager(null);\n-            }\n-        }\n-    }\n-\n@@ -264,3 +237,33 @@\n-            testDefault(test);\n-            testNSS(test);\n-            testDeimos(test);\n+            boolean skippedDefault = false;\n+            boolean skippedNSS = false;\n+            boolean skippedDeimos = false;\n+\n+            \/\/ Use separate try-catch for each test to allow all test run\n+            try {\n+                testDefault(test);\n+            } catch (SkippedException se) {\n+                System.out.println(\"testDefault: Skipped\");\n+                skippedDefault = true;\n+                se.printStackTrace(System.out);\n+            }\n+\n+            try {\n+                testNSS(test);\n+            } catch (SkippedException se) {\n+                System.out.println(\"testNSS: Skipped\");\n+                skippedNSS = true;\n+                se.printStackTrace(System.out);\n+            }\n+\n+            try {\n+                testDeimos(test);\n+            } catch (SkippedException se) {\n+                System.out.println(\"testDeimos: Skipped\");\n+                skippedDeimos = true;\n+                se.printStackTrace(System.out);\n+            }\n+\n+            if (skippedDefault && skippedNSS && skippedDeimos) {\n+                throw new SkippedException(\"All tests are skipped, check logs\");\n+            }\n+\n@@ -276,1 +279,1 @@\n-                for (int i = 0; i<oldProviders.length; i++) {\n+                for (int i = 0; i < oldProviders.length; i++) {\n@@ -284,1 +287,1 @@\n-                for (Provider p: newProviders) {\n+                for (Provider p : newProviders) {\n@@ -287,1 +290,1 @@\n-                for (Provider p: oldProviders) {\n+                for (Provider p : oldProviders) {\n@@ -295,2 +298,3 @@\n-        if (new File(\"\/opt\/SUNWconn\/lib\/libpkcs11.so\").isFile() == false ||\n-            \"true\".equals(System.getProperty(\"NO_DEIMOS\"))) {\n+        System.out.println(\"===> testDeimos: Starting test run\");\n+        if (\"true\".equals(System.getProperty(\"NO_DEIMOS\"))) {\n+            System.out.println(\"Skip Deimos software as test configured with NO_DEIMOS\");\n@@ -299,0 +303,6 @@\n+\n+        if (!new File(\"\/opt\/SUNWconn\/lib\/libpkcs11.so\").isFile()) {\n+            throw new SkippedException(\"testDeimos: \\\"\/opt\/SUNWconn\/lib\/libpkcs11.so\\\" \" +\n+                    \"file required for Deimos not found\");\n+        }\n+\n@@ -303,0 +313,1 @@\n+        System.out.println(\"testDeimos: Completed\");\n@@ -305,0 +316,1 @@\n+    \/\/ Run test for default configured PKCS11 providers (if any)\n@@ -306,1 +318,2 @@\n-        \/\/ run test for default configured PKCS11 providers (if any)\n+        System.out.println(\"===> testDefault: Starting test run\");\n+        boolean foundPKCS11 = false;\n@@ -309,0 +322,1 @@\n+            System.out.println(\"Skip default provider as test configured with NO_DEFAULT\");\n@@ -313,2 +327,1 @@\n-        for (int i = 0; i < providers.length; i++) {\n-            Provider p = providers[i];\n+        for (Provider p : providers) {\n@@ -316,0 +329,1 @@\n+                foundPKCS11 = true;\n@@ -319,1 +333,0 @@\n-    }\n@@ -321,6 +334,3 @@\n-    private static String PKCS11_BASE;\n-    static {\n-        try {\n-            PKCS11_BASE = getBase();\n-        } catch (Exception e) {\n-            \/\/ ignore\n+        if (!foundPKCS11) {\n+            throw new SkippedException(\"testDefault: Skip default test as SunPKCS11 \" +\n+                    \"provider is not configured\");\n@@ -328,1 +338,0 @@\n-    }\n@@ -330,1 +339,2 @@\n-    private final static String PKCS11_REL_PATH = \"sun\/security\/pkcs11\";\n+        System.out.println(\"testDefault: Completed\");\n+    }\n@@ -344,1 +354,1 @@\n-                throw new Exception(\"Test root directory not found\");\n+                throw new RuntimeException(\"Test root directory not found\");\n@@ -376,1 +386,1 @@\n-                    + \", please initialize NSS librarys location firstly, skipping test\");\n+                    + \", please initialize NSS library location, skipping test\");\n@@ -393,1 +403,1 @@\n-            System.out.println(\"Warning: can't find NSS librarys on this machine, skipping test\");\n+            System.out.println(\"Warning: can't find NSS library on this machine, skipping test\");\n@@ -406,1 +416,1 @@\n-        String osid = osName + \"-\" + props.getProperty(\"os.arch\") + \"-\"\n+        return osName + \"-\" + props.getProperty(\"os.arch\") + \"-\"\n@@ -408,1 +418,0 @@\n-        return osid;\n@@ -421,1 +430,1 @@\n-    protected static void safeReload(String lib) throws Exception {\n+    protected static void safeReload(String lib) {\n@@ -431,1 +440,1 @@\n-    static boolean loadNSPR(String libdir) throws Exception {\n+    static boolean loadNSPR(String libdir) {\n@@ -433,3 +442,1 @@\n-        String dir = libdir.endsWith(File.separator)\n-                     ? libdir\n-                     : libdir + File.separator;\n+        String dir = libdir.endsWith(File.separator) ? libdir : libdir + File.separator;\n@@ -446,1 +453,1 @@\n-        return p.getName().toUpperCase().equals(\"SUNPKCS11-NSS\");\n+        return p.getName().equalsIgnoreCase(\"SUNPKCS11-NSS\");\n@@ -542,1 +549,1 @@\n-        String version = String.valueOf(s.charAt(afterheader));\n+        StringBuilder version = new StringBuilder(String.valueOf(s.charAt(afterheader)));\n@@ -544,3 +551,3 @@\n-                c == '.' || (c >= '0' && c <= '9');\n-                c = s.charAt(++afterheader)) {\n-            version += c;\n+             c == '.' || (c >= '0' && c <= '9');\n+             c = s.charAt(++afterheader)) {\n+            version.append(c);\n@@ -550,1 +557,1 @@\n-        String[] dot = version.split(\"\\\\.\");\n+        String[] dot = version.toString().split(\"\\\\.\");\n@@ -552,1 +559,1 @@\n-            version = dot[0]+\".\"+dot[1];\n+            version = new StringBuilder(dot[0] + \".\" + dot[1]);\n@@ -554,1 +561,1 @@\n-                version += dot[j];\n+                version.append(dot[j]);\n@@ -560,1 +567,1 @@\n-            nss_version = Double.parseDouble(version);\n+            nss_version = Double.parseDouble(version.toString());\n@@ -570,1 +577,1 @@\n-        System.out.print(\"lib\" + library + \" version = \"+version+\".  \");\n+        System.out.print(\"library: \" + library + \", version: \" + version + \".  \");\n@@ -599,0 +606,1 @@\n+        System.out.println(\"===> testNSS: Starting test run\");\n@@ -601,2 +609,1 @@\n-            \/\/ issue loading libraries\n-            return;\n+            throw new SkippedException(\"testNSS: Problem loading NSS libraries\");\n@@ -604,0 +611,1 @@\n+\n@@ -606,0 +614,1 @@\n+        System.out.println(\"testNSS: Completed\");\n@@ -614,1 +623,1 @@\n-        if (loadNSPR(libdir) == false) {\n+        if (!loadNSPR(libdir)) {\n@@ -652,1 +661,1 @@\n-            \"\\\"AlgorithmParameters.EC SupportedCurves property\\\" not found\");\n+                    \"\\\"AlgorithmParameters.EC SupportedCurves property\\\" not found\");\n@@ -657,1 +666,1 @@\n-        for (;;) {\n+        for (; ; ) {\n@@ -674,1 +683,1 @@\n-                end = index -1;\n+                end = index - 1;\n@@ -679,1 +688,1 @@\n-                .ifPresent(spec -> results.add(spec));\n+                    .ifPresent(spec -> results.add(spec));\n@@ -690,1 +699,1 @@\n-            Provider p) throws Exception {\n+                                                                 Provider p) throws Exception {\n@@ -692,1 +701,1 @@\n-        System.out.print(\"\\t \"+ curve + \": \");\n+        System.out.print(\"\\t \" + curve + \": \");\n@@ -714,1 +723,1 @@\n-            AlgorithmParameters.getInstance(\"EC\", p);\n+                AlgorithmParameters.getInstance(\"EC\", p);\n@@ -721,13 +730,0 @@\n-    \/\/ Check support for a curve with a provided Vector of EC support\n-    boolean checkSupport(List<ECParameterSpec> supportedEC,\n-            ECParameterSpec curve) {\n-        for (ECParameterSpec ec: supportedEC) {\n-            if (ec.equals(curve)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    private static Map<String,String[]> osMap;\n-\n@@ -745,1 +741,1 @@\n-        osMap.put(\"Linux-i386-32\", new String[] {\n+        osMap.put(\"Linux-i386-32\", new String[]{\n@@ -748,2 +744,2 @@\n-                \"\/usr\/lib\/\" });\n-        osMap.put(\"Linux-amd64-64\", new String[] {\n+                \"\/usr\/lib\/\"});\n+        osMap.put(\"Linux-amd64-64\", new String[]{\n@@ -752,8 +748,8 @@\n-                \"\/usr\/lib64\/\" });\n-        osMap.put(\"Linux-ppc64-64\", new String[] { \"\/usr\/lib64\/\" });\n-        osMap.put(\"Linux-ppc64le-64\", new String[] { \"\/usr\/lib64\/\" });\n-        osMap.put(\"Linux-s390x-64\", new String[] { \"\/usr\/lib64\/\" });\n-        osMap.put(\"Windows-x86-32\", new String[] {});\n-        osMap.put(\"Windows-amd64-64\", new String[] {});\n-        osMap.put(\"MacOSX-x86_64-64\", new String[] {});\n-        osMap.put(\"Linux-arm-32\", new String[] {\n+                \"\/usr\/lib64\/\"});\n+        osMap.put(\"Linux-ppc64-64\", new String[]{\"\/usr\/lib64\/\"});\n+        osMap.put(\"Linux-ppc64le-64\", new String[]{\"\/usr\/lib64\/\"});\n+        osMap.put(\"Linux-s390x-64\", new String[]{\"\/usr\/lib64\/\"});\n+        osMap.put(\"Windows-x86-32\", new String[]{});\n+        osMap.put(\"Windows-amd64-64\", new String[]{});\n+        osMap.put(\"MacOSX-x86_64-64\", new String[]{});\n+        osMap.put(\"Linux-arm-32\", new String[]{\n@@ -761,1 +757,1 @@\n-                \"\/usr\/lib\/arm-linux-gnueabihf\/nss\/\" });\n+                \"\/usr\/lib\/arm-linux-gnueabihf\/nss\/\"});\n@@ -802,1 +798,1 @@\n-        return nssLibPaths.toArray(new String[nssLibPaths.size()]);\n+        return nssLibPaths.toArray(new String[0]);\n@@ -825,2 +821,2 @@\n-            sb.append(hexDigits[k >>> 4]);\n-            sb.append(hexDigits[k & 0xf]);\n+            sb.append(HEX_DIGITS[k >>> 4]);\n+            sb.append(HEX_DIGITS[k & 0xf]);\n@@ -872,9 +868,0 @@\n-    <T> T[] concat(T[] a, T[] b) {\n-        if ((b == null) || (b.length == 0)) {\n-            return a;\n-        }\n-        T[] r = Arrays.copyOf(a, a.length + b.length);\n-        System.arraycopy(b, 0, r, a.length, b.length);\n-        return r;\n-    }\n-\n@@ -885,1 +872,1 @@\n-            Provider p) {\n+                                               Provider p) {\n@@ -923,1 +910,1 @@\n-        for (int i=0; i<data.length; i++) {\n+        for (int i = 0; i < data.length; i++) {\n@@ -931,2 +918,2 @@\n-        case \"Windows-amd64-64\":\n-            return fetchNssLib(WINDOWS_X64.class);\n+            case \"Windows-amd64-64\":\n+                return fetchNssLib(WINDOWS_X64.class);\n@@ -934,2 +921,2 @@\n-        case \"MacOSX-x86_64-64\":\n-            return fetchNssLib(MACOSX_X64.class);\n+            case \"MacOSX-x86_64-64\":\n+                return fetchNssLib(MACOSX_X64.class);\n@@ -937,2 +924,2 @@\n-        case \"MacOSX-aarch64-64\":\n-             return fetchNssLib(MACOSX_AARCH64.class);\n+            case \"MacOSX-aarch64-64\":\n+                return fetchNssLib(MACOSX_AARCH64.class);\n@@ -940,2 +927,2 @@\n-        case \"Linux-amd64-64\":\n-            return fetchNssLib(LINUX_X64.class);\n+            case \"Linux-amd64-64\":\n+                return fetchNssLib(LINUX_X64.class);\n@@ -943,2 +930,2 @@\n-        case \"Linux-aarch64-64\":\n-            return fetchNssLib(LINUX_AARCH64.class);\n+            case \"Linux-aarch64-64\":\n+                return fetchNssLib(LINUX_AARCH64.class);\n@@ -946,2 +933,2 @@\n-        default:\n-            return null;\n+            default:\n+                return null;\n@@ -971,0 +958,52 @@\n+    public abstract void main(Provider p) throws Exception;\n+\n+    protected boolean skipTest(Provider p) {\n+        return false;\n+    }\n+\n+    private void premain(Provider p) throws Exception {\n+        if (skipTest(p)) {\n+            return;\n+        }\n+\n+        \/\/ set a security manager and policy before a test case runs,\n+        \/\/ and disable them after the test case finished\n+        try {\n+            if (enableSM) {\n+                System.setSecurityManager(new SecurityManager());\n+            }\n+            long start = System.currentTimeMillis();\n+            System.out.printf(\n+                    \"Running test with provider %s (security manager %s) ...%n\",\n+                    p.getName(), enableSM ? \"enabled\" : \"disabled\");\n+            main(p);\n+            long stop = System.currentTimeMillis();\n+            System.out.println(\"Completed test with provider \" + p.getName() +\n+                    \" (\" + (stop - start) + \" ms).\");\n+        } finally {\n+            if (enableSM) {\n+                System.setSecurityManager(null);\n+            }\n+        }\n+    }\n+\n+    \/\/ Check support for a curve with a provided Vector of EC support\n+    boolean checkSupport(List<ECParameterSpec> supportedEC,\n+                         ECParameterSpec curve) {\n+        for (ECParameterSpec ec : supportedEC) {\n+            if (ec.equals(curve)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    <T> T[] concat(T[] a, T[] b) {\n+        if ((b == null) || (b.length == 0)) {\n+            return a;\n+        }\n+        T[] r = Arrays.copyOf(a, a.length + b.length);\n+        System.arraycopy(b, 0, r, a.length, b.length);\n+        return r;\n+    }\n+\n@@ -996,0 +1035,3 @@\n+    \/\/ NSS version info\n+    public static enum ECCState {None, Basic, Extended}\n+\n@@ -1001,1 +1043,2 @@\n-    private static class WINDOWS_X64 { }\n+    private static class WINDOWS_X64 {\n+    }\n@@ -1008,1 +1051,2 @@\n-    private static class MACOSX_X64 { }\n+    private static class MACOSX_X64 {\n+    }\n@@ -1015,1 +1059,2 @@\n-    private static class MACOSX_AARCH64 { }\n+    private static class MACOSX_AARCH64 {\n+    }\n@@ -1022,1 +1067,2 @@\n-    private static class LINUX_X64 { }\n+    private static class LINUX_X64 {\n+    }\n@@ -1028,2 +1074,1 @@\n-            extension = \"zip\"\n-    )\n+            extension = \"zip\")\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":210,"deletions":165,"binary":false,"changes":375,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -47,1 +49,5 @@\n-        main(new ConfigQuotedString());\n+        try {\n+            main(new ConfigQuotedString());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/ConfigQuotedString.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -58,1 +60,5 @@\n-        main(new Login(), args);\n+        try {\n+            main(new Login(), args);\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/Login.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,0 +114,1 @@\n+        ${TESTSRC}${FS}..${FS}..${FS}..${FS}..${FS}..${FS}lib${FS}jtreg${FS}*.java \\\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.sh","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import jtreg.SkippedException;\n+\n@@ -46,3 +48,0 @@\n-        if (LIBPATH == null) {\n-            return false;\n-        }\n@@ -50,2 +49,2 @@\n-        if (loadNSPR(LIBPATH) == false) {\n-            return false;\n+        if ((LIBPATH == null) || (!loadNSPR(LIBPATH))) {\n+            throw new SkippedException(\"Failed to load NSS libraries\");\n@@ -53,0 +52,1 @@\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/SecmodTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/security\/pkcs11\/SecureRandom\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}