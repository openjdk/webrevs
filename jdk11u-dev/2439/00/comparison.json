{"files":[{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4429261\n+ * @summary Checks AWTKeyStroke is cached\n+ * @run main CacheTest\n+*\/\n+\n+import java.awt.AWTKeyStroke;\n+import java.awt.EventQueue;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.InputEvent;\n+\n+public class CacheTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            if (AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_X,\n+                                             InputEvent.ALT_DOWN_MASK) !=\n+                AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_X,\n+                                             InputEvent.ALT_DOWN_MASK)) {\n+                throw new RuntimeException(\"KeyStroke is not cached\");\n+            }\n+        });\n+    }\n+}\/\/ class CacheTest\n","filename":"test\/jdk\/java\/awt\/CacheTest.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4154099\n+  @summary Tests that calling removeNotify() on a Frame and then reshowing\n+            the Frame does not crash or lockup\n+  @key headful\n+  @run main RemoveNotifyTest\n+*\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class RemoveNotifyTest {\n+    static Frame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            for (int i = 0; i < 100; i++) {\n+                try {\n+                    f = new Frame();\n+                    f.setBounds(10, 10, 100, 100);\n+                    MenuBar bar = new MenuBar();\n+                    Menu menu = new Menu();\n+                    menu.add(new MenuItem(\"foo\"));\n+                    bar.add(menu);\n+                    f.setMenuBar(bar);\n+\n+                    for (int j = 0; j < 5; j++) {\n+                        f.setVisible(true);\n+                        f.removeNotify();\n+                    }\n+                } finally {\n+                    if (f != null) {\n+                        f.dispose();\n+                    }\n+                }\n+            }\n+        });\n+\n+      System.out.println(\"done\");\n+\n+    }\n+\n+ }\/\/ class RemoveNotifyTest\n","filename":"test\/jdk\/java\/awt\/Frame\/RemoveNotifyTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4633887\n+ * @summary setting a null Image in setIconImage should not cause exception.\n+ * @key headful\n+ * @run main NullIconImageTest\n+*\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+\n+public class NullIconImageTest {\n+    static Frame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            try {\n+                f = new Frame();\n+                f.setVisible(true);\n+                f.setIconImage(null); \/\/ This call should not cause an exception.\n+            } finally {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            }\n+        });\n+    }\n+\n+ }\/\/ class NullIconImageTest\n","filename":"test\/jdk\/java\/awt\/Icon\/NullIconImageTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}