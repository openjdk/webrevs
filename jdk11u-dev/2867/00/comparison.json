{"files":[{"patch":"@@ -518,0 +518,1 @@\n+                                    \/\/ check if connection is being closed\n@@ -524,0 +525,1 @@\n+                                        handle (chan, conn);\n@@ -525,1 +527,0 @@\n-                                    handle (chan, conn);\n@@ -984,12 +985,1 @@\n-            ArrayList<HttpConnection> toClose = new ArrayList<>();\n-            final long currentTime = System.currentTimeMillis();\n-            synchronized (idleConnections) {\n-                final Iterator<HttpConnection> it = idleConnections.iterator();\n-                while (it.hasNext()) {\n-                    final HttpConnection c = it.next();\n-                    if (currentTime - c.idleStartTime >= IDLE_INTERVAL) {\n-                        toClose.add(c);\n-                        it.remove();\n-                    }\n-                }\n-            }\n+            closeConnections(idleConnections, IDLE_INTERVAL);\n@@ -998,8 +988,10 @@\n-            synchronized (newlyAcceptedConnections) {\n-                final Iterator<HttpConnection> it = newlyAcceptedConnections.iterator();\n-                while (it.hasNext()) {\n-                    final HttpConnection c = it.next();\n-                    if (currentTime - c.idleStartTime >= NEWLY_ACCEPTED_CONN_IDLE_INTERVAL) {\n-                        toClose.add(c);\n-                        it.remove();\n-                    }\n+            closeConnections(newlyAcceptedConnections, NEWLY_ACCEPTED_CONN_IDLE_INTERVAL);\n+        }\n+\n+        private void closeConnections(Set<HttpConnection> connections, long idleInterval) {\n+            long currentTime = System.currentTimeMillis();\n+            ArrayList<HttpConnection> toClose = new ArrayList<>();\n+\n+            connections.forEach(c -> {\n+                if (currentTime - c.idleStartTime >= idleInterval) {\n+                    toClose.add(c);\n@@ -1007,1 +999,1 @@\n-            }\n+            });\n@@ -1009,4 +1001,8 @@\n-                allConnections.remove(c);\n-                c.close();\n-                if (logger.isLoggable(Level.TRACE)) {\n-                    logger.log(Level.TRACE, \"Closed idle connection \" + c);\n+                \/\/ check if connection still idle\n+                if (currentTime - c.idleStartTime >= idleInterval &&\n+                        connections.remove(c)) {\n+                    allConnections.remove(c);\n+                    c.close();\n+                    if (logger.isLoggable(Level.TRACE)) {\n+                        logger.log(Level.TRACE, \"Closed idle connection \" + c);\n+                    }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":22,"deletions":26,"binary":false,"changes":48,"status":"modified"}]}