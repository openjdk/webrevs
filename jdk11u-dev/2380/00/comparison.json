{"files":[{"patch":"@@ -55,1 +55,1 @@\n-        bootClassPath, \"-verbose:class\");\n+        bootClassPath);\n@@ -63,1 +63,1 @@\n-            \"-cp\", appJar, bootClassPath, \"-verbose:class\", \"HelloExt\")\n+            \"-cp\", appJar, bootClassPath, \"-Xlog:class+load\", \"HelloExt\")\n@@ -68,1 +68,1 @@\n-            \"-cp\", appJar, bootClassPath, \"-verbose:class\",\n+            \"-cp\", appJar, bootClassPath, \"-Xlog:class+load\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/HelloExtTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -70,1 +70,0 @@\n-        \"-verbose:class\",\n@@ -82,1 +81,0 @@\n-        \"-verbose:class\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/OldClassTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            \"-cp\", appJar, \"-Xlog:class+load=info\", \"ProhibitedHelper\")\n+            \"-cp\", appJar, \"ProhibitedHelper\")\n@@ -88,1 +88,1 @@\n-            \"-cp\", appJar, \"-Xlog:class+load=info\", \"ProhibitedHelper\");\n+            \"-cp\", appJar, \"ProhibitedHelper\");\n@@ -95,1 +95,1 @@\n-            \"-cp\", appJar, \"-Xlog:class+load=info\", \"ProhibitedHelper\");\n+            \"-cp\", appJar, \"ProhibitedHelper\");\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/ProhibitedPackage.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * @run main\/othervm RedefineClassTest\n+ * @run main RedefineClassTest\n@@ -92,1 +92,1 @@\n-                \"-Xlog:gc+region=trace,cds=info\",\n+                \"-Xlog:cds=info\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/cacheObject\/RedefineClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        OutputAnalyzer output = TestCommon.dump(appJar, TestCommon.list(arrayClasses), bootClassPath, \"-verbose:class\");\n+        OutputAnalyzer output = TestCommon.dump(appJar, TestCommon.list(arrayClasses), bootClassPath);\n@@ -73,1 +73,0 @@\n-        argsList.add(\"-verbose:class\");\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/javaldr\/ArrayTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,2 @@\n-        String gcLog = \"-Xlog:gc*=info,gc+region=trace,gc+alloc+region=debug\";\n+        String gcLog = Boolean.getBoolean(\"test.cds.verbose.gc\") ?\n+            \"-Xlog:gc*=info,gc+region=trace,gc+alloc+region=debug\" : \"-showversion\";\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/javaldr\/GCDuringDump.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-    static int n = 0;\n@@ -34,4 +33,0 @@\n-        n++;\n-\n-        System.out.println(\"dump time loading: \" + name + \" in loader: \" + loader);\n-        System.out.println(\"making garbage: \" + n);\n@@ -46,1 +41,0 @@\n-        System.out.println(\"making garbage: done\");\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/javaldr\/GCDuringDumpTransformer.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -65,1 +65,2 @@\n-        String gcLog = \"-Xlog:gc*=info,gc+region=trace,gc+alloc+region=debug\";\n+        String gcLog = Boolean.getBoolean(\"test.cds.verbose.gc\") ?\n+            \"-Xlog:gc*=info,gc+region=trace,gc+alloc+region=debug\" : \"-showversion\";\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/javaldr\/GCSharedStringsDuringDump.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-                                        \"-Xlog:class+load=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/jigsaw\/modulepath\/AddOpens.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -120,1 +120,0 @@\n-                                        \"-Xlog:class+load=trace\",\n@@ -144,1 +143,0 @@\n-                                        \"-Xlog:class+load=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/jigsaw\/modulepath\/ExportModule.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,0 @@\n-                                    \"-Xlog:class+load=trace\",\n@@ -146,1 +145,0 @@\n-                     \"-Xlog:class+load=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/jigsaw\/modulepath\/JvmtiAddPath.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-                                        \"-Xlog:class+load=trace\",\n@@ -171,2 +170,1 @@\n-        TestCommon.run(\"-Xlog:class+load=trace\",\n-                       \"-cp\", destJar.toString(),\n+        TestCommon.run(\"-cp\", destJar.toString(),\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/jigsaw\/modulepath\/MainModuleOnly.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,1 +191,0 @@\n-                       \"--add-opens=java.base\/java.security=ALL-UNNAMED\",\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/jvmti\/transformRelatedClasses\/TransformRelatedClassesAppCDS.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -223,5 +223,13 @@\n-    \/\/ Specify this property to copy sdandard output of the child test process to\n-    \/\/ the parent\/main stdout of the test.\n-    \/\/ By default such output is logged into a file, and is copied into the main stdout.\n-    public static final boolean CopyChildStdoutToMainStdout =\n-        Boolean.valueOf(System.getProperty(\"test.cds.copy.child.stdout\", \"true\"));\n+    \/\/ A number to be included in the filename of the stdout and the stderr output file.\n+    static int logCounter = 0;\n+\n+    private static int getNextLogCounter() {\n+        return logCounter++;\n+    }\n+\n+    \/\/ By default, stdout of child processes are logged in files such as\n+    \/\/ <testname>-0000-exec.stdout. If you want to also include the stdout\n+    \/\/ inside jtr files, you can override this in the jtreg command line like\n+    \/\/ \"jtreg -Dtest.cds.copy.child.stdout=true ....\"\n+    public static final boolean copyChildStdoutToMainStdout =\n+        Boolean.getBoolean(\"test.cds.copy.child.stdout\");\n@@ -567,0 +575,2 @@\n+        String outputFileNamePrefix =\n+            testName + \"-\" + String.format(\"%04d\", getNextLogCounter()) + \"-\" + logName;\n@@ -568,2 +578,2 @@\n-        writeFile(getOutputFile(logName + \".stdout\"), output.getStdout());\n-        writeFile(getOutputFile(logName + \".stderr\"), output.getStderr());\n+        writeFile(getOutputFile(outputFileNamePrefix + \".stdout\"), output.getStdout());\n+        writeFile(getOutputFile(outputFileNamePrefix + \".stderr\"), output.getStderr());\n@@ -571,0 +581,2 @@\n+        System.out.println(\"[logging stdout to \" + outputFileNamePrefix + \".stdout]\");\n+        System.out.println(\"[logging stderr to \" + outputFileNamePrefix + \".stderr]\");\n@@ -573,1 +585,1 @@\n-        if (CopyChildStdoutToMainStdout)\n+        if (copyChildStdoutToMainStdout)\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"}]}