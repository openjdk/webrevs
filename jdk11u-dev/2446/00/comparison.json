{"files":[{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4257944\n+  @summary PopupMenu.setEnabled fails on Win32\n+  @key headful\n+  @run main EnableTest\n+*\/\n+\n+import java.awt.AWTEvent;\n+import java.awt.BorderLayout;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.MenuItem;\n+import java.awt.PopupMenu;\n+\n+public class EnableTest {\n+    PopupMenu popup = null;\n+    Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        EnableTest test = new EnableTest();\n+        test.start();\n+    }\n+\n+    public void start() throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new Frame(\"EnableTest\");\n+                popup = new PopupMenu(\"Popup Menu Title\");\n+                MenuItem mi1 = new MenuItem(\"Menu Item\");\n+                MenuItem mi2 = new MenuItem(\"Menu Item\");\n+                popup.add(mi1);\n+                popup.addSeparator();\n+                popup.add(mi2);\n+                popup.setEnabled(false);\n+                popup.setLabel(\"New Label\");\n+                mi2.setEnabled(false);\n+                frame.add(popup);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/EnableTest.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4261935\n+  @summary Menu display problem when changing the text of the menu(window 98)\n+  @key headful\n+  @run main MenuSetLabelTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Robot;\n+\n+public class MenuSetLabelTest {\n+    Menu1 f;\n+\n+    public static void main(String[] args) throws Exception {\n+        MenuSetLabelTest test = new MenuSetLabelTest();\n+        test.start();\n+    }\n+\n+    public void start() throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                f = new Menu1();\n+                f.setTitle(\"MenuSetLabelTest\");\n+                f.setSize(300, 200);\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+            });\n+            Robot robot = new Robot();\n+            robot.delay(1000);\n+            robot.waitForIdle();\n+            EventQueue.invokeAndWait(() -> {\n+                f.changeMenuLabel();\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+}\n+\n+class Menu1 extends Frame {\n+\n+    String s1 = new String(\"short\");\n+    String s2 = new String(\"This is a long string\");\n+    String s3 = new String(\"Menu Item string\");\n+\n+    MenuBar mb1 = new MenuBar();\n+    Menu f = new Menu(s1);\n+    Menu m = new Menu(s1);\n+    boolean flag = true;\n+\n+    public Menu1()\n+    {\n+        for (int i = 0; i < 5; i++) {\n+            m.add(new MenuItem(s3));\n+        }\n+        for (int i = 0; i < 10; i++) {\n+            f.add(new MenuItem(s3));\n+        }\n+        mb1.add(f);\n+        mb1.add(m);\n+        setMenuBar(mb1);\n+    }\n+\n+    public void changeMenuLabel() {\n+        MenuBar mb = getMenuBar();\n+        Menu m0 = mb.getMenu(0);\n+        Menu m1 = mb.getMenu(1);\n+\n+        if (flag) {\n+            m0.setLabel(s2);\n+            m1.setLabel(s2);\n+        } else {\n+            m0.setLabel(s1);\n+            m1.setLabel(s1);\n+        }\n+        flag = !flag;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/MenuSetLabelTest.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4234266\n+  @summary MenuItem throws NullPointer exception when setting the label with created peer.\n+  @key headful\n+  @run main SetLabelWithPeerCreatedTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class SetLabelWithPeerCreatedTest {\n+     Frame frame;\n+     public static void main(String[] args) throws Exception {\n+         SetLabelWithPeerCreatedTest test = new SetLabelWithPeerCreatedTest();\n+         test.start();\n+     }\n+\n+    public void start() throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new Frame(\"SetLabel with Peer Created Test\");\n+                Menu menu = new Menu(\"Menu\");\n+                MenuItem mi = new MenuItem(\"Item\");\n+                MenuBar mb = new MenuBar();\n+                menu.add(mi);\n+                mb.add(menu);\n+                frame.setMenuBar(mb);\n+                frame.setSize(300, 200);\n+                frame.setLocationRelativeTo(null);\n+                mi.setLabel(\"new label\");\n+                frame.setVisible(true);\n+                System.out.println(\"Test PASSED!\");\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+ }\n","filename":"test\/jdk\/java\/awt\/MenuItem\/SetLabelWithPeerCreatedTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 5106833\n+  @summary NullPointerException in XMenuPeer.repaintMenuItem\n+  @key headful\n+  @run main SetStateTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.CheckboxMenuItem;\n+\n+public class SetStateTest {\n+    Frame frame;\n+    public static void main(String[] args) throws Exception {\n+        SetStateTest test = new SetStateTest();\n+        test.start();\n+    }\n+\n+    public void start () throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new Frame(\"SetStateTest\");\n+                MenuBar bar = new MenuBar();\n+                Menu menu = new Menu(\"Menu\");\n+                CheckboxMenuItem checkboxMenuItem = new CheckboxMenuItem(\"Item\");\n+                bar.add(menu);\n+                frame.setMenuBar(bar);\n+                menu.add(checkboxMenuItem);\n+                checkboxMenuItem.setState(true);\n+                frame.setSize(300, 200);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+                System.out.println(\"Test PASSED!\");\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/SetStateTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}