{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+  * @key intermittent\n@@ -33,1 +34,1 @@\n- public class AddNodeChangeListener {\n+public class AddNodeChangeListener {\n@@ -35,3 +36,4 @@\n-     private static boolean failed = false;\n-     private static Preferences userRoot, N2;\n-     private static NodeChangeListenerAdd ncla;\n+    private static final int SLEEP_ITRS = 10;\n+    private static boolean failed = false;\n+    private static Preferences userRoot, N2;\n+    private static NodeChangeListenerAdd ncla;\n@@ -39,3 +41,2 @@\n-     public static void main(String[] args)\n-         throws BackingStoreException, InterruptedException\n-     {\n+    public static void main(String[] args)\n+             throws BackingStoreException, InterruptedException {\n@@ -52,1 +53,1 @@\n-        if (failed)\n+        if (failed) {\n@@ -54,0 +55,1 @@\n+        }\n@@ -57,2 +59,1 @@\n-        throws BackingStoreException, InterruptedException\n-    {\n+            throws BackingStoreException, InterruptedException {\n@@ -61,3 +62,12 @@\n-        Thread.sleep(3000);\n-        if (ncla.getAddNumber() != 1)\n-            failed = true;\n+        int passItr = -1;\n+\n+        for (int i = 0; i < SLEEP_ITRS; i++) {\n+            System.out.print(\"addNode sleep iteration \" + i + \"...\");\n+            Thread.sleep(3000);\n+            System.out.println(\"done.\");\n+            if (ncla.getAddNumber() == 1) {\n+                passItr = i;\n+                break;\n+            }\n+        }\n+        checkPassItr(passItr, \"addNode()\");\n@@ -67,2 +77,1 @@\n-        throws BackingStoreException, InterruptedException\n-    {\n+            throws BackingStoreException, InterruptedException {\n@@ -71,2 +80,21 @@\n-        Thread.sleep(3000);\n-        if (ncla.getAddNumber() != 0)\n+        int passItr = -1;\n+\n+        for (int i = 0; i < SLEEP_ITRS; i++) {\n+            System.out.print(\"removeNode sleep iteration \" + i + \"...\");\n+            Thread.sleep(3000);\n+            System.out.println(\"done.\");\n+            if (ncla.getAddNumber() == 0) {\n+                passItr = i;\n+                break;\n+            }\n+        }\n+        checkPassItr(passItr, \"removeNode()\");\n+    }\n+\n+    \/* If the listener wasn't notified on iteration 0, throw a RuntimeException\n+     * with some contextual information\n+     *\/\n+    private static void checkPassItr(int itr, String methodName) {\n+        if (itr == 0) {\n+            System.out.println(methodName + \" test passed\");\n+        } else {\n@@ -74,0 +102,6 @@\n+            if (itr == -1) {\n+                throw new RuntimeException(\"Failed in \" + methodName + \" - change listener never notified\");\n+            } else {\n+                throw new RuntimeException(\"Failed in \" + methodName + \" - listener notified on iteration \" + itr);\n+            }\n+        }\n@@ -93,1 +127,1 @@\n- }\n+}\n","filename":"test\/jdk\/java\/util\/prefs\/AddNodeChangeListener.java","additions":53,"deletions":19,"binary":false,"changes":72,"status":"modified"}]}