{"files":[{"patch":"@@ -68,0 +68,2 @@\n+import static sun.java2d.pipe.Region.clipRound;\n+\n@@ -230,12 +232,0 @@\n-        \/**\n-         * Rounds a double to the nearest integer. It rounds 0.5 down,\n-         * for example 1.5 is rounded to 1.0.\n-         *\n-         * @param d number to be rounded\n-         * @return the rounded value\n-         *\/\n-        private static int roundHalfDown(double d) {\n-            double decP = (Math.ceil(d) - d);\n-            return (int)((decP == 0.5) ?  Math.floor(d) :  Math.round(d));\n-        }\n-\n@@ -259,4 +249,3 @@\n-            Graphics2D g2d = (Graphics2D) g;\n-            AffineTransform at = g2d.getTransform();\n-            Stroke oldStk = g2d.getStroke();\n-            Color oldColor = g2d.getColor();\n+            AffineTransform at = null;\n+            Stroke oldStk = null;\n+            boolean resetTransform = false;\n@@ -264,0 +253,6 @@\n+            double scaleFactor = 1;\n+\n+            if (g instanceof Graphics2D g2d) {\n+                at = g2d.getTransform();\n+                scaleFactor = at.getScaleX();\n+                oldStk = g2d.getStroke();\n@@ -265,3 +260,10 @@\n-            \/\/ if m01 or m10 is non-zero, then there is a rotation or shear\n-            \/\/ skip resetting the transform\n-            boolean resetTransform = ((at.getShearX() == 0) && (at.getShearY() == 0));\n+                \/\/ if m01 or m10 is non-zero, then there is a rotation or shear\n+                \/\/ skip resetting the transform\n+                resetTransform = ((at.getShearX() == 0) && (at.getShearY() == 0));\n+\n+                if (resetTransform) {\n+                    g2d.setTransform(new AffineTransform());\n+                    stkWidth = clipRound(Math.min(at.getScaleX(), at.getScaleY()));\n+                    g2d.setStroke(new BasicStroke((float) stkWidth));\n+                }\n+            }\n@@ -275,3 +277,0 @@\n-                g2d.setTransform(new AffineTransform());\n-                stkWidth = roundHalfDown(Math.min(at.getScaleX(), at.getScaleY()));\n-\n@@ -280,4 +279,4 @@\n-                xtranslation = roundHalfDown(xx);\n-                ytranslation = roundHalfDown(yy);\n-                width = roundHalfDown(at.getScaleX() * w + xx) - xtranslation;\n-                height = roundHalfDown(at.getScaleY() * h + yy) - ytranslation;\n+                xtranslation = clipRound(xx);\n+                ytranslation = clipRound(yy);\n+                width = clipRound(at.getScaleX() * w + xx) - xtranslation;\n+                height = clipRound(at.getScaleY() * h + yy) - ytranslation;\n@@ -285,2 +284,0 @@\n-                width = w;\n-                height = h;\n@@ -289,0 +286,2 @@\n+                width = w;\n+                height = h;\n@@ -290,1 +289,1 @@\n-            g2d.translate(xtranslation, ytranslation);\n+            g.translate(xtranslation, ytranslation);\n@@ -293,1 +292,1 @@\n-            int thickness = (int) Math.ceil(4 * at.getScaleX());\n+            int thickness = (int) Math.ceil(4 * scaleFactor);\n@@ -302,3 +301,0 @@\n-                \/\/ set new stroke to draw shadow and highlight lines\n-                g2d.setStroke(new BasicStroke((float) stkWidth));\n-\n@@ -308,1 +304,1 @@\n-                int offset = ((at.getScaleX() - stkWidth) >= 0 && stkWidth % 2 != 0) ? 1 : 0;\n+                int offset = (((scaleFactor - stkWidth) >= 0) && ((stkWidth % 2) != 0)) ? 1 : 0;\n@@ -312,1 +308,1 @@\n-                int corner = (int) Math.round(CORNER * at.getScaleX());\n+                int corner = (int) Math.round(CORNER * scaleFactor);\n@@ -334,1 +330,1 @@\n-            g2d.translate(-xtranslation, -ytranslation);\n+            g.translate(-xtranslation, -ytranslation);\n@@ -336,1 +332,1 @@\n-                g2d.setColor(oldColor);\n+                Graphics2D g2d = (Graphics2D) g;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":33,"deletions":37,"binary":false,"changes":70,"status":"modified"}]}