{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,2 @@\n-            ss = new ServerSocket(0);\n+            ss = new ServerSocket();\n+            ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n@@ -84,1 +85,1 @@\n-        try (Socket s = new Socket(\"localhost\", svr.localPort())) {\n+        try (Socket s = new Socket(svr.ss.getInetAddress(), svr.localPort())) {\n","filename":"test\/jdk\/java\/net\/ServerSocket\/ThreadStop.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n@@ -43,1 +45,3 @@\n-        try (ServerSocket ss = new ServerSocket(0)) {\n+        try (ServerSocket ss = new ServerSocket()) {\n+            InetAddress loopback = InetAddress.getLoopbackAddress();\n+            ss.bind(new InetSocketAddress(loopback, 0));\n@@ -48,1 +52,1 @@\n-                    final Socket s = new Socket(\"localhost\", port);\n+                    final Socket s = new Socket(loopback, port);\n","filename":"test\/jdk\/java\/net\/Socket\/asyncClose\/Race.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -34,0 +35,2 @@\n+import jdk.test.lib.net.URIBuilder;\n+\n@@ -122,1 +125,2 @@\n-            ss = new ServerSocket(0);\n+            ss = new ServerSocket();\n+            ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n@@ -203,3 +207,6 @@\n-        URL urls[] =\n-            { new URL(\"http:\/\/localhost:\" + svr.port() + \"\/dir1\/\"),\n-              new URL(\"http:\/\/localhost:\" + svr.port() + \"\/dir2\/\") };\n+        URL urls[] = {\n+                URIBuilder.newBuilder().scheme(\"http\").loopback().port(svr.port())\n+                        .path(\"\/dir1\/\").toURL(),\n+                URIBuilder.newBuilder().scheme(\"http\").loopback().port(svr.port())\n+                        .path(\"\/dir2\/\").toURL(),\n+        };\n","filename":"test\/jdk\/java\/net\/URLClassLoader\/HttpTest.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,2 @@\n-        ServerSocket ss = new ServerSocket(0);\n+        ServerSocket ss = new ServerSocket();\n+        ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n","filename":"test\/jdk\/java\/net\/URLConnection\/TimeoutTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -34,0 +35,2 @@\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n@@ -40,0 +43,2 @@\n+import jdk.test.lib.net.URIBuilder;\n+\n@@ -88,1 +93,2 @@\n-        ss = new ServerSocket(0);\n+        ss = new ServerSocket();\n+        ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n@@ -91,1 +97,5 @@\n-        URL url = new URL(\"http:\/\/localhost:\" + ss.getLocalPort() +\"\/\");\n+        URL url = URIBuilder.newBuilder()\n+                .scheme(\"http\")\n+                .loopback()\n+                .port(ss.getLocalPort())\n+                .path(\"\/\").toURL();\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/CookieHttpClientTest.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @library \/test\/lib\n@@ -33,0 +34,2 @@\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n@@ -37,0 +40,2 @@\n+import jdk.test.lib.net.URIBuilder;\n+\n@@ -48,1 +53,3 @@\n-            serverSocket = new ServerSocket(0);\n+            serverSocket = new ServerSocket();\n+            serverSocket.bind(new InetSocketAddress(\n+                    InetAddress.getLoopbackAddress(), 0));\n@@ -109,1 +116,6 @@\n-            URL url = new URL(\"http:\/\/localhost:\" + server.getPort() + \"\/anything\");\n+            URL url = URIBuilder.newBuilder()\n+                    .scheme(\"http\")\n+                    .loopback()\n+                    .port(server.getPort())\n+                    .path(\"\/anything\")\n+                    .toURLUnchecked();\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/HttpInputStream.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -39,0 +40,2 @@\n+import jdk.test.lib.net.URIBuilder;\n+\n@@ -59,0 +62,9 @@\n+    String constructUrlString(int port, String path) throws Exception {\n+        return URIBuilder.newBuilder()\n+                .scheme(\"http\")\n+                .port(port)\n+                .loopback()\n+                .path(path)\n+                .toURL().toString();\n+    }\n+\n@@ -63,5 +75,5 @@\n-            String baseUrl = \"http:\/\/localhost:\" + server.getAddress().getPort() + \"\/\";\n-            client(baseUrl +  \"chunked\/\");\n-            client(baseUrl +  \"fixed\/\");\n-            client(baseUrl +  \"error\/\");\n-            client(baseUrl +  \"chunkedError\/\");\n+            int serverPort = server.getAddress().getPort();\n+            client(constructUrlString(serverPort, \"\/chunked\/\"));\n+            client(constructUrlString(serverPort, \"\/fixed\/\"));\n+            client(constructUrlString(serverPort, \"\/error\/\"));\n+            client(constructUrlString(serverPort, \"\/chunkedError\/\"));\n@@ -73,4 +85,4 @@\n-                client(baseUrl +  \"chunked\/\");\n-                client(baseUrl +  \"fixed\/\");\n-                client(baseUrl +  \"error\/\");\n-                client(baseUrl +  \"chunkedError\/\");\n+                client(constructUrlString(serverPort, \"\/chunked\/\"));\n+                client(constructUrlString(serverPort, \"\/fixed\/\"));\n+                client(constructUrlString(serverPort, \"\/error\/\"));\n+                client(constructUrlString(serverPort, \"\/chunkedError\/\"));\n@@ -96,1 +108,2 @@\n-        HttpServer httpServer = HttpServer.create(new InetSocketAddress(0), 0);\n+        HttpServer httpServer = HttpServer.create();\n+        httpServer.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0), 0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/HttpStreams.java","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,2 @@\n-        InetSocketAddress inetAddress = new InetSocketAddress(0);\n+        InetSocketAddress inetAddress = new InetSocketAddress(\n+                InetAddress.getLoopbackAddress(), 0);\n@@ -184,1 +185,2 @@\n-        InetSocketAddress inetAddress = new InetSocketAddress(0);\n+        InetSocketAddress inetAddress = new InetSocketAddress(\n+                InetAddress.getLoopbackAddress(), 0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/RedirectOnPost.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,2 @@\n-            server = new TestHttpServer (new SetChunkedStreamingMode(), 1, 10, 0);\n+            server = new TestHttpServer(new SetChunkedStreamingMode(), 1, 10,\n+                    InetAddress.getLoopbackAddress(), 0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/SetChunkedStreamingMode.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,3 +25,4 @@\n-   @bug 4213164 8172253\n-   @summary setIfModifiedSince mehtod in HttpURLConnection sometimes fails\n-   *\/\n+ * @bug 4213164 8172253\n+ * @library \/test\/lib\n+ * @summary setIfModifiedSince method in HttpURLConnection sometimes fails\n+ *\/\n@@ -31,1 +32,2 @@\n-import java.text.*;\n+\n+import jdk.test.lib.net.URIBuilder;\n@@ -78,1 +80,2 @@\n-     serverSock = new ServerSocket(0);\n+      serverSock = new ServerSocket();\n+      serverSock.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n@@ -89,2 +92,6 @@\n-     url = new URL(\"http:\/\/localhost:\" + String.valueOf(port) +\n-                   \"\/anything\");\n+      url = URIBuilder.newBuilder()\n+              .scheme(\"http\")\n+              .loopback()\n+              .port(port)\n+              .path(\"\/anything\")\n+              .toURL();\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/SetIfModifiedSince.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}