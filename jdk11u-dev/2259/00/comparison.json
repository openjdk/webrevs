{"files":[{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test Testjsig.java\n+ * @bug 8017498\n+ * @bug 8020791\n+ * @bug 8021296\n+ * @bug 8022301\n+ * @bug 8025519\n+ * @summary sigaction(sig) results in process hang\/timed-out if sig is much greater than SIGRTMAX\n+ * @requires (os.family == \"linux\")\n+ * @library \/test\/lib\n+ * @compile TestJNI.java\n+ * @run driver Testjsig\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class Testjsig {\n+\n+    public static void main(String[] args) throws Throwable {\n+\n+        \/\/ Get the JDK, library and class path properties\n+        String libpath = System.getProperty(\"java.library.path\");\n+\n+        \/\/ Create a new java process for the TestJNI Java\/JNI test\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-Djava.library.path=\" + libpath + \":.\",\n+            \"TestJNI\",\n+            \"100\");\n+\n+        \/\/ Start the process and check the output\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldContain(\"old handler\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/jsig\/Testjsig.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}