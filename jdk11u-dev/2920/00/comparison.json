{"files":[{"patch":"@@ -45,2 +45,0 @@\n-    private static OutputAnalyzer out;\n-    private static ProcessBuilder pb;\n@@ -57,2 +55,1 @@\n-    static void checkFor(String... outputStrings) throws Exception {\n-        out = new OutputAnalyzer(pb.start());\n+    static void checkFor(OutputAnalyzer output, String... outputStrings) throws Exception {\n@@ -60,1 +57,1 @@\n-            out.shouldContain(s);\n+            output.shouldContain(s);\n@@ -62,1 +59,0 @@\n-        out.shouldHaveExitValue(0);\n@@ -65,2 +61,1 @@\n-    static void checkAbsent(String... outputStrings) throws Exception {\n-        out = new OutputAnalyzer(pb.start());\n+    static void checkAbsent(OutputAnalyzer output, String... outputStrings) throws Exception {\n@@ -68,1 +63,1 @@\n-            out.shouldNotContain(s);\n+            output.shouldNotContain(s);\n@@ -70,1 +65,0 @@\n-        out.shouldHaveExitValue(0);\n@@ -74,1 +68,1 @@\n-    static ProcessBuilder exec(String... args) throws Exception {\n+    static OutputAnalyzer exec(String... args) throws Exception {\n@@ -77,5 +71,6 @@\n-        Collections.addAll(argsList, \"-Xmn8m\");\n-        Collections.addAll(argsList, \"-Dtest.class.path=\" + System.getProperty(\"test.class.path\", \".\"));\n-        Collections.addAll(argsList, \"-XX:+ClassUnloading\");\n-        Collections.addAll(argsList, ClassUnloadTestMain.class.getName());\n-        return ProcessTools.createJavaProcessBuilder(argsList);\n+        Collections.addAll(argsList, \"-Xmn8m\", \"-Dtest.class.path=\" + System.getProperty(\"test.class.path\", \".\"),\n+                           \"-XX:+ClassUnloading\", ClassUnloadTestMain.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(argsList);\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        return output;\n@@ -86,0 +81,2 @@\n+        OutputAnalyzer output;\n+\n@@ -87,2 +84,2 @@\n-        pb = exec(\"-Xlog:class+unload=info\");\n-        checkFor(\"[class,unload]\", \"unloading class\");\n+        output = exec(\"-Xlog:class+unload=info\");\n+        checkFor(output, \"[class,unload]\", \"unloading class\");\n@@ -91,2 +88,2 @@\n-        pb = exec(\"-Xlog:class+unload=off\");\n-        checkAbsent(\"[class,unload]\");\n+        output = exec(\"-Xlog:class+unload=off\");\n+        checkAbsent(output,\"[class,unload]\");\n@@ -95,2 +92,2 @@\n-        pb = exec(\"-XX:+TraceClassUnloading\");\n-        checkFor(\"[class,unload]\", \"unloading class\");\n+        output = exec(\"-XX:+TraceClassUnloading\");\n+        checkFor(output, \"[class,unload]\", \"unloading class\");\n@@ -99,2 +96,2 @@\n-        pb = exec(\"-XX:-TraceClassUnloading\");\n-        checkAbsent(\"[class,unload]\");\n+        output = exec(\"-XX:-TraceClassUnloading\");\n+        checkAbsent(output, \"[class,unload]\");\n@@ -103,2 +100,2 @@\n-        pb = exec(\"-Xlog:class+load=info\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\");\n+        output = exec(\"-Xlog:class+load=info\");\n+        checkFor(output,\"[class,load]\", \"java.lang.Object\", \"source:\");\n@@ -107,2 +104,2 @@\n-        pb = exec(\"-Xlog:class+load=debug\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\", \"klass:\", \"super:\", \"loader:\", \"bytes:\");\n+        output = exec(\"-Xlog:class+load=debug\");\n+        checkFor(output,\"[class,load]\", \"java.lang.Object\", \"source:\", \"klass:\", \"super:\", \"loader:\", \"bytes:\");\n@@ -111,2 +108,2 @@\n-        pb = exec(\"-Xlog:class+load=off\");\n-        checkAbsent(\"[class,load]\");\n+        output = exec(\"-Xlog:class+load=off\");\n+        checkAbsent(output,\"[class,load]\");\n@@ -115,2 +112,2 @@\n-        pb = exec(\"-XX:+TraceClassLoading\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\");\n+        output = exec(\"-XX:+TraceClassLoading\");\n+        checkFor(output, \"[class,load]\", \"java.lang.Object\", \"source:\");\n@@ -119,2 +116,2 @@\n-        pb = exec(\"-XX:-TraceClassLoading\");\n-        checkAbsent(\"[class,load]\");\n+        output = exec(\"-XX:-TraceClassLoading\");\n+        checkAbsent(output, \"[class,load]\");\n@@ -123,3 +120,3 @@\n-        pb = exec(\"-verbose:class\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\");\n-        checkFor(\"[class,unload]\", \"unloading class\");\n+        output = exec(\"-verbose:class\");\n+        checkFor(output,\"[class,load]\", \"java.lang.Object\", \"source:\");\n+        checkFor(output,\"[class,unload]\", \"unloading class\");\n@@ -128,2 +125,2 @@\n-        pb = exec(\"-Xlog:class+loader+data=trace\");\n-        checkFor(\"[class,loader,data]\", \"create loader data\");\n+        output = exec(\"-Xlog:class+loader+data=trace\");\n+        checkFor(output, \"[class,loader,data]\", \"create loader data\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":36,"deletions":39,"binary":false,"changes":75,"status":"modified"}]}