{"files":[{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm -ea CookieManagerTest\n+ *          java.logging\n+ * @run main\/othervm -ea -esa CookieManagerTest\n@@ -36,0 +37,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -62,0 +65,5 @@\n+        \/\/ logs everything...\n+        Logger root = Logger.getLogger(\"\");\n+        root.setLevel(Level.ALL);\n+        root.getHandlers()[0].setLevel(Level.ALL);\n+\n","filename":"test\/jdk\/java\/net\/CookieHandler\/CookieManagerTest.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -135,0 +135,1 @@\n+                finally { out.println(threadName + \": done\"); }\n@@ -145,0 +146,1 @@\n+        out.println(\"Wrote \" + start + \" -> \" + (start + 100));\n@@ -159,0 +161,1 @@\n+        out.println(\"Read \" + start + \" -> \" + (start + 100));\n@@ -210,0 +213,1 @@\n+            out.println(\"Proxy serving CONNECT request to \" + serverAddr);\n","filename":"test\/jdk\/java\/net\/Socket\/HttpProxy.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+        volatile boolean done;\n@@ -51,0 +52,1 @@\n+                done = true;\n@@ -59,1 +61,1 @@\n-                while (true) {\n+                while (!done) {\n@@ -64,0 +66,1 @@\n+                if (!done) e.printStackTrace();\n@@ -77,7 +80,3 @@\n-            Socket sock = new Socket((String)null, port);\n-            sock.close();\n-            sock = new Socket((String)null, port, true);\n-            sock.close();\n-            sock = new Socket((String)null, port, null, 0);\n-            sock.close();\n-\n+            try (var sock = new Socket((String)null, port)) {}\n+            try (var sock = new Socket((String)null, port, true)) {}\n+            try (var sock = new Socket((String)null, port, null, 0)) {}\n","filename":"test\/jdk\/java\/net\/Socket\/NullHost.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-            server = new TestHttpServer(httpTrans, 1, 10, 0);\n+            server = new TestHttpServer(httpTrans, 1, 10, InetAddress.getLocalHost(), 0);\n@@ -74,2 +74,3 @@\n-            String baseURLStr = \"http:\/\/\" + InetAddress.getLocalHost().getHostAddress() + \":\" +\n-                                  server.getLocalPort() + \"\/\";\n+            String hostAddr =  InetAddress.getLocalHost().getHostAddress();\n+            if (hostAddr.indexOf(':') > -1) hostAddr = \"[\" + hostAddr + \"]\";\n+            String baseURLStr = \"http:\/\/\" + hostAddr + \":\" + server.getLocalPort() + \"\/\";\n@@ -80,1 +81,1 @@\n-            HttpURLConnection uc = (HttpURLConnection)bigDataURL.openConnection();\n+            HttpURLConnection uc = (HttpURLConnection)bigDataURL.openConnection(Proxy.NO_PROXY);\n@@ -91,1 +92,1 @@\n-            uc = (HttpURLConnection)smallDataURL.openConnection();\n+            uc = (HttpURLConnection)smallDataURL.openConnection(Proxy.NO_PROXY);\n@@ -99,1 +100,1 @@\n-            uc = (HttpURLConnection)part2Url.openConnection();\n+            uc = (HttpURLConnection)part2Url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/http\/KeepAliveCache\/B5045306.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+import java.net.InetAddress;\n+import java.net.Proxy;\n@@ -46,0 +48,1 @@\n+import java.net.UnknownHostException;\n@@ -67,0 +70,4 @@\n+    ServerIdentityTest() throws UnknownHostException {\n+        serverAddress = InetAddress.getByName(hostname);\n+    }\n+\n@@ -91,1 +98,1 @@\n-            urlc = (HttpURLConnection)url.openConnection();\n+            urlc = (HttpURLConnection)url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsClient\/ServerIdentityTest.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -654,0 +654,4 @@\n+        \/\/ doClientSide() connects to \"localhost\"\n+        InetAddress localHost = InetAddress.getByName(\"localhost\");\n+        InetSocketAddress address = new InetSocketAddress(localHost, serverPort);\n+\n@@ -655,1 +659,2 @@\n-            (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+            (SSLServerSocket) sslssf.createServerSocket();\n+        sslServerSocket.bind(address);\n@@ -720,1 +725,1 @@\n-                http = (HttpsURLConnection)url.openConnection();\n+                http = (HttpsURLConnection)url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/DNSIdentities.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -653,0 +653,4 @@\n+        \/\/ doClientSide() connects to the loopback address\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        InetSocketAddress address = new InetSocketAddress(loopback, serverPort);\n+\n@@ -654,1 +658,2 @@\n-            (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+            (SSLServerSocket) sslssf.createServerSocket();\n+        sslServerSocket.bind(address);\n@@ -724,1 +729,1 @@\n-                http = (HttpsURLConnection)url.openConnection();\n+                http = (HttpsURLConnection)url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPAddressDNSIdentities.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -657,0 +657,4 @@\n+        \/\/ doClientSide() connects to the loopback address\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        InetSocketAddress address = new InetSocketAddress(loopback, serverPort);\n+\n@@ -658,1 +662,2 @@\n-            (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+            (SSLServerSocket) sslssf.createServerSocket();\n+        sslServerSocket.bind(address);\n@@ -728,1 +733,1 @@\n-                http = (HttpsURLConnection)url.openConnection();\n+                http = (HttpsURLConnection)url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPAddressIPIdentities.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @library \/test\/lib\n@@ -48,0 +49,1 @@\n+import jdk.test.lib.net.URIBuilder;\n@@ -655,0 +657,4 @@\n+        \/\/ doClientSide() connects to the loopback address\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        InetSocketAddress address = new InetSocketAddress(loopback, serverPort);\n+\n@@ -656,1 +662,2 @@\n-            (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+            (SSLServerSocket) sslssf.createServerSocket();\n+        sslServerSocket.bind(address);\n@@ -716,1 +723,6 @@\n-            URL url = new URL(\"https:\/\/localhost:\" + serverPort+\"\/\");\n+            URL url = URIBuilder.newBuilder()\n+                .scheme(\"https\")\n+                .loopback()\n+                .port(serverPort)\n+                .path(\"\/\")\n+                .toURL();\n@@ -720,1 +732,1 @@\n-                http = (HttpsURLConnection)url.openConnection();\n+                http = (HttpsURLConnection)url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPIdentities.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -654,0 +654,4 @@\n+        \/\/ doClientSide() connects to \"localhost\"\n+        InetAddress localHost = InetAddress.getByName(\"localhost\");\n+        InetSocketAddress address = new InetSocketAddress(localHost, serverPort);\n+\n@@ -655,1 +659,2 @@\n-            (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+            (SSLServerSocket) sslssf.createServerSocket();\n+        sslServerSocket.bind(address);\n@@ -720,1 +725,1 @@\n-                http = (HttpsURLConnection)url.openConnection();\n+                http = (HttpsURLConnection)url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/Identities.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,0 +98,10 @@\n+    private SSLServerSocket createServerSocket(SSLServerSocketFactory sslssf)\n+        throws Exception {\n+        SSLServerSocket sslServerSocket =\n+            (SSLServerSocket)sslssf.createServerSocket();\n+        InetAddress localHost = InetAddress.getLocalHost();\n+        InetSocketAddress address = new InetSocketAddress(localHost, serverPort);\n+        sslServerSocket.bind(address);\n+        return sslServerSocket;\n+    }\n+\n@@ -107,2 +117,1 @@\n-        try (SSLServerSocket sslServerSocket =\n-                (SSLServerSocket)sslssf.createServerSocket(serverPort)) {\n+        try (SSLServerSocket sslServerSocket = createServerSocket(sslssf)) {\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/ImpactOnSNI.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,0 +138,5 @@\n+\n+        \/\/ doClientSide() connects to \"localhost\"\n+        InetAddress localHost = InetAddress.getByName(\"localhost\");\n+        InetSocketAddress address = new InetSocketAddress(localHost, serverPort);\n+\n@@ -139,1 +144,2 @@\n-            (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+            (SSLServerSocket) sslssf.createServerSocket();\n+        sslServerSocket.bind(address);\n@@ -208,1 +214,1 @@\n-        URLConnection urlc = url.openConnection();\n+        URLConnection urlc = url.openConnection(Proxy.NO_PROXY);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/NewImpl\/JavaxHostnameVerifier.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,4 @@\n-        ServerSocket serverSocket = new ServerSocket(0);\n+        InetAddress localHost = InetAddress.getByName(\"localhost\");\n+        InetSocketAddress address = new InetSocketAddress(localHost, 0);\n+        ServerSocket serverSocket = new ServerSocket();\n+        serverSocket.bind(address);\n@@ -111,1 +114,3 @@\n-            System.out.println (\"Received IOException as expected\");\n+            System.out.println (\"Received IOException as expected: \" + e);\n+        } finally {\n+            try {serverSocket.close();} catch (IOException x) {}\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/B4957695.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}