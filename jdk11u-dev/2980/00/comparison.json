{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,5 @@\n-import java.io.*;\n-import java.net.*;\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.net.StandardSocketOptions;\n@@ -33,0 +36,1 @@\n+import java.util.concurrent.CountDownLatch;\n@@ -39,2 +43,2 @@\n-        try {\n-            serverSocketThread = new ServerSocketThread();\n+        serverSocketThread = initServerSocketThread();\n+        if (serverSocketThread != null) {\n@@ -42,0 +46,1 @@\n+        }\n@@ -43,1 +48,2 @@\n-            udpThread = new UDPThread();\n+        udpThread = initUDPThread();\n+        if (udpThread != null) {\n@@ -45,0 +51,7 @@\n+        }\n+    }\n+\n+    private UDPThread initUDPThread() {\n+        UDPThread aUDPThread = null;\n+        try {\n+            aUDPThread = new UDPThread();\n@@ -46,0 +59,1 @@\n+            System.err.println(\"failed to create and start a UDPThread\");\n@@ -48,0 +62,1 @@\n+        return aUDPThread;\n@@ -50,2 +65,2 @@\n-    public static void main(String[] args) throws Throwable {\n-        StressNativeSignal test = new StressNativeSignal();\n+    private ServerSocketThread initServerSocketThread() {\n+        ServerSocketThread aServerSocketThread = null;\n@@ -53,1 +68,2 @@\n-            Thread.sleep(3000);\n+            aServerSocketThread = new ServerSocketThread();\n+\n@@ -55,1 +71,2 @@\n-            z.printStackTrace(System.err);\n+            System.err.println(\"failed to create and start a ServerSocketThread\");\n+            z.printStackTrace();\n@@ -57,0 +74,2 @@\n+        return aServerSocketThread;\n+    }\n@@ -58,0 +77,3 @@\n+    public static void main(String[] args) throws Throwable {\n+        StressNativeSignal test = new StressNativeSignal();\n+        test.waitForTestThreadsToStart();\n@@ -62,5 +84,9 @@\n-        udpThread.terminate();\n-        try {\n-            udpThread.join();\n-        } catch (Exception z) {\n-            z.printStackTrace(System.err);\n+        if ((udpThread != null) && udpThread.isAlive()) {\n+            udpThread.terminate();\n+            try {\n+                udpThread.join();\n+            } catch (Exception z) {\n+                z.printStackTrace(System.err);\n+            }\n+        } else {\n+            System.out.println(\"UDPThread test scenario was not run\");\n@@ -69,5 +95,18 @@\n-        serverSocketThread.terminate();\n-        try {\n-            serverSocketThread.join();\n-        } catch (Exception z) {\n-            z.printStackTrace(System.err);\n+        if ((serverSocketThread != null) && (serverSocketThread.isAlive())) {\n+            serverSocketThread.terminate();\n+            try {\n+                serverSocketThread.join();\n+            } catch (Exception z) {\n+                z.printStackTrace(System.err);\n+            }\n+        } else {\n+            System.out.println(\"ServerSocketThread test scenario was not run\");\n+        }\n+    }\n+\n+    public void waitForTestThreadsToStart() {\n+        if ((udpThread != null) && udpThread.isAlive()) {\n+            udpThread.waitTestThreadStart();\n+        }\n+        if ((serverSocketThread != null) && (serverSocketThread.isAlive())) {\n+            serverSocketThread.waitTestThreadStart();\n@@ -80,0 +119,5 @@\n+        private final CountDownLatch threadStarted = new CountDownLatch(1);\n+\n+        public ServerSocketThread () throws Exception {\n+            socket = new ServerSocket(1122);\n+        }\n@@ -82,0 +126,1 @@\n+\n@@ -83,1 +128,1 @@\n-                socket = new ServerSocket(1122);\n+                threadStarted.countDown();\n@@ -85,5 +130,2 @@\n-                BufferedReader reader = new BufferedReader(new InputStreamReader(client.getInputStream()));\n-                shouldTerminate = false;\n-                while (!shouldTerminate) {\n-                    String msg = reader.readLine();\n-                }\n+                client.close();\n+                throw new RuntimeException(\"Unexpected return from accept call\");\n@@ -91,0 +133,1 @@\n+                System.err.println(\"ServerSocketThread: caught exception \" + z.getClass().getName());\n@@ -106,0 +149,9 @@\n+\n+        public void waitTestThreadStart() {\n+            try {\n+                threadStarted.await();\n+            } catch (Exception z) {\n+                z.printStackTrace(System.err);\n+                \/\/ ignore\n+            }\n+        }\n@@ -111,0 +163,8 @@\n+        private final CountDownLatch threadStarted = new CountDownLatch(1);\n+\n+        public UDPThread () throws Exception {\n+\n+            channel = DatagramChannel.open();\n+            channel.setOption(StandardSocketOptions.SO_RCVBUF, 6553600);\n+            channel.bind(new InetSocketAddress(19870));\n+        }\n@@ -114,7 +174,0 @@\n-            try {\n-                channel = DatagramChannel.open();\n-                channel.setOption(StandardSocketOptions.SO_RCVBUF, 6553600);\n-                channel.bind(new InetSocketAddress(19870));\n-            } catch (IOException z) {\n-                z.printStackTrace(System.err);\n-            }\n@@ -123,2 +176,2 @@\n-            shouldTerminate = false;\n-            while (!shouldTerminate) {\n+            threadStarted.countDown();\n+            do {\n@@ -129,0 +182,1 @@\n+                    System.err.println(\"UDPThread: caught exception \" + z.getClass().getName());\n@@ -133,1 +187,1 @@\n-            }\n+            } while (!shouldTerminate);\n@@ -140,0 +194,10 @@\n+            } catch (Exception z) {\n+                System.err.println(\"UDPThread: caught exception \" + z.getClass().getName());\n+                z.printStackTrace(System.err);\n+                \/\/ ignore\n+            }\n+        }\n+\n+        public void waitTestThreadStart() {\n+            try {\n+                threadStarted.await();\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/StressNativeSignal.java","additions":100,"deletions":36,"binary":false,"changes":136,"status":"modified"}]}