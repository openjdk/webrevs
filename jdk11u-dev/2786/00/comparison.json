{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,10 @@\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n@@ -25,1 +35,1 @@\n-  @test 1.2 98\/08\/05\n+  @test\n@@ -29,1 +39,0 @@\n-  @author andrei.dmitriev: area=awt.mouse\n@@ -33,9 +42,1 @@\n-\/**\n- * ClickDuringKeypress.java\n- *\n- * summary:\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n+public class ClickDuringKeypress implements MouseListener {\n@@ -43,3 +44,0 @@\n-public class ClickDuringKeypress implements MouseListener\n- {\n-   \/\/Declare things used in the test, like buttons and labels here\n@@ -47,14 +45,27 @@\n-   final static int DOUBLE_CLICK_AUTO_DELAY = 10;\n-   volatile int lastClickCount = 0;\n-   volatile boolean clicked = false;\n-   volatile boolean ready = false;\n-\n-   Frame frame;\n-   Robot robot;\n-\n-   public void init()\n-    {\n-      \/\/Create instructions for the user here, as well as set up\n-      \/\/ the environment -- set the layout manager, add buttons,\n-      \/\/ etc.\n-\n+   final static int DOUBLE_CLICK_AUTO_DELAY = 20;\n+   static volatile int lastClickCount = 0;\n+   static volatile boolean clicked = false;\n+   static volatile boolean ready = false;\n+\n+   static volatile Frame frame;\n+   static volatile Robot robot;\n+   static final ClickDuringKeypress clicker = new ClickDuringKeypress();\n+\n+   public static void main(String[] args) throws Exception {\n+       try {\n+           EventQueue.invokeAndWait(ClickDuringKeypress::createUI);\n+           robot = new Robot();\n+           robot.setAutoWaitForIdle(true);\n+           robot.delay(2000);\n+           robot.mouseMove(200, 200);\n+           robot.delay(2000);\n+           EventQueue.invokeAndWait(() -> frame.setVisible(true));\n+           doTest();\n+       } finally {\n+           if (frame != null) {\n+               EventQueue.invokeAndWait(frame::dispose);\n+           }\n+       }\n+   }\n+\n+   static void createUI() {\n@@ -62,1 +73,1 @@\n-      frame.addMouseListener(this);\n+      frame.addMouseListener(clicker);\n@@ -65,1 +76,0 @@\n-              synchronized(ClickDuringKeypress.this) {\n@@ -67,2 +77,0 @@\n-                  ClickDuringKeypress.this.notifyAll();\n-              }\n@@ -72,0 +80,1 @@\n+    }\n@@ -73,27 +82,6 @@\n-      start();\n-\n-    }\/\/End  init()\n-\n-   public void start ()\n-    {\n-      try {\n-        robot = new Robot();\n-      } catch (AWTException e) {\n-        System.out.println(\"Could not create Robot.\");\n-        throw new RuntimeException(\"Couldn't create Robot.  Test fails\");\n-      }\n-\n-      robot.mouseMove(200, 200);\n-      frame.show();\n-\n-      synchronized(this) {\n-          try {\n-              if (!ready) {\n-                  wait(10000);\n-              }\n-          } catch (InterruptedException ex) {\n-          }\n-          if (!ready) {\n-              System.out.println(\"Not Activated. Test fails\");\n-              throw new RuntimeException(\"Not Activated. Test fails\");\n-          }\n+    static void doTest() throws Exception {\n+       robot.waitForIdle();\n+       robot.delay(1000);\n+       if (!ready) {\n+           System.out.println(\"Not Activated. Test fails\");\n+           throw new RuntimeException(\"Not Activated. Test fails\");\n@@ -101,12 +89,1 @@\n-\n-      doTest();\n-\n-      \/\/What would normally go into main() will probably go here.\n-      \/\/Use System.out.println for diagnostic messages that you want\n-      \/\/to read after the test is done.\n-      \/\/Use Sysout.println for messages you want the tester to read.\n-\n-    }\/\/ start()\n-\n-    \/\/ Mouse should be over the Frame by this point\n-    private void doTest() {\n+      \/\/ Mouse should be over the Frame by this point\n@@ -116,3 +93,2 @@\n-      robot.mousePress(InputEvent.BUTTON1_MASK);\n-      robot.delay(10);\n-      robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+      robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+      robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -125,3 +101,2 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.delay(10);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -129,1 +104,0 @@\n-        robot.delay(10);\n@@ -131,3 +105,2 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.delay(10);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -159,6 +132,1 @@\n-\n-     public static void main(String[] args) {\n-         new ClickDuringKeypress().init();\n-     }\n-\n- }\/\/ class ClickDuringKeypress\n+}\n","filename":"test\/jdk\/java\/awt\/event\/MouseEvent\/ClickDuringKeypress\/ClickDuringKeypress.java","additions":56,"deletions":88,"binary":false,"changes":144,"status":"modified"}]}