{"files":[{"patch":"@@ -89,1 +89,1 @@\n-                    + \"DEM-EEK-ESP-FIM-FRF-GHC-GRD-GWP-IEP-ITL-LTL-LUF-LVL-MGF-MRO-MTL-MXV-MZM-NLG-\"\n+                    + \"DEM-EEK-ESP-FIM-FRF-GHC-GRD-GWP-HRK-IEP-ITL-LTL-LUF-LVL-MGF-MRO-MTL-MXV-MZM-NLG-\"\n@@ -171,1 +171,1 @@\n-                \/\/ If the cut-over already passed, test the changed data too\n+                \/\/ If the cut-over already passed, use the new curency for ISO4217Codes\n@@ -270,14 +270,15 @@\n-    @ParameterizedTest\n-    @MethodSource(\"codeCombos\")\n-    public void twoLetterCodesTest(String country) {\n-        if (codes[toIndex(country)] == UNDEFINED) {\n-            \/\/ if a code is undefined \/ 0, creating a Currency from it\n-            \/\/ should throw an IllegalArgumentException\n-            assertThrows(IllegalArgumentException.class,\n-                    ()-> Currency.getInstance(new Locale(\"\", country)),\n-                    \"Error: This should be an undefined code and throw IllegalArgumentException: \" + country);\n-        } else if (codes[toIndex(country)] == SKIPPED) {\n-            \/\/ if a code is marked as skipped \/ 2, creating a Currency from it\n-            \/\/ should return null\n-            assertNull(Currency.getInstance(new Locale(\"\", country)),\n-                    \"Error: Currency.getInstance() for this locale should return null: \" + country);\n+    @Test\n+    public void twoLetterCodesTest() {\n+        for (String country : codeCombos()) {\n+            if (codes[toIndex(country)] == UNDEFINED) {\n+                \/\/ if a code is undefined \/ 0, creating a Currency from it\n+                \/\/ should throw an IllegalArgumentException\n+                assertThrows(IllegalArgumentException.class,\n+                        () -> Currency.getInstance(new Locale(\"\", country)),\n+                        \"Error: This should be an undefined code and throw IllegalArgumentException: \" + country);\n+            } else if (codes[toIndex(country)] == SKIPPED) {\n+                \/\/ if a code is marked as skipped \/ 2, creating a Currency from it\n+                \/\/ should return null\n+                assertNull(Currency.getInstance(new Locale(\"\", country)),\n+                        \"Error: Currency.getInstance() for this locale should return null: \" + country);\n+            }\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"}]}