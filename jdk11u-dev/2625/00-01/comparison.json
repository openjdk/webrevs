{"files":[{"patch":"@@ -52,0 +52,1 @@\n+import org.junit.jupiter.api.TestInstance;\n@@ -69,0 +70,1 @@\n+    @TestInstance(TestInstance.Lifecycle.PER_CLASS)\n@@ -77,1 +79,1 @@\n-        private static Stream<String> validCurrencies() {\n+        public Stream<String> validCurrencies() {\n@@ -89,1 +91,1 @@\n-        private static Stream<String> invalidCurrencies() {\n+        public Stream<String> invalidCurrencies() {\n@@ -95,0 +97,1 @@\n+    @TestInstance(TestInstance.Lifecycle.PER_CLASS)\n@@ -120,1 +123,1 @@\n-        private static Stream<Arguments> fundsCodes() {\n+        public Stream<Arguments> fundsCodes() {\n@@ -131,0 +134,1 @@\n+    @TestInstance(TestInstance.Lifecycle.PER_CLASS)\n@@ -167,1 +171,1 @@\n-                    Currency.getInstance(Locale.of(\"\", \"EU\")), \"Did not throw IAE\");\n+                    Currency.getInstance(new Locale(\"\", \"EU\")), \"Did not throw IAE\");\n@@ -174,1 +178,1 @@\n-            Locale locale = Locale.of(\"\", countryCode);\n+            Locale locale = new Locale(\"\", countryCode);\n@@ -181,1 +185,1 @@\n-        private static Stream<Arguments> countryProvider() {\n+        public Stream<Arguments> countryProvider() {\n@@ -203,1 +207,1 @@\n-        private static List<Arguments> switchedOverCountries() {\n+        private List<Arguments> switchedOverCountries() {\n@@ -304,1 +308,1 @@\n-                Arguments.of(\"ESP\", Locale.of(\"es\"), \"peseta espa\\u00f1ola\"),\n+                Arguments.of(\"ESP\", new Locale(\"es\"), \"peseta espa\\u00f1ola\"),\n@@ -308,1 +312,1 @@\n-                Arguments.of(\"SEK\", Locale.of(\"sv\"), \"svensk krona\"),\n+                Arguments.of(\"SEK\", new Locale(\"sv\"), \"svensk krona\"),\n","filename":"test\/jdk\/java\/util\/Currency\/CurrencyTest.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-        Locale loc = Locale.of(\"\", country);\n+        Locale loc = new Locale(\"\", country);\n@@ -277,1 +277,1 @@\n-                    ()-> Currency.getInstance(Locale.of(\"\", country)),\n+                    ()-> Currency.getInstance(new Locale(\"\", country)),\n@@ -282,1 +282,1 @@\n-            assertNull(Currency.getInstance(Locale.of(\"\", country)),\n+            assertNull(Currency.getInstance(new Locale(\"\", country)),\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}