{"files":[{"patch":"@@ -958,4 +958,5 @@\n-# The policy for the XML Signature secure validation mode. The mode is\n-# enabled by setting the property \"org.jcp.xml.dsig.secureValidation\" to\n-# true with the javax.xml.crypto.XMLCryptoContext.setProperty() method,\n-# or by running the code with a SecurityManager.\n+# The policy for the XML Signature secure validation mode. Validation of\n+# XML Signatures that violate any of these constraints will fail. The\n+# mode is enforced by default. The mode can be disabled by setting the\n+# property \"org.jcp.xml.dsig.secureValidation\" to Boolean.FALSE with the\n+# javax.xml.crypto.XMLCryptoContext.setProperty() method.\n@@ -988,2 +989,2 @@\n-# Note: This property is currently used by the JDK Reference implementation. It\n-# is not guaranteed to be examined and used by other implementations.\n+# Note: This property is currently used by the JDK Reference implementation.\n+# It is not guaranteed to be examined and used by other implementations.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,8 @@\n+ * @implNote\n+ * By default, the JDK implementation enables a secure validation mode by\n+ * setting the <code>org.jcp.xml.dsig.secureValidation<\/code> property to\n+ * <code>Boolean.TRUE<\/code> (see the {@link #setProperty setProperty}\n+ * method). When enabled, validation of XML signatures are subject to\n+ * stricter checking of algorithms and other constraints as specified by the\n+ * <code>jdk.xml.dsig.secureValidationPolicy<\/code> security property.\n+ *\n@@ -106,4 +114,1 @@\n-        if (System.getSecurityManager() != null) {\n-            super.setProperty(\"org.jcp.xml.dsig.secureValidation\",\n-                              Boolean.TRUE);\n-        }\n+        super.setProperty(\"org.jcp.xml.dsig.secureValidation\", Boolean.TRUE);\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/dom\/DOMValidateContext.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -612,1 +612,1 @@\n-            (sha1, dsaSha1, dsa1024, signingKey, kvks, true);\n+            (sha1, dsaSha1, dsa1024, signingKey, kvks, true, true);\n@@ -619,1 +619,1 @@\n-            (sha1, dsaSha1, dsa1024, signingKey, kvks, false);\n+            (sha1, dsaSha1, dsa1024, signingKey, kvks, false, true);\n@@ -626,1 +626,1 @@\n-            (sha256, dsaSha1, dsa1024, signingKey, kvks, false);\n+            (sha256, dsaSha1, dsa1024, signingKey, kvks, false, true);\n@@ -635,1 +635,1 @@\n-                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -648,1 +648,1 @@\n-            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -656,1 +656,1 @@\n-                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -664,1 +664,1 @@\n-            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -672,1 +672,1 @@\n-            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -679,1 +679,1 @@\n-            getPrivateKey(\"RSA\", 512), kvks, false);\n+            getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -687,1 +687,1 @@\n-            getPrivateKey(\"RSA\", 512), kvks, false);\n+            getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -695,1 +695,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -703,1 +703,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -711,1 +711,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -719,1 +719,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -727,1 +727,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -735,1 +735,1 @@\n-            getPrivateKey(\"RSA\", 1024), kvks, false);\n+            getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -743,1 +743,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -751,1 +751,1 @@\n-            getPrivateKey(\"RSA\", 1024), kvks, false);\n+            getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -759,1 +759,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -767,1 +767,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -775,1 +775,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -783,1 +783,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -791,1 +791,1 @@\n-                getPrivateKey(\"RSA\", 2048), kvks, false);\n+                getPrivateKey(\"RSA\", 2048), kvks, false, true);\n@@ -798,1 +798,1 @@\n-            getECPrivateKey(\"P256\"), kvks, false);\n+            getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -805,1 +805,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -812,1 +812,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -819,1 +819,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -826,1 +826,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -833,1 +833,1 @@\n-            getECPrivateKey(\"P384\"), kvks, false);\n+            getECPrivateKey(\"P384\"), kvks, false, true);\n@@ -840,1 +840,1 @@\n-            getECPrivateKey(\"P521\"), kvks, false);\n+            getECPrivateKey(\"P521\"), kvks, false, true);\n@@ -972,0 +972,1 @@\n+        dvc.setProperty(\"org.jcp.xml.dsig.secureValidation\", false);\n@@ -1019,0 +1020,1 @@\n+        dvc.setProperty(\"org.jcp.xml.dsig.secureValidation\", false);\n@@ -1459,1 +1461,1 @@\n-         KeySelector ks, boolean b64) throws Exception {\n+         KeySelector ks, boolean b64, boolean secVal) throws Exception {\n@@ -1494,0 +1496,1 @@\n+        dvc.setProperty(\"org.jcp.xml.dsig.secureValidation\", secVal);\n","filename":"test\/jdk\/javax\/xml\/crypto\/dsig\/GenerationTests.java","additions":34,"deletions":31,"binary":false,"changes":65,"status":"modified"}]}