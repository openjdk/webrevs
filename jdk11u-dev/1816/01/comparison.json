{"files":[{"patch":"@@ -4,1 +4,1 @@\n-version=11.0.19\n+version=11.0.20\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -603,1 +603,1 @@\n-    # gcc -Wl,-version output typically looks like\n+    # gcc -Wl,-version output typically looks like:\n@@ -607,1 +607,3 @@\n-    LINKER_VERSION_STRING=`$LINKER -Wl,--version 2>&1 | $HEAD -n 1`\n+    # If using gold it will look like:\n+    #   GNU gold (GNU Binutils 2.30) 1.15\n+    LINKER_VERSION_STRING=`$LINKER -Wl,--version 2> \/dev\/null | $HEAD -n 1`\n@@ -609,2 +611,7 @@\n-    [ LINKER_VERSION_NUMBER=`$ECHO $LINKER_VERSION_STRING | \\\n-        $SED -e 's\/.* \\([0-9][0-9]*\\(\\.[0-9][0-9]*\\)*\\).*\/\\1\/'` ]\n+    if [ [[ \"$LINKER_VERSION_STRING\" == *gold* ]] ]; then\n+      [ LINKER_VERSION_NUMBER=`$ECHO $LINKER_VERSION_STRING | \\\n+          $SED -e 's\/.* \\([0-9][0-9]*\\(\\.[0-9][0-9]*\\)*\\).*) .*\/\\1\/'` ]\n+    else\n+      [ LINKER_VERSION_NUMBER=`$ECHO $LINKER_VERSION_STRING | \\\n+          $SED -e 's\/.* \\([0-9][0-9]*\\(\\.[0-9][0-9]*\\)*\\).*\/\\1\/'` ]\n+    fi\n","filename":"make\/autoconf\/toolchain.m4","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-DEFAULT_VERSION_UPDATE=19\n+DEFAULT_VERSION_UPDATE=20\n@@ -36,1 +36,1 @@\n-DEFAULT_VERSION_DATE=2023-04-18\n+DEFAULT_VERSION_DATE=2023-07-18\n","filename":"make\/autoconf\/version-numbers","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -865,1 +865,1 @@\n-        linux_x64: \"gcc7.3.0-OEL6.4+1.1\",\n+        linux_x64: \"gcc8.2.0-OL6.4+1.0\",\n@@ -872,1 +872,1 @@\n-                    : \"gcc7.3.0-Fedora27+1.1\"),\n+                    : \"gcc8.2.0-Fedora27+1.0\"),\n@@ -876,1 +876,1 @@\n-                       ? \"gcc7.3.0-Fedora27+1.1\"\n+                       ? \"gcc8.2.0-Fedora27+1.0\"\n@@ -896,0 +896,5 @@\n+    var devkit_cross_prefix = \"\";\n+    if (input.target_platform != input.build_platform) {\n+        devkit_cross_prefix = input.build_platform + \"-to-\";\n+    }\n+\n@@ -919,1 +924,1 @@\n-            module: \"devkit-\" + devkit_platform,\n+            module: \"devkit-\" + devkit_cross_prefix + devkit_platform,\n","filename":"make\/conf\/jib-profiles.js","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -32,4 +32,0 @@\n-# In addition to the makefiles, access to Oracle Linux installation\n-# media is required. This has been tested against Oracle Enterprise Linux\n-# 6.4.\n-#\n@@ -39,1 +35,1 @@\n-# make tars BASE_OS=OEL6\n+# make tars BASE_OS=OL\n@@ -51,0 +47,8 @@\n+# You may want the native toolchain to be used when compiling the cross\n+# compilation toolchains. To achieve this, first build the native toolchain,\n+# then add the bin directory from this build to the path when invoking this\n+# makefile again for cross compilation. Ex:\n+#\n+# PATH=$PWD\/..\/..\/build\/devkit\/result\/x86_64-linux-gnu-to-x86_64-linux-gnu\/bin:$PATH \\\n+#    make TARGETS=\"arm-linux-gnueabihf,ppc64-linux-gnu\" BASE_OS=Fedora\n+#\n@@ -54,0 +58,2 @@\n+COMMA := ,\n+\n@@ -69,1 +75,1 @@\n-  platforms := $(TARGETS)\n+  platforms := $(subst $(COMMA), , $(TARGETS))\n@@ -96,1 +102,1 @@\n-              TARGET=$@ PREFIX=$(RESULT)\/$@-to-$$p BUILDDIR=$(OUTPUT_ROOT)\/$@\/$$p || exit 1 ; \\\n+              TARGET=$@ PREFIX=$(RESULT)\/$@-to-$$p || exit 1 ; \\\n@@ -106,1 +112,0 @@\n-  $$($(1)-to-$(2)_tar) : $$(shell find $$(RESULT)\/$(1)-to-$(2) -type f)\n@@ -114,3 +119,1 @@\n-\t@echo 'Creating compiler package $@'\n-\tcd $(RESULT) && tar -czf $@ $(PLATFORM)\/*\n-\ttouch $@\n+\t$(MAKE) -r -f Tars.gmk SRC_DIR=$(RESULT)\/$(PLATFORM) TAR_FILE=$@\n","filename":"make\/devkit\/Makefile","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+#\n+# Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# This makefile creates the tar files. It needs to be called with make -r\n+# which is why it's separated out into its own file.\n+\n+# Input parameters\n+# SRC_DIR\n+# TAR_FILE\n+\n+ifeq ($(SRC_DIR), )\n+  $(error SRC_DIR not set)\n+endif\n+ifeq ($(TAR_FILE), )\n+  $(error TAR_FILE not set)\n+endif\n+\n+default: tars\n+\n+tars : $(TAR_FILE)\n+\n+$(TAR_FILE): $(shell find $(SRC_DIR) -type f)\n+\t@echo 'Creating compiler package $@'\n+\tcd $(dir $(SRC_DIR)) && tar -czf $@ $(notdir $(SRC_DIR))\/*\n+\ttouch $@\n+\n+.PHONY: default tars\n","filename":"make\/devkit\/Tars.gmk","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -54,1 +54,1 @@\n-ifeq ($(BASE_OS), OEL6)\n+ifeq ($(BASE_OS), OL)\n@@ -56,1 +56,1 @@\n-  LINUX_VERSION := OEL6.4\n+  LINUX_VERSION := OL6.4\n@@ -82,2 +82,11 @@\n-GCC_VER := 7.3.0\n-ifeq ($(GCC_VER), 7.3.0)\n+GCC_VER := 8.2.0\n+ifeq ($(GCC_VER), 8.2.0)\n+  gcc_ver := gcc-8.2.0\n+  binutils_ver := binutils-2.30\n+  ccache_ver := ccache-3.5.1a\n+  CCACHE_DIRNAME := ccache-3.5.1\n+  mpfr_ver := mpfr-3.1.5\n+  gmp_ver := gmp-6.1.2\n+  mpc_ver := mpc-1.0.3\n+  gdb_ver := gdb-8.2.1\n+else ifeq ($(GCC_VER), 7.3.0)\n@@ -177,1 +186,3 @@\n-  $(1)_DIR = $(abspath $(SRCDIR)\/$(basename $(basename $(notdir $($(1))))))\n+  # Allow override\n+  $(1)_DIRNAME ?= $(basename $(basename $(notdir $($(1)))))\n+  $(1)_DIR = $(abspath $(SRCDIR)\/$$($(1)_DIRNAME))\n@@ -184,1 +195,1 @@\n-\t$$(foreach p,$$(abspath $$(wildcard $$(notdir $$($(1)_DIR)).patch)), \\\n+\t$$(foreach p,$$(abspath $$(wildcard patches\/$$(notdir $$($(1)_DIR)).patch)), \\\n","filename":"make\/devkit\/Tools.gmk","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -56,4 +56,8 @@\n-  ssize_t n = (ssize_t) os::write(_fd, buf, (uint) size);\n-\n-  if (n <= 0) {\n-    return os::strerror(errno);\n+  while (size > 0) {\n+    ssize_t n = os::write(_fd, buf, (uint) size);\n+    if (n <= 0) {\n+      return os::strerror(errno);\n+    }\n+\n+    buf += n;\n+    size -= n;\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -918,1 +918,1 @@\n-        int offset = decrypting ? 0 : outputOffset; \/\/ 0 for decrypting\n+        int offset = outputOffset; \/\/ 0 for decrypting\n@@ -921,1 +921,1 @@\n-        byte[] outWithPadding = null; \/\/ for decrypting only\n+        byte[] internalOutput = null; \/\/ for decrypting only\n@@ -935,3 +935,7 @@\n-            \/\/ create temporary output buffer so that only \"real\"\n-            \/\/ data bytes are passed to user's output buffer.\n-            outWithPadding = new byte[estOutSize];\n+            if (outputCapacity < estOutSize || padding != null) {\n+                \/\/ create temporary output buffer if the estimated size is larger\n+                \/\/ than the user-provided buffer or a padding needs to be removed\n+                \/\/ before copying the unpadded result to the output buffer\n+                internalOutput = new byte[estOutSize];\n+                offset = 0;\n+            }\n@@ -939,1 +943,1 @@\n-        byte[] outBuffer = decrypting ? outWithPadding : output;\n+        byte[] outBuffer = (internalOutput != null) ? internalOutput : output;\n@@ -955,3 +959,5 @@\n-            System.arraycopy(outWithPadding, 0, output, outputOffset, outLen);\n-            \/\/ decrypt mode. Zero out output data that's not required\n-            Arrays.fill(outWithPadding, (byte) 0x00);\n+            if (internalOutput != null) {\n+              System.arraycopy(internalOutput, 0, output, outputOffset, outLen);\n+              \/\/ decrypt mode. Zero out output data that's not required\n+              Arrays.fill(internalOutput, (byte) 0x00);\n+            }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherCore.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -409,0 +409,5 @@\n+    \/\/ Returns nameAndId string for exception message printing\n+    String nameAndId() {\n+        return nameAndId;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2212,0 +2212,3 @@\n+            public String getLoaderNameID(ClassLoader loader) {\n+                return loader.nameAndId();\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,0 +47,2 @@\n+import jdk.internal.misc.JavaLangAccess;\n+import jdk.internal.misc.SharedSecrets;\n@@ -472,0 +474,1 @@\n+        private static final JavaLangAccess JLA = SharedSecrets.getJavaLangAccess();\n@@ -859,1 +862,1 @@\n-                        \" referenced from a method is not visible from class loader\");\n+                        \" referenced from a method is not visible from class loader: \" + JLA.getLoaderNameID(ld));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4237,2 +4237,4 @@\n-                        \/\/ Exclude those ZoneText cases.\n-                        if (!(this instanceof ZoneTextPrinterParser)) {\n+                        \/\/ Exclude those cases.\n+                        if (length == position + 3 ||\n+                                context.charEquals(text.charAt(position + 3), '+') ||\n+                                context.charEquals(text.charAt(position + 3), '-')) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -308,0 +308,6 @@\n+\n+    \/**\n+     * Returns '<loader-name>' @<id> if classloader has a name\n+     * explicitly set otherwise <qualified-class-name> @<id>\n+     *\/\n+     String getLoaderNameID(ClassLoader loader);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/JavaLangAccess.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -643,2 +643,6 @@\n-                \/\/ Use a user_canceled alert for TLS 1.3 duplex close.\n-                useUserCanceled = true;\n+                \/\/ Do not use user_canceled workaround if the other side has\n+                \/\/ already half-closed the connection\n+                if (!conContext.isInboundClosed()) {\n+                    \/\/ Use a user_canceled alert for TLS 1.3 duplex close.\n+                    useUserCanceled = true;\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketImpl.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,2 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:29];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:35];\n+\n@@ -61,1 +62,1 @@\n-   \/\/ [rolesMap setObject:@\"SliderAccessibility\" forKey:@\"slider\"];\n+    \/\/[rolesMap setObject:@\"SliderAccessibility\" forKey:@\"slider\"];\n@@ -64,0 +65,7 @@\n+    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"awtcomponent\"];\n+    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"canvas\"];\n+    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"groupbox\"];\n+    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"internalframe\"];\n+    [rolesMap setObject:@\"GroupAccessibility\" forKey:@\"swingcomponent\"];\n+    [rolesMap setObject:@\"ToolbarAccessibility\" forKey:@\"toolbar\"];\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-@interface IgnoreAccessibility : CommonComponentAccessibility {\n+@interface GroupAccessibility : CommonComponentAccessibility <NSAccessibilityGroup> {\n@@ -34,1 +34,2 @@\n-- (BOOL)isAccessibilityElement;\n+\n+- (NSArray * _Nullable)accessibilityChildren;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/GroupAccessibility.h","additions":3,"deletions":2,"binary":false,"changes":5,"previous_filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/IgnoreAccessibility.h","status":"copied"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"GroupAccessibility.h\"\n+#import \"JNIUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+\/*\n+ * This is the protocol for the components that contain children.\n+ * Basic logic of accessibilityChildren might be overridden in the specific implementing\n+ * classes reflecting the logic of the class.\n+ *\/\n+@implementation GroupAccessibility\n+\n+\/*\n+ * Return all non-ignored children.\n+ *\/\n+- (NSArray *)accessibilityChildren {\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+\n+    NSArray *children = [JavaComponentAccessibility childrenOfParent:self\n+                                                             withEnv:env\n+                                                    withChildrenCode:JAVA_AX_ALL_CHILDREN\n+                                                        allowIgnored:NO];\n+\n+    if ([children count] == 0) {\n+        return nil;\n+    } else {\n+        return children;\n+    }\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/GroupAccessibility.m","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -37,1 +37,1 @@\n-- (nullable NSString *)accessibilityAttributedString:(NSRange)range;\n+- (nullable NSString *)accessibilityAttributedStringForRange:(NSRange)range;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/StaticTextAccessibility.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-- (nullable NSString *)accessibilityAttributedString:(NSRange)range\n+- (nullable NSString *)accessibilityAttributedStringForRange:(NSRange)range\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/StaticTextAccessibility.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-@interface IgnoreAccessibility : CommonComponentAccessibility {\n+@interface ToolbarAccessibility : CommonComponentAccessibility {\n@@ -34,1 +34,1 @@\n-- (BOOL)isAccessibilityElement;\n+- (NSString * _Nonnull)accessibilityRole;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ToolbarAccessibility.h","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/IgnoreAccessibility.h","status":"copied"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ToolbarAccessibility.h\"\n+\n+\/*\n+ * Implementation of the accessibility peer for the Toolbar role\n+ *\/\n+@implementation ToolbarAccessibility\n+\n+- (NSString * _Nonnull)accessibilityRole\n+{\n+    return [self accessibilityRoleAttribute];\n+}\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ToolbarAccessibility.m","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -379,0 +379,4 @@\n+        private static boolean equalsIgnoreCase(String s1, String s2) {\n+            return s1 == s2 || (s1 != null && s1.equalsIgnoreCase(s2));\n+        }\n+\n@@ -380,3 +384,7 @@\n-            for (CacheEntry entry : entries) {\n-                if (entry.equalsKey(domain, proxy)) {\n-                    entries.remove(entry);\n+            var iterator = entries.iterator();\n+            while (iterator.hasNext()) {\n+                var entry = iterator.next();\n+                if (equalsIgnoreCase(entry.scheme, authscheme)) {\n+                    if (entry.equalsKey(domain, proxy)) {\n+                        iterator.remove();\n+                    }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/AuthenticationFilter.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -806,1 +806,9 @@\n-                        startOff = padBufferLen;\n+                        \/\/ call C_EncryptUpdate first if the padBuffer is full\n+                        \/\/ to make room for padding bytes\n+                        if (padBufferLen == padBuffer.length) {\n+                            k = token.p11.C_EncryptUpdate(session.id(),\n+                                0, padBuffer, 0, padBufferLen,\n+                                0, out, outOfs, outLen);\n+                        } else {\n+                            startOff = padBufferLen;\n+                        }\n@@ -810,1 +818,1 @@\n-                    k = token.p11.C_EncryptUpdate(session.id(),\n+                    k += token.p11.C_EncryptUpdate(session.id(),\n@@ -812,1 +820,1 @@\n-                            0, out, outOfs, outLen);\n+                            0, out, outOfs + k, outLen - k);\n@@ -894,1 +902,9 @@\n-                        startOff = padBufferLen;\n+                        \/\/ call C_EncryptUpdate first if the padBuffer is full\n+                        \/\/ to make room for padding bytes\n+                        if (padBufferLen == padBuffer.length) {\n+                            k = token.p11.C_EncryptUpdate(session.id(),\n+                                0, padBuffer, 0, padBufferLen,\n+                                outAddr, outArray, outOfs, outLen);\n+                        } else {\n+                            startOff = padBufferLen;\n+                        }\n@@ -898,1 +914,1 @@\n-                    k = token.p11.C_EncryptUpdate(session.id(),\n+                    k += token.p11.C_EncryptUpdate(session.id(),\n@@ -900,1 +916,1 @@\n-                            outAddr, outArray, outOfs, outLen);\n+                            outAddr, outArray, outOfs + k, outLen - k);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Cipher.java","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -520,1 +520,1 @@\n-                    System.out.println(this + \": Calling C_SignUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_SignUpdate\");\n@@ -523,1 +523,1 @@\n-                    System.out.println(this + \": Calling C_VerfifyUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_VerfifyUpdate\");\n@@ -569,1 +569,1 @@\n-                    System.out.println(this + \": Calling C_SignUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_SignUpdate\");\n@@ -573,1 +573,1 @@\n-                    System.out.println(this + \": Calling C_VerifyUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_VerifyUpdate\");\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11PSSSignature.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,1 +210,6 @@\n-        opSessions.release(session);\n+        \/\/ Objects could have been added to this session by other thread between\n+        \/\/ check in Session.removeObject method and objSessions.remove call\n+        \/\/ higher. Therefore releaseSession method, which performs additional\n+        \/\/ check for objects, is used here to avoid placing this session\n+        \/\/ in wrong pool due to race condition.\n+        releaseSession(session);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SessionManager.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-serviceability\/sa\/ClhsdbCDSCore.java 8193639,8267433 solaris-all,macosx-x64\n+serviceability\/sa\/ClhsdbCDSCore.java 8294316,8193639,8267433 solaris-all,macosx-x64\n@@ -118,1 +118,1 @@\n-serviceability\/sa\/ClhsdbFindPC.java 8193639,8267433 solaris-all,macosx-x64\n+serviceability\/sa\/ClhsdbFindPC.java 8294316,8193639,8267433 solaris-all,macosx-x64\n@@ -125,1 +125,1 @@\n-serviceability\/sa\/ClhsdbPmap.java 8193639,8211767,8267433 solaris-all,linux-ppc64le,linux-ppc64,macosx-x64\n+serviceability\/sa\/ClhsdbPmap.java 8294316,8193639,8211767,8267433 solaris-all,linux-ppc64le,linux-ppc64,macosx-x64\n@@ -129,1 +129,1 @@\n-serviceability\/sa\/ClhsdbPstack.java 8193639,8211767,8267433 solaris-all,linux-ppc64le,linux-ppc64,macosx-x64\n+serviceability\/sa\/ClhsdbPstack.java 8294316,8193639,8211767,8267433 solaris-all,linux-ppc64le,linux-ppc64,macosx-x64\n@@ -153,2 +153,2 @@\n-serviceability\/sa\/TestJmapCore.java 8193639,8267433 solaris-all,macosx-x64\n-serviceability\/sa\/TestJmapCoreMetaspace.java 8193639,8267433 solaris-all,macosx-x64\n+serviceability\/sa\/TestJmapCore.java 8294316,8193639,8267433 solaris-all,macosx-x64\n+serviceability\/sa\/TestJmapCoreMetaspace.java 8294316,8193639,8267433 solaris-all,macosx-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -669,1 +669,1 @@\n-javax\/sound\/midi\/Sequencer\/Recording.java 8167580 linux-all,solaris-all\n+javax\/sound\/midi\/Sequencer\/Recording.java 8167580,8265485 linux-all,solaris-all,macosx-aarch64\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,298 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.net.*;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.*;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import com.sun.net.httpserver.HttpServer;\n+import com.sun.net.httpserver.HttpsConfigurator;\n+import com.sun.net.httpserver.HttpsServer;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import javax.net.ssl.SSLContext;\n+\n+\/**\n+ * @test\n+ * @bug 8232853\n+ * @summary AuthenticationFilter.Cache::remove may throw ConcurrentModificationException\n+ * @library \/lib\/testlibrary http2\/server\n+ * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters DigestEchoServer\n+ * @modules java.net.http\/jdk.internal.net.http.common\n+ * java.net.http\/jdk.internal.net.http.frame\n+ * java.net.http\/jdk.internal.net.http.hpack\n+ * java.logging\n+ * java.base\/sun.net.www.http\n+ * java.base\/sun.net.www\n+ * java.base\/sun.net\n+ * @run testng\/othervm -Dtest.requiresHost=true\n+ * -Djdk.httpclient.HttpClient.log=headers\n+ * -Djdk.internal.httpclient.debug=false\n+ * AuthFilterCacheTest\n+ *\/\n+\n+public class AuthFilterCacheTest implements HttpServerAdapters {\n+\n+    static final String RESPONSE_BODY = \"Hello World!\";\n+    static final int REQUEST_COUNT = 5;\n+    static final int URI_COUNT = 6;\n+    static final CyclicBarrier barrier = new CyclicBarrier(REQUEST_COUNT * URI_COUNT);\n+    static final SSLContext context;\n+\n+    static {\n+        try {\n+            context = new jdk.testlibrary.SimpleSSLContext().get();\n+            SSLContext.setDefault(context);\n+        } catch (Exception x) {\n+            throw new ExceptionInInitializerError(x);\n+        }\n+    }\n+\n+    HttpTestServer http1Server;\n+    HttpTestServer http2Server;\n+    HttpTestServer https1Server;\n+    HttpTestServer https2Server;\n+    DigestEchoServer.TunnelingProxy proxy;\n+    URI http1URI;\n+    URI https1URI;\n+    URI http2URI;\n+    URI https2URI;\n+    InetSocketAddress proxyAddress;\n+    ProxySelector proxySelector;\n+    MyAuthenticator auth;\n+    HttpClient client;\n+    Executor executor = Executors.newCachedThreadPool();\n+\n+    @DataProvider(name = \"uris\")\n+    Object[][] testURIs() {\n+        Object[][] uris = new Object[][]{\n+                {List.of(http1URI.resolve(\"direct\/orig\/\"),\n+                        https1URI.resolve(\"direct\/orig\/\"),\n+                        https1URI.resolve(\"proxy\/orig\/\"),\n+                        http2URI.resolve(\"direct\/orig\/\"),\n+                        https2URI.resolve(\"direct\/orig\/\"),\n+                        https2URI.resolve(\"proxy\/orig\/\"))}\n+        };\n+        return uris;\n+    }\n+\n+    public HttpClient newHttpClient(ProxySelector ps, Authenticator auth) {\n+        HttpClient.Builder builder = HttpClient\n+                .newBuilder()\n+                .sslContext(context)\n+                .authenticator(auth)\n+                .proxy(ps);\n+        return builder.build();\n+    }\n+\n+    @BeforeClass\n+    public void setUp() throws Exception {\n+        try {\n+            InetSocketAddress sa =\n+                    new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n+            auth = new MyAuthenticator();\n+\n+            \/\/ HTTP\/1.1\n+            HttpServer server1 = HttpServer.create(sa, 0);\n+            server1.setExecutor(executor);\n+            http1Server = HttpTestServer.of(server1);\n+            http1Server.addHandler(new TestHandler(), \"\/AuthFilterCacheTest\/http1\/\");\n+            http1Server.start();\n+            http1URI = new URI(\"http:\/\/\" + http1Server.serverAuthority()\n+                    + \"\/AuthFilterCacheTest\/http1\/\");\n+\n+            \/\/ HTTPS\/1.1\n+            HttpsServer sserver1 = HttpsServer.create(sa, 100);\n+            sserver1.setExecutor(executor);\n+            sserver1.setHttpsConfigurator(new HttpsConfigurator(context));\n+            https1Server = HttpTestServer.of(sserver1);\n+            https1Server.addHandler(new TestHandler(), \"\/AuthFilterCacheTest\/https1\/\");\n+            https1Server.start();\n+            https1URI = new URI(\"https:\/\/\" + https1Server.serverAuthority()\n+                    + \"\/AuthFilterCacheTest\/https1\/\");\n+\n+            \/\/ HTTP\/2.0\n+            http2Server = HttpTestServer.of(\n+                    new Http2TestServer(\"localhost\", false, 0));\n+            http2Server.addHandler(new TestHandler(), \"\/AuthFilterCacheTest\/http2\/\");\n+            http2Server.start();\n+            http2URI = new URI(\"http:\/\/\" + http2Server.serverAuthority()\n+                    + \"\/AuthFilterCacheTest\/http2\/\");\n+\n+            \/\/ HTTPS\/2.0\n+            https2Server = HttpTestServer.of(\n+                    new Http2TestServer(\"localhost\", true, 0));\n+            https2Server.addHandler(new TestHandler(), \"\/AuthFilterCacheTest\/https2\/\");\n+            https2Server.start();\n+            https2URI = new URI(\"https:\/\/\" + https2Server.serverAuthority()\n+                    + \"\/AuthFilterCacheTest\/https2\/\");\n+\n+            proxy = DigestEchoServer.createHttpsProxyTunnel(\n+                    DigestEchoServer.HttpAuthSchemeType.NONE);\n+            proxyAddress = proxy.getProxyAddress();\n+            proxySelector = new HttpProxySelector(proxyAddress);\n+            client = newHttpClient(proxySelector, auth);\n+\n+            System.out.println(\"Setup: done\");\n+        } catch (Exception x) {\n+            tearDown();\n+            throw x;\n+        } catch (Error e) {\n+            tearDown();\n+            throw e;\n+        }\n+    }\n+\n+    @AfterClass\n+    public void tearDown() {\n+        proxy = stop(proxy, DigestEchoServer.TunnelingProxy::stop);\n+        http1Server = stop(http1Server, HttpTestServer::stop);\n+        https1Server = stop(https1Server, HttpTestServer::stop);\n+        http2Server = stop(http2Server, HttpTestServer::stop);\n+        https2Server = stop(https2Server, HttpTestServer::stop);\n+        client = null;\n+\n+        System.out.println(\"Teardown: done\");\n+    }\n+\n+    private interface Stoppable<T> {\n+        void stop(T service) throws Exception;\n+    }\n+\n+    static <T> T stop(T service, Stoppable<T> stop) {\n+        try {\n+            if (service != null) stop.stop(service);\n+        } catch (Throwable x) {\n+        }\n+        return null;\n+    }\n+\n+    static class HttpProxySelector extends ProxySelector {\n+        private static final List<Proxy> NO_PROXY = List.of(Proxy.NO_PROXY);\n+        private final List<Proxy> proxyList;\n+\n+        HttpProxySelector(InetSocketAddress proxyAddress) {\n+            proxyList = List.of(new Proxy(Proxy.Type.HTTP, proxyAddress));\n+        }\n+\n+        @Override\n+        public List<Proxy> select(URI uri) {\n+            \/\/ Our proxy only supports tunneling\n+            if (uri.getScheme().equalsIgnoreCase(\"https\")) {\n+                if (uri.getPath().contains(\"\/proxy\/\")) {\n+                    return proxyList;\n+                }\n+            }\n+            return NO_PROXY;\n+        }\n+\n+        @Override\n+        public void connectFailed(URI uri, SocketAddress sa, IOException ioe) {\n+            System.err.println(\"Connection to proxy failed: \" + ioe);\n+            System.err.println(\"Proxy: \" + sa);\n+            System.err.println(\"\\tURI: \" + uri);\n+            ioe.printStackTrace();\n+        }\n+    }\n+\n+    public static class TestHandler implements HttpTestHandler {\n+        static final AtomicLong respCounter = new AtomicLong();\n+\n+        @Override\n+        public void handle(HttpTestExchange t) throws IOException {\n+            var count = respCounter.incrementAndGet();\n+            System.out.println(\"Responses handled: \" + count);\n+            t.getRequestBody().readAllBytes();\n+\n+            if (t.getRequestMethod().equalsIgnoreCase(\"GET\")) {\n+                if (!t.getRequestHeaders().containsKey(\"Authorization\")) {\n+                    t.getResponseHeaders()\n+                            .addHeader(\"WWW-Authenticate\", \"Basic realm=\\\"Earth\\\"\");\n+                    t.sendResponseHeaders(401, 0);\n+                } else {\n+                    byte[] resp = RESPONSE_BODY.getBytes(StandardCharsets.UTF_8);\n+                    t.sendResponseHeaders(200, resp.length);\n+                    try {\n+                        barrier.await();\n+                    } catch (Exception e) {\n+                        throw new IOException(e);\n+                    }\n+                    t.getResponseBody().write(resp);\n+                }\n+            }\n+            t.close();\n+        }\n+    }\n+\n+    void doClient(List<URI> uris) {\n+        assert uris.size() == URI_COUNT;\n+        barrier.reset();\n+        System.out.println(\"Client opening connection to: \" + uris.toString());\n+\n+        List<CompletableFuture<HttpResponse<String>>> cfs = new ArrayList<>();\n+\n+        for (int i = 0; i < REQUEST_COUNT; i++) {\n+            for (URI uri : uris) {\n+                HttpRequest req = HttpRequest.newBuilder()\n+                        .uri(uri)\n+                        .build();\n+                cfs.add(client.sendAsync(req, HttpResponse.BodyHandlers.ofString()));\n+            }\n+        }\n+        CompletableFuture.allOf(cfs.toArray(new CompletableFuture[0])).join();\n+    }\n+\n+    static class MyAuthenticator extends Authenticator {\n+        private int count = 0;\n+\n+        MyAuthenticator() {\n+            super();\n+        }\n+\n+        public PasswordAuthentication getPasswordAuthentication() {\n+            System.out.println(\"Authenticator called: \" + ++count);\n+            return (new PasswordAuthentication(\"user\" + count,\n+                    (\"passwordNotCheckedAnyway\" + count).toCharArray()));\n+        }\n+\n+        public int getCount() {\n+            return count;\n+        }\n+    }\n+\n+    @Test(dataProvider = \"uris\")\n+    public void test(List<URI> uris) throws Exception {\n+        System.out.println(\"Server listening at \" + uris.toString());\n+        doClient(uris);\n+    }\n+}\n","filename":"test\/jdk\/java\/net\/httpclient\/AuthFilterCacheTest.java","additions":298,"deletions":0,"binary":false,"changes":298,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @modules jdk.localedata\n+ * @bug 8303440\n+ * @summary Test parsing \"UTC-XX:XX\" text works correctly\n+ *\/\n+package test.java.time.format;\n+\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.TextStyle;\n+import java.time.temporal.TemporalQueries;\n+import java.util.Locale;\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestUTCParse {\n+\n+    static {\n+        \/\/ Assuming CLDR's SHORT name for \"America\/Los_Angeles\"\n+        \/\/ produces \"UTC\\u212208:00\"\n+        System.setProperty(\"java.locale.providers\", \"CLDR\");\n+    }\n+\n+    @DataProvider\n+    public Object[][] utcZoneIdStrings() {\n+        return new Object[][] {\n+            {\"UTC\"},\n+            {\"UTC+01:30\"},\n+            {\"UTC-01:30\"},\n+        };\n+    }\n+\n+    @Test\n+    public void testUTCShortNameRoundTrip() {\n+        var fmt = DateTimeFormatter.ofPattern(\"z\", Locale.FRANCE);\n+        var zdt = ZonedDateTime.of(2023, 3, 3, 0, 0, 0, 0, ZoneId.of(\"America\/Los_Angeles\"));\n+        var formatted = fmt.format(zdt);\n+        assertEquals(formatted, \"UTC\\u221208:00\");\n+        assertEquals(fmt.parse(formatted).query(TemporalQueries.zoneId()), zdt.getZone());\n+    }\n+\n+    @Test(dataProvider = \"utcZoneIdStrings\")\n+    public void testUTCOffsetRoundTrip(String zidString) {\n+        var fmt = new DateTimeFormatterBuilder()\n+                .appendZoneText(TextStyle.NARROW)\n+                .toFormatter();\n+        var zid = ZoneId.of(zidString);\n+        assertEquals(fmt.parse(zidString).query(TemporalQueries.zoneId()), zid);\n+    }\n+}\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestUTCParse.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8289301\n+ * @summary P11Cipher should not throw OOB exception during padding when \"reqBlockUpdates\" == true\n+ * @library \/test\/lib ..\n+ * @run main\/othervm TestPaddingOOB\n+ *\/\n+\n+import javax.crypto.Cipher;\n+import javax.crypto.KeyGenerator;\n+import java.nio.ByteBuffer;\n+import java.util.Arrays;\n+import java.security.Key;\n+import java.security.Provider;\n+\n+public class TestPaddingOOB extends PKCS11Test {\n+\n+    public static void main(String[] args) throws Exception {\n+        main(new TestPaddingOOB(), args);\n+    }\n+\n+    @Override\n+    public void main(Provider p) throws Exception {\n+        KeyGenerator kg = KeyGenerator.getInstance(\"AES\", p);\n+        Key key = kg.generateKey();\n+\n+        Cipher c = Cipher.getInstance(\"AES\/ECB\/PKCS5Padding\", p);\n+        int bs = c.getBlockSize();\n+\n+        \/\/ Test with arrays\n+        byte[] plainArr = new byte[bs];\n+        Arrays.fill(plainArr, (byte) 'a');\n+        c.init(Cipher.ENCRYPT_MODE, key);\n+        byte[] encArr = new byte[c.getOutputSize(plainArr.length)];\n+        int off = c.update(plainArr, 0, 1, encArr, 0);\n+        off += c.doFinal(plainArr, 1, plainArr.length - 1, encArr, off);\n+        if (off != 2 * bs) {\n+            throw new Exception(\"Unexpected encrypted size (array): \" + off);\n+        }\n+        c.init(Cipher.DECRYPT_MODE, key);\n+        byte[] plainArr2 = new byte[c.getOutputSize(encArr.length)];\n+        off = c.doFinal(encArr, 0, encArr.length, plainArr2, 0);\n+        if (off != bs) {\n+            throw new Exception(\"Unexpected decrypted size (array): \" + off);\n+        }\n+        if (!Arrays.equals(plainArr, Arrays.copyOfRange(plainArr2, 0, off))) {\n+            throw new Exception(\"Invalid decrypted data (array)\");\n+        }\n+\n+        \/\/ Test with buffers\n+        ByteBuffer plainBuf = ByteBuffer.allocate(bs);\n+        Arrays.fill(plainArr, (byte) 'b');\n+        plainBuf.put(plainArr);\n+        plainBuf.flip();\n+        c.init(Cipher.ENCRYPT_MODE, key);\n+        ByteBuffer encBuf = ByteBuffer.allocate(c.getOutputSize(plainBuf.limit()));\n+        plainBuf.limit(1);\n+        off = c.update(plainBuf, encBuf);\n+        plainBuf.limit(bs);\n+        off += c.doFinal(plainBuf, encBuf);\n+        if (off != 2 * bs) {\n+            throw new Exception(\"Unexpected encrypted size (buffer): \" + off);\n+        }\n+        encBuf.flip();\n+        c.init(Cipher.DECRYPT_MODE, key);\n+        ByteBuffer plainBuf2 = ByteBuffer.allocate(c.getOutputSize(encBuf.limit()));\n+        off = c.doFinal(encBuf, plainBuf2);\n+        if (off != bs) {\n+            throw new Exception(\"Unexpected decrypted size (buffer): \" + off);\n+        }\n+        plainBuf2.flip();\n+        plainBuf2.get(plainArr2, 0, off);\n+        if (!Arrays.equals(plainArr, Arrays.copyOfRange(plainArr2, 0, off))) {\n+            throw new Exception(\"Invalid decrypted data (buffer)\");\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestPaddingOOB.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}