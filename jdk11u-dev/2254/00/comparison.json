{"files":[{"patch":"@@ -1,103 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.util.JarUtils;\n-\n-\/**\n- * @test\n- * @bug 8024302 8026037\n- * @summary Test for badKeyUsage warning\n- * @library \/test\/lib ..\/\n- * @ignore until 8026393 is fixed\n- * @build jdk.test.lib.util.JarUtils\n- * @run main BadKeyUsageTest\n- *\/\n-public class BadKeyUsageTest extends Test {\n-\n-    \/**\n-     * The test signs and verifies a jar that contains entries\n-     * whose signer certificate's KeyUsage extension\n-     * doesn't allow code signing (badKeyUsage).\n-     * Warning message is expected.\n-     *\/\n-    public static void main(String[] args) throws Throwable {\n-        BadKeyUsageTest test = new BadKeyUsageTest();\n-        test.start();\n-    }\n-\n-    private void start() throws Throwable {\n-        \/\/ create a jar file that contains one class file\n-        Utils.createFiles(FIRST_FILE);\n-        JarUtils.createJar(UNSIGNED_JARFILE, FIRST_FILE);\n-\n-        \/\/ create a certificate whose signer certificate's KeyUsage extension\n-        \/\/ doesn't allow code signing\n-        createAlias(CA_KEY_ALIAS, \"-ext\", \"bc:c\");\n-        createAlias(KEY_ALIAS);\n-\n-        issueCert(\n-                KEY_ALIAS,\n-                \"-ext\", \"KeyUsage=keyAgreement\",\n-                \"-validity\", Integer.toString(VALIDITY));\n-\n-        \/\/ sign jar\n-        OutputAnalyzer analyzer = jarsigner(\n-                \"-verbose\",\n-                \"-keystore\", KEYSTORE,\n-                \"-storepass\", PASSWORD,\n-                \"-keypass\", PASSWORD,\n-                \"-signedjar\", SIGNED_JARFILE,\n-                UNSIGNED_JARFILE,\n-                KEY_ALIAS);\n-\n-        checkSigning(analyzer, BAD_KEY_USAGE_SIGNING_WARNING);\n-\n-        \/\/ verify signed jar\n-        analyzer = jarsigner(\n-                \"-verify\",\n-                \"-verbose\",\n-                \"-keystore\", KEYSTORE,\n-                \"-storepass\", PASSWORD,\n-                \"-keypass\", PASSWORD,\n-                SIGNED_JARFILE);\n-\n-        checkVerifying(analyzer, 0, BAD_KEY_USAGE_VERIFYING_WARNING);\n-\n-        \/\/ verify signed jar in strict mode\n-        analyzer = jarsigner(\n-                \"-verify\",\n-                \"-verbose\",\n-                \"-strict\",\n-                \"-keystore\", KEYSTORE,\n-                \"-storepass\", PASSWORD,\n-                \"-keypass\", PASSWORD,\n-                SIGNED_JARFILE);\n-\n-        checkVerifying(analyzer, BAD_KEY_USAGE_EXIT_CODE,\n-                BAD_KEY_USAGE_VERIFYING_WARNING);\n-\n-        System.out.println(\"Test passed\");\n-    }\n-\n-}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/warnings\/BadKeyUsageTest.java","additions":0,"deletions":103,"binary":false,"changes":103,"status":"deleted"}]}