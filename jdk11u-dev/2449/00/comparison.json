{"files":[{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import static javax.swing.SwingUtilities.invokeAndWait;\n+\n+\/*\n+ * @test\n+ * @bug 4101444\n+ * @key headful\n+ * @summary Tests JFrame supports EXIT_ON_CLOSE\n+ *\/\n+\n+public class bug4101444 {\n+    private static JFrame jFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            invokeAndWait(() -> {\n+                jFrame = new JFrame(\"bug4101444 - Test EXIT_ON_CLOSE\");\n+                jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                if (jFrame.getDefaultCloseOperation() != JFrame.EXIT_ON_CLOSE) {\n+                    throw new RuntimeException(\"EXIT_ON_CLOSE wasn't set\" +\n+                            \" correctly in setDefaultCloseOperation()...\");\n+                }\n+            });\n+        } finally {\n+            invokeAndWait(() -> {\n+                if (jFrame != null) {\n+                    jFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFrame\/bug4101444.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenuBar;\n+\n+import static javax.swing.SwingUtilities.invokeAndWait;\n+\n+\/*\n+ * @test\n+ * @bug 4208018\n+ * @key headful\n+ * @summary Tests if calling JFrame.dispose() when menubar is set, cause Exception.\n+ *\/\n+\n+public class bug4208018 {\n+    private static JFrame jFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            invokeAndWait(() -> {\n+                jFrame = new JFrame(\"bug4208018 - Test dispose\");\n+                JMenuBar menubar = new JMenuBar();\n+                jFrame.setJMenuBar(menubar);\n+                jFrame.dispose();\n+            });\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Test failed!\" +\n+                    \" Calling dispose on JFrame caused exception\", e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFrame\/bug4208018.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JInternalFrame;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectOutputStream;\n+\n+\/*\n+ * @test\n+ * @bug 4308938\n+ * @summary Tests if Serializing JInternalFrame throws Error\n+ *\/\n+\n+public class bug4308938 {\n+    private static JInternalFrame jif =\n+            new JInternalFrame(\"Serializable\",true,true,true,true);\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            jif.setLocation(100,100);\n+            jif.setSize(100,100);\n+            ByteArrayOutputStream s = new ByteArrayOutputStream();\n+            ObjectOutputStream o = new ObjectOutputStream(s);\n+            o.writeObject(jif);\n+            o.close();\n+            o = new ObjectOutputStream(s);\n+            o.writeObject(jif);\n+            o.close();\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Serializing JInternalFrame throws Error\");\n+        } finally {\n+            if (jif != null) {\n+                jif.dispose();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4308938.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+\n+import static javax.swing.SwingUtilities.invokeAndWait;\n+\n+\/*\n+ * @test\n+ * @bug 4320889\n+ * @key headful\n+ * @summary Tests if default background color is set correctly for JInternalFrame\n+*\/\n+\n+public class bug4320889 {\n+    private static JFrame jFrame;\n+\n+    private static final int FRAME_SIZE = 200;\n+    private static final int JIF_SIZE = 100;\n+\n+    public static void main(String[] args) throws Exception {\n+        invokeAndWait(() -> {\n+            try {\n+                jFrame = new JFrame(\"bug4320889 - JFrame b\/g color\");\n+                JDesktopPane desktop = new JDesktopPane();\n+                jFrame.setSize(FRAME_SIZE, FRAME_SIZE);\n+                jFrame.setContentPane(desktop);\n+\n+                JInternalFrame jif = new JInternalFrame();\n+                jif.setSize(JIF_SIZE, JIF_SIZE);\n+                jif.setLocation(5, 5);\n+                desktop.add(jif);\n+                jif.setVisible(true);\n+                jFrame.setVisible(true);\n+\n+                if ((jif.getBackground()).equals(desktop.getBackground())) {\n+                    throw new RuntimeException(\"Test failed: default background color\" +\n+                            \" is not set correctly for JInternalFrame\");\n+                }\n+            } finally {\n+                if (jFrame != null) {\n+                    jFrame.dispose();\n+                }\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4320889.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JTextField;\n+import java.awt.ComponentOrientation;\n+import java.awt.font.TextAttribute;\n+\n+\/*\n+ * @test\n+ * @bug 4300552\n+ * @summary A JTextComponent's RUN_DIRECTION document property was not being\n+ *          initialized.\n+ *\/\n+\n+public class bug4300552 {\n+    private static JTextField textField;\n+\n+    public static void main(String[] args) throws Exception {\n+        textField = new JTextField(\"\\u0633\\u0644\\u0627\\u0645 Peace\");\n+        testCompOrientation();\n+\n+        textField.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        testCompOrientation();\n+\n+        textField.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        testCompOrientation();\n+    }\n+\n+    private static void testCompOrientation() {\n+        Object runDir = textField.getDocument().getProperty(TextAttribute.RUN_DIRECTION);\n+        if (runDir == null) {\n+            throw new RuntimeException(\"Document's run direction property should be set\");\n+        }\n+\n+        Boolean runDirFlag = (Boolean) runDir;\n+        ComponentOrientation o = textField.getComponentOrientation();\n+        if ((TextAttribute.RUN_DIRECTION_LTR == runDirFlag) != o.isLeftToRight()) {\n+            throw new RuntimeException(\"Document's run direction property(\"\n+                    + (TextAttribute.RUN_DIRECTION_LTR == runDirFlag ? \"LTR\" : \"RTL\")\n+                    + \") doesn't match component orientation (\"\n+                    + (o.isLeftToRight() ? \"LTR\" : \"RTL\") + \")\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTextField\/bug4300552.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+import javax.swing.JCheckBox;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+\/*\n+ * @test\n+ * @bug 4277049\n+ * @summary Tests that ToggleButtonModel doesn't fire extra ChangeEvents\n+ *\/\n+\n+public class bug4277049 implements ItemListener {\n+\n+    public static void main(String[] args) throws Exception {\n+        JCheckBox box = new JCheckBox();\n+        box.setSelected(false);\n+        box.addItemListener(e -> fail());\n+        box.setSelected(false);\n+\n+        if (failed()) {\n+            throw new RuntimeException(\"Failed: extra ChangeEvent was fired\");\n+        }\n+    }\n+\n+    private static boolean failed_flag = false;\n+    synchronized static void fail() {\n+        failed_flag = true;\n+    }\n+    synchronized static boolean failed() { return failed_flag; }\n+\n+    @Override\n+    public void itemStateChanged(ItemEvent e) {\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToggleButton\/bug4277049.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}