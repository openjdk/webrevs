{"files":[{"patch":"@@ -3231,0 +3231,1 @@\n+  if (C->failing()) { return; }\n@@ -4510,0 +4511,1 @@\n+        if (C->failing()) { return; }\n@@ -4659,1 +4661,1 @@\n-#ifdef ASSERT\n+#ifdef ASSERT\n@@ -4664,1 +4666,3 @@\n-    }\n+      C->record_method_not_compilable(\"Bad graph detected in build_loop_late\");\n+      return;\n+    }\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -625,1 +625,3 @@\n-  bool is_range_check_if(IfNode *iff, PhaseIdealLoop *phase, Invariance& invar DEBUG_ONLY(COMMA ProjNode *predicate_proj)) const;\n+  bool is_range_check_if(IfProjNode* if_success_proj, PhaseIdealLoop *phase, Invariance& invar DEBUG_ONLY(COMMA ProjNode *predicate_proj)) const;\n+  \/\/ GLGL bool is_range_check_if(IfProjNode* if_success_proj, PhaseIdealLoop* phase, BasicType bt, Node* iv, Node*& range, Node*& offset,\n+  \/\/ GLGL                        jlong& scale) const;\n@@ -1152,5 +1154,2 @@\n-  BoolNode* rc_predicate(IdealLoopTree *loop, Node* ctrl,\n-                         int scale, Node* offset,\n-                         Node* init, Node* limit, jint stride,\n-                         Node* range, bool upper, bool &overflow,\n-                         bool negate);\n+  BoolNode* rc_predicate(IdealLoopTree *loop, Node* ctrl, int scale, Node* offset,Node* init, Node* limit,\n+                         jint stride, Node* range, bool upper, bool &overflow\/* GLGL, bool negate*\/);\n@@ -1160,1 +1159,1 @@\n-  bool loop_predication_impl_helper(IdealLoopTree *loop, ProjNode* proj, ProjNode *predicate_proj,\n+  bool loop_predication_impl_helper(IdealLoopTree *loop, ProjNode* if_success_proj, ProjNode *predicate_proj,\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}