{"files":[{"patch":"@@ -175,0 +175,3 @@\n+\n+      WARNINGS_ENABLE_ALL=\"-W3\"\n+      DISABLED_WARNINGS=\"4800\"\n@@ -176,0 +179,1 @@\n+\n@@ -178,1 +182,7 @@\n-      CFLAGS_WARNINGS_ARE_ERRORS=\"-errtags -errwarn=%all\"\n+      CFLAGS_WARNINGS_ARE_ERRORS=\"-errwarn=%all\"\n+\n+      WARNINGS_ENABLE_ALL_CFLAGS=\"-v\"\n+      WARNINGS_ENABLE_ALL_CXXFLAGS=\"+w\"\n+\n+      DISABLED_WARNINGS_C=\"\"\n+      DISABLED_WARNINGS_CXX=\"\"\n@@ -180,0 +190,1 @@\n+\n@@ -185,0 +196,1 @@\n+\n@@ -188,0 +200,5 @@\n+\n+      WARNINGS_ENABLE_ALL=\"-Wall -Wextra -Wformat=2\"\n+      WARNINGS_ENABLE_ADDITIONAL_JVM=\"-Wpointer-arith -Wsign-compare -Wunused-function -Wundef -Wunused-value -Woverloaded-virtual -Wreorder\"\n+\n+      DISABLED_WARNINGS=\"unused-parameter unused\"\n@@ -189,0 +206,1 @@\n+\n@@ -192,0 +210,4 @@\n+\n+      # Possibly a better subset than \"all\" is \"lan:trx:ret:zea:cmp:ret\"\n+      WARNINGS_ENABLE_ALL=\"-qinfo=all -qformat=all\"\n+      DISABLED_WARNINGS=\"\"\n@@ -197,0 +219,3 @@\n+  AC_SUBST(DISABLED_WARNINGS)\n+  AC_SUBST(DISABLED_WARNINGS_C)\n+  AC_SUBST(DISABLED_WARNINGS_CXX)\n@@ -530,2 +555,5 @@\n-    TOOLCHAIN_CFLAGS_JDK=\"-mt\"\n-    TOOLCHAIN_CFLAGS_JDK_CONLY=\"-xCC -Xa -v -W0,-noglobal\" # C only\n+    TOOLCHAIN_FLAGS=\"-errtags -errfmt\"\n+    TOOLCHAIN_CFLAGS=\"-errshort=tags\"\n+\n+    TOOLCHAIN_CFLAGS_JDK=\"-mt $TOOLCHAIN_FLAGS\"\n+    TOOLCHAIN_CFLAGS_JDK_CONLY=\"-xc99=%none -xCC -Xa -W0,-noglobal $TOOLCHAIN_CFLAGS\" # C only\n@@ -534,1 +562,1 @@\n-        -library=stlport4 -mt -features=no%except\"\n+        -library=stlport4 -mt -features=no%except $TOOLCHAIN_FLAGS\"\n@@ -542,0 +570,1 @@\n+    # Suggested additions: -qsrcmsg to get improved error reporting\n@@ -553,9 +582,0 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n-    # COMMON to gcc and clang\n-    WARNING_CFLAGS_JVM=\"-Wpointer-arith -Wsign-compare -Wunused-function\"\n-    if ! HOTSPOT_CHECK_JVM_VARIANT(zero); then\n-      # Non-zero builds have stricter warnings\n-      WARNING_CFLAGS_JVM=\"$WARNING_CFLAGS_JVM -Wundef -Wformat=2\"\n-    fi\n-\n-  fi\n@@ -563,2 +583,2 @@\n-    WARNING_CFLAGS_JDK=\"-Wall -Wextra -Wno-unused -Wno-unused-parameter -Wformat=2\"\n-    WARNING_CFLAGS_JVM=\"$WARNING_CFLAGS_JVM -Wunused-value -Woverloaded-virtual\"\n+    WARNING_CFLAGS_JDK=\"$WARNINGS_ENABLE_ALL\"\n+    WARNING_CFLAGS_JVM=\"$WARNINGS_ENABLE_ALL $WARNINGS_ENABLE_ADDITIONAL_JVM\"\n@@ -566,4 +586,0 @@\n-    if ! HOTSPOT_CHECK_JVM_VARIANT(zero); then\n-      # Non-zero builds have stricter warnings\n-      WARNING_CFLAGS_JVM=\"$WARNING_CFLAGS_JVM -Wreturn-type\"\n-    fi\n@@ -571,1 +587,0 @@\n-    WARNING_CFLAGS_JVM=\"$WARNING_CFLAGS_JVM -Wno-deprecated\"\n@@ -573,2 +588,3 @@\n-      WARNING_CFLAGS_JVM=\"$WARNING_CFLAGS_JVM -Wno-sometimes-uninitialized\"\n-      WARNING_CFLAGS_JDK=\"-Wall -Wextra -Wno-unused -Wno-unused-parameter -Wformat=2\"\n+      WARNING_CFLAGS_JDK=\"$WARNINGS_ENABLE_ALL\"\n+    else\n+      WARNING_CFLAGS_JDK=\"\" # currently left empty\n@@ -576,0 +592,2 @@\n+    WARNING_CFLAGS_JVM=\"$WARNINGS_ENABLE_ALL $WARNINGS_ENABLE_ADDITIONAL_JVM\"\n+\n@@ -577,3 +595,3 @@\n-    WARNING_CFLAGS_JDK_CONLY=\"-errshort=tags\"\n-    WARNING_CFLAGS_JDK_CXXONLY=\"+w\"\n-    WARNING_CFLAGS_JDK=\"-errtags=yes -errfmt\"\n+    WARNING_CFLAGS_JDK_CONLY=\"$WARNINGS_ENABLE_ALL_CFLAGS\"\n+    WARNING_CFLAGS_JDK_CXXONLY=\"$WARNINGS_ENABLE_ALL_CXXFLAGS\"\n+    WARNING_CFLAGS_JVM=\"\" # currently left empty\n@@ -581,3 +599,3 @@\n-    WARNING_CFLAGS=\"-W3\"\n-    WARNING_CFLAGS_JDK=\"-wd4800\"\n-    WARNING_CFLAGS_JVM=\"-wd4800\"\n+    WARNING_CFLAGS=\"$WARNINGS_ENABLE_ALL\"\n+  elif test \"x$TOOLCHAIN_TYPE\" = xxlc; then\n+    WARNING_CFLAGS=\"\"  # currently left empty\n","filename":"make\/autoconf\/flags-cflags.m4","additions":46,"deletions":28,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -140,0 +140,8 @@\n+  # Setup warning flags\n+  if test \"x$TOOLCHAIN_TYPE\" = xsolstudio; then\n+    LDFLAGS_WARNINGS_ARE_ERRORS=\"-Wl,-z,fatal-warnings\"\n+  else\n+    LDFLAGS_WARNINGS_ARE_ERRORS=\"\"\n+  fi\n+  AC_SUBST(LDFLAGS_WARNINGS_ARE_ERRORS)\n+\n","filename":"make\/autoconf\/flags-ldflags.m4","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -472,0 +472,4 @@\n+LDFLAGS_WARNINGS_ARE_ERRORS:=@LDFLAGS_WARNINGS_ARE_ERRORS@\n+DISABLED_WARNINGS := @DISABLED_WARNINGS@\n+DISABLED_WARNINGS_C := @DISABLED_WARNINGS_C@\n+DISABLED_WARNINGS_CXX := @DISABLED_WARNINGS_CXX@\n","filename":"make\/autoconf\/spec.gmk.in","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -750,0 +750,2 @@\n+        $$(DISABLED_WARNINGS) \\\n+        $$(DISABLED_WARNINGS_C) \\\n@@ -753,0 +755,2 @@\n+        $$(DISABLED_WARNINGS) \\\n+        $$(DISABLED_WARNINGS_CXX) \\\n@@ -770,0 +774,1 @@\n+    $1_EXTRA_LDFLAGS += $(LDFLAGS_WARNINGS_ARE_ERRORS)\n@@ -978,2 +983,2 @@\n-  $1_EXTRA_LDFLAGS := $$($1_LDFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LDFLAGS_$(OPENJDK_TARGET_OS))\n-  $1_EXTRA_LIBS := $$($1_LIBS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LIBS_$(OPENJDK_TARGET_OS))\n+  $1_EXTRA_LDFLAGS += $$($1_LDFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LDFLAGS_$(OPENJDK_TARGET_OS))\n+  $1_EXTRA_LIBS += $$($1_LIBS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LIBS_$(OPENJDK_TARGET_OS))\n","filename":"make\/common\/NativeCompilation.gmk","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -80,5 +80,8 @@\n-    DISABLED_WARNINGS_gcc := undef stringop-overflow, \\\n-    DISABLED_WARNINGS_clang := undef switch format-nonliteral \\\n-        tautological-undefined-compare $(BUILD_LIBJVM_DISABLED_WARNINGS_clang), \\\n-    DISABLED_WARNINGS_solstudio := identexpected, \\\n-    DISABLED_WARNINGS_microsoft := 4146, \\\n+    DISABLED_WARNINGS_gcc := $(DISABLED_WARNINGS_gcc) \\\n+        undef, \\\n+    DISABLED_WARNINGS_clang := $(DISABLED_WARNINGS_clang) \\\n+        undef switch format-nonliteral tautological-undefined-compare, \\\n+    DISABLED_WARNINGS_solstudio := $(DISABLED_WARNINGS_solstudio) \\\n+        identexpected, \\\n+    DISABLED_WARNINGS_microsoft := $(DISABLED_WARNINGS_microsoft) \\\n+        4146, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -84,0 +84,19 @@\n+################################################################################\n+# Disabled warnings\n+\n+DISABLED_WARNINGS_gcc := extra all\n+ifeq ($(call check-jvm-feature, zero), true)\n+  DISABLED_WARNINGS_gcc += return-type\n+endif\n+\n+DISABLED_WARNINGS_clang := extra all tautological-compare deprecated-declarations\n+\n+DISABLED_WARNINGS_solstudio :=\n+\n+DISABLED_WARNINGS_xlc := 1540-0216 1540-0198 1540-1090 1540-1639 1540-1088 \\\n+    1500-010\n+\n+DISABLED_WARNINGS_microsoft :=\n+\n+\n+\n@@ -120,1 +139,1 @@\n-    DISABLED_WARNINGS_solstudio := SEC_ARR_OUTSIDE_BOUND_READ \\\n+    DISABLED_WARNINGS_solstudio += SEC_ARR_OUTSIDE_BOUND_READ \\\n@@ -165,1 +184,2 @@\n-    DISABLED_WARNINGS_clang := tautological-compare, \\\n+    DISABLED_WARNINGS_gcc := $(DISABLED_WARNINGS_gcc), \\\n+    DISABLED_WARNINGS_clang := $(DISABLED_WARNINGS_clang), \\\n@@ -167,2 +187,1 @@\n-    DISABLED_WARNINGS_xlc := 1540-0216 1540-0198 1540-1090 1540-1639 \\\n-        1540-1088 1500-010, \\\n+    DISABLED_WARNINGS_xlc := $(DISABLED_WARNINGS_xlc), \\\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"}]}