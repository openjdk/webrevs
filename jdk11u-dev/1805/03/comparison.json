{"files":[{"patch":"@@ -184,1 +184,1 @@\n-                if (configuration.showModules) {\n+                if (configuration.showModules()) {\n@@ -246,1 +246,1 @@\n-        if (configuration.showModules) {\n+        if (configuration.showModules()) {\n@@ -436,1 +436,1 @@\n-        if (configuration.showModules) {\n+        if (configuration.showModules()) {\n@@ -440,1 +440,1 @@\n-        if (!configuration.packages.isEmpty()) {\n+        if (!configuration.packages().isEmpty()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractIndexWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        this.nodepr = configuration.nodeprecated;\n+        this.nodepr = configuration.nodeprecated();\n@@ -89,1 +89,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -421,1 +421,1 @@\n-            Table useTable = new Table(configuration.htmlVersion, HtmlStyle.useSummary)\n+            Table useTable = new Table(configuration.htmlVersion(), HtmlStyle.useSummary)\n@@ -460,1 +460,1 @@\n-        if (configuration.serialwarn) {\n+        if (configuration.serialwarn()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        modules = configuration.modulePackages;\n+        modules = configuration.modulePackages();\n@@ -145,2 +145,2 @@\n-        printHtmlDocument(configuration.metakeywords.getOverviewMetaKeywords(title,\n-                configuration.doctitle), includeScript, body);\n+        printHtmlDocument(configuration.metakeywords().getOverviewMetaKeywords(title,\n+                configuration.doctitle()), includeScript, body);\n@@ -174,2 +174,2 @@\n-        printHtmlDocument(configuration.metakeywords.getOverviewMetaKeywords(title,\n-                configuration.doctitle), includeScript, body);\n+        printHtmlDocument(configuration.metakeywords().getOverviewMetaKeywords(title,\n+                configuration.doctitle()), includeScript, body);\n@@ -192,1 +192,1 @@\n-        addIndexContents(configuration.modules, \"doclet.Module_Summary\",\n+        addIndexContents(configuration.modules(), \"doclet.Module_Summary\",\n@@ -263,2 +263,2 @@\n-        if (configuration.doctitle.length() > 0) {\n-            Content title = new RawHtml(configuration.doctitle);\n+        if (configuration.doctitle().length() > 0) {\n+            Content title = new RawHtml(configuration.doctitle());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractModuleIndexWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        packages = configuration.packages;\n+        packages = configuration.packages();\n@@ -130,2 +130,2 @@\n-        printHtmlDocument(configuration.metakeywords.getOverviewMetaKeywords(title,\n-                configuration.doctitle), includeScript, body);\n+        printHtmlDocument(configuration.metakeywords().getOverviewMetaKeywords(title,\n+                configuration.doctitle()), includeScript, body);\n@@ -164,1 +164,1 @@\n-            if (configuration.showModules  && configuration.modules.size() > 1) {\n+            if (configuration.showModules()  && configuration.modules().size() > 1) {\n@@ -179,2 +179,2 @@\n-        if (configuration.doctitle.length() > 0) {\n-            Content title = new RawHtml(configuration.doctitle);\n+        if (configuration.doctitle().length() > 0) {\n+            Content title = new RawHtml(configuration.doctitle());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractPackageIndexWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-        if (configuration.frames) {\n+        if (configuration.frames()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesFrameWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.typeSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.typeSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.packagesSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.packagesSummary)\n@@ -135,2 +135,2 @@\n-        for (PackageElement pkg : configuration.packages) {\n-            if (!(configuration.nodeprecated && utils.isDeprecated(pkg))) {\n+        for (PackageElement pkg : configuration.packages()) {\n+            if (!(configuration.nodeprecated() && utils.isDeprecated(pkg))) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllPackagesIndexWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -219,1 +219,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeFieldWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -240,1 +240,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeRequiredMemberWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,2 +105,2 @@\n-        if (configuration.showModules) {\n-            ModuleElement mdle = configuration.docEnv.getElementUtils().getModuleOf(annotationType);\n+        if (configuration.showModules()) {\n+            ModuleElement mdle = configuration.docEnv().getElementUtils().getModuleOf(annotationType);\n@@ -167,1 +167,1 @@\n-        printHtmlDocument(configuration.metakeywords.getMetaKeywords(annotationType),\n+        printHtmlDocument(configuration.metakeywords().getMetaKeywords(annotationType),\n@@ -201,1 +201,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -217,1 +217,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n@@ -229,1 +229,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeWriterImpl.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -200,2 +200,2 @@\n-            if (!(configuration.nodeprecated &&\n-                  configuration.utils.isDeprecated(configuration.utils.containingPackage(aClass))))\n+            if (!(configuration.nodeprecated() &&\n+                  configuration.utils().isDeprecated(configuration.utils().containingPackage(aClass))))\n@@ -204,1 +204,1 @@\n-        for (PackageElement pkg : configuration.packages) {\n+        for (PackageElement pkg : configuration.packages()) {\n@@ -207,1 +207,1 @@\n-            if (!(configuration.nodeprecated && configuration.utils.isDeprecated(pkg)))\n+            if (!(configuration.nodeprecated() && configuration.utils().isDeprecated(pkg)))\n@@ -287,1 +287,1 @@\n-        if (configuration.packages.size() > 1) {\n+        if (configuration.packages().size() > 1) {\n@@ -305,1 +305,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.useSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.useSummary)\n@@ -333,1 +333,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.useSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.useSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-        if (configuration.showModules) {\n-            ModuleElement mdle = configuration.docEnv.getElementUtils().getModuleOf(typeElement);\n+        if (configuration.showModules()) {\n+            ModuleElement mdle = configuration.docEnv().getElementUtils().getModuleOf(typeElement);\n@@ -182,1 +182,1 @@\n-        printHtmlDocument(configuration.metakeywords.getMetaKeywords(typeElement),\n+        printHtmlDocument(configuration.metakeywords().getMetaKeywords(typeElement),\n@@ -218,1 +218,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -266,1 +266,1 @@\n-        if(!configuration.nocomment) {\n+        if(!configuration.nocomment()) {\n@@ -279,1 +279,1 @@\n-        if(!configuration.nocomment) {\n+        if(!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-            PackageElement abbrevPkg = configuration.workArounds.getAbbreviatedPackageElement(pkg);\n+            PackageElement abbrevPkg = configuration.workArounds().getAbbreviatedPackageElement(pkg);\n@@ -263,1 +263,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.constantsSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.constantsSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -266,1 +266,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -408,1 +408,1 @@\n-            Table table = new Table(configuration.htmlVersion, HtmlStyle.deprecatedSummary)\n+            Table table = new Table(configuration.htmlVersion(), HtmlStyle.deprecatedSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                location = configuration.utils.getLocationForModule(mdle);\n+                location = configuration.utils().getLocationForModule(mdle);\n@@ -86,1 +86,1 @@\n-                location = configuration.utils.getLocationForPackage(pkg);\n+                location = configuration.utils().getLocationForPackage(pkg);\n@@ -152,1 +152,1 @@\n-                if (configuration.copydocfilesubdirs\n+                if (configuration.copydocfilesubdirs()\n@@ -162,1 +162,1 @@\n-        Utils utils = configuration.utils;\n+        Utils utils = configuration.utils();\n@@ -263,1 +263,1 @@\n-        List<? extends DocTree> preamble = configuration.utils.getPreamble(element);\n+        List<? extends DocTree> preamble = configuration.utils().getPreamble(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandlerImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -211,1 +211,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -216,1 +216,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n@@ -251,1 +251,1 @@\n-        if (configuration.summarizeOverriddenMethods) {\n+        if (configuration.summarizeOverriddenMethods()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        noOfPackages = configuration.packages.size();\n+        noOfPackages = configuration.packages().size();\n@@ -115,2 +115,2 @@\n-        if (configuration.windowtitle.length() > 0) {\n-            printFramesDocument(configuration.windowtitle, body);\n+        if (configuration.windowtitle().length() > 0) {\n+            printFramesDocument(configuration.windowtitle(), body);\n@@ -131,1 +131,1 @@\n-        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion);\n+        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion());\n@@ -133,2 +133,2 @@\n-        Head head = new Head(path, configuration.htmlVersion, configuration.docletVersion)\n-                .setTimestamp(!configuration.notimestamp, false)\n+        Head head = new Head(path, configuration.htmlVersion(), configuration.docletVersion)\n+                .setTimestamp(!configuration.notimestamp(), false)\n@@ -136,1 +136,1 @@\n-                .setCharset(configuration.charset)\n+                .setCharset(configuration.charset())\n@@ -156,1 +156,1 @@\n-        if (configuration.showModules && configuration.modules.size() > 1) {\n+        if (configuration.showModules() && configuration.modules().size() > 1) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FrameOutputWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-        if (configuration.createoverview) {\n+        if (configuration.createoverview()) {\n@@ -146,1 +146,1 @@\n-            String overviewKey = configuration.showModules\n+            String overviewKey = configuration.showModules()\n@@ -150,1 +150,1 @@\n-                    DocPaths.overviewSummary(configuration.frames),\n+                    DocPaths.overviewSummary(configuration.frames()),\n@@ -163,1 +163,1 @@\n-        if (configuration.showModules) {\n+        if (configuration.showModules()) {\n@@ -292,1 +292,1 @@\n-        if (configuration.classuse) {\n+        if (configuration.classuse()) {\n@@ -309,1 +309,1 @@\n-        if (configuration.createtree) {\n+        if (configuration.createtree()) {\n@@ -333,1 +333,1 @@\n-        if (!(configuration.nodeprecatedlist || configuration.nodeprecated)) {\n+        if (!(configuration.nodeprecatedlist() || configuration.nodeprecated())) {\n@@ -352,1 +352,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -354,1 +354,1 @@\n-            if (configuration.splitindex) {\n+            if (configuration.splitindex()) {\n@@ -377,1 +377,1 @@\n-        if (configuration.frames) {\n+        if (configuration.frames()) {\n@@ -401,1 +401,1 @@\n-                links.createLink(DocPaths.AllClasses(configuration.frames),\n+                links.createLink(DocPaths.AllClasses(configuration.frames()),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    public String header = \"\";\n+    private String header = \"\";\n@@ -93,1 +93,1 @@\n-    public String packagesheader = \"\";\n+    private String packagesheader = \"\";\n@@ -98,1 +98,1 @@\n-    public String footer = \"\";\n+    private String footer = \"\";\n@@ -103,1 +103,1 @@\n-    public String doctitle = \"\";\n+    private String doctitle = \"\";\n@@ -108,1 +108,1 @@\n-    public String windowtitle = \"\";\n+    private String windowtitle = \"\";\n@@ -113,1 +113,1 @@\n-    public String top = \"\";\n+    private String top = \"\";\n@@ -118,1 +118,1 @@\n-    public String bottom = \"\";\n+    private String bottom = \"\";\n@@ -123,1 +123,6 @@\n-    public String helpfile = \"\";\n+    private String helpfile = \"\";\n+\n+    \/**\n+     * Argument for command-line option \"--legal-notices\".\n+     *\/\n+    private String legalnotices = \"\";\n@@ -128,1 +133,1 @@\n-    public String stylesheetfile = \"\";\n+    private String stylesheetfile = \"\";\n@@ -133,1 +138,1 @@\n-    public List<String> additionalStylesheets = new ArrayList<>();\n+    private List<String> additionalStylesheets = new ArrayList<>();\n@@ -138,1 +143,1 @@\n-    public String docrootparent = \"\";\n+    private String docrootparent = \"\";\n@@ -143,1 +148,1 @@\n-    public boolean nohelp = false;\n+    private boolean nohelp = false;\n@@ -149,1 +154,1 @@\n-    public boolean splitindex = false;\n+    private boolean splitindex = false;\n@@ -154,1 +159,1 @@\n-    public boolean createindex = true;\n+    private boolean createindex = true;\n@@ -159,1 +164,1 @@\n-    public boolean classuse = false;\n+    private boolean classuse = false;\n@@ -164,1 +169,1 @@\n-    public boolean createtree = true;\n+    private boolean createtree = true;\n@@ -169,1 +174,1 @@\n-    public String charset = null;\n+    private String charset = null;\n@@ -175,1 +180,1 @@\n-    public boolean nodeprecatedlist = false;\n+    private boolean nodeprecatedlist = false;\n@@ -180,1 +185,1 @@\n-    public boolean nonavbar = false;\n+    private boolean nonavbar = false;\n@@ -191,1 +196,1 @@\n-    public String overviewpath = null;\n+    private String overviewpath = null;\n@@ -197,1 +202,1 @@\n-    public boolean createoverview = false;\n+    private boolean createoverview = false;\n@@ -203,1 +208,1 @@\n-    public boolean frames = false;\n+    private boolean frames = false;\n@@ -209,1 +214,1 @@\n-    public HtmlVersion htmlVersion = null;\n+    private HtmlVersion htmlVersion = null;\n@@ -214,1 +219,1 @@\n-    public Map<Doclet.Option, String> doclintOpts = new LinkedHashMap<>();\n+    private Map<Doclet.Option, String> doclintOpts = new LinkedHashMap<>();\n@@ -227,1 +232,1 @@\n-    public TypeElement currentTypeElement = null;  \/\/ Set this TypeElement in the ClassWriter.\n+    protected TypeElement currentTypeElement = null;  \/\/ Set this TypeElement in the ClassWriter.\n@@ -659,0 +664,7 @@\n+            new Option(resources, \"--legal-notices\", 1) {\n+                @Override\n+                public boolean process(String opt,  List<String> args) {\n+                    legalnotices = args.get(0);\n+                    return true;\n+                }\n+            },\n@@ -873,0 +885,181 @@\n+\n+    \/**\n+     * Argument for command line option \"-header\".\n+     *\/\n+    public String header() {\n+        return header;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-packagesheader\".\n+     *\/\n+    public String packagesheader() {\n+        return packagesheader;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-footer\".\n+     *\/\n+    public String footer() {\n+        return footer;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-doctitle\".\n+     *\/\n+    public String doctitle() {\n+        return doctitle;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-windowtitle\".\n+     *\/\n+    public String windowtitle() {\n+        return windowtitle;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-top\".\n+     *\/\n+    public String top() {\n+        return top;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-bottom\".\n+     *\/\n+    public String bottom() {\n+        return bottom;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-helpfile\".\n+     *\/\n+    public String helpfile() {\n+        return helpfile;\n+    }\n+\n+    \/**\n+     * Argument for command-line option \"--legal-notices\".\n+     *\/\n+    public String legalnotices() {\n+        return legalnotices;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-stylesheetfile\".\n+     *\/\n+    public String stylesheetfile() {\n+        return stylesheetfile;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"--add-stylesheet\".\n+     *\/\n+    public List<String> additionalStylesheets() {\n+        return additionalStylesheets;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-Xdocrootparent\".\n+     *\/\n+    public String docrootparent() {\n+        return docrootparent;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nohelp\" is used. Default value is false.\n+     *\/\n+    public boolean nohelp() {\n+        return nohelp;\n+    }\n+\n+    \/**\n+     * True if command line option \"-splitindex\" is used. Default value is\n+     * false.\n+     *\/\n+    public boolean splitindex() {\n+        return splitindex;\n+    }\n+\n+    \/**\n+     * False if command line option \"-noindex\" is used. Default value is true.\n+     *\/\n+    public boolean createindex() {\n+        return createindex;\n+    }\n+\n+    \/**\n+     * True if command line option \"-use\" is used. Default value is false.\n+     *\/\n+    public boolean classuse() {\n+        return classuse;\n+    }\n+\n+    \/**\n+     * False if command line option \"-notree\" is used. Default value is true.\n+     *\/\n+    public boolean createtree() {\n+        return createtree;\n+    }\n+\n+    \/**\n+     * The META charset tag used for cross-platform viewing.\n+     *\/\n+    public String charset() {\n+        return charset;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nodeprecated\" is used. Default value is\n+     * false.\n+     *\/\n+    public boolean nodeprecatedlist() {\n+        return nodeprecatedlist;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nonavbar\" is used. Default value is false.\n+     *\/\n+    public boolean nonavbar() {\n+        return nonavbar;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nooverview\" is used. Default value is\n+     * false\n+     *\/\n+    public boolean nooverview() {\n+        return nooverview;\n+    }\n+\n+    \/**\n+     * The overview path specified with \"-overview\" flag.\n+     *\/\n+    public String overviewpath() {\n+        return overviewpath;\n+    }\n+\n+    \/**\n+     * This is true if option \"-overview\" is used or option \"-overview\" is not\n+     * used and number of packages is more than one.\n+     *\/\n+    public boolean createoverview() {\n+        return createoverview;\n+    }\n+\n+    \/**\n+     * Specifies whether or not frames should be generated.\n+     * Defaults to false; can be set to true by --frames; can be set to false by --no-frames; last one wins.\n+     *\/\n+    public boolean frames() {\n+        return frames;\n+    }\n+\n+    \/**\n+     * This is the HTML version of the generated pages.\n+     * The default value is determined later.\n+     *\/\n+    public HtmlVersion htmlVersion() {\n+        return htmlVersion;\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":218,"deletions":25,"binary":false,"changes":243,"status":"modified"},{"patch":"@@ -28,0 +28,7 @@\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.Writer;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.InvalidPathException;\n+import java.nio.file.Path;\n@@ -116,1 +123,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -127,4 +134,4 @@\n-        boolean nodeprecated = configuration.nodeprecated;\n-        performCopy(configuration.helpfile);\n-        performCopy(configuration.stylesheetfile);\n-        for (String stylesheet : configuration.additionalStylesheets) {\n+        boolean nodeprecated = configuration.nodeprecated();\n+        performCopy(configuration.helpfile());\n+        performCopy(configuration.stylesheetfile());\n+        for (String stylesheet : configuration.additionalStylesheets()) {\n@@ -134,1 +141,1 @@\n-        if (configuration.classuse) {\n+        if (configuration.classuse()) {\n@@ -139,1 +146,1 @@\n-        if (configuration.createtree) {\n+        if (configuration.createtree()) {\n@@ -142,1 +149,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -144,1 +151,1 @@\n-            if (configuration.splitindex) {\n+            if (configuration.splitindex()) {\n@@ -151,1 +158,1 @@\n-            if (!configuration.packages.isEmpty()) {\n+            if (!configuration.packages().isEmpty()) {\n@@ -156,1 +163,1 @@\n-        if (!(configuration.nodeprecatedlist || nodeprecated)) {\n+        if (!(configuration.nodeprecatedlist() || nodeprecated)) {\n@@ -163,1 +170,1 @@\n-        if (configuration.frames) {\n+        if (configuration.frames()) {\n@@ -167,2 +174,2 @@\n-        if (configuration.createoverview) {\n-            if (configuration.showModules) {\n+        if (configuration.createoverview()) {\n+            if (configuration.showModules()) {\n@@ -175,2 +182,2 @@\n-        if (!configuration.frames) {\n-            if (configuration.createoverview) {\n+        if (!configuration.frames()) {\n+            if (configuration.createoverview()) {\n@@ -183,1 +190,1 @@\n-        if (configuration.helpfile.isEmpty() && !configuration.nohelp) {\n+        if (configuration.helpfile().isEmpty() && !configuration.nohelp()) {\n@@ -189,1 +196,1 @@\n-        if (configuration.stylesheetfile.length() == 0) {\n+        if (configuration.stylesheetfile().length() == 0) {\n@@ -195,1 +202,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -209,0 +216,2 @@\n+\n+        copyLegalFiles(configuration.createindex());\n@@ -231,0 +240,40 @@\n+    private void copyLegalFiles(boolean includeJQuery) throws DocletException {\n+        Path legalNoticesDir;\n+        String legalNotices = configuration.legalnotices();\n+        switch (legalNotices) {\n+            case \"\":\n+            case \"default\" :\n+                Path javaHome = Path.of(System.getProperty(\"java.home\"));\n+                legalNoticesDir = javaHome.resolve(\"legal\").resolve(getClass().getModule().getName());\n+                break;\n+            case \"none\":\n+                return;\n+            default:\n+                try {\n+                    legalNoticesDir = Path.of(legalNotices);\n+                } catch (InvalidPathException e) {\n+                    messages.error(\"doclet.Error_invalid_path_for_legal_notices\",\n+                            legalNotices, e.getMessage());\n+                    return;\n+                }\n+        }\n+\n+        if (Files.exists(legalNoticesDir)) {\n+            try (DirectoryStream<Path> ds = Files.newDirectoryStream(legalNoticesDir)) {\n+                for (Path entry: ds) {\n+                    if (!Files.isRegularFile(entry)) {\n+                        continue;\n+                    }\n+                    if (entry.getFileName().toString().startsWith(\"jquery\") && !includeJQuery) {\n+                        continue;\n+                    }\n+                    DocPath filePath = DocPaths.LEGAL.resolve(entry.getFileName().toString());\n+                    DocFile df = DocFile.createFileForOutput(configuration, filePath);\n+                    df.copyFile(DocFile.createFileForInput(configuration, entry));\n+                }\n+            } catch (IOException e) {\n+                messages.error(\"doclet.Error_copying_legal_notices\", e);\n+            }\n+        }\n+    }\n+\n@@ -261,2 +310,2 @@\n-        if (configuration.showModules) {\n-            if (configuration.frames  && configuration.modules.size() > 1) {\n+        if (configuration.showModules()) {\n+            if (configuration.frames()  && configuration.modules().size() > 1) {\n@@ -265,1 +314,1 @@\n-            List<ModuleElement> mdles = new ArrayList<>(configuration.modulePackages.keySet());\n+            List<ModuleElement> mdles = new ArrayList<>(configuration.modulePackages().keySet());\n@@ -267,1 +316,1 @@\n-                if (configuration.frames && configuration.modules.size() > 1) {\n+                if (configuration.frames() && configuration.modules().size() > 1) {\n@@ -283,2 +332,2 @@\n-        Set<PackageElement> packages = configuration.packages;\n-        if (packages.size() > 1 && configuration.frames) {\n+        Set<PackageElement> packages = configuration.packages();\n+        if (packages.size() > 1 && configuration.frames()) {\n@@ -292,2 +341,2 @@\n-            if (!(configuration.nodeprecated && utils.isDeprecated(pkg))) {\n-                if (configuration.frames) {\n+            if (!(configuration.nodeprecated() && utils.isDeprecated(pkg))) {\n+                if (configuration.frames()) {\n@@ -299,2 +348,2 @@\n-                if (configuration.createtree) {\n-                    PackageTreeWriter.generate(configuration, pkg, configuration.nodeprecated);\n+                if (configuration.createtree()) {\n+                    PackageTreeWriter.generate(configuration, pkg, configuration.nodeprecated());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":78,"deletions":29,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -198,2 +198,2 @@\n-        this.links = new Links(path, configuration.htmlVersion);\n-        this.utils = configuration.utils;\n+        this.links = new Links(path, configuration.htmlVersion());\n+        this.utils = configuration.utils();\n@@ -245,1 +245,1 @@\n-            if (configuration.docrootparent.length() > 0 && htmlstr.startsWith(\"\/..\", prevEnd)) {\n+            if (configuration.docrootparent().length() > 0 && htmlstr.startsWith(\"\/..\", prevEnd)) {\n@@ -247,1 +247,1 @@\n-                buf.append(configuration.docrootparent);\n+                buf.append(configuration.docrootparent());\n@@ -325,1 +325,1 @@\n-        if (configuration.nocomment) {\n+        if (configuration.nocomment()) {\n@@ -333,2 +333,2 @@\n-        TagletWriter.genTagOutput(configuration.tagletManager, e,\n-            configuration.tagletManager.getBlockTaglets(e),\n+        TagletWriter.genTagOutput(configuration.tagletManager(), e,\n+            configuration.tagletManager().getBlockTaglets(e),\n@@ -349,2 +349,2 @@\n-        TagletWriter.genTagOutput(configuration.tagletManager, field,\n-                configuration.tagletManager.getBlockTaglets(field),\n+        TagletWriter.genTagOutput(configuration.tagletManager(), field,\n+                configuration.tagletManager().getBlockTaglets(field),\n@@ -418,1 +418,1 @@\n-        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion);\n+        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion());\n@@ -420,2 +420,2 @@\n-        Head head = new Head(path, configuration.htmlVersion, configuration.docletVersion)\n-                .setTimestamp(!configuration.notimestamp)\n+        Head head = new Head(path, configuration.htmlVersion(), configuration.docletVersion)\n+                .setTimestamp(!configuration.notimestamp())\n@@ -423,1 +423,1 @@\n-                .setCharset(configuration.charset)\n+                .setCharset(configuration.charset())\n@@ -426,2 +426,2 @@\n-                .setUseModuleDirectories(configuration.useModuleDirectories)\n-                .setIndex(configuration.createindex, mainBodyScript);\n+                .setUseModuleDirectories(configuration.useModuleDirectories())\n+                .setIndex(configuration.createindex(), mainBodyScript);\n@@ -441,2 +441,2 @@\n-        if (configuration.windowtitle.length() > 0) {\n-            title += \" (\" + configuration.windowtitle  + \")\";\n+        if (configuration.windowtitle().length() > 0) {\n+            title += \" (\" + configuration.windowtitle()  + \")\";\n@@ -456,1 +456,1 @@\n-            content = replaceDocRootDir(configuration.header);\n+            content = replaceDocRootDir(configuration.header());\n@@ -458,2 +458,2 @@\n-            if (configuration.footer.length() != 0) {\n-                content = replaceDocRootDir(configuration.footer);\n+            if (configuration.footer().length() != 0) {\n+                content = replaceDocRootDir(configuration.footer());\n@@ -461,1 +461,1 @@\n-                content = replaceDocRootDir(configuration.header);\n+                content = replaceDocRootDir(configuration.header());\n@@ -474,1 +474,1 @@\n-        Content top = new RawHtml(replaceDocRootDir(configuration.top));\n+        Content top = new RawHtml(replaceDocRootDir(configuration.top()));\n@@ -484,1 +484,1 @@\n-        Content bottom = new RawHtml(replaceDocRootDir(configuration.bottom));\n+        Content bottom = new RawHtml(replaceDocRootDir(configuration.bottom()));\n@@ -602,1 +602,1 @@\n-            for (PackageElement p : configuration.packages) {\n+            for (PackageElement p : configuration.packages()) {\n@@ -723,1 +723,1 @@\n-                DocLink link = configuration.extern.getExternalLink(packageElement, pathToRoot,\n+                DocLink link = configuration.extern().getExternalLink(packageElement, pathToRoot,\n@@ -739,1 +739,1 @@\n-        return configuration.extern.isExternal(typeElement);\n+        return configuration.extern().isExternal(typeElement);\n@@ -743,1 +743,1 @@\n-        return configuration.extern.getExternalLink(element, pathToRoot,\n+        return configuration.extern().getExternalLink(element, pathToRoot,\n@@ -748,1 +748,1 @@\n-        return configuration.extern.getExternalLink(element, pathToRoot,\n+        return configuration.extern().getExternalLink(element, pathToRoot,\n@@ -827,1 +827,1 @@\n-        PackageElement encl = configuration.utils.containingPackage(te);\n+        PackageElement encl = configuration.utils().containingPackage(te);\n@@ -1019,1 +1019,1 @@\n-                DocLink elementCrossLink = (configuration.extern.isModule(refClassName))\n+                DocLink elementCrossLink = (configuration.extern().isModule(refClassName))\n@@ -1041,1 +1041,1 @@\n-                if (!configuration.backwardCompatibility) {\n+                if (!configuration.backwardCompatibility()) {\n@@ -1217,1 +1217,1 @@\n-        if(configuration.nocomment){\n+        if(configuration.nocomment()){\n@@ -1290,1 +1290,1 @@\n-        configuration.tagletManager.checkTags(element, tags, true);\n+        configuration.tagletManager().checkTags(element, tags, true);\n@@ -1359,2 +1359,2 @@\n-                            if (text.startsWith(\"\/..\") && !configuration.docrootparent.isEmpty()) {\n-                                result.addContent(configuration.docrootparent);\n+                            if (text.startsWith(\"\/..\") && !configuration.docrootparent().isEmpty()) {\n+                                result.addContent(configuration.docrootparent());\n@@ -1398,1 +1398,1 @@\n-                            configuration.tagletManager,\n+                            configuration.tagletManager(),\n@@ -1434,1 +1434,1 @@\n-                            configuration.tagletManager, holderTag,\n+                            configuration.tagletManager(), holderTag,\n@@ -1444,1 +1444,1 @@\n-                            configuration.tagletManager, holderTag, tag,\n+                            configuration.tagletManager(), holderTag, tag,\n@@ -1492,1 +1492,1 @@\n-                            configuration.tagletManager, holderTag, tag,\n+                            configuration.tagletManager(), holderTag, tag,\n@@ -1523,1 +1523,1 @@\n-                            configuration.tagletManager, holderTag, tag,\n+                            configuration.tagletManager(), holderTag, tag,\n@@ -1805,1 +1805,1 @@\n-            if (utils.configuration.workArounds.isSynthesized(aDesc)) {\n+            if (utils.configuration.workArounds().isSynthesized(aDesc)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":41,"deletions":41,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -202,2 +202,2 @@\n-        TagletWriter.genTagOutput(configuration.tagletManager, field,\n-                configuration.tagletManager.getBlockTaglets(field),\n+        TagletWriter.genTagOutput(configuration.tagletManager(), field,\n+                configuration.tagletManager().getBlockTaglets(field),\n@@ -219,1 +219,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-            configuration.tagletManager;\n+            configuration.tagletManager();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialMethodWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion);\n+        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion());\n@@ -79,2 +79,2 @@\n-        Head head = new Head(path, configuration.htmlVersion, configuration.docletVersion)\n-                .setTimestamp(!configuration.notimestamp, false)\n+        Head head = new Head(path, configuration.htmlVersion(), configuration.docletVersion)\n+                .setTimestamp(!configuration.notimestamp(), false)\n@@ -83,2 +83,2 @@\n-        String title = (configuration.windowtitle.length() > 0)\n-                ? configuration.windowtitle\n+        String title = (configuration.windowtitle().length() > 0)\n+                ? configuration.windowtitle()\n@@ -88,1 +88,1 @@\n-                .setCharset(configuration.charset)\n+                .setCharset(configuration.charset())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        super(writer.configuration.utils);\n+        super(writer.configuration.utils());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/LinkFactoryImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -269,1 +269,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -283,1 +283,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -424,1 +424,1 @@\n-        return configuration.utils.isLinkable(typeElement);\n+        return configuration.utils().isLinkable(typeElement);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/LinkInfoImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -256,1 +256,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n@@ -300,1 +300,1 @@\n-        if (configuration.summarizeOverriddenMethods) {\n+        if (configuration.summarizeOverriddenMethods()) {\n@@ -330,1 +330,1 @@\n-        if (writer.configuration.nocomment) {\n+        if (writer.configuration.nocomment()) {\n@@ -381,1 +381,1 @@\n-        if (utils.isStatic(method) || writer.configuration.nocomment) {\n+        if (utils.isStatic(method) || writer.configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        DocPath moduleSummary = configuration.useModuleDirectories\n+        DocPath moduleSummary = configuration.useModuleDirectories()\n@@ -118,1 +118,1 @@\n-                configuration.metakeywords.getMetaKeywordsForModule(moduleElement), false, body);\n+                configuration.metakeywords().getMetaKeywordsForModule(moduleElement), false, body);\n@@ -163,1 +163,1 @@\n-        SortedSet<TypeElement> tset = utils.filterOutPrivateClasses(list, configuration.javafx);\n+        SortedSet<TypeElement> tset = utils.filterOutPrivateClasses(list, configuration.javafx());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleFrameWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        for (ModuleElement mdle: configuration.modules) {\n+        for (ModuleElement mdle: configuration.modules()) {\n@@ -129,2 +129,2 @@\n-        if (configuration.packagesheader.length() > 0) {\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader));\n+        if (configuration.packagesheader().length() > 0) {\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader()));\n@@ -132,1 +132,1 @@\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.header));\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.header()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexFrameWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        DocPath filename = DocPaths.overviewSummary(configuration.frames);\n+        DocPath filename = DocPaths.overviewSummary(configuration.frames());\n@@ -102,1 +102,1 @@\n-        if (configuration.showModules) {\n+        if (configuration.showModules()) {\n@@ -118,1 +118,1 @@\n-                = configuration.group.groupModules(configuration.modules);\n+                = configuration.group().groupModules(configuration.modules());\n@@ -124,1 +124,1 @@\n-            Table table =  new Table(configuration.htmlVersion, HtmlStyle.overviewSummary)\n+            Table table =  new Table(configuration.htmlVersion(), HtmlStyle.overviewSummary)\n@@ -133,1 +133,1 @@\n-            for (String groupName : configuration.group.getGroupList()) {\n+            for (String groupName : configuration.group().getGroupList()) {\n@@ -140,1 +140,1 @@\n-            for (ModuleElement mdle : configuration.modules) {\n+            for (ModuleElement mdle : configuration.modules()) {\n@@ -142,1 +142,1 @@\n-                    if (!(configuration.nodeprecated && utils.isDeprecated(mdle))) {\n+                    if (!(configuration.nodeprecated() && utils.isDeprecated(mdle))) {\n@@ -170,1 +170,1 @@\n-        if (!utils.getFullBody(configuration.overviewElement).isEmpty()) {\n+        if (!utils.getFullBody(configuration.overviewElement()).isEmpty()) {\n@@ -186,2 +186,2 @@\n-        if (!utils.getFullBody(configuration.overviewElement).isEmpty()) {\n-            addInlineComment(configuration.overviewElement, htmltree);\n+        if (!utils.getFullBody(configuration.overviewElement()).isEmpty()) {\n+            addInlineComment(configuration.overviewElement(), htmltree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexWriter.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-            if ((!(configuration.nodeprecated && utils.isDeprecated(pkg)))) {\n+            if ((!(configuration.nodeprecated() && utils.isDeprecated(pkg)))) {\n@@ -121,1 +121,1 @@\n-        Set<PackageElement> modulePackages = configuration.modulePackages.get(mdle);\n+        Set<PackageElement> modulePackages = configuration.modulePackages().get(mdle);\n@@ -123,1 +123,1 @@\n-            if ((!(configuration.nodeprecated && utils.isDeprecated(pkg)))) {\n+            if ((!(configuration.nodeprecated() && utils.isDeprecated(pkg)))) {\n@@ -160,2 +160,2 @@\n-        if (configuration.packagesheader.length() > 0) {\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader));\n+        if (configuration.packagesheader().length() > 0) {\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader()));\n@@ -163,1 +163,1 @@\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.header));\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.header()));\n@@ -189,1 +189,1 @@\n-        DocPath allClassesFrame = configuration.useModuleDirectories\n+        DocPath allClassesFrame = configuration.useModuleDirectories()\n@@ -205,1 +205,1 @@\n-        DocPath overviewFrame = configuration.useModuleDirectories\n+        DocPath overviewFrame = configuration.useModuleDirectories()\n@@ -221,1 +221,1 @@\n-        DocPath moduleOverviewFrame = configuration.useModuleDirectories\n+        DocPath moduleOverviewFrame = configuration.useModuleDirectories()\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModulePackageIndexFrameWriter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-        this.moduleMode = configuration.docEnv.getModuleMode();\n+        this.moduleMode = configuration.docEnv().getModuleMode();\n@@ -203,1 +203,1 @@\n-        navBar.setDisplaySummaryModuleDescLink(!utils.getFullBody(mdle).isEmpty() && !configuration.nocomment);\n+        navBar.setDisplaySummaryModuleDescLink(!utils.getFullBody(mdle).isEmpty() && !configuration.nocomment());\n@@ -218,1 +218,1 @@\n-        Content label = mdle.isOpen() && (configuration.docEnv.getModuleMode() == ModuleMode.ALL)\n+        Content label = mdle.isOpen() && (configuration.docEnv().getModuleMode() == ModuleMode.ALL)\n@@ -486,1 +486,1 @@\n-        return new Table(configuration.htmlVersion, tableStyle)\n+        return new Table(configuration.htmlVersion(), tableStyle)\n@@ -504,1 +504,1 @@\n-        return new Table(configuration.htmlVersion, tableStyle)\n+        return new Table(configuration.htmlVersion(), tableStyle)\n@@ -619,1 +619,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.packagesSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.packagesSummary)\n@@ -961,1 +961,1 @@\n-        printHtmlDocument(configuration.metakeywords.getMetaKeywordsForModule(mdle),\n+        printHtmlDocument(configuration.metakeywords().getMetaKeywordsForModule(mdle),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n@@ -155,1 +155,1 @@\n-        if (configuration.summarizeOverriddenMethods) {\n+        if (configuration.summarizeOverriddenMethods()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-        String pkgName = configuration.utils.getPackageName(packageElement);\n+        String pkgName = configuration.utils().getPackageName(packageElement);\n@@ -118,1 +118,1 @@\n-                configuration.metakeywords.getMetaKeywords(packageElement), false, body);\n+                configuration.metakeywords().getMetaKeywords(packageElement), false, body);\n@@ -144,1 +144,1 @@\n-            addClassKindListing(config.typeElementCatalog.interfaces(packageElement),\n+            addClassKindListing(config.typeElementCatalog().interfaces(packageElement),\n@@ -146,1 +146,1 @@\n-            addClassKindListing(config.typeElementCatalog.ordinaryClasses(packageElement),\n+            addClassKindListing(config.typeElementCatalog().ordinaryClasses(packageElement),\n@@ -148,1 +148,1 @@\n-            addClassKindListing(config.typeElementCatalog.enums(packageElement),\n+            addClassKindListing(config.typeElementCatalog().enums(packageElement),\n@@ -150,1 +150,1 @@\n-            addClassKindListing(config.typeElementCatalog.exceptions(packageElement),\n+            addClassKindListing(config.typeElementCatalog().exceptions(packageElement),\n@@ -152,1 +152,1 @@\n-            addClassKindListing(config.typeElementCatalog.errors(packageElement),\n+            addClassKindListing(config.typeElementCatalog().errors(packageElement),\n@@ -154,1 +154,1 @@\n-            addClassKindListing(config.typeElementCatalog.annotationTypes(packageElement),\n+            addClassKindListing(config.typeElementCatalog().annotationTypes(packageElement),\n@@ -168,1 +168,1 @@\n-        SortedSet<TypeElement> tset = utils.filterOutPrivateClasses(list, configuration.javafx);\n+        SortedSet<TypeElement> tset = utils.filterOutPrivateClasses(list, configuration.javafx());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageFrameWriter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-                (!(configuration.nodeprecated && utils.isDeprecated(aPackage)))) {\n+                (!(configuration.nodeprecated() && utils.isDeprecated(aPackage)))) {\n@@ -127,2 +127,2 @@\n-        if (configuration.packagesheader.length() > 0) {\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader));\n+        if (configuration.packagesheader().length() > 0) {\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader()));\n@@ -130,1 +130,1 @@\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.header));\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.header()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexFrameWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        DocPath filename = DocPaths.overviewSummary(configuration.frames);\n+        DocPath filename = DocPaths.overviewSummary(configuration.frames());\n@@ -102,1 +102,1 @@\n-                = configuration.group.groupPackages(packages);\n+                = configuration.group().groupPackages(packages);\n@@ -107,1 +107,1 @@\n-            Table table =  new Table(configuration.htmlVersion, HtmlStyle.overviewSummary)\n+            Table table =  new Table(configuration.htmlVersion(), HtmlStyle.overviewSummary)\n@@ -116,1 +116,1 @@\n-            for (String groupName : configuration.group.getGroupList()) {\n+            for (String groupName : configuration.group().getGroupList()) {\n@@ -123,1 +123,1 @@\n-            for (PackageElement pkg : configuration.packages) {\n+            for (PackageElement pkg : configuration.packages()) {\n@@ -125,1 +125,1 @@\n-                    if (!(configuration.nodeprecated && utils.isDeprecated(pkg))) {\n+                    if (!(configuration.nodeprecated() && utils.isDeprecated(pkg))) {\n@@ -153,1 +153,1 @@\n-        if (!utils.getFullBody(configuration.overviewElement).isEmpty()) {\n+        if (!utils.getFullBody(configuration.overviewElement()).isEmpty()) {\n@@ -169,2 +169,2 @@\n-        if (!utils.getFullBody(configuration.overviewElement).isEmpty()) {\n-            addInlineComment(configuration.overviewElement, htmltree);\n+        if (!utils.getFullBody(configuration.overviewElement()).isEmpty()) {\n+            addInlineComment(configuration.overviewElement(), htmltree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexWriter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-              new ClassTree(configuration.typeElementCatalog.allClasses(packageElement), configuration));\n+              new ClassTree(configuration.typeElementCatalog().allClasses(packageElement), configuration));\n@@ -109,1 +109,1 @@\n-        if (configuration.packages.size() > 1) {\n+        if (configuration.packages().size() > 1) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-        if (configuration.packages.size() > 1) {\n+        if (configuration.packages().size() > 1) {\n@@ -179,1 +179,1 @@\n-        Table table = new Table(configuration.htmlVersion, HtmlStyle.useSummary)\n+        Table table = new Table(configuration.htmlVersion(), HtmlStyle.useSummary)\n@@ -221,1 +221,1 @@\n-            Table table = new Table(configuration.htmlVersion, HtmlStyle.useSummary)\n+            Table table = new Table(configuration.htmlVersion(), HtmlStyle.useSummary)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -124,2 +124,2 @@\n-        if (configuration.showModules) {\n-            ModuleElement mdle = configuration.docEnv.getElementUtils().getModuleOf(packageElement);\n+        if (configuration.showModules()) {\n+            ModuleElement mdle = configuration.docEnv().getElementUtils().getModuleOf(packageElement);\n@@ -256,1 +256,1 @@\n-            Table table = new Table(configuration.htmlVersion, HtmlStyle.typeSummary)\n+            Table table = new Table(configuration.htmlVersion(), HtmlStyle.typeSummary)\n@@ -346,1 +346,1 @@\n-        printHtmlDocument(configuration.metakeywords.getMetaKeywords(packageElement),\n+        printHtmlDocument(configuration.metakeywords().getMetaKeywords(packageElement),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-        if (configuration.linksource) {\n+        if (configuration.linksource()) {\n@@ -230,1 +230,1 @@\n-        return new Table(configuration.htmlVersion, HtmlStyle.memberSummary)\n+        return new Table(configuration.htmlVersion(), HtmlStyle.memberSummary)\n@@ -265,1 +265,1 @@\n-        if (configuration.summarizeOverriddenMethods) {\n+        if (configuration.summarizeOverriddenMethods()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-        if (!configuration.packages.isEmpty()) {\n+        if (!configuration.packages().isEmpty()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SingleIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -127,1 +127,1 @@\n-            if (!(configuration.nodeprecated && utils.isDeprecated(pkg)))\n+            if (!(configuration.nodeprecated() && utils.isDeprecated(pkg)))\n@@ -134,1 +134,1 @@\n-            if (!(configuration.nodeprecated &&\n+            if (!(configuration.nodeprecated() &&\n@@ -158,1 +158,1 @@\n-            if (!(configuration.nodeprecated && utils.isDeprecated(te)))\n+            if (!(configuration.nodeprecated() && utils.isDeprecated(te)))\n@@ -213,2 +213,2 @@\n-        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion);\n-        Head head = new Head(path, configuration.htmlVersion, configuration.docletVersion)\n+        DocType htmlDocType = DocType.forVersion(configuration.htmlVersion());\n+        Head head = new Head(path, configuration.htmlVersion(), configuration.docletVersion)\n@@ -233,1 +233,1 @@\n-        String filename = configuration.stylesheetfile;\n+        String filename = configuration.stylesheetfile();\n@@ -248,1 +248,1 @@\n-        List<String> stylesheets = configuration.additionalStylesheets;\n+        List<String> stylesheets = configuration.additionalStylesheets();\n@@ -297,1 +297,1 @@\n-            Content anchor = HtmlTree.A(configuration.htmlVersion,\n+            Content anchor = HtmlTree.A(configuration.htmlVersion(),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-        if (!configuration.packages.isEmpty()) {\n+        if (!configuration.packages().isEmpty()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SplitIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -111,1 +111,1 @@\n-        if (configuration.createindex && !tagText.isEmpty()) {\n+        if (configuration.createindex() && !tagText.isEmpty()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        packages = configuration.packages;\n+        packages = configuration.packages();\n@@ -165,1 +165,1 @@\n-                        (configuration.nodeprecated && utils.isDeprecated(pkg))) {\n+                        (configuration.nodeprecated() && utils.isDeprecated(pkg))) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TreeWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        this.links = new Links(path, configuration.htmlVersion);\n+        this.links = new Links(path, configuration.htmlVersion());\n@@ -264,1 +264,1 @@\n-                addActivePageLink(tree, contents.overviewLabel, configuration.createoverview);\n+                addActivePageLink(tree, contents.overviewLabel, configuration.createoverview());\n@@ -268,1 +268,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -276,1 +276,1 @@\n-                addActivePageLink(tree, contents.moduleLabel, configuration.showModules);\n+                addActivePageLink(tree, contents.moduleLabel, configuration.showModules());\n@@ -279,1 +279,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -290,1 +290,1 @@\n-                if (configuration.classuse) {\n+                if (configuration.classuse()) {\n@@ -294,1 +294,1 @@\n-                if (configuration.createtree) {\n+                if (configuration.createtree()) {\n@@ -307,1 +307,1 @@\n-                if (configuration.classuse) {\n+                if (configuration.classuse()) {\n@@ -311,1 +311,1 @@\n-                if (configuration.createtree) {\n+                if (configuration.createtree()) {\n@@ -329,1 +329,1 @@\n-                addActivePageLink(tree, contents.useLabel, configuration.classuse);\n+                addActivePageLink(tree, contents.useLabel, configuration.classuse());\n@@ -333,1 +333,1 @@\n-                    addContentToTree(tree, configuration.utils.isEnclosingPackageIncluded((TypeElement) element)\n+                    addContentToTree(tree, configuration.utils().isEnclosingPackageIncluded((TypeElement) element)\n@@ -344,1 +344,1 @@\n-                    addPageLabel(tree, contents.moduleLabel, configuration.showModules);\n+                    addPageLabel(tree, contents.moduleLabel, configuration.showModules());\n@@ -351,2 +351,2 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n-                addActivePageLink(tree, contents.treeLabel, configuration.createtree);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n+                addActivePageLink(tree, contents.treeLabel, configuration.createtree());\n@@ -364,1 +364,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -367,2 +367,2 @@\n-                    addActivePageLink(tree, contents.deprecatedLabel, !(configuration.nodeprecated\n-                            || configuration.nodeprecatedlist));\n+                    addActivePageLink(tree, contents.deprecatedLabel, !(configuration.nodeprecated()\n+                            || configuration.nodeprecatedlist()));\n@@ -373,1 +373,1 @@\n-                    addActivePageLink(tree, contents.indexLabel, configuration.createindex);\n+                    addActivePageLink(tree, contents.indexLabel, configuration.createindex());\n@@ -378,1 +378,1 @@\n-                    addActivePageLink(tree, contents.helpLabel, !configuration.nohelp);\n+                    addActivePageLink(tree, contents.helpLabel, !configuration.nohelp());\n@@ -391,1 +391,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -402,1 +402,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -432,1 +432,1 @@\n-                        if (kind == ENUM_CONSTANTS && !configuration.utils.isEnum(typeElement)) {\n+                        if (kind == ENUM_CONSTANTS && !configuration.utils().isEnum(typeElement)) {\n@@ -435,1 +435,1 @@\n-                        if (kind == CONSTRUCTORS && configuration.utils.isEnum(typeElement)) {\n+                        if (kind == CONSTRUCTORS && configuration.utils().isEnum(typeElement)) {\n@@ -584,1 +584,1 @@\n-                                configuration.utils.getFullyQualifiedName(typeElement), contents.navNested));\n+                                configuration.utils().getFullyQualifiedName(typeElement), contents.navNested));\n@@ -672,1 +672,1 @@\n-                        if (kind == ENUM_CONSTANTS && !configuration.utils.isEnum(typeElement)) {\n+                        if (kind == ENUM_CONSTANTS && !configuration.utils().isEnum(typeElement)) {\n@@ -675,1 +675,1 @@\n-                        if (kind == CONSTRUCTORS && configuration.utils.isEnum(typeElement)) {\n+                        if (kind == CONSTRUCTORS && configuration.utils().isEnum(typeElement)) {\n@@ -764,1 +764,1 @@\n-                    !configuration.utils.getAnnotationFields(annotationType).isEmpty(),\n+                    !configuration.utils().getAnnotationFields(annotationType).isEmpty(),\n@@ -845,2 +845,2 @@\n-        if (configuration.createoverview) {\n-            tree.addContent(HtmlTree.LI(links.createLink(pathToRoot.resolve(DocPaths.overviewSummary(configuration.frames)),\n+        if (configuration.createoverview()) {\n+            tree.addContent(HtmlTree.LI(links.createLink(pathToRoot.resolve(DocPaths.overviewSummary(configuration.frames())),\n@@ -852,4 +852,4 @@\n-        if (configuration.showModules) {\n-            if (configuration.modules.size() == 1) {\n-                ModuleElement mdle = configuration.modules.first();\n-                boolean included = configuration.utils.isIncluded(mdle);\n+        if (configuration.showModules()) {\n+            if (configuration.modules().size() == 1) {\n+                ModuleElement mdle = configuration.modules().first();\n+                boolean included = configuration.utils().isIncluded(mdle);\n@@ -859,1 +859,1 @@\n-            } else if (!configuration.modules.isEmpty()) {\n+            } else if (!configuration.modules().isEmpty()) {\n@@ -866,1 +866,1 @@\n-        if (configuration.showModules) {\n+        if (configuration.showModules()) {\n@@ -872,3 +872,3 @@\n-        if (configuration.packages.size() == 1) {\n-            PackageElement packageElement = configuration.packages.first();\n-            boolean included = packageElement != null && configuration.utils.isIncluded(packageElement);\n+        if (configuration.packages().size() == 1) {\n+            PackageElement packageElement = configuration.packages().first();\n+            boolean included = packageElement != null && configuration.utils().isIncluded(packageElement);\n@@ -876,1 +876,1 @@\n-                for (PackageElement p : configuration.packages) {\n+                for (PackageElement p : configuration.packages()) {\n@@ -888,1 +888,1 @@\n-                DocLink crossPkgLink = configuration.extern.getExternalLink(\n+                DocLink crossPkgLink = configuration.extern().getExternalLink(\n@@ -896,1 +896,1 @@\n-        } else if (!configuration.packages.isEmpty()) {\n+        } else if (!configuration.packages().isEmpty()) {\n@@ -911,1 +911,1 @@\n-        if (configuration.createtree) {\n+        if (configuration.createtree()) {\n@@ -921,1 +921,1 @@\n-        if (!(configuration.nodeprecated || configuration.nodeprecatedlist)) {\n+        if (!(configuration.nodeprecated() || configuration.nodeprecatedlist())) {\n@@ -928,1 +928,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -930,1 +930,1 @@\n-                    (configuration.splitindex\n+                    (configuration.splitindex()\n@@ -938,2 +938,2 @@\n-        if (!configuration.nohelp) {\n-            String helpfile = configuration.helpfile;\n+        if (!configuration.nohelp()) {\n+            String helpfile = configuration.helpfile();\n@@ -975,1 +975,1 @@\n-                DocPaths.AllClasses(configuration.frames)),\n+                DocPaths.AllClasses(configuration.frames())),\n@@ -1014,1 +1014,1 @@\n-        if (!configuration.nonavbar) {\n+        if (!configuration.nonavbar()) {\n@@ -1016,1 +1016,1 @@\n-            Content tree = (configuration.htmlVersion == HtmlVersion.HTML5)\n+            Content tree = (configuration.htmlVersion() == HtmlVersion.HTML5)\n@@ -1050,2 +1050,2 @@\n-            if (!configuration.nonavbar) {\n-                if (configuration.frames) {\n+            if (!configuration.nonavbar()) {\n+                if (configuration.frames()) {\n@@ -1064,1 +1064,1 @@\n-            if (top && configuration.createindex) {\n+            if (top && configuration.createindex()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Navigation.java","additions":53,"deletions":53,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -238,0 +238,5 @@\n+# 0: an exception\n+doclet.Error_copying_legal_notices=Error while copying legal notices: {0}\n+# 0: the path; 1: the detail message for the exception\n+doclet.Error_invalid_path_for_legal_notices=Invalid path ''{0}'' for legal notices: {1}\n+\n@@ -324,0 +329,5 @@\n+doclet.usage.legal-notices.parameters=\\\n+    'default' | 'none' | <directory>\n+doclet.usage.legal-notices.description=\\\n+    Control legal notices in the generated output\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-            dumpStack(configuration.dumpOnError, e);\n+            dumpStack(configuration.dumpOnError(), e);\n@@ -135,1 +135,1 @@\n-            dumpStack(configuration.dumpOnError, e);\n+            dumpStack(configuration.dumpOnError(), e);\n@@ -139,1 +139,1 @@\n-            dumpStack(configuration.dumpOnError, e);\n+            dumpStack(configuration.dumpOnError(), e);\n@@ -205,1 +205,1 @@\n-        ClassTree classtree = new ClassTree(configuration, configuration.nodeprecated);\n+        ClassTree classtree = new ClassTree(configuration, configuration.nodeprecated());\n@@ -271,1 +271,1 @@\n-        configuration.modulePackages.values().stream().forEach(packages::addAll);\n+        configuration.modulePackages().values().stream().forEach(packages::addAll);\n@@ -284,1 +284,1 @@\n-        SortedSet<PackageElement> packages = configuration.typeElementCatalog.packages();\n+        SortedSet<PackageElement> packages = configuration.typeElementCatalog().packages();\n@@ -286,1 +286,1 @@\n-            generateClassFiles(configuration.typeElementCatalog.allClasses(pkg), classtree);\n+            generateClassFiles(configuration.typeElementCatalog().allClasses(pkg), classtree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/AbstractDoclet.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-    public final Doclet doclet;\n+    private final Doclet doclet;\n@@ -94,1 +94,1 @@\n-    public TagletManager tagletManager;\n+    protected TagletManager tagletManager;\n@@ -99,1 +99,1 @@\n-    public String builderXMLPath;\n+    private String builderXMLPath;\n@@ -104,1 +104,1 @@\n-    public static final String DEFAULT_BUILDER_XML = \"resources\/doclet.xml\";\n+    private static final String DEFAULT_BUILDER_XML = \"resources\/doclet.xml\";\n@@ -109,1 +109,1 @@\n-    public String tagletpath = null;\n+    private String tagletpath = null;\n@@ -115,1 +115,1 @@\n-    public boolean serialwarn = false;\n+    private boolean serialwarn = false;\n@@ -120,1 +120,1 @@\n-    public int sourcetab;\n+    private int sourcetab;\n@@ -122,1 +122,1 @@\n-    public String tabSpaces;\n+    private String tabSpaces;\n@@ -127,1 +127,1 @@\n-    public boolean linksource = false;\n+    private boolean linksource = false;\n@@ -133,1 +133,1 @@\n-    public boolean nosince = false;\n+    private boolean nosince = false;\n@@ -138,1 +138,1 @@\n-    public boolean copydocfilesubdirs = false;\n+    private boolean copydocfilesubdirs = false;\n@@ -143,1 +143,1 @@\n-    public boolean backwardCompatibility = true;\n+    private boolean backwardCompatibility = true;\n@@ -150,1 +150,1 @@\n-    public boolean keywords = false;\n+    private boolean keywords = false;\n@@ -155,1 +155,1 @@\n-    public final MetaKeywords metakeywords;\n+    private final MetaKeywords metakeywords;\n@@ -170,1 +170,1 @@\n-    public DocletEnvironment docEnv;\n+    protected DocletEnvironment docEnv;\n@@ -175,1 +175,1 @@\n-    public Utils utils;\n+    protected Utils utils;\n@@ -180,1 +180,1 @@\n-    public WorkArounds workArounds;\n+    protected WorkArounds workArounds;\n@@ -186,1 +186,1 @@\n-    public String destDirName = \"\";\n+    private String destDirName = \"\";\n@@ -191,1 +191,1 @@\n-    public String docFileDestDirName = \"\";\n+    private String docFileDestDirName = \"\"; \/\/AAA Not Use\n@@ -197,1 +197,1 @@\n-    public String docencoding = null;\n+    protected String docencoding = null;\n@@ -202,1 +202,1 @@\n-    public boolean nocomment = false;\n+    private boolean nocomment = false;\n@@ -208,1 +208,1 @@\n-    public String encoding = null;\n+    protected String encoding = null;\n@@ -216,1 +216,1 @@\n-    public boolean showauthor = false;\n+    private boolean showauthor = false;\n@@ -222,1 +222,1 @@\n-    public boolean javafx = false;\n+    private boolean javafx = false;\n@@ -230,1 +230,1 @@\n-    public boolean showversion = false;\n+    private boolean showversion = false;\n@@ -240,1 +240,1 @@\n-    public String sourcepath = \"\";\n+    private String sourcepath = \"\";\n@@ -245,1 +245,1 @@\n-    public boolean showModules = false;\n+    protected boolean showModules = false;\n@@ -253,1 +253,1 @@\n-    public boolean nodeprecated = false;\n+    protected boolean nodeprecated = false;\n@@ -258,1 +258,1 @@\n-    public TypeElementCatalog typeElementCatalog;\n+    private TypeElementCatalog typeElementCatalog;\n@@ -264,1 +264,1 @@\n-    public boolean notimestamp = false;\n+    private boolean notimestamp = false;\n@@ -269,1 +269,1 @@\n-    public final Group group = new Group(this);\n+    private final Group group = new Group(this);\n@@ -274,1 +274,1 @@\n-    public final Extern extern = new Extern(this);\n+    private final Extern extern = new Extern(this);\n@@ -283,1 +283,1 @@\n-    public boolean quiet = false;\n+    private boolean quiet = false;\n@@ -290,1 +290,1 @@\n-    public boolean summarizeOverriddenMethods = false;\n+    private boolean summarizeOverriddenMethods = false;\n@@ -302,1 +302,1 @@\n-    public boolean useModuleDirectories = true;\n+    protected boolean useModuleDirectories = true;\n@@ -304,1 +304,1 @@\n-    public boolean dumpOnError = false;\n+    private boolean dumpOnError = false;\n@@ -329,1 +329,1 @@\n-    public CommentUtils cmtUtils;\n+    private CommentUtils cmtUtils;\n@@ -334,1 +334,1 @@\n-    public SortedSet<PackageElement> packages = null;\n+    protected SortedSet<PackageElement> packages = null;\n@@ -336,1 +336,1 @@\n-    public OverviewElement overviewElement;\n+    private OverviewElement overviewElement;\n@@ -338,1 +338,1 @@\n-    public DocFileFactory docFileFactory;\n+    private DocFileFactory docFileFactory;\n@@ -343,1 +343,1 @@\n-    public SortedMap<ModuleElement, Set<PackageElement>> modulePackages;\n+    private SortedMap<ModuleElement, Set<PackageElement>> modulePackages;\n@@ -348,1 +348,1 @@\n-    public SortedSet<ModuleElement> modules;\n+    protected SortedSet<ModuleElement> modules;\n@@ -358,1 +358,1 @@\n-    public boolean disableJavaFxStrictChecks = false;\n+    private boolean disableJavaFxStrictChecks = false;\n@@ -363,1 +363,1 @@\n-    public boolean showTaglets = false;\n+    private boolean showTaglets = false;\n@@ -367,1 +367,1 @@\n-    public PropertyUtils propertyUtils = null;\n+    private PropertyUtils propertyUtils = null;\n@@ -1350,0 +1350,296 @@\n+\n+    \/**\n+     * The doclet that created this configuration.\n+     *\/\n+    public final Doclet doclet() {\n+        return doclet;\n+    }\n+\n+    \/**\n+     * The taglet manager.\n+     *\/\n+    public TagletManager tagletManager() {\n+        return tagletManager;\n+    }\n+\n+    \/**\n+     * The path to Taglets\n+     *\/\n+    public String tagletpath() {\n+        return tagletpath;\n+    }\n+\n+    \/**\n+     * This is true if option \"-serialwarn\" is used. Defualt value is false to\n+     * suppress excessive warnings about serial tag.\n+     *\/\n+    public boolean serialwarn() {\n+        return serialwarn;\n+    }\n+\n+    \/**\n+     * The specified amount of space between tab stops.\n+     *\/\n+    public int sourcetab() {\n+        return sourcetab;\n+    }\n+\n+    public String tabSpaces() {\n+        return tabSpaces;\n+    }\n+\n+    \/**\n+     * True if we should generate browsable sources.\n+     *\/\n+    public boolean linksource() {\n+        return linksource;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nosince\" is used. Default value is\n+     * false.\n+     *\/\n+    public boolean nosince() {\n+        return nosince;\n+    }\n+\n+    \/**\n+     * True if we should recursively copy the doc-file subdirectories\n+     *\/\n+    public boolean copydocfilesubdirs() {\n+        return copydocfilesubdirs;\n+    }\n+\n+    \/**\n+     * Maintain backward compatibility with previous javadoc version\n+     *\/\n+    public boolean backwardCompatibility() {\n+        return backwardCompatibility;\n+    }\n+\n+    \/**\n+     * True if user wants to add member names as meta keywords.\n+     * Set to false because meta keywords are ignored in general\n+     * by most Internet search engines.\n+     *\/\n+    public boolean keywords() {\n+        return keywords;\n+    }\n+\n+    \/**\n+     * The meta tag keywords instance.\n+     *\/\n+    public final MetaKeywords metakeywords() {\n+        return metakeywords;\n+    }\n+\n+    \/**\n+     * The doclet environment.\n+     *\/\n+    public DocletEnvironment docEnv() {\n+        return docEnv;\n+    }\n+\n+    \/**\n+     * An utility class for commonly used helpers\n+     *\/\n+    public Utils utils() {\n+        return utils;\n+    }\n+\n+    \/**\n+     * All the temporary accessors to javac internals.\n+     *\/\n+    public WorkArounds workArounds() {\n+        return workArounds;\n+    }\n+\n+    \/**\n+     * Destination directory name, in which doclet will generate the entire\n+     * documentation. Default is current directory.\n+     *\/\n+    public String destDirName() {\n+        return destDirName;\n+    }\n+\n+    \/**\n+     * Encoding for this document. Default is default encoding for this\n+     * platform.\n+     *\/\n+    public String docencoding() {\n+        return docencoding;\n+    }\n+\n+    \/**\n+     * True if user wants to suppress descriptions and tags.\n+     *\/\n+    public boolean nocomment() {\n+        return nocomment;\n+    }\n+\n+    \/**\n+     * Encoding for this document. Default is default encoding for this\n+     * platform.\n+     *\/\n+    public String encoding() {\n+        return encoding;\n+    }\n+\n+    \/**\n+     * Generate author specific information for all the classes if @author\n+     * tag is used in the doc comment and if -author option is used.\n+     * <code>showauthor<\/code> is set to true if -author option is used.\n+     * Default is don't show author information.\n+     *\/\n+    public boolean showauthor() {\n+        return showauthor;\n+    }\n+\n+    \/**\n+     * Generate documentation for JavaFX getters and setters automatically\n+     * by copying it from the appropriate property definition.\n+     *\/\n+    public boolean javafx() {\n+        return javafx;\n+    }\n+\n+    \/**\n+     * Generate version specific information for the all the classes\n+     * if @version tag is used in the doc comment and if -version option is\n+     * used. <code>showversion<\/code> is set to true if -version option is\n+     * used.Default is don't show version information.\n+     *\/\n+    public boolean showversion() {\n+        return showversion;\n+    }\n+\n+    \/**\n+     * Generate modules documentation if more than one module is present.\n+     *\/\n+    public boolean showModules() {\n+        return showModules;\n+    }\n+\n+    \/**\n+     * Don't generate deprecated API information at all, if -nodeprecated\n+     * option is used. <code>nodepracted<\/code> is set to true if\n+     * -nodeprecated option is used. Default is generate deprected API\n+     * information.\n+     *\/\n+    public boolean nodeprecated() {\n+        return nodeprecated;\n+    }\n+\n+    \/**\n+     * The catalog of classes specified on the command-line\n+     *\/\n+    public TypeElementCatalog typeElementCatalog() {\n+        return typeElementCatalog;\n+    }\n+\n+    \/**\n+     * True if user wants to suppress time stamp in output.\n+     * Default is false.\n+     *\/\n+    public boolean notimestamp() {\n+        return notimestamp;\n+    }\n+\n+    \/**\n+     * The package grouping instance.\n+     *\/\n+    public final Group group() {\n+        return group;\n+    }\n+\n+    \/**\n+     * The tracker of external package links.\n+     *\/\n+    public final Extern extern() {\n+        return extern;\n+    }\n+\n+    \/**\n+     * Suppress all messages\n+     *\/\n+    public boolean quiet() {\n+        return quiet;\n+    }\n+\n+    \/**\n+     * Specifies whether those methods that override a super-type's method\n+     * with no changes to the API contract should be summarized in the\n+     * footnote section.\n+     *\/\n+    public boolean summarizeOverriddenMethods() {\n+        return summarizeOverriddenMethods;\n+    }\n+\n+    \/**\n+     * Flag to enable\/disable use of module directories when generating docs for modules\n+     * Default: on (module directories are enabled).\n+     *\/\n+    public boolean useModuleDirectories() {\n+        return useModuleDirectories;\n+    }\n+\n+    public boolean dumpOnError() {\n+        return dumpOnError;\n+    }\n+\n+    public CommentUtils cmtUtils() {\n+        return cmtUtils;\n+    }\n+\n+    \/**\n+     * A sorted set of included packages.\n+     *\/\n+    public SortedSet<PackageElement> packages() {\n+        return packages;\n+    }\n+\n+    public OverviewElement overviewElement() {\n+        return overviewElement;\n+    }\n+\n+    public DocFileFactory docFileFactory() {\n+        return docFileFactory;\n+    }\n+\n+    public void setDocFileFactory(DocFileFactory docFileFactory) {\n+        this.docFileFactory = docFileFactory;\n+    }\n+\n+    \/**\n+     * A sorted map, giving the (specified|included|other) packages for each module.\n+     *\/\n+    public SortedMap<ModuleElement, Set<PackageElement>> modulePackages() {\n+        return modulePackages;\n+    }\n+\n+    \/**\n+     * The list of known modules, that should be documented.\n+     *\/\n+    public SortedSet<ModuleElement> modules() {\n+        return modules;\n+    }\n+\n+    \/**\n+     * Primarily used to disable strict checks in the regression\n+     * tests allowing those tests to be executed successfully, for\n+     * instance, with OpenJDK builds which may not contain FX libraries.\n+     *\/\n+    public boolean disableJavaFxStrictChecks() {\n+        return disableJavaFxStrictChecks;\n+    }\n+\n+    \/**\n+     * Show taglets (internal debug switch)\n+     *\/\n+    public boolean showTaglets() {\n+        return showTaglets;\n+    }\n+\n+    public PropertyUtils propertyUtils() {\n+        return propertyUtils;\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseConfiguration.java","additions":341,"deletions":45,"binary":false,"changes":386,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-                fo = configuration.workArounds.getJavaFileObject((PackageElement)e);\n+                fo = configuration.workArounds().getJavaFileObject((PackageElement)e);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/CommentUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-        if (!configuration.quiet) {\n+        if (!configuration.quiet()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Messages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        javafx = configuration.javafx;\n+        javafx = configuration.javafx();\n@@ -55,1 +55,1 @@\n-        TypeMirror jboType = configuration.disableJavaFxStrictChecks\n+        TypeMirror jboType = configuration.disableJavaFxStrictChecks()\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/PropertyUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/AbstractBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,2 +130,2 @@\n-        if ((configuration.packages == null ||\n-            !configuration.packages.contains(containingPackage) &&\n+        if ((configuration.packages() == null ||\n+            !configuration.packages().contains(containingPackage) &&\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/AnnotationTypeBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/AnnotationTypeFieldBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/AnnotationTypeRequiredMemberBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -275,2 +275,2 @@\n-        if ((configuration.packages == null ||\n-            !configuration.packages.contains(containingPackage)) &&\n+        if ((configuration.packages() == null ||\n+            !configuration.packages().contains(containingPackage)) &&\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ClassBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-        for (PackageElement pkg : configuration.packages) {\n+        for (PackageElement pkg : configuration.packages()) {\n@@ -176,1 +176,1 @@\n-        for (PackageElement aPackage : configuration.packages) {\n+        for (PackageElement aPackage : configuration.packages()) {\n@@ -196,1 +196,1 @@\n-        PackageElement abbrevPkg = configuration.workArounds.getAbbreviatedPackageElement(currentPackage);\n+        PackageElement abbrevPkg = configuration.workArounds().getAbbreviatedPackageElement(currentPackage);\n@@ -214,1 +214,1 @@\n-                : configuration.typeElementCatalog.allUnnamedClasses();\n+                : configuration.typeElementCatalog().allUnnamedClasses();\n@@ -249,1 +249,1 @@\n-                  : configuration.typeElementCatalog.allUnnamedClasses();\n+                  : configuration.typeElementCatalog().allUnnamedClasses();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ConstantsSummaryBuilder.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ConstructorBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/EnumConstantBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/FieldBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-        CommentUtils cmtutils = configuration.cmtUtils;\n+        CommentUtils cmtutils = configuration.cmtUtils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MethodBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n@@ -204,1 +204,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ModuleSummaryBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,2 +178,2 @@\n-                        : configuration.typeElementCatalog.interfaces(packageElement);\n-        SortedSet<TypeElement> interfaces = utils.filterOutPrivateClasses(ilist, configuration.javafx);\n+                        : configuration.typeElementCatalog().interfaces(packageElement);\n+        SortedSet<TypeElement> interfaces = utils.filterOutPrivateClasses(ilist, configuration.javafx());\n@@ -194,2 +194,2 @@\n-            : configuration.typeElementCatalog.ordinaryClasses(packageElement);\n-        SortedSet<TypeElement> classes = utils.filterOutPrivateClasses(clist, configuration.javafx);\n+            : configuration.typeElementCatalog().ordinaryClasses(packageElement);\n+        SortedSet<TypeElement> classes = utils.filterOutPrivateClasses(clist, configuration.javafx());\n@@ -210,2 +210,2 @@\n-            : configuration.typeElementCatalog.enums(packageElement);\n-        SortedSet<TypeElement> enums = utils.filterOutPrivateClasses(elist, configuration.javafx);\n+            : configuration.typeElementCatalog().enums(packageElement);\n+        SortedSet<TypeElement> enums = utils.filterOutPrivateClasses(elist, configuration.javafx());\n@@ -227,1 +227,1 @@\n-                : configuration.typeElementCatalog.exceptions(packageElement);\n+                : configuration.typeElementCatalog().exceptions(packageElement);\n@@ -229,1 +229,1 @@\n-                configuration.javafx);\n+                configuration.javafx());\n@@ -245,2 +245,2 @@\n-                : configuration.typeElementCatalog.errors(packageElement);\n-        SortedSet<TypeElement> errors = utils.filterOutPrivateClasses(ierrors, configuration.javafx);\n+                : configuration.typeElementCatalog().errors(packageElement);\n+        SortedSet<TypeElement> errors = utils.filterOutPrivateClasses(ierrors, configuration.javafx());\n@@ -262,1 +262,1 @@\n-                : configuration.typeElementCatalog.annotationTypes(packageElement);\n+                : configuration.typeElementCatalog().annotationTypes(packageElement);\n@@ -264,1 +264,1 @@\n-                configuration.javafx);\n+                configuration.javafx());\n@@ -277,1 +277,1 @@\n-        if (configuration.nocomment) {\n+        if (configuration.nocomment()) {\n@@ -289,1 +289,1 @@\n-        if (configuration.nocomment) {\n+        if (configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/PackageSummaryBuilder.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-        if (!configuration.nocomment) {\n+        if (!configuration.nocomment()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/PropertyBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        for (PackageElement pkg : configuration.packages) {\n+        for (PackageElement pkg : configuration.packages()) {\n@@ -339,1 +339,1 @@\n-        if (configuration.nocomment) {\n+        if (configuration.nocomment()) {\n@@ -366,1 +366,1 @@\n-            if (configuration.serialwarn) {\n+            if (configuration.serialwarn()) {\n@@ -401,1 +401,1 @@\n-                if (!configuration.nocomment) {\n+                if (!configuration.nocomment()) {\n@@ -477,1 +477,1 @@\n-        if (configuration.nocomment) {\n+        if (configuration.nocomment()) {\n@@ -524,1 +524,1 @@\n-        if (configuration.nocomment) {\n+        if (configuration.nocomment()) {\n@@ -531,1 +531,1 @@\n-                && configuration.serialwarn) {\n+                && configuration.serialwarn()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/SerializedFormBuilder.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        Utils utils = configuration.utils;\n+        Utils utils = configuration.utils();\n@@ -85,1 +85,1 @@\n-                : configuration.tagletManager.getTaglet(ch.getTagName(holderTag));\n+                : configuration.tagletManager().getTaglet(ch.getTagName(holderTag));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n@@ -165,1 +165,1 @@\n-                getRankMap(writer.configuration().utils, formalParameters), writer, alreadyDocumented)\n+                getRankMap(writer.configuration().utils(), formalParameters), writer, alreadyDocumented)\n@@ -184,1 +184,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n@@ -193,1 +193,1 @@\n-                Input input = new DocFinder.Input(writer.configuration().utils, holder, this,\n+                Input input = new DocFinder.Input(writer.configuration().utils(), holder, this,\n@@ -239,1 +239,1 @@\n-            CommentHelper ch = writer.configuration().utils.getCommentHelper(e);\n+            CommentHelper ch = writer.configuration().utils().getCommentHelper(e);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SimpleTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,2 +177,2 @@\n-        this.docEnv = configuration.docEnv;\n-        this.doclet = configuration.doclet;\n+        this.docEnv = configuration.docEnv();\n+        this.doclet = configuration.doclet();\n@@ -181,2 +181,2 @@\n-        this.showTaglets = configuration.showTaglets;\n-        this.utils = configuration.utils;\n+        this.showTaglets = configuration.showTaglets();\n+        this.utils = configuration.utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletManager.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n@@ -270,1 +270,1 @@\n-        CommentHelper ch = tagletWriter.configuration().utils.getCommentHelper(holder);\n+        CommentHelper ch = tagletWriter.configuration().utils().getCommentHelper(holder);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n@@ -123,1 +123,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n@@ -152,1 +152,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n@@ -180,1 +180,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/UserTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        CommentHelper ch = config.utils.getCommentHelper(holder);\n+        CommentHelper ch = config.utils().getCommentHelper(holder);\n@@ -87,1 +87,1 @@\n-        return (e != null && config.utils.isVariableElement(e))\n+        return (e != null && config.utils().isVariableElement(e))\n@@ -94,1 +94,1 @@\n-        Utils utils = writer.configuration().utils;\n+        Utils utils = writer.configuration().utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ValueTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -131,1 +131,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -148,1 +148,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -170,1 +170,1 @@\n-            if (configuration.nodeprecated &&\n+            if (configuration.nodeprecated() &&\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassTree.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-        docEnv = configuration.docEnv;\n+        docEnv = configuration.docEnv();\n@@ -200,1 +200,1 @@\n-        utils = configuration.utils;\n+        utils = configuration.utils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassUseMapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-            TypeMirror symbol = c.utils.getSymbol(rtree.getSignature());\n+            TypeMirror symbol = c.utils().getSymbol(rtree.getSignature());\n@@ -154,1 +154,1 @@\n-            return  c.docEnv.getTypeUtils().asElement(symbol);\n+            return  c.docEnv().getTypeUtils().asElement(symbol);\n@@ -163,1 +163,1 @@\n-            CommentHelper ovch = c.utils.getCommentHelper(overriddenElement);\n+            CommentHelper ovch = c.utils().getCommentHelper(overriddenElement);\n@@ -173,1 +173,1 @@\n-                CommentHelper ovch = c.utils.getCommentHelper(overriddenElement);\n+                CommentHelper ovch = c.utils().getCommentHelper(overriddenElement);\n@@ -178,1 +178,1 @@\n-        DocTrees doctrees = c.docEnv.getDocTrees();\n+        DocTrees doctrees = c.docEnv().getDocTrees();\n@@ -352,1 +352,1 @@\n-                node.getReference().stream().filter((dt) -> (c.utils.isText(dt))).forEach((dt) -> {\n+                node.getReference().stream().filter((dt) -> (c.utils().isText(dt))).forEach((dt) -> {\n@@ -369,1 +369,1 @@\n-        } else if (c.utils.isTypeElement(e)) {\n+        } else if (c.utils().isTypeElement(e)) {\n@@ -371,2 +371,2 @@\n-        } else if (!c.utils.isPackage(e)) {\n-            return c.utils.getEnclosingTypeElement(e);\n+        } else if (!c.utils().isPackage(e)) {\n+            return c.utils().getEnclosingTypeElement(e);\n@@ -380,1 +380,1 @@\n-            return c.utils.isTypeElement(e) ? c.utils.getSimpleName(e) : null;\n+            return c.utils().isTypeElement(e) ? c.utils().getSimpleName(e) : null;\n@@ -395,1 +395,1 @@\n-        return (c.utils.isExecutableElement(e) || c.utils.isVariableElement(e)) ? e : null;\n+        return (c.utils().isExecutableElement(e) || c.utils().isVariableElement(e)) ? e : null;\n@@ -411,3 +411,3 @@\n-        return c.utils.isExecutableElement(e)\n-                ? c.utils.getSimpleName(e) + c.utils.makeSignature((ExecutableElement) e, true, true)\n-                : c.utils.getSimpleName(e);\n+        return c.utils().isExecutableElement(e)\n+                ? c.utils().getSimpleName(e) + c.utils().makeSignature((ExecutableElement) e, true, true)\n+                : c.utils().getSimpleName(e);\n@@ -419,1 +419,1 @@\n-            return c.utils.containingPackage(e);\n+            return c.utils().containingPackage(e);\n@@ -425,1 +425,1 @@\n-        List<DocTree> firstSentence = c.docEnv.getDocTrees().getFirstSentence(body);\n+        List<DocTree> firstSentence = c.docEnv().getDocTrees().getFirstSentence(body);\n@@ -483,1 +483,1 @@\n-            return c.utils.isTypeElement(e) ? (TypeElement) e : null;\n+            return c.utils().isTypeElement(e) ? (TypeElement) e : null;\n@@ -550,1 +550,1 @@\n-                out.add((TextTree)c.cmtUtils.makeTextTree(content));\n+                out.add((TextTree)c.cmtUtils().makeTextTree(content));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -95,1 +95,1 @@\n-        SortedSet<ModuleElement> modules = configuration.modules;\n+        SortedSet<ModuleElement> modules = configuration.modules();\n@@ -105,1 +105,1 @@\n-        SortedSet<PackageElement> packages = configuration.packages;\n+        SortedSet<PackageElement> packages = configuration.packages();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DeprecatedAPIListBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.nio.file.Path;\n@@ -64,0 +65,5 @@\n+    \/** Create a DocFile for a file that will be opened for reading. *\/\n+    public static DocFile createFileForInput(BaseConfiguration configuration, Path file) {\n+        return DocFileFactory.getFactory(configuration).createFileForInput(file);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFile.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.nio.file.Path;\n@@ -54,1 +55,1 @@\n-        DocFileFactory f = configuration.docFileFactory;\n+        DocFileFactory f = configuration.docFileFactory();\n@@ -62,1 +63,1 @@\n-            configuration.docFileFactory = f;\n+            configuration.setDocFileFactory(f);\n@@ -81,0 +82,3 @@\n+    \/** Create a DocFile for a file that will be opened for reading. *\/\n+    abstract DocFile createFileForInput(Path file);\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFileFactory.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-        Utils utils = configuration.utils;\n+        Utils utils = configuration.utils();\n@@ -264,1 +264,1 @@\n-        Input inheritedSearchInput = input.copy(configuration.utils);\n+        Input inheritedSearchInput = input.copy(configuration.utils());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    \/** The name of the directory for the jQuery. *\/\n+    \/** The name of the directory for the jQuery files. *\/\n@@ -133,0 +133,3 @@\n+    \/** The name of the directory for legal files. *\/\n+    public static final DocPath LEGAL = DocPath.create(\"legal\");\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPaths.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -72,1 +72,1 @@\n-        elemgen.generateElementListFile(configuration.docEnv);\n+        elemgen.generateElementListFile(configuration.docEnv());\n@@ -77,3 +77,3 @@\n-            if (configuration.showModules) {\n-                for (ModuleElement mdle : configuration.modulePackages.keySet()) {\n-                    if (!(configuration.nodeprecated && utils.isDeprecated(mdle))) {\n+            if (configuration.showModules()) {\n+                for (ModuleElement mdle : configuration.modulePackages().keySet()) {\n+                    if (!(configuration.nodeprecated() && utils.isDeprecated(mdle))) {\n@@ -82,1 +82,1 @@\n-                        for (PackageElement pkg : configuration.modulePackages.get(mdle)) {\n+                        for (PackageElement pkg : configuration.modulePackages().get(mdle)) {\n@@ -89,1 +89,1 @@\n-                for (PackageElement pkg : configuration.packages) {\n+                for (PackageElement pkg : configuration.packages()) {\n@@ -92,1 +92,1 @@\n-                    if (!(configuration.nodeprecated && utils.isDeprecated(pkg))) {\n+                    if (!(configuration.nodeprecated() && utils.isDeprecated(pkg))) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ElementListWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-        PackageElement pe = configuration.utils.containingPackage(element);\n+        PackageElement pe = configuration.utils().containingPackage(element);\n@@ -268,1 +268,1 @@\n-            item = moduleItems.get(configuration.utils.getModuleName((ModuleElement)element));\n+            item = moduleItems.get(configuration.utils().getModuleName((ModuleElement)element));\n@@ -272,3 +272,3 @@\n-            ModuleElement moduleElement = configuration.utils.containingModule(packageElement);\n-            Map<String, Item> pkgMap = packageItems.get(configuration.utils.getModuleName(moduleElement));\n-            item = (pkgMap != null) ? pkgMap.get(configuration.utils.getPackageName(packageElement)) : null;\n+            ModuleElement moduleElement = configuration.utils().containingModule(packageElement);\n+            Map<String, Item> pkgMap = packageItems.get(configuration.utils().getModuleName(moduleElement));\n+            item = (pkgMap != null) ? pkgMap.get(configuration.utils().getPackageName(packageElement)) : null;\n@@ -389,1 +389,1 @@\n-                        if (configuration.useModuleDirectories && moduleName != null) {\n+                        if (configuration.useModuleDirectories() && moduleName != null) {\n@@ -436,1 +436,1 @@\n-        PackageElement pe = configuration.utils.elementUtils.getPackageElement(packageName);\n+        PackageElement pe = configuration.utils().elementUtils.getPackageElement(packageName);\n@@ -453,1 +453,1 @@\n-                return configuration.utils.getModuleName(me);\n+                return configuration.utils().getModuleName(me);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Extern.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-            String pkgName = configuration.utils.getPackageName(pkg);\n+            String pkgName = configuration.utils().getPackageName(pkg);\n@@ -335,1 +335,1 @@\n-        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils.makePackageComparator()));\n+        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils().makePackageComparator()));\n@@ -347,1 +347,1 @@\n-        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils.makeModuleComparator()));\n+        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils().makeModuleComparator()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Group.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        this.utils = configuration.utils;\n+        this.utils = configuration.utils();\n@@ -115,1 +115,1 @@\n-        this.javafx = configuration.javafx;\n+        this.javafx = configuration.javafx();\n@@ -120,1 +120,1 @@\n-        buildIndexMap(configuration.docEnv);\n+        buildIndexMap(configuration.docEnv());\n@@ -154,1 +154,1 @@\n-            if (configuration.showModules) {\n+            if (configuration.showModules()) {\n@@ -204,1 +204,1 @@\n-        for (ModuleElement mdle : configuration.modules) {\n+        for (ModuleElement mdle : configuration.modules()) {\n@@ -227,1 +227,1 @@\n-            return !(noDeprecated && configuration.utils.isDeprecated(element));\n+            return !(noDeprecated && configuration.utils().isDeprecated(element));\n@@ -233,2 +233,2 @@\n-                    (configuration.utils.isDeprecated(element) ||\n-                    configuration.utils.isDeprecated(utils.containingPackage(element))));\n+                    (configuration.utils().isDeprecated(element) ||\n+                    configuration.utils().isDeprecated(utils.containingPackage(element))));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/IndexBuilder.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        if (config.keywords) {\n+        if (config.keywords()) {\n@@ -82,2 +82,2 @@\n-            results.addAll(getMemberKeywords(config.utils.getFields(typeElement)));\n-            results.addAll(getMemberKeywords(config.utils.getMethods(typeElement)));\n+            results.addAll(getMemberKeywords(config.utils().getFields(typeElement)));\n+            results.addAll(getMemberKeywords(config.utils().getMethods(typeElement)));\n@@ -95,2 +95,2 @@\n-        String cltypelower = config.utils.isInterface(typeElement) ? \"interface\" : \"class\";\n-        metakeywords.add(config.utils.getFullyQualifiedName(typeElement) + \" \" + cltypelower);\n+        String cltypelower = config.utils().isInterface(typeElement) ? \"interface\" : \"class\";\n+        metakeywords.add(config.utils().getFullyQualifiedName(typeElement) + \" \" + cltypelower);\n@@ -105,2 +105,2 @@\n-        if (config.keywords) {\n-            String pkgName = config.utils.getPackageName(packageElement);\n+        if (config.keywords()) {\n+            String pkgName = config.utils().getPackageName(packageElement);\n@@ -118,1 +118,1 @@\n-        if (config.keywords) {\n+        if (config.keywords()) {\n@@ -130,1 +130,1 @@\n-        if (config.keywords) {\n+        if (config.keywords()) {\n@@ -153,3 +153,3 @@\n-            String membername = config.utils.isMethod(member)\n-                    ? config.utils.getSimpleName(member) + \"()\"\n-                    : config.utils.getSimpleName(member);\n+            String membername = config.utils().isMethod(member)\n+                    ? config.utils().getSimpleName(member) + \"()\"\n+                    : config.utils().getSimpleName(member);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/MetaKeywords.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -112,0 +112,5 @@\n+    @Override\n+    public DocFile createFileForInput(Path file) {\n+        return new StandardDocFile(file);\n+    }\n+\n@@ -143,1 +148,1 @@\n-        private StandardDocFile(Path file) {\n+        StandardDocFile(Path file) {\n@@ -148,1 +153,1 @@\n-        private StandardDocFile(Location location, DocPath path) {\n+        StandardDocFile(Location location, DocPath path) {\n@@ -210,1 +215,1 @@\n-                return new BufferedWriter(new OutputStreamWriter(out, configuration.docencoding));\n+                return new BufferedWriter(new OutputStreamWriter(out, configuration.docencoding()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/StandardDocFileFactory.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        this.utils = config.utils;\n+        this.utils = config.utils();\n@@ -159,1 +159,1 @@\n-        if (utils.isSpecified(pkg) || configuration.nodeprecated && utils.isDeprecated(pkg)) {\n+        if (utils.isSpecified(pkg) || configuration.nodeprecated() && utils.isDeprecated(pkg)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/TypeElementCatalog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,3 +119,3 @@\n-        elementUtils = c.docEnv.getElementUtils();\n-        typeUtils = c.docEnv.getTypeUtils();\n-        docTrees = c.docEnv.getDocTrees();\n+        elementUtils = c.docEnv().getElementUtils();\n+        typeUtils = c.docEnv().getTypeUtils();\n+        docTrees = c.docEnv().getDocTrees();\n@@ -268,1 +268,1 @@\n-        ModuleElement mdle = configuration.docEnv.getElementUtils().getModuleOf(pd);\n+        ModuleElement mdle = configuration.docEnv().getElementUtils().getModuleOf(pd);\n@@ -277,1 +277,1 @@\n-        Location loc = configuration.workArounds.getLocationForModule(mdle);\n+        Location loc = configuration.workArounds().getLocationForModule(mdle);\n@@ -285,1 +285,1 @@\n-        JavaFileManager fm = configuration.docEnv.getJavaFileManager();\n+        JavaFileManager fm = configuration.docEnv().getJavaFileManager();\n@@ -385,1 +385,1 @@\n-        return configuration.javafx && name.endsWith(\"Property\");\n+        return configuration.javafx() && name.endsWith(\"Property\");\n@@ -415,1 +415,1 @@\n-        return configuration.workArounds.getSerializableFields(this, aclass);\n+        return configuration.workArounds().getSerializableFields(this, aclass);\n@@ -419,1 +419,1 @@\n-        return configuration.workArounds.getSerializationMethods(this, aclass);\n+        return configuration.workArounds().getSerializationMethods(this, aclass);\n@@ -423,1 +423,1 @@\n-        return configuration.workArounds.definesSerializableFields(this, aclass);\n+        return configuration.workArounds().definesSerializableFields(this, aclass);\n@@ -509,1 +509,1 @@\n-                configuration.docEnv.getSourceVersion()\n+                configuration.docEnv().getSourceVersion()\n@@ -769,1 +769,1 @@\n-        return configuration.workArounds.overriddenType(method);\n+        return configuration.workArounds().overriddenType(method);\n@@ -810,1 +810,1 @@\n-                if (configuration.workArounds.overrides(method, ee, origin) &&\n+                if (configuration.workArounds().overrides(method, ee, origin) &&\n@@ -949,1 +949,1 @@\n-        TypeElement searchResult = configuration.workArounds.searchClass(encl, className);\n+        TypeElement searchResult = configuration.workArounds().searchClass(encl, className);\n@@ -958,1 +958,1 @@\n-                    : configuration.workArounds.searchClass(encl, className);\n+                    : configuration.workArounds().searchClass(encl, className);\n@@ -1032,1 +1032,1 @@\n-            (configuration.extern.isExternal(typeElem) &&\n+            (configuration.extern().isExternal(typeElem) &&\n@@ -1267,2 +1267,2 @@\n-        final int tabLength = configuration.sourcetab;\n-        final String whitespace = configuration.tabSpaces;\n+        final int tabLength = configuration.sourcetab();\n+        final String whitespace = configuration.tabSpaces();\n@@ -1332,1 +1332,1 @@\n-                configuration.cmtUtils.setEnumValuesTree(configuration, e);\n+                configuration.cmtUtils().setEnumValuesTree(configuration, e);\n@@ -1336,1 +1336,1 @@\n-                configuration.cmtUtils.setEnumValueOfTree(configuration, e);\n+                configuration.cmtUtils().setEnumValueOfTree(configuration, e);\n@@ -1369,1 +1369,1 @@\n-            return configuration.workArounds.isDeprecated0(e);\n+            return configuration.workArounds().isDeprecated0(e);\n@@ -1382,1 +1382,1 @@\n-        JavacTypes jctypes = ((DocEnvImpl) configuration.docEnv).toolEnv.typeutils;\n+        JavacTypes jctypes = ((DocEnvImpl) configuration.docEnv()).toolEnv.typeutils;\n@@ -1431,1 +1431,1 @@\n-        if (configuration.javafx &&\n+        if (configuration.javafx() &&\n@@ -1444,1 +1444,1 @@\n-        if (!configuration.summarizeOverriddenMethods ||\n+        if (!configuration.summarizeOverriddenMethods() ||\n@@ -2347,1 +2347,1 @@\n-            if (!filter || configuration.docEnv.isSelected(te)) {\n+            if (!filter || configuration.docEnv().isSelected(te)) {\n@@ -2352,1 +2352,1 @@\n-            if (!filter || configuration.docEnv.isSelected(te)) {\n+            if (!filter || configuration.docEnv().isSelected(te)) {\n@@ -2357,1 +2357,1 @@\n-            if (!filter || configuration.docEnv.isSelected(te)) {\n+            if (!filter || configuration.docEnv().isSelected(te)) {\n@@ -2362,1 +2362,1 @@\n-            if (!filter || configuration.docEnv.isSelected(te)) {\n+            if (!filter || configuration.docEnv().isSelected(te)) {\n@@ -2455,1 +2455,1 @@\n-                    return configuration.docEnv.getFileKind(e) ==\n+                    return configuration.docEnv().getFileKind(e) ==\n@@ -2466,1 +2466,1 @@\n-                    return configuration.docEnv.isSelected(e) && hasSource(e);\n+                    return configuration.docEnv().isSelected(e) && hasSource(e);\n@@ -2472,1 +2472,1 @@\n-                    return configuration.docEnv.isSelected(e);\n+                    return configuration.docEnv().isSelected(e);\n@@ -2561,1 +2561,1 @@\n-        return cve.constantValueExpression(configuration.workArounds, ve);\n+        return cve.constantValueExpression(configuration.workArounds(), ve);\n@@ -2685,1 +2685,1 @@\n-        return configuration.docEnv.isIncluded(e);\n+        return configuration.docEnv().isIncluded(e);\n@@ -2981,1 +2981,1 @@\n-        duo = configuration.cmtUtils.getSyntheticCommentDuo(e);\n+        duo = configuration.cmtUtils().getSyntheticCommentDuo(e);\n@@ -2985,1 +2985,1 @@\n-        Map<Element, TreePath> elementToTreePath = configuration.workArounds.getElementToTreePath();\n+        Map<Element, TreePath> elementToTreePath = configuration.workArounds().getElementToTreePath();\n@@ -3014,1 +3014,1 @@\n-                duo = configuration.cmtUtils.getHtmlCommentDuo(element); \/\/ html source\n+                duo = configuration.cmtUtils().getHtmlCommentDuo(element); \/\/ html source\n@@ -3017,1 +3017,1 @@\n-            duo = configuration.cmtUtils.getSyntheticCommentDuo(element);\n+            duo = configuration.cmtUtils().getSyntheticCommentDuo(element);\n@@ -3040,1 +3040,1 @@\n-                configuration.workArounds.runDocLint(path);\n+                configuration.workArounds().runDocLint(path);\n@@ -3061,1 +3061,1 @@\n-            DocCommentTree dct = configuration.cmtUtils.parse(\n+            DocCommentTree dct = configuration.cmtUtils().parse(\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-        utils = configuration.utils;\n+        utils = configuration.utils();\n@@ -442,1 +442,1 @@\n-        Elements elementUtils = config.docEnv.getElementUtils();\n+        Elements elementUtils = config.docEnv().getElementUtils();\n@@ -597,1 +597,1 @@\n-        Elements elementUtils = config.docEnv.getElementUtils();\n+        Elements elementUtils = config.docEnv().getElementUtils();\n@@ -655,1 +655,1 @@\n-                if (config.nodeprecated && utils.isDeprecated(e)) {\n+                if (config.nodeprecated() && utils.isDeprecated(e)) {\n@@ -795,1 +795,1 @@\n-        if (!config.javafx)\n+        if (!config.javafx())\n@@ -798,1 +798,1 @@\n-        PropertyUtils pUtils = config.propertyUtils;\n+        PropertyUtils pUtils = config.propertyUtils();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-            tlabel.addContent(configuration.utils.getSimpleName(typeElement));\n+            tlabel.addContent(configuration.utils().getSimpleName(typeElement));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/links\/LinkInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,188 @@\n+\/*\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8259530\n+ * @summary Generated docs contain MIT\/GPL-licenced works without reproducing the licence\n+ * @library  \/tools\/lib ..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox JavadocTester\n+ * @run main TestLegalNotices\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+\/\/ import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestLegalNotices extends JavadocTester {\n+    public static void main(String... args) throws Exception {\n+        TestLegalNotices tester = new TestLegalNotices();\n+        tester.runTests(m -> new Object[]{Path.of(m.getName())});\n+    }\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    enum OptionKind {\n+        UNSET, DEFAULT, NONE, DIR\n+    }\n+\n+    enum IndexKind {\n+        INDEX, NO_INDEX\n+    }\n+\n+\n+    @Test\n+    public void testCombo(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"package p; public class C { }\");\n+        Path legal = base.resolve(\"toy-legal\");\n+        tb.writeFile(legal.resolve(\"TOY-LICENSE\"), \"This is a demo license.\");\n+\n+        for (var optionKind : OptionKind.values()) {\n+            for (var indexKind : IndexKind.values()) {\n+                test(base, src, legal, optionKind, indexKind);\n+            }\n+        }\n+    }\n+\n+    void test(Path base, Path src, Path legal, OptionKind optionKind, IndexKind indexKind) throws IOException {\n+        System.out.println(\"testing \" + optionKind + \" \" + indexKind);\n+        Path out = base.resolve(optionKind + \"-\" + indexKind).resolve(\"out\");\n+        List<String> args = new ArrayList<>();\n+        args.addAll(List.of(\n+                \"-d\", out.toString()));\n+\n+        if (indexKind == IndexKind.NO_INDEX) {\n+            args.add(\"-noindex\");\n+        }\n+\n+        args.addAll(List.of(\n+                \"-Xdoclint:-missing\",\n+                \"--source-path\", src.toString(),\n+                \"p\"));\n+\n+        String value = null;\n+        switch (optionKind) {\n+            case UNSET:\n+                value = null;\n+                break;\n+            case DEFAULT:\n+                value = \"default\";\n+                break;\n+            case NONE:\n+                value = \"none\";\n+                break;\n+            case DIR:\n+                value=  legal.toString();\n+                break;\n+        }\n+        if (value != null) {\n+            args.addAll(List.of(\"--legal-notices\", value));\n+        }\n+        javadoc(args.toArray(new String[0]));\n+\n+        Set<Path> expectFiles = getExpectFiles(optionKind, indexKind, legal);\n+        Set<Path> foundFiles = listFiles(out.resolve(\"legal\"));\n+\n+        checking(\"Checking legal notice files\");\n+        super.out.println(\"Expected: \" + expectFiles);\n+        super.out.println(\"   Found: \" + foundFiles);\n+        if (foundFiles.equals(expectFiles)) {\n+            passed(\"Found all expected files\");\n+        }\n+    }\n+\n+    Set<Path> getExpectFiles(OptionKind optionKind, IndexKind indexKind, Path legal) throws IOException {\n+        switch (optionKind) {\n+            case UNSET:\n+            case DEFAULT:\n+                Path javaHome = Path.of(System.getProperty(\"java.home\"));\n+                Path legal_javadoc = javaHome.resolve(\"legal\").resolve(\"jdk.javadoc\");\n+                return listFiles(legal_javadoc, p -> {\n+                        switch (indexKind) {\n+                            case INDEX:\n+                                return true;\n+                            case NO_INDEX:\n+                                return !p.getFileName().toString().contains(\"jquery\");\n+                            default:\n+                               throw new AssertionError(\"Should not reach\");\n+                        } } );\n+\n+\/*\n+                return listFiles(legal_javadoc, p -> {\n+                        if (indexKind==IndexKind.INDEX) {\n+                            return true;\n+                        }\n+                        else if (indexKind==IndexKind.NO_INDEX) {\n+                            return !p.getFileName().toString().contains(\"jquery\");\n+                        }\n+                        else {\n+                            return false;\n+                        } } );\n+*\/\n+\n+\/*\n+                return listFiles(legal_javadoc, p ->\n+                        (indexKind==IndexKind.INDEX) ? true\n+                      : (indexKind==IndexKind.NO_INDEX) ? !p.getFileName().toString().contains(\"jquery\") : false);\n+*\/\n+\n+            case NONE:\n+                return Collections.emptySet();\n+            case DIR:\n+                return listFiles(legal);\n+        }\n+        throw new IllegalStateException();\n+    }\n+\n+    Set<Path> listFiles(Path dir) throws IOException {\n+        return listFiles(dir, p -> true);\n+    }\n+\n+    Set<Path> listFiles(Path dir, Predicate<Path> filter) throws IOException {\n+        if (!Files.exists(dir)) {\n+            return Collections.emptySet();\n+        }\n+\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir)) {\n+            Set<Path> files = new TreeSet<>();\n+            for (Path p : ds) {\n+                if (!Files.isDirectory(p) && filter.test(p)) {\n+                    files.add(p.getFileName());\n+                }\n+            }\n+            return files;\n+        }\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLegalNotices\/TestLegalNotices.java","additions":188,"deletions":0,"binary":false,"changes":188,"status":"added"},{"patch":"@@ -171,2 +171,2 @@\n-            \/\/ ignore this system property name\n-            if (ck.equals(\"javadoc.internal.show.taglets\"))\n+            \/\/ ignore these system property names\n+            if (ck.equals(\"javadoc.internal.show.taglets\") || ck.equals(\"javadoc.legal-notices\"))\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckResourceKeys.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -152,1 +152,3 @@\n-            Set<String> unexpected = new TreeSet<String>(foundFiles);\n+            Set<String> unexpected = foundFiles.stream()\n+                    .filter(p -> !p.startsWith(\"legal\"))\n+                    .collect(Collectors.toCollection(TreeSet::new));\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/api\/basic\/APITest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -152,1 +152,3 @@\n-            Set<String> unexpected = new TreeSet<String>(foundFiles);\n+            Set<String> unexpected = foundFiles.stream()\n+                    .filter(p -> !p.startsWith(\"legal\"))\n+                    .collect(Collectors.toCollection(TreeSet::new));\n","filename":"test\/langtools\/tools\/javadoc\/api\/basic\/APITest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}