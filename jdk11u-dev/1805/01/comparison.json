{"files":[{"patch":"@@ -146,1 +146,1 @@\n-                configuration.doctitle), includeScript, body);\n+                configuration.doctitle()), includeScript, body);\n@@ -175,1 +175,1 @@\n-                configuration.doctitle), includeScript, body);\n+                configuration.doctitle()), includeScript, body);\n@@ -263,2 +263,2 @@\n-        if (configuration.doctitle.length() > 0) {\n-            Content title = new RawHtml(configuration.doctitle);\n+        if (configuration.doctitle().length() > 0) {\n+            Content title = new RawHtml(configuration.doctitle());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractModuleIndexWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-                configuration.doctitle), includeScript, body);\n+                configuration.doctitle()), includeScript, body);\n@@ -179,2 +179,2 @@\n-        if (configuration.doctitle.length() > 0) {\n-            Content title = new RawHtml(configuration.doctitle);\n+        if (configuration.doctitle().length() > 0) {\n+            Content title = new RawHtml(configuration.doctitle());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractPackageIndexWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -115,2 +115,2 @@\n-        if (configuration.windowtitle.length() > 0) {\n-            printFramesDocument(configuration.windowtitle, body);\n+        if (configuration.windowtitle().length() > 0) {\n+            printFramesDocument(configuration.windowtitle(), body);\n@@ -136,1 +136,1 @@\n-                .setCharset(configuration.charset)\n+                .setCharset(configuration.charset())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FrameOutputWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-        if (configuration.createoverview) {\n+        if (configuration.createoverview()) {\n@@ -292,1 +292,1 @@\n-        if (configuration.classuse) {\n+        if (configuration.classuse()) {\n@@ -309,1 +309,1 @@\n-        if (configuration.createtree) {\n+        if (configuration.createtree()) {\n@@ -333,1 +333,1 @@\n-        if (!(configuration.nodeprecatedlist || configuration.nodeprecated)) {\n+        if (!(configuration.nodeprecatedlist() || configuration.nodeprecated)) {\n@@ -352,1 +352,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -354,1 +354,1 @@\n-            if (configuration.splitindex) {\n+            if (configuration.splitindex()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    public String header = \"\";\n+    private String header = \"\";\n@@ -93,1 +93,1 @@\n-    public String packagesheader = \"\";\n+    private String packagesheader = \"\";\n@@ -98,1 +98,1 @@\n-    public String footer = \"\";\n+    private String footer = \"\";\n@@ -103,1 +103,1 @@\n-    public String doctitle = \"\";\n+    private String doctitle = \"\";\n@@ -108,1 +108,1 @@\n-    public String windowtitle = \"\";\n+    private String windowtitle = \"\";\n@@ -113,1 +113,1 @@\n-    public String top = \"\";\n+    private String top = \"\";\n@@ -118,1 +118,1 @@\n-    public String bottom = \"\";\n+    private String bottom = \"\";\n@@ -123,1 +123,6 @@\n-    public String helpfile = \"\";\n+    private String helpfile = \"\";\n+\n+    \/**\n+     * Argument for command-line option \"--legal-notices\".\n+     *\/\n+    private String legalnotices = \"\";\n@@ -128,1 +133,1 @@\n-    public String stylesheetfile = \"\";\n+    private String stylesheetfile = \"\";\n@@ -133,1 +138,1 @@\n-    public List<String> additionalStylesheets = new ArrayList<>();\n+    private List<String> additionalStylesheets = new ArrayList<>();\n@@ -138,1 +143,1 @@\n-    public String docrootparent = \"\";\n+    private String docrootparent = \"\";\n@@ -143,1 +148,1 @@\n-    public boolean nohelp = false;\n+    private boolean nohelp = false;\n@@ -149,1 +154,1 @@\n-    public boolean splitindex = false;\n+    private boolean splitindex = false;\n@@ -154,1 +159,1 @@\n-    public boolean createindex = true;\n+    private boolean createindex = true;\n@@ -159,1 +164,1 @@\n-    public boolean classuse = false;\n+    private boolean classuse = false;\n@@ -164,1 +169,1 @@\n-    public boolean createtree = true;\n+    private boolean createtree = true;\n@@ -169,1 +174,1 @@\n-    public String charset = null;\n+    private String charset = null;\n@@ -175,1 +180,1 @@\n-    public boolean nodeprecatedlist = false;\n+    private boolean nodeprecatedlist = false;\n@@ -180,1 +185,1 @@\n-    public boolean nonavbar = false;\n+    private boolean nonavbar = false;\n@@ -191,1 +196,1 @@\n-    public String overviewpath = null;\n+    private String overviewpath = null;\n@@ -197,1 +202,1 @@\n-    public boolean createoverview = false;\n+    private boolean createoverview = false;\n@@ -659,0 +664,7 @@\n+            new Option(resources, \"--legal-notices\", 1) {\n+                @Override\n+                public boolean process(String opt,  List<String> args) {\n+                    legalnotices = args.get(0);\n+                    return true;\n+                }\n+            },\n@@ -873,0 +885,165 @@\n+\n+    \/**\n+     * Argument for command line option \"-header\".\n+     *\/\n+    public String header() {\n+        return header;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-packagesheader\".\n+     *\/\n+    public String packagesheader() {\n+        return packagesheader;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-footer\".\n+     *\/\n+    public String footer() {\n+        return footer;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-doctitle\".\n+     *\/\n+    public String doctitle() {\n+        return doctitle;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-windowtitle\".\n+     *\/\n+    public String windowtitle() {\n+        return windowtitle;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-top\".\n+     *\/\n+    public String top() {\n+        return top;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-bottom\".\n+     *\/\n+    public String bottom() {\n+        return bottom;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-helpfile\".\n+     *\/\n+    public String helpfile() {\n+        return helpfile;\n+    }\n+\n+    \/**\n+     * Argument for command-line option \"--legal-notices\".\n+     *\/\n+    public String legalnotices() {\n+        return legalnotices;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-stylesheetfile\".\n+     *\/\n+    public String stylesheetfile() {\n+        return stylesheetfile;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"--add-stylesheet\".\n+     *\/\n+    public List<String> additionalStylesheets() {\n+        return additionalStylesheets;\n+    }\n+\n+    \/**\n+     * Argument for command line option \"-Xdocrootparent\".\n+     *\/\n+    public String docrootparent() {\n+        return docrootparent;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nohelp\" is used. Default value is false.\n+     *\/\n+    public boolean nohelp() {\n+        return nohelp;\n+    }\n+\n+    \/**\n+     * True if command line option \"-splitindex\" is used. Default value is\n+     * false.\n+     *\/\n+    public boolean splitindex() {\n+        return splitindex;\n+    }\n+\n+    \/**\n+     * False if command line option \"-noindex\" is used. Default value is true.\n+     *\/\n+    public boolean createindex() {\n+        return createindex;\n+    }\n+\n+    \/**\n+     * True if command line option \"-use\" is used. Default value is false.\n+     *\/\n+    public boolean classuse() {\n+        return classuse;\n+    }\n+\n+    \/**\n+     * False if command line option \"-notree\" is used. Default value is true.\n+     *\/\n+    public boolean createtree() {\n+        return createtree;\n+    }\n+\n+    \/**\n+     * The META charset tag used for cross-platform viewing.\n+     *\/\n+    public String charset() {\n+        return charset;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nodeprecated\" is used. Default value is\n+     * false.\n+     *\/\n+    public boolean nodeprecatedlist() {\n+        return nodeprecatedlist;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nonavbar\" is used. Default value is false.\n+     *\/\n+    public boolean nonavbar() {\n+        return nonavbar;\n+    }\n+\n+    \/**\n+     * True if command line option \"-nooverview\" is used. Default value is\n+     * false\n+     *\/\n+    public boolean nooverview() {\n+        return nooverview;\n+    }\n+\n+    \/**\n+     * The overview path specified with \"-overview\" flag.\n+     *\/\n+    public String overviewpath() {\n+        return overviewpath;\n+    }\n+\n+    \/**\n+     * This is true if option \"-overview\" is used or option \"-overview\" is not\n+     * used and number of packages is more than one.\n+     *\/\n+    public boolean createoverview() {\n+        return createoverview;\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":198,"deletions":21,"binary":false,"changes":219,"status":"modified"},{"patch":"@@ -28,0 +28,7 @@\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.Writer;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.InvalidPathException;\n+import java.nio.file.Path;\n@@ -128,3 +135,3 @@\n-        performCopy(configuration.helpfile);\n-        performCopy(configuration.stylesheetfile);\n-        for (String stylesheet : configuration.additionalStylesheets) {\n+        performCopy(configuration.helpfile());\n+        performCopy(configuration.stylesheetfile());\n+        for (String stylesheet : configuration.additionalStylesheets()) {\n@@ -134,1 +141,1 @@\n-        if (configuration.classuse) {\n+        if (configuration.classuse()) {\n@@ -139,1 +146,1 @@\n-        if (configuration.createtree) {\n+        if (configuration.createtree()) {\n@@ -142,1 +149,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -144,1 +151,1 @@\n-            if (configuration.splitindex) {\n+            if (configuration.splitindex()) {\n@@ -156,1 +163,1 @@\n-        if (!(configuration.nodeprecatedlist || nodeprecated)) {\n+        if (!(configuration.nodeprecatedlist() || nodeprecated)) {\n@@ -167,1 +174,1 @@\n-        if (configuration.createoverview) {\n+        if (configuration.createoverview()) {\n@@ -176,1 +183,1 @@\n-            if (configuration.createoverview) {\n+            if (configuration.createoverview()) {\n@@ -183,1 +190,1 @@\n-        if (configuration.helpfile.isEmpty() && !configuration.nohelp) {\n+        if (configuration.helpfile().isEmpty() && !configuration.nohelp()) {\n@@ -189,1 +196,1 @@\n-        if (configuration.stylesheetfile.length() == 0) {\n+        if (configuration.stylesheetfile().length() == 0) {\n@@ -195,1 +202,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -209,0 +216,2 @@\n+\n+        copyLegalFiles(configuration.createindex());\n@@ -231,0 +240,40 @@\n+    private void copyLegalFiles(boolean includeJQuery) throws DocletException {\n+        Path legalNoticesDir;\n+        String legalNotices = configuration.legalnotices();\n+        switch (legalNotices) {\n+            case \"\":\n+            case \"default\" :\n+                Path javaHome = Path.of(System.getProperty(\"java.home\"));\n+                legalNoticesDir = javaHome.resolve(\"legal\").resolve(getClass().getModule().getName());\n+                break;\n+            case \"none\":\n+                return;\n+            default:\n+                try {\n+                    legalNoticesDir = Path.of(legalNotices);\n+                } catch (InvalidPathException e) {\n+                    messages.error(\"doclet.Error_invalid_path_for_legal_notices\",\n+                            legalNotices, e.getMessage());\n+                    return;\n+                }\n+        }\n+\n+        if (Files.exists(legalNoticesDir)) {\n+            try (DirectoryStream<Path> ds = Files.newDirectoryStream(legalNoticesDir)) {\n+                for (Path entry: ds) {\n+                    if (!Files.isRegularFile(entry)) {\n+                        continue;\n+                    }\n+                    if (entry.getFileName().toString().startsWith(\"jquery\") && !includeJQuery) {\n+                        continue;\n+                    }\n+                    DocPath filePath = DocPaths.LEGAL.resolve(entry.getFileName().toString());\n+                    DocFile df = DocFile.createFileForOutput(configuration, filePath);\n+                    df.copyFile(DocFile.createFileForInput(configuration, entry));\n+                }\n+            } catch (IOException e) {\n+                messages.error(\"doclet.Error_copying_legal_notices\", e);\n+            }\n+        }\n+    }\n+\n@@ -299,1 +348,1 @@\n-                if (configuration.createtree) {\n+                if (configuration.createtree()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":63,"deletions":14,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-            if (configuration.docrootparent.length() > 0 && htmlstr.startsWith(\"\/..\", prevEnd)) {\n+            if (configuration.docrootparent().length() > 0 && htmlstr.startsWith(\"\/..\", prevEnd)) {\n@@ -247,1 +247,1 @@\n-                buf.append(configuration.docrootparent);\n+                buf.append(configuration.docrootparent());\n@@ -423,1 +423,1 @@\n-                .setCharset(configuration.charset)\n+                .setCharset(configuration.charset())\n@@ -427,1 +427,1 @@\n-                .setIndex(configuration.createindex, mainBodyScript);\n+                .setIndex(configuration.createindex(), mainBodyScript);\n@@ -441,2 +441,2 @@\n-        if (configuration.windowtitle.length() > 0) {\n-            title += \" (\" + configuration.windowtitle  + \")\";\n+        if (configuration.windowtitle().length() > 0) {\n+            title += \" (\" + configuration.windowtitle()  + \")\";\n@@ -456,1 +456,1 @@\n-            content = replaceDocRootDir(configuration.header);\n+            content = replaceDocRootDir(configuration.header());\n@@ -458,2 +458,2 @@\n-            if (configuration.footer.length() != 0) {\n-                content = replaceDocRootDir(configuration.footer);\n+            if (configuration.footer().length() != 0) {\n+                content = replaceDocRootDir(configuration.footer());\n@@ -461,1 +461,1 @@\n-                content = replaceDocRootDir(configuration.header);\n+                content = replaceDocRootDir(configuration.header());\n@@ -474,1 +474,1 @@\n-        Content top = new RawHtml(replaceDocRootDir(configuration.top));\n+        Content top = new RawHtml(replaceDocRootDir(configuration.top()));\n@@ -484,1 +484,1 @@\n-        Content bottom = new RawHtml(replaceDocRootDir(configuration.bottom));\n+        Content bottom = new RawHtml(replaceDocRootDir(configuration.bottom()));\n@@ -1359,2 +1359,2 @@\n-                            if (text.startsWith(\"\/..\") && !configuration.docrootparent.isEmpty()) {\n-                                result.addContent(configuration.docrootparent);\n+                            if (text.startsWith(\"\/..\") && !configuration.docrootparent().isEmpty()) {\n+                                result.addContent(configuration.docrootparent());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -83,2 +83,2 @@\n-        String title = (configuration.windowtitle.length() > 0)\n-                ? configuration.windowtitle\n+        String title = (configuration.windowtitle().length() > 0)\n+                ? configuration.windowtitle()\n@@ -88,1 +88,1 @@\n-                .setCharset(configuration.charset)\n+                .setCharset(configuration.charset())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -129,2 +129,2 @@\n-        if (configuration.packagesheader.length() > 0) {\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader));\n+        if (configuration.packagesheader().length() > 0) {\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader()));\n@@ -132,1 +132,1 @@\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.header));\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.header()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexFrameWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -160,2 +160,2 @@\n-        if (configuration.packagesheader.length() > 0) {\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader));\n+        if (configuration.packagesheader().length() > 0) {\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader()));\n@@ -163,1 +163,1 @@\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.header));\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.header()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModulePackageIndexFrameWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -127,2 +127,2 @@\n-        if (configuration.packagesheader.length() > 0) {\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader));\n+        if (configuration.packagesheader().length() > 0) {\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.packagesheader()));\n@@ -130,1 +130,1 @@\n-            headerContent = new RawHtml(replaceDocRootDir(configuration.header));\n+            headerContent = new RawHtml(replaceDocRootDir(configuration.header()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexFrameWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-        String filename = configuration.stylesheetfile;\n+        String filename = configuration.stylesheetfile();\n@@ -248,1 +248,1 @@\n-        List<String> stylesheets = configuration.additionalStylesheets;\n+        List<String> stylesheets = configuration.additionalStylesheets();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-        if (configuration.createindex && !tagText.isEmpty()) {\n+        if (configuration.createindex() && !tagText.isEmpty()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-                addActivePageLink(tree, contents.overviewLabel, configuration.createoverview);\n+                addActivePageLink(tree, contents.overviewLabel, configuration.createoverview());\n@@ -268,1 +268,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -279,1 +279,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -290,1 +290,1 @@\n-                if (configuration.classuse) {\n+                if (configuration.classuse()) {\n@@ -294,1 +294,1 @@\n-                if (configuration.createtree) {\n+                if (configuration.createtree()) {\n@@ -307,1 +307,1 @@\n-                if (configuration.classuse) {\n+                if (configuration.classuse()) {\n@@ -311,1 +311,1 @@\n-                if (configuration.createtree) {\n+                if (configuration.createtree()) {\n@@ -329,1 +329,1 @@\n-                addActivePageLink(tree, contents.useLabel, configuration.classuse);\n+                addActivePageLink(tree, contents.useLabel, configuration.classuse());\n@@ -351,2 +351,2 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n-                addActivePageLink(tree, contents.treeLabel, configuration.createtree);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n+                addActivePageLink(tree, contents.treeLabel, configuration.createtree());\n@@ -364,1 +364,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -368,1 +368,1 @@\n-                            || configuration.nodeprecatedlist));\n+                            || configuration.nodeprecatedlist()));\n@@ -373,1 +373,1 @@\n-                    addActivePageLink(tree, contents.indexLabel, configuration.createindex);\n+                    addActivePageLink(tree, contents.indexLabel, configuration.createindex());\n@@ -378,1 +378,1 @@\n-                    addActivePageLink(tree, contents.helpLabel, !configuration.nohelp);\n+                    addActivePageLink(tree, contents.helpLabel, !configuration.nohelp());\n@@ -391,1 +391,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -402,1 +402,1 @@\n-                addPageLabel(tree, contents.useLabel, configuration.classuse);\n+                addPageLabel(tree, contents.useLabel, configuration.classuse());\n@@ -845,1 +845,1 @@\n-        if (configuration.createoverview) {\n+        if (configuration.createoverview()) {\n@@ -911,1 +911,1 @@\n-        if (configuration.createtree) {\n+        if (configuration.createtree()) {\n@@ -921,1 +921,1 @@\n-        if (!(configuration.nodeprecated || configuration.nodeprecatedlist)) {\n+        if (!(configuration.nodeprecated || configuration.nodeprecatedlist())) {\n@@ -928,1 +928,1 @@\n-        if (configuration.createindex) {\n+        if (configuration.createindex()) {\n@@ -930,1 +930,1 @@\n-                    (configuration.splitindex\n+                    (configuration.splitindex()\n@@ -938,2 +938,2 @@\n-        if (!configuration.nohelp) {\n-            String helpfile = configuration.helpfile;\n+        if (!configuration.nohelp()) {\n+            String helpfile = configuration.helpfile();\n@@ -1014,1 +1014,1 @@\n-        if (!configuration.nonavbar) {\n+        if (!configuration.nonavbar()) {\n@@ -1050,1 +1050,1 @@\n-            if (!configuration.nonavbar) {\n+            if (!configuration.nonavbar()) {\n@@ -1064,1 +1064,1 @@\n-            if (top && configuration.createindex) {\n+            if (top && configuration.createindex()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Navigation.java","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -238,0 +238,5 @@\n+# 0: an exception\n+doclet.Error_copying_legal_notices=Error while copying legal notices: {0}\n+# 0: the path; 1: the detail message for the exception\n+doclet.Error_invalid_path_for_legal_notices=Invalid path ''{0}'' for legal notices: {1}\n+\n@@ -324,0 +329,5 @@\n+doclet.usage.legal-notices.parameters=\\\n+    'default' | 'none' | <directory>\n+doclet.usage.legal-notices.description=\\\n+    Control legal notices in the generated output\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.nio.file.Path;\n@@ -64,0 +65,5 @@\n+    \/** Create a DocFile for a file that will be opened for reading. *\/\n+    public static DocFile createFileForInput(BaseConfiguration configuration, Path file) {\n+        return DocFileFactory.getFactory(configuration).createFileForInput(file);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFile.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.nio.file.Path;\n@@ -81,0 +82,3 @@\n+    \/** Create a DocFile for a file that will be opened for reading. *\/\n+    abstract DocFile createFileForInput(Path file);\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFileFactory.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    \/** The name of the directory for the jQuery. *\/\n+    \/** The name of the directory for the jQuery files. *\/\n@@ -133,0 +133,3 @@\n+    \/** The name of the directory for legal files. *\/\n+    public static final DocPath LEGAL = DocPath.create(\"legal\");\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPaths.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -112,0 +112,5 @@\n+    @Override\n+    public DocFile createFileForInput(Path file) {\n+        return new StandardDocFile(file);\n+    }\n+\n@@ -143,1 +148,1 @@\n-        private StandardDocFile(Path file) {\n+        StandardDocFile(Path file) {\n@@ -148,1 +153,1 @@\n-        private StandardDocFile(Location location, DocPath path) {\n+        StandardDocFile(Location location, DocPath path) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/StandardDocFileFactory.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,188 @@\n+\/*\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8259530\n+ * @summary Generated docs contain MIT\/GPL-licenced works without reproducing the licence\n+ * @library  \/tools\/lib ..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox JavadocTester\n+ * @run main TestLegalNotices\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+\/\/ import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestLegalNotices extends JavadocTester {\n+    public static void main(String... args) throws Exception {\n+        TestLegalNotices tester = new TestLegalNotices();\n+        tester.runTests(m -> new Object[]{Path.of(m.getName())});\n+    }\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    enum OptionKind {\n+        UNSET, DEFAULT, NONE, DIR\n+    }\n+\n+    enum IndexKind {\n+        INDEX, NO_INDEX\n+    }\n+\n+\n+    @Test\n+    public void testCombo(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"package p; public class C { }\");\n+        Path legal = base.resolve(\"toy-legal\");\n+        tb.writeFile(legal.resolve(\"TOY-LICENSE\"), \"This is a demo license.\");\n+\n+        for (var optionKind : OptionKind.values()) {\n+            for (var indexKind : IndexKind.values()) {\n+                test(base, src, legal, optionKind, indexKind);\n+            }\n+        }\n+    }\n+\n+    void test(Path base, Path src, Path legal, OptionKind optionKind, IndexKind indexKind) throws IOException {\n+        System.out.println(\"testing \" + optionKind + \" \" + indexKind);\n+        Path out = base.resolve(optionKind + \"-\" + indexKind).resolve(\"out\");\n+        List<String> args = new ArrayList<>();\n+        args.addAll(List.of(\n+                \"-d\", out.toString()));\n+\n+        if (indexKind == IndexKind.NO_INDEX) {\n+            args.add(\"-noindex\");\n+        }\n+\n+        args.addAll(List.of(\n+                \"-Xdoclint:-missing\",\n+                \"--source-path\", src.toString(),\n+                \"p\"));\n+\n+        String value = null;\n+        switch (optionKind) {\n+            case UNSET:\n+                value = null;\n+                break;\n+            case DEFAULT:\n+                value = \"default\";\n+                break;\n+            case NONE:\n+                value = \"none\";\n+                break;\n+            case DIR:\n+                value=  legal.toString();\n+                break;\n+        }\n+        if (value != null) {\n+            args.addAll(List.of(\"--legal-notices\", value));\n+        }\n+        javadoc(args.toArray(new String[0]));\n+\n+        Set<Path> expectFiles = getExpectFiles(optionKind, indexKind, legal);\n+        Set<Path> foundFiles = listFiles(out.resolve(\"legal\"));\n+\n+        checking(\"Checking legal notice files\");\n+        super.out.println(\"Expected: \" + expectFiles);\n+        super.out.println(\"   Found: \" + foundFiles);\n+        if (foundFiles.equals(expectFiles)) {\n+            passed(\"Found all expected files\");\n+        }\n+    }\n+\n+    Set<Path> getExpectFiles(OptionKind optionKind, IndexKind indexKind, Path legal) throws IOException {\n+        switch (optionKind) {\n+            case UNSET:\n+            case DEFAULT:\n+                Path javaHome = Path.of(System.getProperty(\"java.home\"));\n+                Path legal_javadoc = javaHome.resolve(\"legal\").resolve(\"jdk.javadoc\");\n+                return listFiles(legal_javadoc, p -> {\n+                        switch (indexKind) {\n+                            case INDEX:\n+                                return true;\n+                            case NO_INDEX:\n+                                return !p.getFileName().toString().contains(\"jquery\");\n+                            default:\n+                               throw new AssertionError(\"Should not reach\");\n+                        } } );\n+\n+\/*\n+                return listFiles(legal_javadoc, p -> {\n+                        if (indexKind==IndexKind.INDEX) {\n+                            return true;\n+                        }\n+                        else if (indexKind==IndexKind.NO_INDEX) {\n+                            return !p.getFileName().toString().contains(\"jquery\");\n+                        }\n+                        else {\n+                            return false;\n+                        } } );\n+*\/\n+\n+\/*\n+                return listFiles(legal_javadoc, p ->\n+                        (indexKind==IndexKind.INDEX) ? true\n+                      : (indexKind==IndexKind.NO_INDEX) ? !p.getFileName().toString().contains(\"jquery\") : false);\n+*\/\n+\n+            case NONE:\n+                return Collections.emptySet();\n+            case DIR:\n+                return listFiles(legal);\n+        }\n+        throw new IllegalStateException();\n+    }\n+\n+    Set<Path> listFiles(Path dir) throws IOException {\n+        return listFiles(dir, p -> true);\n+    }\n+\n+    Set<Path> listFiles(Path dir, Predicate<Path> filter) throws IOException {\n+        if (!Files.exists(dir)) {\n+            return Collections.emptySet();\n+        }\n+\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir)) {\n+            Set<Path> files = new TreeSet<>();\n+            for (Path p : ds) {\n+                if (!Files.isDirectory(p) && filter.test(p)) {\n+                    files.add(p.getFileName());\n+                }\n+            }\n+            return files;\n+        }\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLegalNotices\/TestLegalNotices.java","additions":188,"deletions":0,"binary":false,"changes":188,"status":"added"},{"patch":"@@ -171,2 +171,2 @@\n-            \/\/ ignore this system property name\n-            if (ck.equals(\"javadoc.internal.show.taglets\"))\n+            \/\/ ignore these system property names\n+            if (ck.equals(\"javadoc.internal.show.taglets\") || ck.equals(\"javadoc.legal-notices\"))\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckResourceKeys.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -152,1 +152,3 @@\n-            Set<String> unexpected = new TreeSet<String>(foundFiles);\n+            Set<String> unexpected = foundFiles.stream()\n+                    .filter(p -> !p.startsWith(\"legal\"))\n+                    .collect(Collectors.toCollection(TreeSet::new));\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/api\/basic\/APITest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -152,1 +152,3 @@\n-            Set<String> unexpected = new TreeSet<String>(foundFiles);\n+            Set<String> unexpected = foundFiles.stream()\n+                    .filter(p -> !p.startsWith(\"legal\"))\n+                    .collect(Collectors.toCollection(TreeSet::new));\n","filename":"test\/langtools\/tools\/javadoc\/api\/basic\/APITest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}