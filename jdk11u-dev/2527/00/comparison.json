{"files":[{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 5025532\n+  @requires (os.family == \"windows\")\n+  @summary Tests that textarea replaces text correctly if the text contains\n+   line separators\n+  @key headful\n+*\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.TextArea;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class ReplaceRangeTest {\n+    static Frame f;\n+\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                f = new Frame(\"Test frame\");\n+                f.setSize(400, 400);\n+                f.setLayout(new GridLayout(3, 1));\n+\n+                TextArea textArea1 = new TextArea(5, 80);\n+                TextArea textArea2 = new TextArea(5, 80);\n+                TextArea textArea3 = new TextArea(5, 80);\n+                f.add(textArea1);\n+                f.add(textArea2);\n+                f.add(textArea3);\n+                f.setVisible(true);\n+\n+                textArea1.setText(\"01234\");\n+                textArea1.replaceRange(\"X\", 3, 4);\n+                textArea2.setText(\"0\\r\\n234\");\n+                textArea2.replaceRange(\"X\", 3, 4);\n+                textArea3.setText(\"0\\n\\n34\");\n+                textArea3.replaceRange(\"X\", 3, 4);\n+\n+                if (textArea1.getText().equals(\"012X4\") &&\n+                        textArea2.getText().equals(\"0\\r\\n2X4\") &&\n+                        textArea3.getText().equals(\"0\\n\\nX4\")) {\n+                    System.out.println(\"Test Pass\");\n+                    return;\n+                } else {\n+                    throw new RuntimeException(\"Test FAILED\");\n+                }\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/ReplaceRangeTest.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 4800187\n+  @requires (os.family == \"windows\")\n+  @summary REGRESSION:show the wrong selection when there are \\r characters in the text\n+  @key headful\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.IllegalComponentStateException;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.TextArea;\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class TextAreaCRLFAutoDetectTest {\n+    Frame f;\n+    TextArea ta1;\n+    TextArea ta2;\n+    Button b;\n+    boolean passed = true;\n+    boolean crlf = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        TextAreaCRLFAutoDetectTest crlfAutoDetectTest = new TextAreaCRLFAutoDetectTest();\n+        crlfAutoDetectTest.init();\n+        crlfAutoDetectTest.start();\n+    }\n+\n+    public void init() throws InterruptedException, InvocationTargetException {\n+        EventQueue.invokeAndWait(() -> {\n+            f = new Frame(\"TextAreaCRLFAutoDetectTest\");\n+            ta1 = new TextArea(5, 20);\n+            ta2 = new TextArea(5, 20);\n+            b = new Button(\"Click Me\");\n+            b.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent evt) {\n+                    ta1.setText(\"\");\n+                    ta2.setText(\"\");\n+                    System.out.println(\"--------------------------------\");\n+\n+                    String eoln = (crlf) ? \"\\r\\n\" : \"\\n\";\n+                    String s = eoln + \"123\" + eoln + \"567\" + eoln + \"90\" + eoln;\n+                    printString(\"            s=\", s);\n+                    ta1.setText(s);\n+                    printString(\"ta1.getText()=\", ta1.getText());\n+\n+                    s = \"67\" + eoln + \"9\";\n+                    ta1.select(6, 10);\n+\n+                    String s1 = ta1.getSelectedText();\n+                    printString(\"ta1.getSelectedText()=\", s1);\n+                    passed = passed && s.equals(s1);\n+\n+                    ta2.setText(s1);\n+                    printString(\"        ta2.getText()=\", s1);\n+                    passed = passed && s1.equals(ta2.getText());\n+\n+                    crlf = false;\n+                }\n+            });\n+\n+            f.setLayout(new FlowLayout());\n+            f.add(ta1);\n+            f.add(ta2);\n+            f.add(b);\n+            f.setLocation(300, 50);\n+            f.pack();\n+            f.setVisible(true);\n+        });\n+    }\n+\n+    public void start() throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+            robot.setAutoDelay(50);\n+            robot.waitForIdle();\n+\n+            Point pt = new Point(0, 0);\n+\n+            boolean drawn = false;\n+            while (!drawn) {\n+                try {\n+                    pt = b.getLocationOnScreen();\n+                } catch (IllegalComponentStateException icse) {\n+                    Thread.sleep(50);\n+                    continue;\n+                }\n+                drawn = true;\n+            }\n+\n+            for (int i = 0; i < 2; i++) {\n+                pt = b.getLocationOnScreen();\n+                robot.mouseMove(pt.x + b.getWidth() \/ 2,\n+                        pt.y + b.getHeight() \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                Thread.sleep(250);\n+            }\n+            if (!passed) {\n+                throw new RuntimeException(\"TextAreaCRLFAutoDetectTest FAILED.\");\n+            } else {\n+                System.out.println(\"TextAreaCRLFAutoDetectTest PASSED\");\n+            }\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"The test was not completed.\\n\\n\" + e);\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    void printString(String t, String s) {\n+        byte b[] = s.getBytes();\n+        String o = t;\n+        for (int i = 0; i < b.length; i++) {\n+            o += Byte.toString(b[i]) + \" \";\n+        }\n+        System.out.println(o);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaCRLFAutoDetectTest.java","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4072264\n+  @summary REGRESSION:Test to verify getSelectedText,\n+  getSelectedStart\/End in TextArea class\n+  @key headful\n+*\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.TextArea;\n+\n+public class TextLengthTest {\n+    static final int MY_SIZE = 100;\n+    static final int MY_START = 13;\n+    static final int MY_END = 47;\n+    TextArea ta;\n+    Frame f;\n+    int mySize;\n+    int myStart;\n+    int myEnd;\n+\n+    public static void main(String[] args) throws Exception {\n+        TextLengthTest textLengthTest = new TextLengthTest();\n+        textLengthTest.init();\n+        textLengthTest.start();\n+    }\n+\n+    public void init() throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            f = new Frame(\"TextLengthTest\");\n+            ta = new TextArea(15, 30);\n+            f.add(ta);\n+            f.setSize(400, 400);\n+            f.setVisible(true);\n+        });\n+    }\n+\n+    public void start() throws Exception {\n+        try {\n+            Robot r = new Robot();\n+            r.delay(1000);\n+            r.waitForIdle();\n+            EventQueue.invokeAndWait(() -> {\n+                StringBuffer bigStringBuffer = new StringBuffer();\n+\n+                for (int i = 1; i <= 10; i++) {\n+                    bigStringBuffer.append(\"abcdefghi\\n\");\n+                }\n+\n+                ta.setText(bigStringBuffer.toString());\n+\n+                mySize = bigStringBuffer.toString().length();\n+                System.out.println(\"String size = \" + mySize);\n+\n+                if (mySize != MY_SIZE) {\n+                    throw new Error(\"The string size is \" +\n+                            mySize + \"but it should be \" + MY_SIZE);\n+                }\n+\n+                ta.select(MY_START, MY_END);\n+\n+                String str = new String(ta.getSelectedText());\n+                str = str.toUpperCase();\n+\n+                myStart = ta.getSelectionStart();\n+                myEnd = ta.getSelectionEnd();\n+                System.out.println(\"Selected string start = \" + myStart);\n+                System.out.println(\"Selected string end = \" + myEnd);\n+\n+                if (myStart != MY_START) {\n+                    throw new Error(\"The selected text starts at \" +\n+                            mySize + \"but it should start at \" + MY_START);\n+                }\n+\n+                if (myEnd != MY_END) {\n+                    throw new Error(\"The selected text ends at \" +\n+                            myEnd + \"but it should end at \" + MY_END);\n+                }\n+\n+                ta.replaceRange(str, myStart, myEnd);\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+        System.out.println(\"Test Pass\");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextLengthTest.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 4260109\n+  @summary tests that the text limit is set to the maximum possible value\n+  @key headful\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+public class TextLimitTest {\n+    static Frame frame;\n+    static TextArea textarea;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                StringBuffer buffer = new StringBuffer();\n+                frame = new Frame(\"Text Limit Test\");\n+                textarea = new TextArea(3, 10);\n+                frame.setLayout(new BorderLayout());\n+                frame.add(textarea);\n+                frame.setSize(200, 200);\n+                frame.pack();\n+                frame.setVisible(true);\n+\n+                \/*\n+                 * The magic number 0xF700 was choosen because of the two reasons:\n+                 *  - it shouldn't be greater since on win95 (even in native win32 apps)\n+                 *    adding more than 0xF800 symbols to a textarea doesn't always work,\n+                 *  - it shouldn't be less since in this case we won't run in the stack\n+                 *    overflow on Win95 even if we use W2A allocating memory on the stack.\n+                 *\/\n+                for (int i = 0; i < 0xF700; i += 0x10) {\n+                    buffer.append(\"0123456789abcdef\");\n+                }\n+\n+                textarea.setText(buffer.toString());\n+                System.out.println(\"Text length before append: \" +\n+                        Integer.toString(textarea.getText().length(), 16));\n+\n+                textarea.append(\"0123456789abcdef\");\n+\n+                int len = textarea.getText().length();\n+                System.out.println(\"Text length after append: \" +\n+                        Integer.toString(len, 16));\n+                if (len != 0xF710) {\n+                    throw new RuntimeException(\"Test failed: textarea has \" +\n+                            \"wrong text limit!\");\n+                }\n+            });\n+            System.out.println(\"Test pass\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextLimitTest.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"}]}