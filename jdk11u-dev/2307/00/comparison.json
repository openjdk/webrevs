{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.Random;\n@@ -31,0 +32,1 @@\n+import jdk.test.lib.RandomFactory;\n@@ -39,0 +41,1 @@\n+ * @library \/test\/lib\n@@ -53,0 +56,2 @@\n+    private static final Random random = RandomFactory.getRandom();\n+    private static int preventLoopElision;\n@@ -69,1 +74,1 @@\n-        int runs = (int) Math.random() * 1000000;\n+        int runs = random.nextInt(1000000);\n@@ -75,0 +80,1 @@\n+        preventLoopElision = c;\n","filename":"test\/jdk\/java\/util\/logging\/DrainFindDeadlockTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+ * @library  \/test\/lib\n@@ -56,0 +57,1 @@\n+import java.util.Random;\n@@ -58,0 +60,1 @@\n+import jdk.test.lib.RandomFactory;\n@@ -61,0 +64,3 @@\n+    private static int preventLoopElision;\n+    private static final Random random = RandomFactory.getRandom();\n+\n@@ -62,1 +68,1 @@\n-        int runs = (int) Math.random() * 1000000;\n+        int runs = random.nextInt(1000000);\n@@ -68,0 +74,1 @@\n+        preventLoopElision = c;\n","filename":"test\/jdk\/java\/util\/logging\/LoggingDeadlock.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}