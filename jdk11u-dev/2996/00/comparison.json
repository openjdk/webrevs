{"files":[{"patch":"@@ -0,0 +1,68 @@\n+#\n+# Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+name: 'Build JTReg'\n+description: 'Build JTReg'\n+\n+runs:\n+  using: composite\n+  steps:\n+    - name: 'Get JTReg version configuration'\n+      id: version\n+      uses: .\/.github\/actions\/config\n+      with:\n+        var: JTREG_VERSION\n+\n+    - name: 'Check cache for already built JTReg'\n+      id: get-cached\n+      uses: actions\/cache@v4\n+      with:\n+        path: jtreg\/installed\n+        key: jtreg-${{ steps.version.outputs.value }}\n+\n+    - name: 'Checkout the JTReg source'\n+      uses: actions\/checkout@v4\n+      with:\n+        repository: openjdk\/jtreg\n+        ref: jtreg-${{ steps.version.outputs.value }}\n+        path: jtreg\/src\n+      if: (steps.get-cached.outputs.cache-hit != 'true')\n+\n+    - name: 'Build JTReg'\n+      run: |\n+        # Build JTReg and move files to the proper locations\n+        bash make\/build.sh --jdk \"$JAVA_HOME_11_X64\"\n+        mkdir ..\/installed\n+        mv build\/images\/jtreg\/* ..\/installed\n+      working-directory: jtreg\/src\n+      shell: bash\n+      if: (steps.get-cached.outputs.cache-hit != 'true')\n+\n+    - name: 'Upload JTReg artifact'\n+      uses: actions\/upload-artifact@v4\n+      with:\n+        name: bundles-jtreg-${{ steps.version.outputs.value }}\n+        path: jtreg\/installed\n+        retention-days: 1\n","filename":".github\/actions\/build-jtreg\/action.yml","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -46,0 +46,1 @@\n+        name: bundles-jtreg-${{ steps.version.outputs.value }}\n@@ -60,1 +61,1 @@\n-        bash make\/build.sh --jdk \"$JAVA_HOME_17_X64\"\n+        bash make\/build.sh --jdk \"$JAVA_HOME_11_X64\"\n","filename":".github\/actions\/get-jtreg\/action.yml","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -70,1 +70,13 @@\n-        # This function must be inlined in main.yml, or we'd be forced to checkout the repo\n+      - name: 'Checkout the scripts'\n+        uses: actions\/checkout@v4\n+        with:\n+          sparse-checkout: |\n+            .github\n+            make\/conf\/github-actions.conf\n+\n+      - name: 'Build JTReg'\n+        id: jtreg\n+        uses: .\/.github\/actions\/build-jtreg\n+\n+      # TODO: Now that we are checking out the repo scripts, we can put the following code\n+      # into a separate file\n","filename":".github\/workflows\/main.yml","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}