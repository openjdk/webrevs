{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -935,3 +935,7 @@\n-            \/\/ create temporary output buffer so that only \"real\"\n-            \/\/ data bytes are passed to user's output buffer.\n-            outWithPadding = new byte[estOutSize];\n+            if (outputCapacity < estOutSize || padding != null) {\n+                \/\/ create temporary output buffer if the estimated size is larger\n+                \/\/ than the user-provided buffer or a padding needs to be removed\n+                \/\/ before copying the unpadded result to the output buffer\n+                outWithPadding = new byte[estOutSize];\n+                offset = 0;\n+            }\n@@ -939,1 +943,1 @@\n-        byte[] outBuffer = decrypting ? outWithPadding : output;\n+        byte[] outBuffer = (outWithPadding != null) ? outWithPadding : output;\n@@ -955,3 +959,5 @@\n-            System.arraycopy(outWithPadding, 0, output, outputOffset, outLen);\n-            \/\/ decrypt mode. Zero out output data that's not required\n-            Arrays.fill(outWithPadding, (byte) 0x00);\n+            if(outWithPadding != null) {\n+              System.arraycopy(outWithPadding, 0, output, outputOffset, outLen);\n+              \/\/ decrypt mode. Zero out output data that's not required\n+              Arrays.fill(outWithPadding, (byte) 0x00);\n+            }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherCore.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"}]}