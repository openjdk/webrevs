{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -4529,4 +4529,3 @@\n-            if (width != -1 && f.contains(Flags.ZERO_PAD)) {\n-                for (int k = sb.length(); k < width; k++) {\n-                    sb.insert(begin, zero);\n-                }\n+            if (width > sb.length() && f.contains(Flags.ZERO_PAD)) {\n+                String zeros = String.valueOf(zero).repeat(width - sb.length());\n+                sb.insert(begin, zeros);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,313 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4906370\n+ * @summary Tests to excercise padding on int and double values,\n+ *      with various flag combinations.\n+ * @run junit Padding\n+ *\/\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.params.provider.Arguments.arguments;\n+\n+public class Padding {\n+\n+    static Arguments[] padding() {\n+        return new Arguments[] {\n+                \/* blank padding, right adjusted, optional plus sign *\/\n+                arguments(\"12\", \"%1d\", 12),\n+                arguments(\"12\", \"%2d\", 12),\n+                arguments(\" 12\", \"%3d\", 12),\n+                arguments(\"  12\", \"%4d\", 12),\n+                arguments(\"   12\", \"%5d\", 12),\n+                arguments(\"        12\", \"%10d\", 12),\n+\n+                arguments(\"-12\", \"%1d\", -12),\n+                arguments(\"-12\", \"%2d\", -12),\n+                arguments(\"-12\", \"%3d\", -12),\n+                arguments(\" -12\", \"%4d\", -12),\n+                arguments(\"  -12\", \"%5d\", -12),\n+                arguments(\"       -12\", \"%10d\", -12),\n+\n+                arguments(\"1.2\", \"%1.1f\", 1.2),\n+                arguments(\"1.2\", \"%2.1f\", 1.2),\n+                arguments(\"1.2\", \"%3.1f\", 1.2),\n+                arguments(\" 1.2\", \"%4.1f\", 1.2),\n+                arguments(\"  1.2\", \"%5.1f\", 1.2),\n+                arguments(\"       1.2\", \"%10.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%1.1f\", -1.2),\n+                arguments(\"-1.2\", \"%2.1f\", -1.2),\n+                arguments(\"-1.2\", \"%3.1f\", -1.2),\n+                arguments(\"-1.2\", \"%4.1f\", -1.2),\n+                arguments(\" -1.2\", \"%5.1f\", -1.2),\n+                arguments(\"      -1.2\", \"%10.1f\", -1.2),\n+\n+                \/* blank padding, right adjusted, mandatory plus sign *\/\n+                arguments(\"+12\", \"%+1d\", 12),\n+                arguments(\"+12\", \"%+2d\", 12),\n+                arguments(\"+12\", \"%+3d\", 12),\n+                arguments(\" +12\", \"%+4d\", 12),\n+                arguments(\"  +12\", \"%+5d\", 12),\n+                arguments(\"       +12\", \"%+10d\", 12),\n+\n+                arguments(\"-12\", \"%+1d\", -12),\n+                arguments(\"-12\", \"%+2d\", -12),\n+                arguments(\"-12\", \"%+3d\", -12),\n+                arguments(\" -12\", \"%+4d\", -12),\n+                arguments(\"  -12\", \"%+5d\", -12),\n+                arguments(\"       -12\", \"%+10d\", -12),\n+\n+                arguments(\"+1.2\", \"%+1.1f\", 1.2),\n+                arguments(\"+1.2\", \"%+2.1f\", 1.2),\n+                arguments(\"+1.2\", \"%+3.1f\", 1.2),\n+                arguments(\"+1.2\", \"%+4.1f\", 1.2),\n+                arguments(\" +1.2\", \"%+5.1f\", 1.2),\n+                arguments(\"      +1.2\", \"%+10.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%+1.1f\", -1.2),\n+                arguments(\"-1.2\", \"%+2.1f\", -1.2),\n+                arguments(\"-1.2\", \"%+3.1f\", -1.2),\n+                arguments(\"-1.2\", \"%+4.1f\", -1.2),\n+                arguments(\" -1.2\", \"%+5.1f\", -1.2),\n+                arguments(\"      -1.2\", \"%+10.1f\", -1.2),\n+\n+                \/* blank padding, right adjusted, mandatory blank sign *\/\n+                arguments(\" 12\", \"% 1d\", 12),\n+                arguments(\" 12\", \"% 2d\", 12),\n+                arguments(\" 12\", \"% 3d\", 12),\n+                arguments(\"  12\", \"% 4d\", 12),\n+                arguments(\"   12\", \"% 5d\", 12),\n+                arguments(\"        12\", \"% 10d\", 12),\n+\n+                arguments(\"-12\", \"% 1d\", -12),\n+                arguments(\"-12\", \"% 2d\", -12),\n+                arguments(\"-12\", \"% 3d\", -12),\n+                arguments(\" -12\", \"% 4d\", -12),\n+                arguments(\"  -12\", \"% 5d\", -12),\n+                arguments(\"       -12\", \"% 10d\", -12),\n+\n+                arguments(\" 1.2\", \"% 1.1f\", 1.2),\n+                arguments(\" 1.2\", \"% 2.1f\", 1.2),\n+                arguments(\" 1.2\", \"% 3.1f\", 1.2),\n+                arguments(\" 1.2\", \"% 4.1f\", 1.2),\n+                arguments(\"  1.2\", \"% 5.1f\", 1.2),\n+                arguments(\"       1.2\", \"% 10.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"% 1.1f\", -1.2),\n+                arguments(\"-1.2\", \"% 2.1f\", -1.2),\n+                arguments(\"-1.2\", \"% 3.1f\", -1.2),\n+                arguments(\"-1.2\", \"% 4.1f\", -1.2),\n+                arguments(\" -1.2\", \"% 5.1f\", -1.2),\n+                arguments(\"      -1.2\", \"% 10.1f\", -1.2),\n+\n+                \/* blank padding, left adjusted, optional sign *\/\n+                arguments(\"12\", \"%-1d\", 12),\n+                arguments(\"12\", \"%-2d\", 12),\n+                arguments(\"12 \", \"%-3d\", 12),\n+                arguments(\"12  \", \"%-4d\", 12),\n+                arguments(\"12   \", \"%-5d\", 12),\n+                arguments(\"12        \", \"%-10d\", 12),\n+\n+                arguments(\"-12\", \"%-1d\", -12),\n+                arguments(\"-12\", \"%-2d\", -12),\n+                arguments(\"-12\", \"%-3d\", -12),\n+                arguments(\"-12 \", \"%-4d\", -12),\n+                arguments(\"-12  \", \"%-5d\", -12),\n+                arguments(\"-12       \", \"%-10d\", -12),\n+\n+                arguments(\"1.2\", \"%-1.1f\", 1.2),\n+                arguments(\"1.2\", \"%-2.1f\", 1.2),\n+                arguments(\"1.2\", \"%-3.1f\", 1.2),\n+                arguments(\"1.2 \", \"%-4.1f\", 1.2),\n+                arguments(\"1.2  \", \"%-5.1f\", 1.2),\n+                arguments(\"1.2       \", \"%-10.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%-1.1f\", -1.2),\n+                arguments(\"-1.2\", \"%-2.1f\", -1.2),\n+                arguments(\"-1.2\", \"%-3.1f\", -1.2),\n+                arguments(\"-1.2\", \"%-4.1f\", -1.2),\n+                arguments(\"-1.2 \", \"%-5.1f\", -1.2),\n+                arguments(\"-1.2      \", \"%-10.1f\", -1.2),\n+\n+                \/* blank padding, left adjusted, mandatory plus sign *\/\n+                arguments(\"+12\", \"%-+1d\", 12),\n+                arguments(\"+12\", \"%-+2d\", 12),\n+                arguments(\"+12\", \"%-+3d\", 12),\n+                arguments(\"+12 \", \"%-+4d\", 12),\n+                arguments(\"+12  \", \"%-+5d\", 12),\n+                arguments(\"+12       \", \"%-+10d\", 12),\n+\n+                arguments(\"-12\", \"%-+1d\", -12),\n+                arguments(\"-12\", \"%-+2d\", -12),\n+                arguments(\"-12\", \"%-+3d\", -12),\n+                arguments(\"-12 \", \"%-+4d\", -12),\n+                arguments(\"-12  \", \"%-+5d\", -12),\n+                arguments(\"-12       \", \"%-+10d\", -12),\n+\n+                arguments(\"+1.2\", \"%-+1.1f\", 1.2),\n+                arguments(\"+1.2\", \"%-+2.1f\", 1.2),\n+                arguments(\"+1.2\", \"%-+3.1f\", 1.2),\n+                arguments(\"+1.2\", \"%-+4.1f\", 1.2),\n+                arguments(\"+1.2 \", \"%-+5.1f\", 1.2),\n+                arguments(\"+1.2      \", \"%-+10.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%-+1.1f\", -1.2),\n+                arguments(\"-1.2\", \"%-+2.1f\", -1.2),\n+                arguments(\"-1.2\", \"%-+3.1f\", -1.2),\n+                arguments(\"-1.2\", \"%-+4.1f\", -1.2),\n+                arguments(\"-1.2 \", \"%-+5.1f\", -1.2),\n+                arguments(\"-1.2      \", \"%-+10.1f\", -1.2),\n+\n+                \/* blank padding, left adjusted, mandatory blank sign *\/\n+                arguments(\" 12\", \"%- 1d\", 12),\n+                arguments(\" 12\", \"%- 2d\", 12),\n+                arguments(\" 12\", \"%- 3d\", 12),\n+                arguments(\" 12 \", \"%- 4d\", 12),\n+                arguments(\" 12  \", \"%- 5d\", 12),\n+                arguments(\" 12       \", \"%- 10d\", 12),\n+\n+                arguments(\"-12\", \"%- 1d\", -12),\n+                arguments(\"-12\", \"%- 2d\", -12),\n+                arguments(\"-12\", \"%- 3d\", -12),\n+                arguments(\"-12 \", \"%- 4d\", -12),\n+                arguments(\"-12  \", \"%- 5d\", -12),\n+                arguments(\"-12       \", \"%- 10d\", -12),\n+\n+                arguments(\" 1.2\", \"%- 1.1f\", 1.2),\n+                arguments(\" 1.2\", \"%- 2.1f\", 1.2),\n+                arguments(\" 1.2\", \"%- 3.1f\", 1.2),\n+                arguments(\" 1.2\", \"%- 4.1f\", 1.2),\n+                arguments(\" 1.2 \", \"%- 5.1f\", 1.2),\n+                arguments(\" 1.2      \", \"%- 10.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%- 1.1f\", -1.2),\n+                arguments(\"-1.2\", \"%- 2.1f\", -1.2),\n+                arguments(\"-1.2\", \"%- 3.1f\", -1.2),\n+                arguments(\"-1.2\", \"%- 4.1f\", -1.2),\n+                arguments(\"-1.2 \", \"%- 5.1f\", -1.2),\n+                arguments(\"-1.2      \", \"%- 10.1f\", -1.2),\n+\n+                \/* zero padding, right adjusted, optional sign *\/\n+                arguments(\"12\", \"%01d\", 12),\n+                arguments(\"12\", \"%02d\", 12),\n+                arguments(\"012\", \"%03d\", 12),\n+                arguments(\"0012\", \"%04d\", 12),\n+                arguments(\"00012\", \"%05d\", 12),\n+                arguments(\"0000000012\", \"%010d\", 12),\n+\n+                arguments(\"-12\", \"%01d\", -12),\n+                arguments(\"-12\", \"%02d\", -12),\n+                arguments(\"-12\", \"%03d\", -12),\n+                arguments(\"-012\", \"%04d\", -12),\n+                arguments(\"-0012\", \"%05d\", -12),\n+                arguments(\"-000000012\", \"%010d\", -12),\n+\n+                arguments(\"1.2\", \"%01.1f\", 1.2),\n+                arguments(\"1.2\", \"%02.1f\", 1.2),\n+                arguments(\"1.2\", \"%03.1f\", 1.2),\n+                arguments(\"01.2\", \"%04.1f\", 1.2),\n+                arguments(\"001.2\", \"%05.1f\", 1.2),\n+                arguments(\"00000001.2\", \"%010.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%01.1f\", -1.2),\n+                arguments(\"-1.2\", \"%02.1f\", -1.2),\n+                arguments(\"-1.2\", \"%03.1f\", -1.2),\n+                arguments(\"-1.2\", \"%04.1f\", -1.2),\n+                arguments(\"-01.2\", \"%05.1f\", -1.2),\n+                arguments(\"-0000001.2\", \"%010.1f\", -1.2),\n+\n+                \/* zero padding, right adjusted, mandatory plus sign *\/\n+                arguments(\"+12\", \"%+01d\", 12),\n+                arguments(\"+12\", \"%+02d\", 12),\n+                arguments(\"+12\", \"%+03d\", 12),\n+                arguments(\"+012\", \"%+04d\", 12),\n+                arguments(\"+0012\", \"%+05d\", 12),\n+                arguments(\"+000000012\", \"%+010d\", 12),\n+\n+                arguments(\"-12\", \"%+01d\", -12),\n+                arguments(\"-12\", \"%+02d\", -12),\n+                arguments(\"-12\", \"%+03d\", -12),\n+                arguments(\"-012\", \"%+04d\", -12),\n+                arguments(\"-0012\", \"%+05d\", -12),\n+                arguments(\"-000000012\", \"%+010d\", -12),\n+\n+                arguments(\"+1.2\", \"%+01.1f\", 1.2),\n+                arguments(\"+1.2\", \"%+02.1f\", 1.2),\n+                arguments(\"+1.2\", \"%+03.1f\", 1.2),\n+                arguments(\"+1.2\", \"%+04.1f\", 1.2),\n+                arguments(\"+01.2\", \"%+05.1f\", 1.2),\n+                arguments(\"+0000001.2\", \"%+010.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"%+01.1f\", -1.2),\n+                arguments(\"-1.2\", \"%+02.1f\", -1.2),\n+                arguments(\"-1.2\", \"%+03.1f\", -1.2),\n+                arguments(\"-1.2\", \"%+04.1f\", -1.2),\n+                arguments(\"-01.2\", \"%+05.1f\", -1.2),\n+                arguments(\"-0000001.2\", \"%+010.1f\", -1.2),\n+\n+                \/* zero padding, right adjusted, mandatory blank sign *\/\n+                arguments(\" 12\", \"% 01d\", 12),\n+                arguments(\" 12\", \"% 02d\", 12),\n+                arguments(\" 12\", \"% 03d\", 12),\n+                arguments(\" 012\", \"% 04d\", 12),\n+                arguments(\" 0012\", \"% 05d\", 12),\n+                arguments(\" 000000012\", \"% 010d\", 12),\n+\n+                arguments(\"-12\", \"% 01d\", -12),\n+                arguments(\"-12\", \"% 02d\", -12),\n+                arguments(\"-12\", \"% 03d\", -12),\n+                arguments(\"-012\", \"% 04d\", -12),\n+                arguments(\"-0012\", \"% 05d\", -12),\n+                arguments(\"-000000012\", \"% 010d\", -12),\n+\n+                arguments(\" 1.2\", \"% 01.1f\", 1.2),\n+                arguments(\" 1.2\", \"% 02.1f\", 1.2),\n+                arguments(\" 1.2\", \"% 03.1f\", 1.2),\n+                arguments(\" 1.2\", \"% 04.1f\", 1.2),\n+                arguments(\" 01.2\", \"% 05.1f\", 1.2),\n+                arguments(\" 0000001.2\", \"% 010.1f\", 1.2),\n+\n+                arguments(\"-1.2\", \"% 01.1f\", -1.2),\n+                arguments(\"-1.2\", \"% 02.1f\", -1.2),\n+                arguments(\"-1.2\", \"% 03.1f\", -1.2),\n+                arguments(\"-1.2\", \"% 04.1f\", -1.2),\n+                arguments(\"-01.2\", \"% 05.1f\", -1.2),\n+                arguments(\"-0000001.2\", \"% 010.1f\", -1.2),\n+\n+        };\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    void padding(String expected, String format, Object value) {\n+        assertEquals(expected, String.format(format, value));\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/util\/Formatter\/Padding.java","additions":313,"deletions":0,"binary":false,"changes":313,"status":"added"},{"patch":"@@ -185,1 +185,0 @@\n-\n","filename":"test\/jdk\/javax\/swing\/MultiMonitor\/MultimonVImage.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,293 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8245654 8314960\n+ * @summary Interoperability tests with Certigna Root CAs from Dhimyotis\n+ * @build ValidatePathWithParams\n+ * @run main\/othervm -Djava.security.debug=certpath CertignaRoots OCSP\n+ * @run main\/othervm -Djava.security.debug=certpath CertignaRoots CRL\n+ *\/\n+\n+\/*\n+ * Obtain TLS test artifacts for Certigna Root CAs from:\n+ *\n+ * Valid TLS Certificates:\n+ * https:\/\/valid.servicesca.dhimyotis.com\/\n+ *\n+ * Revoked TLS Certificates:\n+ * https:\/\/revoked.servicesca.dhimyotis.com\/\n+ *\/\n+public class CertignaRoots {\n+\n+    \/\/ Owner: CN=Certigna Services CA, OID.2.5.4.97=NTRFR-48146308100036,\n+    \/\/ OU=0002 48146308100036, O=DHIMYOTIS, C=FR\n+    \/\/ Issuer: CN=Certigna Root CA, OU=0002 48146308100036, O=Dhimyotis, C=FR\n+    \/\/ Serial number: fd30cf04344fc38dd90c4e70753d0623\n+    \/\/ Valid from: Wed Nov 25 03:37:21 PST 2015 until: Fri Jun 03 04:37:21 PDT 2033\n+    private static final String INT_CERTIGNA_ROOT_CA = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIHETCCBPmgAwIBAgIRAP0wzwQ0T8ON2QxOcHU9BiMwDQYJKoZIhvcNAQELBQAw\\n\" +\n+            \"WjELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURoaW15b3RpczEcMBoGA1UECwwTMDAw\\n\" +\n+            \"MiA0ODE0NjMwODEwMDAzNjEZMBcGA1UEAwwQQ2VydGlnbmEgUm9vdCBDQTAeFw0x\\n\" +\n+            \"NTExMjUxMTM3MjFaFw0zMzA2MDMxMTM3MjFaMH0xCzAJBgNVBAYTAkZSMRIwEAYD\\n\" +\n+            \"VQQKDAlESElNWU9USVMxHDAaBgNVBAsMEzAwMDIgNDgxNDYzMDgxMDAwMzYxHTAb\\n\" +\n+            \"BgNVBGEMFE5UUkZSLTQ4MTQ2MzA4MTAwMDM2MR0wGwYDVQQDDBRDZXJ0aWduYSBT\\n\" +\n+            \"ZXJ2aWNlcyBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALPM+7Lp\\n\" +\n+            \"WBz9wFcPaTc3xnB+5g0XrnptB0EPPfrR04vO52Ykm4ky1d4ZLd10tbM1fa1RqNSO\\n\" +\n+            \"VWWg93O4pL7zCFKlz6JV74ZZVhHpEAwzBwv2oPnxvVbxtSN67xsSY66ahUYxjzs8\\n\" +\n+            \"+3FhmsiRxqwnTYvK2u70uglUvRisOKyTL\/M6JnrC4y8tlmoz7OSa5BmBMVplJFQt\\n\" +\n+            \"vmON6N9aHLvYMz+EyJPCbXL6pELxeHjFT5QmIaRamsr2DOTaCjtBZKI1Wnh3X7ln\\n\" +\n+            \"bjM8MESJiV2t7E9tIQNG0Z\/HI3tO4aaUMum3KysY5sC8v3vi7rryGidgzHQhrtP0\\n\" +\n+            \"ZXWW5UH\/k7umLS\/P\/XXWnCFpc2Lxa1uDGfc2im7xibRoPP+JNZszN76euFlls6jy\\n\" +\n+            \"EXAiwnVr14tVVTewLK0OWs5SJHpEKp8PGMZRDj59EmMvokWwzL6QzNZ6vVAp00oO\\n\" +\n+            \"m05sbspNY9+MFqGKKUsKvhFGEa4XmRNxDe6KswLcjPZB+NKHZ0QWFd4ip5C5XmEK\\n\" +\n+            \"\/8qIPjwVr9dah9+oiHGGO8Wx7gJAMF5DTmkvW7GhqCKj1LmHnabjzc8av6kxWVQZ\\n\" +\n+            \"i\/C7HCm9i\/W4wio+JA2EAFLqNL3GPNbK9kau4yPhQt\/c7zxzo0OHnlsV4THCG7oO\\n\" +\n+            \"Cd3cfCiyfQcb3FBt6OSpaKRZxjCLBwP00r0fAgMBAAGjggGtMIIBqTASBgNVHRMB\\n\" +\n+            \"Af8ECDAGAQH\/AgEAMA4GA1UdDwEB\/wQEAwIBBjAdBgNVHQ4EFgQUrOyGj0s3HLh\/\\n\" +\n+            \"FxsZ0K7oTuM0XBIwHwYDVR0jBBgwFoAUGIdW4G537iQ1PE5zmh\/W4eJ5fiswSQYD\\n\" +\n+            \"VR0gBEIwQDA+BgoqgXoBgTECAAEBMDAwLgYIKwYBBQUHAgEWImh0dHBzOi8vd3d3\\n\" +\n+            \"LmNlcnRpZ25hLmZyL2F1dG9yaXRlcy8wgYgGCCsGAQUFBwEBBHwwejA6BggrBgEF\\n\" +\n+            \"BQcwAoYuaHR0cDovL2F1dG9yaXRlLmNlcnRpZ25hLmZyL2NlcnRpZ25hcm9vdGNh\\n\" +\n+            \"LmRlcjA8BggrBgEFBQcwAoYwaHR0cDovL2F1dG9yaXRlLmRoaW15b3Rpcy5jb20v\\n\" +\n+            \"Y2VydGlnbmFyb290Y2EuZGVyMG0GA1UdHwRmMGQwL6AtoCuGKWh0dHA6Ly9jcmwu\\n\" +\n+            \"Y2VydGlnbmEuZnIvY2VydGlnbmFyb290Y2EuY3JsMDGgL6AthitodHRwOi8vY3Js\\n\" +\n+            \"LmRoaW15b3Rpcy5jb20vY2VydGlnbmFyb290Y2EuY3JsMA0GCSqGSIb3DQEBCwUA\\n\" +\n+            \"A4ICAQCI5QbprXJ93L+JWHYpUTinXAMSvXMx2dmNm4mIiJRAbGnBOoEYx7M61fbL\\n\" +\n+            \"L5EJIYZhw8jLmeYVFuMao5OJLwda+RMmVzE7lyTGsY64IDKdwogByNCqbKzrlhnU\\n\" +\n+            \"8myyMNB0BDs2jgwQe2Dj9v+MddeHr7sDqvs7R1tSS5hoASLtdQhO7oxUzr3m7M8q\\n\" +\n+            \"+lh4jszli+cjfiPUVS2ADFu4ccQIh4OsIX6SWdU+8R+c\/fn0FV6ip4SAVbNyCToz\\n\" +\n+            \"0ZbZKO8YTJgORxRmvrop9dPyuLWjaRrZ0LMx4a3EM3sQDPDqmsG0lHtfFj2PiJvq\\n\" +\n+            \"4lEYA+gDiLKODI+3DJMqo559m3QSS52DsShomHX\/Txd0lJoZwepCE6X4KkG9FHjV\\n\" +\n+            \"WXyLgYFwCOcn+hkLhdpblms0wtjeSPITGOioSkefzhleJnDgJ9X4M3svd0HLTpJi\\n\" +\n+            \"lC1DmDZgdrXWITVdOoCogr2LFKNiGd0tbpKG533eKpfBALlm+afc6j73p1KhJEAn\\n\" +\n+            \"AfydDZqBRqv6+HHYplNDn\/K2I1CZdkwaGrx3HOR\/voGUi1sUI+hYbsPAFu8ZxrhD\\n\" +\n+            \"9UiysmLCfEUhqkbojony+L2mKsoLqyd24emQzn7GgMa7emlWX2jQUTwrD4SliZ2u\\n\" +\n+            \"OetVaZX5RLyqJWs4Igo\/xye0xtMQN8INJ4hSZvnMQ1qFtuSRcQ==\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n+    \/\/ Owner: CN=Certigna Services CA, OID.2.5.4.97=NTRFR-48146308100036,\n+    \/\/ OU=0002 48146308100036, O=DHIMYOTIS, C=FR\n+    \/\/ Issuer: CN=Certigna, O=Dhimyotis, C=FR\n+    \/\/ Serial number: 6f82fa28acd6f784bb5b120ba87367ad\n+    \/\/ Valid from: Wed Nov 25 03:33:52 PST 2015 until: Sat Nov 22 03:33:52 PST 2025\n+    private static final String INT_CERTIGNA = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIGFjCCBP6gAwIBAgIQb4L6KKzW94S7WxILqHNnrTANBgkqhkiG9w0BAQsFADA0\\n\" +\n+            \"MQswCQYDVQQGEwJGUjESMBAGA1UECgwJRGhpbXlvdGlzMREwDwYDVQQDDAhDZXJ0\\n\" +\n+            \"aWduYTAeFw0xNTExMjUxMTMzNTJaFw0yNTExMjIxMTMzNTJaMH0xCzAJBgNVBAYT\\n\" +\n+            \"AkZSMRIwEAYDVQQKDAlESElNWU9USVMxHDAaBgNVBAsMEzAwMDIgNDgxNDYzMDgx\\n\" +\n+            \"MDAwMzYxHTAbBgNVBGEMFE5UUkZSLTQ4MTQ2MzA4MTAwMDM2MR0wGwYDVQQDDBRD\\n\" +\n+            \"ZXJ0aWduYSBTZXJ2aWNlcyBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\n\" +\n+            \"ggIBALPM+7LpWBz9wFcPaTc3xnB+5g0XrnptB0EPPfrR04vO52Ykm4ky1d4ZLd10\\n\" +\n+            \"tbM1fa1RqNSOVWWg93O4pL7zCFKlz6JV74ZZVhHpEAwzBwv2oPnxvVbxtSN67xsS\\n\" +\n+            \"Y66ahUYxjzs8+3FhmsiRxqwnTYvK2u70uglUvRisOKyTL\/M6JnrC4y8tlmoz7OSa\\n\" +\n+            \"5BmBMVplJFQtvmON6N9aHLvYMz+EyJPCbXL6pELxeHjFT5QmIaRamsr2DOTaCjtB\\n\" +\n+            \"ZKI1Wnh3X7lnbjM8MESJiV2t7E9tIQNG0Z\/HI3tO4aaUMum3KysY5sC8v3vi7rry\\n\" +\n+            \"GidgzHQhrtP0ZXWW5UH\/k7umLS\/P\/XXWnCFpc2Lxa1uDGfc2im7xibRoPP+JNZsz\\n\" +\n+            \"N76euFlls6jyEXAiwnVr14tVVTewLK0OWs5SJHpEKp8PGMZRDj59EmMvokWwzL6Q\\n\" +\n+            \"zNZ6vVAp00oOm05sbspNY9+MFqGKKUsKvhFGEa4XmRNxDe6KswLcjPZB+NKHZ0QW\\n\" +\n+            \"Fd4ip5C5XmEK\/8qIPjwVr9dah9+oiHGGO8Wx7gJAMF5DTmkvW7GhqCKj1LmHnabj\\n\" +\n+            \"zc8av6kxWVQZi\/C7HCm9i\/W4wio+JA2EAFLqNL3GPNbK9kau4yPhQt\/c7zxzo0OH\\n\" +\n+            \"nlsV4THCG7oOCd3cfCiyfQcb3FBt6OSpaKRZxjCLBwP00r0fAgMBAAGjggHZMIIB\\n\" +\n+            \"1TASBgNVHRMBAf8ECDAGAQH\/AgEAMA4GA1UdDwEB\/wQEAwIBBjAdBgNVHQ4EFgQU\\n\" +\n+            \"rOyGj0s3HLh\/FxsZ0K7oTuM0XBIwZAYDVR0jBF0wW4AUGu3+QTmQtCRZvgHyUtVF\\n\" +\n+            \"9lo53BGhOKQ2MDQxCzAJBgNVBAYTAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAP\\n\" +\n+            \"BgNVBAMMCENlcnRpZ25hggkA\/tzjAQ\/JSP8wSQYDVR0gBEIwQDA+BgoqgXoBgTEB\\n\" +\n+            \"AAECMDAwLgYIKwYBBQUHAgEWImh0dHBzOi8vd3d3LmNlcnRpZ25hLmZyL2F1dG9y\\n\" +\n+            \"aXRlcy8wfAYIKwYBBQUHAQEEcDBuMDQGCCsGAQUFBzAChihodHRwOi8vYXV0b3Jp\\n\" +\n+            \"dGUuY2VydGlnbmEuZnIvY2VydGlnbmEuZGVyMDYGCCsGAQUFBzAChipodHRwOi8v\\n\" +\n+            \"YXV0b3JpdGUuZGhpbXlvdGlzLmNvbS9jZXJ0aWduYS5kZXIwYQYDVR0fBFowWDAp\\n\" +\n+            \"oCegJYYjaHR0cDovL2NybC5jZXJ0aWduYS5mci9jZXJ0aWduYS5jcmwwK6ApoCeG\\n\" +\n+            \"JWh0dHA6Ly9jcmwuZGhpbXlvdGlzLmNvbS9jZXJ0aWduYS5jcmwwDQYJKoZIhvcN\\n\" +\n+            \"AQELBQADggEBAGLft7gIuGPZVfg0cTM+HT2xAZFPDb\/2+siH06x+dH044zMKbBIN\\n\" +\n+            \"bRzhKipwB1A3MW8FQjveE9tyrfyuqZE\/X+o2SlGcdNV44ybYkxo4f6kcLEavV\/IW\\n\" +\n+            \"+oFEnojZlhpksYcxrvQoEyqkAwshe8IS2KtZHKVACrt+XSs0lwvy7ALGmHaF7A4b\\n\" +\n+            \"y6cZWItA7Lhj8XWp+8tBJDj7HocRbWtxzEODdBuyMgJzFrNjc+97J0vH\/K0+3yjm\\n\" +\n+            \"kczpKshMA0tM+MF9XDMN\/MuwrPmUWGO\/fHiqHgUp8yqeWtl1n44ZxkkK1t9GRwhn\\n\" +\n+            \"DWLv73\/xhTmdhWYQ\/reo0GbgBoLiltKmIJQ=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n+    \/\/ Owner: SERIALNUMBER=S266241169, CN=valid.servicesca.dhimyotis.com, O=DHIMYOTIS,\n+    \/\/ L=VILLENEUVE D'ASCQ, C=FR\n+    \/\/ Issuer: CN=Certigna Services CA, OID.2.5.4.97=NTRFR-48146308100036, OU=0002\n+    \/\/ 48146308100036, O=DHIMYOTIS, C=FR\n+    \/\/ Serial number: c641ef7b0340c21515d8c462e729dc0e\n+    \/\/ Valid from: Thu Mar 09 15:00:00 PST 2023 until: Mon Mar 11 15:59:59 PDT 2024\n+    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIIdzCCBl+gAwIBAgIRAMZB73sDQMIVFdjEYucp3A4wDQYJKoZIhvcNAQELBQAw\\n\" +\n+            \"fTELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURISU1ZT1RJUzEcMBoGA1UECwwTMDAw\\n\" +\n+            \"MiA0ODE0NjMwODEwMDAzNjEdMBsGA1UEYQwUTlRSRlItNDgxNDYzMDgxMDAwMzYx\\n\" +\n+            \"HTAbBgNVBAMMFENlcnRpZ25hIFNlcnZpY2VzIENBMB4XDTIzMDMwOTIzMDAwMFoX\\n\" +\n+            \"DTI0MDMxMTIyNTk1OVowezELMAkGA1UEBhMCRlIxGjAYBgNVBAcMEVZJTExFTkVV\\n\" +\n+            \"VkUgRCdBU0NRMRIwEAYDVQQKDAlESElNWU9USVMxJzAlBgNVBAMMHnZhbGlkLnNl\\n\" +\n+            \"cnZpY2VzY2EuZGhpbXlvdGlzLmNvbTETMBEGA1UEBRMKUzI2NjI0MTE2OTCCASIw\\n\" +\n+            \"DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJDrFpZWEeBJoMUuG37wEmJ7XVeX\\n\" +\n+            \"Jde1bgURpFbLwifRj2TVmMdtfg9hXHL7B7Mh\/+I8\/e7kJz8mlU9qUYKyH24oAitE\\n\" +\n+            \"myXYHAKTydqTseiM3mp92n4PM+DrgsdbT7bpmiirNM0\/sqWFNyGUz7kP6Z5E3uuU\\n\" +\n+            \"HSlzX1LBBj8S0ORNZWvomQho11gjuZJRS72X4XTnSc0DESwnLp2irUfx7pflBNt0\\n\" +\n+            \"sLE8BhpNSSQd91naJVKtCtn0H7df+o4gGBt2ZceCLBwU0NwN8+KXz06KjP8298V4\\n\" +\n+            \"P3+eR2QxAw4QBIanRaG6Gd4AmpdIaT7TpiYHotjrJ\/Pbx5C8\/cmgxxlmtI0CAwEA\\n\" +\n+            \"AaOCA\/IwggPuMIHkBggrBgEFBQcBAQSB1zCB1DA2BggrBgEFBQcwAoYqaHR0cDov\\n\" +\n+            \"L2F1dG9yaXRlLmNlcnRpZ25hLmZyL3NlcnZpY2VzY2EuZGVyMDgGCCsGAQUFBzAC\\n\" +\n+            \"hixodHRwOi8vYXV0b3JpdGUuZGhpbXlvdGlzLmNvbS9zZXJ2aWNlc2NhLmRlcjAu\\n\" +\n+            \"BggrBgEFBQcwAYYiaHR0cDovL3NlcnZpY2VzY2Eub2NzcC5jZXJ0aWduYS5mcjAw\\n\" +\n+            \"BggrBgEFBQcwAYYkaHR0cDovL3NlcnZpY2VzY2Eub2NzcC5kaGlteW90aXMuY29t\\n\" +\n+            \"MB8GA1UdIwQYMBaAFKzsho9LNxy4fxcbGdCu6E7jNFwSMAkGA1UdEwQCMAAwYQYD\\n\" +\n+            \"VR0gBFowWDAIBgZngQwBAgIwTAYLKoF6AYExAgUBAQEwPTA7BggrBgEFBQcCARYv\\n\" +\n+            \"aHR0cHM6Ly93d3cuY2VydGlnbmEuY29tL2F1dG9yaXRlLWNlcnRpZmljYXRpb24w\\n\" +\n+            \"ZQYDVR0fBF4wXDAtoCugKYYnaHR0cDovL2NybC5kaGlteW90aXMuY29tL3NlcnZp\\n\" +\n+            \"Y2VzY2EuY3JsMCugKaAnhiVodHRwOi8vY3JsLmNlcnRpZ25hLmZyL3NlcnZpY2Vz\\n\" +\n+            \"Y2EuY3JsMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA4GA1UdDwEB\/wQEAwIFoDBIBgNV\\n\" +\n+            \"HREEQTA\/gh12YWxpZC5zZXJ2aWNlc2NhLmNlcnRpZ25hLmNvbYIedmFsaWQuc2Vy\\n\" +\n+            \"dmljZXNjYS5kaGlteW90aXMuY29tMB0GA1UdDgQWBBSzyYZfPBt65RUDq98+e0AK\\n\" +\n+            \"U8pd\/jCCAX8GCisGAQQB1nkCBAIEggFvBIIBawFpAHcA7s3QZNXbGs7FXLedtM0T\\n\" +\n+            \"ojKHRny87N7DUUhZRnEftZsAAAGGy1ZNXwAABAMASDBGAiEAyG838\/RfBOpojEI\/\\n\" +\n+            \"cx++f0tvuDbc\/rVa0WNcd2f9HekCIQDVKV2wI3VkD3wNmO93m022H7kvKD1OBEhw\\n\" +\n+            \"Tn6+0ZLA6QB2AHb\/iD8KtvuVUcJhzPWHujS0pM27KdxoQgqf5mdMWjp0AAABhstW\\n\" +\n+            \"TcYAAAQDAEcwRQIhAOuj\/r5G1wHNgFOMg3jsr3uWmWzIIkTmwmp4hJqvsJzzAiBf\\n\" +\n+            \"nm\/jZCUW8DFY+iC+O\/+Hzsk\/kVDkKIlBDd6rA3MzJgB2AFWB1MIWkDYBSuoLm1c8\\n\" +\n+            \"U\/DA5Dh4cCUIFy+jqh0HE9MMAAABhstWTw4AAAQDAEcwRQIgRbCAqI1\/nxc6P4de\\n\" +\n+            \"Fqg\/zc1+ldMDWjeamWjhctciGsgCIQDHQ4OKj0AA7hQKFIe1SVp+00BxRefFGmq7\\n\" +\n+            \"ZJ+8q+pRqzANBgkqhkiG9w0BAQsFAAOCAgEAVkzCC9LIHU+iOi+GFeCtWxxa5Fsk\\n\" +\n+            \"5gXnDJmtbdoVe2TJvOhrb+VnNI7\/Ak+csBv3vxNl3P3DXIbPryB98aelleX7pkfP\\n\" +\n+            \"PcKhFAlbwzbII2D3L0mjFLERtVwdnoEJXXKcHsb9hJResKipZ\/\/daMPD8FthHvEE\\n\" +\n+            \"HmtOrR0lHLjhbi4ODq0e4xyygbxFXXl5CCjtBw0jBtZaMDQaC3eemK9LkOggLz3h\\n\" +\n+            \"qs\/+VQ7RyKfcKCuGC5Wb4GJR+IDKH812hFsUWmXe26MPoyTrzLNq6tfQZHSuY5Hj\\n\" +\n+            \"K0ZwldEkUZ2Hd7PrRlhCiGdVCp\/2kS2yefhUkvX7Z5K5wX6n+LylfzOTvWf6ZPwQ\\n\" +\n+            \"1jTI0Js8ig4eHF25GlqgOWrqbyF9j67kLs3f7\/c5Kx3FlclJ7\/vlL8zEcTmGU7rm\\n\" +\n+            \"ZFOhEMDT\/UYkitqAOvrgT60oIm9YJ1XTAVTeDbW0FFAb2nFmeBOrw8N3jaCb+jpO\\n\" +\n+            \"ysBA\/lDaGTiQhMlJK44vwgS+TjbeWHxvmAE5srKa7MWU8Mmku2vuX95lupJo4LmD\\n\" +\n+            \"zOsihH00hyhtHFUB1TGXuaf77kFsipE6iycyxpcrpJ1UAWiZrba6PAZ85TbYhEdY\\n\" +\n+            \"FDNm7F7CVPU67HV5gE2kDa3Jprd1SjwO095LsRptWhzxUByhee3JI0jljBTaKowy\\n\" +\n+            \"jPv8oekm7zqCLzY=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n+    \/\/ Owner: SERIALNUMBER=S266251168, CN=revoked.servicesca.certigna.com, O=DHIMYOTIS,\n+    \/\/ L=VILLENEUVE D'ASCQ, C=FR\n+    \/\/ Issuer: CN=Certigna Services CA, OID.2.5.4.97=NTRFR-48146308100036, OU=0002\n+    \/\/ 48146308100036, O=DHIMYOTIS, C=FR\n+    \/\/ Serial number: e863f752a23a735e3ccf958abf18565b\n+    \/\/ Valid from: Thu Mar 09 15:00:00 PST 2023 until: Fri Mar 08 14:59:59 PST 2024\n+    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIIezCCBmOgAwIBAgIRAOhj91KiOnNePM+Vir8YVlswDQYJKoZIhvcNAQELBQAw\\n\" +\n+            \"fTELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURISU1ZT1RJUzEcMBoGA1UECwwTMDAw\\n\" +\n+            \"MiA0ODE0NjMwODEwMDAzNjEdMBsGA1UEYQwUTlRSRlItNDgxNDYzMDgxMDAwMzYx\\n\" +\n+            \"HTAbBgNVBAMMFENlcnRpZ25hIFNlcnZpY2VzIENBMB4XDTIzMDMwOTIzMDAwMFoX\\n\" +\n+            \"DTI0MDMwODIyNTk1OVowfDELMAkGA1UEBhMCRlIxGjAYBgNVBAcMEVZJTExFTkVV\\n\" +\n+            \"VkUgRCdBU0NRMRIwEAYDVQQKDAlESElNWU9USVMxKDAmBgNVBAMMH3Jldm9rZWQu\\n\" +\n+            \"c2VydmljZXNjYS5jZXJ0aWduYS5jb20xEzARBgNVBAUTClMyNjYyNTExNjgwggEi\\n\" +\n+            \"MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCBqKNjMkHqJ9EQa3CjuZ6EYMz6\\n\" +\n+            \"mWODrEucRcJDihYMigaV1oRyquGlFQ82ootXaK5bU+EYSMmUwbRpdZ9G\/oZUn2+K\\n\" +\n+            \"MKAFDI+MoZoFhQC+2w0AzJycCf\/hShUVxcRREKRKdfzv+k5YHj3e8ic16tGlTFXT\\n\" +\n+            \"IF1x3y2Uru7mzZARsZJqnRqaqPPghT\/QlBpcA04yLi3iSpgO++mRrJxTUoUHlDw\/\\n\" +\n+            \"a1nhqnDgH2yKN7tSfwFTetnXat6\/UVt0CJ\/6dJF6oY8bGWO1YB03Xdq735eLdJE4\\n\" +\n+            \"t38pV\/X8rf5Mc9ZQh8IGrjVW83M8mQmqaX5rbsOl0ZCA\/q6RWxRFEF2SwK+dAgMB\\n\" +\n+            \"AAGjggP1MIID8TCB5AYIKwYBBQUHAQEEgdcwgdQwNgYIKwYBBQUHMAKGKmh0dHA6\\n\" +\n+            \"Ly9hdXRvcml0ZS5jZXJ0aWduYS5mci9zZXJ2aWNlc2NhLmRlcjA4BggrBgEFBQcw\\n\" +\n+            \"AoYsaHR0cDovL2F1dG9yaXRlLmRoaW15b3Rpcy5jb20vc2VydmljZXNjYS5kZXIw\\n\" +\n+            \"LgYIKwYBBQUHMAGGImh0dHA6Ly9zZXJ2aWNlc2NhLm9jc3AuY2VydGlnbmEuZnIw\\n\" +\n+            \"MAYIKwYBBQUHMAGGJGh0dHA6Ly9zZXJ2aWNlc2NhLm9jc3AuZGhpbXlvdGlzLmNv\\n\" +\n+            \"bTAfBgNVHSMEGDAWgBSs7IaPSzccuH8XGxnQruhO4zRcEjAJBgNVHRMEAjAAMGEG\\n\" +\n+            \"A1UdIARaMFgwCAYGZ4EMAQICMEwGCyqBegGBMQIFAQEBMD0wOwYIKwYBBQUHAgEW\\n\" +\n+            \"L2h0dHBzOi8vd3d3LmNlcnRpZ25hLmNvbS9hdXRvcml0ZS1jZXJ0aWZpY2F0aW9u\\n\" +\n+            \"MGUGA1UdHwReMFwwLaAroCmGJ2h0dHA6Ly9jcmwuZGhpbXlvdGlzLmNvbS9zZXJ2\\n\" +\n+            \"aWNlc2NhLmNybDAroCmgJ4YlaHR0cDovL2NybC5jZXJ0aWduYS5mci9zZXJ2aWNl\\n\" +\n+            \"c2NhLmNybDATBgNVHSUEDDAKBggrBgEFBQcDATAOBgNVHQ8BAf8EBAMCBaAwTAYD\\n\" +\n+            \"VR0RBEUwQ4IgcmV2b2tlZC5zZXJ2aWNlc2NhLmRoaW15b3Rpcy5jb22CH3Jldm9r\\n\" +\n+            \"ZWQuc2VydmljZXNjYS5jZXJ0aWduYS5jb20wHQYDVR0OBBYEFEQsKyX8x8zVxVC2\\n\" +\n+            \"HEK7+bOBLoMkMIIBfgYKKwYBBAHWeQIEAgSCAW4EggFqAWgAdgDuzdBk1dsazsVc\\n\" +\n+            \"t520zROiModGfLzs3sNRSFlGcR+1mwAAAYbLTxPnAAAEAwBHMEUCIQD16IHX+8+4\\n\" +\n+            \"zWnxIME4rzCgQIA4m5OsEqP6ssgRG5iurwIgdBOGFGlF6+DGPSm5FKuk5ShAA8ZC\\n\" +\n+            \"AE+E27CKLkBTnfgAdgB2\/4g\/Crb7lVHCYcz1h7o0tKTNuyncaEIKn+ZnTFo6dAAA\\n\" +\n+            \"AYbLTxRMAAAEAwBHMEUCIDmW9elysDm3zAeIXsgJwmL33EoMTyVhA3ah2jkvMjzv\\n\" +\n+            \"AiEA6aIZXtwk2DnFt+GA6gLr4UgswUCuK4wxheDVwbpSw\/4AdgA7U3d1Pi25gE6L\\n\" +\n+            \"MFsG\/kA7Z9hPw\/THvQANLXJv4frUFwAAAYbLTxXAAAAEAwBHMEUCIQDGuOg7koEE\\n\" +\n+            \"H9K4VkSHaDD9rAndys2BtswdspfRKUFR3QIgVZ7QUX3H56ECuI8wsAkSjBze4lBO\\n\" +\n+            \"RgfN2xh3l9xQOK0wDQYJKoZIhvcNAQELBQADggIBAFQTTtyQSoV4Zq3QYMnb0yEp\\n\" +\n+            \"u6Hwic\/wpYN5L0km+zZoHWuf58vfj8Yg\/sfKmftGSZHDdc3NfYSVBlT\/0Hl4SDhi\\n\" +\n+            \"zHLLyapoX2GNhbg3esu0Y1fch8E16z2A\/wAwrFvxI0XrjHpOyDp4CBDYqDADNPiL\\n\" +\n+            \"vlEkiwP6r7WHjUdWRb7W0t75uAkcajn46XKpFmaHHie5KBch+KDGsUionuH5ZW8Y\\n\" +\n+            \"klh2B34uLWcGZuIR7PeCO9+91mbn\/bBNeabGC70qMStaB139lp9P2M+l2WpyREUK\\n\" +\n+            \"l7qHwTsrlMmNb8n44zGtY4wL9NSYWTdTfhcU0FAPdPcLlnjoQubJ1O0vPkzfVYns\\n\" +\n+            \"WQrslxoCBor6CL6AYMQz3jbzQ0soD3Reb11+uTngWGJZtx4DT09RFB3a+1rcYjiS\\n\" +\n+            \"ijCBB+Lqx0xfLQnfBv1A0wjNqUY+gyEe0SpXqB4edqy5uaqawRRKMuNSnb2BVz0\/\\n\" +\n+            \"keo1Kif\/GSak+JUBpJ8hkJWygtrWCETUNfoseQhqo3gism0EGxJ04tBp+DRvfbrz\\n\" +\n+            \"X4aBgALRro3jSIR1Ibp+e0fxePwShy715SF2H4SfjvplTAKq5bwztZtQUkPR6fJ7\\n\" +\n+            \"5xT0f762c1yytKP1rHFMvzl6k7QWvC6zb2FeG5UqXJw3wFxxWsCuAUu5SPFfXdno\\n\" +\n+            \"5lIHTTV5rpZBN+PzTZsz\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ OCSP check by default\n+        boolean ocspEnabled = args.length < 1 || !\"CRL\".equalsIgnoreCase(args[0]);\n+\n+        \/\/ CN=Certigna\n+        new CertignaCAs().runTest(ocspEnabled,\n+                VALID,\n+                REVOKED,\n+                INT_CERTIGNA);\n+\n+        \/\/ CN=Certigna Root CA\n+        new CertignaCAs().runTest(ocspEnabled,\n+                VALID,\n+                REVOKED,\n+                INT_CERTIGNA_ROOT_CA);\n+    }\n+}\n+\n+class CertignaCAs {\n+    public void runTest(boolean ocspEnabled,\n+                        final String VALID,\n+                        final String REVOKED,\n+                        final String INT_CERT) throws Exception {\n+\n+        ValidatePathWithParams pathValidator;\n+        String[] validChainToValidate;\n+        String[] revChainToValidate;\n+\n+        if (!ocspEnabled) {\n+            pathValidator = new ValidatePathWithParams(null);\n+            pathValidator.enableCRLCheck();\n+\n+            validChainToValidate = new String[]{VALID, INT_CERT};\n+            revChainToValidate = new String[]{REVOKED, INT_CERT};\n+        } else {\n+            \/\/ int certificate doesn't specify OCSP responder\n+            pathValidator = new ValidatePathWithParams(new String[]{INT_CERT});\n+            pathValidator.enableOCSPCheck();\n+\n+            validChainToValidate = new String[]{VALID};\n+            revChainToValidate = new String[]{REVOKED};\n+        }\n+\n+        \/\/ Validate valid\n+        pathValidator.validate(validChainToValidate,\n+                ValidatePathWithParams.Status.GOOD, null, System.out);\n+\n+        \/\/ Validate Revoked\n+        pathValidator.validate(revChainToValidate,\n+                ValidatePathWithParams.Status.REVOKED,\n+                \"Fri Mar 10 03:39:51 PST 2023\", System.out);\n+    }\n+}\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CertignaRoots.java","additions":293,"deletions":0,"binary":false,"changes":293,"status":"added"}]}