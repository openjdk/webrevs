{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -34,1 +34,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/SelCacheTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -41,1 +41,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test1.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -39,1 +39,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test12.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -40,1 +40,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test13.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -39,1 +39,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test6a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -39,1 +39,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test7a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -39,1 +39,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test8a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -39,1 +39,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test9.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -30,1 +30,1 @@\n- * @summary  Light weight HTTP server\n+ * @summary Light weight HTTP server\n@@ -39,1 +39,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Test9a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -41,1 +41,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext HTTPTest HTTPTestServer HTTPTestClient HTTPSetAuthenticatorTest\n+ * @build jdk.test.lib.net.SimpleSSLContext HTTPTest HTTPTestServer HTTPTestClient HTTPSetAuthenticatorTest\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPSetAuthenticatorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -47,1 +47,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -51,1 +51,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext HTTPTest HTTPTestServer HTTPTestClient\n+ * @build jdk.test.lib.net.SimpleSSLContext HTTPTest HTTPTestServer HTTPTestClient\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -41,1 +41,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/URLPermission\/URLTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractNoBody.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPublishers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n- * @library \/test\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n@@ -43,1 +43,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPushPromises.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingSubscribers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -36,1 +36,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -70,1 +70,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/AsFileDownloadTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -24,2 +24,2 @@\n-\/\/ for JTwork\/classes\/0\/lib\/testlibrary\/jdk\/testlibrary\/SimpleSSLContext.class\n-grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/lib\/testlibrary\/-\" {\n+\/\/ for JTwork\/classes\/0\/test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.class\n+grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/test\/lib\/-\" {\n@@ -27,1 +27,1 @@\n-    permission java.io.FilePermission \"${test.src}\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\", \"read\";\n+    permission java.io.FilePermission \"${test.src}\/..\/..\/..\/..\/lib\/jdk\/test\/lib\/net\/testkeys\", \"read\";\n","filename":"test\/jdk\/java\/net\/httpclient\/AsFileDownloadTest.policy","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -35,1 +35,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -56,1 +56,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/BasicRedirectTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -58,1 +58,1 @@\n- * @library \/lib\/testlibrary\n+ * @library \/test\/lib\n@@ -60,1 +60,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelledResponse.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -37,1 +37,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -70,1 +70,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ConcurrentResponses.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -36,1 +36,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -46,1 +46,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/CookieHeaderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -35,1 +35,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -65,1 +65,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/CustomRequestPublisher.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -60,1 +60,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/CustomResponseSubscriber.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters DependentActionsTest\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters DependentActionsTest\n@@ -46,1 +46,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentActionsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters DependentPromiseActionsTest\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters DependentPromiseActionsTest\n@@ -43,1 +43,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentPromiseActionsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -65,2 +65,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters DigestEchoServer\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters DigestEchoServer\n","filename":"test\/jdk\/java\/net\/httpclient\/DigestEchoClient.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext DigestEchoServer\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext DigestEchoServer\n","filename":"test\/jdk\/java\/net\/httpclient\/DigestEchoClientSSL.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/EchoHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters EncodedCharsInURI\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters EncodedCharsInURI\n@@ -45,1 +45,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/EncodedCharsInURI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -36,1 +36,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -61,1 +61,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/EscapedOctetsInURI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -52,1 +52,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ExpectContinue.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -70,1 +70,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -72,1 +72,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/FlowAdapterPublisherTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -71,1 +71,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -73,1 +73,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/FlowAdapterSubscriberTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -36,1 +36,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -45,1 +45,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/HeadTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -59,2 +59,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpClientBuilderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpEchoHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -53,2 +53,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters DigestEchoServer HttpsTunnelTest\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters DigestEchoServer HttpsTunnelTest\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpsTunnelTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -60,1 +60,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ImmutableFlowItems.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext ReferenceTracker\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext ReferenceTracker\n@@ -41,1 +41,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/InvalidInputStreamSubscriptionRequest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -51,1 +51,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/InvalidSSLContextTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext ReferenceTracker\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext ReferenceTracker\n@@ -42,1 +42,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/InvalidSubscriptionRequest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n- * library \/lib\/testlibrary\/ \/\n- * build jdk.testlibrary.SimpleSSLContext ProxyServer\n+ * library \/test\/lib \/\n+ * build jdk.test.lib.net.SimpleSSLContext ProxyServer\n@@ -53,1 +53,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/LightWeightHttpServer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -80,1 +80,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -82,1 +82,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/LineBodyHandlerTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * @library \/lib\/testlibrary\/ \/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -66,1 +66,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * @library \/lib\/testlibrary\/ \/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -39,2 +39,5 @@\n- * @run main\/othervm\/timeout=40 -Djdk.internal.httpclient.debug=true -Dtest.XFixed=true -Dtest.insertDelay=true -Dtest.chunkSize=64 ManyRequests2\n- * @summary Send a large number of requests asynchronously. The server echoes back using known content length.\n+ * @run main\/othervm\/timeout=40 -Djdk.internal.httpclient.debug=true\n+ *                              -Dtest.XFixed=true -Dtest.insertDelay=true\n+ *                              -Dtest.chunkSize=64 ManyRequests2\n+ * @summary Send a large number of requests asynchronously.\n+ *          The server echoes back using known content length.\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequests2.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary\/ \/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -37,2 +37,5 @@\n- * @run main\/othervm\/timeout=40 -Dtest.insertDelay=true -Dtest.chunkSize=64 ManyRequestsLegacy\n- * @summary Send a large number of requests asynchronously using the legacy URL.openConnection(), to help sanitize results of the test ManyRequest.java.\n+ * @run main\/othervm\/timeout=40 -Dtest.insertDelay=true\n+ *                              -Dtest.chunkSize=64 ManyRequestsLegacy\n+ * @summary Send a large number of requests asynchronously using the legacy\n+ *          URL.openConnection(), to help sanitize results of the test\n+ *          ManyRequest.java.\n@@ -73,1 +76,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequestsLegacy.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -65,1 +65,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/MappingResponseSubscriber.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -37,1 +37,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -63,1 +63,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/MaxStreams.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/NoBodyPartOne.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/NoBodyPartTwo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -37,1 +37,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -61,1 +61,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/NonAsciiCharsInURI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext DigestEchoServer DigestEchoClient\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext DigestEchoServer DigestEchoClient\n","filename":"test\/jdk\/java\/net\/httpclient\/ProxyAuthDisabledSchemes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext DigestEchoServer DigestEchoClient\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext DigestEchoServer DigestEchoClient\n","filename":"test\/jdk\/java\/net\/httpclient\/ProxyAuthDisabledSchemesSSL.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -70,2 +70,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext ProxyTest\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext ProxyTest\n","filename":"test\/jdk\/java\/net\/httpclient\/ProxyTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -34,1 +34,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -53,1 +53,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/RedirectMethodChange.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -35,1 +35,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -58,1 +58,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/RedirectWithCookie.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @library \/lib\/testlibrary\/ \/test\/lib\n+ * @library \/test\/lib\n@@ -34,1 +34,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/RequestBodyTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-\/\/ for JTwork\/classes\/0\/lib\/testlibrary\/jdk\/testlibrary\/SimpleSSLContext.class\n-grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/lib\/testlibrary\/-\" {\n+\/\/ for JTwork\/classes\/0\/test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.class\n+grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/test\/lib\/-\" {\n@@ -33,1 +33,1 @@\n-    permission java.io.FilePermission \"${test.src}\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\", \"read\";\n+    permission java.io.FilePermission \"${test.src}\/..\/..\/..\/..\/lib\/jdk\/test\/lib\/net\/testkeys\", \"read\";\n","filename":"test\/jdk\/java\/net\/httpclient\/RequestBodyTest.policy","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -55,1 +55,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ResponseBodyBeforeError.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -43,1 +43,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ResponsePublisher.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -36,1 +36,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext ReferenceTracker\n+ * @build jdk.test.lib.net.SimpleSSLContext ReferenceTracker\n@@ -45,1 +45,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/RetryWithCookie.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters EncodedCharsInURI\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters EncodedCharsInURI\n@@ -38,1 +38,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ServerCloseTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/ShortResponseBody.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * @library \/lib\/testlibrary\/ \/\n- * @build jdk.testlibrary.SimpleSSLContext ProxyServer\n+ * @library \/test\/lib \/\n+ * @build jdk.test.lib.net.SimpleSSLContext ProxyServer\n@@ -93,1 +93,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/SmokeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @library \/lib\/testlibrary http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -37,1 +37,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -49,1 +49,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/SpecialHeadersTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -52,2 +52,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponse.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseAsync.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseKeepAlive.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseKeepAliveAsync.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseSSL.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseSSLAsync.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseSSLKeepAlive.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/SplitResponseSSLKeepAliveAsync.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -36,1 +36,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -56,1 +56,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/StreamingBody.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersCustomAfterCancel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersCustomBeforeCancel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersIOAfterCancel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersIOBeforeCancel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersInNextRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersInRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersInSubscribe.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPublishersSanity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesAsInputStreamCustom.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesAsInputStreamIO.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesAsLinesCustom.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesAsLinesIO.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesAsStringCustom.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesAsStringIO.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingPushPromisesSanity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersAsInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersAsInputStreamAsync.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersAsLines.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersAsLinesAsync.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersAsString.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersAsStringAsync.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary http2\/server\n- * @build jdk.testlibrary.SimpleSSLContext HttpServerAdapters\n+ * @library \/test\/lib http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters\n","filename":"test\/jdk\/java\/net\/httpclient\/ThrowingSubscribersSanity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -49,2 +49,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/TimeoutBasic.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary \/test\/lib http2\/server\n+ * @library \/test\/lib http2\/server\n@@ -40,1 +40,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -49,1 +49,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/UnauthorizedTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -47,2 +47,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/UnknownBodyLengthTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -24,2 +24,2 @@\n-\/\/ for JTwork\/classes\/0\/lib\/testlibrary\/jdk\/testlibrary\/SimpleSSLContext.class\n-grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/lib\/testlibrary\/-\" {\n+\/\/ for JTwork\/classes\/0\/test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.class\n+grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/test\/lib\/-\" {\n@@ -27,1 +27,1 @@\n-    permission java.io.FilePermission \"${test.src}\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\", \"read\";\n+    permission java.io.FilePermission \"${test.src}\/..\/..\/..\/..\/lib\/jdk\/test\/lib\/net\/testkeys\", \"read\";\n","filename":"test\/jdk\/java\/net\/httpclient\/dependent.policy","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @library \/lib\/testlibrary server\n+ * @library \/test\/lib server\n@@ -32,1 +32,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -41,1 +41,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/BadHeadersTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -50,1 +50,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/BasicTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @library \/lib\/testlibrary server\n+ * @library \/test\/lib server\n@@ -33,1 +33,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -58,1 +58,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ContinuationFrameTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -49,1 +49,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ErrorTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -43,1 +43,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/FixedThreadPoolTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ImplicitPushCancel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -64,1 +64,1 @@\n- * @library \/lib\/testlibrary server\n+ * @library \/test\/lib server\n@@ -69,1 +69,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext ProxyTest2\n+ * @build jdk.test.lib.net.SimpleSSLContext ProxyTest2\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ProxyTest2.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/RedirectTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ServerPush.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n- * @library \/lib\/testlibrary server\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib server\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ServerPushWithDiffTypes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @library \/lib\/testlibrary\/\n@@ -32,1 +31,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext jdk.test.lib.Utils\n+ * @build jdk.test.lib.net.SimpleSSLContext jdk.test.lib.Utils\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/Driver.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * @library \/lib\/testlibrary\/\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/Security.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -42,1 +42,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/WSHandshakeExceptionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import javax.net.ssl.KeyManagerFactory;\n@@ -35,2 +34,0 @@\n-import javax.net.ssl.TrustManagerFactory;\n-import java.io.File;\n@@ -41,6 +38,0 @@\n-import java.security.KeyManagementException;\n-import java.security.KeyStore;\n-import java.security.KeyStoreException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.UnrecoverableKeyException;\n-import java.security.cert.CertificateException;\n@@ -247,72 +238,0 @@\n-\n-    \/**\n-     * Creates a simple usable SSLContext for SSLSocketFactory or a HttpsServer\n-     * using either a given keystore or a default one in the test tree.\n-     *\n-     * Using this class with a security manager requires the following\n-     * permissions to be granted:\n-     *\n-     * permission \"java.util.PropertyPermission\" \"test.src.path\", \"read\";\n-     * permission java.io.FilePermission \"${test.src}\/..\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\",\n-     * \"read\"; The exact path above depends on the location of the test.\n-     *\/\n-    protected static class SimpleSSLContext {\n-\n-        private final SSLContext ssl;\n-\n-        \/**\n-         * Loads default keystore from SimpleSSLContext source directory\n-         *\/\n-        public SimpleSSLContext() throws IOException {\n-            String paths = System.getProperty(\"test.src.path\");\n-            StringTokenizer st = new StringTokenizer(paths, File.pathSeparator);\n-            boolean securityExceptions = false;\n-            SSLContext sslContext = null;\n-            while (st.hasMoreTokens()) {\n-                String path = st.nextToken();\n-                try {\n-                    File f = new File(path, \"..\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\");\n-                    if (f.exists()) {\n-                        try (FileInputStream fis = new FileInputStream(f)) {\n-                            sslContext = init(fis);\n-                            break;\n-                        }\n-                    }\n-                } catch (SecurityException e) {\n-                    \/\/ catch and ignore because permission only required\n-                    \/\/ for one entry on path (at most)\n-                    securityExceptions = true;\n-                }\n-            }\n-            if (securityExceptions) {\n-                System.err.println(\"SecurityExceptions thrown on loading testkeys\");\n-            }\n-            ssl = sslContext;\n-        }\n-\n-        private SSLContext init(InputStream i) throws IOException {\n-            try {\n-                char[] passphrase = \"passphrase\".toCharArray();\n-                KeyStore ks = KeyStore.getInstance(\"JKS\");\n-                ks.load(i, passphrase);\n-\n-                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n-                kmf.init(ks, passphrase);\n-\n-                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n-                tmf.init(ks);\n-\n-                SSLContext ssl = SSLContext.getInstance(\"TLS\");\n-                ssl.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-                return ssl;\n-            } catch (KeyManagementException | KeyStoreException |\n-                    UnrecoverableKeyException | CertificateException |\n-                    NoSuchAlgorithmException e) {\n-                throw new RuntimeException(e.getMessage());\n-            }\n-        }\n-\n-        public SSLContext get() {\n-            return ssl;\n-        }\n-    }\n","filename":"test\/jdk\/java\/net\/httpclient\/whitebox\/java.net.http\/jdk\/internal\/net\/http\/AbstractSSLTubeTest.java","additions":1,"deletions":82,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import java.io.File;\n-import java.io.FileInputStream;\n@@ -36,6 +34,0 @@\n-import java.security.KeyManagementException;\n-import java.security.KeyStore;\n-import java.security.KeyStoreException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.UnrecoverableKeyException;\n-import java.security.cert.CertificateException;\n@@ -56,1 +48,0 @@\n-import javax.net.ssl.KeyManagerFactory;\n@@ -58,1 +49,0 @@\n-import javax.net.ssl.TrustManagerFactory;\n@@ -493,74 +483,0 @@\n-    \/**\n-     * Creates a simple usable SSLContext for SSLSocketFactory\n-     * or a HttpsServer using either a given keystore or a default\n-     * one in the test tree.\n-     * <p>\n-     * Using this class with a security manager requires the following\n-     * permissions to be granted:\n-     * <p>\n-     * permission \"java.util.PropertyPermission\" \"test.src.path\", \"read\";\n-     * permission java.io.FilePermission\n-     * \"${test.src}\/..\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\", \"read\";\n-     * The exact path above depends on the location of the test.\n-     *\/\n-    static class SimpleSSLContext {\n-\n-        private final SSLContext ssl;\n-\n-        \/**\n-         * Loads default keystore from SimpleSSLContext source directory\n-         *\/\n-        public SimpleSSLContext() throws IOException {\n-            String paths = System.getProperty(\"test.src.path\");\n-            StringTokenizer st = new StringTokenizer(paths, File.pathSeparator);\n-            boolean securityExceptions = false;\n-            SSLContext sslContext = null;\n-            while (st.hasMoreTokens()) {\n-                String path = st.nextToken();\n-                try {\n-                    File f = new File(path, \"..\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\");\n-                    if (f.exists()) {\n-                        try (FileInputStream fis = new FileInputStream(f)) {\n-                            sslContext = init(fis);\n-                            break;\n-                        }\n-                    }\n-                } catch (SecurityException e) {\n-                    \/\/ catch and ignore because permission only required\n-                    \/\/ for one entry on path (at most)\n-                    securityExceptions = true;\n-                }\n-            }\n-            if (securityExceptions) {\n-                System.out.println(\"SecurityExceptions thrown on loading testkeys\");\n-            }\n-            ssl = sslContext;\n-        }\n-\n-        private SSLContext init(InputStream i) throws IOException {\n-            try {\n-                char[] passphrase = \"passphrase\".toCharArray();\n-                KeyStore ks = KeyStore.getInstance(\"JKS\");\n-                ks.load(i, passphrase);\n-\n-                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n-                kmf.init(ks, passphrase);\n-\n-                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n-                tmf.init(ks);\n-\n-                SSLContext ssl = SSLContext.getInstance(\"TLS\");\n-                ssl.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-                return ssl;\n-            } catch (KeyManagementException | KeyStoreException |\n-                    UnrecoverableKeyException | CertificateException |\n-                    NoSuchAlgorithmException e) {\n-                throw new RuntimeException(e.getMessage());\n-            }\n-        }\n-\n-        public SSLContext get() {\n-            return ssl;\n-        }\n-    }\n-\n","filename":"test\/jdk\/java\/net\/httpclient\/whitebox\/java.net.http\/jdk\/internal\/net\/http\/FlowTest.java","additions":0,"deletions":84,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.net.http;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.security.KeyManagementException;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.UnrecoverableKeyException;\n+import java.security.cert.CertificateException;\n+import java.util.StringTokenizer;\n+\n+import javax.net.ssl.KeyManagerFactory;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+\/**\n+ * Creates a simple usable SSLContext for SSLSocketFactory\n+ * or a HttpsServer using a default keystore in the test tree.\n+ * <p>\n+ * Using this class with a security manager requires the following\n+ * permissions to be granted:\n+ * <p>\n+ * permission \"java.util.PropertyPermission\" \"test.src.path\", \"read\";\n+ * permission java.io.FilePermission \"\/path\/to\/test\/lib\/jdk\/test\/lib\/testkeys\", \"read\";\n+ * The exact path above depends on the location of the test.\n+ *\/\n+public class SimpleSSLContext {\n+\n+    private final SSLContext ssl;\n+\n+    \/**\n+     * Loads default keystore from SimpleSSLContext source directory\n+     *\/\n+    public SimpleSSLContext() throws IOException {\n+        String paths = System.getProperty(\"test.src.path\");\n+        StringTokenizer st = new StringTokenizer(paths, File.pathSeparator);\n+        boolean securityExceptions = false;\n+        SSLContext sslContext = null;\n+        while (st.hasMoreTokens()) {\n+            String path = st.nextToken();\n+            try {\n+                File f = new File(path, \"..\/..\/..\/..\/..\/lib\/jdk\/test\/lib\/net\/testkeys\");\n+                if (f.exists()) {\n+                    try (FileInputStream fis = new FileInputStream(f)) {\n+                        sslContext = init(fis);\n+                        break;\n+                    }\n+                }\n+            } catch (SecurityException e) {\n+                \/\/ catch and ignore because permission only required\n+                \/\/ for one entry on path (at most)\n+                securityExceptions = true;\n+            }\n+        }\n+        if (securityExceptions) {\n+            System.out.println(\"SecurityExceptions thrown on loading testkeys\");\n+        }\n+        ssl = sslContext;\n+    }\n+\n+    private SSLContext init(InputStream i) throws IOException {\n+        try {\n+            char[] passphrase = \"passphrase\".toCharArray();\n+            KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+            ks.load(i, passphrase);\n+\n+            KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"PKIX\");\n+            kmf.init(ks, passphrase);\n+\n+            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"PKIX\");\n+            tmf.init(ks);\n+\n+            SSLContext ssl = SSLContext.getInstance(\"TLS\");\n+            ssl.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n+            return ssl;\n+        } catch (KeyManagementException | KeyStoreException |\n+                UnrecoverableKeyException | CertificateException |\n+                NoSuchAlgorithmException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+\n+    public SSLContext get() {\n+        return ssl;\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/net\/httpclient\/whitebox\/java.net.http\/jdk\/internal\/net\/http\/SimpleSSLContext.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @library \/lib\/testlibrary\n+ * @library \/test\/lib\n@@ -29,1 +29,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -37,1 +37,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/javax\/net\/ssl\/HttpsURLConnection\/Equals.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,137 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.testlibrary;\n-\n-import java.util.*;\n-import java.util.concurrent.*;\n-import java.io.*;\n-import java.net.*;\n-import java.security.*;\n-import java.security.cert.*;\n-import javax.net.ssl.*;\n-\n-\/**\n- * Creates a simple usable SSLContext for SSLSocketFactory\n- * or a HttpsServer using either a given keystore or a default\n- * one in the test tree.\n- *\n- * Using this class with a security manager requires the following\n- * permissions to be granted:\n- *\n- * permission \"java.util.PropertyPermission\" \"test.src.path\", \"read\";\n- * permission java.io.FilePermission\n- *    \"${test.src}\/..\/..\/..\/lib\/testlibrary\/jdk\/testlibrary\/testkeys\", \"read\";\n- * The exact path above depends on the location of the test.\n- *\/\n-public class SimpleSSLContext {\n-\n-    SSLContext ssl;\n-\n-    \/**\n-     * loads default keystore from SimpleSSLContext\n-     * source directory\n-     *\/\n-    public SimpleSSLContext() throws IOException {\n-        try {\n-            AccessController.doPrivileged(new PrivilegedExceptionAction<Void>() {\n-                @Override\n-                public Void run() throws Exception {\n-                    String paths = System.getProperty(\"test.src.path\");\n-                    StringTokenizer st = new StringTokenizer(paths, File.pathSeparator);\n-                    boolean securityExceptions = false;\n-                    while (st.hasMoreTokens()) {\n-                        String path = st.nextToken();\n-                        try {\n-                            File f = new File(path, \"jdk\/testlibrary\/testkeys\");\n-                            if (f.exists()) {\n-                                try (FileInputStream fis = new FileInputStream(f)) {\n-                                    init(fis);\n-                                    return null;\n-                                }\n-                            }\n-                        } catch (SecurityException e) {\n-                            \/\/ catch and ignore because permission only required\n-                            \/\/ for one entry on path (at most)\n-                            securityExceptions = true;\n-                        }\n-                    }\n-                    if (securityExceptions) {\n-                        System.err.println(\"SecurityExceptions thrown on loading testkeys\");\n-                    }\n-                    return null;\n-                }\n-            });\n-        } catch (PrivilegedActionException pae) {\n-            Throwable t = pae.getCause() != null ? pae.getCause() : pae;\n-            if (t instanceof IOException)\n-                throw (IOException)t;\n-            if (t instanceof RuntimeException)\n-                throw (RuntimeException)t;\n-            if (t instanceof Error)\n-                throw (Error)t;\n-            throw new RuntimeException(t);\n-        }\n-    }\n-\n-    \/**\n-     * loads default keystore from given directory\n-     *\/\n-    public SimpleSSLContext(String dir) throws IOException {\n-        String file = dir+\"\/testkeys\";\n-        try (FileInputStream fis = new FileInputStream(file)) {\n-            init(fis);\n-        }\n-    }\n-\n-    private void init(InputStream i) throws IOException {\n-        try {\n-            char[] passphrase = \"passphrase\".toCharArray();\n-            KeyStore ks = KeyStore.getInstance(\"JKS\");\n-            ks.load(i, passphrase);\n-\n-            KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n-            kmf.init(ks, passphrase);\n-\n-            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n-            tmf.init(ks);\n-\n-            ssl = SSLContext.getInstance(\"TLS\");\n-            ssl.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-        } catch (KeyManagementException e) {\n-            throw new RuntimeException(e.getMessage());\n-        } catch (KeyStoreException e) {\n-            throw new RuntimeException(e.getMessage());\n-        } catch (UnrecoverableKeyException e) {\n-            throw new RuntimeException(e.getMessage());\n-        } catch (CertificateException e) {\n-            throw new RuntimeException(e.getMessage());\n-        } catch (NoSuchAlgorithmException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-\n-    public SSLContext get() {\n-        return ssl;\n-    }\n-}\n","filename":"test\/jdk\/lib\/testlibrary\/jdk\/testlibrary\/SimpleSSLContext.java","additions":0,"deletions":137,"binary":false,"changes":137,"status":"deleted"},{"patch":"@@ -27,1 +27,0 @@\n- * @library \/lib\/testlibrary\/\n@@ -29,1 +28,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext\n+ * @build jdk.test.lib.net.SimpleSSLContext\n@@ -42,1 +41,1 @@\n-import jdk.testlibrary.SimpleSSLContext;\n+import jdk.test.lib.net.SimpleSSLContext;\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/RedirectOnPost.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.net;\n+\n+import java.util.*;\n+import java.io.*;\n+import java.security.*;\n+import java.security.cert.*;\n+import javax.net.ssl.*;\n+\n+\/**\n+ * Creates a simple usable SSLContext for SSLSocketFactory\n+ * or a HttpsServer using either a given keystore or a default\n+ * one in the test tree.\n+ *\n+ * Using this class with a security manager requires the following\n+ * permissions to be granted:\n+ *\n+ * permission \"java.util.PropertyPermission\" \"test.src.path\", \"read\";\n+ * permission java.io.FilePermission \"\/path\/to\/test\/lib\/jdk\/test\/lib\/testkeys\", \"read\";\n+ * The exact path above depends on the location of the test.\n+ *\/\n+public class SimpleSSLContext {\n+\n+    SSLContext ssl;\n+\n+    \/**\n+     * loads default keystore from SimpleSSLContext\n+     * source directory\n+     *\/\n+    public SimpleSSLContext() throws IOException {\n+        try {\n+            AccessController.doPrivileged(new PrivilegedExceptionAction<Void>() {\n+                @Override\n+                public Void run() throws Exception {\n+                    String paths = System.getProperty(\"test.src.path\");\n+                    StringTokenizer st = new StringTokenizer(paths, File.pathSeparator);\n+                    boolean securityExceptions = false;\n+                    while (st.hasMoreTokens()) {\n+                        String path = st.nextToken();\n+                        try {\n+                            File f = new File(path, \"jdk\/test\/lib\/net\/testkeys\");\n+                            if (f.exists()) {\n+                                try (FileInputStream fis = new FileInputStream(f)) {\n+                                    init(fis);\n+                                    return null;\n+                                }\n+                            }\n+                        } catch (SecurityException e) {\n+                            \/\/ catch and ignore because permission only required\n+                            \/\/ for one entry on path (at most)\n+                            securityExceptions = true;\n+                        }\n+                    }\n+                    if (securityExceptions) {\n+                        System.err.println(\"SecurityExceptions thrown on loading testkeys\");\n+                    }\n+                    return null;\n+                }\n+            });\n+        } catch (PrivilegedActionException pae) {\n+            Throwable t = pae.getCause() != null ? pae.getCause() : pae;\n+            if (t instanceof IOException)\n+                throw (IOException)t;\n+            if (t instanceof RuntimeException)\n+                throw (RuntimeException)t;\n+            if (t instanceof Error)\n+                throw (Error)t;\n+            throw new RuntimeException(t);\n+        }\n+    }\n+\n+    \/**\n+     * loads default keystore from given directory\n+     *\/\n+    public SimpleSSLContext(String dir) throws IOException {\n+        String file = dir + \"\/testkeys\";\n+        try (FileInputStream fis = new FileInputStream(file)) {\n+            init(fis);\n+        }\n+    }\n+\n+    private void init(InputStream i) throws IOException {\n+        try {\n+            char[] passphrase = \"passphrase\".toCharArray();\n+            KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+            ks.load(i, passphrase);\n+\n+            KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"PKIX\");\n+            kmf.init(ks, passphrase);\n+\n+            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"PKIX\");\n+            tmf.init(ks);\n+\n+            ssl = SSLContext.getInstance(\"TLS\");\n+            ssl.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n+        } catch (KeyManagementException | KeyStoreException |\n+                UnrecoverableKeyException | CertificateException |\n+                NoSuchAlgorithmException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+\n+    public SSLContext get() {\n+        return ssl;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/net\/testkeys","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/lib\/testlibrary\/jdk\/testlibrary\/testkeys","status":"renamed"}]}