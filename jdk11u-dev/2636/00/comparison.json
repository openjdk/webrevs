{"files":[{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4186951\n+   @summary Bulletproofing for AbstractAction.ArrayTable Serialization.\n+   @run main bug4186951\n+*\/\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.awt.event.ActionEvent;\n+import javax.swing.AbstractAction;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4186951 {\n+    public static void main(String[] args) throws Exception {\n+        AbstractAction ma = new MyAction();\n+        MyClassSer mcs = new MyClassSer();\n+        ma.putValue(\"serializable\",mcs);\n+        MyClassNonSer mcn = new MyClassNonSer();\n+        ma.putValue(\"non-serializable\",mcn);\n+        FileOutputStream fos = new FileOutputStream(\"file.test\");\n+        ObjectOutputStream oos = new ObjectOutputStream(fos);\n+        oos.writeObject(ma);\n+        FileInputStream fis = new FileInputStream(\"file.test\");\n+        ObjectInputStream ois = new ObjectInputStream(fis);\n+        ma = (MyAction)ois.readObject();\n+        File fil = new File(\"file.test\");\n+        if (fil!=null) {\n+            fil.delete();\n+        }\n+        if (!((MyClassSer)ma.getValue(\"serializable\")).equals(mcs)) {\n+            throw new RuntimeException(\"Serialisable class \" +\n+                                        \" wasn't serialized...\");\n+        }\n+        if ((MyClassNonSer)ma.getValue(\"non-serializable\") != null) {\n+            throw new RuntimeException(\"Serialisation occurs for \" +\n+                                        \" non-serialisable class...\");\n+        }\n+    }\n+\n+    static class MyAction extends AbstractAction {\n+        public void actionPerformed(ActionEvent e) {}\n+    }\n+\n+    static class MyClassSer implements Serializable {\n+        String str = \"default_string\";\n+        public boolean equals(MyClassSer s) {\n+          return str.equals(s.str);\n+        }\n+    }\n+\n+    static class MyClassNonSer {\n+        String str = \"default_string\";\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/Action\/bug4186951.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4211425\n+   @summary Verifies ClassCastException in AbstractAction\n+   @run main bug4211425\n+*\/\n+\n+import java.awt.event.ActionEvent;\n+import javax.swing.AbstractAction;\n+\n+public class bug4211425 {\n+\n+    public static void main(String[] args) {\n+        AbstractAction at = new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                System.out.println(\"Action!\");\n+            }\n+        };\n+        for (int i = 0; i < 10; i++) {\n+            at.putValue(\"key \" + i, \"name\");\n+            at.putValue(\"key \" + i, \"name\");  \/\/ Adding another with same key\n+                                              \/\/ tickles this bug\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/Action\/bug4211425.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4211454\n+   @summary Verifies ClassCastException in AbstractAction\n+   @run main bug4211454\n+*\/\n+\n+import java.awt.event.ActionEvent;\n+import javax.swing.AbstractAction;\n+\n+public class bug4211454 {\n+\n+    public static void main(String[] args) {\n+        AbstractAction at = new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                System.out.println(\"Action!\");\n+            }\n+        };\n+        for (int i = 0; i<9; i++) {\n+            at.putValue(\"key \" + i, \"name\");\n+        }\n+        for (int i = 9; i>3; i--) {\n+            at.putValue(\"key \" + i, null);\n+            at.putValue(\"Not a key \" + i, null);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/Action\/bug4211454.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4244034\n+   @summary Tests that AbstractAction has method getKeys()\n+   @run main bug4244034\n+*\/\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.awt.event.ActionEvent;\n+import javax.swing.Action;\n+import javax.swing.AbstractAction;\n+\n+public class bug4244034 {\n+\n+    \/** Auxilliary class extending AbstractAction\n+     *\/\n+    static class NullAction extends AbstractAction {\n+        public void actionPerformed(ActionEvent e) {}\n+    }\n+\n+    public static void main(String[] args) {\n+        AbstractAction action = new NullAction();\n+        action.putValue(Action.SHORT_DESCRIPTION, \"my short descr\");\n+        action.putValue(Action.LONG_DESCRIPTION, \"my long descr\");\n+        action.putValue(Action.NAME, \"my name\");\n+\n+        Object[] keys = action.getKeys();\n+        List keysList = Arrays.asList(keys);\n+        if (! keysList.contains(Action.SHORT_DESCRIPTION) ||\n+            ! keysList.contains(Action.LONG_DESCRIPTION) ||\n+            ! keysList.contains(Action.NAME)) {\n+\n+            throw new Error(\"Failed: getKeys() works improperly\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/Action\/bug4244034.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4143690\n+   @summary Tests that TreeSelectionEvent has isAddedPath(int) method\n+   @run main bug4143690\n+*\/\n+\n+import javax.swing.event.TreeSelectionEvent;\n+import javax.swing.tree.TreePath;\n+\n+public class bug4143690 {\n+\n+    public static void main(String[] argv) throws Exception {\n+        bug4143690 test = new bug4143690();\n+        TreePath p = new TreePath(\"\");\n+        TreeSelectionEvent e = new TreeSelectionEvent(test, p, true, p, p);\n+\n+        TreePath[] paths = e.getPaths();\n+        for(int i = 0; i < paths.length; i++) {\n+            TreePath path = paths[i];\n+            if (e.isAddedPath(i) != true) {\n+                throw new RuntimeException(\"Incorrect isAddedPath(int)...\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/event\/bug4143690.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4160240\n+   @summary InternalFrameEvent has getInternalFrame() method.\n+   @run main bug4160240\n+*\/\n+\n+import javax.swing.JInternalFrame;\n+import javax.swing.event.InternalFrameEvent;\n+\n+public class bug4160240 {\n+\n+    public static void main(String[] argv) throws Exception {\n+        JInternalFrame jif = new JInternalFrame();\n+        InternalFrameEvent ife = new InternalFrameEvent(jif,\n+                                    InternalFrameEvent.INTERNAL_FRAME_OPENED);\n+        if (ife.getInternalFrame() != jif) {\n+            throw new RuntimeException(\"JInternalFrame.getInternalFrame \" +\n+                                        \" doesn't work correctly...\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/event\/bug4160240.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"}]}