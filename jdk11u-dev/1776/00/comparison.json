{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -65,3 +66,5 @@\n-            String startAddress = null;\n-            String endAddress = null;\n-            String[] snippets = null;\n+            String startAddress;\n+            String endAddress;\n+            String[] snippets;\n+            String[] words;\n+            String cmd;\n@@ -69,0 +72,14 @@\n+            \/\/ Run scanoops on the old gen\n+            if (gc.contains(\"UseParallelGC\")) {\n+                snippets = universeOutput.split(\"PSOldGen \\\\[  \");\n+            } else {\n+                snippets = universeOutput.split(\"old  \\\\[\");\n+            }\n+            words = snippets[1].split(\",\");\n+            \/\/ Get the addresses for Old gen\n+            startAddress = words[0].replace(\"[\", \"\");\n+            endAddress = words[1];\n+            cmd = \"scanoops \" + startAddress + \" \" + endAddress;\n+            String output1 = test.run(theApp.getPid(), List.of(cmd), null, null);\n+\n+            \/\/ Run scanoops on the eden gen\n@@ -74,2 +91,2 @@\n-            String[] words = snippets[1].split(\",\");\n-            \/\/ Get the addresses from Eden\n+            words = snippets[1].split(\",\");\n+            \/\/ Get the addresses for Eden gen\n@@ -78,6 +95,11 @@\n-            String cmd = \"scanoops \" + startAddress + \" \" + endAddress;\n-            cmds.add(cmd);\n-\n-            expStrMap.put(cmd, List.of\n-                (\"java\/lang\/Object\", \"java\/lang\/Class\", \"java\/lang\/Thread\",\n-                 \"java\/lang\/String\", \"\\\\[B\", \"\\\\[I\"));\n+            cmd = \"scanoops \" + startAddress + \" \" + endAddress;\n+            String output2 = test.run(theApp.getPid(), List.of(cmd), null, null);\n+\n+            \/\/ Look for expected types in the combined eden and old gens\n+            OutputAnalyzer out = new OutputAnalyzer(output1 + output2);\n+            List<String> expectStrs = List.of(\n+                    \"java\/lang\/Object\", \"java\/lang\/Class\", \"java\/lang\/Thread\",\n+                    \"java\/lang\/String\", \"\\\\[B\", \"\\\\[I\");\n+            for (String expectStr : expectStrs) {\n+                out.shouldMatch(expectStr);\n+            }\n@@ -85,2 +107,2 @@\n-            \/\/ Test the 'type' option also\n-            \/\/ scanoops <start addr> <end addr> java\/lang\/String\n+            \/\/ Test the 'type' option also:\n+            \/\/   scanoops <start addr> <end addr> java\/lang\/String\n@@ -89,1 +111,0 @@\n-            cmds.add(cmd);\n@@ -91,3 +112,2 @@\n-            unExpStrMap.put(cmd, List.of(\"java\/lang\/Thread\"));\n-\n-            test.run(theApp.getPid(), cmds, expStrMap, unExpStrMap);\n+            unExpStrMap.put(cmd, List.of(\"java\/lang\/Thread\", \"java\/lang\/Class\", \"java\/lang\/Object\"));\n+            test.run(theApp.getPid(), List.of(cmd), expStrMap, unExpStrMap);\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbScanOops.java","additions":38,"deletions":18,"binary":false,"changes":56,"status":"modified"}]}