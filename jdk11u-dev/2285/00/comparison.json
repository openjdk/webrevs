{"files":[{"patch":"@@ -28,3 +28,4 @@\n- * @summary  Test to see if ICMP Port Unreachable on non-connected\n- *           DatagramSocket causes a SocketException \"socket closed\"\n- *           exception on Windows 2000.\n+ * @summary Test to see if ICMP Port Unreachable on non-connected\n+ *          DatagramSocket causes a SocketException \"socket closed\"\n+ *          exception on Windows 2000.\n+ * @run main\/othervm PortUnreachable\n@@ -32,0 +33,1 @@\n+\n@@ -44,19 +46,16 @@\n-    public void serverSend() {\n-        try {\n-            InetAddress addr = InetAddress.getLocalHost();\n-            Thread.sleep(1000);\n-            \/\/ send a delayed packet which should mean a delayed icmp\n-            \/\/ port unreachable\n-            byte b[] = \"A late msg\".getBytes();\n-            DatagramPacket packet = new DatagramPacket(b, b.length, addr,\n-                                                       serverPort);\n-            clientSock.send(packet);\n-\n-            DatagramSocket sock = recreateServerSocket(serverPort);\n-            b = \"Greetings from the server\".getBytes();\n-            packet = new DatagramPacket(b, b.length, addr, clientPort);\n-            sock.send(packet);\n-            sock.close();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n+    public void serverSend() throws Exception {\n+        InetAddress addr = InetAddress.getLocalHost();\n+        Thread.sleep(1000);\n+        \/\/ send a delayed packet which should mean a delayed icmp\n+        \/\/ port unreachable\n+        byte b[] = \"A late msg\".getBytes();\n+        DatagramPacket packet = new DatagramPacket(b, b.length, addr,\n+                serverPort);\n+        clientSock.send(packet);\n+\n+        DatagramSocket sock = recreateServerSocket(serverPort);\n+        b = \"Greetings from the server\".getBytes();\n+        packet = new DatagramPacket(b, b.length, addr, clientPort);\n+        sock.send(packet);\n+        Thread.sleep(500);  \/\/ give time to the kernel to send packet\n+        sock.close();\n@@ -73,1 +72,1 @@\n-        \/\/ and doesn't release it before the 5 * 500 ms are elapsed...\n+        \/\/ and doesn't release it before the 10 * 500 ms are elapsed...\n@@ -78,2 +77,2 @@\n-                if (retryCount++ < 5) {\n-                   sleeptime += sleepAtLeast(500);\n+                if (retryCount++ < 10) {\n+                    sleeptime += sleepAtLeast(500);\n@@ -81,1 +80,1 @@\n-                    System.out.println(\"Give up after 5 retries and \" + sleeptime(sleeptime));\n+                    System.out.println(\"Give up after 10 retries and \" + sleeptime(sleeptime));\n@@ -157,0 +156,1 @@\n+\n@@ -169,3 +169,3 @@\n-        PortUnreachable test = new PortUnreachable();\n-        test.execute();\n-    }\n+        \/\/ A BindException might be thrown intermittently. In that case retry\n+        \/\/ 3 times before propagating the exception to finish execution.\n+        int catchCount = 0;\n@@ -173,0 +173,15 @@\n+        while (true) {\n+            try {\n+                PortUnreachable test = new PortUnreachable();\n+                test.execute();\n+                return;\n+            } catch (BindException bEx) {\n+                System.out.println(\"Failed to bind server: \" + bEx);\n+                if (++catchCount > 3) {\n+                    System.out.printf(\"Max retry count exceeded (%d)%n\", catchCount);\n+                    throw bEx;\n+                }\n+                System.out.printf(\"Retrying; retry count: %d%n\", catchCount);\n+            }\n+        }\n+    }\n","filename":"test\/jdk\/java\/net\/DatagramSocket\/PortUnreachable.java","additions":44,"deletions":29,"binary":false,"changes":73,"status":"modified"}]}