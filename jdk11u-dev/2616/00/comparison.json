{"files":[{"patch":"@@ -177,1 +177,1 @@\n-serviceability\/sa\/ClhsdbPmap.java 8294316,8193639,8211767,8267433 solaris-all,linux-ppc64le,linux-ppc64,macosx-x64\n+serviceability\/sa\/ClhsdbPmap.java 8269982,8294316,8193639,8211767,8267433 solaris-all,linux-ppc64le,linux-ppc64,macosx-aarch64,macosx-x64\n@@ -205,2 +205,2 @@\n-serviceability\/sa\/TestJmapCore.java 8294316,8193639,8267433 solaris-all,macosx-x64\n-serviceability\/sa\/TestJmapCoreMetaspace.java 8294316,8193639,8267433 solaris-all,macosx-x64\n+serviceability\/sa\/TestJmapCore.java 8269982,8294316,8193639,8267433 solaris-all,macosx-aarch64,macosx-x64\n+serviceability\/sa\/TestJmapCoreMetaspace.java 8269982,8294316,8193639,8267433 solaris-all,macosx-aarch64,macosx-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-                \"isSignedOSX\");\n+                \"isHardenedOSX\");\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/TestMutuallyExclusivePlatformPredicates.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.io.BufferedReader;\n@@ -28,0 +29,1 @@\n+import java.io.InputStreamReader;\n@@ -257,1 +259,1 @@\n-     * Return true if the test JDK is signed, otherwise false. Only valid on OSX.\n+     * Return true if the test JDK is hardened, otherwise false. Only valid on OSX.\n@@ -259,2 +261,2 @@\n-    public static boolean isSignedOSX() throws IOException {\n-        \/\/ We only care about signed binaries for 10.14 and later (actually 10.14.5, but\n+    public static boolean isHardenedOSX() throws IOException {\n+        \/\/ We only care about hardened binaries for 10.14 and later (actually 10.14.5, but\n@@ -263,1 +265,1 @@\n-            return false; \/\/ assume not signed\n+            return false; \/\/ assume not hardened\n@@ -275,3 +277,2 @@\n-        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"-d\", \"-v\", javaFileName);\n-        pb.redirectError(ProcessBuilder.Redirect.DISCARD);\n-        pb.redirectOutput(ProcessBuilder.Redirect.DISCARD);\n+        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"--display\", \"--verbose\", javaFileName);\n+        pb.redirectErrorStream(true); \/\/ redirect stderr to stdout\n@@ -279,0 +280,25 @@\n+        BufferedReader is = new BufferedReader(new InputStreamReader(codesignProcess.getInputStream()));\n+        String line;\n+        boolean isHardened = false;\n+        boolean hardenedStatusConfirmed = false; \/\/ set true when we confirm whether or not hardened\n+        while ((line = is.readLine()) != null) {\n+            System.out.println(\"STDOUT: \" + line);\n+            if (line.indexOf(\"flags=0x10000(runtime)\") != -1 ) {\n+                hardenedStatusConfirmed = true;\n+                isHardened = true;\n+                System.out.println(\"Target JDK is hardened. Some tests may be skipped.\");\n+            } else if (line.indexOf(\"flags=0x20002(adhoc,linker-signed)\") != -1 ) {\n+                hardenedStatusConfirmed = true;\n+                isHardened = false;\n+                System.out.println(\"Target JDK is adhoc signed, but not hardened.\");\n+            } else if (line.indexOf(\"code object is not signed at all\") != -1) {\n+                hardenedStatusConfirmed = true;\n+                isHardened = false;\n+                System.out.println(\"Target JDK is not signed, therefore not hardened.\");\n+            }\n+        }\n+        if (!hardenedStatusConfirmed) {\n+            System.out.println(\"Could not confirm if TargetJDK is hardened. Assuming not hardened.\");\n+            isHardened = false;\n+        }\n+\n@@ -281,1 +307,1 @@\n-                System.err.println(\"Timed out waiting for the codesign process to complete. Assuming not signed.\");\n+                System.err.println(\"Timed out waiting for the codesign process to complete. Assuming not hardened.\");\n@@ -283,1 +309,1 @@\n-                return false; \/\/ assume not signed\n+                return false; \/\/ assume not hardened\n@@ -288,19 +314,1 @@\n-\n-        \/\/ Check codesign result to see if java binary is signed. Here are the\n-        \/\/ exit code meanings:\n-        \/\/    0: signed\n-        \/\/    1: not signed\n-        \/\/    2: invalid arguments\n-        \/\/    3: only has meaning with the -R argument.\n-        \/\/ So we should always get 0 or 1 as an exit value.\n-        if (codesignProcess.exitValue() == 0) {\n-            System.out.println(\"Target JDK is signed. Some tests may be skipped.\");\n-            return true; \/\/ signed\n-        } else if (codesignProcess.exitValue() == 1) {\n-            System.out.println(\"Target JDK is not signed.\");\n-            return false; \/\/ not signed\n-        } else {\n-            System.err.println(\"Executing codesign failed. Assuming unsigned: \" +\n-                               codesignProcess.exitValue());\n-            return false; \/\/ not signed\n-        }\n+        return isHardened;\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":37,"deletions":29,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-                if (Platform.isSignedOSX()) {\n-                    throw new SkippedException(\"SA Attach not expected to work. JDK is signed.\");\n+                if (Platform.isHardenedOSX()) {\n+                    throw new SkippedException(\"SA Attach not expected to work. JDK is hardened.\");\n","filename":"test\/lib\/jdk\/test\/lib\/SA\/SATestUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,0 +126,8 @@\n+            if (Platform.isHardenedOSX()) {\n+                if (Platform.getOsVersionMajor() > 10 ||\n+                        (Platform.getOsVersionMajor() == 10 && Platform.getOsVersionMinor() >= 15))\n+                {\n+                    \/\/ We can't generate cores files with hardened binaries on OSX 10.15 and later.\n+                    throw new SkippedException(\"Cannot produce core file with hardened binary on OSX 10.15 and later\");\n+                }\n+            }\n","filename":"test\/lib\/jdk\/test\/lib\/util\/CoreUtils.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}