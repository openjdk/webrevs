{"files":[{"patch":"@@ -229,5 +229,0 @@\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isUsageThresholdExceeded\/isexceeded001\/TestDescription.java 8198668 generic-all\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isUsageThresholdExceeded\/isexceeded002\/TestDescription.java 8153598 generic-all\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isUsageThresholdExceeded\/isexceeded003\/TestDescription.java 8198668 generic-all\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isUsageThresholdExceeded\/isexceeded004\/TestDescription.java 8153598 generic-all\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isUsageThresholdExceeded\/isexceeded005\/TestDescription.java 8153598 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+        log.enableVerbose(true); \/\/ show log output\n+\n@@ -55,2 +57,1 @@\n-            log.display(i + \" pool \" + monitor.getName(pool));\n-\n+            log.display(i + \" pool \" + monitor.getName(pool) + \" of type: \" + monitor.getType(pool));\n@@ -58,1 +59,1 @@\n-                log.display(\"  does not support usage thresholds\");\n+                log.display(\"  does not support usage thresholds: skip\");\n@@ -60,2 +61,1 @@\n-            } else\n-                log.display(\"  supports usage thresholds\");\n+            }\n@@ -65,0 +65,1 @@\n+            boolean isExceeded = monitor.isUsageThresholdExceeded(pool);\n@@ -72,2 +73,2 @@\n-                 \" used=\" + used +\n-                 \", max = \" + max );\n+                 \" used=\" + used + \", max=\" + max + \": skip\");\n+                continue;\n@@ -77,1 +78,3 @@\n-            log.display(\"  threshold \" + threshold + \" is set, used = \" + used );\n+            log.display(\"     used value is \" + used     + \"      max is \" + max + \" isExceeded = \" + isExceeded);\n+            log.display(\"  threshold set to \" + threshold);\n+            log.display(\"  threshold count  \" + monitor.getUsageThresholdCount(pool));\n@@ -79,0 +82,1 @@\n+            \/\/ Reset peak usage so we can use it:\n@@ -80,2 +84,3 @@\n-            log.display(\"  resetting peak usage\");\n-            log.display(\"  peak usage = \" + monitor.getPeakUsage(pool).getUsed());\n+            isExceeded = monitor.isUsageThresholdExceeded(pool);\n+            log.display(\"  reset peak usage. peak usage = \" + monitor.getPeakUsage(pool).getUsed()\n+                        + \" isExceeded = \" + isExceeded);\n@@ -83,3 +88,3 @@\n-            \/\/ Eat some memory - provoke usage of the pool to cross the\n-            \/\/ threshold value\n-            b = new byte[INCREMENT]; \/\/ Eat 100K\n+            \/\/ Eat some memory - _may_ cause usage of the pool to cross threshold,\n+            \/\/ but cannot assume this affects the pool we are testing.\n+            b = new byte[INCREMENT];\n@@ -87,3 +92,2 @@\n-            boolean isExceeded = monitor.isUsageThresholdExceeded(pool);\n-            usage = monitor.getPeakUsage(pool);\n-            used = usage.getUsed();\n+            isExceeded = monitor.isUsageThresholdExceeded(pool);\n+            log.display(\"  Allocated heap.  isExceeded = \" + isExceeded);\n@@ -91,1 +95,20 @@\n-            log.display(\"  used value is \" + used);\n+            \/\/ Fetch usage information: use peak usage in comparisons below, in case usage went up and then down.\n+            \/\/ Log used and peak used in case of failure.\n+            usage = monitor.getUsage(pool);\n+            MemoryUsage peakUsage = monitor.getPeakUsage(pool);\n+            used = usage.getUsed();\n+            max = usage.getMax();\n+            long peakUsed = usage.getUsed();\n+            long peakMax = usage.getMax();\n+\n+            log.display(\"     used value is \" + used     + \"      max is \" + max + \" isExceeded = \" + isExceeded);\n+            log.display(\"peak used value is \" + peakUsed + \" peak max is \" + peakMax);\n+            log.display(\"  threshold set to \" + threshold);\n+            long thresholdCount = monitor.getUsageThresholdCount(pool);\n+            log.display(\"  threshold count  \" + thresholdCount);\n+\n+            \/\/ Test can be imprecise, particularly with CodeHeap: usage changes outside our control.\n+            if (thresholdCount > 0 && monitor.getType(pool) != MemoryType.HEAP) {\n+                log.display(\"  thresholdCount increasing outside our control for non-heap Pool: skip\");\n+                continue;\n+            }\n@@ -93,2 +116,4 @@\n-            if (used < threshold && isExceeded) {\n-                \/\/ There're problems with isUsageThresholdExceeded()\n+            \/\/ If peak used value is less than threshold, then isUsageThresholdExceeded()\n+            \/\/ is expected to return false.\n+            if (peakUsed < threshold && isExceeded) {\n+                \/\/ used is commonly less than threshold, but isExceeded should not be true:\n@@ -97,1 +122,3 @@\n-                    + \" and used peak = \" + used);\n+                    + \" and used peak = \" + peakUsed);\n+                isExceeded = monitor.isUsageThresholdExceeded(pool);\n+                if (isExceeded) {\n@@ -99,0 +126,3 @@\n+                } else {\n+                    log.complain(\"isUsageThresholdExceeded() now says false.\");\n+                }\n@@ -100,8 +130,6 @@\n-            if (used >= threshold && !isExceeded) {\n-                \/\/ we can introduce some imprecision during pooling memory usage\n-                \/\/ value at the Code Cache memory pool. Amount of used memory\n-                \/\/ was changed after we'd calculated isExceeded value\n-\n-                if (monitor.isUsageThresholdExceeded(pool)) {\n-                    \/\/ that's mean such imprecision\n-                    log.display(\"isUsageThresholdExceeded() returned false,\"\n+            \/\/ If peak used value is greater or equal than threshold, then\n+            \/\/ isUsageThresholdExceeded() is expected to return true.\n+            if (peakUsed >= threshold && !isExceeded) {\n+                isExceeded = monitor.isUsageThresholdExceeded(pool);\n+                if (isExceeded) {\n+                    log.display(\"isUsageThresholdExceeded() returned false, then true,\"\n@@ -109,1 +137,1 @@\n-                        + \"used peak = \" + used);\n+                        + \"used peak = \" + peakUsed);\n@@ -111,2 +139,2 @@\n-                    \/\/ some other problems with isUsageThresholdExceeded()\n-                    log.complain(\"isUsageThresholdExceeded() returned false,\"\n+                    \/\/ Failure:\n+                    log.complain(\"isUsageThresholdExceeded() returned false, and is still false,\"\n@@ -114,1 +142,1 @@\n-                        + \"used peak = \" + used);\n+                        + \"used peak = \" + peakUsed);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isUsageThresholdExceeded\/isexceeded001.java","additions":61,"deletions":33,"binary":false,"changes":94,"status":"modified"}]}