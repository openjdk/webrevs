{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,2 @@\n-        sslClient.alpn().whenComplete((String s, Throwable t) -> {\n+        var alpnCF = sslClient.alpn()\n+                .whenComplete((String s, Throwable t) -> {\n@@ -108,1 +109,1 @@\n-            System.out.println(\"ALPN: \" + alpn);\n+            println(\"ALPN: \" + alpn);\n@@ -110,1 +111,1 @@\n-            System.out.printf(\"Handshake took %d ms\\n\", period);\n+            printf(\"Handshake took %d ms\", period);\n@@ -117,2 +118,2 @@\n-        String aa = sslClient.alpn().join();\n-        System.out.println(\"AAALPN = \" + aa);\n+        String aa = alpnCF.join();\n+        println(\"AAALPN = \" + aa);\n@@ -122,1 +123,1 @@\n-        System.out.println(\"Src Publisher exception\");\n+        println(\"Src Publisher exception\");\n@@ -138,2 +139,2 @@\n-        System.out.printf(\"Submitting %d buffer arrays\\n\", COUNTER);\n-        System.out.printf(\"LoopCount should be %d\\n\", TOTAL_LONGS);\n+        printf(\"Submitting %d buffer arrays\", COUNTER);\n+        printf(\"LoopCount should be %d\", TOTAL_LONGS);\n@@ -145,1 +146,1 @@\n-        System.out.println(\"Finished submission. Waiting for loopback\");\n+        println(\"Finished submission. Waiting for loopback\");\n@@ -147,1 +148,14 @@\n-        completion.whenComplete((r,t) -> allBytesReceived.countDown());\n+        var done = completion.whenComplete((r,t) -> {\n+            try {\n+                if (t != null) {\n+                    println(\"Completion with error: \" + t);\n+                    t.printStackTrace(System.out);\n+                } else {\n+                    println(\"Successful completion\");\n+                }\n+            } finally {\n+                println(\"allBytesReceived.countDown()\");\n+                allBytesReceived.countDown();\n+            }\n+        });\n+\n@@ -153,1 +167,2 @@\n-        System.out.println(\"All bytes received: \");\n+        println(\"All bytes received; latch count:\"\n+                + allBytesReceived.getCount());\n@@ -156,1 +171,1 @@\n-            completion.join();\n+            done.join();\n@@ -160,1 +175,1 @@\n-            System.out.println(\"OK\");\n+            println(\"OK\");\n@@ -190,0 +205,1 @@\n+        private final SSLServerSocket serv;\n@@ -201,1 +217,1 @@\n-            SSLServerSocket serv = (SSLServerSocket) fac.createServerSocket();\n+            serv = (SSLServerSocket) fac.createServerSocket();\n@@ -229,1 +245,1 @@\n-            System.out.println(\"Loopback Publisher exception\");\n+            println(\"Loopback Publisher exception\");\n@@ -240,1 +256,1 @@\n-                System.out.println(\"clientReader: bufsize = \" + bufsize);\n+                println(\"clientReader: bufsize = \" + bufsize);\n@@ -245,1 +261,1 @@\n-                        System.out.println(\"clientReader close: read \"\n+                        println(\"clientReader close: read \"\n@@ -247,2 +263,2 @@\n-                        System.out.println(\"clientReader: got EOF. \"\n-                                            + \"Waiting signal to close publisher.\");\n+                        println(\"clientReader: got EOF. \"\n+                                + \"Waiting signal to close publisher.\");\n@@ -250,1 +266,2 @@\n-                        System.out.println(\"clientReader: closing publisher\");\n+                        println(\"clientReader: closing publisher; latch count: \"\n+                                + allBytesReceived.getCount());\n@@ -253,1 +270,1 @@\n-                        Utils.close(is, clientSock);\n+                        Utils.close(is, clientSock, serv);\n@@ -261,0 +278,1 @@\n+                println(\"clientReader failed: \" + e);\n@@ -279,1 +297,1 @@\n-                        System.out.println(\"clientWriter close: \" + nbytes + \" written\");\n+                        println(\"clientWriter close: \" + nbytes + \" written\");\n@@ -281,1 +299,1 @@\n-                        System.out.println(\"clientWriter close return\");\n+                        println(\"clientWriter close return\");\n@@ -293,0 +311,1 @@\n+                println(\"clientWriter failed: \" + e);\n@@ -320,1 +339,1 @@\n-                System.out.println(\"serverLoopback: bufsize = \" + bufsize);\n+                println(\"serverLoopback: bufsize = \" + bufsize);\n@@ -326,2 +345,3 @@\n-                        is.close();\n-                        serverSock.close();\n+                        println(\"Received EOF: closing server socket\");\n+                        Utils.close(is, serverSock, serv);\n+                        println(\"Server socket closed\");\n@@ -335,0 +355,1 @@\n+                println(\"serverLoopback failed: \" + e);\n@@ -389,1 +410,1 @@\n-        private final long nbytes;\n+        private final long nlongs;\n@@ -396,1 +417,1 @@\n-        EndSubscriber(long nbytes,\n+        EndSubscriber(long nlongs,\n@@ -400,1 +421,1 @@\n-            this.nbytes = nbytes;\n+            this.nlongs = nlongs;\n@@ -430,0 +451,4 @@\n+                    if (buf.remaining() % 8 != 0) {\n+                        completion.completeExceptionally(\n+                                new AssertionError(\"Unaligned buffer: \" + buf.remaining()));\n+                    }\n@@ -435,1 +460,1 @@\n-                        System.out.println(\"ERROR at \" + n + \" != \" + (currval - 1));\n+                        println(\"ERROR at \" + n + \" != \" + (currval - 1));\n@@ -446,0 +471,1 @@\n+                println(\"allBytesReceived.countDown(): currval=\" +currval);\n@@ -452,1 +478,0 @@\n-            allBytesReceived.countDown();\n@@ -459,2 +484,2 @@\n-            if (n != nbytes) {\n-                System.out.printf(\"nbytes=%d n=%d\\n\", nbytes, n);\n+            if (n != nlongs) {\n+                printf(\"Error at end: nlongs=%d n=%d\", nlongs, n);\n@@ -463,2 +488,1 @@\n-                System.out.println(\"DONE OK: counter = \" + n);\n-                allBytesReceived.countDown();\n+                println(\"DONE OK: counter = \" + n);\n@@ -551,0 +575,36 @@\n+\n+    static final long START = System.nanoTime();\n+\n+    static String now() {\n+        long now = System.nanoTime() - START;\n+        long min = now \/ 1000_000_000L \/ 60L;\n+        long sec = (now \/ 1000_000_000L) % 60L;\n+        long mil = (now \/ 1000_000L) % 1000L;\n+        long nan = (now % 1000_000L);\n+        StringBuilder str = new StringBuilder();\n+        if (min != 0) {\n+            str = str.append(min).append(\"m \");\n+        }\n+        if (sec != 0) {\n+            str = str.append(sec).append(\"s \");\n+        }\n+        if (mil != 0) {\n+            str.append(mil).append(\"ms \");\n+        }\n+        if (nan != 0) {\n+            str.append(nan).append(\"ns \");\n+        }\n+        assert now == min * 60L * 1000_000_000L\n+                + sec * 1000_000_000L\n+                + mil * 1000_000L + nan;\n+        return str.toString().trim();\n+    }\n+\n+    static void printf(String fmt, Object... args) {\n+        println(String.format(fmt, args));\n+    }\n+\n+    static void println(String msg) {\n+        System.out.println(\"[\" + Thread.currentThread() + \"] [\" + now() + \"] \" + msg);\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/whitebox\/java.net.http\/jdk\/internal\/net\/http\/FlowTest.java","additions":96,"deletions":36,"binary":false,"changes":132,"status":"modified"}]}