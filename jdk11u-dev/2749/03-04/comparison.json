{"files":[{"patch":"@@ -40,1 +40,1 @@\n- * @build jdk.test.lib.util.JarBuilder jdk.test.lib.compiler.CompilerUtils\n+ * @build jjdk.lib.testlibrary.java.util.jar.JarBuilder jdk.test.lib.compiler.CompilerUtils\n","filename":"test\/jdk\/sun\/misc\/URLClassPath\/LargeClasspathWithPkgPrefix.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,106 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.test.lib.util;\n-\n-import java.io.IOException;\n-import java.io.OutputStream;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.jar.Attributes;\n-import java.util.jar.JarEntry;\n-import java.util.jar.JarOutputStream;\n-import java.util.jar.Manifest;\n-\n-public class JarBuilder {\n-    final private String name;\n-    final private Attributes attributes = new Attributes();\n-    final private List<Entry> entries = new ArrayList<>();\n-\n-    public JarBuilder(String name) {\n-        this.name = name;\n-        attributes.putValue(\"Manifest-Version\", \"1.0\");\n-        attributes.putValue(\"Created-By\", \"1.9.0-internal (Oracle Corporation)\");\n-    }\n-\n-    public JarBuilder addAttribute(String name, String value) {\n-        attributes.putValue(name, value);\n-        return this;\n-    }\n-\n-    public JarBuilder addEntry(String name, byte[] bytes) {\n-        entries.add(new Entry(name, bytes));\n-        return this;\n-    }\n-\n-    public void build() throws IOException {\n-        try (OutputStream os = Files.newOutputStream(Paths.get(name));\n-             JarOutputStream jos = new JarOutputStream(os)) {\n-            JarEntry me = new JarEntry(\"META-INF\/MANIFEST.MF\");\n-            jos.putNextEntry(me);\n-            Manifest manifest = new Manifest();\n-            manifest.getMainAttributes().putAll(attributes);\n-            manifest.write(jos);\n-            jos.closeEntry();\n-            entries.forEach(e -> {\n-                JarEntry je = new JarEntry(e.name);\n-                try {\n-                    jos.putNextEntry(je);\n-                    jos.write(e.bytes);\n-                    jos.closeEntry();\n-                } catch (IOException iox) {\n-                    throw new RuntimeException(iox);\n-                }\n-            });\n-        } catch (RuntimeException x) {\n-            Throwable t = x.getCause();\n-            if (t instanceof IOException) {\n-                IOException iox = (IOException)t;\n-                throw iox;\n-            }\n-            throw x;\n-        }\n-    }\n-\n-    private static class Entry {\n-        String name;\n-        byte[] bytes;\n-\n-        Entry(String name, byte[] bytes) {\n-            this.name = name;\n-            this.bytes = bytes;\n-        }\n-    }\n-\n-    public static void main(String[] args) throws IOException {\n-        JarBuilder jb = new JarBuilder(\"version.jar\");\n-        jb.addAttribute(\"Multi-Release\", \"true\");\n-        String s = \"something to say\";\n-        byte[] bytes = s.getBytes();\n-        jb.addEntry(\"version\/Version.class\", bytes);\n-        jb.addEntry(\"README\", bytes);\n-        jb.addEntry(\"version\/Version.java\", bytes);\n-        jb.build();\n-    }\n-}\n","filename":"test\/lib\/jdk\/test\/lib\/util\/JarBuilder.java","additions":0,"deletions":106,"binary":false,"changes":106,"status":"deleted"}]}