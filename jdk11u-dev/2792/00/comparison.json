{"files":[{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 4198994\n+  @summary getInsets should return Insets object that is safe to modify\n+  @key headful\n+  @run main ClobberSharedInsetsObjectTest\n+*\/\n+\n+\/**\n+ * ClobberSharedInsetsObjectTest.java\n+ *\n+ * summary: The bug is that getInsets directly returns Insets object\n+ * obtained from peer getInsets.  The latter always return the\n+ * reference to the same object, so modifying this object will affect\n+ * other code that calls getInsets.  The test checks that it's safe to\n+ * modify the Insets object returned by getInsets.  If the change to\n+ * this object is not visible on the next invocation, the bug is\n+ * considered to be fixed.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Insets;\n+import java.awt.Panel;\n+\n+public class ClobberSharedInsetsObjectTest {\n+    static Panel p;\n+\n+    \/\/ Impossible inset value to use for the test\n+    final static int SENTINEL_INSET_VALUE = -10;\n+    static Frame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            try {\n+                \/\/ Need a peer anyway, so let the bug manifest visuially, even\n+                \/\/ though we can detect it automatically.\n+                f = new Frame();\n+                p = new Panel();\n+                p.setBackground(Color.red);\n+                f.setLayout (new BorderLayout ());\n+                f.add(p, \"Center\");\n+\n+                Insets insetsBefore = p.getInsets();\n+                insetsBefore.top = SENTINEL_INSET_VALUE;\n+\n+                Insets insetsAfter = p.getInsets();\n+                if (insetsAfter.top == SENTINEL_INSET_VALUE) { \/\/ OOPS!\n+                    throw new Error(\"4198994: getInsets returns the same object on subsequent invocations\");\n+                }\n+\n+                f.setSize (200,200);\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+\n+                System.out.println(\"getInsets is ok.  The object it returns is safe to modify.\");\n+            } finally {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Insets\/ClobberSharedInsetsObjectTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 6353381\n+  @summary REG: Container.getInsets() returns an incorrect value after removal of menubar, Win32\n+  @key headful\n+  @run main RemoveMenuBarTest\n+*\/\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Insets;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+\n+public class RemoveMenuBarTest {\n+    static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            try {\n+                \/\/ old insets: top>0 | left>0\n+                \/\/ new insets: top=0 & left=0\n+                \/\/ the bug is that updating doesn't happen\n+                frame = new Frame();\n+                MenuBar menubar = new MenuBar();\n+                frame.setBounds(100,100,100,100);\n+                frame.setUndecorated(true);\n+                frame.pack();\n+                menubar.add(new Menu());\n+                frame.setMenuBar(menubar);\n+                System.out.println(frame.getInsets());\n+\n+                frame.setMenuBar(null);\n+                Insets insets = frame.getInsets();\n+                System.out.println(insets);\n+                if (insets.top != 0 || insets.left != 0 ||\n+                    insets.bottom !=0 || insets.right != 0) {\n+                    throw new RuntimeException(\"Test failed: the incorrect insets\");\n+                }\n+            } finally {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Insets\/RemoveMenuBarTest.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 4704042\n+  @summary Unit tests for Insets.set()\n+  @run main SetInsetsTest\n+*\/\n+import java.awt.Insets;\n+import java.awt.EventQueue;\n+\n+public class SetInsetsTest {\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            Insets insets = new Insets(0,0,0,0);\n+            insets.set(100,100,100,100);\n+            if (insets.top != 100 ||\n+                insets.bottom != 100 ||\n+                insets.left != 100 ||\n+                insets.right != 100) {\n+                throw new RuntimeException(\"Test Failed!  Insets=\" + insets);\n+            }\n+        });\n+    }\n+}\/\/ class SetInsetsTest\n","filename":"test\/jdk\/java\/awt\/Insets\/SetInsetsTest.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+  @test\n+  @bug 5089312\n+  @summary Bottom inset must not change after a second pack call.\n+  @key headful\n+  @run main WindowInsetsTest\n+*\/\n+import java.awt.EventQueue;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JWindow;\n+\n+public class WindowInsetsTest {\n+    static JFrame frame;\n+    static JWindow window;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            try {\n+                frame = new JFrame(\"Window Test\");\n+                frame.setBounds(100, 100, 400, 300);\n+                frame.setVisible(true);\n+\n+                JButton button = new JButton(\"A Button\");\n+                window = new JWindow(frame);\n+                window.getContentPane().add(button);\n+                window.pack();\n+                window.setLocation(200, 200);\n+                window.show();\n+                double h0 = window.getSize().getHeight();\n+                window.pack();\n+                double h1 = window.getSize().getHeight();\n+                if( Math.abs(h1 - h0) > 0.5 ) {\n+                    throw new RuntimeException(\"Test failed: Bad insets.\");\n+                }\n+                System.out.println(\"Test Passed.\");\n+            } finally {\n+                if (window != null) {\n+                    window.dispose();\n+                }\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Insets\/WindowInsetsTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}