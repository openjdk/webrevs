{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.Extern;\n@@ -337,38 +338,1 @@\n-        StringBuilder sb = new StringBuilder();\n-        for (int i = 0; i < name.length(); i++) {\n-            char ch = name.charAt(i);\n-            switch (ch) {\n-                case '(':\n-                case ')':\n-                case '<':\n-                case '>':\n-                case ',':\n-                    sb.append('-');\n-                    break;\n-                case ' ':\n-                case '[':\n-                    break;\n-                case ']':\n-                    sb.append(\":A\");\n-                    break;\n-                \/\/ Any appearance of $ needs to be substituted with \":D\" and not with hyphen\n-                \/\/ since a field name \"P$$ and a method P(), both valid member names, can end\n-                \/\/ up as \"P--\". A member name beginning with $ needs to be substituted with\n-                \/\/ \"Z:Z:D\".\n-                case '$':\n-                    if (i == 0)\n-                        sb.append(\"Z:Z\");\n-                    sb.append(\":D\");\n-                    break;\n-                \/\/ A member name beginning with _ needs to be prefixed with \"Z:Z\" since valid anchor\n-                \/\/ names can only begin with a letter.\n-                case '_':\n-                    if (i == 0)\n-                        sb.append(\"Z:Z\");\n-                    sb.append(ch);\n-                    break;\n-                default:\n-                    sb.append(ch);\n-            }\n-        }\n-        return sb.toString();\n+        return Extern.getOldFormHtmlName(name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Links.java","additions":3,"deletions":39,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,0 +101,5 @@\n+        \/**\n+         * Indicates that docs use old-form of anchors.\n+         *\/\n+        final boolean useOldFormId;\n+\n@@ -111,1 +116,1 @@\n-        Item(String elementName, DocPath path, boolean relative) {\n+        Item(String elementName, DocPath path, boolean relative, boolean useOldFormId) {\n@@ -115,0 +120,1 @@\n+            this.useOldFormId = useOldFormId;\n@@ -182,1 +188,1 @@\n-        return new DocLink(p, \"is-external=true\", memberName);\n+        return new DocLink(p, \"is-external=true\", fnd.useOldFormId ? getOldFormHtmlName(memberName) : memberName);\n@@ -215,0 +221,12 @@\n+    \/**\n+     * Checks if platform docs for the specified version use old-form anchors.\n+     * Old-form anchors are used by Oracle docs for JDKs 8 and 9.\n+     * It can be checked on https:\/\/docs.oracle.com\/javase\/<version>\/docs\/api\n+     *\n+     * @param version\n+     * @return True if docs use old-form anchors\n+     *\/\n+    private boolean isOldFormPlatformDocs(int version) {\n+        return 8 == version || 9 == version;\n+    }\n+\n@@ -295,1 +313,1 @@\n-            readElementList(link.openStream(), urlpath, false);\n+            readElementList(link.openStream(), urlpath, false, false);\n@@ -312,1 +330,1 @@\n-            readElementList(link.openStream(), urlpath, false);\n+            readElementList(link.openStream(), urlpath, false, true);\n@@ -335,1 +353,1 @@\n-            readElementList(file, path);\n+            readElementList(file, path, false);\n@@ -342,1 +360,1 @@\n-                readElementList(file1, path);\n+                readElementList(file1, path, true);\n@@ -349,1 +367,1 @@\n-    private void readElementList(DocFile file, String path) throws Fault, DocFileIOException {\n+    private void readElementList(DocFile file, String path, boolean isOldFormDoc) throws Fault, DocFileIOException {\n@@ -355,1 +373,1 @@\n-                readElementList(file.openInputStream(), path, pathIsRelative);\n+                readElementList(file.openInputStream(), path, pathIsRelative, isOldFormDoc);\n@@ -373,1 +391,1 @@\n-    private void readElementList(InputStream input, String path, boolean relative)\n+    private void readElementList(InputStream input, String path, boolean relative, boolean isOldFormDoc)\n@@ -385,1 +403,1 @@\n-                        Item item = new Item(moduleName, elempath, relative);\n+                        Item item = new Item(moduleName, elempath, relative, isOldFormDoc);\n@@ -395,1 +413,1 @@\n-                        Item item = new Item(elemname, elempath, relative);\n+                        Item item = new Item(elemname, elempath, relative, isOldFormDoc);\n@@ -458,0 +476,61 @@\n+\n+    \/**\n+     * Converts a name to an old-form HTML name (old-form id).\n+     *\n+     * @param name the string that needs to be converted to a valid HTML name\n+     * @return old-form HTML name\n+     *\/\n+    public static String getOldFormHtmlName(String name) {\n+        \/* The HTML 4 spec at http:\/\/www.w3.org\/TR\/html4\/types.html#h-6.2 mentions\n+         * that the name\/id should begin with a letter followed by other valid characters.\n+         * The HTML 5 spec (draft) is more permissive on names\/ids where the only restriction\n+         * is that it should be at least one character long and should not contain spaces.\n+         * The spec draft is @ http:\/\/www.w3.org\/html\/wg\/drafts\/html\/master\/dom.html#the-id-attribute.\n+         *\n+         * For HTML 4, we need to check for non-characters at the beginning of the name and\n+         * substitute it accordingly, \"_\" and \"$\" can appear at the beginning of a member name.\n+         * The method substitutes \"$\" with \"Z:Z:D\" and will prefix \"_\" with \"Z:Z\".\n+         *\/\n+\n+        if (null == name)\n+            return name;\n+\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < name.length(); i++) {\n+            char ch = name.charAt(i);\n+            switch (ch) {\n+                case '(':\n+                case ')':\n+                case '<':\n+                case '>':\n+                case ',':\n+                    sb.append('-');\n+                    break;\n+                case ' ':\n+                case '[':\n+                    break;\n+                case ']':\n+                    sb.append(\":A\");\n+                    break;\n+                \/\/ Any appearance of $ needs to be substituted with \":D\" and not with hyphen\n+                \/\/ since a field name \"P$$ and a method P(), both valid member names, can end\n+                \/\/ up as \"P--\". A member name beginning with $ needs to be substituted with\n+                \/\/ \"Z:Z:D\".\n+                case '$':\n+                    if (i == 0)\n+                        sb.append(\"Z:Z\");\n+                    sb.append(\":D\");\n+                    break;\n+                \/\/ A member name beginning with _ needs to be prefixed with \"Z:Z\" since valid anchor\n+                \/\/ names can only begin with a letter.\n+                case '_':\n+                    if (i == 0)\n+                        sb.append(\"Z:Z\");\n+                    sb.append(ch);\n+                    break;\n+                default:\n+                    sb.append(ch);\n+            }\n+        }\n+        return sb.toString();\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Extern.java","additions":91,"deletions":12,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-                \"<a href=\\\"\" + uri + \"java\/math\/BigInteger.html?is-external=true#gcd(java.math.BigInteger)\\\" \"\n+                \"<a href=\\\"\" + uri + \"java\/math\/BigInteger.html?is-external=true#gcd-java.math.BigInteger-\\\" \"\n@@ -93,1 +93,1 @@\n-                \"<a href=\\\"\" + uri + \"java\/math\/BigInteger.html?is-external=true#gcd(java.math.BigInteger)\\\" \"\n+                \"<a href=\\\"\" + uri + \"java\/math\/BigInteger.html?is-external=true#gcd-java.math.BigInteger-\\\" \"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testClassCrossReferences\/TestClassCrossReferences.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-                + \"<dd><code><a href=\\\"\" + uri + \"\/java\/io\/FilterReader.html?is-external=true#read()\\\" \"\n+                + \"<dd><code><a href=\\\"\" + uri + \"\/java\/io\/FilterReader.html?is-external=true#read--\\\" \"\n@@ -61,1 +61,1 @@\n-                + \"<dd><code><a href=\\\"\" + uri + \"\/java\/io\/DataInput.html?is-external=true#readInt()\\\" \"\n+                + \"<dd><code><a href=\\\"\" + uri + \"\/java\/io\/DataInput.html?is-external=true#readInt--\\\" \"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testExternalOverridenMethod\/TestExternalOverridenMethod.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-                \"href=\\\"http:\/\/java.sun.com\/j2se\/1.4\/docs\/api\/java\/lang\/Object.html?is-external=true#wait(long,int)\\\"\",\n+                \"href=\\\"http:\/\/java.sun.com\/j2se\/1.4\/docs\/api\/java\/lang\/Object.html?is-external=true#wait-long-int-\\\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHref\/TestHref.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-                + \"<a href=\\\"\" + url + \"java\/lang\/ClassLoader.html?is-external=true#getSystemClassLoader()\\\"\"\n+                + \"<a href=\\\"\" + url + \"java\/lang\/ClassLoader.html?is-external=true#getSystemClassLoader--\\\"\"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkOption\/TestLinkOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}