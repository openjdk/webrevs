{"files":[{"patch":"@@ -2287,7 +2287,11 @@\n-  JvmtiThreadState* state = JvmtiThreadState::state_for(JavaThread::current());\n-  \/\/ state can only be NULL if the current thread is exiting which\n-  \/\/ should not happen since we're trying to post an event\n-  guarantee(state != NULL, \"attempt to register stub via an exiting thread\");\n-  JvmtiDynamicCodeEventCollector* collector = state->get_dynamic_code_event_collector();\n-  guarantee(collector != NULL, \"attempt to register stub without event collector\");\n-  collector->register_stub(name, code_begin, code_end);\n+  \/\/ Cannot take safepoint here so do not use state_for to get\n+  \/\/ jvmti thread state.\n+  \/\/ The collector and\/or state might be NULL if JvmtiDynamicCodeEventCollector\n+  \/\/ has been initialized while JVMTI_EVENT_DYNAMIC_CODE_GENERATED was disabled.\n+  JvmtiThreadState* state = JavaThread::current()->jvmti_thread_state();\n+  if (state != NULL) {\n+    JvmtiDynamicCodeEventCollector *collector = state->get_dynamic_code_event_collector();\n+    if (collector != NULL) {\n+      collector->register_stub(name, code_begin, code_end);\n+    }\n+  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8212155\n+ * @summary Test concurrent enabling and posting of DynamicCodeGenerated events.\n+ * @library \/test\/lib\n+ * @run main\/othervm\/native -agentlib:DynamicCodeGenerated DynamicCodeGeneratedTest\n+ *\/\n+\n+import java.lang.ref.Reference;\n+\n+public class DynamicCodeGeneratedTest {\n+    static {\n+        System.loadLibrary(\"DynamicCodeGenerated\");\n+    }\n+    public static native void changeEventNotificationMode();\n+\n+    public static void main(String[] args) {\n+        \/\/ Try to enable DynamicCodeGenerated event while it is posted\n+        \/\/ using JvmtiDynamicCodeEventCollector from VtableStubs::find_stub\n+        Thread t = new Thread(() -> {\n+            changeEventNotificationMode();\n+        });\n+        t.setDaemon(true);\n+        t.start();\n+\n+        for (int i = 0; i < 2000; i++) {\n+            new Thread(() -> {\n+                String result = \"string\" + System.currentTimeMillis();\n+                Reference.reachabilityFence(result);\n+            }).start();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/DynamicCodeGenerated\/DynamicCodeGeneratedTest.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <string.h>\n+#include <jvmti.h>\n+\n+static jvmtiEnv* jvmti = NULL;\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+JNIEXPORT\n+void JNICALL Java_DynamicCodeGeneratedTest_changeEventNotificationMode(JNIEnv* jni, jclass cls) {\n+  while (true) {\n+    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, NULL);\n+    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, NULL);\n+  }\n+}\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+void JNICALL DynamicCodeGenerated(jvmtiEnv* jvmti, const char* name, const void* address, jint length) {\n+\n+}\n+\n+jint Agent_OnLoad(JavaVM* vm, char* options, void* reserved) {\n+    vm->GetEnv((void**)&jvmti, JVMTI_VERSION_1_0);\n+    jvmtiEventCallbacks callbacks;\n+    memset(&callbacks, 0, sizeof(callbacks));\n+    callbacks.DynamicCodeGenerated = DynamicCodeGenerated;\n+    jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n+\n+    return 0;\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/DynamicCodeGenerated\/libDynamicCodeGenerated.cpp","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}