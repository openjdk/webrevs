{"files":[{"patch":"@@ -75,1 +75,1 @@\n-  oop holder = ik->holder_phantom();\n+  oop holder = ik->klass_holder();\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -695,0 +695,9 @@\n+\/\/ Let the GC read the holder without keeping it alive.\n+oop ClassLoaderData::holder_no_keepalive() const {\n+  if (!_holder.is_null()) {  \/\/ NULL class_loader\n+    return _holder.peek();\n+  } else {\n+    return NULL;\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -290,1 +290,2 @@\n- private:\n+  oop holder_no_keepalive() const;\n+  oop holder_phantom() const;\n@@ -292,0 +293,1 @@\n+ private:\n@@ -295,1 +297,0 @@\n-  oop holder_phantom() const;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  assert(_holder.is_null() || _holder.peek() != NULL , \"This class loader data holder must be alive\");\n+  assert(_holder.is_null() || holder_no_keepalive() != NULL , \"This class loader data holder must be alive\");\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-  oop op = k->klass_holder();\n+  oop op = k->class_loader_data()->holder_no_keepalive();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  oop holder = klass->klass_holder();\n+  oop holder = klass->class_loader_data()->holder_no_keepalive();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-  oop op = klass->klass_holder();\n+  oop op = klass->class_loader_data()->holder_no_keepalive();\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    _holder = Handle(_thread, klass->holder_phantom());\n+    _holder = Handle(_thread, klass->klass_holder());\n@@ -59,1 +59,1 @@\n-    _holder = Handle(_thread, klass->holder_phantom());\n+    _holder = Handle(_thread, klass->klass_holder());\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -683,6 +683,0 @@\n-  \/\/ Oop that keeps the metadata for this class from being unloaded\n-  \/\/ in places where the metadata is stored in other places, like nmethods\n-  oop klass_holder() const {\n-    return is_anonymous() ? java_mirror() : class_loader();\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -396,4 +396,0 @@\n-oop Klass::holder_phantom() const {\n-  return class_loader_data()->holder_phantom();\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -509,1 +509,5 @@\n-  virtual oop klass_holder() const      { return class_loader(); }\n+  \/\/ This loads the klass's holder as a phantom. This is useful when a weak Klass\n+  \/\/ pointer has been \"peeked\" and then must be kept alive before it may\n+  \/\/ be used safely.  All uses of klass_holder need to apply the appropriate barriers,\n+  \/\/ except during GC.\n+  oop klass_holder() const { return class_loader_data()->holder_phantom(); }\n@@ -660,5 +664,0 @@\n-  \/\/ Load the klass's holder as a phantom. This is useful when a weak Klass\n-  \/\/ pointer has been \"peeked\" and then must be kept alive before it may\n-  \/\/ be used safely.\n-  oop holder_phantom() const;\n-\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}