{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-                    info[0] = fontConfigFonts[i].firstFont.familyName;\n+                    info[0] = fontConfigFonts[i].firstFont.fullName;\n@@ -93,1 +93,1 @@\n-                info[0] = fontConfigFonts[0].firstFont.familyName;\n+                info[0] = fontConfigFonts[0].firstFont.fullName;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/FcFontManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import java.util.Locale;\n@@ -267,1 +268,1 @@\n-                    faceNames[index] = fcFonts[index].familyName;\n+                    faceNames[index] = fcFonts[index].fullName;\n@@ -360,1 +361,3 @@\n-            String lang = SunToolkit.getStartupLocale().getLanguage();\n+            Locale locale = SunToolkit.getStartupLocale();\n+            String lang = locale.getLanguage();\n+            String country = locale.getCountry();\n@@ -362,1 +365,1 @@\n-                osName+\"-\"+osVersion+\"-\"+lang+\".properties\";\n+                osName+\"-\"+osVersion+\"-\"+lang+\"-\"+country+\".properties\";\n@@ -388,2 +391,0 @@\n-                props.setProperty(styleKey+\".\"+j+\".family\",\n-                                  fci.allFonts[j].familyName);\n@@ -392,0 +393,4 @@\n+                if (fci.allFonts[j].fullName != null) {\n+                    props.setProperty(styleKey+\".\"+j+\".fullName\",\n+                                      fci.allFonts[j].fullName);\n+                }\n@@ -506,3 +511,3 @@\n-                        String fkey = key+\".\"+f+\".family\";\n-                        String family = (String)props.get(fkey);\n-                        fci[index].allFonts[f].familyName = family;\n+                        String fkey = key+\".\"+f+\".fullName\";\n+                        String fullName = (String)props.get(fkey);\n+                        fci[index].allFonts[f].fullName = fullName;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/FcFontConfiguration.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8219901\n+ * @modules java.desktop\/sun.font\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if the first fonts of CompositeFont and fc-match are same.\n+ *\/\n+\n+import java.awt.Font;\n+import java.util.Locale;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import sun.font.FontUtilities;\n+import sun.font.Font2D;\n+import sun.font.CompositeFont;\n+import sun.font.PhysicalFont;\n+\n+public class FCCompositeTest {\n+\n+    final static String[] names =\n+        new String[]{\"Monospaced\",\"SansSerif\",\"Serif\"};\n+    final static String[] fcnames =\n+        new String[]{\"monospace\",\"sans\",\"serif\"};\n+\n+    public static void main(String args[]) {\n+        for(int i = 0; i < names.length; i++) {\n+            test(i);\n+        }\n+    }\n+\n+    private static void test(int index) {\n+        boolean matched = false;\n+        String fullName = \"\";\n+        String fcFullName = \"\";\n+        try {\n+            Font2D f2d = FontUtilities.getFont2D(\n+                             new Font(names[index], Font.PLAIN, 12));\n+            if (!(f2d instanceof CompositeFont)) {\n+                System.out.println(\"WARNING: Not CompositeFont\");\n+                return;\n+            }\n+            PhysicalFont pf = ((CompositeFont)f2d).getSlotFont(0);\n+            fullName = pf.getFontName(Locale.ENGLISH);\n+            System.out.println(\"PF=\"+fullName);\n+\n+            String[] command = {\"fc-match\",\n+                                fcnames[index],\n+                                \"fullname\"};\n+            Runtime runtime = Runtime.getRuntime();\n+            Process p = runtime.exec(command, null, null);\n+            p.waitFor();\n+            InputStream is = p.getInputStream();\n+            InputStream es = p.getErrorStream();\n+            BufferedReader br =\n+                new BufferedReader(new InputStreamReader(is));\n+            BufferedReader errorBr =\n+                new BufferedReader(new InputStreamReader(es));\n+            String line;\n+            while ((line = errorBr.readLine()) != null) {\n+                if (line.contains(\"warning\") && line.contains(\"language\")) {\n+                    System.out.println(\"Skip test by fc-match warning\");\n+                    return;\n+                }\n+            }\n+            while (!matched) {\n+                String fcname = br.readLine();\n+                if (fcname == null) break;\n+                fcFullName = fcname;\n+                if (fcname.equals(\"\")) {\n+                    System.out.println(\"Skip if no fullname\");\n+                    return;\n+                }\n+                fcname = fcname.replaceAll(\"\\\\\\\\\", \"\");\n+                String[] list = fcname.split(\"=|,\", 0);\n+                for (int i = 1; i < list.length; i++) {\n+                    \/\/ skip header\n+                    if (fullName.equals(list[i])) {\n+                        matched = true;\n+                        break;\n+                    }\n+                }\n+            }\n+            br.close();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            throw new RuntimeException(\"Method invocation exception\");\n+        }\n+        if (!matched) {\n+            throw new RuntimeException(\"FullName mismatch: \"+fullName+\"|\"+\n+                                           fcFullName);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/font\/FontNames\/FCCompositeTest.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"}]}