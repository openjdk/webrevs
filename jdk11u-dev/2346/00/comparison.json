{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,0 +457,25 @@\n+        protected Rectangle rectangleForCurrentValue() {\n+            int width = comboBox.getWidth();\n+            int height = 22;\n+            Insets insets = getInsets();\n+            int buttonSize = height - (insets.top + insets.bottom);\n+            if ( arrowButton != null )  {\n+                buttonSize = arrowButton.getWidth();\n+            }\n+            int midHeight = (comboBox.getHeight() - height - (insets.top + insets.bottom)) \/ 2 - 1;\n+            if (midHeight < 0) {\n+                midHeight = 0;\n+            }\n+\n+            if (comboBox.getComponentOrientation().isLeftToRight()) {\n+                return new Rectangle(insets.left, insets.top + midHeight,\n+                        width - (insets.left + insets.right + buttonSize) + 4,\n+                        height - (insets.top + insets.bottom));\n+            }\n+            else {\n+                return new Rectangle(insets.left + buttonSize, insets.top + midHeight,\n+                        width - (insets.left + insets.right + buttonSize) + 4,\n+                        height - (insets.top + insets.bottom));\n+            }\n+        }\n+\n@@ -480,2 +505,0 @@\n-                editorRect.width += 4;\n-                editorRect.height += 1;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxUI.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8054572\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests if JComboBox displays correctly when editable\/non-editable\n+ * @run main\/manual JComboBoxBorderTest\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class JComboBoxBorderTest {\n+    private static final String instructionsText = \"Pass if you can see both \" +\n+            \"an editable and non-editable JComboBox and if they display \" +\n+            \"reasonably. Fail if they do not appear or are misaligned.\";\n+\n+    private static JFrame frame;\n+\n+    public static void createAndShowGUI() throws InterruptedException,\n+            InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+\n+            JLabel label = new JLabel(\"Editable combo box:\");\n+            JLabel label2 = new JLabel(\"Non-editable combo box:\");\n+\n+            JComboBox<String> comboBox = new JComboBox<>(new String[]\n+                    { \"Item 1\", \"Item 2\", \"Item 3\" });\n+            JComboBox<String> comboBox2 = new JComboBox<>(new String[]\n+                    { \"Item 1\", \"Item 2\", \"Item 3\" });\n+            comboBox.setEditable(true);\n+\n+            FlowLayout layout = new FlowLayout(FlowLayout.LEADING);\n+            JPanel panel = new JPanel(layout);\n+            panel.add(label);\n+            panel.add(comboBox);\n+\n+            panel.add(label2);\n+            panel.add(comboBox2);\n+\n+            frame = new JFrame();\n+            frame.getContentPane().add(panel);\n+            frame.pack();\n+            frame.setLocationRelativeTo(null);\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+        });\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n+\n+        PassFailJFrame pfjFrame = new PassFailJFrame(\"JScrollPane \"\n+                + \"Test Instructions\", instructionsText, 5);\n+\n+        createAndShowGUI();\n+\n+        pfjFrame.awaitAndCheck();\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/JComboBoxBorderTest.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"}]}