{"files":[{"patch":"@@ -55,1 +55,1 @@\n-                \"isSignedOSX\");\n+                \"isSignedOSX\", \"isOracleLinux7\");\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/TestMutuallyExclusivePlatformPredicates.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,0 +386,4 @@\n+                    \/\/ if the exception is thrown before connecting to the\n+                    \/\/ server, the test will time out and the exception will\n+                    \/\/ be lost\/hidden.\n+                    e.printStackTrace(System.err);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/ClientAuth.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,0 +60,3 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n@@ -61,0 +64,1 @@\n+import jdk.test.lib.Platform;\n@@ -83,0 +87,5 @@\n+    \/\/ Version of the NSS artifact. This coincides with the version of\n+    \/\/ the NSS version\n+    private static final String NSS_BUNDLE_VERSION = \"3.91\";\n+    private static final String NSSLIB = \"jpg.tests.jdk.nsslib\";\n+\n@@ -926,3 +935,0 @@\n-        case \"Windows-x86-32\":\n-            return fetchNssLib(WINDOWS_X86.class);\n-\n@@ -935,0 +941,3 @@\n+        case \"MacOSX-aarch64-64\":\n+             return fetchNssLib(MACOSX_AARCH64.class);\n+\n@@ -936,1 +945,5 @@\n-            return fetchNssLib(LINUX_X64.class);\n+            if (Platform.isOracleLinux7()) {\n+                throw new SkippedException(\"Skipping Oracle Linux prior to v8\");\n+            } else {\n+                return fetchNssLib(LINUX_X64.class);\n+            }\n@@ -938,0 +951,6 @@\n+        case \"Linux-aarch64-64\":\n+            if (Platform.isOracleLinux7()) {\n+                throw new SkippedException(\"Skipping Oracle Linux prior to v8\");\n+            } else {\n+                return fetchNssLib(LINUX_AARCH64.class);\n+            }\n@@ -947,2 +966,2 @@\n-                    .findAny().get().getValue() + File.separator + \"nsslib\"\n-                    + File.separator;\n+                    .findAny().get().getValue() + File.separator + \"nss\"\n+                    + File.separator + \"lib\" + File.separator;\n@@ -989,1 +1008,1 @@\n-            organization = \"jpg.tests.jdk.nsslib\",\n+            organization = NSSLIB,\n@@ -991,1 +1010,1 @@\n-            revision = \"3.46-VS2017\",\n+            revision = NSS_BUNDLE_VERSION,\n@@ -996,3 +1015,3 @@\n-            organization = \"jpg.tests.jdk.nsslib\",\n-            name = \"nsslib-windows_x86\",\n-            revision = \"3.46-VS2017\",\n+            organization = NSSLIB,\n+            name = \"nsslib-macosx_x64\",\n+            revision = NSS_BUNDLE_VERSION,\n@@ -1000,1 +1019,1 @@\n-    private static class WINDOWS_X86 { }\n+    private static class MACOSX_X64 { }\n@@ -1003,3 +1022,3 @@\n-            organization = \"jpg.tests.jdk.nsslib\",\n-            name = \"nsslib-macosx_x64\",\n-            revision = \"3.46\",\n+            organization = NSSLIB,\n+            name = \"nsslib-macosx_aarch64\",\n+            revision = NSS_BUNDLE_VERSION,\n@@ -1007,1 +1026,1 @@\n-    private static class MACOSX_X64 { }\n+    private static class MACOSX_AARCH64 { }\n@@ -1010,1 +1029,1 @@\n-            organization = \"jpg.tests.jdk.nsslib\",\n+            organization = NSSLIB,\n@@ -1012,1 +1031,1 @@\n-            revision = \"3.46\",\n+            revision = NSS_BUNDLE_VERSION,\n@@ -1015,0 +1034,9 @@\n+\n+    @Artifact(\n+            organization = NSSLIB,\n+            name = \"nsslib-linux_aarch64\",\n+            revision = NSS_BUNDLE_VERSION,\n+            extension = \"zip\"\n+    )\n+    private static class LINUX_AARCH64{\n+    }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":46,"deletions":18,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+\n@@ -35,1 +36,0 @@\n-import java.util.Iterator;\n@@ -37,2 +37,0 @@\n-import java.util.ServiceConfigurationError;\n-import java.util.ServiceLoader;\n@@ -41,0 +39,1 @@\n+import jtreg.SkippedException;\n@@ -50,1 +49,7 @@\n-        String nssConfig = PKCS11Test.getNssConfig();\n+        String nssConfig = null;\n+        try {\n+            nssConfig = PKCS11Test.getNssConfig();\n+        } catch (SkippedException exc) {\n+            System.out.println(\"Skipping test: \" + exc.getMessage());\n+        }\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#        jdk.test.lib.Platform\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.sh","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.regex.Matcher;\n@@ -315,0 +316,14 @@\n+    public static boolean isOracleLinux7() {\n+        if (System.getProperty(\"os.name\").toLowerCase().contains(\"linux\") &&\n+                System.getProperty(\"os.version\").toLowerCase().contains(\"el\")) {\n+            Pattern p = Pattern.compile(\"el(\\\\d+)\");\n+            Matcher m = p.matcher(System.getProperty(\"os.version\"));\n+            if (m.find()) {\n+                try {\n+                    return Integer.parseInt(m.group(1)) <= 7;\n+                } catch (NumberFormatException nfe) {}\n+            }\n+        }\n+        return false;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}