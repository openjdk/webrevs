{"files":[{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.util.FileUtils;\n+\n@@ -61,1 +63,1 @@\n-                throw new RuntimeException(\"ERROR: Could not find resource\", e);\n+                internalError(\"Could not find \" + file, e);\n@@ -66,1 +68,1 @@\n-            Enumeration<URL> urls;\n+            List<Reader> readers = new ArrayList<>();\n@@ -68,5 +70,7 @@\n-                urls = getClass().getClassLoader().getResources(\n-                        resource.startsWith(\"\/\")\n-                                ? resource.substring(1)\n-                                : resource\n-                );\n+                String name = resource.startsWith(\"\/\") ? resource.substring(1) : resource;\n+                Enumeration<URL> urls = getClass().getClassLoader().getResources(name);\n+                while (urls.hasMoreElements()) {\n+                   URL url = urls.nextElement();\n+                   InputStream stream = url.openStream();\n+                   readers.add(new InputStreamReader(stream, StandardCharsets.UTF_8));\n+                }\n@@ -74,21 +78,3 @@\n-                throw new RuntimeException(\"ERROR: While obtaining resource: \" + resource, e);\n-            }\n-\n-            if (urls.hasMoreElements()) {\n-                List<Reader> readers = new ArrayList<>();\n-                URL url = null;\n-                try {\n-                    while (urls.hasMoreElements()) {\n-                        url = urls.nextElement();\n-                        InputStream stream = url.openStream();\n-                        readers.add(new InputStreamReader(stream, StandardCharsets.UTF_8));\n-                    }\n-                } catch (IOException e) {\n-                    for (Reader r : readers) {\n-                        try {\n-                            r.close();\n-                        } catch (IOException e1) {\n-                            \/\/ ignore\n-                        }\n-                    }\n-                    throw new RuntimeException(\"ERROR: While opening resource: \" + url, e);\n+                internalError(\"Unable to find \" + resource, e);\n+                for (Reader r : readers) {\n+                    FileUtils.safelyClose(r);\n@@ -96,3 +82,0 @@\n-                return readers;\n-            } else {\n-                throw new RuntimeException(\"ERROR: Unable to find the resource: \" + resource);\n@@ -100,0 +83,4 @@\n+            if (readers.isEmpty()) {\n+                internalError(\"Unable to find \" + resource, null);\n+            }\n+            return readers;\n@@ -105,0 +92,20 @@\n+    protected void internalError(String msg, Exception e) {\n+        String guidance = \"Internal error reading resource file: \" + msg + \"\\n\\n\" +\n+                \"This often indicates a build configuration problem. Common causes are:\\n\\n\" +\n+                \" 1. Annotation processing is not enabled or configured incorrectly.\\n\\n\" +\n+                \"    Note that JDK 23+ disables running annotation processors by default,\\n\" +\n+                \"    which affects projects that used to build fine with older JDKs.\\n\" +\n+                \"    Check if you need to add a relevant option to your compiler plugin.\\n\\n\" +\n+                \"    For example, maven-compiler-plugin can be configured like this:\\n\" +\n+                \"        <configuration>\\n\" +\n+                \"           <annotationProcessors>\\n\" +\n+                \"              <annotationProcessor>org.openjdk.jmh.generators.BenchmarkProcessor<\/annotationProcessor>\\n\" +\n+                \"           <\/annotationProcessors>\\n\" +\n+                \"        <\/configuration>\\n\" +\n+                \"\\n\" +\n+                \" 2. Multi-module benchmark builds have not merged the resource files.\\n\\n\" +\n+                \"    Check if you need to add a relevant config to your build.\\n\\n\" +\n+                \"    For example, maven-shade-plugin needs to explicitly enable resource transformers:\\n\" +\n+                \"       https:\/\/maven.apache.org\/plugins\/maven-shade-plugin\/examples\/resource-transformers.html\\n\\n\";\n+        throw new RuntimeException(guidance, e);\n+    }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/AbstractResourceReader.java","additions":38,"deletions":31,"binary":false,"changes":69,"status":"modified"}]}