{"files":[{"patch":"@@ -62,1 +62,2 @@\n-        double timeProfiled = ProfilerTestUtils.checkedGet(sr, \"compiler.time.profiled\").getScore();\n+        double timeWarmup = ProfilerTestUtils.checkedGet(sr, \"compiler.time.warmup\").getScore();\n+        double timeMeasurement = ProfilerTestUtils.checkedGet(sr, \"compiler.time.measurement\").getScore();\n@@ -64,4 +65,1 @@\n-        if (timeProfiled > timeTotal) {\n-            throw new IllegalStateException(\"Profiled time is larger than total time. \" +\n-                    \"Total: \" + timeTotal + \", Profiled: \" + timeProfiled);\n-        }\n+        String details = \"Total: \" + timeTotal + \", Warmup: \" + timeWarmup + \", Measurement: \" + timeMeasurement;\n@@ -69,2 +67,2 @@\n-        if (timeProfiled <= 0) {\n-            throw new IllegalStateException(\"Should have profiled time: \" + timeProfiled);\n+        if (timeTotal < timeWarmup + timeMeasurement) {\n+            throw new IllegalStateException(\"Warmup+measure should be less than total. \" + details);\n@@ -74,1 +72,5 @@\n-            throw new IllegalStateException(\"Should have total time: \" + timeTotal);\n+            throw new IllegalStateException(\"Should have total time.\" + details);\n+        }\n+\n+        if (timeWarmup + timeMeasurement <= 0) {\n+            throw new IllegalStateException(\"Should have warmup+measure time.\" + details);\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/CompilerProfilerTest.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.jmh.runner.IterationType;\n@@ -33,1 +34,1 @@\n-import java.util.Arrays;\n+import java.util.ArrayList;\n@@ -38,0 +39,1 @@\n+    private static final int UNDEFINED = -1;\n@@ -39,1 +41,4 @@\n-    private long startCompTime;\n+    private final CompilationMXBean bean;\n+\n+    private long prevTime = UNDEFINED;\n+    private long warmupTime = UNDEFINED;\n@@ -47,2 +52,2 @@\n-        CompilationMXBean comp = ManagementFactory.getCompilationMXBean();\n-        if (!comp.isCompilationTimeMonitoringSupported()) {\n+        bean = ManagementFactory.getCompilationMXBean();\n+        if (!bean.isCompilationTimeMonitoringSupported()) {\n@@ -55,1 +60,0 @@\n-        CompilationMXBean comp = ManagementFactory.getCompilationMXBean();\n@@ -57,1 +61,5 @@\n-            startCompTime = comp.getTotalCompilationTime();\n+            if (prevTime == UNDEFINED) {\n+                long curTime = bean.getTotalCompilationTime();\n+                prevTime = curTime;\n+                warmupTime = curTime;\n+            }\n@@ -65,1 +73,0 @@\n-        CompilationMXBean comp = ManagementFactory.getCompilationMXBean();\n@@ -67,5 +74,16 @@\n-            long curTime = comp.getTotalCompilationTime();\n-            return Arrays.asList(\n-                new ScalarResult(\"compiler.time.profiled\", curTime - startCompTime, \"ms\", AggregationPolicy.SUM),\n-                new ScalarResult(\"compiler.time.total\", curTime, \"ms\", AggregationPolicy.MAX)\n-            );\n+            long curTime = bean.getTotalCompilationTime();\n+            long delta = curTime - prevTime;\n+            prevTime = curTime;\n+\n+            if (iterationParams.getType() == IterationType.MEASUREMENT) {\n+                Collection<ScalarResult> res = new ArrayList<>();\n+                if (warmupTime != UNDEFINED) {\n+                    res.add(new ScalarResult(\"compiler.time.warmup\", curTime - warmupTime, \"ms\", AggregationPolicy.SUM));\n+                    warmupTime = UNDEFINED;\n+                }\n+                res.add(new ScalarResult(\"compiler.time.measurement\", delta, \"ms\", AggregationPolicy.SUM));\n+                res.add(new ScalarResult(\"compiler.time.total\", curTime, \"ms\", AggregationPolicy.MAX));\n+                return res;\n+            } else {\n+                return Collections.emptyList();\n+            }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/CompilerProfiler.java","additions":30,"deletions":12,"binary":false,"changes":42,"status":"modified"}]}