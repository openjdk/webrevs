{"files":[{"patch":"@@ -72,1 +72,2 @@\n-      run: mvn clean install -B --file pom.xml  -DskipTests\n+      shell: bash\n+      run: .\/mvnw clean install -B --file pom.xml  -DskipTests\n@@ -76,1 +77,2 @@\n-      run: mvn clean install -P reflection -B --file pom.xml -DskipTests\n+      shell: bash\n+      run: .\/mvnw clean install -P reflection -B --file pom.xml -DskipTests\n@@ -80,1 +82,2 @@\n-      run: mvn clean install -P asm -B --file pom.xml -DskipTests\n+      shell: bash\n+      run: .\/mvnw clean install -P asm -B --file pom.xml -DskipTests\n@@ -84,1 +87,2 @@\n-      run: mvn clean install -B --file pom.xml\n+      shell: bash\n+      run: .\/mvnw clean install -B --file pom.xml\n@@ -88,1 +92,2 @@\n-      run: mvn clean install -P reflection -B --file pom.xml\n+      shell: bash\n+      run: .\/mvnw clean install -P reflection -B --file pom.xml\n@@ -92,1 +97,2 @@\n-      run: mvn clean install -P asm -B --file pom.xml\n+      shell: bash\n+      run: .\/mvnw clean install -P asm -B --file pom.xml\n@@ -96,1 +102,2 @@\n-      run: mvn clean install -P executor-fjp -B --file pom.xml\n+      shell: bash\n+      run: .\/mvnw clean install -P executor-fjp -B --file pom.xml\n@@ -100,1 +107,2 @@\n-      run: mvn clean install -P executor-custom -B --file pom.xml\n+      shell: bash\n+      run: .\/mvnw clean install -P executor-custom -B --file pom.xml\n@@ -104,1 +112,2 @@\n-      run: mvn clean install -P executor-virtual -B --file pom.xml\n+      shell: bash\n+      run: .\/mvnw clean install -P executor-virtual -B --file pom.xml\n","filename":".github\/workflows\/pre-integration.yml","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,4 @@\n+wrapperVersion=3.3.4\n+distributionType=only-script\n+distributionUrl=https:\/\/repo.maven.apache.org\/maven2\/org\/apache\/maven\/apache-maven\/3.9.11\/apache-maven-3.9.11-bin.zip\n+distributionSha256Sum=0d7125e8c91097b36edb990ea5934e6c68b4440eef4ea96510a0f6815e7eeadb\n","filename":".mvn\/wrapper\/maven-wrapper.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -142,1 +142,1 @@\n-    $ mvn clean install\n+    $ .\/mvnw clean install\n","filename":"README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -83,1 +83,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_01_HelloWorld.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -163,1 +163,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_02_BenchmarkModes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -109,1 +109,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_03_States.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -68,1 +68,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_04_DefaultState.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -117,1 +117,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_05_StateFixtures.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -88,1 +88,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_06_FixtureLevel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -147,1 +147,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_07_FixtureLevelInvocation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -93,1 +93,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_08_DeadCode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -121,1 +121,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_09_Blackholes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -106,1 +106,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_10_ConstantFold.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -140,1 +140,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_11_Loops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -169,1 +169,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_12_Forking.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -110,1 +110,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_13_RunToRun.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -109,1 +109,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_15_Asymmetric.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -126,1 +126,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_16_CompilerControl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -105,1 +105,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_17_SyncIterations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -86,1 +86,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_18_Control.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -84,1 +84,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_20_Annotations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -130,1 +130,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_21_ConsumeCPU.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -251,1 +251,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_22_FalseSharing.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -115,1 +115,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_23_AuxCounters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -117,1 +117,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_24_Inheritance.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -124,1 +124,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_26_BatchSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -84,1 +84,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_27_Params.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -141,1 +141,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_28_BlackholeHelpers.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -154,1 +154,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_29_StatesDAG.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -103,1 +103,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_30_Interrupts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -122,1 +122,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_31_InfraParams.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -131,1 +131,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_32_BulkWarmup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -119,1 +119,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_33_SecurityManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -186,1 +186,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_34_SafeLooping.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle America, Inc.\n+ * Copyright (c) 2014, 2025, Oracle America, Inc.\n@@ -124,1 +124,1 @@\n-         *    $ mvn clean install\n+         *    $ .\/mvnw clean install\n@@ -268,1 +268,1 @@\n-         *    $ mvn clean install\n+         *    $ .\/mvnw clean install\n@@ -351,1 +351,1 @@\n-         *    $ mvn clean install\n+         *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_35_Profilers.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle America, Inc.\n+ * Copyright (c) 2015, 2025, Oracle America, Inc.\n@@ -137,1 +137,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_36_BranchPrediction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle America, Inc.\n+ * Copyright (c) 2015, 2025, Oracle America, Inc.\n@@ -127,1 +127,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_37_CacheAccess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle America, Inc.\n+ * Copyright (c) 2015, 2025, Oracle America, Inc.\n@@ -163,1 +163,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_38_PerInvokeSetup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle America, Inc.\n+ * Copyright (c) 2015, 2025, Oracle America, Inc.\n@@ -121,1 +121,1 @@\n-     *    $ mvn clean install\n+     *    $ .\/mvnw clean install\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_39_MemoryAccess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,295 @@\n+#!\/bin\/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Apache Maven Wrapper startup batch script, version 3.3.4\n+#\n+# Optional ENV vars\n+# -----------------\n+#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n+#   MVNW_REPOURL - repo url base for downloading maven distribution\n+#   MVNW_USERNAME\/MVNW_PASSWORD - user and password for downloading maven\n+#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n+# ----------------------------------------------------------------------------\n+\n+set -euf\n+[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n+\n+# OS specific support.\n+native_path() { printf %s\\\\n \"$1\"; }\n+case \"$(uname)\" in\n+CYGWIN* | MINGW*)\n+  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n+  native_path() { cygpath --path --windows \"$1\"; }\n+  ;;\n+esac\n+\n+# set JAVACMD and JAVACCMD\n+set_java_home() {\n+  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n+  if [ -n \"${JAVA_HOME-}\" ]; then\n+    if [ -x \"$JAVA_HOME\/jre\/sh\/java\" ]; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME\/jre\/sh\/java\"\n+      JAVACCMD=\"$JAVA_HOME\/jre\/sh\/javac\"\n+    else\n+      JAVACMD=\"$JAVA_HOME\/bin\/java\"\n+      JAVACCMD=\"$JAVA_HOME\/bin\/javac\"\n+\n+      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n+        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n+        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME\/bin\/java\\\" or \\\"\\$JAVA_HOME\/bin\/javac\\\" does not exist.\" >&2\n+        return 1\n+      fi\n+    fi\n+  else\n+    JAVACMD=\"$(\n+      'set' +e\n+      'unset' -f command 2>\/dev\/null\n+      'command' -v java\n+    )\" || :\n+    JAVACCMD=\"$(\n+      'set' +e\n+      'unset' -f command 2>\/dev\/null\n+      'command' -v javac\n+    )\" || :\n+\n+    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n+      echo \"The java\/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n+      return 1\n+    fi\n+  fi\n+}\n+\n+# hash string like Java String::hashCode\n+hash_string() {\n+  str=\"${1:-}\" h=0\n+  while [ -n \"$str\" ]; do\n+    char=\"${str%\"${str#?}\"}\"\n+    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n+    str=\"${str#?}\"\n+  done\n+  printf %x\\\\n $h\n+}\n+\n+verbose() { :; }\n+[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n+\n+die() {\n+  printf %s\\\\n \"$1\" >&2\n+  exit 1\n+}\n+\n+trim() {\n+  # MWRAPPER-139:\n+  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n+  #   Needed for removing poorly interpreted newline sequences when running in more\n+  #   exotic environments such as mingw bash on Windows.\n+  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n+}\n+\n+scriptDir=\"$(dirname \"$0\")\"\n+scriptName=\"$(basename \"$0\")\"\n+\n+# parse distributionUrl and optional distributionSha256Sum, requires .mvn\/wrapper\/maven-wrapper.properties\n+while IFS=\"=\" read -r key value; do\n+  case \"${key-}\" in\n+  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n+  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n+  esac\n+done <\"$scriptDir\/.mvn\/wrapper\/maven-wrapper.properties\"\n+[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in $scriptDir\/.mvn\/wrapper\/maven-wrapper.properties\"\n+\n+case \"${distributionUrl##*\/}\" in\n+maven-mvnd-*bin.*)\n+  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=\/maven\/mvnd\/\n+  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n+  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n+  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n+  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n+  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n+  *)\n+    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n+    distributionPlatform=linux-amd64\n+    ;;\n+  esac\n+  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n+  ;;\n+maven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=\/maven\/mvnd\/ ;;\n+*) MVN_CMD=\"mvn${scriptName#mvnw}\" _MVNW_REPO_PATTERN=\/org\/apache\/maven\/ ;;\n+esac\n+\n+# apply MVNW_REPOURL and calculate MAVEN_HOME\n+# maven home pattern: ~\/.m2\/wrapper\/dists\/{apache-maven-<version>,maven-mvnd-<version>-<platform>}\/<hash>\n+[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\n+distributionUrlName=\"${distributionUrl##*\/}\"\n+distributionUrlNameMain=\"${distributionUrlName%.*}\"\n+distributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\n+MAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}\/.m2}\"\n+MAVEN_HOME=\"${MAVEN_USER_HOME}\/wrapper\/dists\/${distributionUrlNameMain-}\/$(hash_string \"$distributionUrl\")\"\n+\n+exec_maven() {\n+  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n+  exec \"$MAVEN_HOME\/bin\/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME\/bin\/$MVN_CMD\"\n+}\n+\n+if [ -d \"$MAVEN_HOME\" ]; then\n+  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n+  exec_maven \"$@\"\n+fi\n+\n+case \"${distributionUrl-}\" in\n+*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n+*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\n+esac\n+\n+# prepare tmp dir\n+if TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n+  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n+  trap clean HUP INT TERM EXIT\n+else\n+  die \"cannot create temp dir\"\n+fi\n+\n+mkdir -p -- \"${MAVEN_HOME%\/*}\"\n+\n+# Download and Install Apache Maven\n+verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\n+verbose \"Downloading from: $distributionUrl\"\n+verbose \"Downloading to: $TMP_DOWNLOAD_DIR\/$distributionUrlName\"\n+\n+# select .zip or .tar.gz\n+if ! command -v unzip >\/dev\/null; then\n+  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n+  distributionUrlName=\"${distributionUrl##*\/}\"\n+fi\n+\n+# verbose opt\n+__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n+[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n+\n+# normalize http auth\n+case \"${MVNW_PASSWORD:+has-password}\" in\n+'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\n+has-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\n+esac\n+\n+if [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >\/dev\/null; then\n+  verbose \"Found wget ... using wget\"\n+  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\n+elif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >\/dev\/null; then\n+  verbose \"Found curl ... using curl\"\n+  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\n+elif set_java_home; then\n+  verbose \"Falling back to use Java to download\"\n+  javaSource=\"$TMP_DOWNLOAD_DIR\/Downloader.java\"\n+  targetZip=\"$TMP_DOWNLOAD_DIR\/$distributionUrlName\"\n+  cat >\"$javaSource\" <<-END\n+\tpublic class Downloader extends java.net.Authenticator\n+\t{\n+\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n+\t  {\n+\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n+\t  }\n+\t  public static void main( String[] args ) throws Exception\n+\t  {\n+\t    setDefault( new Downloader() );\n+\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n+\t  }\n+\t}\n+\tEND\n+  # For Cygwin\/MinGW, switch paths to Windows format before running javac and java\n+  verbose \" - Compiling Downloader.java ...\"\n+  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n+  verbose \" - Running Downloader.java ...\"\n+  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\n+fi\n+\n+# If specified, validate the SHA-256 sum of the Maven distribution zip file\n+if [ -n \"${distributionSha256Sum-}\" ]; then\n+  distributionSha256Result=false\n+  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n+    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n+    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n+    exit 1\n+  elif command -v sha256sum >\/dev\/null; then\n+    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR\/$distributionUrlName\" | sha256sum -c - >\/dev\/null 2>&1; then\n+      distributionSha256Result=true\n+    fi\n+  elif command -v shasum >\/dev\/null; then\n+    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR\/$distributionUrlName\" | shasum -a 256 -c >\/dev\/null 2>&1; then\n+      distributionSha256Result=true\n+    fi\n+  else\n+    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n+    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n+    exit 1\n+  fi\n+  if [ $distributionSha256Result = false ]; then\n+    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n+    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n+    exit 1\n+  fi\n+fi\n+\n+# unzip and move\n+if command -v unzip >\/dev\/null; then\n+  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\n+else\n+  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\n+fi\n+\n+# Find the actual extracted directory name (handles snapshots where filename != directory name)\n+actualDistributionDir=\"\"\n+\n+# First try the expected directory name (for regular distributions)\n+if [ -d \"$TMP_DOWNLOAD_DIR\/$distributionUrlNameMain\" ]; then\n+  if [ -f \"$TMP_DOWNLOAD_DIR\/$distributionUrlNameMain\/bin\/$MVN_CMD\" ]; then\n+    actualDistributionDir=\"$distributionUrlNameMain\"\n+  fi\n+fi\n+\n+# If not found, search for any directory with the Maven executable (for snapshots)\n+if [ -z \"$actualDistributionDir\" ]; then\n+  # enable globbing to iterate over items\n+  set +f\n+  for dir in \"$TMP_DOWNLOAD_DIR\"\/*; do\n+    if [ -d \"$dir\" ]; then\n+      if [ -f \"$dir\/bin\/$MVN_CMD\" ]; then\n+        actualDistributionDir=\"$(basename \"$dir\")\"\n+        break\n+      fi\n+    fi\n+  done\n+  set -f\n+fi\n+\n+if [ -z \"$actualDistributionDir\" ]; then\n+  verbose \"Contents of $TMP_DOWNLOAD_DIR:\"\n+  verbose \"$(ls -la \"$TMP_DOWNLOAD_DIR\")\"\n+  die \"Could not find Maven distribution directory in extracted archive\"\n+fi\n+\n+verbose \"Found extracted Maven distribution directory: $actualDistributionDir\"\n+printf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR\/$actualDistributionDir\/mvnw.url\"\n+mv -- \"$TMP_DOWNLOAD_DIR\/$actualDistributionDir\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n+\n+clean || :\n+exec_maven \"$@\"\n","filename":"mvnw","additions":295,"deletions":0,"binary":false,"changes":295,"status":"added"},{"patch":"@@ -0,0 +1,189 @@\n+<# : batch portion\r\n+@REM ----------------------------------------------------------------------------\r\n+@REM Licensed to the Apache Software Foundation (ASF) under one\r\n+@REM or more contributor license agreements.  See the NOTICE file\r\n+@REM distributed with this work for additional information\r\n+@REM regarding copyright ownership.  The ASF licenses this file\r\n+@REM to you under the Apache License, Version 2.0 (the\r\n+@REM \"License\"); you may not use this file except in compliance\r\n+@REM with the License.  You may obtain a copy of the License at\r\n+@REM\r\n+@REM    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\r\n+@REM\r\n+@REM Unless required by applicable law or agreed to in writing,\r\n+@REM software distributed under the License is distributed on an\r\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+@REM KIND, either express or implied.  See the License for the\r\n+@REM specific language governing permissions and limitations\r\n+@REM under the License.\r\n+@REM ----------------------------------------------------------------------------\r\n+\r\n+@REM ----------------------------------------------------------------------------\r\n+@REM Apache Maven Wrapper startup batch script, version 3.3.4\r\n+@REM\r\n+@REM Optional ENV vars\r\n+@REM   MVNW_REPOURL - repo url base for downloading maven distribution\r\n+@REM   MVNW_USERNAME\/MVNW_PASSWORD - user and password for downloading maven\r\n+@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\r\n+@REM ----------------------------------------------------------------------------\r\n+\r\n+@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\r\n+@SET __MVNW_CMD__=\r\n+@SET __MVNW_ERROR__=\r\n+@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\r\n+@SET PSModulePath=\r\n+@FOR \/F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\r\n+  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\r\n+)\r\n+@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\r\n+@SET __MVNW_PSMODULEP_SAVE=\r\n+@SET __MVNW_ARG0_NAME__=\r\n+@SET MVNW_USERNAME=\r\n+@SET MVNW_PASSWORD=\r\n+@IF NOT \"%__MVNW_CMD__%\"==\"\" (\"%__MVNW_CMD__%\" %*)\r\n+@echo Cannot start maven from wrapper >&2 && exit \/b 1\r\n+@GOTO :EOF\r\n+: end batch \/ begin powershell #>\r\n+\r\n+$ErrorActionPreference = \"Stop\"\r\n+if ($env:MVNW_VERBOSE -eq \"true\") {\r\n+  $VerbosePreference = \"Continue\"\r\n+}\r\n+\r\n+# calculate distributionUrl, requires .mvn\/wrapper\/maven-wrapper.properties\r\n+$distributionUrl = (Get-Content -Raw \"$scriptDir\/.mvn\/wrapper\/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\r\n+if (!$distributionUrl) {\r\n+  Write-Error \"cannot read distributionUrl property in $scriptDir\/.mvn\/wrapper\/maven-wrapper.properties\"\r\n+}\r\n+\r\n+switch -wildcard -casesensitive ( $($distributionUrl -replace '^.*\/','') ) {\r\n+  \"maven-mvnd-*\" {\r\n+    $USE_MVND = $true\r\n+    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\r\n+    $MVN_CMD = \"mvnd.cmd\"\r\n+    break\r\n+  }\r\n+  default {\r\n+    $USE_MVND = $false\r\n+    $MVN_CMD = $script -replace '^mvnw','mvn'\r\n+    break\r\n+  }\r\n+}\r\n+\r\n+# apply MVNW_REPOURL and calculate MAVEN_HOME\r\n+# maven home pattern: ~\/.m2\/wrapper\/dists\/{apache-maven-<version>,maven-mvnd-<version>-<platform>}\/<hash>\r\n+if ($env:MVNW_REPOURL) {\r\n+  $MVNW_REPO_PATTERN = if ($USE_MVND -eq $False) { \"\/org\/apache\/maven\/\" } else { \"\/maven\/mvnd\/\" }\r\n+  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace \"^.*$MVNW_REPO_PATTERN\",'')\"\r\n+}\r\n+$distributionUrlName = $distributionUrl -replace '^.*\/',''\r\n+$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\r\n+\r\n+$MAVEN_M2_PATH = \"$HOME\/.m2\"\r\n+if ($env:MAVEN_USER_HOME) {\r\n+  $MAVEN_M2_PATH = \"$env:MAVEN_USER_HOME\"\r\n+}\r\n+\r\n+if (-not (Test-Path -Path $MAVEN_M2_PATH)) {\r\n+    New-Item -Path $MAVEN_M2_PATH -ItemType Directory | Out-Null\r\n+}\r\n+\r\n+$MAVEN_WRAPPER_DISTS = $null\r\n+if ((Get-Item $MAVEN_M2_PATH).Target[0] -eq $null) {\r\n+  $MAVEN_WRAPPER_DISTS = \"$MAVEN_M2_PATH\/wrapper\/dists\"\r\n+} else {\r\n+  $MAVEN_WRAPPER_DISTS = (Get-Item $MAVEN_M2_PATH).Target[0] + \"\/wrapper\/dists\"\r\n+}\r\n+\r\n+$MAVEN_HOME_PARENT = \"$MAVEN_WRAPPER_DISTS\/$distributionUrlNameMain\"\r\n+$MAVEN_HOME_NAME = ([System.Security.Cryptography.SHA256]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\r\n+$MAVEN_HOME = \"$MAVEN_HOME_PARENT\/$MAVEN_HOME_NAME\"\r\n+\r\n+if (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\r\n+  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\r\n+  Write-Output \"MVN_CMD=$MAVEN_HOME\/bin\/$MVN_CMD\"\r\n+  exit $?\r\n+}\r\n+\r\n+if (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\r\n+  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\r\n+}\r\n+\r\n+# prepare tmp dir\r\n+$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\r\n+$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\r\n+$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\r\n+trap {\r\n+  if ($TMP_DOWNLOAD_DIR.Exists) {\r\n+    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\r\n+    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\r\n+  }\r\n+}\r\n+\r\n+New-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\r\n+\r\n+# Download and Install Apache Maven\r\n+Write-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\r\n+Write-Verbose \"Downloading from: $distributionUrl\"\r\n+Write-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR\/$distributionUrlName\"\r\n+\r\n+$webclient = New-Object System.Net.WebClient\r\n+if ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\r\n+  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\r\n+}\r\n+[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\r\n+$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\") | Out-Null\r\n+\r\n+# If specified, validate the SHA-256 sum of the Maven distribution zip file\r\n+$distributionSha256Sum = (Get-Content -Raw \"$scriptDir\/.mvn\/wrapper\/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\r\n+if ($distributionSha256Sum) {\r\n+  if ($USE_MVND) {\r\n+    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\r\n+  }\r\n+  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\r\n+  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\r\n+    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\r\n+  }\r\n+}\r\n+\r\n+# unzip and move\r\n+Expand-Archive \"$TMP_DOWNLOAD_DIR\/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\r\n+\r\n+# Find the actual extracted directory name (handles snapshots where filename != directory name)\r\n+$actualDistributionDir = \"\"\r\n+\r\n+# First try the expected directory name (for regular distributions)\r\n+$expectedPath = Join-Path \"$TMP_DOWNLOAD_DIR\" \"$distributionUrlNameMain\"\r\n+$expectedMvnPath = Join-Path \"$expectedPath\" \"bin\/$MVN_CMD\"\r\n+if ((Test-Path -Path $expectedPath -PathType Container) -and (Test-Path -Path $expectedMvnPath -PathType Leaf)) {\r\n+  $actualDistributionDir = $distributionUrlNameMain\r\n+}\r\n+\r\n+# If not found, search for any directory with the Maven executable (for snapshots)\r\n+if (!$actualDistributionDir) {\r\n+  Get-ChildItem -Path \"$TMP_DOWNLOAD_DIR\" -Directory | ForEach-Object {\r\n+    $testPath = Join-Path $_.FullName \"bin\/$MVN_CMD\"\r\n+    if (Test-Path -Path $testPath -PathType Leaf) {\r\n+      $actualDistributionDir = $_.Name\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+if (!$actualDistributionDir) {\r\n+  Write-Error \"Could not find Maven distribution directory in extracted archive\"\r\n+}\r\n+\r\n+Write-Verbose \"Found extracted Maven distribution directory: $actualDistributionDir\"\r\n+Rename-Item -Path \"$TMP_DOWNLOAD_DIR\/$actualDistributionDir\" -NewName $MAVEN_HOME_NAME | Out-Null\r\n+try {\r\n+  Move-Item -Path \"$TMP_DOWNLOAD_DIR\/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\r\n+} catch {\r\n+  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\r\n+    Write-Error \"fail to move MAVEN_HOME\"\r\n+  }\r\n+} finally {\r\n+  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\r\n+  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\r\n+}\r\n+\r\n+Write-Output \"MVN_CMD=$MAVEN_HOME\/bin\/$MVN_CMD\"\r\n","filename":"mvnw.cmd","additions":189,"deletions":0,"binary":false,"changes":189,"status":"added"}]}