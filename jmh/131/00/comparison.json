{"files":[{"patch":"@@ -70,7 +70,37 @@\n-                <configuration>\n-                    <argLine>${jmh.testjvmargs}<\/argLine>\n-                    <forkCount>1C<\/forkCount>\n-                    <!-- Integration tests sometimes set system properties, do not let them leak to other tests -->\n-                    <reuseForks>false<\/reuseForks>\n-                    <redirectTestOutputToFile>true<\/redirectTestOutputToFile>\n-                <\/configuration>\n+                <executions>\n+                    <execution>\n+                        <id>default-test<\/id>\n+                        <phase>test<\/phase>\n+                        <goals>\n+                            <goal>test<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <argLine>${jmh.testjvmargs}<\/argLine>\n+                            <forkCount>1C<\/forkCount>\n+                            <!-- Integration tests sometimes set system properties, do not let them leak to other tests -->\n+                            <reuseForks>false<\/reuseForks>\n+                            <redirectTestOutputToFile>true<\/redirectTestOutputToFile>\n+                            <excludes>\n+                                <!-- xctrace tests interfere with each other when executed concurrently -->\n+                                <exclude>**\/profilers\/XCTrace*ProfilerTest.java<\/exclude>\n+                            <\/excludes>\n+                        <\/configuration>\n+                    <\/execution>\n+                    <execution>\n+                        <!-- execution that, unlike default-tests, runs all tests serially -->\n+                        <id>serial-tests<\/id>\n+                        <phase>test<\/phase>\n+                        <goals>\n+                            <goal>test<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <argLine>${jmh.testjvmargs}<\/argLine>\n+                            <forkCount>1<\/forkCount>\n+                            <redirectTestOutputToFile>true<\/redirectTestOutputToFile>\n+                            <includes>\n+                                <!-- xctrace tests interfere with each other when executed concurrently -->\n+                                <include>**\/profilers\/XCTrace*ProfilerTest.java<\/include>\n+                            <\/includes>\n+                        <\/configuration>\n+                    <\/execution>\n+                <\/executions>\n","filename":"jmh-core-it\/pom.xml","additions":37,"deletions":7,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -0,0 +1,273 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.it.profilers;\n+\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+import org.openjdk.jmh.it.Fixtures;\n+import org.openjdk.jmh.profile.ProfilerException;\n+import org.openjdk.jmh.profile.XCTraceNormProfiler;\n+import org.openjdk.jmh.results.Result;\n+import org.openjdk.jmh.results.RunResult;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+import org.openjdk.jmh.util.Utils;\n+\n+import java.io.File;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public class XCTraceNormProfilerTest extends AbstractAsmProfilerTest {\n+    private static boolean xctraceExists() {\n+        Collection<String> out = Utils.tryWith(\"xcode-select\", \"-p\");\n+        if (!out.isEmpty()) {\n+            return false;\n+        }\n+        Optional<String> path = Utils.runWith(\"xcode-select\", \"-p\").stream()\n+                .flatMap(line -> Arrays.stream(line.split(\"\\n\")))\n+                .findFirst();\n+        if (!path.isPresent()) {\n+            return false;\n+        }\n+        File xctraceExe = new File(path.get(), \"usr\/bin\/xctrace\");\n+        if (!xctraceExe.exists()) {\n+            return false;\n+        }\n+\n+        Collection<String> versionOut = Utils.runWith(xctraceExe.getAbsolutePath(), \"version\");\n+        Optional<String> versionStr = versionOut.stream().flatMap(l -> Arrays.stream(l.split(\"\\n\")))\n+                .filter(l -> l.contains(\"xctrace version \"))\n+                .findAny();\n+        if (!versionStr.isPresent()) {\n+            return false;\n+        }\n+        try {\n+            int version = Integer.parseInt(versionStr.get()\n+                    .split(\"version \")[1]\n+                    .split(\" \")[0]\n+                    .split(\"\\\\.\")[0]);\n+            return version >= 14;\n+        } catch (NumberFormatException e) {\n+            return false;\n+        }\n+    }\n+\n+    private static boolean isInsideVM() {\n+        \/\/ Alternatively, we can check if CPC subsystem is up and running (kern.cpc.secure)\n+        String vmmPresent = Utils.runWith(\"sysctl\", \"-n\", \"kern.hv_vmm_present\")\n+                .iterator()\n+                .next()\n+                .split(\"\\n\")[0];\n+        \/\/ It's either 0 or 1 when sysctl property exists, some error string otherwise\n+        return vmmPresent.equals(\"1\");\n+    }\n+\n+    private static void skipIfProfilerNotSupport() {\n+        Assume.assumeTrue(xctraceExists());\n+    }\n+\n+    private static void runOnIntelOnly() {\n+        Assume.assumeTrue(System.getProperty(\"os.arch\").equals(\"x86_64\"));\n+    }\n+\n+    private static void runOnArm64Only() {\n+        Assume.assumeTrue(System.getProperty(\"os.arch\").equals(\"aarch64\"));\n+    }\n+\n+    private static void skipIfRunningInsideVirtualMachine() {\n+        Assume.assumeFalse(isInsideVM());\n+    }\n+\n+    private void checkProfiling(int forks) throws RunnerException {\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class)\n+                .forks(forks)\n+                .build();\n+\n+        RunResult rr = new Runner(opts).runSingle();\n+\n+        Map<String, Result> sr = rr.getSecondaryResults();\n+        double instructions = checkedGetAny(sr, \"Instructions\",\n+                \"FIXED_INSTRUCTIONS\", \"INST_ALL\", \"INST_RETIRED.ANY\", \"INST_RETIRED.ANY_P\");\n+        double cycles = checkedGetAny(sr, \"Cycles\", \"FIXED_CYCLES\",\n+                \"CORE_ACTIVE_CYCLE\", \"CPU_CLK_UNHALTED.THREAD\", \"CPU_CLK_UNHALTED.THREAD_P\");\n+        double branches = checkedGetAny(sr, \"INST_BRANCH\", \"BR_INST_RETIRED.ALL_BRANCHES\",\n+                \"BR_INST_RETIRED.ALL_BRANCHES_PEBS\");\n+        double missedBranches = checkedGetAny(sr, \"BRANCH_MISPRED_NONSPEC\", \"BR_MISP_RETIRED.ALL_BRANCHES\",\n+                \"BR_MISP_RETIRED.ALL_BRANCHES_PS\");\n+\n+        Assert.assertNotEquals(0D, instructions, 0D);\n+        Assert.assertNotEquals(0D, cycles, 0D);\n+        Assert.assertNotEquals(0D, branches, 0D);\n+        Assert.assertNotEquals(0D, branches, 0D);\n+\n+        double cpi = ProfilerTestUtils.checkedGet(sr, \"CPI\").getScore();\n+        double ipc = ProfilerTestUtils.checkedGet(sr, \"IPC\").getScore();\n+        double branchMissRatio = ProfilerTestUtils.checkedGet(sr, \"Branch miss ratio\").getScore();\n+\n+        Assert.assertNotEquals(0D, ipc, 0D);\n+        Assert.assertNotEquals(0D, cpi, 0D);\n+        Assert.assertNotEquals(0D, branchMissRatio, 0D);\n+    }\n+\n+    @Test\n+    public void testDefaultArguments() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        checkProfiling(1);\n+    }\n+\n+    @Test\n+    public void testMultipleForks() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        checkProfiling(2);\n+    }\n+\n+    @Test\n+    public void testSpecifyTemplateAndEventsSimultaneously() {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        ProfilerException e = Assert.assertThrows(ProfilerException.class,\n+                () -> new XCTraceNormProfiler(\"events=A,B;template=CPU Counters\"));\n+        Assert.assertTrue(e.getMessage().contains(\n+                \"Please use either \\\"template\\\", or \\\"events\\\" option, but not both simultaneously.\"));\n+    }\n+\n+    @Test\n+    public void testSpecifyOnlyUnavailableEvents() {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        ProfilerException e = Assert.assertThrows(ProfilerException.class,\n+                () -> new XCTraceNormProfiler(\"events=A,B\"));\n+        Assert.assertTrue(e.getMessage().contains(\"No supported events.\"));\n+    }\n+\n+    @Test\n+    public void testListAvailableEvents() {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        ProfilerException e = Assert.assertThrows(ProfilerException.class,\n+                () -> new XCTraceNormProfiler(\"listEvents=true\"));\n+        String message = e.getMessage();\n+        Assert.assertTrue(\"Message should list PMU events: \" + message,\n+                message.contains(\"Supported PMU events \"));\n+        String[] lines = message.split(\"\\n\");\n+        Assert.assertTrue(\"Message it too short: \" + message, lines.length > 1);\n+    }\n+\n+    @Test\n+    public void testSpecifyTooManyEvents() {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+        String[] lines = Assert.assertThrows(ProfilerException.class,\n+                () -> new XCTraceNormProfiler(\"listEvents=true\")).getMessage().split(\"\\n\");\n+        String eventsList = Stream.of(lines).skip(1).map(l -> l.split(\"\\t\")[0]).limit(32)\n+                .collect(Collectors.joining(\",\"));\n+        ProfilerException e = Assert.assertThrows(ProfilerException.class,\n+                () -> new XCTraceNormProfiler(\"events=\" + eventsList));\n+        Assert.assertTrue(e.getMessage().contains(\n+                \"could not be used with other selected events due to performance counters constraints\"));\n+    }\n+\n+    @Test\n+    public void testDuplicateEventsFiltrationOnIntel() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+        runOnIntelOnly();\n+\n+        checkEventsDeduplication(\"CORE_ACTIVE_CYCLE\",\n+                \"Cycles\", \"CORE_ACTIVE_CYCLE\", \"FIXED_CYCLES\", \"CPU_CLK_UNHALTED.THREAD\",\n+                \"CPU_CLK_UNHALTED.THREAD_P\", \"Cycles\", \"CORE_ACTIVE_CYCLE\");\n+    }\n+\n+    @Test\n+    public void testDuplicateEventsFiltrationOnMacos() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+        runOnArm64Only();\n+\n+        checkEventsDeduplication(\"Cycles\",\n+                \"Cycles\", \"FIXED_CYCLES\", \"CPU_CLK_UNHALTED.THREAD\", \"CPU_CLK_UNHALTED.THREAD_P\", \"Cycles\");\n+    }\n+\n+    private void checkEventsDeduplication(String expectedEvent, String... allEvents) throws RunnerException {\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class, \"events=\" + String.join(\",\", allEvents))\n+                .forks(1)\n+                .build();\n+\n+        RunResult rr = new Runner(opts).runSingle();\n+        Assert.assertEquals(1, rr.getSecondaryResults().size());\n+        Assert.assertTrue(rr.getSecondaryResults().containsKey(expectedEvent));\n+    }\n+\n+    @Test\n+    public void testConstructorThrowsWhenXCTraceDoesNotExist() {\n+        Assume.assumeFalse(xctraceExists());\n+        Assert.assertThrows(ProfilerException.class, () -> new XCTraceNormProfiler(\"\"));\n+    }\n+\n+    @Test\n+    public void testCustomSamplingRate() throws RunnerException {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class, \"samplingRate=20\")\n+                .forks(1)\n+                .build();\n+\n+        RunResult rr = new Runner(opts).runSingle();\n+        Result result = ProfilerTestUtils.checkedGet(rr.getSecondaryResults(), \"INST_ALL\");\n+        Assert.assertTrue(result.getScore() > 0.0D);\n+    }\n+\n+    @Test\n+    public void testInvalidSamplingRate() {\n+        Assert.assertThrows(ProfilerException.class, () -> new XCTraceNormProfiler(\"samplingRate=-1\"));\n+    }\n+\n+    private static double checkedGetAny(Map<String, Result> results, String... keys) {\n+        for (String key : keys) {\n+            Result value = results.get(key);\n+            if (value != null) return value.getScore();\n+        }\n+        throw new IllegalStateException(\n+                \"Results does not include any of these keys: \" + String.join(\", \", keys));\n+    }\n+}\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/XCTraceNormProfilerTest.java","additions":273,"deletions":0,"binary":false,"changes":273,"status":"added"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.it.profilers;\n+\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+import org.openjdk.jmh.profile.ProfilerException;\n+import org.openjdk.jmh.util.FileUtils;\n+import org.openjdk.jmh.util.Utils;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.util.*;\n+\n+public class XCTraceSupportTest {\n+    private static final File TMP_DIR = new File(System.getProperty(\"java.io.tmpdir\"));\n+\n+    private static void runOnlyOnMac() {\n+        Assume.assumeTrue(\"Make sense only on MacOS\",\n+                System.getProperty(\"os.name\").toLowerCase().contains(\"mac\"));\n+    }\n+\n+    private static void runOnlyIfXCodeInstalled() {\n+        Collection<String> out = Utils.tryWith(\"xcode-select\", \"-p\");\n+        Assume.assumeTrue(\"xcode-select failed: \" + out, out.isEmpty());\n+    }\n+\n+    private static class KpepParser {\n+        private final Method parseKpepFile;\n+\n+        KpepParser() throws ReflectiveOperationException {\n+            \/\/ XCTraceSupport is package-private in jmh-core, but jmh-core-it is a much more suitable place to\n+            \/\/ run tests of this kind. That's why we're doing all that murky stuff.\n+            Class<?> xctraceSupport = Class.forName(\"org.openjdk.jmh.profile.XCTraceSupport\");\n+            parseKpepFile = xctraceSupport.getDeclaredMethod(\"parseKpepFile\", File.class);\n+            parseKpepFile.setAccessible(true);\n+        }\n+\n+        Object parseKpepFile(File file) throws ReflectiveOperationException {\n+            return parseKpepFile.invoke(null, file);\n+        }\n+    }\n+\n+    @Test\n+    public void testKpepFilesParsing() throws Exception {\n+        runOnlyOnMac();\n+\n+        File kpepDir = new File(\"\/usr\/share\/kpep\");\n+        Assume.assumeTrue(\"kpep files dir not found: \" + kpepDir.getAbsolutePath(), kpepDir.canExecute());\n+\n+        File[] plistFiles = kpepDir.listFiles((dir, name) -> name.endsWith(\".plist\"));\n+        Assert.assertNotNull(plistFiles);\n+\n+        KpepParser parser = new KpepParser();\n+\n+        for (File kpepFile : plistFiles) {\n+            Object db;\n+            try {\n+                db = parser.parseKpepFile(kpepFile);\n+            } catch (Throwable e) {\n+                throw new AssertionError(\"Failed to parse \" + kpepFile.getAbsolutePath(), e);\n+            }\n+            Assert.assertNotNull(\"parseKpepFile returned null for \" + kpepFile.getAbsolutePath(), db);\n+        }\n+    }\n+\n+    private void checkKpepParsingFailed(File plistFile) throws Exception {\n+        KpepParser parser = new KpepParser();\n+        try {\n+            parser.parseKpepFile(plistFile);\n+            Assert.fail();\n+        } catch (InvocationTargetException e) {\n+            if (!(e.getCause() instanceof ProfilerException)) {\n+                throw new AssertionError(\"Profiler exception was expected\", e.getCause());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testIllFormattedKpepParsing() throws Exception {\n+        runOnlyOnMac();\n+\n+        File tempFile = FileUtils.tempFile(\".plist\");\n+        try {\n+            \/\/ plutil converts text file to xml, so that would result\n+            \/\/ in a successfully generated xml document with a wrong schema\n+            Files.write(tempFile.toPath(), \"123\".getBytes(StandardCharsets.UTF_8));\n+\n+            checkKpepParsingFailed(tempFile);\n+        } finally {\n+            tempFile.delete();\n+        }\n+    }\n+\n+    @Test\n+    public void testInvalidKpepParsing() throws Exception {\n+        runOnlyOnMac();\n+\n+        File tempFile = FileUtils.tempFile(\".plist\");\n+        try {\n+            \/\/ Generate a file that is not a valid plist file\n+            byte[] bytes = new byte[1024];\n+            new Random().nextBytes(bytes);\n+            Files.write(tempFile.toPath(), bytes);\n+\n+            checkKpepParsingFailed(tempFile);\n+        } finally {\n+            tempFile.delete();\n+        }\n+    }\n+\n+    @Test\n+    public void testInstrumentsPackage() throws Exception {\n+        runOnlyOnMac();\n+        runOnlyIfXCodeInstalled();\n+\n+        Class<?> xctraceSupport = Class.forName(\"org.openjdk.jmh.profile.XCTraceSupport\");\n+        Method buildPkg = xctraceSupport.getDeclaredMethod(\"buildInstrumentsPMCSamplingPackage\",\n+                File.class, long.class, Collection.class);\n+        buildPkg.setAccessible(true);\n+\n+        File generatedPackage = new File(TMP_DIR, UUID.randomUUID() + \".pkg\");\n+        try {\n+            buildPkg.invoke(null, generatedPackage, 100L, Arrays.asList(\"INST_ALL\", \"CORE_ACTIVE_CYCLE\"));\n+            Assert.assertTrue(generatedPackage.exists());\n+        } finally {\n+            generatedPackage.delete();\n+        }\n+    }\n+}\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/XCTraceSupportTest.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -180,0 +180,1 @@\n+        BUILT_IN.put(\"xctracenorm\", XCTraceNormProfiler.class);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/ProfilerFactory.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,643 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.profile;\n+\n+import joptsimple.OptionParser;\n+import joptsimple.OptionSet;\n+import joptsimple.OptionSpec;\n+import org.openjdk.jmh.infra.BenchmarkParams;\n+import org.openjdk.jmh.results.*;\n+import org.openjdk.jmh.util.FileUtils;\n+import org.openjdk.jmh.util.TempFile;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.*;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+\/**\n+ * macOS permnorm profiler based on xctrace utility shipped with Xcode Instruments.\n+ * <p>\n+ * The profiling process consists of several steps:\n+ * 1) launching a program that needs to be profiled using `xctrace record` command; in case of success,\n+ * the output of this step is a \"trace-file\", which is in fact a directory containing multiple files\n+ * representing the recorded trace, the trace may contain multiple resulting tables, depending on the template;\n+ * 2) inspecting a recorded trace to check if it contains a table supported by the profiler; this information\n+ * could be obtained from the trace's table of contents (`xctrace export --toc`);\n+ * 3) extracting the table with profiling results from the trace file using xctrace export and parsing it\n+ * to extract individual samples.\n+ * <p>\n+ * `xctrace export` command extracts data only in XML format, thus both the table of contents and the table\n+ * with profiling results need to be parsed as XML documents.\n+ * <p>\n+ * This profiler currently supports only one table type: counters-profile.\n+ * Such tables generated by the CPU Counters instrument performing sampling either by\n+ * timer interrupts, or interrupts generated by a PMU counter, depending on particular configuration.\n+ * <p>\n+ * Tracing configuration, or template, is required to perform a recording.\n+ * It is a file that could be configured and saved using Instruments application.\n+ * <p>\n+ * CPU Counters template has no default parameters and could only be configured in the Instruments app UI.\n+ * With a recent Xcode versions, this issue could be overcome by building a so-called instrument package that\n+ * imports CPU Counters template, initializes its parameters with some values that could be statically set in a\n+ * package description, and defines an instrument, that xctrace can use.\n+ * <p>\n+ * One of CPU Counters template's parameters is a list of PMU events to sample. Events supported by the current CPU\n+ * could be extracted from KPEP database files located in {@code \/usr\/share\/kpep} folder. Each KPEP file is a binary\n+ * property list file, that could be converted to XML and then parsed. File's content provides information about\n+ * event names, their description and various restrictions on their use.\n+ * <p>\n+ * To provide a default behavior (that does not require a user-configured template) and make profilers use a bit more\n+ * convinient, XCTraceNormProfiler parses KPEP database files and uses extracted info to build Instruments packages.\n+ * <p>\n+ *\n+ * @see XCTraceSupport#parseKpepFile(File)\n+ * @see XCTraceSupport#buildInstrumentsPMCSamplingPackage(File, long, Collection)\n+ *\/\n+public class XCTraceNormProfiler implements ExternalProfiler {\n+    \/\/ https:\/\/developer.apple.com\/documentation\/xcode-release-notes\/xcode-13-release-notes#Instruments\n+    \/\/ Older versions support CPU Counters in some way, but are lacking handy \"counters-profile\" table.\n+    private static final int XCTRACE_VERSION_WITH_COUNTERS_PROFILE_TABLE = 13;\n+    \/\/ It's missing from release notes, but \"--instrument\" option seems to appear in Xcode 14\n+    private static final int XCTRACE_VERSION_WITH_INSTRUMENT_OPTIONS = 14;\n+    \/\/ Currently, only counters-profile table is supported\n+    private static final XCTraceTableHandler.ProfilingTableType SUPPORTED_TABLE_TYPE =\n+            XCTraceTableHandler.ProfilingTableType.COUNTERS_PROFILE;\n+\n+    \/\/ Set of events available for all supported CPUs. This set is not exhaustive and contains as many events as\n+    \/\/ it could be configured on a CPU with the least counters available (it's 4).\n+    \/\/ On Apple Silicon CPUs, CORE_ACTIVE_CYCLE and INST_ALL are configurable events that have their fixed analogues -\n+    \/\/ FIXED_CYCLES and FIXED_INSTRUCTIONS. In general, it would be better to use fixed events, but it's fine for\n+    \/\/ default settings consisting of only 4 events in total.\n+    private static final String[] DEFAULT_EVENTS = new String[]{\n+            \"CORE_ACTIVE_CYCLE\", \"INST_ALL\", \"INST_BRANCH\", \"BRANCH_MISPRED_NONSPEC\"\n+    };\n+    private static final String[] CYCLES_EVENT_NAMES = new String[]{\n+            \"CORE_ACTIVE_CYCLE\", \"Cycles\", \"FIXED_CYCLES\", \"CPU_CLK_UNHALTED.THREAD\", \"CPU_CLK_UNHALTED.THREAD_P\"\n+    };\n+    private static final String[] INSTRUCTIONS_EVENT_NAMES = new String[]{\n+            \"INST_ALL\", \"Instructions\", \"FIXED_INSTRUCTIONS\", \"INST_RETIRED.ANY\", \"INST_RETIRED.ANY_P\"\n+    };\n+    private static final String[] BRANCH_EVENT_NAMES = new String[]{\n+            \"INST_BRANCH\", \"BR_INST_RETIRED.ALL_BRANCHES\", \"BR_INST_RETIRED.ALL_BRANCHES_PEBS\"\n+    };\n+    private static final String[] BRANCH_MISS_EVENT_NAMES = new String[]{\n+            \"BRANCH_MISPRED_NONSPEC\", \"BR_MISP_RETIRED.ALL_BRANCHES\",  \"BR_MISP_RETIRED.ALL_BRANCHES_PS\"\n+    };\n+    private static final String CUSTOM_INSTRUMENT_NAME = \"XCTraceNormProfiler\";\n+\n+    private final String xctracePath;\n+    private final String tracingTemplate;\n+    private final Path temporaryDirectory;\n+    private final TempFile outputFile;\n+\n+    private final long delayMs;\n+    private final long lengthMs;\n+    private final boolean shouldFixStartTime;\n+    private final List<String> pmuEvents;\n+    private final int samplingRateMsec;\n+    private final File samplingPackage;\n+    private final XCTraceSupport.PerfEvents perfEvents;\n+\n+    public XCTraceNormProfiler(String initLine) throws ProfilerException {\n+        OptionParser parser = new OptionParser();\n+        parser.formatHelpWith(new ProfilerOptionFormatter(XCTraceNormProfiler.class.getName()));\n+\n+        OptionSpec<String> templateOpt = parser.accepts(\"template\", \"Name of or path to Instruments template. \" +\n+                        \"Use `xctrace list templates` to view available templates. \" +\n+                        \"Only templates with \\\"CPU Counters\\\" instrument are supported at the moment.\")\n+                .withOptionalArg().ofType(String.class);\n+        OptionSpec<Boolean> printAvailableEventsOpt = parser.accepts(\"listEvents\",\n+                        \"Print list of available PMU events.\")\n+                .withOptionalArg().ofType(Boolean.class).defaultsTo(false);\n+        OptionSpec<String> eventsOpt = parser.accepts(\"events\", \"Comma-separated lists of PMU events to sample. \" +\n+                        \"To get a list of available events, please use \\\"listEvents=true\\\" option, \" +\n+                        \"Instruments app UI, or inspect a KPEP database file specific to your CPU.\")\n+                .withOptionalArg().ofType(String.class).withValuesSeparatedBy(\",\")\n+                .defaultsTo(DEFAULT_EVENTS);\n+        OptionSpec<Integer> samplingRateOpt = parser.accepts(\"samplingRate\", \"Sampling rate, in milliseconds. \" +\n+                        \"Applied only for \\\"events\\\" sampling, when \\\"template\\\" is not specified\")\n+                .withOptionalArg().ofType(Integer.class).defaultsTo(10);\n+        OptionSpec<Integer> optDelay = parser.accepts(\"delay\",\n+                        \"Delay collection for a given time, in milliseconds; -1 to detect automatically.\")\n+                .withRequiredArg().ofType(Integer.class).describedAs(\"ms\").defaultsTo(-1);\n+        OptionSpec<Integer> optLength = parser.accepts(\"length\",\n+                        \"Do the collection for a given time, in milliseconds; -1 to detect automatically.\")\n+                .withRequiredArg().ofType(Integer.class).describedAs(\"ms\").defaultsTo(-1);\n+        OptionSpec<Boolean> correctOpt = parser.accepts(\"fixStartTime\",\n+                        \"Fix the start time by the time it took to launch.\")\n+                .withRequiredArg().ofType(Boolean.class).defaultsTo(true);\n+        OptionSpec<Boolean> validateEventsOpt = parser.accepts(\"validateEvents\",\n+                        \"Check if specified PMU events could be used simultaneously.\")\n+                .withRequiredArg().ofType(Boolean.class).defaultsTo(true);\n+\n+        OptionSet options = ProfilerUtils.parseInitLine(initLine, parser);\n+\n+        File kpepFile = XCTraceSupport.getKpepFilePath();\n+        perfEvents = XCTraceSupport.parseKpepFile(kpepFile);\n+\n+        if (options.valueOf(printAvailableEventsOpt)) {\n+            dumpSupportedEvents(perfEvents, kpepFile);\n+        }\n+\n+        delayMs = options.valueOf(optDelay);\n+        lengthMs = options.valueOf(optLength);\n+        shouldFixStartTime = options.valueOf(correctOpt);\n+\n+        if (options.hasArgument(templateOpt) && options.hasArgument(eventsOpt)) {\n+            throw new ProfilerException(\n+                    \"Please use either \\\"template\\\", or \\\"events\\\" option, but not both simultaneously.\");\n+        }\n+\n+        if (options.hasArgument(templateOpt)) {\n+            xctracePath = XCTraceSupport.getXCTracePath(XCTRACE_VERSION_WITH_COUNTERS_PROFILE_TABLE);\n+            tracingTemplate = options.valueOf(templateOpt);\n+            pmuEvents = Collections.emptyList();\n+            samplingPackage = null;\n+            samplingRateMsec = 0;\n+        } else {\n+            samplingRateMsec = options.valueOf(samplingRateOpt);\n+            if (samplingRateMsec <= 0) {\n+                throw new ProfilerException(\"Sampling rate must be positive, was: \" + samplingRateMsec);\n+            }\n+            xctracePath = XCTraceSupport.getXCTracePath(XCTRACE_VERSION_WITH_INSTRUMENT_OPTIONS);\n+            tracingTemplate = null;\n+            List<String> userEvents = extractSupportedEvents(options.valuesOf(eventsOpt), perfEvents);\n+            if (options.valueOf(validateEventsOpt)) {\n+                checkEventsCouldBeScheduled(userEvents, perfEvents);\n+            }\n+            if (userEvents.isEmpty()) {\n+                throw new ProfilerException(\"No supported events.\");\n+            }\n+            pmuEvents = userEvents;\n+            samplingPackage = buildSamplingPackage();\n+        }\n+\n+        temporaryDirectory = XCTraceSupport.createTemporaryDirectoryName();\n+        try {\n+            outputFile = FileUtils.weakTempFile(\"xctrace-out.xml\");\n+        } catch (IOException e) {\n+            throw new ProfilerException(e);\n+        }\n+    }\n+\n+    private static void dumpSupportedEvents(\n+            XCTraceSupport.PerfEvents perfEvents, File kpepFile) throws ProfilerException {\n+        StringBuilder helpMessage = new StringBuilder();\n+        helpMessage.append(\"Supported PMU events (parsed from \")\n+                .append(kpepFile.getAbsolutePath())\n+                .append(\"):\\n\");\n+        perfEvents.getAliases().stream().sorted().forEachOrdered(alias ->\n+                helpMessage.append(alias).append(\"\\tAlias to \")\n+                        .append(perfEvents.getEvent(alias).getName()).append('\\n'));\n+        perfEvents.getAllEvents().stream()\n+                .sorted(Comparator.comparing(XCTraceSupport.PerfEventInfo::getName))\n+                .forEachOrdered(event -> helpMessage.append(event.getName()).append('\\t')\n+                        .append(event.getDescription()).append('\\n'));\n+        throw new ProfilerException(helpMessage.toString());\n+    }\n+\n+    \/**\n+     * Filters out all unsupported events {@code userEvents} and maps names of what remains, if needed.\n+     * <p>\n+     * With unsupported events, everything is straightforward: such events should be filtered out.\n+     * However, things are a bit convoluted when it comes to supported events.\n+     * An event might be a regular event, or an alias to a regular event.\n+     * A regular event may also have an associated fallback event.\n+     * <p>\n+     * Aliases provide a name consistent across all supported CPUs (like {@code INST_ALL}) and simply\n+     * refer to one of other events.\n+     * A regular event may not be supported, and in that case it has an associated fallback event.\n+     * <p>\n+     * The mapping is performed in the following way:\n+     * <li>try to use aliases when they are specified;<\/li>\n+     * <li>for aliases and unsupported events, find an event that will be actually sampled and make sure it not already\n+     * selected;<\/li>\n+     * <li>if a name (not its alias) of unsupported event was specified, map it to a fallback event's name.<\/li>\n+     *\/\n+    private static List<String> extractSupportedEvents(List<String> userEvents, XCTraceSupport.PerfEvents perfEvents) {\n+        List<String> supportedEvents = new ArrayList<>();\n+        Set<String> underlyingEvents = new HashSet<>();\n+\n+        for (String eventName : userEvents) {\n+            XCTraceSupport.PerfEventInfo event = perfEvents.getEvent(eventName);\n+            if (event == null) {\n+                \/\/ Event not found in the database\n+                continue;\n+            }\n+\n+            boolean isAlias = !event.getName().equals(eventName);\n+            \/\/ For some reason, fixed counters sampling does not work on Intel-based devices.\n+            \/\/ Instead, Instruments app uses a fallback event.\n+            if (event.isFixed() && perfEvents.getArchitecture() == XCTraceSupport.CpuArch.X86_64) {\n+                if (event.getFallbackEvent() == null) {\n+                    \/\/ There's no fallback event, looks like an error, let's skip it.\n+                    continue;\n+                }\n+                event = perfEvents.getEvent(event.getFallbackEvent());\n+            }\n+            if (underlyingEvents.add(event.getName())) {\n+                \/\/ Prefer aliases over resolved event names as xctrace\/Instruments\n+                \/\/ can handle them correctly on its own.\n+                \/\/ If the eventName is not an alias, pick up the name from the event object\n+                \/\/ as it might be a fallback event chosen in the previous step.\n+                supportedEvents.add(isAlias ? eventName : event.getName());\n+            }\n+        }\n+\n+        return supportedEvents;\n+    }\n+\n+    \/**\n+     * Checks if selected events could be simultaneously scheduled for sampling.\n+     * <p>\n+     * Unlike, Linux perf_events, Instruments and xctrace do not support events multiplexing.\n+     * Xctrace will crash if a user specified more events than counters available on CPU,\n+     * or some events are constrained with respect to counters they could be scheduled to\n+     * and corresponding counters are unavailable (or will be occupied to count other events).\n+     * <p>\n+     * This function attempts to check if all selected events could be scheduled simultaneously.\n+     *\/\n+    private static void checkEventsCouldBeScheduled(List<String> events, XCTraceSupport.PerfEvents perfEvents)\n+            throws ProfilerException {\n+        \/\/ In general, testing if all events could be scheduled on CPU counter w.r.t. counter constrains\n+        \/\/ is equivalent to finding a maximum matching in a bipartite graph (where one set of nodes are events\n+        \/\/ and another set of nodes are counters; and there's an edge\n+        \/\/ if an event could be scheduled to one of the counters).\n+        \/\/ It's unclear how xctrace\/Instruments check these constraints,\n+        \/\/ but it seems like instead of finding a maximum bipartite matching, we can greedily assign events to\n+        \/\/ counters starting from more constrained events (events that could be scheduled on a smaller counters subset)\n+        \/\/ until either all events assigned, or an event that could not be assigned is found.\n+        \/\/ Such an approach should work as long as there are no events having overlapping counters constraints of the\n+        \/\/ same size (like, event A could be scheduled on counter {1, 2, 3}, event B on {2, 3, 4}\n+        \/\/ and event C on {3, 4, 5}). Luckily, there are no such events in \/usr\/share\/kpep.\n+        \/\/ And, well, perf_events is doing something similar when scheduling events within a group.\n+        long availableCountersMask = perfEvents.getConfigurableCountersMask() | perfEvents.getFixedCountersMask();\n+        List<Map.Entry<String, XCTraceSupport.PerfEventInfo>> eventsInfo = events.stream()\n+                \/\/ Map a name to an event (additionally, choosing a fallback event when needed)\n+                .collect(Collectors.toMap(Function.identity(), event -> {\n+                    XCTraceSupport.PerfEventInfo eventInfo = perfEvents.getEvent(event);\n+                    if (eventInfo.isFixed() && perfEvents.getArchitecture() == XCTraceSupport.CpuArch.X86_64) {\n+                        \/\/ Fixed counters don't work on Intel-based hosts, use a fallback event instead.\n+                        return perfEvents.getEvent(eventInfo.getFallbackEvent());\n+                    }\n+                    return eventInfo;\n+                }))\n+                .entrySet()\n+                .stream()\n+                \/\/ Sort by the number of set bits in the mask to process more constrained events first\n+                .sorted(Comparator.comparingInt(evt -> Long.bitCount(evt.getValue().getCounterMask())))\n+                .collect(Collectors.toList());\n+\n+        for (Map.Entry<String, XCTraceSupport.PerfEventInfo> eventInfo : eventsInfo) {\n+            String requestedName = eventInfo.getKey();\n+            XCTraceSupport.PerfEventInfo event = eventInfo.getValue();\n+\n+            long eventMask = event.getCounterMask();\n+            if ((availableCountersMask & eventMask) == 0) {\n+                throw new ProfilerException(\"Event \" + requestedName + \" (\" + event.getName() +\n+                        \") could not be used with other selected events due to performance counters constraints. \" +\n+                        \"Consider configuring a template using the \" +\n+                        \"Instruments app to check which events could be used simultaneously.\");\n+            }\n+            \/\/ Extract a mask with a single PMC ...\n+            long counterMask = Long.lowestOneBit(availableCountersMask & eventMask);\n+            \/\/ ... and claim that counter by clearing the corresponding bit in the mask\n+            availableCountersMask = availableCountersMask & ~counterMask;\n+        }\n+    }\n+\n+    \/**\n+     * Builds an Instruments package that uses {@code CPU Counters} template to sample PMU counters.\n+     * The package defines a custom instrument with a {@link XCTraceNormProfiler#CUSTOM_INSTRUMENT_NAME} name.\n+     * The package uses {@link XCTraceNormProfiler#samplingRateMsec} and {@link XCTraceNormProfiler#pmuEvents}\n+     * as parameters.\n+     * <p>\n+     * Generated packages are cached in {@code ~\/Libraries\/Caches\/org.openjdk.jmh\/} directory to avoid building\n+     * same packages over and over again.\n+     * If {@code ~\/Libraries\/Caches} does not exist, the package will be saved in {@code user.dir} folder.\n+     *\n+     * @see <a href=\"https:\/\/help.apple.com\/instruments\/developer\/mac\/current\/#\/devcd5016d31\">Instruments Developer Help<\/a>\n+     *\/\n+    private File buildSamplingPackage() throws ProfilerException {\n+        \/\/ ~\/Library\/Caches is a place where an app should cache whatever it needs,\n+        \/\/ according to the File System Programming Guide\n+        \/\/ (File System Basics \/ About macOS File System \/ The Library Directory Stores App-Specific Files):\n+        \/\/ https:\/\/developer.apple.com\/library\/archive\/documentation\/FileManagement\/Conceptual\/FileSystemProgrammingGuide\/FileSystemOverview\/FileSystemOverview.html#\/\/apple_ref\/doc\/uid\/TP40010672-CH2-SW1\n+        File cacheDirRoot = new File(System.getProperty(\"user.home\"), \"Library\/Caches\");\n+        File cacheDir;\n+        if (!cacheDirRoot.exists()) {\n+            \/\/ Let's place it in the CWD if Caches dir does not exist.\n+            cacheDir = new File(System.getProperty(\"user.dir\"));\n+        } else {\n+            cacheDir = new File(cacheDirRoot, \"org.openjdk.jmh\");\n+            cacheDir.mkdirs();\n+        }\n+\n+        String digest = XCTraceSupport.generateInstrumentsPackageDigest(samplingRateMsec, pmuEvents);\n+        File pkg = new File(cacheDir, \"xctracenorm-\" + digest + \".pkg\");\n+        if (pkg.exists()) {\n+            return pkg;\n+        }\n+        \/\/ Write to a temp file first, to ensure there will be no broken file in case of an error ...\n+        File tempPkgFile = new File(cacheDir, \"xctracenorm-temp-\" + System.currentTimeMillis() + \".pkg\");\n+        XCTraceSupport.buildInstrumentsPMCSamplingPackage(tempPkgFile, samplingRateMsec, pmuEvents);\n+        \/\/ ... and if it was generated successfully, let's rename it.\n+        if (!tempPkgFile.renameTo(pkg)) {\n+            throw new ProfilerException(\"Failed to rename a package file from \" + tempPkgFile.getAbsolutePath() +\n+                    \" to \" + pkg.getAbsolutePath());\n+        }\n+        return pkg;\n+    }\n+\n+    private static XCTraceTableHandler.XCTraceTableDesc findTableDescription(XCTraceTableOfContentsHandler tocHandler) {\n+        XCTraceTableHandler.XCTraceTableDesc tableDesc = tocHandler.getSupportedTables()\n+                .stream()\n+                .filter(t -> t.getTableType() == SUPPORTED_TABLE_TYPE)\n+                .findFirst()\n+                .orElseThrow(() -> new IllegalStateException(\"Table \\\"\" + SUPPORTED_TABLE_TYPE.tableName +\n+                        \"\\\" was not found in the trace results.\"));\n+        if (tableDesc.getPmcEvents().isEmpty() && tableDesc.getTriggerType() == XCTraceTableHandler.TriggerType.TIME) {\n+            throw new IllegalStateException(\"Results does not contain any events.\");\n+        }\n+        return tableDesc;\n+    }\n+\n+    @Override\n+    public Collection<String> addJVMInvokeOptions(BenchmarkParams params) {\n+        if (samplingPackage != null) {\n+            return XCTraceSupport.recordWithPackageCommandPrefix(\n+                    xctracePath, temporaryDirectory.toAbsolutePath().toString(), samplingPackage, CUSTOM_INSTRUMENT_NAME);\n+        } else {\n+            return XCTraceSupport.recordCommandPrefix(xctracePath, temporaryDirectory.toAbsolutePath().toString(),\n+                    tracingTemplate);\n+        }\n+    }\n+\n+    @Override\n+    public Collection<String> addJVMOptions(BenchmarkParams params) {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public void beforeTrial(BenchmarkParams benchmarkParams) {\n+        if (!temporaryDirectory.toFile().isDirectory() && !temporaryDirectory.toFile().mkdirs()) {\n+            throw new IllegalStateException();\n+        }\n+    }\n+\n+    @Override\n+    public Collection<? extends Result> afterTrial(BenchmarkResult br, long pid, File stdOut, File stdErr) {\n+        try {\n+            return processResults(br);\n+        } finally {\n+            XCTraceSupport.removeDirectory(temporaryDirectory);\n+        }\n+    }\n+\n+    private Collection<? extends Result> processResults(BenchmarkResult br) {\n+        BenchmarkResultMetaData md = br.getMetadata();\n+        if (md == null) {\n+            return Collections.emptyList();\n+        }\n+        long measurementsDurationMs = md.getStopTime() - md.getMeasurementTime();\n+        if (measurementsDurationMs == 0L) {\n+            return Collections.emptyList();\n+        }\n+        double opsThroughput = md.getMeasurementOps() \/ (double) measurementsDurationMs;\n+\n+        \/\/ Find the resulting file and extract metadata from it\n+        Path traceFile = XCTraceSupport.findTraceFile(temporaryDirectory);\n+        XCTraceSupport.exportTableOfContents(xctracePath, traceFile.toAbsolutePath().toString(),\n+                outputFile.getAbsolutePath());\n+\n+        XCTraceTableOfContentsHandler tocHandler = new XCTraceTableOfContentsHandler();\n+        tocHandler.parse(outputFile.file());\n+        \/\/ Get info about a table with profiling results\n+        XCTraceTableHandler.XCTraceTableDesc tableDesc = findTableDescription(tocHandler);\n+        \/\/ Extract profiling results\n+        XCTraceSupport.exportTable(xctracePath, traceFile.toAbsolutePath().toString(), outputFile.getAbsolutePath(),\n+                SUPPORTED_TABLE_TYPE);\n+\n+        \/\/ Please refer to XCTraceAsmProfiler::readEvents for detailed explanation,\n+        \/\/ but briefly, ProfilerUtils::measurementDelayMs uses the time when a fork was started,\n+        \/\/ and it's not the actual start time.\n+        \/\/ The actual start time is the time xctrace was launched (tocHandler.getRecordStartMs),\n+        \/\/ and we're correcting measurement delay by the difference between these two timestamps.\n+        long timeCorrectionMs = 0;\n+        if (shouldFixStartTime) {\n+            timeCorrectionMs = tocHandler.getRecordStartMs() - md.getStartTime();\n+        }\n+        long skipMs = delayMs;\n+        if (skipMs == -1L) {\n+            skipMs = ProfilerUtils.measurementDelayMs(br);\n+        }\n+        skipMs -= timeCorrectionMs;\n+        long durationMs = lengthMs;\n+        if (durationMs == -1L) {\n+            durationMs = ProfilerUtils.measuredTimeMs(br);\n+        }\n+\n+        long skipNs = skipMs * 1_000_000;\n+        long durationNs = durationMs * 1_000_000;\n+\n+        AggregatedEvents aggregator = new AggregatedEvents(tableDesc);\n+        new XCTraceTableProfileHandler(SUPPORTED_TABLE_TYPE, sample -> {\n+            if (sample.getTimeFromStartNs() <= skipNs || sample.getTimeFromStartNs() > skipNs + durationNs) {\n+                return;\n+            }\n+\n+            aggregator.add(sample);\n+        }).parse(outputFile.file());\n+\n+        if (aggregator.getEventsCount() == 0) {\n+            return Collections.emptyList();\n+        }\n+\n+        Collection<Result<?>> results = new ArrayList<>();\n+        computeAggregates(results, aggregator);\n+        aggregator.normalizeByThroughput(opsThroughput);\n+\n+        for (int i = 0; i < tableDesc.getPmcEvents().size(); i++) {\n+            String event = tableDesc.getPmcEvents().get(i);\n+            results.add(new ScalarResult(event, aggregator.getEventValues()[i],\n+                    \"#\/op\", AggregationPolicy.AVG));\n+        }\n+        if (tableDesc.getTriggerType() == XCTraceTableHandler.TriggerType.PMI) {\n+            results.add(new ScalarResult(tableDesc.triggerEvent(),\n+                    aggregator.getEventValues()[aggregator.getEventValues().length - 1],\n+                    \"#\/op\", AggregationPolicy.AVG));\n+        }\n+        return results;\n+    }\n+\n+    private void computeAggregates(Collection<Result<?>> results, AggregatedEvents aggregator) {\n+        computeCommonMetrics(results, aggregator);\n+\n+        if (perfEvents.getArchitecture() == XCTraceSupport.CpuArch.AARCH64) {\n+            computeAppleSiliconArm64InstDensityMetrics(results, aggregator);\n+        }\n+    }\n+\n+    private static void computeCommonMetrics(Collection<Result<?>> results, AggregatedEvents aggregator) {\n+        CounterValue cycles = aggregator.getAnyOfOrNull(CYCLES_EVENT_NAMES);\n+        CounterValue insts = aggregator.getAnyOfOrNull(INSTRUCTIONS_EVENT_NAMES);\n+\n+        if (cycles != null && cycles.getValue() != 0D && insts != null && insts.getValue() != 0D) {\n+            results.add(new ScalarResult(\"CPI\", cycles.getValue() \/ insts.getValue(),\n+                    cycles.getName() + \"\/\" + insts.getName(), AggregationPolicy.AVG));\n+            results.add(new ScalarResult(\"IPC\", insts.getValue() \/ cycles.getValue(),\n+                    insts.getName() + \"\/\" + cycles.getName(), AggregationPolicy.AVG));\n+        }\n+\n+        CounterValue branches = aggregator.getAnyOfOrNull(BRANCH_EVENT_NAMES);\n+        CounterValue missedBranches = aggregator.getAnyOfOrNull(BRANCH_MISS_EVENT_NAMES);\n+        if (branches != null && branches.getValue() != 0D && missedBranches != null) {\n+            results.add(new ScalarResult(\"Branch miss ratio\", missedBranches.getValue() \/ branches.getValue(),\n+                    missedBranches.getName() + \"\/\" + branches.getName(), AggregationPolicy.AVG));\n+        }\n+    }\n+\n+    \/\/ Compute instructions density metrics (defined in Apple Silicon CPU Optimization Guide,\n+    \/\/ https:\/\/developer.apple.com\/documentation\/apple-silicon\/cpu-optimization-guide).\n+    private static void computeAppleSiliconArm64InstDensityMetrics(Collection<Result<?>> results, AggregatedEvents aggregator) {\n+        CounterValue insts = aggregator.getAnyOfOrNull(INSTRUCTIONS_EVENT_NAMES);\n+        if (insts == null) {\n+            return;\n+        }\n+        for (String eventName : aggregator.getEventNames()) {\n+            if (!eventName.startsWith(\"INST_\") || eventName.equals(\"INST_ALL\")) {\n+                continue;\n+            }\n+            Double value = aggregator.getCountOrNull(eventName);\n+            if (value == null || value == 0D) {\n+                continue;\n+            }\n+\n+            results.add(new ScalarResult(eventName + \" density (of instructions)\", value \/ insts.getValue(),\n+                    eventName + \"\/\" + insts.getName(), AggregationPolicy.AVG));\n+        }\n+    }\n+\n+    @Override\n+    public boolean allowPrintOut() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean allowPrintErr() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"macOS xctrace (Instruments) PMU counter statistics, normalized by operation count\";\n+    }\n+\n+    private static class AggregatedEvents {\n+        private final List<String> eventNames;\n+        private final double[] eventValues;\n+        private long eventsCount = 0;\n+\n+        private long minTimestampMs = Long.MAX_VALUE;\n+        private long maxTimestampMs = Long.MIN_VALUE;\n+\n+        AggregatedEvents(XCTraceTableHandler.XCTraceTableDesc tableDesc) {\n+            List<String> names = new ArrayList<>(tableDesc.getPmcEvents());\n+            names.add(tableDesc.triggerEvent());\n+            eventNames = Collections.unmodifiableList(names);\n+            eventValues = new double[getEventNames().size()];\n+        }\n+\n+        void add(XCTraceTableProfileHandler.XCTraceSample sample) {\n+            long[] counters = sample.getPmcValues();\n+            for (int i = 0; i < counters.length; i++) {\n+                eventValues[i] += counters[i];\n+            }\n+            eventValues[eventValues.length - 1] = sample.getWeight();\n+            minTimestampMs = Math.min(minTimestampMs, sample.getTimeFromStartNs());\n+            maxTimestampMs = Math.max(maxTimestampMs, sample.getTimeFromStartNs());\n+            eventsCount += 1;\n+        }\n+\n+        void normalizeByThroughput(double throughput) {\n+            if (maxTimestampMs == minTimestampMs) {\n+                throw new IllegalStateException(\"Min and max timestamps are the same.\");\n+            }\n+            double timeSpanMs = (maxTimestampMs - minTimestampMs) \/ 1e6;\n+            for (int i = 0; i < getEventValues().length; i++) {\n+                eventValues[i] = eventValues[i] \/ timeSpanMs \/ throughput;\n+            }\n+        }\n+\n+        CounterValue getAnyOfOrNull(String... keys) {\n+            for (String key : keys) {\n+                Double value = getCountOrNull(key);\n+                if (value != null) {\n+                    return new CounterValue(key, value);\n+                }\n+            }\n+            return null;\n+        }\n+\n+        Double getCountOrNull(String event) {\n+            int idx = eventNames.indexOf(event);\n+            if (idx == -1) return null;\n+            return eventValues[idx];\n+        }\n+\n+        List<String> getEventNames() {\n+            return eventNames;\n+        }\n+\n+        double[] getEventValues() {\n+            return eventValues;\n+        }\n+\n+        long getEventsCount() {\n+            return eventsCount;\n+        }\n+    }\n+\n+    private static class CounterValue {\n+        private final String name;\n+        private final double value;\n+\n+        CounterValue(String name, double value) {\n+            this.name = name;\n+            this.value = value;\n+        }\n+\n+        double getValue() {\n+            return value;\n+        }\n+\n+        String getName() {\n+            return name;\n+        }\n+    }\n+}\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceNormProfiler.java","additions":643,"deletions":0,"binary":false,"changes":643,"status":"added"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.jmh.util.FileUtils;\n@@ -29,2 +30,6 @@\n-import java.io.File;\n-import java.io.IOException;\n+import javax.xml.transform.*;\n+import javax.xml.transform.stream.StreamResult;\n+import javax.xml.transform.stream.StreamSource;\n+import java.io.*;\n+import java.math.BigInteger;\n+import java.nio.charset.StandardCharsets;\n@@ -33,0 +38,2 @@\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n@@ -34,0 +41,2 @@\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n@@ -38,0 +47,7 @@\n+    private static final int ANY_VERSION = 0;\n+    private static final String HW_FAMILY_PREFIX = \"hw.cpufamily: \";\n+    private static final String HW_TYPE_PREFIX = \"hw.cputype: \";\n+    private static final String HW_SUBTYPE_PREFIX = \"hw.cpusubtype: \";\n+    private static final String[] KPEP_DIRS = new String[]{\"\/usr\/local\/share\/kpep\", \"\/usr\/share\/kpep\"};\n+    public static final String INSTRUMENTS_PACKAGE_TEMPLATE = \"\/xctracenorm.instrpkg\";\n+\n@@ -77,0 +93,12 @@\n+    static Collection<String> recordWithPackageCommandPrefix(String xctracePath, String runFile, File pkg,\n+                                                             String instrument) {\n+        return Arrays.asList(\n+                xctracePath, \"record\",\n+                \"--package\", pkg.getAbsolutePath(),\n+                \"--instrument\", instrument,\n+                \"--output\", runFile,\n+                \"--target-stdout\", \"-\",\n+                \"--launch\", \"--\"\n+        );\n+    }\n+\n@@ -78,2 +106,2 @@\n-     * Returns absolute path to xctrace executable or throws ProfilerException if it does not exist.\n-     *\n+     * Returns absolute path to xctrace executable or throws ProfilerException if it does not exist..\n+     * <p>\n@@ -83,0 +111,4 @@\n+        return getXCTracePath(ANY_VERSION);\n+    }\n+\n+    static Path getXCodeDevToolsPath() throws ProfilerException {\n@@ -90,1 +122,13 @@\n-        File xctrace = Paths.get(devPath, \"usr\", \"bin\", \"xctrace\").toFile();\n+        return Paths.get(devPath);\n+    }\n+\n+    \/**\n+     * Returns absolute path to xctrace executable or throws ProfilerException if it does not exist\n+     * or its version is below {@code minVersion}.\n+     * <p>\n+     * xctrace is expected to be at {@code $(xcode-select -p)\/usr\/bin\/xctrace}\n+     *\n+     * @param minVersion a minimum required major xctrace version, like {@code 13}. Use {@code 0} to allow any version.\n+     *\/\n+    static String getXCTracePath(int minVersion) throws ProfilerException {\n+        File xctrace = getXCodeDevToolsPath().resolve(Paths.get(\"usr\", \"bin\", \"xctrace\")).toFile();\n@@ -95,4 +139,8 @@\n-        out = Utils.tryWith(xctracePath, \"version\");\n-        if (!out.isEmpty()) {\n-            throw new ProfilerException(\"\\\"xctrace version\\\" failed: \" + out);\n-        }\n+        Collection<String> versionOut = Utils.runWith(xctracePath, \"version\");\n+        String versionString = versionOut.stream().flatMap(l -> Arrays.stream(l.split(\"\\n\")))\n+                .filter(l -> l.contains(\"xctrace version\"))\n+                .findFirst()\n+                .orElseThrow(() -> new ProfilerException(\"\\\"xctrace version\\\" failed: \" + versionOut));\n+\n+        checkVersion(versionString, minVersion);\n+\n@@ -102,0 +150,10 @@\n+    private static void checkVersion(String versionString, int minVersion) throws ProfilerException {\n+        String extractedVersion = versionString.split(\"xctrace version \")[1].split(\" \")[0];\n+        int majorVersion = Integer.parseInt(extractedVersion.split(\"\\\\.\")[0]);\n+\n+        if (majorVersion < minVersion) {\n+            throw new ProfilerException(\n+                    \"xctrace version (\" + versionString + \") is too low (required at least \" + minVersion + \").\");\n+        }\n+    }\n+\n@@ -174,0 +232,350 @@\n+\n+    \/**\n+     * Generates a string uniquely identifying the Instruments package.\n+     *\/\n+    static String generateInstrumentsPackageDigest(int samplingRateMsec, Collection<String> pmuEvents) {\n+        MessageDigest md;\n+        try {\n+            \/\/ MD5 is one of the algorithms that have to be supported,\n+            \/\/ and its digest is the shortest one (16 bytes), which might be handy for file names.\n+            md = MessageDigest.getInstance(\"MD5\");\n+        } catch (NoSuchAlgorithmException e) {\n+            throw new IllegalStateException(\"MD5 not implemented\", e);\n+        }\n+        InputStream templateStream = XCTraceSupport.class.getResourceAsStream(INSTRUMENTS_PACKAGE_TEMPLATE);\n+        byte[] buffer = new byte[1024];\n+        int bytesRead = -1;\n+        try {\n+            while ((bytesRead = templateStream.read(buffer)) != -1) {\n+                md.update(buffer, 0, bytesRead);\n+            }\n+        } catch (IOException e) {\n+            throw new IllegalStateException(\"Failed to read instruments package template\", e);\n+        }\n+        md.update(Integer.toString(samplingRateMsec).getBytes(StandardCharsets.UTF_8));\n+        pmuEvents.stream().sorted().forEachOrdered(event -> md.update(event.getBytes(StandardCharsets.UTF_8)));\n+        \/\/ poor man's byte[] to hexadecimal string conversion\n+        return new BigInteger(md.digest()).toString(16);\n+    }\n+\n+    \/**\n+     * Builds a \"CPU Counters\" based Instruments package that'll sample {@code pmcEvents}\n+     * at {@code samplingRateMillis} rate. The package building is performed by {@code instrumentbuilder} tool\n+     * bundled with Xcode.\n+     *\n+     * @param dstPath            a path where a generated package needs to be saved.\n+     * @param samplingRateMillis the rate at which PMC needs to be sampled, it should be greater than zero.\n+     * @param pmcEvents          the list of PMC to sample, it should be non-empty.\n+     *\/\n+    static void buildInstrumentsPMCSamplingPackage(File dstPath, long samplingRateMillis, Collection<String> pmcEvents)\n+            throws ProfilerException {\n+        if (samplingRateMillis <= 0) {\n+            throw new IllegalArgumentException(\n+                    \"Sampling rate must be a positive integer, but it is \" + samplingRateMillis);\n+        }\n+        if (pmcEvents.isEmpty()) {\n+            throw new IllegalArgumentException(\"PMC events list must contain at least one event\");\n+        }\n+        InputStream templateStream = XCTraceSupport.class.getResourceAsStream(INSTRUMENTS_PACKAGE_TEMPLATE);\n+        String template = new BufferedReader(new InputStreamReader(templateStream))\n+                .lines()\n+                .collect(Collectors.joining(\"\\n\"));\n+\n+        template = template.replace(\"SAMPLING_RATE_MICROS\",\n+                        Long.toString(TimeUnit.MILLISECONDS.toMicros(samplingRateMillis)))\n+                .replace(\"PMC_EVENTS_LIST\",\n+                        pmcEvents.stream().map(event -> String.format(\"<string>%s<\/string>\", event))\n+                                .collect(Collectors.joining()));\n+\n+        String instrBuilderPath = getXCodeDevToolsPath().resolve(\n+                Paths.get(\"usr\", \"bin\", \"instrumentbuilder\")).toString();\n+\n+        File instrpkg;\n+        try {\n+            instrpkg = FileUtils.tempFile(\".instrpkg\");\n+            Files.write(instrpkg.toPath(), template.getBytes(StandardCharsets.UTF_8));\n+        } catch (IOException e) {\n+            throw new ProfilerException(e);\n+        }\n+        Collection<String> output = Utils.runWith(\n+                instrBuilderPath,\n+                \"-o\", dstPath.getAbsolutePath(), \/\/ output file\n+                \"-i\", instrpkg.getAbsolutePath(), \/\/ input package file\n+                \"-l\", \"CPU Counters\" \/\/ packages to link with\n+        );\n+        output.stream()\n+                .filter(line -> line.contains(\"Package distribution file created at\"))\n+                .findFirst()\n+                .orElseThrow(() -> new ProfilerException(\"Can't create an Instruments package:\\n\"\n+                        + String.join(\"\\n\", output)));\n+        instrpkg.delete();\n+    }\n+\n+    \/**\n+     * Returns a string uniquely identified current CPU.\n+     * <p>\n+     * The string has a following format: {@code <hw.cputype>_<hw.cpusubtype>_<hw.cpufamily>}, where\n+     * each field corresponds to a same titled sysctl property encoded in hexadecimal format.\n+     *\/\n+    static String getCpuIdString() throws ProfilerException {\n+        List<String> sysctlOut = Utils.runWith(\"sysctl\", \"hw\")\n+                .stream()\n+                .flatMap(line -> Stream.of(line.split(\"\\n\")))\n+                .collect(Collectors.toList());\n+        int family = -1;\n+        int type = -1;\n+        int subtype = -1;\n+        for (String prop : sysctlOut) {\n+            if (prop.startsWith(HW_FAMILY_PREFIX)) {\n+                family = Integer.parseInt(prop.substring(HW_FAMILY_PREFIX.length()));\n+            } else if (prop.startsWith(HW_TYPE_PREFIX)) {\n+                type = Integer.parseInt(prop.substring(HW_TYPE_PREFIX.length()));\n+            } else if (prop.startsWith(HW_SUBTYPE_PREFIX)) {\n+                subtype = Integer.parseInt(prop.substring(HW_SUBTYPE_PREFIX.length()));\n+            }\n+        }\n+        if (type == -1) throw new ProfilerException(\"hw.cputype variable was not found\");\n+        if (subtype == -1) throw new ProfilerException(\"hw.cpusubtype variable was not found\");\n+        if (family == -1) throw new ProfilerException(\"hw.cpufamily variable was not found\");\n+        return String.format(\"%s_%s_%s\",\n+                Integer.toUnsignedString(type, 16),\n+                Integer.toUnsignedString(subtype, 16),\n+                Integer.toUnsignedString(family, 16));\n+    }\n+\n+    \/**\n+     * Returns a database file with PMU description for a current CPU.\n+     * <p>\n+     * Usually, such a file has a path like {@code \/usr\/share\/kpep\/cpu_100000c_2_8765edea.plist} where\n+     * the filename part between {@code \"cpu_\"} and {@code \".plist\"} could be obtained from\n+     * {@link XCTraceSupport#getCpuIdString()}.\n+     * <p>\n+     * Function searches for a database file in all known KPEP files locations ({@code \/usr\/local\/share\/kpep},\n+     * {@code \/usr\/share\/kpep}) and throws {@link ProfilerException} if there's not such a file.\n+     *\/\n+    static File getKpepFilePath() throws ProfilerException {\n+        String fileName = \"cpu_\" + getCpuIdString() + \".plist\";\n+        for (String kpepDir : KPEP_DIRS) {\n+            File kpepFile = new File(kpepDir, fileName);\n+            if (kpepFile.exists()) {\n+                return kpepFile;\n+            }\n+        }\n+        throw new ProfilerException(\"KPEP database file does not exist: file \" + fileName + \" was not found in \" +\n+                String.join(\", \", KPEP_DIRS) + \". Most likely, it means current CPU is either virtualized \" +\n+                \"(we're running inside a VM), or not supported yet by the macOS (less likely).\");\n+    }\n+\n+    \/**\n+     * Parses a given KPEP database file. These files are property list (plist) files located in either\n+     * {@code \/usr\/local\/share\/kpep} or {@code \/usr\/share\/kpep} and containing information about CPU's performance\n+     * monitoring unit. Information includes some PMU properties like a number of fixed and configurable counters,\n+     * but mainly, in contains PMU events description.\n+     * <p>\n+     * While the database itself contains a few entries about a CPU, one has to query sysctl to get enough info to\n+     * correctly identify the CPU and then use that info to pick up a proper KPEP file. All required machinery is\n+     * already implemented in {@link XCTraceSupport#getCpuIdString()}.\n+     * You can use {@link  XCTraceSupport#getKpepFilePath()} to get a full path to what should be a file corresponding\n+     * to current CPU.\n+     *\n+     * @param kpepFile a file with performance monitoring counters database.\n+     *\/\n+    static PerfEvents parseKpepFile(File kpepFile) throws ProfilerException {\n+        Path tempFile = null;\n+        try {\n+            tempFile = Files.createTempFile(\"\", \".xml\");\n+            \/\/ Convert a KPEP plist file to XML.\n+            \/\/ Newer plutil versions allow extracting data by path (like xpath) into a textual form directly,\n+            \/\/ but we can't rely on this functionality as it was added in later MacOS versions.\n+            Collection<String> out = Utils.tryWith(\"plutil\",\n+                    \"-convert\", \"xml1\",\n+                    \"-o\", tempFile.toString(),\n+                    kpepFile.getAbsolutePath());\n+            if (!out.isEmpty()) {\n+                throw new ProfilerException(\"Failed to parse a KPEP file: \" + kpepFile.getAbsolutePath() +\n+                        \". Output: \" + out);\n+            }\n+            return parseKpepXmlFile(tempFile.toFile());\n+        } catch (IOException e) {\n+            throw new ProfilerException(\"Failed to parse a KPEP file: \" + kpepFile.getAbsolutePath(), e);\n+        } finally {\n+            if (tempFile != null) {\n+                try {\n+                    Files.deleteIfExists(tempFile);\n+                } catch (IOException ignored) {\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Parses a KPEP database from XML format.\n+     *\/\n+    static PerfEvents parseKpepXmlFile(File kpepXmlFile) throws ProfilerException {\n+        Map<String, String> aliases = new HashMap<>();\n+        Map<String, PerfEventInfo> description = new HashMap<>();\n+        long[] masks = new long[]{0, 0};\n+        String[] architecture = new String[]{\"unknown\"};\n+        parseKpepXmlFileLines(kpepXmlFile, fields -> {\n+            if (fields.length == 0) return;\n+            switch (fields[0]) {\n+                case \"alias\": \/\/ alias description, [\"alias\", <alias name>, <aliased event>]\n+                    if (fields.length == 3) {\n+                        aliases.put(fields[1], fields[2]);\n+                    }\n+                    break;\n+                case \"event\": { \/\/ PMU event info, [\"event\", <event name>, <is fixed>, <mask>, <description>, <fallback>]\n+                    String name = fields[1];\n+                    boolean isFixed = fields.length > 2 && !fields[2].isEmpty();\n+                    long mask = isFixed ? masks[0] : masks[1];\n+                    if (fields.length > 3 && !fields[3].isEmpty()) {\n+                        mask = Long.parseLong(fields[3]);\n+                    }\n+                    String desc = fields.length > 4 && !fields[4].isEmpty() ? fields[4] : \"No description\";\n+                    String fallback = fields.length > 5 ? fields[5] : null;\n+                    description.put(name, new PerfEventInfo(name, mask, isFixed, desc, fallback));\n+                    break;\n+                }\n+                case \"architecture\": \/\/ CPU architecture, [\"architecture\", <arm64|x86_64>]\n+                    architecture[0] = fields[1];\n+                    break;\n+                case \"fixed_counters\": \/\/ Fixed PMU counters bitmask, [\"fixed_counters\", <mask>]\n+                    masks[0] = Long.parseLong(fields[1]);\n+                    break;\n+                case \"config_counters\": \/\/ Configurable PMU counters bitmask, [\"config_counters\", <mask>]\n+                    masks[1] = Long.parseLong(fields[1]);\n+                    break;\n+            }\n+        });\n+\n+        if (architecture[0].equals(\"unknown\")) {\n+            throw new ProfilerException(\"KPEP file was not parsed correctly: CPU architecture info is missing.\");\n+        }\n+\n+        aliases.forEach((k, v) -> description.put(k, description.get(v)));\n+\n+        return new PerfEvents(CpuArch.fromString(architecture[0]), masks[0], masks[1], aliases, description);\n+    }\n+\n+    private static void parseKpepXmlFileLines(File xmlFile, Consumer<String[]> callback) throws ProfilerException {\n+        Source kpepXml = new StreamSource(xmlFile);\n+        Source aliasesXslt = new StreamSource(XCTraceSupport.class.getResourceAsStream(\"\/kpep.plist.xslt\"));\n+\n+        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n+        StreamResult aliasesParsed = new StreamResult(new ByteArrayOutputStream());\n+        try {\n+            transformerFactory.newTransformer(aliasesXslt).transform(kpepXml, aliasesParsed);\n+        } catch (TransformerException e) {\n+            throw new ProfilerException(\"Failed to transform KPEP XML file\", e);\n+        }\n+        String aliasesText = aliasesParsed.getOutputStream().toString();\n+\n+        for (String line : aliasesText.split(\"\\n\")) {\n+            \/\/ We're using '::' as a separator in case some textual fields contain tabs or other punctuation\n+            if (!line.contains(\"::\")) {\n+                continue;\n+            }\n+            callback.accept(line.trim().split(\"::\"));\n+        }\n+    }\n+\n+    enum CpuArch {\n+        AARCH64,\n+        X86_64,\n+        UNKNOWN;\n+\n+        static CpuArch fromString(String arch) {\n+            switch (arch) {\n+                case \"aarch64\":\n+                case \"arm64\":\n+                    return AARCH64;\n+                case \"amd64\":\n+                case \"x86_64\":\n+                    return X86_64;\n+                default:\n+                    return UNKNOWN;\n+            }\n+        }\n+    }\n+\n+    static class PerfEventInfo {\n+        private final String name;\n+        private final long counterMask;\n+        private final boolean isFixed;\n+        private final String description;\n+\n+        private final String fallbackEvent;\n+\n+        public PerfEventInfo(String name, long counterMask, boolean isFixed, String description, String fallback) {\n+            this.name = name;\n+            this.counterMask = counterMask;\n+            this.isFixed = isFixed;\n+            this.description = description;\n+            fallbackEvent = fallback;\n+        }\n+\n+        public String getName() {\n+            return name;\n+        }\n+\n+        public long getCounterMask() {\n+            return counterMask;\n+        }\n+\n+        public boolean isFixed() {\n+            return isFixed;\n+        }\n+\n+        public String getDescription() {\n+            return description;\n+        }\n+\n+        public String getFallbackEvent() {\n+            return fallbackEvent;\n+        }\n+    }\n+\n+    static class PerfEvents {\n+        private final Map<String, String> eventAliases;\n+        private final Map<String, PerfEventInfo> supportedEvents;\n+        private final long fixedCountersMask;\n+        private final long configurableCountersMask;\n+        private final CpuArch architecture;\n+\n+        public PerfEvents(CpuArch architecture, long fixedCountersMask, long configurableCountersMask,\n+                          Map<String, String> eventAliases, Map<String, PerfEventInfo> supportedEvents) {\n+            this.eventAliases = eventAliases;\n+            this.supportedEvents = supportedEvents;\n+            this.fixedCountersMask = fixedCountersMask;\n+            this.configurableCountersMask = configurableCountersMask;\n+            this.architecture = architecture;\n+        }\n+\n+        int getMaxCounters() {\n+            return Long.bitCount(fixedCountersMask | configurableCountersMask);\n+        }\n+\n+        long getFixedCountersMask() {\n+            return fixedCountersMask;\n+        }\n+\n+        long getConfigurableCountersMask() {\n+            return configurableCountersMask;\n+        }\n+\n+        CpuArch getArchitecture() {\n+            return architecture;\n+        }\n+\n+        Set<String> getAliases() {\n+            return Collections.unmodifiableSet(eventAliases.keySet());\n+        }\n+\n+        Collection<PerfEventInfo> getAllEvents() {\n+            return Collections.unmodifiableCollection(supportedEvents.values());\n+        }\n+\n+        PerfEventInfo getEvent(String name) {\n+            return supportedEvents.get(name);\n+        }\n+    }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceSupport.java","additions":417,"deletions":9,"binary":false,"changes":426,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n@@ -43,0 +47,1 @@\n+    static final String PMC_EVENTS = \"pmc-events\";\n@@ -126,0 +131,1 @@\n+        private final List<String> pmcEvents;\n@@ -128,1 +134,1 @@\n-                         String trigger, long threshold) {\n+                         String trigger, long threshold, Collection<String> pmcEvents) {\n@@ -133,0 +139,1 @@\n+            this.pmcEvents = Collections.unmodifiableList(new ArrayList<>(pmcEvents));\n@@ -136,1 +143,1 @@\n-            this(tableType, XCTraceTableHandler.TriggerType.UNKNOWN, \"\", -1);\n+            this(tableType, XCTraceTableHandler.TriggerType.UNKNOWN, \"\", -1, Collections.emptyList());\n@@ -154,0 +161,4 @@\n+\n+        public List<String> getPmcEvents() {\n+            return pmcEvents;\n+        }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableHandler.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.stream.Collectors;\n@@ -46,0 +47,10 @@\n+    private static List<String> parseEvents(Attributes attributes) {\n+        String events = attributes.getValue(XCTraceTableHandler.PMC_EVENTS);\n+        return Arrays.stream(events.split(\" \")).map(e -> {\n+                    if (!e.startsWith(\"\\\"\") && !e.endsWith(\"\\\"\")) return e;\n+                    if (e.startsWith(\"\\\"\") && e.endsWith(\"\\\"\")) return e.substring(1, e.length() - 1);\n+                    throw new IllegalStateException(\"Can't parse pmc-events: \" + events);\n+                }).filter(e -> !e.isEmpty())\n+                .collect(Collectors.toList());\n+    }\n+\n@@ -107,1 +118,1 @@\n-                pmiEvent, threshold);\n+                pmiEvent, threshold, parseEvents(attributes));\n@@ -115,1 +126,1 @@\n-                XCTraceTableProfileHandler.XCTraceSample.TIME_SAMPLE_TRIGGER_NAME, threshold);\n+                XCTraceTableProfileHandler.XCTraceSample.TIME_SAMPLE_TRIGGER_NAME, threshold, parseEvents(attributes));\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableOfContentsHandler.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -225,0 +225,6 @@\n+            case XCTraceTableHandler.PMC_EVENTS:\n+                pushCachedOrNew(attributes, id -> {\n+                    setNeedParseCharacters(true);\n+                    return new ValueHolder<long[]>(id);\n+                });\n+                break;\n@@ -281,1 +287,8 @@\n-\n+            case XCTraceTableHandler.PMC_EVENTS:\n+                ValueHolder<long[]> events = pop();\n+                if (isNeedToParseCharacters()) {\n+                    events.setValue(Arrays.stream(getCharacters().split(\" \"))\n+                            .mapToLong(Long::parseLong).toArray());\n+                }\n+                currentSample.setPmcValues(events.getValue());\n+                break;\n@@ -377,0 +390,1 @@\n+        private static final long[] EMPTY_ARRAY = new long[0];\n@@ -383,0 +397,1 @@\n+        private long[] pmcValues = EMPTY_ARRAY;\n@@ -417,0 +432,8 @@\n+\n+        public long[] getPmcValues() {\n+            return pmcValues;\n+        }\n+\n+        public void setPmcValues(long[] values) {\n+            pmcValues = values;\n+        }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableProfileHandler.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+\n+    Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+    This code is free software; you can redistribute it and\/or modify it\n+    under the terms of the GNU General Public License version 2 only, as\n+    published by the Free Software Foundation.  Oracle designates this\n+    particular file as subject to the \"Classpath\" exception as provided\n+    by Oracle in the LICENSE file that accompanied this code.\n+\n+    This code is distributed in the hope that it will be useful, but WITHOUT\n+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+    version 2 for more details (a copy is included in the LICENSE file that\n+    accompanied this code).\n+\n+    You should have received a copy of the GNU General Public License version\n+    2 along with this work; if not, write to the Free Software Foundation,\n+    Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+    Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+    or visit www.oracle.com if you need additional information or have any\n+    questions.\n+\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http:\/\/www.w3.org\/1999\/XSL\/Transform\" version=\"1.0\">\n+\n+    <xsl:output method=\"text\" encoding=\"UTF-8\" standalone=\"yes\"\/>\n+\n+    <xsl:template match=\"\/\">\n+        <!-- get CPU architecture -->\n+        <xsl:apply-templates select=\"\/\/string\">\n+            <xsl:with-param name=\"key\">architecture<\/xsl:with-param>\n+        <\/xsl:apply-templates>\n+        <xsl:text>&#xa;<\/xsl:text>\n+\n+        <!-- get fixed PMU counters mask -->\n+        <xsl:apply-templates select=\"\/\/integer\">\n+            <xsl:with-param name=\"key\">fixed_counters<\/xsl:with-param>\n+        <\/xsl:apply-templates>\n+        <xsl:text>&#xa;<\/xsl:text>\n+\n+        <!-- get configurable PMU counters mask -->\n+        <xsl:apply-templates select=\"\/\/integer\">\n+            <xsl:with-param name=\"key\">config_counters<\/xsl:with-param>\n+        <\/xsl:apply-templates>\n+        <xsl:text>&#xa;<\/xsl:text>\n+\n+        <!-- collect aliased events -->\n+        <xsl:apply-templates select=\"plist\/dict\" mode=\"aliases\"\/>\n+        <!-- collect events info -->\n+        <xsl:apply-templates select=\"plist\/dict\" mode=\"events\"\/>\n+\n+    <\/xsl:template>\n+\n+    <!-- print a value of <string> or <integer> nodes preceded with a specified <key> node -->\n+    <xsl:template match=\"string|integer\">\n+        <xsl:param name=\"key\" \/>\n+        <xsl:param name=\"skipKey\" \/>\n+        <xsl:variable name=\"keyName\">\n+            <xsl:value-of select=\"preceding-sibling::key[1]\/text()\"\/>\n+        <\/xsl:variable>\n+        <xsl:if test=\"$keyName=$key\">\n+            <xsl:if test=\"$skipKey!='true'\">\n+                <xsl:value-of select=\"$key\"\/>\n+                <xsl:text>::<\/xsl:text>\n+            <\/xsl:if>\n+            <xsl:value-of select=\"text()\"\/>\n+        <\/xsl:if>\n+    <\/xsl:template>\n+\n+    <!-- aliases extraction -->\n+    <xsl:template match=\"dict\" mode=\"aliases\">\n+        <xsl:variable name=\"name\">\n+            <xsl:value-of select=\"preceding-sibling::key[1]\/text()\"\/>\n+        <\/xsl:variable>\n+        <xsl:if test=\"$name='aliases'\">\n+            <xsl:for-each select=\"string\">\n+                <xsl:text>alias::<\/xsl:text>\n+                <!-- key contains alias -->\n+                <xsl:value-of select=\"preceding-sibling::key[1]\/text()\"\/>\n+                <xsl:text>::<\/xsl:text>\n+                <!-- value of this node contains aliased event's name -->\n+                <xsl:value-of select=\".\"\/>\n+                <xsl:text>&#xa;<\/xsl:text>\n+            <\/xsl:for-each>\n+        <\/xsl:if>\n+        <!-- continue inspecting dicts recursively (if this wasn't the one we're looking for) -->\n+        <xsl:apply-templates select=\"dict\" mode=\"aliases\"\/>\n+    <\/xsl:template>\n+\n+    <!-- events info extraction -->\n+    <xsl:template match=\"dict\" mode=\"events\">\n+        <xsl:variable name=\"name\">\n+            <xsl:value-of select=\"preceding-sibling::key[1]\/text()\"\/>\n+        <\/xsl:variable>\n+        <xsl:if test=\"$name='events'\">\n+            <xsl:for-each select=\"key\">\n+                <xsl:text>event::<\/xsl:text>\n+                <!-- node's value contains event name -->\n+                <xsl:value-of select=\"text()\"\/>\n+                <xsl:text>::<\/xsl:text>\n+                <!-- fixed counter's mask, or empty if it's a configurable event -->\n+                <xsl:apply-templates select=\"following-sibling::dict[1]\/integer\">\n+                    <xsl:with-param name=\"key\">fixed_counter<\/xsl:with-param>\n+                    <xsl:with-param name=\"skipKey\">true<\/xsl:with-param>\n+                <\/xsl:apply-templates>\n+                <xsl:text>::<\/xsl:text>\n+                <!-- configurable counter's mask, if it differs from PMU-wide mask -->\n+                <xsl:apply-templates select=\"following-sibling::dict[1]\/integer\">\n+                    <xsl:with-param name=\"key\">counters_mask<\/xsl:with-param>\n+                    <xsl:with-param name=\"skipKey\">true<\/xsl:with-param>\n+                <\/xsl:apply-templates>\n+                <xsl:text>::<\/xsl:text>\n+                <!-- event's description -->\n+                <xsl:apply-templates select=\"following-sibling::dict[1]\/string\">\n+                    <xsl:with-param name=\"key\">description<\/xsl:with-param>\n+                    <xsl:with-param name=\"skipKey\">true<\/xsl:with-param>\n+                <\/xsl:apply-templates>\n+                <xsl:text>::<\/xsl:text>\n+                <!-- fallback event for a fixed counter -->\n+                <xsl:apply-templates select=\"following-sibling::dict[1]\/string\">\n+                    <xsl:with-param name=\"key\">fallback<\/xsl:with-param>\n+                    <xsl:with-param name=\"skipKey\">true<\/xsl:with-param>\n+                <\/xsl:apply-templates>\n+                <xsl:text>&#xa;<\/xsl:text>\n+            <\/xsl:for-each>\n+        <\/xsl:if>\n+        <!-- continue inspecting dicts recursively (if this wasn't the one we're looking for) -->\n+        <xsl:apply-templates select=\"dict\" mode=\"events\"\/>\n+    <\/xsl:template>\n+<\/xsl:stylesheet>\n","filename":"jmh-core\/src\/main\/resources\/kpep.plist.xslt","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!--\n+\n+    Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+    This code is free software; you can redistribute it and\/or modify it\n+    under the terms of the GNU General Public License version 2 only, as\n+    published by the Free Software Foundation.  Oracle designates this\n+    particular file as subject to the \"Classpath\" exception as provided\n+    by Oracle in the LICENSE file that accompanied this code.\n+\n+    This code is distributed in the hope that it will be useful, but WITHOUT\n+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+    version 2 for more details (a copy is included in the LICENSE file that\n+    accompanied this code).\n+\n+    You should have received a copy of the GNU General Public License version\n+    2 along with this work; if not, write to the Free Software Foundation,\n+    Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+    Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+    or visit www.oracle.com if you need additional information or have any\n+    questions.\n+\n+-->\n+<package>\n+\t<id>org.openjdk.jmh.profile.xctrace.normprof<\/id>\n+\t<title>XCTraceNormProfiler<\/title>\n+\t<owner><name>Duke<\/name><\/owner>\n+\n+    <!-- Requires xctrace >= 13 -->\n+    <import-schema>counters-profile<\/import-schema>\n+\n+    <instrument>\n+        <id>com.apple.dt.time-profiler-example<\/id>\n+            <title>XCTraceNormProfiler<\/title>\n+            <category>System<\/category>\n+            <purpose>Samples PMC for XCTraceNormProfiler<\/purpose>\n+            <icon>Generic<\/icon>\n+            <!-- this one will be passed from xctrace -->\n+            <import-parameter>\n+                <from-scope>trace<\/from-scope>\n+                <name>?target-pid<\/name>\n+            <\/import-parameter>\n+            <create-table>\n+                <id>profile-table<\/id>\n+                <schema-ref>counters-profile<\/schema-ref>\n+                <!-- sample on regular time intervals -->\n+                <attribute>\n+                    <name>trigger<\/name>\n+                    <string>time<\/string>\n+                <\/attribute>\n+                <attribute>\n+                    <name>sample-rate-micro-seconds<\/name>\n+                    <integer>SAMPLING_RATE_MICROS<\/integer>\n+                <\/attribute>\n+                <attribute>\n+                    <name>pmc-events<\/name>\n+                    <array>PMC_EVENTS_LIST<\/array>\n+                <\/attribute>\n+                <attribute>\n+                    <name>needs-kernel-callstack<\/name>\n+                    <integer>0<\/integer>\n+                <\/attribute>\n+                <attribute>\n+                    <name>target-pid<\/name>\n+                    <parameter-ref>?target-pid<\/parameter-ref>\n+                <\/attribute>\n+            <\/create-table>\n+            <!-- this is only required to build the package -->\n+            <list>\n+                <title>dummy<\/title>\n+                <table-ref>profile-table<\/table-ref>\n+                <column>time<\/column>\n+            <\/list>\n+    <\/instrument>\n+<\/package>\n","filename":"jmh-core\/src\/main\/resources\/xctracenorm.instrpkg","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.profile;\n+\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.StandardCopyOption;\n+\n+public class KpepXmlParsingTest {\n+    @Rule\n+    public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+    private File copyResourceToFile(String resource) throws IOException {\n+        InputStream stream = KpepXmlParsingTest.class.getResourceAsStream(resource);\n+        Assert.assertNotNull(\"Resource not found: \" + resource, stream);\n+\n+        File tempFile = temporaryFolder.newFile();\n+        Files.copy(stream, tempFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n+        return tempFile;\n+    }\n+\n+    private void checkEvent(XCTraceSupport.PerfEvents db, String name, boolean isFixed, long mask,\n+                            String description, String fallback) {\n+        XCTraceSupport.PerfEventInfo event = db.getEvent(name);\n+\n+        Assert.assertNotNull(\"Event not found: \" + name, event);\n+        Assert.assertEquals(\"mame not matched\", name, event.getName());\n+        Assert.assertEquals(\"isFixed not matched for event \" + name, isFixed, event.isFixed());\n+        Assert.assertEquals(\"counterMask not matched for event \" + name, mask, event.getCounterMask());\n+        Assert.assertEquals(\"description not matched for event \" + name, description, event.getDescription());\n+        Assert.assertEquals(\"fallback not matched for event \" + name, fallback, event.getFallbackEvent());\n+    }\n+\n+    @Test\n+    public void testIntelDbParsing() throws ProfilerException, IOException {\n+        XCTraceSupport.PerfEvents db = XCTraceSupport.parseKpepXmlFile(\n+                copyResourceToFile(\"\/org.openjdk.jmh.profile.xctrace\/haswell.xml\"));\n+\n+        Assert.assertEquals(XCTraceSupport.CpuArch.X86_64, db.getArchitecture());\n+        Assert.assertEquals(7 \/* 3 fixed, 4 configurable *\/, db.getMaxCounters());\n+        Assert.assertEquals(0x7L, db.getFixedCountersMask());\n+        Assert.assertEquals(0x78L, db.getConfigurableCountersMask());\n+\n+        Assert.assertEquals(305, db.getAllEvents().size());\n+\n+        checkEvent(db, \"CPU_CLK_UNHALTED.THREAD\", true, 2L,\n+                \"Core cycles when the core is not in halt state.\",\n+                \"CPU_CLK_UNHALTED.THREAD_P\");\n+        checkEvent(db, \"CPU_CLK_UNHALTED.THREAD_P\", false, 120L,\n+                \"Thread cycles when thread is not in halt state\", null);\n+        checkEvent(db, \"INST_RETIRED.PREC_DIST\", false, 16L,\n+                \"Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution\",\n+                null);\n+\n+        XCTraceSupport.PerfEventInfo instAll = db.getEvent(\"INST_ALL\");\n+        Assert.assertNotNull(instAll);\n+        Assert.assertEquals(\"INST_RETIRED.ANY\", instAll.getName());\n+\n+        XCTraceSupport.PerfEventInfo coreCycles = db.getEvent(\"CORE_ACTIVE_CYCLE\");\n+        Assert.assertNotNull(coreCycles);\n+        Assert.assertEquals(\"CPU_CLK_UNHALTED.THREAD\", coreCycles.getName());\n+    }\n+\n+    @Test\n+    public void testAppleSiliconDbParsing() throws ProfilerException, IOException {\n+        XCTraceSupport.PerfEvents db = XCTraceSupport.parseKpepXmlFile(\n+                copyResourceToFile(\"\/org.openjdk.jmh.profile.xctrace\/a16.xml\"));\n+\n+        Assert.assertEquals(XCTraceSupport.CpuArch.AARCH64, db.getArchitecture());\n+        Assert.assertEquals(10 \/* 2 fixed, 8 configurable *\/, db.getMaxCounters());\n+        Assert.assertEquals(0x3L, db.getFixedCountersMask());\n+        Assert.assertEquals(0x3FCL, db.getConfigurableCountersMask());\n+\n+        Assert.assertEquals(63, db.getAllEvents().size());\n+\n+        checkEvent(db, \"FIXED_CYCLES\", true, 1L, \"No description\", null);\n+        checkEvent(db, \"FIXED_INSTRUCTIONS\", true, 2L, \"No description\", \"INST_ALL\");\n+        checkEvent(db, \"L1D_CACHE_MISS_ST\", false, 1020L,\n+                \"Stores that missed the L1 Data Cache\", null);\n+        checkEvent(db, \"INST_BRANCH_COND\", false, 224L,\n+                \"Retired conditional branch instructions (counts only B.cond)\", null);\n+\n+        XCTraceSupport.PerfEventInfo instr = db.getEvent(\"Instructions\");\n+        Assert.assertNotNull(instr);\n+        Assert.assertEquals(\"FIXED_INSTRUCTIONS\", instr.getName());\n+\n+        XCTraceSupport.PerfEventInfo cycles = db.getEvent(\"Cycles\");\n+        Assert.assertNotNull(cycles);\n+        Assert.assertEquals(\"FIXED_CYCLES\", cycles.getName());\n+    }\n+}\n","filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/profile\/KpepXmlParsingTest.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -56,0 +57,3 @@\n+        assertEquals(Arrays.asList(\n+                \"L1D_CACHE_MISS_LD\", \"MEM_LOAD_RETIRED.L1_HIT\"\n+        ), table.getPmcEvents());\n@@ -71,0 +75,3 @@\n+        assertEquals(Arrays.asList(\n+                \"INST_ALL\", \"CORE_ACTIVE_CYCLE\", \"INST_BRANCH\"\n+        ), table.getPmcEvents());\n","filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableOfContentsHandlerTest.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -113,0 +113,2 @@\n+        assertArrayEquals(\"PMC values for row \" + rowIndex,\n+                (long[]) expectedRow[5], actualRow.getPmcValues());\n","filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableProfileHandlerTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,520 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+    <dict>\n+        <key>internal<\/key>\n+        <false\/>\n+        <key>name<\/key>\n+        <string>a16<\/string>\n+        <key>system<\/key>\n+        <dict>\n+            <key>cpu<\/key>\n+            <dict>\n+                <key>aliases<\/key>\n+                <dict>\n+                    <key>Cycles<\/key>\n+                    <string>FIXED_CYCLES<\/string>\n+                    <key>Instructions<\/key>\n+                    <string>FIXED_INSTRUCTIONS<\/string>\n+                <\/dict>\n+                <key>architecture<\/key>\n+                <string>arm64<\/string>\n+                <key>config_counters<\/key>\n+                <integer>1020<\/integer>\n+                <key>events<\/key>\n+                <dict>\n+                    <key>ATOMIC_OR_EXCLUSIVE_FAIL<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Atomic or exclusive instruction failed (due to contention)<\/string>\n+                        <key>number<\/key>\n+                        <integer>1460<\/integer>\n+                    <\/dict>\n+                    <key>ATOMIC_OR_EXCLUSIVE_SUCC<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Atomic or exclusive instruction successfully completed<\/string>\n+                        <key>number<\/key>\n+                        <integer>1459<\/integer>\n+                    <\/dict>\n+                    <key>BRANCH_CALL_INDIR_MISPRED_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired indirect call instructions mispredicted<\/string>\n+                        <key>number<\/key>\n+                        <integer>202<\/integer>\n+                    <\/dict>\n+                    <key>BRANCH_COND_MISPRED_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired conditional branch instructions that mispredicted<\/string>\n+                        <key>number<\/key>\n+                        <integer>197<\/integer>\n+                    <\/dict>\n+                    <key>BRANCH_INDIR_MISPRED_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired indirect branch instructions including calls and returns that mispredicted<\/string>\n+                        <key>number<\/key>\n+                        <integer>198<\/integer>\n+                    <\/dict>\n+                    <key>BRANCH_MISPRED_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired branch instructions including calls and returns that mispredicted<\/string>\n+                        <key>number<\/key>\n+                        <integer>203<\/integer>\n+                    <\/dict>\n+                    <key>BRANCH_RET_INDIR_MISPRED_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired return instructions that mispredicted<\/string>\n+                        <key>number<\/key>\n+                        <integer>200<\/integer>\n+                    <\/dict>\n+                    <key>CORE_ACTIVE_CYCLE<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Cycles while the core was active<\/string>\n+                        <key>number<\/key>\n+                        <integer>2<\/integer>\n+                    <\/dict>\n+                    <key>FETCH_RESTART<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Fetch Unit internal restarts for any reason. Does not include branch mispredicts<\/string>\n+                        <key>number<\/key>\n+                        <integer>478<\/integer>\n+                    <\/dict>\n+                    <key>FIXED_CYCLES<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>1<\/integer>\n+                        <key>fixed_counter<\/key>\n+                        <integer>0<\/integer>\n+                    <\/dict>\n+                    <key>FIXED_INSTRUCTIONS<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>2<\/integer>\n+                        <key>fallback<\/key>\n+                        <string>INST_ALL<\/string>\n+                        <key>fixed_counter<\/key>\n+                        <integer>1<\/integer>\n+                    <\/dict>\n+                    <key>FLUSH_RESTART_OTHER_NONSPEC<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Pipeline flush and restarts that were not due to branch mispredictions or memory order violations<\/string>\n+                        <key>number<\/key>\n+                        <integer>132<\/integer>\n+                    <\/dict>\n+                    <key>INST_ALL<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>128<\/integer>\n+                        <key>description<\/key>\n+                        <string>All retired instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>140<\/integer>\n+                    <\/dict>\n+                    <key>INST_BARRIER<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired data barrier instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>156<\/integer>\n+                    <\/dict>\n+                    <key>INST_BRANCH<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired branch instructions including calls and returns<\/string>\n+                        <key>number<\/key>\n+                        <integer>141<\/integer>\n+                    <\/dict>\n+                    <key>INST_BRANCH_CALL<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired subroutine call instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>142<\/integer>\n+                    <\/dict>\n+                    <key>INST_BRANCH_COND<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired conditional branch instructions (counts only B.cond)<\/string>\n+                        <key>number<\/key>\n+                        <integer>148<\/integer>\n+                    <\/dict>\n+                    <key>INST_BRANCH_INDIR<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired indirect branch instructions including indirect calls<\/string>\n+                        <key>number<\/key>\n+                        <integer>147<\/integer>\n+                    <\/dict>\n+                    <key>INST_BRANCH_RET<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired subroutine return instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>143<\/integer>\n+                    <\/dict>\n+                    <key>INST_BRANCH_TAKEN<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired taken branch instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>144<\/integer>\n+                    <\/dict>\n+                    <key>INST_INT_ALU<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>128<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired non-branch and non-load\/store Integer Unit instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>151<\/integer>\n+                    <\/dict>\n+                    <key>INST_INT_LD<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired load Integer Unit instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>149<\/integer>\n+                    <\/dict>\n+                    <key>INST_INT_ST<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>128<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired store Integer Unit instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>150<\/integer>\n+                    <\/dict>\n+                    <key>INST_LDST<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>128<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired load and store instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>155<\/integer>\n+                    <\/dict>\n+                    <key>INST_SIMD_ALU<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>128<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired non-load\/store Advanced SIMD and FP Unit instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>154<\/integer>\n+                    <\/dict>\n+                    <key>INST_SIMD_LD<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired load Advanced SIMD and FP Unit instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>152<\/integer>\n+                    <\/dict>\n+                    <key>INST_SIMD_ST<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired store Advanced SIMD and FP Unit instructions<\/string>\n+                        <key>number<\/key>\n+                        <integer>153<\/integer>\n+                    <\/dict>\n+                    <key>INTERRUPT_PENDING<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Cycles while an interrupt was pending because it was masked<\/string>\n+                        <key>number<\/key>\n+                        <integer>620<\/integer>\n+                    <\/dict>\n+                    <key>L1D_CACHE_MISS_LD<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Loads that missed the L1 Data Cache<\/string>\n+                        <key>number<\/key>\n+                        <integer>1443<\/integer>\n+                    <\/dict>\n+                    <key>L1D_CACHE_MISS_LD_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired loads that missed in the L1 Data Cache<\/string>\n+                        <key>number<\/key>\n+                        <integer>191<\/integer>\n+                    <\/dict>\n+                    <key>L1D_CACHE_MISS_ST<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Stores that missed the L1 Data Cache<\/string>\n+                        <key>number<\/key>\n+                        <integer>1442<\/integer>\n+                    <\/dict>\n+                    <key>L1D_CACHE_MISS_ST_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired stores that missed in the L1 Data Cache<\/string>\n+                        <key>number<\/key>\n+                        <integer>192<\/integer>\n+                    <\/dict>\n+                    <key>L1D_CACHE_WRITEBACK<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Dirty cache lines written back from the L1D Cache toward the Shared L2 Cache<\/string>\n+                        <key>number<\/key>\n+                        <integer>1448<\/integer>\n+                    <\/dict>\n+                    <key>L1D_TLB_ACCESS<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Load and store accesses to the L1 Data TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>1440<\/integer>\n+                    <\/dict>\n+                    <key>L1D_TLB_FILL<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Translations filled into the L1 Data TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>1029<\/integer>\n+                    <\/dict>\n+                    <key>L1D_TLB_MISS<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Load and store accesses that missed the L1 Data TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>1441<\/integer>\n+                    <\/dict>\n+                    <key>L1D_TLB_MISS_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired loads and stores that missed in the L1 Data TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>193<\/integer>\n+                    <\/dict>\n+                    <key>L1I_CACHE_MISS_DEMAND<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Demand fetch misses that require a new cache line fill of the L1 Instruction Cache<\/string>\n+                        <key>number<\/key>\n+                        <integer>475<\/integer>\n+                    <\/dict>\n+                    <key>L1I_TLB_FILL<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Translations filled into the L1 Instruction TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>1028<\/integer>\n+                    <\/dict>\n+                    <key>L1I_TLB_MISS_DEMAND<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Demand instruction fetches that missed in the L1 Instruction TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>468<\/integer>\n+                    <\/dict>\n+                    <key>L2_TLB_MISS_DATA<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Loads and stores that missed in the L2 TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>1035<\/integer>\n+                    <\/dict>\n+                    <key>L2_TLB_MISS_INSTRUCTION<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Instruction fetches that missed in the L2 TLB<\/string>\n+                        <key>number<\/key>\n+                        <integer>1034<\/integer>\n+                    <\/dict>\n+                    <key>LDST_X64_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Load and store uops that crossed a 64B boundary<\/string>\n+                        <key>number<\/key>\n+                        <integer>1457<\/integer>\n+                    <\/dict>\n+                    <key>LDST_XPG_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Load and store uops that crossed a 16KiB page boundary<\/string>\n+                        <key>number<\/key>\n+                        <integer>1458<\/integer>\n+                    <\/dict>\n+                    <key>LD_NT_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Load uops that executed with non-temporal hint<\/string>\n+                        <key>number<\/key>\n+                        <integer>1510<\/integer>\n+                    <\/dict>\n+                    <key>LD_UNIT_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Uops that flowed through the Load Unit<\/string>\n+                        <key>number<\/key>\n+                        <integer>1446<\/integer>\n+                    <\/dict>\n+                    <key>MAP_DISPATCH_BUBBLE<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Bubble detected in dispatch stage<\/string>\n+                        <key>number<\/key>\n+                        <integer>470<\/integer>\n+                    <\/dict>\n+                    <key>MAP_INT_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Mapped Integer Unit uops<\/string>\n+                        <key>number<\/key>\n+                        <integer>636<\/integer>\n+                    <\/dict>\n+                    <key>MAP_LDST_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Mapped Load and Store Unit uops, including GPR to vector register converts<\/string>\n+                        <key>number<\/key>\n+                        <integer>637<\/integer>\n+                    <\/dict>\n+                    <key>MAP_REWIND<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Cycles while the Map Unit was blocked while rewinding due to flush and restart<\/string>\n+                        <key>number<\/key>\n+                        <integer>629<\/integer>\n+                    <\/dict>\n+                    <key>MAP_SIMD_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Mapped Advanced SIMD and FP Unit uops<\/string>\n+                        <key>number<\/key>\n+                        <integer>638<\/integer>\n+                    <\/dict>\n+                    <key>MAP_STALL<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Cycles while the Map Unit was stalled for any reason<\/string>\n+                        <key>number<\/key>\n+                        <integer>630<\/integer>\n+                    <\/dict>\n+                    <key>MAP_STALL_DISPATCH<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Cycles while the Map Unit was stalled because of Dispatch back pressure<\/string>\n+                        <key>number<\/key>\n+                        <integer>624<\/integer>\n+                    <\/dict>\n+                    <key>MAP_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Mapped uops<\/string>\n+                        <key>number<\/key>\n+                        <integer>617<\/integer>\n+                    <\/dict>\n+                    <key>MMU_TABLE_WALK_DATA<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Table walk memory requests on behalf of data accesses<\/string>\n+                        <key>number<\/key>\n+                        <integer>1032<\/integer>\n+                    <\/dict>\n+                    <key>MMU_TABLE_WALK_INSTRUCTION<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Table walk memory requests on behalf of instruction fetches<\/string>\n+                        <key>number<\/key>\n+                        <integer>1031<\/integer>\n+                    <\/dict>\n+                    <key>MMU_VIRTUAL_MEMORY_FAULT_NONSPEC<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Memory accesses that reached retirement that triggered any of the MMU virtual memory faults<\/string>\n+                        <key>number<\/key>\n+                        <integer>1037<\/integer>\n+                    <\/dict>\n+                    <key>RETIRE_UOP<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>128<\/integer>\n+                        <key>description<\/key>\n+                        <string>All retired uops<\/string>\n+                        <key>number<\/key>\n+                        <integer>1<\/integer>\n+                    <\/dict>\n+                    <key>ST_MEMORY_ORDER_VIOLATION_NONSPEC<\/key>\n+                    <dict>\n+                        <key>counters_mask<\/key>\n+                        <integer>224<\/integer>\n+                        <key>description<\/key>\n+                        <string>Retired stores that triggered memory order violations<\/string>\n+                        <key>number<\/key>\n+                        <integer>196<\/integer>\n+                    <\/dict>\n+                    <key>ST_NT_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Store uops that executed with non-temporal hint<\/string>\n+                        <key>number<\/key>\n+                        <integer>1509<\/integer>\n+                    <\/dict>\n+                    <key>ST_UNIT_UOP<\/key>\n+                    <dict>\n+                        <key>description<\/key>\n+                        <string>Uops that flowed through the Store Unit<\/string>\n+                        <key>number<\/key>\n+                        <integer>1447<\/integer>\n+                    <\/dict>\n+                <\/dict>\n+                <key>fixed_counters<\/key>\n+                <integer>3<\/integer>\n+                <key>marketing_name<\/key>\n+                <string>Apple A16<\/string>\n+                <key>power_counters<\/key>\n+                <integer>224<\/integer>\n+            <\/dict>\n+        <\/dict>\n+        <key>version<\/key>\n+        <array>\n+            <integer>1<\/integer>\n+            <integer>0<\/integer>\n+        <\/array>\n+    <\/dict>\n+<\/plist>\n","filename":"jmh-core\/src\/test\/resources\/org.openjdk.jmh.profile.xctrace\/a16.xml","additions":520,"deletions":0,"binary":false,"changes":520,"status":"added"},{"patch":"@@ -0,0 +1,3361 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>name<\/key>\n+\t<string>haswell<\/string>\n+\t<key>system<\/key>\n+\t<dict>\n+\t\t<key>cpu<\/key>\n+\t\t<dict>\n+\t\t\t<key>aliases<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>BRANCH_MISPRED_NONSPEC<\/key>\n+\t\t\t\t<string>BR_MISP_RETIRED.ALL_BRANCHES<\/string>\n+\t\t\t\t<key>CORE_ACTIVE_CYCLE<\/key>\n+\t\t\t\t<string>CPU_CLK_UNHALTED.THREAD<\/string>\n+\t\t\t\t<key>INST_ALL<\/key>\n+\t\t\t\t<string>INST_RETIRED.ANY<\/string>\n+\t\t\t\t<key>INST_BRANCH<\/key>\n+\t\t\t\t<string>BR_INST_RETIRED.ALL_BRANCHES<\/string>\n+\t\t\t\t<key>INST_BRANCH_COND<\/key>\n+\t\t\t\t<string>BR_INST_RETIRED.CONDITIONAL<\/string>\n+\t\t\t\t<key>INST_BRANCH_TAKEN<\/key>\n+\t\t\t\t<string>BR_INST_RETIRED.NEAR_TAKEN<\/string>\n+\t\t\t\t<key>ReferenceCycles<\/key>\n+\t\t\t\t<string>CPU_CLK_UNHALTED.REF_TSC<\/string>\n+\t\t\t<\/dict>\n+\t\t\t<key>architecture<\/key>\n+\t\t\t<string>x86_64<\/string>\n+\t\t\t<key>config_counters<\/key>\n+\t\t\t<integer>120<\/integer>\n+\t\t\t<key>events<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>BACLEARS.ANY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Counts the total number when the front end is resteered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>230<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>31<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.ALL_BRANCHES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired  branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>255<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.ALL_CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired macro-conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>193<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.ALL_DIRECT_JMP<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired macro-unconditional branches excluding calls and indirects<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.ALL_DIRECT_NEAR_CALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired direct near calls<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.ALL_INDIRECT_JUMP_NON_CALL_RET<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired indirect branches excluding calls and returns<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.ALL_INDIRECT_NEAR_RETURN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired indirect return branches.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.NONTAKEN_CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Not taken macro-conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.TAKEN_CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired macro-conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>129<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.TAKEN_DIRECT_JUMP<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired macro-conditional branch instructions excluding calls and indirects<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>130<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.TAKEN_DIRECT_NEAR_CALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired direct near calls<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>144<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.TAKEN_INDIRECT_JUMP_NON_CALL_RET<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired indirect branches excluding calls and returns<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>132<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.TAKEN_INDIRECT_NEAR_CALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired indirect calls<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>160<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_EXEC.TAKEN_INDIRECT_NEAR_RETURN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired indirect branches with return mnemonic<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.ALL_BRANCHES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>All (macro) branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>0<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.ALL_BRANCHES_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>All (macro) branch instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Conditional branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.CONDITIONAL_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Conditional branch instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.FAR_BRANCH<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Far branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_CALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Direct and indirect near call instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_CALL_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Direct and indirect near call instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_CALL_R3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Direct and indirect macro near call instructions retired (captured in ring 3).<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>81<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_CALL_R3_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Direct and indirect macro near call instructions retired (captured in ring 3). (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>81<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_RETURN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Return instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_RETURN_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Return instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_TAKEN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NEAR_TAKEN_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken branch instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_INST_RETIRED.NOT_TAKEN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Not taken branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.ALL_BRANCHES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired mispredicted macro conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>255<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.ALL_CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative and retired mispredicted macro conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>193<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.ALL_INDIRECT_JUMP_NON_CALL_RET<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Mispredicted indirect branches excluding calls and returns<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>196<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.NONTAKEN_CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Not taken speculative and retired mispredicted macro conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.TAKEN_CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired mispredicted macro conditional branches<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>129<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.TAKEN_INDIRECT_JUMP_NON_CALL_RET<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired mispredicted indirect branches excluding calls and returns<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>132<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.TAKEN_INDIRECT_NEAR_CALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired mispredicted indirect calls<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>160<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_EXEC.TAKEN_RETURN_NEAR<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Taken speculative and retired mispredicted indirect branches with return mnemonic<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_RETIRED.ALL_BRANCHES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>All mispredicted macro branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>197<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>0<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_RETIRED.ALL_BRANCHES_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Mispredicted macro branch instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>197<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_RETIRED.CONDITIONAL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Mispredicted conditional branch instructions retired.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>197<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_RETIRED.CONDITIONAL_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Mispredicted conditional branch instructions retired. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>197<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_RETIRED.NEAR_TAKEN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of near branch instructions retired that were mispredicted and taken.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>197<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>BR_MISP_RETIRED.NEAR_TAKEN_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of near branch instructions retired that were mispredicted and taken. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>197<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPL_CYCLES.RING0<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Unhalted core cycles when the thread is in ring 0<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>92<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPL_CYCLES.RING0_TRANS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of intervals between processor halts while thread is in ring 0<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>92<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>343<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPL_CYCLES.RING123<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Unhalted core cycles when thread is in rings 1, 2, or 3<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>92<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPU_CLK_THREAD_UNHALTED.REF_XCLK<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cases when the core is unhalted at 100 Mhz<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>60<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPU_CLK_UNHALTED.REF_TSC<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Reference cycles when the core is not in halt state.<\/string>\n+\t\t\t\t\t<key>fixed_counter<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>3<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPU_CLK_UNHALTED.THREAD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Core cycles when the core is not in halt state.<\/string>\n+\t\t\t\t\t<key>fallback<\/key>\n+\t\t\t\t\t<string>CPU_CLK_UNHALTED.THREAD_P<\/string>\n+\t\t\t\t\t<key>fixed_counter<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CPU_CLK_UNHALTED.THREAD_P<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Thread cycles when thread is not in halt state<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>60<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>0<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CYCLE_ACTIVITY.CYCLES_L1D_PENDING<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with pending L1 cache miss loads.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>163<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>2131<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CYCLE_ACTIVITY.CYCLES_LDM_PENDING<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with pending memory loads.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>163<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>595<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CYCLE_ACTIVITY.CYCLES_NO_EXECUTE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Total execution stalls<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>163<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>1107<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>CYCLE_ACTIVITY.STALLS_LDM_PENDING<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Execution stalls due to memory subsystem.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>163<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>1619<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>6<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.MISS_CAUSES_A_WALK<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load misses in all DTLB levels that cause page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.PDE_CACHE_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>DTLB demand load misses with low part of linear-to-physical address translation missed<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.STLB_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load operations that miss the first DTLB level but hit the second and do not cause page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.STLB_HIT_2M<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load misses that miss the  DTLB and hit the STLB (2M)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.STLB_HIT_4K<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load misses that miss the  DTLB and hit the STLB (4K)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.WALK_COMPLETED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand load Miss in all translation lookaside buffer (TLB) levels causes a page walk that completes of any page size.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand load Miss in all translation lookaside buffer (TLB) levels causes a page walk that completes (2M\/4M).<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.WALK_COMPLETED_4K<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand load Miss in all translation lookaside buffer (TLB) levels causes a page walk that completes (4K).<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_LOAD_MISSES.WALK_DURATION<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when PMH is busy with page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.MISS_CAUSES_A_WALK<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store misses in all DTLB levels that cause page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.PDE_CACHE_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>DTLB store misses with low part of linear-to-physical address translation missed<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.STLB_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store operations that miss the first TLB level but hit the second and do not cause page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.STLB_HIT_2M<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store misses that miss the  DTLB and hit the STLB (2M)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.STLB_HIT_4K<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store misses that miss the  DTLB and hit the STLB (4K)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.WALK_COMPLETED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store misses in all DTLB levels that cause completed page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.WALK_COMPLETED_2M_4M<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store misses in all DTLB levels that cause completed page walks (2M\/4M)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.WALK_COMPLETED_4K<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store miss in all TLB levels causes a page walk that completes. (4K)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>DTLB_STORE_MISSES.WALK_DURATION<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when PMH is busy with page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>73<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>FP_ASSIST.ANY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with any input\/output SSE or FP assist<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>202<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>30<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>FP_ASSIST.SIMD_INPUT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of SIMD FP assists due to input values<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>202<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>FP_ASSIST.SIMD_OUTPUT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of SIMD FP assists due to Output values<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>202<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>FP_ASSIST.X87_INPUT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of X87 assists due to input value.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>202<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>FP_ASSIST.X87_OUTPUT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of X87 assists due to output value.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>202<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times HLE abort was triggered<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED_MISC1<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times an HLE abort was attributed to a Memory condition (See TSX_Memory event for additional details)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED_MISC2<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times the TSX watchdog signaled an HLE abort<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED_MISC3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a disallowed operation caused an HLE abort<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED_MISC4<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times HLE caused a fault<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED_MISC5<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times HLE aborted and was not due to the abort conditions in subevents 3-6<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.ABORTED_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times HLE abort was triggered (PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.COMMIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times HLE commit succeeded<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>HLE_RETIRED.START<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times we entered an HLE region; does not count nested transactions<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>200<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ICACHE.MISSES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.ALL_DSB_CYCLES_4_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles Decode Stream Buffer (DSB) is delivering 4 Uops<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>1107<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>24<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.ALL_DSB_CYCLES_ANY_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles Decode Stream Buffer (DSB) is delivering any Uop<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>24<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.ALL_MITE_CYCLES_4_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles MITE is delivering 4 Uops<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>1107<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.ALL_MITE_CYCLES_ANY_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles MITE is delivering any Uop<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.DSB_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.DSB_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.EMPTY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Instruction Decode Queue (IDQ) empty cycles<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MITE_ALL_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops delivered to Instruction Decode Queue (IDQ) from MITE path<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>60<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MITE_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MITE_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops delivered to Instruction Decode Queue (IDQ) from MITE path<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MS_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when uops are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequenser (MS) is busy<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>48<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MS_DSB_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequenser (MS) is busy<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MS_DSB_OCCUR<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while Microcode Sequenser (MS) is busy<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>343<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MS_DSB_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequenser (MS) is busy<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MS_MITE_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequenser (MS) is busy<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ.MS_UOPS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops delivered to Instruction Decode Queue (IDQ) while Microcode Sequenser (MS) is busy<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>48<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ_UOPS_NOT_DELIVERED.CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops not delivered to Resource Allocation Table (RAT) per thread when backend of the machine is not stalled<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>156<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when 4 or more uops are not delivered to Resource Allocation Table (RAT) when backend of the machine is not stalled<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>156<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>1107<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ_UOPS_NOT_DELIVERED.CYCLES_FE_WAS_OK<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Counts cycles FE delivered 4 uops or Resource Allocation Table (RAT) was stalling FE.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>156<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>467<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_1_UOP_DELIV.CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when 3 or more uops are not delivered to Resource Allocation Table (RAT) when backend of the machine is not stalled<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>156<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>851<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_2_UOP_DELIV.CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with less than 2 uops delivered by the front end.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>156<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>595<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_3_UOP_DELIV.CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with less than 3 uops delivered by the front end.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>156<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ILD_STALL.IQ_FULL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Stall cycles because IQ is full<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>135<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ILD_STALL.LCP<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Stalls caused by changing prefix length of the instruction.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>135<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>INST_RETIRED.ANY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Instructions retired from execution.<\/string>\n+\t\t\t\t\t<key>fallback<\/key>\n+\t\t\t\t\t<string>INST_RETIRED.ANY_P<\/string>\n+\t\t\t\t\t<key>fixed_counter<\/key>\n+\t\t\t\t\t<integer>0<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>INST_RETIRED.ANY_P<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of instructions retired. General Counter   - architectural event<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>192<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>0<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>INST_RETIRED.PREC_DIST<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>192<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>INT_MISC.RECOVERY_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of cycles waiting for the checkpoints in Resource Allocation Table (RAT) to be recovered after Nuke due to all other cases except JEClear (e.g. whenever a ucode assist is needed like SSE exception, memory disambiguation, etc...)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>13<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>3<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB.ITLB_FLUSH<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Flushing of the Instruction TLB (ITLB) pages, includes 4k\/2M\/4M pages.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>174<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.MISS_CAUSES_A_WALK<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Misses at all ITLB levels that cause page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.STLB_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Operations that miss the first ITLB level but hit the second and do not cause any page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.STLB_HIT_2M<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Code misses that miss the  DTLB and hit the STLB (2M)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.STLB_HIT_4K<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Core misses that miss the  DTLB and hit the STLB (4K)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.WALK_COMPLETED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Misses in all ITLB levels that cause completed page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.WALK_COMPLETED_2M_4M<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Code miss in all TLB levels causes a page walk that completes. (2M\/4M)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.WALK_COMPLETED_4K<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Code miss in all TLB levels causes a page walk that completes. (4K)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ITLB_MISSES.WALK_DURATION<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when PMH is busy with page walks<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L1D.REPLACEMENT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L1D data line replacements<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>81<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L1D_PEND_MISS.OCCURENCES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>This event counts the number of L1D misses outstanding, using an edge detect to count transitions.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>72<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>343<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L1D_PEND_MISS.PENDING<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L1D miss oustandings duration in cycles<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>72<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L1D_PEND_MISS.PENDING_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with L1D load Misses outstanding.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>72<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_DEMAND_RQSTS.WB_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Not rejected writebacks that hit L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>39<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>80<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_LINES_IN.ALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache lines filling L2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>241<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>7<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_LINES_IN.E<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache lines in E state filling L2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>241<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_LINES_IN.I<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache lines in I state filling L2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>241<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_LINES_IN.S<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache lines in S state filling L2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>241<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_LINES_OUT.DEMAND_CLEAN<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Clean L2 cache lines evicted by demand<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>242<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>5<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_LINES_OUT.DEMAND_DIRTY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Dirty L2 cache lines evicted by demand<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>242<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>6<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.ALL_CODE_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 code requests<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>228<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.ALL_DEMAND_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand Data Read requests<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>225<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.ALL_DEMAND_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand requests that miss L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>39<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.ALL_DEMAND_REFERENCES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand requests to L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>231<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.ALL_PF<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Requests from L2 hardware prefetchers<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>248<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.ALL_RFO<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>RFO requests to L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>226<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.CODE_RD_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache hits when fetching instructions, code reads.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>68<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.CODE_RD_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache misses when fetching instructions<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.DEMAND_DATA_RD_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand Data Read requests that hit L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.DEMAND_DATA_RD_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand Data Read miss L2, no rejects<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>33<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.L2_PF_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 prefetch requests that hit L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>80<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.L2_PF_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 prefetch requests that miss L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>48<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>All requests that miss L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>63<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.REFERENCES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>All L2 requests<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>255<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.RFO_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>RFO requests that hit L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>66<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_RQSTS.RFO_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>RFO requests that miss L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>34<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.ALL_PF<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 or L3 HW prefetches that access L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.ALL_REQUESTS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Transactions accessing L2 pipe<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.CODE_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 cache accesses when fetching instructions<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.DEMAND_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand Data Read requests that access L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.L1D_WB<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L1D writebacks that access L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.L2_FILL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 fill requests that access L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.L2_WB<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>L2 writebacks that access L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>L2_TRANS.RFO<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>RFO requests that access L2 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>240<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LD_BLOCKS.STORE_FORWARD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cases when loads get true Block-on-Store blocking code preventing store forwarding<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>3<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LD_BLOCKS_PARTIAL.ADDRESS_ALIAS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>False dependencies in MOB when Enhanced Loosenet resolves partial comparison on loosenet check and dependency<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>7<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LOAD_HIT_PRE.HW_PF<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Not software-prefetch load dispatches that hit FB allocated for hardware prefetch<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>76<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LOAD_HIT_PRE.SW_PF<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Not software-prefetch load dispatches that hit FB allocated for software prefetch<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>76<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LOCK_CYCLES.CACHE_LOCK_DURATION<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when L1D is locked<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>99<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LOCK_CYCLES.SPLIT_LOCK_UC_LOCK_DURATION<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when L1 and L2 are locked due to UC or split lock<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>99<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LONGEST_LAT_CACHE.MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Core-originated cacheable demand requests missed L3<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>46<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>LONGEST_LAT_CACHE.REFERENCE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Core-originated cacheable demand requests that refer to L3<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>46<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>79<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MACHINE_CLEARS.MASKMOV<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>This event counts the number of executed Intel AVX masked load operations that refer to an illegal address range with the mask bits set to 0.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>195<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MACHINE_CLEARS.MEMORY_ORDERING<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Counts the number of machine clears due to memory order conflicts.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>195<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MACHINE_CLEARS.SMC<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Self-modifying code (SMC) detected.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>195<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were HitM responses from shared L3.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were HitM responses from shared L3. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were hits in L3 without snoops required.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were hits in L3 without snoops required. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>210<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Data from local DRAM either Snoop not needed or Snoop Miss (RspI)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>211<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.HIT_LFB<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were load uops missed L1 but hit FB due to preceding miss to the same cache line with data not ready.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.HIT_LFB_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were load uops missed L1 but hit FB due to preceding miss to the same cache line with data not ready. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L1_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops with L1 cache hits as data sources.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L1_HIT_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops with L1 cache hits as data sources. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L1_MISS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops misses in L1 cache as data sources. Uses PEBS.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L2_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops with L2 cache hits as data sources.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L2_HIT_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops with L2 cache hits as data sources. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L2_MISS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Miss in mid-level (L2) cache. Excludes Unknown data-source.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L2_MISS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops with L2 cache misses as data sources. Uses PEBS.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L3_HIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retired load uops which data sources were data hits in L3 without snoops required.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_LOAD_UOPS_RETIRED.L3_HIT_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Miss in last-level (L3) cache. Excludes Unknown data-source. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>209<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_128<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 128<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_16<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 16<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_256<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 256<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_32<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 32<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_4<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 4<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_512<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 512<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_64<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 64<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_TRANS_RETIRED.LOAD_LATENCY_GT_8<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>counters_mask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Loads with latency value being above 8<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>205<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.ALL_LOADS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load uops retired to architected path with filter on bits 0 and 1 applied.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>129<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.ALL_LOADS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load uops retired to architected path with filter on bits 0 and 1 applied. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>129<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.ALL_STORES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store uops retired to architected path with filter on bits 0 and 1 applied.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>130<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.ALL_STORES_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store uops retired to architected path with filter on bits 0 and 1 applied. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>130<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.LOCK_LOADS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load uops with locked access retired to architected path.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>33<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.LOCK_LOADS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load uops with locked access retired to architected path. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>33<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.SPLIT_LOADS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Line-splitted load uops retired to architected path.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.SPLIT_LOADS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Line-splitted load uops retired to architected path. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.SPLIT_STORES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Line-splitted store uops retired to architected path.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>66<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.SPLIT_STORES_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Line-splitted store uops retired to architected path. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>66<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.STLB_MISS_LOADS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load uops with true STLB miss retired to architected path.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>17<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.STLB_MISS_LOADS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Load uops with true STLB miss retired to architected path. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>17<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.STLB_MISS_STORES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store uops with true STLB miss retired to architected path.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>18<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MEM_UOPS_RETIRED.STLB_MISS_STORES_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Store uops true STLB miss retired to architected path. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>208<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>18<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MISALIGN_MEM_REF.LOADS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative cache line split load uops dispatched to L1 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>5<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MISALIGN_MEM_REF.STORES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Speculative cache line split STA uops dispatched to L1 cache<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>5<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MOVE_ELIMINATION.INT_ELIMINATED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of integer Move Elimination candidate uops that were eliminated.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>88<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MOVE_ELIMINATION.INT_NOT_ELIMINATED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of integer Move Elimination candidate uops that were not eliminated.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>88<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MOVE_ELIMINATION.SIMD_ELIMINATED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of SIMD Move Elimination candidate uops that were eliminated.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>88<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>MOVE_ELIMINATION.SIMD_NOT_ELIMINATED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of SIMD Move Elimination candidate uops that were not eliminated.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>88<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS.ALL_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand and prefetch data reads<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>176<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS.DEMAND_CODE_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cacheable and noncachaeble code read requests<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>176<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS.DEMAND_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand Data Read requests sent to uncore<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>176<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS.DEMAND_RFO<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Demand RFO requests including regular RFOs, locks, ItoM<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>176<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Offcore outstanding cacheable Core Data Read transactions in SuperQueue (SQ), queue to uncore<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when offcore outstanding cacheable Core Data Read transactions are present in SuperQueue (SQ), queue to uncore<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when offcore outstanding Demand Data Read transactions are present in SuperQueue (SQ), queue to uncore<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>339<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS_OUTSTANDING.DEMAND_CODE_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Offcore outstanding code reads transactions in SuperQueue (SQ), queue to uncore, every cycle<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Offcore outstanding Demand Data Read transactions in uncore queue.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OFFCORE_REQUESTS_OUTSTANDING.DEMAND_RFO<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Offcore outstanding RFO store transactions in SuperQueue (SQ), queue to uncore<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>96<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OTHER_ASSISTS.ANY_WB_ASSIST<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times any microcode assist is invoked by HW upon uop writeback.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>193<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OTHER_ASSISTS.AVX_TO_SSE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of transitions from AVX-256 to legacy SSE when penalty applicable.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>193<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>OTHER_ASSISTS.SSE_TO_AVX<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of transitions from SSE to AVX-256 when penalty applicable.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>193<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.DTLB_L1<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of DTLB page walker hits in the L1+FB<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>17<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.DTLB_L2<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of DTLB page walker hits in the L2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>18<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.DTLB_L3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of DTLB page walker hits in the L3 + XSNP<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>20<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.DTLB_MEMORY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of DTLB page walker hits in Memory<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>24<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.IA32_ITLB_MEMORY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of ITLB page walker hits in Memory<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>40<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.ITLB_L1<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of ITLB page walker hits in the L1+FB<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>33<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.ITLB_L2<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of ITLB page walker hits in the L2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>34<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>PAGE_WALKER_LOADS.ITLB_L3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of ITLB page walker hits in the L3 + XSNP<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>188<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RESOURCE_STALLS.ANY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Resource-related stall cycles<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>162<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RESOURCE_STALLS.ROB<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles stalled due to re-order buffer full.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>162<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RESOURCE_STALLS.RS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles stalled due to no eligible RS entry available.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>162<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RESOURCE_STALLS.SB<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles stalled due to no store buffers available. (not including draining form sync).<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>162<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>ROB_MISC_EVENTS.LBR_INSERTS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Count cases of saving new LBR<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>204<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RS_EVENTS.EMPTY_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when Reservation Station (RS) is empty for the thread<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>94<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times RTM abort was triggered <\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED_MISC1<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times an RTM abort was attributed to a Memory condition (See TSX_Memory event for additional details)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED_MISC2<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times the TSX watchdog signaled an RTM abort<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED_MISC3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a disallowed operation caused an RTM abort<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED_MISC4<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a RTM caused a fault<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED_MISC5<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times RTM aborted and was not due to the abort conditions in subevents 3-6<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.ABORTED_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times RTM abort was triggered (PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.COMMIT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times RTM commit succeeded<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>RTM_RETIRED.START<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times we entered an RTM region; does not count nested transactions<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>201<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TLB_FLUSH.DTLB_THREAD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>DTLB flush attempts of the thread-specific entries<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>189<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TLB_FLUSH.STLB_ANY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>STLB flush attempts<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>189<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_EXEC.MISC1<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Unfriendly TSX abort triggered by  a flowmarker<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>93<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_EXEC.MISC2<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Unfriendly TSX abort triggered by  a vzeroupper instruction<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>93<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_EXEC.MISC3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Unfriendly TSX abort triggered by a nest count that is too deep<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>93<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_EXEC.MISC4<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>RTM region detected inside HLE<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>93<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_CAPACITY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a TSX Abort was triggered due to an evicted line caused by a transaction overflow<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_CONFLICT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a TSX line had a cache conflict<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_HLE_ELISION_BUFFER_FULL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times we could not allocate Lock Buffer<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_HLE_ELISION_BUFFER_MISMATCH<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a TSX Abort was triggered due to release\/commit but data and address mismatch<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_HLE_ELISION_BUFFER_NOT_EMPTY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a TSX Abort was triggered due to commit but Lock Buffer not empty<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a TSX Abort was triggered due to attempting an unsupported alignment from Lock Buffer<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>TX_MEM.ABORT_HLE_STORE_TO_ELIDED_LOCK<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of times a TSX Abort was triggered due to a non-release\/commit store to lock<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED.CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of uops executed on the core.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>177<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED.STALL_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Counts number of cycles no uops were dispatched to be executed on this thread.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>177<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>467<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED.THREAD<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Counts the number of uops to be executed per-thread each cycle.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>177<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_0<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 0<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_0_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are exectuted in port 0<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_1<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 1<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_1_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are exectuted in port 1<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_2<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_2_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are dispatched to port 2<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>4<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_3<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 3<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_3_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are dispatched to port 3<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_4<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 4<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_4_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are exectuted in port 4<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_5<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 5<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_5_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are exectuted in port 5<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_6<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 6<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_6_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are exectuted in port 6<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_7<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per thread when uops are executed in port 7<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_EXECUTED_PORT.PORT_7_CORE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles per core when uops are dispatched to port 7<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>161<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>115<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_ISSUED.ANY<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Uops that Resource Allocation Table (RAT) issues to Reservation Station (RS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_ISSUED.CORE_STALL_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when Resource Allocation Table (RAT) does not issue Uops to Reservation Station (RS) for all threads<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>499<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_ISSUED.FLAGS_MERGE<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of flags-merge uops being allocated. Such uops considered perf sensitive; added by GSR u-arch.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_ISSUED.SINGLE_MUL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of Multiply packed\/scalar single precision uops allocated<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_ISSUED.SLOW_LEA<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Number of slow LEA uops being allocated. A uop is generally considered SlowLea if it has 3 sources (e.g. 2 sources + immediate) regardless if as a result of LEA instruction or not.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_ISSUED.STALL_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles when Resource Allocation Table (RAT) does not issue Uops to Reservation Station (RS) for the thread<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>14<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>467<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.ALL<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Actually retired uops.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.ALL_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Actually retired uops. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.CORE_STALL_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles without actually retired uops.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>499<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.RETIRE_SLOTS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retirement slots used.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.RETIRE_SLOTS_PS<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Retirement slots used. (Precise Event - PEBS)<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>2<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.STALL_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles without actually retired uops.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>467<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<key>UOPS_RETIRED.TOTAL_CYCLES<\/key>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>description<\/key>\n+\t\t\t\t\t<string>Cycles with less than 10 actually retired uops.<\/string>\n+\t\t\t\t\t<key>number<\/key>\n+\t\t\t\t\t<integer>194<\/integer>\n+\t\t\t\t\t<key>other<\/key>\n+\t\t\t\t\t<integer>4307<\/integer>\n+\t\t\t\t\t<key>umask<\/key>\n+\t\t\t\t\t<integer>1<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/dict>\n+\t\t\t<key>fixed_counters<\/key>\n+\t\t\t<integer>7<\/integer>\n+\t\t\t<key>marketing_name<\/key>\n+\t\t\t<string>Intel Haswell<\/string>\n+\t\t<\/dict>\n+\t<\/dict>\n+\t<key>version<\/key>\n+\t<array>\n+\t\t<integer>1<\/integer>\n+\t\t<integer>0<\/integer>\n+\t<\/array>\n+<\/dict>\n+<\/plist>\n","filename":"jmh-core\/src\/test\/resources\/org.openjdk.jmh.profile.xctrace\/haswell.xml","additions":3361,"deletions":0,"binary":false,"changes":3361,"status":"added"}]}