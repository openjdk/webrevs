{"files":[{"patch":"@@ -70,7 +70,37 @@\n-                <configuration>\n-                    <argLine>${jmh.testjvmargs}<\/argLine>\n-                    <forkCount>1C<\/forkCount>\n-                    <!-- Integration tests sometimes set system properties, do not let them leak to other tests -->\n-                    <reuseForks>false<\/reuseForks>\n-                    <redirectTestOutputToFile>true<\/redirectTestOutputToFile>\n-                <\/configuration>\n+                <executions>\n+                    <execution>\n+                        <id>default-test<\/id>\n+                        <phase>test<\/phase>\n+                        <goals>\n+                            <goal>test<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <argLine>${jmh.testjvmargs}<\/argLine>\n+                            <forkCount>1C<\/forkCount>\n+                            <!-- Integration tests sometimes set system properties, do not let them leak to other tests -->\n+                            <reuseForks>false<\/reuseForks>\n+                            <redirectTestOutputToFile>true<\/redirectTestOutputToFile>\n+                            <excludes>\n+                                <!-- xctrace tests interfere with each other when executed concurrently -->\n+                                <exclude>**\/profilers\/XCTrace*ProfilerTest.java<\/exclude>\n+                            <\/excludes>\n+                        <\/configuration>\n+                    <\/execution>\n+                    <execution>\n+                        <!-- execution that, unlike default-tests, runs all tests serially -->\n+                        <id>serial-tests<\/id>\n+                        <phase>test<\/phase>\n+                        <goals>\n+                            <goal>test<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <argLine>${jmh.testjvmargs}<\/argLine>\n+                            <forkCount>1<\/forkCount>\n+                            <redirectTestOutputToFile>true<\/redirectTestOutputToFile>\n+                            <includes>\n+                                <!-- xctrace tests interfere with each other when executed concurrently -->\n+                                <include>**\/profilers\/XCTrace*ProfilerTest.java<\/include>\n+                            <\/includes>\n+                        <\/configuration>\n+                    <\/execution>\n+                <\/executions>\n","filename":"jmh-core-it\/pom.xml","additions":37,"deletions":7,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -0,0 +1,211 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.it.profilers;\n+\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+import org.openjdk.jmh.it.Fixtures;\n+import org.openjdk.jmh.profile.ProfilerException;\n+import org.openjdk.jmh.profile.XCTraceNormProfiler;\n+import org.openjdk.jmh.results.Result;\n+import org.openjdk.jmh.results.RunResult;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+import org.openjdk.jmh.util.FileUtils;\n+import org.openjdk.jmh.util.Utils;\n+\n+import java.io.File;\n+import java.util.*;\n+\n+public class XCTraceNormProfilerTest extends AbstractAsmProfilerTest {\n+    private static boolean xctraceExists() {\n+        Collection<String> out = Utils.tryWith(\"xcode-select\", \"-p\");\n+        if (!out.isEmpty()) {\n+            return false;\n+        }\n+        Optional<String> path = Utils.runWith(\"xcode-select\", \"-p\").stream()\n+                .flatMap(line -> Arrays.stream(line.split(\"\\n\")))\n+                .findFirst();\n+        if (!path.isPresent()) {\n+            return false;\n+        }\n+        File xctraceExe = new File(path.get(), \"usr\/bin\/xctrace\");\n+        if (!xctraceExe.exists()) {\n+            return false;\n+        }\n+\n+        Collection<String> versionOut = Utils.runWith(xctraceExe.getAbsolutePath(), \"version\");\n+        Optional<String> versionStr = versionOut.stream().flatMap(l -> Arrays.stream(l.split(\"\\n\")))\n+                .filter(l -> l.contains(\"xctrace version \"))\n+                .findAny();\n+        if (!versionStr.isPresent()) {\n+            return false;\n+        }\n+        try {\n+            int version = Integer.parseInt(versionStr.get()\n+                    .split(\"version \")[1]\n+                    .split(\" \")[0]\n+                    .split(\"\\\\.\")[0]);\n+            return version >= 13;\n+        } catch (NumberFormatException e) {\n+            return false;\n+        }\n+    }\n+\n+    private static boolean isInsideVM() {\n+        \/\/ Alternatively, we can check if CPC subsystem is up and running (kern.cpc.secure)\n+        String vmmPresent = Utils.runWith(\"sysctl\", \"-n\", \"kern.hv_vmm_present\")\n+                .iterator()\n+                .next()\n+                .split(\"\\n\")[0];\n+        \/\/ It's either 0 or 1 when sysctl property exists, some error string otherwise\n+        return vmmPresent.equals(\"1\");\n+    }\n+\n+    private static void skipIfProfilerNotSupport() {\n+        Assume.assumeTrue(xctraceExists());\n+    }\n+\n+    private static void skipIfRunningInsideVirtualMachine() {\n+        Assume.assumeFalse(isInsideVM());\n+    }\n+\n+    private void checkProfiling(int forks) throws RunnerException {\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class)\n+                .forks(forks)\n+                .build();\n+\n+        RunResult rr = new Runner(opts).runSingle();\n+\n+        Map<String, Result> sr = rr.getSecondaryResults();\n+        double instructions = checkedGetAny(sr, \"Instructions\",\n+                \"FIXED_INSTRUCTIONS\", \"INST_ALL\", \"INST_RETIRED.ANY\", \"INST_RETIRED.ANY_P\");\n+        double cycles = checkedGetAny(sr, \"Cycles\", \"FIXED_CYCLES\",\n+                \"CORE_ACTIVE_CYCLE\", \"CPU_CLK_UNHALTED.THREAD\", \"CPU_CLK_UNHALTED.THREAD_P\");\n+        double branches = checkedGetAny(sr, \"INST_BRANCH\", \"BR_INST_RETIRED.ALL_BRANCHES\",\n+                \"BR_INST_RETIRED.ALL_BRANCHES_PEBS\");\n+        double missedBranches = checkedGetAny(sr, \"BRANCH_MISPRED_NONSPEC\", \"BR_MISP_RETIRED.ALL_BRANCHES\",\n+                \"BR_MISP_RETIRED.ALL_BRANCHES_PS\");\n+\n+        Assert.assertNotEquals(0D, instructions, 0D);\n+        Assert.assertNotEquals(0D, cycles, 0D);\n+        Assert.assertNotEquals(0D, branches, 0D);\n+        Assert.assertNotEquals(0D, missedBranches, 0D);\n+\n+        double cpi = ProfilerTestUtils.checkedGet(sr, \"CPI\").getScore();\n+        double ipc = ProfilerTestUtils.checkedGet(sr, \"IPC\").getScore();\n+        double branchMissRatio = ProfilerTestUtils.checkedGet(sr, \"Branch miss ratio\").getScore();\n+\n+        Assert.assertNotEquals(0D, ipc, 0D);\n+        Assert.assertNotEquals(0D, cpi, 0D);\n+        Assert.assertNotEquals(0D, branchMissRatio, 0D);\n+    }\n+\n+    @Test\n+    public void testDefaultArguments() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        checkProfiling(1);\n+    }\n+\n+    @Test\n+    public void testFailWithNonExistentTemplate() {\n+        skipIfProfilerNotSupport();\n+\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class, \"template=NON_EXISTENT_TEMPLATE\")\n+                .forks(1)\n+                .build();\n+        Assert.assertThrows(\"No results returned\", RunnerException.class, () -> new Runner(opts).runSingle());\n+    }\n+\n+    @Test\n+    public void testUnsupportedTemplate() {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class, \"template=CPU Profiler\")\n+                .forks(1)\n+                .build();\n+        Assert.assertThrows(\"Table \\\"counters-profile\\\" was not found in the trace results.\",\n+                IllegalStateException.class, () -> new Runner(opts).runSingle());\n+    }\n+\n+    @Test\n+    public void testUseCustomTemplate() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        RunResult result;\n+        File templateFile = FileUtils.extractFromResource(\"\/default.instruments.template.xml\");\n+        Options opts = new OptionsBuilder()\n+                .include(Fixtures.getTestMask(this.getClass()))\n+                .addProfiler(XCTraceNormProfiler.class, \"template=\" + templateFile.getAbsolutePath())\n+                .forks(1)\n+                .build();\n+        try {\n+            result = new Runner(opts).runSingle();\n+        } finally {\n+            templateFile.delete();\n+        }\n+\n+        Map<String, Result> sr = result.getSecondaryResults();\n+        double instructions = checkedGetAny(sr, \"Instructions\",\n+                \"FIXED_INSTRUCTIONS\", \"INST_ALL\", \"INST_RETIRED.ANY\", \"INST_RETIRED.ANY_P\");\n+        Assert.assertNotEquals(0D, instructions, 0D);\n+    }\n+\n+    @Test\n+    public void testMultipleForks() throws Exception {\n+        skipIfProfilerNotSupport();\n+        skipIfRunningInsideVirtualMachine();\n+\n+        checkProfiling(2);\n+    }\n+\n+    @Test\n+    public void testConstructorThrowsWhenXCTraceDoesNotExist() {\n+        Assume.assumeFalse(xctraceExists());\n+        Assert.assertThrows(ProfilerException.class, () -> new XCTraceNormProfiler(\"\"));\n+    }\n+\n+    private static double checkedGetAny(Map<String, Result> results, String... keys) {\n+        for (String key : keys) {\n+            Result value = results.get(key);\n+            if (value != null) return value.getScore();\n+        }\n+        throw new IllegalStateException(\n+                \"Results does not include any of these keys: \" + String.join(\", \", keys));\n+    }\n+}\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/XCTraceNormProfilerTest.java","additions":211,"deletions":0,"binary":false,"changes":211,"status":"added"},{"patch":"@@ -116,0 +116,1 @@\n+                                <exclude>src\/main\/resources\/default.instruments.template.xml<\/exclude>\n","filename":"jmh-core\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -180,0 +180,1 @@\n+        BUILT_IN.put(\"xctracenorm\", XCTraceNormProfiler.class);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/ProfilerFactory.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,407 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.profile;\n+\n+import joptsimple.OptionParser;\n+import joptsimple.OptionSet;\n+import joptsimple.OptionSpec;\n+import org.openjdk.jmh.infra.BenchmarkParams;\n+import org.openjdk.jmh.results.*;\n+import org.openjdk.jmh.util.FileUtils;\n+import org.openjdk.jmh.util.TempFile;\n+\n+import java.io.*;\n+import java.nio.file.Path;\n+import java.util.*;\n+\n+\/**\n+ * macOS perfnorm profiler based on xctrace utility shipped with Xcode Instruments.\n+ * <p>\n+ * The profiling process consists of several steps:\n+ * 1) launching a program that needs to be profiled using `xctrace record` command; in case of success,\n+ * the output of this step is a \"trace-file\", which is in fact a directory containing multiple files\n+ * representing the recorded trace, the trace may contain multiple resulting tables, depending on the template;\n+ * 2) inspecting a recorded trace to check if it contains a table supported by the profiler; this information\n+ * could be obtained from the trace's table of contents (`xctrace export --toc`);\n+ * 3) extracting the table with profiling results from the trace file using xctrace export and parsing it\n+ * to extract individual samples.\n+ * <p>\n+ * `xctrace export` command extracts data only in XML format, thus both the table of contents and the table\n+ * with profiling results need to be parsed as XML documents.\n+ * <p>\n+ * This profiler currently supports only one table type: counters-profile.\n+ * Such tables generated by the CPU Counters instrument performing sampling either by\n+ * timer interrupts, or interrupts generated by a PMU counter, depending on particular configuration.\n+ * <p>\n+ * Tracing configuration, or template, is required to perform a recording.\n+ * It is a file that could be configured and saved using Instruments application.\n+ * <p>\n+ * CPU Counters template has no default parameters and could only be configured in the Instruments app UI.\n+ * <p>\n+ * To provide a default behavior (that does not require a user-configured template) and make profilers use a bit more\n+ * convenient, XCTraceNormProfiler uses a preconfigured Instruments template ({@code \/default.instruments.template.xml})\n+ * that is configured to sample some PMU counters on timer interrupts.\n+ * <p>\n+ *\/\n+public class XCTraceNormProfiler implements ExternalProfiler {\n+    \/\/ https:\/\/developer.apple.com\/documentation\/xcode-release-notes\/xcode-13-release-notes#Instruments\n+    \/\/ Older versions support CPU Counters in some way, but are lacking handy \"counters-profile\" table.\n+    private static final int XCTRACE_VERSION_WITH_COUNTERS_PROFILE_TABLE = 13;\n+    \/\/ Currently, only counters-profile table is supported\n+    private static final XCTraceTableHandler.ProfilingTableType SUPPORTED_TABLE_TYPE =\n+            XCTraceTableHandler.ProfilingTableType.COUNTERS_PROFILE;\n+\n+    private static final String[] CYCLES_EVENT_NAMES = new String[]{\n+            \"CORE_ACTIVE_CYCLE\", \"Cycles\", \"FIXED_CYCLES\", \"CPU_CLK_UNHALTED.THREAD\", \"CPU_CLK_UNHALTED.THREAD_P\"\n+    };\n+    private static final String[] INSTRUCTIONS_EVENT_NAMES = new String[]{\n+            \"INST_ALL\", \"Instructions\", \"FIXED_INSTRUCTIONS\", \"INST_RETIRED.ANY\", \"INST_RETIRED.ANY_P\"\n+    };\n+    private static final String[] BRANCH_EVENT_NAMES = new String[]{\n+            \"INST_BRANCH\", \"BR_INST_RETIRED.ALL_BRANCHES\", \"BR_INST_RETIRED.ALL_BRANCHES_PEBS\"\n+    };\n+    private static final String[] BRANCH_MISS_EVENT_NAMES = new String[]{\n+            \"BRANCH_MISPRED_NONSPEC\", \"BR_MISP_RETIRED.ALL_BRANCHES\", \"BR_MISP_RETIRED.ALL_BRANCHES_PS\"\n+    };\n+\n+    private final String xctracePath;\n+    private final String tracingTemplate;\n+    private final Path temporaryDirectory;\n+    private final TempFile outputFile;\n+\n+    private final long delayMs;\n+    private final long lengthMs;\n+    private final boolean shouldFixStartTime;\n+\n+    public XCTraceNormProfiler(String initLine) throws ProfilerException {\n+        OptionParser parser = new OptionParser();\n+        parser.formatHelpWith(new ProfilerOptionFormatter(XCTraceNormProfiler.class.getName()));\n+\n+        OptionSpec<String> templateOpt = parser.accepts(\"template\", \"Name of or path to Instruments template. \" +\n+                        \"Use `xctrace list templates` to view available templates. \" +\n+                        \"Only templates with \\\"CPU Counters\\\" instrument are supported at the moment.\")\n+                .withOptionalArg().ofType(String.class);\n+        OptionSpec<Integer> optDelay = parser.accepts(\"delay\",\n+                        \"Delay collection for a given time, in milliseconds; -1 to detect automatically.\")\n+                .withRequiredArg().ofType(Integer.class).describedAs(\"ms\").defaultsTo(-1);\n+        OptionSpec<Integer> optLength = parser.accepts(\"length\",\n+                        \"Do the collection for a given time, in milliseconds; -1 to detect automatically.\")\n+                .withRequiredArg().ofType(Integer.class).describedAs(\"ms\").defaultsTo(-1);\n+        OptionSpec<Boolean> correctOpt = parser.accepts(\"fixStartTime\",\n+                        \"Fix the start time by the time it took to launch.\")\n+                .withRequiredArg().ofType(Boolean.class).defaultsTo(true);\n+\n+        OptionSet options = ProfilerUtils.parseInitLine(initLine, parser);\n+\n+        delayMs = options.valueOf(optDelay);\n+        lengthMs = options.valueOf(optLength);\n+        shouldFixStartTime = options.valueOf(correctOpt);\n+\n+        xctracePath = XCTraceSupport.getXCTracePath(XCTRACE_VERSION_WITH_COUNTERS_PROFILE_TABLE);\n+        if (options.hasArgument(templateOpt)) {\n+            tracingTemplate = options.valueOf(templateOpt);\n+        } else {\n+            tracingTemplate = unpackDefaultTemplate().getAbsolutePath();\n+        }\n+\n+        temporaryDirectory = XCTraceSupport.createTemporaryDirectoryName();\n+        try {\n+            outputFile = FileUtils.weakTempFile(\"xctrace-out.xml\");\n+        } catch (IOException e) {\n+            throw new ProfilerException(e);\n+        }\n+    }\n+\n+    private static File unpackDefaultTemplate() throws ProfilerException {\n+        try {\n+            return FileUtils.extractFromResource(\"\/default.instruments.template.xml\");\n+        } catch (IOException e) {\n+            throw new ProfilerException(e);\n+        }\n+    }\n+\n+    private static XCTraceTableHandler.XCTraceTableDesc findTableDescription(XCTraceTableOfContentsHandler tocHandler) {\n+        XCTraceTableHandler.XCTraceTableDesc tableDesc = tocHandler.getSupportedTables()\n+                .stream()\n+                .filter(t -> t.getTableType() == SUPPORTED_TABLE_TYPE)\n+                .findFirst()\n+                .orElseThrow(() -> new IllegalStateException(\"Table \\\"\" + SUPPORTED_TABLE_TYPE.tableName +\n+                        \"\\\" was not found in the trace results.\"));\n+        if (tableDesc.getPmcEvents().isEmpty() && tableDesc.getTriggerType() == XCTraceTableHandler.TriggerType.TIME) {\n+            throw new IllegalStateException(\"Results does not contain any events.\");\n+        }\n+        return tableDesc;\n+    }\n+\n+    @Override\n+    public Collection<String> addJVMInvokeOptions(BenchmarkParams params) {\n+        return XCTraceSupport.recordCommandPrefix(xctracePath, temporaryDirectory.toAbsolutePath().toString(),\n+                tracingTemplate);\n+    }\n+\n+    @Override\n+    public Collection<String> addJVMOptions(BenchmarkParams params) {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public void beforeTrial(BenchmarkParams benchmarkParams) {\n+        if (!temporaryDirectory.toFile().isDirectory() && !temporaryDirectory.toFile().mkdirs()) {\n+            throw new IllegalStateException();\n+        }\n+    }\n+\n+    @Override\n+    public Collection<? extends Result> afterTrial(BenchmarkResult br, long pid, File stdOut, File stdErr) {\n+        try {\n+            return processResults(br);\n+        } finally {\n+            XCTraceSupport.removeDirectory(temporaryDirectory);\n+        }\n+    }\n+\n+    private Collection<? extends Result> processResults(BenchmarkResult br) {\n+        BenchmarkResultMetaData md = br.getMetadata();\n+        if (md == null) {\n+            return Collections.emptyList();\n+        }\n+        long measurementsDurationMs = md.getStopTime() - md.getMeasurementTime();\n+        if (measurementsDurationMs == 0L) {\n+            return Collections.emptyList();\n+        }\n+        double opsThroughput = md.getMeasurementOps() \/ (double) measurementsDurationMs;\n+\n+        \/\/ Find the resulting file and extract metadata from it\n+        Path traceFile = XCTraceSupport.findTraceFile(temporaryDirectory);\n+        XCTraceSupport.exportTableOfContents(xctracePath, traceFile.toAbsolutePath().toString(),\n+                outputFile.getAbsolutePath());\n+\n+        XCTraceTableOfContentsHandler tocHandler = new XCTraceTableOfContentsHandler();\n+        tocHandler.parse(outputFile.file());\n+        \/\/ Get info about a table with profiling results\n+        XCTraceTableHandler.XCTraceTableDesc tableDesc = findTableDescription(tocHandler);\n+        \/\/ Extract profiling results\n+        XCTraceSupport.exportTable(xctracePath, traceFile.toAbsolutePath().toString(), outputFile.getAbsolutePath(),\n+                SUPPORTED_TABLE_TYPE);\n+\n+        \/\/ Please refer to XCTraceAsmProfiler::readEvents for detailed explanation,\n+        \/\/ but briefly, ProfilerUtils::measurementDelayMs uses the time when a fork was started,\n+        \/\/ and it's not the actual start time.\n+        \/\/ The actual start time is the time xctrace was launched (tocHandler.getRecordStartMs),\n+        \/\/ and we're correcting measurement delay by the difference between these two timestamps.\n+        long timeCorrectionMs = 0;\n+        if (shouldFixStartTime) {\n+            timeCorrectionMs = tocHandler.getRecordStartMs() - md.getStartTime();\n+        }\n+        long skipMs = delayMs;\n+        if (skipMs == -1L) {\n+            skipMs = ProfilerUtils.measurementDelayMs(br);\n+        }\n+        skipMs -= timeCorrectionMs;\n+        long durationMs = lengthMs;\n+        if (durationMs == -1L) {\n+            durationMs = ProfilerUtils.measuredTimeMs(br);\n+        }\n+\n+        long skipNs = skipMs * 1_000_000;\n+        long durationNs = durationMs * 1_000_000;\n+\n+        AggregatedEvents aggregator = new AggregatedEvents(tableDesc);\n+        new XCTraceTableProfileHandler(SUPPORTED_TABLE_TYPE, sample -> {\n+            if (sample.getTimeFromStartNs() <= skipNs || sample.getTimeFromStartNs() > skipNs + durationNs) {\n+                return;\n+            }\n+\n+            aggregator.add(sample);\n+        }).parse(outputFile.file());\n+\n+        if (aggregator.getEventsCount() == 0) {\n+            return Collections.emptyList();\n+        }\n+\n+        Collection<Result<?>> results = new ArrayList<>();\n+        computeAggregates(results, aggregator);\n+        aggregator.normalizeByThroughput(opsThroughput);\n+\n+        for (int i = 0; i < tableDesc.getPmcEvents().size(); i++) {\n+            String event = tableDesc.getPmcEvents().get(i);\n+            results.add(new ScalarResult(event, aggregator.getEventValues()[i],\n+                    \"#\/op\", AggregationPolicy.AVG));\n+        }\n+        if (tableDesc.getTriggerType() == XCTraceTableHandler.TriggerType.PMI) {\n+            results.add(new ScalarResult(tableDesc.triggerEvent(),\n+                    aggregator.getEventValues()[aggregator.getEventValues().length - 1],\n+                    \"#\/op\", AggregationPolicy.AVG));\n+        }\n+        return results;\n+    }\n+\n+    private void computeAggregates(Collection<Result<?>> results, AggregatedEvents aggregator) {\n+        computeCommonMetrics(results, aggregator);\n+\n+        if (System.getProperty(\"os.arch\").equals(\"aarch64\")) {\n+            computeAppleSiliconArm64InstDensityMetrics(results, aggregator);\n+        }\n+    }\n+\n+    private static void computeCommonMetrics(Collection<Result<?>> results, AggregatedEvents aggregator) {\n+        CounterValue cycles = aggregator.getAnyOfOrNull(CYCLES_EVENT_NAMES);\n+        CounterValue insts = aggregator.getAnyOfOrNull(INSTRUCTIONS_EVENT_NAMES);\n+\n+        if (cycles != null && cycles.getValue() != 0D && insts != null && insts.getValue() != 0D) {\n+            results.add(new ScalarResult(\"CPI\", cycles.getValue() \/ insts.getValue(),\n+                    \"clks\/insn\", AggregationPolicy.AVG));\n+            results.add(new ScalarResult(\"IPC\", insts.getValue() \/ cycles.getValue(),\n+                    \"insns\/clk\", AggregationPolicy.AVG));\n+        }\n+\n+        CounterValue branches = aggregator.getAnyOfOrNull(BRANCH_EVENT_NAMES);\n+        CounterValue missedBranches = aggregator.getAnyOfOrNull(BRANCH_MISS_EVENT_NAMES);\n+        if (branches != null && branches.getValue() != 0D && missedBranches != null) {\n+            results.add(new ScalarResult(\"Branch miss ratio\", missedBranches.getValue() \/ branches.getValue(),\n+                    \"miss\/brs\", AggregationPolicy.AVG));\n+        }\n+    }\n+\n+    \/\/ Compute instructions density metrics (defined in Apple Silicon CPU Optimization Guide,\n+    \/\/ https:\/\/developer.apple.com\/documentation\/apple-silicon\/cpu-optimization-guide).\n+    private static void computeAppleSiliconArm64InstDensityMetrics(Collection<Result<?>> results,\n+                                                                   AggregatedEvents aggregator) {\n+        CounterValue insts = aggregator.getAnyOfOrNull(INSTRUCTIONS_EVENT_NAMES);\n+        if (insts == null) {\n+            return;\n+        }\n+        for (String eventName : aggregator.getEventNames()) {\n+            if (!eventName.startsWith(\"INST_\") || eventName.equals(\"INST_ALL\")) {\n+                continue;\n+            }\n+            Double value = aggregator.getCountOrNull(eventName);\n+            if (value == null || value == 0D) {\n+                continue;\n+            }\n+\n+            results.add(new ScalarResult(eventName + \" density (of insns)\", value \/ insts.getValue(),\n+                    \"#\/insn\", AggregationPolicy.AVG));\n+        }\n+    }\n+\n+    @Override\n+    public boolean allowPrintOut() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean allowPrintErr() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"macOS xctrace (Instruments) PMU counter statistics, normalized by operation count\";\n+    }\n+\n+    private static class AggregatedEvents {\n+        private final List<String> eventNames;\n+        private final double[] eventValues;\n+        private long eventsCount = 0;\n+\n+        private long minTimestampMs = Long.MAX_VALUE;\n+        private long maxTimestampMs = Long.MIN_VALUE;\n+\n+        AggregatedEvents(XCTraceTableHandler.XCTraceTableDesc tableDesc) {\n+            List<String> names = new ArrayList<>(tableDesc.getPmcEvents());\n+            names.add(tableDesc.triggerEvent());\n+            eventNames = Collections.unmodifiableList(names);\n+            eventValues = new double[getEventNames().size()];\n+        }\n+\n+        void add(XCTraceTableProfileHandler.XCTraceSample sample) {\n+            long[] counters = sample.getPmcValues();\n+            for (int i = 0; i < counters.length; i++) {\n+                eventValues[i] += counters[i];\n+            }\n+            eventValues[eventValues.length - 1] = sample.getWeight();\n+            minTimestampMs = Math.min(minTimestampMs, sample.getTimeFromStartNs());\n+            maxTimestampMs = Math.max(maxTimestampMs, sample.getTimeFromStartNs());\n+            eventsCount += 1;\n+        }\n+\n+        void normalizeByThroughput(double throughput) {\n+            if (maxTimestampMs == minTimestampMs) {\n+                throw new IllegalStateException(\"Min and max timestamps are the same.\");\n+            }\n+            double timeSpanMs = (maxTimestampMs - minTimestampMs) \/ 1e6;\n+            for (int i = 0; i < getEventValues().length; i++) {\n+                eventValues[i] = eventValues[i] \/ timeSpanMs \/ throughput;\n+            }\n+        }\n+\n+        CounterValue getAnyOfOrNull(String... keys) {\n+            for (String key : keys) {\n+                Double value = getCountOrNull(key);\n+                if (value != null) {\n+                    return new CounterValue(key, value);\n+                }\n+            }\n+            return null;\n+        }\n+\n+        Double getCountOrNull(String event) {\n+            int idx = eventNames.indexOf(event);\n+            if (idx == -1) return null;\n+            return eventValues[idx];\n+        }\n+\n+        List<String> getEventNames() {\n+            return eventNames;\n+        }\n+\n+        double[] getEventValues() {\n+            return eventValues;\n+        }\n+\n+        long getEventsCount() {\n+            return eventsCount;\n+        }\n+    }\n+\n+    private static class CounterValue {\n+        private final String name;\n+        private final double value;\n+\n+        CounterValue(String name, double value) {\n+            this.name = name;\n+            this.value = value;\n+        }\n+\n+        double getValue() {\n+            return value;\n+        }\n+\n+        String getName() {\n+            return name;\n+        }\n+    }\n+}\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceNormProfiler.java","additions":407,"deletions":0,"binary":false,"changes":407,"status":"added"},{"patch":"@@ -33,1 +33,3 @@\n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n@@ -38,0 +40,2 @@\n+    private static final int ANY_VERSION = 0;\n+\n@@ -79,1 +83,1 @@\n-     *\n+     * <p>\n@@ -83,0 +87,4 @@\n+        return getXCTracePath(ANY_VERSION);\n+    }\n+\n+    static Path getXCodeDevToolsPath() throws ProfilerException {\n@@ -90,1 +98,13 @@\n-        File xctrace = Paths.get(devPath, \"usr\", \"bin\", \"xctrace\").toFile();\n+        return Paths.get(devPath);\n+    }\n+\n+    \/**\n+     * Returns absolute path to xctrace executable or throws ProfilerException if it does not exist\n+     * or its version is below {@code minVersion}.\n+     * <p>\n+     * xctrace is expected to be at {@code $(xcode-select -p)\/usr\/bin\/xctrace}\n+     *\n+     * @param minVersion a minimum required major xctrace version, like {@code 13}. Use {@code 0} to allow any version.\n+     *\/\n+    static String getXCTracePath(int minVersion) throws ProfilerException {\n+        File xctrace = getXCodeDevToolsPath().resolve(Paths.get(\"usr\", \"bin\", \"xctrace\")).toFile();\n@@ -95,4 +115,8 @@\n-        out = Utils.tryWith(xctracePath, \"version\");\n-        if (!out.isEmpty()) {\n-            throw new ProfilerException(\"\\\"xctrace version\\\" failed: \" + out);\n-        }\n+        Collection<String> versionOut = Utils.runWith(xctracePath, \"version\");\n+        String versionString = versionOut.stream().flatMap(l -> Arrays.stream(l.split(\"\\n\")))\n+                .filter(l -> l.contains(\"xctrace version\"))\n+                .findFirst()\n+                .orElseThrow(() -> new ProfilerException(\"\\\"xctrace version\\\" failed: \" + versionOut));\n+\n+        checkVersion(versionString, minVersion);\n+\n@@ -102,0 +126,10 @@\n+    private static void checkVersion(String versionString, int minVersion) throws ProfilerException {\n+        String extractedVersion = versionString.split(\"xctrace version \")[1].split(\" \")[0];\n+        int majorVersion = Integer.parseInt(extractedVersion.split(\"\\\\.\")[0]);\n+\n+        if (majorVersion < minVersion) {\n+            throw new ProfilerException(\n+                    \"xctrace version (\" + versionString + \") is too low (required at least \" + minVersion + \").\");\n+        }\n+    }\n+\n@@ -109,1 +143,1 @@\n-                        +launchFiles.size() + \": \" + launchFiles);\n+                        launchFiles.size() + \": \" + launchFiles);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceSupport.java","additions":42,"deletions":8,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n@@ -43,0 +47,1 @@\n+    static final String PMC_EVENTS = \"pmc-events\";\n@@ -126,0 +131,1 @@\n+        private final List<String> pmcEvents;\n@@ -128,1 +134,1 @@\n-                         String trigger, long threshold) {\n+                         String trigger, long threshold, Collection<String> pmcEvents) {\n@@ -133,0 +139,1 @@\n+            this.pmcEvents = Collections.unmodifiableList(new ArrayList<>(pmcEvents));\n@@ -136,1 +143,1 @@\n-            this(tableType, XCTraceTableHandler.TriggerType.UNKNOWN, \"\", -1);\n+            this(tableType, XCTraceTableHandler.TriggerType.UNKNOWN, \"\", -1, Collections.emptyList());\n@@ -154,0 +161,4 @@\n+\n+        public List<String> getPmcEvents() {\n+            return pmcEvents;\n+        }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableHandler.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.stream.Collectors;\n@@ -46,0 +47,10 @@\n+    private static List<String> parseEvents(Attributes attributes) {\n+        String events = attributes.getValue(XCTraceTableHandler.PMC_EVENTS);\n+        return Arrays.stream(events.split(\" \")).map(e -> {\n+                    if (!e.startsWith(\"\\\"\") && !e.endsWith(\"\\\"\")) return e;\n+                    if (e.startsWith(\"\\\"\") && e.endsWith(\"\\\"\")) return e.substring(1, e.length() - 1);\n+                    throw new IllegalStateException(\"Can't parse pmc-events: \" + events);\n+                }).filter(e -> !e.isEmpty())\n+                .collect(Collectors.toList());\n+    }\n+\n@@ -107,1 +118,1 @@\n-                pmiEvent, threshold);\n+                pmiEvent, threshold, parseEvents(attributes));\n@@ -115,1 +126,1 @@\n-                XCTraceTableProfileHandler.XCTraceSample.TIME_SAMPLE_TRIGGER_NAME, threshold);\n+                XCTraceTableProfileHandler.XCTraceSample.TIME_SAMPLE_TRIGGER_NAME, threshold, parseEvents(attributes));\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableOfContentsHandler.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -225,0 +225,6 @@\n+            case XCTraceTableHandler.PMC_EVENTS:\n+                pushCachedOrNew(attributes, id -> {\n+                    setNeedParseCharacters(true);\n+                    return new ValueHolder<long[]>(id);\n+                });\n+                break;\n@@ -281,1 +287,8 @@\n-\n+            case XCTraceTableHandler.PMC_EVENTS:\n+                ValueHolder<long[]> events = pop();\n+                if (isNeedToParseCharacters()) {\n+                    events.setValue(Arrays.stream(getCharacters().split(\" \"))\n+                            .mapToLong(Long::parseLong).toArray());\n+                }\n+                currentSample.setPmcValues(events.getValue());\n+                break;\n@@ -377,0 +390,1 @@\n+        private static final long[] EMPTY_ARRAY = new long[0];\n@@ -383,0 +397,1 @@\n+        private long[] pmcValues = EMPTY_ARRAY;\n@@ -417,0 +432,8 @@\n+\n+        public long[] getPmcValues() {\n+            return pmcValues;\n+        }\n+\n+        public void setPmcValues(long[] values) {\n+            pmcValues = values;\n+        }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableProfileHandler.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,1757 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\tThis is an Xcode Instruments template used by the xctracenorm profiler by default.\n+\tThe template was created using Instruments v15.3, it uses CPU Profiler instrument configured\n+\tto sample PMU events on timer interruptions. Sampled events set consists of the following events:\n+\t- CORE_ACTIVE_CYCLE\n+\t- INST_ALL\n+\t- INST_BRANCH\n+\t- BRANCH_MISPRED_NONSPEC\n+\tThese are events available on all supported CPUs.\n+\tThere are only four events as it's the minimum number of events that could be sampled on some CPUs.\n+\n+\tThe template was tested with xctrace version from 13.0 to 16.0.\n+\n+\tThe template was converted from binary plist format into xml using plutil tool.\n+-->\n+<!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>$archiver<\/key>\n+\t<string>NSKeyedArchiver<\/string>\n+\t<key>$objects<\/key>\n+\t<array>\n+\t\t<string>$null<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>2<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.string<\/key>\n+\t\t\t<string>rsrc:\/\/templateCounters1<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSMutableString<\/string>\n+\t\t\t\t<string>NSString<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSMutableString<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>2<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.string<\/key>\n+\t\t\t<string>CPU Counters trace template.\n+<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>5<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>6<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>7<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>8<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>ui_default_target_type_in_chooser<\/string>\n+\t\t<string>_selectedRunNumber<\/string>\n+\t\t<integer>0<\/integer>\n+\t\t<integer>-1<\/integer>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSMutableDictionary<\/string>\n+\t\t\t\t<string>NSDictionary<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSMutableDictionary<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>77<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>globalForks<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>11<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>nextForkID<\/key>\n+\t\t\t<integer>1<\/integer>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$0<\/key>\n+\t\t\t<integer>2<\/integer>\n+\t\t\t<key>$1<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>12<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$2<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>13<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$3<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>46<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$4<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>47<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>45<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<integer>0<\/integer>\n+\t\t<dict>\n+\t\t\t<key>$0<\/key>\n+\t\t\t<integer>1<\/integer>\n+\t\t\t<key>$1<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>12<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$2<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>14<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>45<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>15<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>16<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>17<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>18<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>22<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>25<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>0D76DA8C-503A-41D8-AD91-5E48DF5C952B<\/string>\n+\t\t<string>instrument_0D76DA8C-503A-41D8-AD91-5E48DF5C952B-UIMode<\/string>\n+\t\t<string>MainWindow<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>21<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>19<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>20<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>XRInstrumentControlState<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>XRInstrumentControlState<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>21<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>23<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>24<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>44<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>26<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>43<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>27<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>28<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>29<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>30<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>31<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>32<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>33<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>7<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>34<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>35<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>42<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>planesWidthIdentifier<\/string>\n+\t\t<string>currentLayout<\/string>\n+\t\t<string>selectedTabIdentitfier<\/string>\n+\t\t<string>tabItemsIdentifier<\/string>\n+\t\t<string>selectedStrategyIdentifier<\/string>\n+\t\t<string>selectedRulerKind<\/string>\n+\t\t<real>300<\/real>\n+\t\t<string>BDB26B4D-FC31-4890-AC64-C24711DD1EDC<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>41<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>36<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>40<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>37<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>38<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>39<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>34<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>title<\/string>\n+\t\t<string>identifier<\/string>\n+\t\t<string>All Tracks<\/string>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSDictionary<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSDictionary<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSArray<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSArray<\/string>\n+\t\t<\/dict>\n+\t\t<string>com.apple.instruments.strategy.all<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>XRMainWindowUserInterfaceControlMode<\/string>\n+\t\t\t\t<string>XRTraceMode<\/string>\n+\t\t\t\t<string>XRInstrumentControlState<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>XRMainWindowUserInterfaceControlMode<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>XRIntKeyedDictionary<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>XRIntKeyedDictionary<\/string>\n+\t\t<\/dict>\n+\t\t<integer>17287658681347528905<\/integer>\n+\t\t<dict>\n+\t\t\t<key>$0<\/key>\n+\t\t\t<integer>1<\/integer>\n+\t\t\t<key>$1<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>12<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$2<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>48<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>45<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>49<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>50<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>51<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>52<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>56<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>72<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>TracksControllerModePerScope<\/string>\n+\t\t<string>instrument_0D76DA8C-503A-41D8-AD91-5E48DF5C952B-Total%20PMC%20Aggregation-UIMode<\/string>\n+\t\t<string>instrument_0D76DA8C-503A-41D8-AD91-5E48DF5C952B-UIMode<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>55<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>53<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>54<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>XRStrategyUIControllerMode<\/string>\n+\t\t\t\t<string>XRInstrumentControlState<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>XRStrategyUIControllerMode<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>21<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>57<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>71<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>58<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>59<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>60<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>61<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>64<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>69<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>visibleOrderedColumnIdentifiers<\/string>\n+\t\t<string>columnWidthByColumnIdentifier<\/string>\n+\t\t<string>hiddenColumnIdentifiers<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>41<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>62<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>63<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>__dimcolumn__<\/string>\n+\t\t<string>count?outputName=%23%20Samples<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>40<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>65<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>66<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>63<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>67<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>68<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>68<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>__dimcolumn__<\/string>\n+\t\t<string>sum?columnName=value<\/string>\n+\t\t<real>326<\/real>\n+\t\t<real>80<\/real>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>70<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSSet<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSSet<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>21<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>73<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>76<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>74<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>75<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>detailIdentifier<\/string>\n+\t\t<string>Total PMC Aggregation<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>XRModeStore<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>XRModeStore<\/string>\n+\t\t<\/dict>\n+\t\t<integer>1<\/integer>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>2<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.string<\/key>\n+\t\t\t<string>com.apple.dt.instruments.cpu.counters<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>81<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>82<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>83<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>84<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>85<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>86<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>87<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>88<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>89<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>90<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>93<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>94<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>95<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>3<\/string>\n+\t\t<string>recordingControlState<\/string>\n+\t\t<string>4<\/string>\n+\t\t<string>UUID<\/string>\n+\t\t<string>0<\/string>\n+\t\t<string>5<\/string>\n+\t\t<string>1<\/string>\n+\t\t<string>detailViewPreferences<\/string>\n+\t\t<string>2<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>21<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>91<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>92<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<string>0D76DA8C-503A-41D8-AD91-5E48DF5C952B<\/string>\n+\t\t<integer>2<\/integer>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array\/>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array\/>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>97<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>98<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>com.apple.dt.instruments.cpu.counters<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>40<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>99<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>100<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>101<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>38<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>102<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>103<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>106<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>109<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>110<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>111<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>brushes<\/string>\n+\t\t<string>details<\/string>\n+\t\t<string>name<\/string>\n+\t\t<string>uuid<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>105<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.object.0<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>104<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>2<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.string<\/key>\n+\t\t\t<string>Total PMC Values<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSOrderedSet<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSOrderedSet<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>105<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.object.0<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>107<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.object.1<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>108<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>2<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.string<\/key>\n+\t\t\t<string>Profile<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>2<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.string<\/key>\n+\t\t\t<string>Total PMC Aggregation<\/string>\n+\t\t<\/dict>\n+\t\t<string>CPU Counters<\/string>\n+\t\t<string>com.apple.dt.instruments.cpu.counters<\/string>\n+\t\t<string>com.apple.dt.instruments.cpu.counters<\/string>\n+\t\t<dict>\n+\t\t\t<key>$0<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>0<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$1<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>0<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$2<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>0<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$3<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>113<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>156<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>_commandPurpose<\/key>\n+\t\t\t<integer>1<\/integer>\n+\t\t\t<key>_commandSource<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>0<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>_endTime<\/key>\n+\t\t\t<real>0.0<\/real>\n+\t\t\t<key>_importHints<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>0<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>_importers<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>0<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>_numberOfRuns<\/key>\n+\t\t\t<integer>0<\/integer>\n+\t\t\t<key>_recordingControlState<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>115<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>_skipPrivacyPrompts<\/key>\n+\t\t\t<false\/>\n+\t\t\t<key>_startTime<\/key>\n+\t\t\t<real>0.0<\/real>\n+\t\t\t<key>_targetType<\/key>\n+\t\t\t<integer>0<\/integer>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>114<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>recordingMode<\/key>\n+\t\t\t<integer>1<\/integer>\n+\t\t\t<key>supportsDeferredMode<\/key>\n+\t\t\t<true\/>\n+\t\t\t<key>supportsImmediateMode<\/key>\n+\t\t\t<true\/>\n+\t\t\t<key>supportsWindowedMode<\/key>\n+\t\t\t<true\/>\n+\t\t\t<key>timeLimit<\/key>\n+\t\t\t<integer>43200000000000<\/integer>\n+\t\t\t<key>windowLimit<\/key>\n+\t\t\t<integer>0<\/integer>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>XRRecordingOptions<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>XRRecordingOptions<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>21<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>state<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>116<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>switchAttributes<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>155<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>117<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>118<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>119<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>120<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>122<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>123<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>124<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>125<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>126<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>127<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>128<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>129<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>130<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>131<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>132<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>134<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>135<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>138<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>139<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>140<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>141<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>94<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>143<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>144<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>146<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>147<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>148<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>150<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>shaderprofiler<\/string>\n+\t\t<string>hangsThreshold<\/string>\n+\t\t<string>counterscounterprofile<\/string>\n+\t\t<string>countersshaderprofiler<\/string>\n+\t\t<string>highFrequency<\/string>\n+\t\t<string>pmcEventsWithFormulas<\/string>\n+\t\t<string>pmc-events-with-formulas<\/string>\n+\t\t<string>counterdeviceinternal<\/string>\n+\t\t<string>counterprofile<\/string>\n+\t\t<string>highFreqSampling<\/string>\n+\t\t<string>samplingRate<\/string>\n+\t\t<string>samplingType<\/string>\n+\t\t<string>gpuperformancestate<\/string>\n+\t\t<string>contextSwitchSampling<\/string>\n+\t\t<string>shaderprofilerinternal<\/string>\n+\t\t<string>recordWaitingThreads<\/string>\n+\t\t<string>counterdevice<\/string>\n+\t\t<string>detectPriorityInversions<\/string>\n+\t\t<string>recordKernelStacks<\/string>\n+\t\t<string>counterscounterdevice<\/string>\n+\t\t<string>recordKernelStack<\/string>\n+\t\t<string>dataLoggingScope<\/string>\n+\t\t<string>pmcEvents<\/string>\n+\t\t<string>sampleExpensiveCACommits<\/string>\n+\t\t<string>counterprofileinternal<\/string>\n+\t\t<false\/>\n+\t\t<data>\n+\t\tYnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9i\n+\t\tamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGvEBALDBUj\n+\t\tJCUsNDU2Pj9ASElKVSRudWxs0g0ODxRaTlMub2JqZWN0c1YkY2xhc3OkEBES\n+\t\tE4ACgAaACYAMgA\/XDhYXGBkaGxwdHR8gICBfEBFfZm9ybXVsYUV2YWx1YXRv\n+\t\tclxfZm9ybXVsYVRleHRcX2V4cGxhbmF0aW9uWV9tbmVtb25pY1xfZGlzcGxh\n+\t\teU5hbWVfEBBfYWxpYXNPck1uZW1vbmljgAWAAIAAgASAA4ADgANYSU5TVF9B\n+\t\tTExfEBhBbGwgcmV0aXJlZCBpbnN0cnVjdGlvbnPSJicoKVokY2xhc3NuYW1l\n+\t\tWCRjbGFzc2VzXxAdWFJDb3VudGVyc1NldHVwRXZlbnRPckZvcm11bGGiKitf\n+\t\tEB1YUkNvdW50ZXJzU2V0dXBFdmVudE9yRm9ybXVsYVhOU09iamVjdNcOFhcY\n+\t\tGRobHB0dMDExMYAFgACAAIAIgAeAB4AHW0lOU1RfQlJBTkNIXxA3UmV0aXJl\n+\t\tZCBicmFuY2ggaW5zdHJ1Y3Rpb25zIGluY2x1ZGluZyBjYWxscyBhbmQgcmV0\n+\t\tdXJuc9cOFhcYGRobHB0dOjs7O4AFgACAAIALgAqACoAKXxARQ09SRV9BQ1RJ\n+\t\tVkVfQ1lDTEVfECBDeWNsZXMgd2hpbGUgdGhlIGNvcmUgd2FzIGFjdGl2ZdcO\n+\t\tFhcYGRobHB0dREVFRYAFgACAAIAOgA2ADYANXxAWQlJBTkNIX01JU1BSRURf\n+\t\tTk9OU1BFQ18QSVJldGlyZWQgYnJhbmNoIGluc3RydWN0aW9ucyBpbmNsdWRp\n+\t\tbmcgY2FsbHMgYW5kIHJldHVybnMgdGhhdCBtaXNwcmVkaWN0ZWTSJidLTFdO\n+\t\tU0FycmF5oksrAAgAEQAaACQAKQAyADcASQBMAFEAUwBmAGwAcQB8AIMAiACK\n+\t\tAIwAjgCQAJIAoQC1AMIAzwDZAOYA+QD7AP0A\/wEBAQMBBQEHARABKwEwATsB\n+\t\tRAFkAWcBhwGQAZ8BoQGjAaUBpwGpAasBrQG5AfMCAgIEAgYCCAIKAgwCDgIQ\n+\t\tAiQCRwJWAlgCWgJcAl4CYAJiAmQCfQLJAs4C1gAAAAAAAAIBAAAAAAAAAE0A\n+\t\tAAAAAAAAAAAAAAAAAALZ\n+\t\t<\/data>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>145<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.data<\/key>\n+\t\t\t<data>\n+\t\t\tYnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0\n+\t\t\tb3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRy\n+\t\t\tb290gAGjCwwRVSRudWxs0g0ODxBaTlMub2JqZWN0c1YkY2xhc3Og\n+\t\t\tgALSEhMUFVokY2xhc3NuYW1lWCRjbGFzc2VzXk5TTXV0YWJsZUFy\n+\t\t\tcmF5oxQWF1dOU0FycmF5WE5TT2JqZWN0CBEaJCkyN0lMUVNXXWJt\n+\t\t\tdHV3fIeQn6OrAAAAAAAAAQEAAAAAAAAAGAAAAAAAAAAAAAAAAAAA\n+\t\t\tALQ=\n+\t\t\t<\/data>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSMutableData<\/string>\n+\t\t\t\t<string>NSData<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSMutableData<\/string>\n+\t\t<\/dict>\n+\t\t<integer>1000<\/integer>\n+\t\t<string>time<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>149<\/integer>\n+\t\t\t<\/dict>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>NSNull<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>NSNull<\/string>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>41<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>151<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>152<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>153<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>154<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<string>INST_ALL<\/string>\n+\t\t<string>INST_BRANCH<\/string>\n+\t\t<string>CORE_ACTIVE_CYCLE<\/string>\n+\t\t<string>BRANCH_MISPRED_NONSPEC<\/string>\n+\t\t<dict>\n+\t\t\t<key>$class<\/key>\n+\t\t\t<dict>\n+\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t<integer>9<\/integer>\n+\t\t\t<\/dict>\n+\t\t\t<key>NS.keys<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>141<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>125<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>133<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>126<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>140<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>132<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>134<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>118<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>130<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>135<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>138<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>121<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>137<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>120<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>119<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>131<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>117<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>136<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>124<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t\t<key>NS.objects<\/key>\n+\t\t\t<array>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>94<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>142<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t\t<dict>\n+\t\t\t\t\t<key>CF$UID<\/key>\n+\t\t\t\t\t<integer>12<\/integer>\n+\t\t\t\t<\/dict>\n+\t\t\t<\/array>\n+\t\t<\/dict>\n+\t\t<dict>\n+\t\t\t<key>$classes<\/key>\n+\t\t\t<array>\n+\t\t\t\t<string>PFTInstrumentCommand<\/string>\n+\t\t\t\t<string>NSObject<\/string>\n+\t\t\t<\/array>\n+\t\t\t<key>$classname<\/key>\n+\t\t\t<string>PFTInstrumentCommand<\/string>\n+\t\t<\/dict>\n+\t<\/array>\n+\t<key>$top<\/key>\n+\t<dict>\n+\t\t<key>$0<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>78<\/integer>\n+\t\t<\/dict>\n+\t\t<key>$1<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>79<\/integer>\n+\t\t<\/dict>\n+\t\t<key>$2<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>80<\/integer>\n+\t\t<\/dict>\n+\t\t<key>com.apple.xray.modeStore<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>10<\/integer>\n+\t\t<\/dict>\n+\t\t<key>com.apple.xray.owner.template<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>4<\/integer>\n+\t\t<\/dict>\n+\t\t<key>com.apple.xray.owner.template.description<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>3<\/integer>\n+\t\t<\/dict>\n+\t\t<key>com.apple.xray.owner.template.iconURL<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>1<\/integer>\n+\t\t<\/dict>\n+\t\t<key>com.apple.xray.owner.template.version<\/key>\n+\t\t<real>2.1000000000000001<\/real>\n+\t\t<key>stubInfoByUUID<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>96<\/integer>\n+\t\t<\/dict>\n+\t\t<key>templateRunCommand<\/key>\n+\t\t<dict>\n+\t\t\t<key>CF$UID<\/key>\n+\t\t\t<integer>112<\/integer>\n+\t\t<\/dict>\n+\t<\/dict>\n+\t<key>$version<\/key>\n+\t<integer>100000<\/integer>\n+<\/dict>\n+<\/plist>\n","filename":"jmh-core\/src\/main\/resources\/default.instruments.template.xml","additions":1757,"deletions":0,"binary":false,"changes":1757,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -56,0 +57,3 @@\n+        assertEquals(Arrays.asList(\n+                \"L1D_CACHE_MISS_LD\", \"MEM_LOAD_RETIRED.L1_HIT\"\n+        ), table.getPmcEvents());\n@@ -71,0 +75,3 @@\n+        assertEquals(Arrays.asList(\n+                \"INST_ALL\", \"CORE_ACTIVE_CYCLE\", \"INST_BRANCH\"\n+        ), table.getPmcEvents());\n","filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableOfContentsHandlerTest.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -113,0 +113,2 @@\n+        assertArrayEquals(\"PMC values for row \" + rowIndex,\n+                (long[]) expectedRow[5], actualRow.getPmcValues());\n","filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/profile\/XCTraceTableProfileHandlerTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}