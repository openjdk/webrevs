{"files":[{"patch":"@@ -52,0 +52,1 @@\n+    static final String COMPILER_HINTS_MODE       = \"jmh.compilerhints.mode\";\n@@ -104,0 +105,24 @@\n+    public enum CompilerHintsSelect {\n+        FORCE_ON(\"Forced on\"),\n+        FORCE_OFF(\"Forced off\"),\n+        AUTO(\"Automatically selected\");\n+\n+        private final String desc;\n+\n+        CompilerHintsSelect(String desc) {\n+            this.desc = desc;\n+        }\n+\n+        public String desc() {\n+            return desc;\n+        }\n+    }\n+\n+    static Boolean compilerHintsEnabled;\n+    static CompilerHintsSelect compilerHintsSelect;\n+\n+    public static CompilerHintsSelect compilerHintsSelect() {\n+        compilerHintsEnabled();\n+        return compilerHintsSelect;\n+    }\n+\n@@ -108,1 +133,16 @@\n-    private static boolean isHintCompatibleVM() {\n+    private static boolean compilerHintsEnabled() {\n+        if (compilerHintsEnabled != null) {\n+            return compilerHintsEnabled;\n+        }\n+        String propMode = System.getProperty(COMPILER_HINTS_MODE);\n+        if (propMode != null) {\n+            compilerHintsSelect = CompilerHintsSelect.valueOf(propMode);\n+        } else {\n+            compilerHintsSelect = CompilerHintsSelect.AUTO;\n+        }\n+        switch (compilerHintsSelect) {\n+            case FORCE_ON:\n+                return true;\n+            case FORCE_OFF:\n+                return false;\n+        }\n@@ -191,4 +231,6 @@\n-        if (!isHintCompatibleVM()) {\n-            System.err.println(\"WARNING: Not a HotSpot compiler command compatible VM (\\\"\"\n-                    + System.getProperty(\"java.vm.name\") + \"-\" + System.getProperty(\"java.version\")\n-                    + \"\\\"), compilerHints are disabled.\");\n+        if (!compilerHintsEnabled()) {\n+            if (compilerHintsSelect() == CompilerHintsSelect.AUTO) {\n+                System.err.println(\"WARNING: Not a HotSpot compiler command compatible VM (\\\"\"\n+                        + System.getProperty(\"java.vm.name\") + \"-\" + System.getProperty(\"java.version\")\n+                        + \"\\\"), compilerHints are disabled.\");\n+            }\n@@ -393,1 +435,3 @@\n-    public static void printBlackhole(PrintStream out) {\n+    public static void printHints(PrintStream out) {\n+        out.print(\"# Compiler hints: \" + (compilerHintsEnabled() ? \"enabled\" : \"disabled\") + \" (\" + compilerHintsSelect().desc() + \")\");\n+        out.println();\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/CompilerHints.java","additions":50,"deletions":6,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        CompilerHints.printBlackhole(out);\n+        CompilerHints.printHints(out);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/format\/TextReportFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}