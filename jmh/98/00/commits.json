[{"commit":{"message":"Optional: rename hasValue() to isPresent()\n\nPrepare for a possible future drop-in replacement of usages of class\norg.openjdk.jmh.util.Optional with class java.util.Optional by renaming\nmethod hasValue() to isPresent()."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/Runner.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/OptionsBuilder.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Optional.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/lines\/TestLineWriter.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/runner\/options\/TestParentOptions.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/util\/lines\/TestLineTest.java"}],"sha":"2d8146a5bde4174e0ef08b9575b7fee4b8fbd871"},{"commit":{"message":"Optional: rename eitherOf() to ofNullable()\n\nPrepare for a possible future drop-in replacement of usages of class\norg.openjdk.jmh.util.Optional with class java.util.Optional by renaming\nthe static factory method eitherOf() to ofNullable()."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/MethodGroup.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/CommandLineOptions.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Optional.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/util\/lines\/TestLineTest.java"}],"sha":"39b5f6282b184379c21d05615d587264a7ff6e34"},{"commit":{"message":"Optional: rename none() to empty()\n\nPrepare for a possible future drop-in replacement of usages of class\norg.openjdk.jmh.util.Optional with class java.util.Optional by renaming\nthe static factory method that returns an empty Optional to empty().\nClean up unnecessary type parameters, while we're here."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/MethodGroup.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/CommandLineOptions.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/OptionsBuilder.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Optional.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/lines\/TestLineReader.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/runner\/TestBenchmarkList.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/runner\/TestBenchmarkListEncoding.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/runner\/TestBenchmarkListSorting.java"},{"filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/util\/lines\/TestLineTest.java"}],"sha":"b12d5612513d8855f8e8f1245124d28388b5a2ac"},{"commit":{"message":"OptionsBuilder: refactor usage of Optional#orAnother()\n\nIn Java 8, class java.util.Optional doesn't have an analogue for method\norAnother() that JMH's class org.openjdk.jmh.util.Optional has.\n\nSimilarly to previous commit, replace usage of method orAnother() of\nclass org.openjdk.jmh.util.Optional in class OptionsBuilder.  Remove now\nunused method Optional#orAnother()."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/OptionsBuilder.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Optional.java"}],"sha":"8e2f481434600a52a2e4fc387d6c7ebe7887c80d"},{"commit":{"message":"Runner: replace orAnother() with orElseGet()\n\nRefactor usage of method org.openjdk.jmh.util.Optional#orAnother in\nclass Runner using new method orElseGet().  This is part of preparation\nfor a possible future drop-in replacement of usages of class\norg.openjdk.jmh.util.Optional with class java.util.Optional.\n\nIn Java 8, the minimal version that JMH supports at the moment, class\njava.util.Optional doesn't have an analogue to JMH's method orAnother().\nA similar method (taking a Supplier of Optional as a parameter), which\ncould be used instead was added to java.util.Optional in Java 9, see\nhttps:\/\/bugs.openjdk.org\/browse\/JDK-8080418."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/Runner.java"},{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Optional.java"}],"sha":"e7505b37d085ab02d4c724c067ff24a307f68e6a"},{"commit":{"message":"OptionsBuilder: extract method getOrOther\n\nPrepare for refactoring of usages of class Optional by extracting common\nlogic out of getters in class OptionsBuilder into a new method\ngetOrOther."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/OptionsBuilder.java"}],"sha":"06a697d9a60faefa80d55846d656398fb556789e"},{"commit":{"message":"OptionsBuilder: don't pass empty Optional to orAnother()\n\nPassing an empty Optional to method orAnother() of class\norg.openjdk.jmh.util.Optional is a no-op.  Stop doing it in getters\ngetJvmArgs(), getJvmArgsAppend(), and getJvmArgsPrepend() of class\nOptionsBuilder."},"files":[{"filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/options\/OptionsBuilder.java"}],"sha":"da03a011c534c92ba07bcd49d79e9b1074be7aba"}]