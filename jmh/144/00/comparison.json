{"files":[{"patch":"@@ -585,3 +585,0 @@\n-            \/\/ control objects get a special treatment\n-            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n-\n@@ -589,0 +586,1 @@\n+            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n@@ -591,2 +589,0 @@\n-\n-            \/\/ control objects get a special treatment\n@@ -594,0 +590,1 @@\n+            writer.println();\n@@ -721,3 +718,0 @@\n-            \/\/ control objects get a special treatment\n-            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n-\n@@ -725,0 +719,1 @@\n+            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n@@ -726,2 +721,0 @@\n-\n-            \/\/ control objects get a special treatment\n@@ -729,0 +722,1 @@\n+            writer.println();\n@@ -874,4 +868,0 @@\n-            \/\/ control objects get a special treatment\n-            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n-\n-            \/\/ measurement loop call\n@@ -882,0 +872,4 @@\n+            writer.println();\n+\n+            \/\/ measurement loop call\n+            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n@@ -884,2 +878,0 @@\n-\n-            \/\/ control objects get a special treatment\n@@ -887,0 +879,1 @@\n+            writer.println();\n@@ -1009,4 +1002,0 @@\n-            \/\/ control objects get a special treatment\n-            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n-\n-            \/\/ measurement loop call\n@@ -1015,0 +1004,4 @@\n+            writer.println();\n+\n+            \/\/ measurement loop call\n+            writer.println(ident(3) + \"notifyControl.startMeasurement = true;\");\n@@ -1017,0 +1010,1 @@\n+            writer.println();\n@@ -1029,2 +1023,1 @@\n-            writer.println(ident(3) + \"int opsPerInv = control.benchmarkParams.getOpsPerInvocation();\");\n-            writer.println(ident(3) + \"long totalOps = opsPerInv;\");\n+            writer.println(ident(3) + \"long totalOps = benchmarkParams.getOpsPerInvocation();\");\n@@ -1103,3 +1096,0 @@\n-        writer.println();\n-\n-        \/\/ reset @AuxCounters\n@@ -1107,1 +1097,0 @@\n-        writer.println();\n@@ -1109,0 +1098,1 @@\n+        writer.println();\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/BenchmarkGenerator.java","additions":16,"deletions":26,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -965,1 +965,1 @@\n-                pw.println(\"public class \" + so.type + \" extends \" + so.userType + \" {\");\n+                pw.println(\"public final class \" + so.type + \" extends \" + so.userType + \" {\");\n@@ -1011,1 +1011,1 @@\n-                pw.println(\"public class \" + so.type + \" extends \" + so.type + \"_B2 {\");\n+                pw.println(\"public final class \" + so.type + \" extends \" + so.type + \"_B2 {\");\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/StateObjectHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}