{"files":[{"patch":"@@ -135,0 +135,11 @@\n+\n+            <plugin>\n+                <artifactId>maven-jar-plugin<\/artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>test-jar<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n","filename":"jmh-core-it\/pom.xml","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import org.openjdk.jmh.runner.Runner;\n@@ -52,1 +51,1 @@\n-public class IterationCountAnnTest {\n+public class IterationCountAnnTest implements RunnerFactory {\n@@ -81,1 +80,1 @@\n-        new Runner(opts).run();\n+        createRunner(opts).run();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/IterationCountAnnTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import org.openjdk.jmh.runner.Runner;\n@@ -50,1 +49,1 @@\n-public class IterationCountCmdTest {\n+public class IterationCountCmdTest implements RunnerFactory {\n@@ -80,1 +79,1 @@\n-        new Runner(opt).run();\n+        createRunner(opt).run();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/IterationCountCmdTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jmh.it;\n+\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.options.Options;\n+\n+public interface RunnerFactory {\n+    default Runner createRunner(Options opts) {\n+        return new Runner(opts);\n+    }\n+}\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/RunnerFactory.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -33,1 +33,0 @@\n-import org.openjdk.jmh.runner.Runner;\n@@ -44,1 +43,1 @@\n-public class SingleShotTest {\n+public class SingleShotTest implements RunnerFactory {\n@@ -72,1 +71,1 @@\n-        new Runner(opt).run();\n+        createRunner(opt).run();\n@@ -82,1 +81,1 @@\n-        new Runner(opt).run();\n+        createRunner(opt).run();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/SingleShotTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import org.openjdk.jmh.runner.Runner;\n@@ -45,1 +44,1 @@\n-public class StackTraceInThrowableTest {\n+public class StackTraceInThrowableTest implements RunnerFactory {\n@@ -63,1 +62,1 @@\n-        new Runner(opts).run();\n+        createRunner(opts).run();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/StackTraceInThrowableTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import org.openjdk.jmh.runner.Runner;\n@@ -52,1 +51,1 @@\n-public class WarmupIterationCountAnnTest {\n+public class WarmupIterationCountAnnTest implements RunnerFactory {\n@@ -81,1 +80,1 @@\n-        new Runner(opt).run();\n+        createRunner(opt).run();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/WarmupIterationCountAnnTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import org.openjdk.jmh.runner.Runner;\n@@ -50,1 +49,1 @@\n-public class WarmupIterationCountCmdTest {\n+public class WarmupIterationCountCmdTest implements RunnerFactory {\n@@ -81,1 +80,1 @@\n-        new Runner(opt).run();\n+        createRunner(opt).run();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/WarmupIterationCountCmdTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}