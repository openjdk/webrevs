{"files":[{"patch":"@@ -957,1 +957,0 @@\n-\n@@ -961,0 +960,13 @@\n+            if (so.scope == Scope.Thread) {\n+                \/\/ Thread states carry no additional fluff. Generate a simple stub and continue.\n+                PrintWriter pw = new PrintWriter(dst.newClass(so.packageName + \".\" + so.type, so.userType));\n+\n+                pw.println(\"package \" + so.packageName + \";\");\n+                pw.println(\"public class \" + so.type + \" extends \" + so.userType + \" {\");\n+                Paddings.padding(pw, \"b_\");\n+                pw.println(\"}\");\n+\n+                pw.close();\n+                continue;\n+            }\n+\n@@ -980,0 +992,1 @@\n+                    pw.println(\"    public volatile boolean ready\" + level + \";\");\n@@ -989,14 +1002,0 @@\n-                switch (so.scope) {\n-                    case Benchmark:\n-                    case Group:\n-                        for (Level level : Level.values()) {\n-                            pw.println(\"    public volatile boolean ready\" + level + \";\");\n-                        }\n-                        break;\n-                    case Thread:\n-                        \/\/ these flags are redundant for single thread\n-                        break;\n-                    default:\n-                        throw new IllegalStateException(\"Unknown state scope: \" + so.scope);\n-                }\n-\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/StateObjectHandler.java","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"}]}