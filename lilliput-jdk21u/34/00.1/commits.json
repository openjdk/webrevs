[{"commit":{"message":"Merge jdk21u:jdk-21.0.4+6"},"files":[{"filename":".jcheck\/conf"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/c1_CodeStubs_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/globalDefinitions_ppc.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/c1_CodeStubs_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp"},{"filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp"},{"filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp"},{"filename":"src\/hotspot\/share\/oops\/klass.cpp"},{"filename":"src\/hotspot\/share\/oops\/klass.inline.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/type.cpp"},{"filename":"src\/hotspot\/share\/prims\/whitebox.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.hpp"},{"filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/hotspot\/jtreg\/TEST.groups"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/TestPLABPromotion.java"},{"filename":"test\/jdk\/com\/sun\/jdi\/EATests.java"}],"sha":"aa2a1cdc0428ca8dc93db60d5042c86e2ceb6ac8"},{"commit":{"message":"8330849: Add test to verify memory usage with recursive locking\n\nBackport-of: 7b2560b4904d80629d3f4f25c65d9b96eee9bdb6"},"files":[],"sha":"20dbbeafc702bdfdf9f51d83f09564e71b66dd25"},{"commit":{"message":"8329757: Crash with fatal error: DEBUG MESSAGE: Fast Unlock lock on stack\n\nBackport-of: e45fea5a801ac09c3d572ac07d6179e80c422942"},"files":[],"sha":"acde1a9977529de6bdb642f126da8c1195af539a"},{"commit":{"message":"8324174: assert(m->is_entered(current)) failed: invariant\n\nBackport-of: 5b9b176c6729aeff2a70d304a1ef57da3965fb53"},"files":[],"sha":"71b33877638084c5946c033292972a566e7dfc45"},{"commit":{"message":"8319799: Recursive lightweight locking: x86 implementation\n\nReviewed-by: stuefe, shade\nBackport-of: 7f6bb71eb302e8388c959bdaa914b758a766d299"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"cda1aba7fd49208bf9bad7666584141e0908b1df"},{"commit":{"message":"8329091: [Lilliput\/JDK21] Fix tests after LM_LIGHTWEIGHT backports\n\nReviewed-by: shade"},"files":[{"filename":"test\/jdk\/com\/sun\/jdi\/EATests.java"}],"sha":"f40c90aececf7c8f3bccb7d8965d23257306d959"},{"commit":{"message":"8319901: Recursive lightweight locking: ppc64le implementation\n\nBackport-of: b5cd7efcebe0daaf8a85f0f32b65a3bd446674ef"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"e41b033a3bb5591796912cc25de227504b8d7aa7"},{"commit":{"message":"8319900: Recursive lightweight locking: riscv64 implementation\n\nBackport-of: e1b661f8c1df780cce28fe76d257b44e2fe44058"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp"}],"sha":"a28d30c12edce5cbd3c8fccad6df788c4632f5a0"},{"commit":{"message":"8307907: [ppc] Remove RTM locking implementation\n\nBackport-of: de8aca27ba87427307186ffd25c029b5c6dbc82e"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/globalDefinitions_ppc.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"455ada63c500216b150d7fd414eed34b5dffe59f"},{"commit":{"message":"8319801: Recursive lightweight locking: aarch64 implementation\n\nBackport-of: 18cea823a173e1b8b48d276daeca67b2a5cf3584"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"}],"sha":"74e544c7fddc3a509c750e5291e7c01383903a31"},{"commit":{"message":"8319797: Recursive lightweight locking: Runtime implementation\n\nBackport-of: 5dbf13730ee2b57f089c57e9e7ee8ab65d4a67af"},"files":[{"filename":"src\/hotspot\/share\/prims\/whitebox.cpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"},{"filename":"test\/hotspot\/jtreg\/TEST.groups"}],"sha":"0d246501599826c0555a08e86a6f5a09c8177832"},{"commit":{"message":"8324881: ObjectSynchronizer::inflate(Thread* current...) is invoked for non-current thread\n\nBackport-of: a3a2b1fbbf00577ce1d0e3a44e9537e997b30b05"},"files":[{"filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.hpp"},{"filename":"test\/jdk\/com\/sun\/jdi\/EATests.java"}],"sha":"c7e855dc8b4fc21570288d15e65c67aa9e4819f7"},{"commit":{"message":"8319773: Avoid inflating monitors when installing hash codes for LM_LIGHTWEIGHT\n\nBackport-of: 65a0672791f868556776fc435b37319ed69f7c84"},"files":[{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"}],"sha":"95218a6a128ead75de762ce0936b631d4f494ea7"},{"commit":{"message":"8319778: Remove unreachable code in ObjectSynchronizer::exit\n\nBackport-of: 91279fcf058a6bb16a7749c328179ab94227bb8d"},"files":[{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"}],"sha":"e8f5152c7b944576041749bf2c02968a66c93090"},{"commit":{"message":"8318015: Lock inflation not needed for OSR or Deopt for new locking modes\n\nBackport-of: d0ea2a51111bd5de5a6465e7de6a4950aae89c71"},"files":[{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"}],"sha":"c76a1bf4d3d8b9f99041425ec937f38def02e0d6"},{"commit":{"message":"8317452: [JVMCI] Export symbols used by lightweight locking to JVMCI compilers.\n\nReviewed-by: shade\nBackport-of: 9718f490fb76f6712ac8f9c7f5248ca10bf83e6f"},"files":[],"sha":"6799201fb707627d8d768a4bb8db36e6f044dcf3"},{"commit":{"message":"Merge"},"files":[{"filename":".jcheck\/conf"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/type.cpp"},{"filename":"src\/hotspot\/share\/prims\/whitebox.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/hotspot\/jtreg\/TEST.groups"},{"filename":"test\/jdk\/com\/sun\/jdi\/EATests.java"}],"sha":"5ae2e0e057664c3c8e8854a0866e22c31e579f11"},{"commit":{"message":"8321134: [Lilliput\/JDK21] Fix repo permissions\n\nReviewed-by: shade"},"files":[{"filename":".jcheck\/conf"}],"sha":"e3adaa5bd3a81f1ab2138d9e437b678febe63023"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"}],"sha":"11afa8a4344b877ca5e80df1b64f6d5764a987ee"},{"commit":{"message":"8319724: [Lilliput] ParallelGC: Forwarded objects found during heap inspection\n\nBackport-of: 0568386e062474b1fc31e2e7106db0079ded7d76"},"files":[{"filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp"}],"sha":"d139dae3677fa7be2eed17c97a3eff487edbdcfb"},{"commit":{"message":"8319524: [Lilliput] Only warn when compact headers are explicitly enabled\n\nBackport-of: 3f73f014097262455cc42a71c32af374b77b6efd"},"files":[],"sha":"4876421bcea7d14feb901bd1d2c66b08bea8338b"},{"commit":{"message":"8319135: [Lilliput] Fix objArrayOop gtest\n\nBackport-of: fc9020fbf193b1c6d2b2fb5d80192c3082dbcf2e"},"files":[],"sha":"0406563a390d7a2fc92ff55531050c66f72f2753"},{"commit":{"message":"8319163: [Lilliput\/JDK21] Fix arrayOopDesc gtest\n\nReviewed-by: shade"},"files":[],"sha":"4af2fad9c24fdf815f03a950092ba5656d964653"},{"commit":{"message":"8317954: [Lilliput\/JDK21] Make C2 LoadNKlassCompactHeader more robust\n\nReviewed-by: shade"},"files":[],"sha":"6954ee334950f6173d33dd4c99b0a7d010492056"},{"commit":{"message":"8316687: [Lilliput\/JDK21] Various cleanups\n\nReviewed-by: shade"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp"}],"sha":"852ea4bdf8add7e87cf7bd5145da8420932bb342"},{"commit":{"message":"8316442: [Lilliput\/JDK21] Problem-list compiler\/ciReplay tests\n\nReviewed-by: shade"},"files":[],"sha":"3816aeef3456db32de1116c511fd3b15040d7ed4"},{"commit":{"message":"8316424: [Lilliput\/JDK21] ZGC\/CDS-related test fixes\n\nReviewed-by: shade"},"files":[],"sha":"5504c7ae16ca77458785de8ec8851302707c2c37"},{"commit":{"message":"8316367: [Lilliput\/JDK21] Provide infrastructure for Lilliput-specific ProblemList\n\nReviewed-by: shade"},"files":[],"sha":"2d4b15bf52dc8da19fd91a1a2acd29031ed8e4a3"},{"commit":{"message":"8316126: [Lilliput\/JDK21] Cherry-pick: 8305895: Implementation: JEP 450: Compact Object Headers (Experimental)\n\nReviewed-by: shade"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/c1_CodeStubs_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/c1_CodeStubs_s390.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp"},{"filename":"src\/hotspot\/share\/oops\/klass.cpp"},{"filename":"src\/hotspot\/share\/oops\/klass.inline.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp"},{"filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/TestPLABPromotion.java"}],"sha":"7f167ee2d59b5d8877657fe2ebcc34f702aa62cc"},{"commit":{"message":"8316108: [Lilliput\/JDK21] Cherry-pick: 8305898: Alternative self-forwarding mechanism\n\nReviewed-by: shade"},"files":[],"sha":"b14946110d59e128334778059ad83f48be958695"},{"commit":{"message":"8315046: [Lilliput\/JDK21] Cherry-pick: 8305896: Alternative full GC forwarding\n\nReviewed-by: shade"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp"},{"filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"882ff1417ac89181712aacc04d2ae734d435c27a"},{"commit":{"message":"8315047: [Lilliput\/JDK21] Some additions to 8139457: Array bases are aligned at HeapWord granularity\n\nReviewed-by: shade"},"files":[],"sha":"51108cb80ec4e524e6550dd4b392a8a5c66bcfc5"},{"commit":{"message":"8314485: [Lilliput\/JDK21] Cherry-pick: 8139457: Array bases are aligned at HeapWord granularity\n\nReviewed-by: shade"},"files":[{"filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp"},{"filename":"src\/hotspot\/share\/opto\/type.cpp"}],"sha":"98e7eddc3008f5c650d04b0e3bb4dc2e9b49a24f"}]