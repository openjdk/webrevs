{"files":[{"patch":"@@ -73,0 +73,2 @@\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/riscv\/c2_CodeStubs_riscv.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1606,2 +1606,2 @@\n-  ld(t0, Address(xthread, JavaThread::preempt_alternate_return_offset()));\n-  beqz(t0, not_preempted);\n+  ld(t1, Address(xthread, JavaThread::preempt_alternate_return_offset()));\n+  beqz(t1, not_preempted);\n@@ -1609,1 +1609,1 @@\n-  jr(t0);\n+  jr(t1);\n@@ -1619,2 +1619,2 @@\n-  la(t0, ExternalAddress(Interpreter::cont_resume_interpreter_adapter()));\n-  jalr(t0);\n+  la(t1, ExternalAddress(Interpreter::cont_resume_interpreter_adapter()));\n+  jalr(t1);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1809,2 +1809,2 @@\n-    __ ld(t0, Address(xthread, JavaThread::preempt_alternate_return_offset()));\n-    __ beqz(t0, native_return);\n+    __ ld(t1, Address(xthread, JavaThread::preempt_alternate_return_offset()));\n+    __ beqz(t1, native_return);\n@@ -1812,1 +1812,1 @@\n-    __ jr(t0);\n+    __ jr(t1);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3899,3 +3899,3 @@\n-    __ la(t0, ExternalAddress(ContinuationEntry::thaw_call_pc_address()));\n-    __ ld(t0, Address(t0));\n-    __ jr(t0);\n+    __ la(t1, ExternalAddress(ContinuationEntry::thaw_call_pc_address()));\n+    __ ld(t1, Address(t1));\n+    __ jr(t1);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3899,1 +3899,0 @@\n-\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}