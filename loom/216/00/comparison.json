{"files":[{"patch":"@@ -1447,1 +1447,3 @@\n-        int parallelism, maxPoolSize, minRunnable;\n+        int parallelism, maxPoolSize, minRunnable, corePoolSize;\n+        long keepAliveTime;\n+        TimeUnit timeUnit;\n@@ -1451,0 +1453,3 @@\n+        String corePoolSizeValue = System.getProperty(\"jdk.virtualThreadScheduler.corePoolSize\");\n+        String keepAliveTimeValue = System.getProperty(\"jdk.virtualThreadScheduler.keepAliveTime\");\n+        String timeUnitValue = System.getProperty(\"jdk.virtualThreadScheduler.timeUnit\");\n@@ -1467,0 +1472,20 @@\n+        if (corePoolSizeValue != null) {\n+            corePoolSize = Integer.parseInt(corePoolSizeValue);\n+        } else {\n+            corePoolSize = 0;\n+        }\n+        if (keepAliveTimeValue != null) {\n+            keepAliveTime = Long.parseLong(keepAliveTimeValue);\n+        } else {\n+            keepAliveTime = 30;\n+        }\n+        switch(timeUnitValue) {\n+            case \"NANOSECONDS\": timeUnit = NANOSECONDS; break;\n+            case \"MICROSECONDS\": timeUnit = MICROSECONDS; break;\n+            case \"MILLISECONDS\": timeUnit = MILLISECONDS; break;\n+            case \"SECONDS\": timeUnit = SECONDS; break;\n+            case \"MINUTES\": timeUnit = MINUTES; break;\n+            case \"HOURS\": timeUnit = HOURS; break;\n+            case \"DAYS\": timeUnit = DAYS; break;\n+            default: timeUnit = SECONDS;\n+        }\n@@ -1470,1 +1495,1 @@\n-                     0, maxPoolSize, minRunnable, pool -> true, 30, SECONDS);\n+                    corePoolSize, maxPoolSize, minRunnable, pool -> true, keepAliveTime, timeUnit);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"}]}