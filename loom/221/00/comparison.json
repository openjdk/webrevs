{"files":[{"patch":"@@ -1886,3 +1886,2 @@\n-      ELIMINATED_SCALAR_REPLACED = 0,\n-      ELIMINATED_MONITOR = 1,\n-      LOCKED = 2,\n+      LOCKED = 0,\n+      ELIMINATED = 1,\n@@ -1990,1 +1989,1 @@\n-            _locks->push(OwnedLock(depth, OwnedLock::ELIMINATED_SCALAR_REPLACED, OopHandle(Universe::vm_global(), k->klass_holder())));\n+            _locks->push(OwnedLock(depth, OwnedLock::ELIMINATED, OopHandle(Universe::vm_global(), k->klass_holder())));\n@@ -1992,3 +1991,4 @@\n-            oop owner = monitor->owner();\n-            if (owner != nullptr) {\n-              _locks->push(OwnedLock(depth, OwnedLock::ELIMINATED_MONITOR, OopHandle(Universe::vm_global(), owner)));\n+            Handle owner(current, monitor->owner());\n+            if (owner.not_null()) {\n+              Klass* k = owner->klass();\n+              _locks->push(OwnedLock(depth, OwnedLock::ELIMINATED, OopHandle(Universe::vm_global(), k->klass_holder())));\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -165,3 +165,0 @@\n-        \/\/ Lock object is a class of the eliminated monitor\n-        ELIMINATED_SCALAR_REPLACED,\n-        ELIMINATED_MONITOR,\n@@ -169,0 +166,2 @@\n+        \/\/ Lock object is a class of the eliminated monitor\n+        ELIMINATED,\n@@ -206,1 +205,1 @@\n-            if (type == OwnedLockType.ELIMINATED_SCALAR_REPLACED) {\n+            if (type == OwnedLockType.ELIMINATED) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/ThreadSnapshot.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -448,1 +448,1 @@\n-     * Test thread dump wth a thread owning a monitor.\n+     * Test thread dump with a thread owning a monitor.\n@@ -518,1 +518,1 @@\n-     * Test thread dump wth a thread owning a monitor for an object that is scalar replaced.\n+     * Test thread dump with a thread owning a monitor for an object that is scalar replaced.\n","filename":"test\/jdk\/com\/sun\/management\/HotSpotDiagnosticMXBean\/DumpThreads.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}