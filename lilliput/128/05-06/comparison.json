{"files":[{"patch":"@@ -163,1 +163,1 @@\n-  static inline Klass* decode_raw(narrowKlass v, address narrow_base, int narrow_shift);\n+  static inline Klass* decode_raw(narrowKlass v, address base, int shift);\n@@ -168,1 +168,1 @@\n-  static inline narrowKlass encode_raw(Klass* k, address narrow_base, int narrow_shift);\n+  static inline narrowKlass encode_raw(Klass* k, address base, int shift);\n@@ -174,1 +174,1 @@\n-  inline static void check_valid_klass(const Klass* k, address narrow_base, int narrow_shift);\n+  inline static void check_valid_klass(const Klass* k, address base, int shift);\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-inline Klass* CompressedKlassPointers::decode_raw(narrowKlass v, address narrow_base, int narrow_shift) {\n-  return (Klass*)((uintptr_t)narrow_base +((uintptr_t)v << narrow_shift));\n+inline Klass* CompressedKlassPointers::decode_raw(narrowKlass v, address base, int shift) {\n+  return (Klass*)((uintptr_t)base +((uintptr_t)v << shift));\n@@ -54,2 +54,2 @@\n-inline narrowKlass CompressedKlassPointers::encode_raw(Klass* k, address narrow_base, int narrow_shift) {\n-  return (narrowKlass)(pointer_delta(k, narrow_base, 1) >> narrow_shift);\n+inline narrowKlass CompressedKlassPointers::encode_raw(Klass* k, address base, int shift) {\n+  return (narrowKlass)(pointer_delta(k, base, 1) >> shift);\n@@ -72,2 +72,2 @@\n-inline void CompressedKlassPointers::check_valid_klass(const Klass* k, address narrow_base, int narrow_shift) {\n-  const int log_alignment = MAX2(3, narrow_shift); \/\/ always at least 64-bit aligned\n+inline void CompressedKlassPointers::check_valid_klass(const Klass* k, address base, int shift) {\n+  const int log_alignment = MAX2(3, shift); \/\/ always at least 64-bit aligned\n@@ -75,3 +75,3 @@\n-         p2i(k), nth_bit(narrow_shift));\n-  const address encoding_end = narrow_base + nth_bit(narrow_klass_pointer_bits() + narrow_shift);\n-  assert((address)k >= narrow_base && (address)k < encoding_end,\n+         p2i(k), nth_bit(shift));\n+  const address encoding_end = base + nth_bit(narrow_klass_pointer_bits() + shift);\n+  assert((address)k >= base && (address)k < encoding_end,\n@@ -79,1 +79,1 @@\n-         p2i(k), p2i(narrow_base), p2i(encoding_end));\n+         p2i(k), p2i(base), p2i(encoding_end));\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.inline.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}