{"files":[{"patch":"@@ -126,1 +126,1 @@\n-        if (fwd_mark.is_expanded() && klass->expand_for_hash(fwd)) {\n+        if (fwd_mark.is_expanded() && klass->expand_for_hash(fwd, fwd_mark)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1339,1 +1339,1 @@\n-bool Klass::expand_for_hash(oop obj) const {\n+bool Klass::expand_for_hash(oop obj, markWord m) const {\n@@ -1341,2 +1341,2 @@\n-  assert((size_t)hash_offset_in_bytes(obj) <= (obj->base_size_given_klass(obj->mark(), this) * HeapWordSize), \"hash offset must be eq or lt base size: hash offset: %d, base size: %zu\", hash_offset_in_bytes(obj), obj->base_size_given_klass(obj->mark(), this) * HeapWordSize);\n-  return obj->base_size_given_klass(obj->mark(), this) * HeapWordSize - hash_offset_in_bytes(obj) < (int)sizeof(uint32_t);\n+  assert((size_t)hash_offset_in_bytes(obj) <= (obj->base_size_given_klass(m, this) * HeapWordSize), \"hash offset must be eq or lt base size: hash offset: %d, base size: %zu\", hash_offset_in_bytes(obj), obj->base_size_given_klass(m, this) * HeapWordSize);\n+  return obj->base_size_given_klass(m, this) * HeapWordSize - hash_offset_in_bytes(obj) < (int)sizeof(uint32_t);\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-  bool expand_for_hash(oop obj) const;\n+  bool expand_for_hash(oop obj, markWord m) const;\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-    if (mrk.is_expanded() && kls->expand_for_hash(cast_to_oop(this))) {\n+    if (mrk.is_expanded() && kls->expand_for_hash(cast_to_oop(this), mrk)) {\n@@ -216,1 +216,1 @@\n-    if (mark.is_hashed_not_expanded() && klass->expand_for_hash(cast_to_oop(this))) {\n+    if (mark.is_hashed_not_expanded() && klass->expand_for_hash(cast_to_oop(this), mark)) {\n@@ -228,1 +228,1 @@\n-    if (mark.is_hashed_not_expanded() && klass->expand_for_hash(cast_to_oop(this))) {\n+    if (mark.is_hashed_not_expanded() && klass->expand_for_hash(cast_to_oop(this), mark)) {\n@@ -231,1 +231,1 @@\n-    if (mark.is_not_hashed_expanded() && klass->expand_for_hash(cast_to_oop(this))) {\n+    if (mark.is_not_hashed_expanded() && klass->expand_for_hash(cast_to_oop(this), mark)) {\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}