{"files":[{"patch":"@@ -81,0 +81,3 @@\n+TOOL_GENERATECASEFOLDING = $(JAVA_SMALL) -cp $(BUILDTOOLS_OUTPUTDIR)\/jdk_tools_classes \\\n+    build.tools.generatecharacter.CaseFolding\n+\n","filename":"make\/ToolsJdk.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package build.tools.generatecharacter;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.StandardOpenOption;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public class CaseFolding {\n+\n+    public static void main(String[] args) throws Throwable {\n+        if (args.length != 3) {\n+            System.err.println(\"Usage: java CaseFolding TemplateFile CaseFolding.txt CaseFolding.java\");\n+            System.exit(1);\n+        }\n+        var templateFile = Paths.get(args[0]);\n+        var caseFoldingTxt = Paths.get(args[1]);\n+        var genSrcFile = Paths.get(args[2]);\n+        var supportedTypes = \"^.*; [CTS]; .*$\";\n+        var caseFoldingEntries = Files.lines(caseFoldingTxt)\n+            .filter(line -> !line.startsWith(\"#\") && line.matches(supportedTypes))\n+            .map(line -> {\n+                String[] cols = line.split(\"; \");\n+                return new String[] {cols[0], cols[1], cols[2]};\n+            })\n+            .filter(cols -> {\n+                \/\/  the folding case doesn't map back to the original char.\n+                var cp1 = Integer.parseInt(cols[0], 16);\n+                var cp2 = Integer.parseInt(cols[2], 16);\n+                return Character.toUpperCase(cp2) != cp1 && Character.toLowerCase(cp2) != cp1;\n+            })\n+            .map(cols -> String.format(\"        entry(0x%s, 0x%s)\", cols[0], cols[2]))\n+            .collect(Collectors.joining(\",\\n\", \"\", \"\"));\n+\n+        \/\/ hack, hack, hack! the logic does not pick 0131. just add manually to support 'I's.\n+        \/\/ 0049; T; 0131; # LATIN CAPITAL LETTER I\n+        final String T_0x0131_0x49 = String.format(\"        entry(0x%04x, 0x%04x),\\n\", 0x0131, 0x49);\n+\n+        \/\/ Generate .java file\n+        Files.write(\n+            genSrcFile,\n+            Files.lines(templateFile)\n+                .map(line -> line.contains(\"%%%Entries\") ? T_0x0131_0x49 + caseFoldingEntries : line)\n+                .collect(Collectors.toList()),\n+            StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);\n+    }\n+}\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatecharacter\/CaseFolding.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -53,0 +53,17 @@\n+GENSRC_CASEFOLDING := $(SUPPORT_OUTPUTDIR)\/gensrc\/java.base\/jdk\/internal\/util\/regex\/CaseFolding.java\n+\n+CASEFOLDINGTEMP := $(MODULE_SRC)\/share\/classes\/jdk\/internal\/util\/regex\/CaseFolding.java.template\n+CASEFOLDINGTXT := $(MODULE_SRC)\/share\/data\/unicodedata\/CaseFolding.txt\n+\n+$(GENSRC_CASEFOLDING): $(BUILD_TOOLS_JDK) $(CASEFOLDINGTEMP) $(CASEFOLDINGTXT)\n+\t$(call LogInfo, Generating $@)\n+\t$(call MakeTargetDir)\n+\t$(TOOL_GENERATECASEFOLDING) \\\n+\t    $(CASEFOLDINGTEMP) \\\n+\t    $(CASEFOLDINGTXT) \\\n+\t    $(GENSRC_CASEFOLDING)\n+\n+TARGETS += $(GENSRC_CASEFOLDING)\n+\n+################################################################################\n+\n","filename":"make\/modules\/java.base\/gensrc\/GensrcRegex.gmk","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+        --add-exports java.base\/jdk.internal.jimage=ALL-UNNAMED \\\n","filename":"make\/test\/BuildMicrobenchmark.gmk","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-     * certain command line options of the demo or from the demo applet parameters are\n+     * certain command line options of the demo\n","filename":"src\/demo\/share\/jfc\/J2Ddemo\/java2d\/RunWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -409,7 +409,0 @@\n-        } catch (@SuppressWarnings(\"removal\") java.security.AccessControlException ace) {\n-            String errmsg = \"Applet access control exception; to allow \"\n-                    + \"access to printer, set\\n\"\n-                    + \"permission for \\\"queuePrintJob\\\" in \"\n-                    + \"RuntimePermission.\";\n-            JOptionPane.showMessageDialog(this, errmsg, \"Printer Access Error\",\n-                    JOptionPane.ERROR_MESSAGE);\n","filename":"src\/demo\/share\/jfc\/J2Ddemo\/java2d\/Tools.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    \/\/ contentPane cache, saved from the applet or application frame\n+    \/\/ contentPane cache, saved from the application frame\n@@ -180,1 +180,1 @@\n-     * SwingSet2 Main. Called only if we're an application, not an applet.\n+     * SwingSet2 Main.\n@@ -719,2 +719,1 @@\n-     * Returns the content pane whether we're in an applet\n-     * or application\n+     * Returns the content pane\n","filename":"src\/demo\/share\/jfc\/SwingSet2\/SwingSet2.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -6802,0 +6802,1 @@\n+  block_comment(\"spin_wait {\");\n@@ -6820,0 +6821,1 @@\n+  block_comment(\"}\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8891,2 +8891,1 @@\n-  format %{ \"MOV    Rexception_pc, LR\\n\\t\"\n-            \"jump   $jump_target  \\t! $method_ptr holds method\" %}\n+  format %{ \"jump   $jump_target  \\t! $method_ptr holds method\" %}\n@@ -8894,4 +8893,0 @@\n-    __ mov(Rexception_pc, LR);   \/\/ this is used only to call\n-                                 \/\/ StubRoutines::forward_exception_entry()\n-                                 \/\/ which expects PC of exception in\n-                                 \/\/ R5. FIXME?\n@@ -8942,1 +8937,2 @@\n-  format %{ \"b    forward_exception_stub\" %}\n+  format %{ \"MOV  Rexception_pc, LR\\n\\t\"\n+            \"b    forward_exception_entry\" %}\n@@ -8944,0 +8940,1 @@\n+    __ mov(Rexception_pc, LR);\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,7 @@\n-  do_arch_blob(preuniverse, 0)                                          \\\n+  do_arch_blob(preuniverse, 500)                                        \\\n+  do_stub(preuniverse, atomic_load_long)                                \\\n+  do_arch_entry(Arm, preuniverse, atomic_load_long,                     \\\n+                atomic_load_long_entry, atomic_load_long_entry)         \\\n+  do_stub(preuniverse, atomic_store_long)                               \\\n+  do_arch_entry(Arm, preuniverse, atomic_store_long,                    \\\n+                atomic_store_long_entry, atomic_store_long_entry)       \\\n@@ -44,6 +50,0 @@\n-  do_stub(initial, atomic_load_long)                                    \\\n-  do_arch_entry(Arm, initial, atomic_load_long,                         \\\n-                atomic_load_long_entry, atomic_load_long_entry)         \\\n-  do_stub(initial, atomic_store_long)                                   \\\n-  do_arch_entry(Arm, initial, atomic_store_long,                        \\\n-                atomic_store_long_entry, atomic_store_long_entry)       \\\n","filename":"src\/hotspot\/cpu\/arm\/stubDeclarations_arm.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3130,1 +3130,8 @@\n-    \/\/ preuniverse stubs are not needed for arm\n+    \/\/ Atomics are used in universe initialization code (e.g. CDS relocation),\n+    \/\/ therefore we need to generate real stubs very early on.\n+    StubRoutines::_atomic_add_entry = generate_atomic_add();\n+    StubRoutines::_atomic_xchg_entry = generate_atomic_xchg();\n+    StubRoutines::_atomic_cmpxchg_entry = generate_atomic_cmpxchg();\n+    StubRoutines::_atomic_cmpxchg_long_entry = generate_atomic_cmpxchg_long();\n+    StubRoutines::Arm::_atomic_load_long_entry = generate_atomic_load_long();\n+    StubRoutines::Arm::_atomic_store_long_entry = generate_atomic_store_long();\n@@ -3154,8 +3161,0 @@\n-\n-    StubRoutines::_atomic_add_entry = generate_atomic_add();\n-    StubRoutines::_atomic_xchg_entry = generate_atomic_xchg();\n-    StubRoutines::_atomic_cmpxchg_entry = generate_atomic_cmpxchg();\n-    StubRoutines::_atomic_cmpxchg_long_entry = generate_atomic_cmpxchg_long();\n-    StubRoutines::Arm::_atomic_load_long_entry = generate_atomic_load_long();\n-    StubRoutines::Arm::_atomic_store_long_entry = generate_atomic_store_long();\n-\n","filename":"src\/hotspot\/cpu\/arm\/stubGenerator_arm.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  address reloc_destination(address orig_address);\n+  address reloc_destination();\n@@ -69,1 +69,1 @@\n-  bool set_destination_mt_safe(address dest, bool assert_lock = true);\n+  bool set_destination_mt_safe(address dest);\n@@ -91,1 +91,1 @@\n-  assert(cb && cb->is_nmethod(), \"sanity\");\n+  assert(cb != nullptr && cb->is_nmethod(), \"nmethod expected\");\n@@ -99,1 +99,1 @@\n-address NativeFarCall::reloc_destination(address orig_address) {\n+address NativeFarCall::reloc_destination() {\n@@ -101,0 +101,1 @@\n+  assert(NativeFarCall::is_at(call_addr), \"unexpected code at call site\");\n@@ -106,2 +107,2 @@\n-  if (code != nullptr && code->is_nmethod()) {\n-    stub_addr = trampoline_stub_Relocation::get_trampoline_for(call_addr, (nmethod*)code);\n+  if (code->is_nmethod()) {\n+    stub_addr = trampoline_stub_Relocation::get_trampoline_for(call_addr, code->as_nmethod());\n@@ -113,0 +114,1 @@\n+\n@@ -131,1 +133,1 @@\n-bool NativeFarCall::set_destination_mt_safe(address dest, bool assert_lock) {\n+bool NativeFarCall::set_destination_mt_safe(address dest) {\n@@ -133,2 +135,1 @@\n-  assert(!assert_lock ||\n-         (CodeCache_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n+  assert((CodeCache_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n@@ -138,3 +139,0 @@\n-  address call_addr = addr_at(0);\n-  assert(NativeFarCall::is_at(call_addr), \"unexpected code at call site\");\n-\n@@ -142,1 +140,0 @@\n-\n@@ -159,2 +156,2 @@\n-  if (code != nullptr && code->is_nmethod()) {\n-    stub_addr = trampoline_stub_Relocation::get_trampoline_for(call_addr, (nmethod*)code);\n+  if (code->is_nmethod()) {\n+    stub_addr = trampoline_stub_Relocation::get_trampoline_for(call_addr, code->as_nmethod());\n@@ -162,1 +159,0 @@\n-\n@@ -212,1 +208,1 @@\n-      (MacroAssembler::extract_rd(addr + 2 * instr_size)  == x1)) {\n+      (MacroAssembler::extract_rd(addr + 2 * instr_size)   == x1)) {\n@@ -241,2 +237,2 @@\n-address NativeCall::reloc_destination(address orig_address) {\n-  return NativeFarCall::at(addr_at(0))->reloc_destination(orig_address);\n+address NativeCall::reloc_destination() {\n+  return NativeFarCall::at(addr_at(0))->reloc_destination();\n@@ -257,2 +253,2 @@\n-bool NativeCall::set_destination_mt_safe(address dest, bool assert_lock) {\n-  return NativeFarCall::at(addr_at(0))->set_destination_mt_safe(dest, assert_lock);\n+bool NativeCall::set_destination_mt_safe(address dest) {\n+  return NativeFarCall::at(addr_at(0))->set_destination_mt_safe(dest);\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp","additions":17,"deletions":21,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-  address reloc_destination(address orig_address);\n+  address reloc_destination();\n@@ -144,1 +144,1 @@\n-  bool set_destination_mt_safe(address dest, bool assert_lock = true);\n+  bool set_destination_mt_safe(address dest);\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  assert(is_call(), \"should be an address instruction here\");\n+  assert(is_call(), \"should be a call here\");\n@@ -77,1 +77,1 @@\n-    return nativeCall_at(addr())->reloc_destination(orig_addr);\n+    return nativeCall_at(addr())->reloc_destination();\n@@ -79,1 +79,1 @@\n-  \/\/ Non call reloc\n+\n@@ -81,1 +81,0 @@\n-    \/\/ the extracted address from the instructions in address orig_addr\n@@ -90,0 +89,1 @@\n+\n@@ -94,1 +94,1 @@\n-  assert(is_call(), \"should be an address instruction here\");\n+  assert(is_call(), \"should be a call here\");\n@@ -96,4 +96,5 @@\n-    NativeCall* nc = nativeCall_at(addr());\n-    if (nc->reloc_set_destination(x)) {\n-      return;\n-    }\n+    NativeCall* call = nativeCall_at(addr());\n+    call->reloc_set_destination(x);\n+  } else {\n+    MacroAssembler::pd_patch_instruction_size(addr(), x);\n+    assert(pd_call_destination(addr()) == x, \"fail in reloc\");\n@@ -101,3 +102,0 @@\n-  MacroAssembler::pd_patch_instruction_size(addr(), x);\n-  address pd_call = pd_call_destination(addr());\n-  assert(pd_call == x, \"fail in reloc\");\n","filename":"src\/hotspot\/cpu\/riscv\/relocInfo_riscv.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1988,9 +1988,22 @@\n-  int max_size = max_vector_size(bt);\n-  \/\/ Limit the min vector size to 8 bytes.\n-  int size = 8 \/ type2aelembytes(bt);\n-  if (bt == T_BYTE) {\n-    \/\/ To support vector api shuffle\/rearrange.\n-    size = 4;\n-  } else if (bt == T_BOOLEAN) {\n-    \/\/ To support vector api load\/store mask.\n-    size = 2;\n+  int size;\n+  switch(bt) {\n+    case T_BOOLEAN:\n+      \/\/ Load\/store a vector mask with only 2 elements for vector types\n+      \/\/ such as \"2I\/2F\/2L\/2D\".\n+      size = 2;\n+      break;\n+    case T_BYTE:\n+      \/\/ Generate a \"4B\" vector, to support vector cast between \"8B\/16B\"\n+      \/\/ and \"4S\/4I\/4L\/4F\/4D\".\n+      size = 4;\n+      break;\n+    case T_SHORT:\n+      \/\/ Generate a \"2S\" vector, to support vector cast between \"4S\/8S\"\n+      \/\/ and \"2I\/2L\/2F\/2D\".\n+      size = 2;\n+      break;\n+    default:\n+      \/\/ Limit the min vector length to 64-bit.\n+      size = 8 \/ type2aelembytes(bt);\n+      \/\/ The number of elements in a vector should be at least 2.\n+      size = MAX2(size, 2);\n@@ -1998,1 +2011,2 @@\n-  if (size < 2) size = 2;\n+\n+  int max_size = max_vector_size(bt);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -443,1 +443,0 @@\n-#ifndef PRODUCT\n@@ -460,1 +459,0 @@\n-#endif\n@@ -1025,2 +1023,0 @@\n-  } else if (FLAG_IS_DEFAULT(UseAPX)) {\n-    FLAG_SET_DEFAULT(UseAPX, apx_supported ? true : false);\n@@ -1484,10 +1480,0 @@\n-      if (supports_sse4_2()) {\n-        if (FLAG_IS_DEFAULT(UseSSE42Intrinsics)) {\n-          FLAG_SET_DEFAULT(UseSSE42Intrinsics, true);\n-        }\n-      } else {\n-        if (UseSSE42Intrinsics && !FLAG_IS_DEFAULT(UseAESIntrinsics)) {\n-          warning(\"SSE4.2 intrinsics require SSE4.2 instructions or higher. Intrinsics will be disabled.\");\n-        }\n-        FLAG_SET_DEFAULT(UseSSE42Intrinsics, false);\n-      }\n@@ -1538,10 +1524,0 @@\n-    if (supports_sse4_2()) {\n-      if (FLAG_IS_DEFAULT(UseSSE42Intrinsics)) {\n-        FLAG_SET_DEFAULT(UseSSE42Intrinsics, true);\n-      }\n-    } else {\n-      if (UseSSE42Intrinsics && !FLAG_IS_DEFAULT(UseAESIntrinsics)) {\n-        warning(\"SSE4.2 intrinsics require SSE4.2 instructions or higher. Intrinsics will be disabled.\");\n-      }\n-      FLAG_SET_DEFAULT(UseSSE42Intrinsics, false);\n-    }\n@@ -1636,10 +1612,0 @@\n-      if (supports_sse4_2()) {\n-        if (FLAG_IS_DEFAULT(UseSSE42Intrinsics)) {\n-          FLAG_SET_DEFAULT(UseSSE42Intrinsics, true);\n-        }\n-      } else {\n-        if (UseSSE42Intrinsics && !FLAG_IS_DEFAULT(UseAESIntrinsics)) {\n-          warning(\"SSE4.2 intrinsics require SSE4.2 instructions or higher. Intrinsics will be disabled.\");\n-        }\n-        FLAG_SET_DEFAULT(UseSSE42Intrinsics, false);\n-      }\n@@ -1706,1 +1672,10 @@\n-\n+  if (supports_sse4_2()) {\n+    if (FLAG_IS_DEFAULT(UseSSE42Intrinsics)) {\n+      FLAG_SET_DEFAULT(UseSSE42Intrinsics, true);\n+    }\n+  } else {\n+    if (UseSSE42Intrinsics && !FLAG_IS_DEFAULT(UseSSE42Intrinsics)) {\n+      warning(\"SSE4.2 intrinsics require SSE4.2 instructions or higher. Intrinsics will be disabled.\");\n+    }\n+    FLAG_SET_DEFAULT(UseSSE42Intrinsics, false);\n+  }\n@@ -3154,3 +3129,0 @@\n-  \/\/ Enable APX support for product builds after\n-  \/\/ completion of planned features listed in JDK-8329030.\n-#if !defined(PRODUCT)\n@@ -3162,3 +3134,0 @@\n-#else\n-  return false;\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":10,"deletions":41,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -183,0 +183,4 @@\n+    StubRoutines::_atomic_xchg_entry         = ShouldNotCallThisStub();\n+    StubRoutines::_atomic_cmpxchg_entry      = ShouldNotCallThisStub();\n+    StubRoutines::_atomic_cmpxchg_long_entry = ShouldNotCallThisStub();\n+    StubRoutines::_atomic_add_entry          = ShouldNotCallThisStub();\n@@ -195,6 +199,0 @@\n-\n-    \/\/ atomic calls\n-    StubRoutines::_atomic_xchg_entry         = ShouldNotCallThisStub();\n-    StubRoutines::_atomic_cmpxchg_entry      = ShouldNotCallThisStub();\n-    StubRoutines::_atomic_cmpxchg_long_entry = ShouldNotCallThisStub();\n-    StubRoutines::_atomic_add_entry          = ShouldNotCallThisStub();\n","filename":"src\/hotspot\/cpu\/zero\/stubGenerator_zero.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2643,1 +2643,0 @@\n-#if !defined(PRODUCT)\n@@ -2651,1 +2650,0 @@\n-#endif\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -432,1 +432,0 @@\n-#if !defined(PRODUCT) && defined(_LP64)\n@@ -438,1 +437,0 @@\n-#endif\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -258,1 +258,0 @@\n-#if !defined(PRODUCT) && defined(_LP64)\n@@ -264,1 +263,0 @@\n-#endif\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  #define TIME_LINEAR_SCAN(timer_name)  TraceTime _block_timer(\"\", _total_timer.timer(LinearScanTimers::timer_name), TimeLinearScan || TimeEachLinearScan, Verbose);\n+  #define TIME_LINEAR_SCAN(timer_name)  TraceTime _block_timer(\"\", _total_timer.timer(LinearScanTimers::timer_name), TimeLinearScan, Verbose);\n@@ -3019,2 +3019,0 @@\n-  NOT_PRODUCT(_total_timer.begin_method());\n-\n@@ -3075,1 +3073,0 @@\n-  NOT_PRODUCT(_total_timer.end_method(this));\n@@ -6730,39 +6727,0 @@\n-void LinearScanTimers::begin_method() {\n-  if (TimeEachLinearScan) {\n-    \/\/ reset all timers to measure only current method\n-    for (int i = 0; i < number_of_timers; i++) {\n-      timer(i)->reset();\n-    }\n-  }\n-}\n-\n-void LinearScanTimers::end_method(LinearScan* allocator) {\n-  if (TimeEachLinearScan) {\n-\n-    double c = timer(timer_do_nothing)->seconds();\n-    double total = 0;\n-    for (int i = 1; i < number_of_timers; i++) {\n-      total += timer(i)->seconds() - c;\n-    }\n-\n-    if (total >= 0.0005) {\n-      \/\/ print all information in one line for automatic processing\n-      tty->print(\"@\"); allocator->compilation()->method()->print_name();\n-\n-      tty->print(\"@ %d \", allocator->compilation()->method()->code_size());\n-      tty->print(\"@ %d \", allocator->block_at(allocator->block_count() - 1)->last_lir_instruction_id() \/ 2);\n-      tty->print(\"@ %d \", allocator->block_count());\n-      tty->print(\"@ %d \", allocator->num_virtual_regs());\n-      tty->print(\"@ %d \", allocator->interval_count());\n-      tty->print(\"@ %d \", allocator->_num_calls);\n-      tty->print(\"@ %d \", allocator->num_loops());\n-\n-      tty->print(\"@ %6.6f \", total);\n-      for (int i = 1; i < number_of_timers; i++) {\n-        tty->print(\"@ %4.1f \", ((timer(i)->seconds() - c) \/ total) * 100);\n-      }\n-      tty->cr();\n-    }\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.cpp","additions":1,"deletions":43,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -951,3 +951,0 @@\n-\n-  void begin_method();                     \/\/ called for each method when register allocation starts\n-  void end_method(LinearScan* allocator);  \/\/ called for each method when register allocation completed\n@@ -955,1 +952,0 @@\n-\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -215,3 +215,0 @@\n-  develop(bool, TimeEachLinearScan, false,                                  \\\n-          \"print detailed timing of each LinearScan run\")                   \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/c1\/c1_globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -412,1 +412,1 @@\n-      aot_log_info(aot)(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n+      MetaspaceShared::report_loading_error(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n@@ -1221,2 +1221,2 @@\n-      aot_log_info(aot)(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n-                    shared_region_name[i], p2i(requested_addr));\n+      MetaspaceShared::report_loading_error(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n+                                            shared_region_name[i], p2i(requested_addr));\n@@ -1235,2 +1235,2 @@\n-      aot_log_info(aot)(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n-                    shared_region_name[i], p2i(requested_addr));\n+      MetaspaceShared::report_loading_error(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n+                                            shared_region_name[i], p2i(requested_addr));\n@@ -1301,2 +1301,2 @@\n-      aot_log_info(aot)(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n-                    p2i(requested_base));\n+      MetaspaceShared::report_loading_error(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n+                                            p2i(requested_base));\n@@ -1314,1 +1314,1 @@\n-    aot_log_info(aot)(\"failed to map aot code region\");\n+    MetaspaceShared::report_loading_error(\"failed to map aot code region\");\n@@ -1690,3 +1690,3 @@\n-      aot_log_info(aot)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n-                    INTPTR_FORMAT \", size = %zu bytes\",\n-                    p2i(addr), _mapped_heap_memregion.byte_size());\n+      MetaspaceShared::report_loading_error(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+                                            INTPTR_FORMAT \", size = %zu bytes\",\n+                                            p2i(addr), _mapped_heap_memregion.byte_size());\n@@ -1928,3 +1928,3 @@\n-    aot_log_info(aot)(\"The %s's ObjectAlignmentInBytes of %d\"\n-                  \" does not equal the current ObjectAlignmentInBytes of %d.\",\n-                  file_type, _obj_alignment, ObjectAlignmentInBytes);\n+    MetaspaceShared::report_loading_error(\"The %s's ObjectAlignmentInBytes of %d\"\n+                                          \" does not equal the current ObjectAlignmentInBytes of %d.\",\n+                                          file_type, _obj_alignment, ObjectAlignmentInBytes);\n@@ -1934,4 +1934,4 @@\n-    aot_log_info(aot)(\"The %s's CompactStrings setting (%s)\"\n-                  \" does not equal the current CompactStrings setting (%s).\", file_type,\n-                  _compact_strings ? \"enabled\" : \"disabled\",\n-                  CompactStrings   ? \"enabled\" : \"disabled\");\n+    MetaspaceShared::report_loading_error(\"The %s's CompactStrings setting (%s)\"\n+                                          \" does not equal the current CompactStrings setting (%s).\", file_type,\n+                                          _compact_strings ? \"enabled\" : \"disabled\",\n+                                          CompactStrings   ? \"enabled\" : \"disabled\");\n@@ -2021,2 +2021,3 @@\n-      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used when the \"\n-                     \"java.system.class.loader property is specified.\", CDSConfig::type_of_archive_being_loaded());\n+      MetaspaceShared::report_loading_error(\"%s has aot-linked classes. It cannot be used when the \"\n+                                            \"java.system.class.loader property is specified.\",\n+                                            CDSConfig::type_of_archive_being_loaded());\n@@ -2034,4 +2035,4 @@\n-    aot_log_info(aot)(\"The %s's BytecodeVerificationLocal setting (%s)\"\n-                               \" does not equal the current BytecodeVerificationLocal setting (%s).\", file_type,\n-                               _verify_local ? \"enabled\" : \"disabled\",\n-                               BytecodeVerificationLocal ? \"enabled\" : \"disabled\");\n+    MetaspaceShared::report_loading_error(\"The %s's BytecodeVerificationLocal setting (%s)\"\n+                                          \" does not equal the current BytecodeVerificationLocal setting (%s).\", file_type,\n+                                          _verify_local ? \"enabled\" : \"disabled\",\n+                                          BytecodeVerificationLocal ? \"enabled\" : \"disabled\");\n@@ -2058,2 +2059,2 @@\n-    aot_log_warning(aot)(\"The setting of the AllowArchivingWithJavaAgent is different \"\n-                               \"from the setting in the %s.\", file_type);\n+    MetaspaceShared::report_loading_error(\"The setting of the AllowArchivingWithJavaAgent is different \"\n+                                          \"from the setting in the %s.\", file_type);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":27,"deletions":26,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -100,2 +100,0 @@\n-  template <bool keep_alive>\n-  friend class ClassLoaderDataGraphIteratorBase;\n@@ -103,2 +101,0 @@\n-  friend class ClassLoaderDataGraphKlassIteratorStatic;\n-  friend class ClassLoaderDataGraphMetaspaceIterator;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-  friend class ClassLoaderDataGraphMetaspaceIterator;\n@@ -39,1 +38,0 @@\n-  friend class ClassLoaderDataGraphKlassIteratorStatic;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataGraph.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-  bool _clearing_bitmap;\n+  bool _clear_bitmap_in_progress;\n@@ -82,1 +82,1 @@\n-    _clearing_bitmap(false),\n+    _clear_bitmap_in_progress(false),\n@@ -96,1 +96,1 @@\n-  void set_clearing_bitmap(bool v) { _clearing_bitmap = v; }\n+  void set_clear_bitmap_in_progress(bool v) { _clear_bitmap_in_progress = v; }\n@@ -110,1 +110,1 @@\n-  bool clearing_bitmap() const { return _clearing_bitmap; }\n+  bool clear_bitmap_in_progress() const { return _clear_bitmap_in_progress; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectorState.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1116,1 +1116,1 @@\n-  _g1h->collector_state()->set_clearing_bitmap(false);\n+  _g1h->collector_state()->set_clear_bitmap_in_progress(false);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -597,1 +597,1 @@\n-  collector_state()->set_clearing_bitmap(false);\n+  collector_state()->set_clear_bitmap_in_progress(false);\n@@ -1321,1 +1321,1 @@\n-  collector_state()->set_clearing_bitmap(true);\n+  collector_state()->set_clear_bitmap_in_progress(true);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1141,1 +1141,1 @@\n-      return (_g1h->collector_state()->clearing_bitmap() ||\n+      return (_g1h->collector_state()->clear_bitmap_in_progress() ||\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -415,2 +415,2 @@\n-      if (!UseAdaptiveNUMAChunkSizing                                ||\n-          (UseAdaptiveNUMAChunkSizing && NUMAChunkResizeWeight == 0) ||\n+      if (!UseAdaptiveNUMAChunkSizing ||\n+           NUMAChunkResizeWeight == 0 ||\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-  _clean_klass_tree_claimed(0),\n+  _clean_klass_tree_claimed(false),\n@@ -107,1 +107,1 @@\n-  return Atomic::cmpxchg(&_clean_klass_tree_claimed, 0, 1) == 0;\n+  return !Atomic::cmpxchg(&_clean_klass_tree_claimed, false, true);\n@@ -121,2 +121,0 @@\n-  ResourceMark rm;\n-\n@@ -125,1 +123,1 @@\n-    Klass::clean_subklass_tree();\n+    Klass::clean_weak_klass_links(true \/* class_unloading_occurred *\/, false \/* clean_alive_klasses *\/);\n@@ -131,1 +129,1 @@\n-    clean_klass(klass);\n+    Klass::clean_weak_instanceklass_links(klass);\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-\n+\/\/ Cleans out the Klass tree from stale data.\n@@ -57,1 +57,1 @@\n-  volatile int                            _clean_klass_tree_claimed;\n+  volatile bool _clean_klass_tree_claimed;\n@@ -60,4 +60,0 @@\n-public:\n-  KlassCleaningTask();\n-\n-private:\n@@ -68,4 +64,1 @@\n-\n-  void clean_klass(InstanceKlass* ik) {\n-    ik->clean_weak_instanceklass_links();\n-  }\n+  KlassCleaningTask();\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.hpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -80,0 +80,4 @@\n+  if (obj_klass == vmClasses::Class_klass()) {\n+    msg.append(\"  mirrored klass:       \" PTR_FORMAT \"\\n\", p2i(obj->metadata_field(java_lang_Class::klass_offset())));\n+    msg.append(\"  mirrored array klass: \" PTR_FORMAT \"\\n\", p2i(obj->metadata_field(java_lang_Class::array_klass_offset())));\n+  }\n@@ -271,1 +275,3 @@\n-  \/\/ We want to check class loading\/unloading did not corrupt them.\n+  \/\/ We want to check class loading\/unloading did not corrupt them. We can only reasonably\n+  \/\/ trust the forwarded objects, as the from-space object can have the klasses effectively\n+  \/\/ dead.\n@@ -274,1 +280,1 @@\n-    Metadata* klass = obj->metadata_field(java_lang_Class::klass_offset());\n+    const Metadata* klass = fwd->metadata_field(java_lang_Class::klass_offset());\n@@ -277,1 +283,1 @@\n-                    \"Instance class mirror should point to Metaspace\",\n+                    \"Mirrored instance class should point to Metaspace\",\n@@ -281,1 +287,1 @@\n-    Metadata* array_klass = obj->metadata_field(java_lang_Class::array_klass_offset());\n+    const Metadata* array_klass = fwd->metadata_field(java_lang_Class::array_klass_offset());\n@@ -284,1 +290,1 @@\n-                    \"Array class mirror should point to Metaspace\",\n+                    \"Mirrored array class should point to Metaspace\",\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -883,1 +883,1 @@\n-    if (alloc_capacity(r) >= min_size) {\n+    if (alloc_capacity(r) >= min_size * HeapWordSize) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1462,1 +1462,1 @@\n-size_t ShenandoahHeap::trash_humongous_region_at(ShenandoahHeapRegion* start) {\n+size_t ShenandoahHeap::trash_humongous_region_at(ShenandoahHeapRegion* start) const {\n@@ -1464,6 +1464,0 @@\n-\n-  oop humongous_obj = cast_to_oop(start->bottom());\n-  size_t size = humongous_obj->size();\n-  size_t required_regions = ShenandoahHeapRegion::required_regions(size * HeapWordSize);\n-  size_t index = start->index() + required_regions - 1;\n-\n@@ -1472,6 +1466,6 @@\n-  for(size_t i = 0; i < required_regions; i++) {\n-    \/\/ Reclaim from tail. Otherwise, assertion fails when printing region to trace log,\n-    \/\/ as it expects that every region belongs to a humongous region starting with a humongous start region.\n-    ShenandoahHeapRegion* region = get_region(index --);\n-\n-    assert(region->is_humongous(), \"expect correct humongous start or continuation\");\n+  \/\/ Do not try to get the size of this humongous object. STW collections will\n+  \/\/ have already unloaded classes, so an unmarked object may have a bad klass pointer.\n+  ShenandoahHeapRegion* region = start;\n+  size_t index = region->index();\n+  do {\n+    assert(region->is_humongous(), \"Expect correct humongous start or continuation\");\n@@ -1479,1 +1473,0 @@\n-\n@@ -1481,2 +1474,5 @@\n-  }\n-  return required_regions;\n+    region = get_region(++index);\n+  } while (region != nullptr && region->is_humongous_continuation());\n+\n+  \/\/ Return number of regions trashed\n+  return index - start->index();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-  size_t trash_humongous_region_at(ShenandoahHeapRegion *r);\n+  size_t trash_humongous_region_at(ShenandoahHeapRegion *r) const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -247,1 +247,3 @@\n-    \/\/ We want to check class loading\/unloading did not corrupt them.\n+    \/\/ We want to check class loading\/unloading did not corrupt them. We can only reasonably\n+    \/\/ trust the forwarded objects, as the from-space object can have the klasses effectively\n+    \/\/ dead.\n@@ -250,1 +252,1 @@\n-      Metadata* klass = obj->metadata_field(java_lang_Class::klass_offset());\n+      const Metadata* klass = fwd->metadata_field(java_lang_Class::klass_offset());\n@@ -253,1 +255,1 @@\n-            \"Instance class mirror should point to Metaspace\");\n+            \"Mirrored instance class should point to Metaspace\");\n@@ -255,1 +257,1 @@\n-      Metadata* array_klass = obj->metadata_field(java_lang_Class::array_klass_offset());\n+      const Metadata* array_klass = obj->metadata_field(java_lang_Class::array_klass_offset());\n@@ -258,1 +260,1 @@\n-            \"Array class mirror should point to Metaspace\");\n+            \"Mirrored array class should point to Metaspace\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-JVM_ENTRY_NO_ENV(void, jfr_set_cpu_throttle(JNIEnv* env, jclass jvm, jdouble rate, jboolean auto_adapt))\n+JVM_ENTRY_NO_ENV(void, jfr_set_cpu_rate(JNIEnv* env, jclass jvm, jdouble rate))\n@@ -175,1 +175,7 @@\n-  JfrCPUTimeThreadSampling::set_rate(rate, auto_adapt == JNI_TRUE);\n+  JfrCPUTimeThreadSampling::set_rate(rate);\n+JVM_END\n+\n+JVM_ENTRY_NO_ENV(void, jfr_set_cpu_period(JNIEnv* env, jclass jvm, jlong period_nanos))\n+  assert(period_nanos >= 0, \"invariant\");\n+  JfrEventSetting::set_enabled(JfrCPUTimeSampleEvent, period_nanos > 0);\n+  JfrCPUTimeThreadSampling::set_period(period_nanos);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -132,1 +132,3 @@\n-void JNICALL jfr_set_cpu_throttle(JNIEnv* env, jclass jvm, jdouble rate, jboolean auto_adapt);\n+void JNICALL jfr_set_cpu_rate(JNIEnv* env, jclass jvm, jdouble rate);\n+\n+void JNICALL jfr_set_cpu_period(JNIEnv* env, jclass jvm, jlong period_nanos);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,2 @@\n-      (char*)\"setCPUThrottle\", (char*)\"(DZ)V\", (void*)jfr_set_cpu_throttle,\n+      (char*)\"setCPURate\", (char*)\"(D)V\", (void*)jfr_set_cpu_rate,\n+      (char*)\"setCPUPeriod\", (char*)\"(J)V\", (void*)jfr_set_cpu_period,\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-static const int64_t AUTOADAPT_INTERVAL_MS = 100;\n+static const int64_t RECOMPUTE_INTERVAL_MS = 100;\n@@ -166,3 +166,13 @@\n-static int64_t compute_sampling_period(double rate) {\n-  if (rate == 0) {\n-    return 0;\n+\/\/ A throttle is either a rate or a fixed period\n+class JfrCPUSamplerThrottle {\n+\n+  union {\n+    double _rate;\n+    u8 _period_nanos;\n+  };\n+  bool _is_rate;\n+\n+public:\n+\n+  JfrCPUSamplerThrottle(double rate) : _rate(rate), _is_rate(true) {\n+    assert(rate >= 0, \"invariant\");\n@@ -170,2 +180,15 @@\n-  return os::active_processor_count() * 1000000000.0 \/ rate;\n-}\n+\n+  JfrCPUSamplerThrottle(u8 period_nanos) : _period_nanos(period_nanos), _is_rate(false) {}\n+\n+  bool enabled() const { return _is_rate ? _rate > 0 : _period_nanos > 0; }\n+\n+  int64_t compute_sampling_period() const {\n+    if (_is_rate) {\n+      if (_rate == 0) {\n+        return 0;\n+      }\n+      return os::active_processor_count() * 1000000000.0 \/ _rate;\n+    }\n+    return _period_nanos;\n+  }\n+};\n@@ -178,2 +201,1 @@\n-  double _rate;\n-  bool _auto_adapt;\n+  JfrCPUSamplerThrottle _throttle;\n@@ -190,1 +212,1 @@\n-  JfrCPUSamplerThread(double rate, bool auto_adapt);\n+  JfrCPUSamplerThread(JfrCPUSamplerThrottle& throttle);\n@@ -198,1 +220,1 @@\n-  void auto_adapt_period_if_needed();\n+  void recompute_period_if_needed();\n@@ -200,1 +222,1 @@\n-  void set_rate(double rate, bool auto_adapt);\n+  void set_throttle(JfrCPUSamplerThrottle& throttle);\n@@ -234,1 +256,1 @@\n-JfrCPUSamplerThread::JfrCPUSamplerThread(double rate, bool auto_adapt) :\n+JfrCPUSamplerThread::JfrCPUSamplerThread(JfrCPUSamplerThrottle& throttle) :\n@@ -237,3 +259,2 @@\n-  _rate(rate),\n-  _auto_adapt(auto_adapt),\n-  _current_sampling_period_ns(compute_sampling_period(rate)),\n+  _throttle(throttle),\n+  _current_sampling_period_ns(throttle.compute_sampling_period()),\n@@ -245,1 +266,0 @@\n-  assert(rate >= 0, \"invariant\");\n@@ -324,1 +344,1 @@\n-  int64_t last_auto_adapt_check = os::javaTimeNanos();\n+  int64_t last_recompute_check = os::javaTimeNanos();\n@@ -332,3 +352,3 @@\n-    if (os::javaTimeNanos() - last_auto_adapt_check > AUTOADAPT_INTERVAL_MS * 1000000) {\n-      auto_adapt_period_if_needed();\n-      last_auto_adapt_check = os::javaTimeNanos();\n+    if (os::javaTimeNanos() - last_recompute_check > RECOMPUTE_INTERVAL_MS * 1000000) {\n+      recompute_period_if_needed();\n+      last_recompute_check = os::javaTimeNanos();\n@@ -445,1 +465,1 @@\n-void JfrCPUTimeThreadSampling::create_sampler(double rate, bool auto_adapt) {\n+void JfrCPUTimeThreadSampling::create_sampler(JfrCPUSamplerThrottle& throttle) {\n@@ -447,1 +467,1 @@\n-  _sampler = new JfrCPUSamplerThread(rate, auto_adapt);\n+  _sampler = new JfrCPUSamplerThread(throttle);\n@@ -452,2 +472,2 @@\n-void JfrCPUTimeThreadSampling::update_run_state(double rate, bool auto_adapt) {\n-  if (rate != 0) {\n+void JfrCPUTimeThreadSampling::update_run_state(JfrCPUSamplerThrottle& throttle) {\n+  if (throttle.enabled()) {\n@@ -455,1 +475,1 @@\n-      create_sampler(rate, auto_adapt);\n+      create_sampler(throttle);\n@@ -457,1 +477,1 @@\n-      _sampler->set_rate(rate, auto_adapt);\n+      _sampler->set_throttle(throttle);\n@@ -463,1 +483,1 @@\n-    _sampler->set_rate(rate \/* 0 *\/, auto_adapt);\n+    _sampler->set_throttle(throttle);\n@@ -468,2 +488,9 @@\n-void JfrCPUTimeThreadSampling::set_rate(double rate, bool auto_adapt) {\n-  assert(rate >= 0, \"invariant\");\n+void JfrCPUTimeThreadSampling::set_rate(double rate) {\n+  if (_instance == nullptr) {\n+    return;\n+  }\n+  JfrCPUSamplerThrottle throttle(rate);\n+  instance().set_throttle_value(throttle);\n+}\n+\n+void JfrCPUTimeThreadSampling::set_period(u8 nanos) {\n@@ -473,1 +500,2 @@\n-  instance().set_rate_value(rate, auto_adapt);\n+  JfrCPUSamplerThrottle throttle(nanos);\n+  instance().set_throttle_value(throttle);\n@@ -476,1 +504,1 @@\n-void JfrCPUTimeThreadSampling::set_rate_value(double rate, bool auto_adapt) {\n+void JfrCPUTimeThreadSampling::set_throttle_value(JfrCPUSamplerThrottle& throttle) {\n@@ -478,1 +506,1 @@\n-    _sampler->set_rate(rate, auto_adapt);\n+    _sampler->set_throttle(throttle);\n@@ -480,1 +508,1 @@\n-  update_run_state(rate, auto_adapt);\n+  update_run_state(throttle);\n@@ -707,1 +735,1 @@\n-void JfrCPUSamplerThread::auto_adapt_period_if_needed() {\n+void JfrCPUSamplerThread::recompute_period_if_needed() {\n@@ -709,6 +737,4 @@\n-  if (_auto_adapt || current_period == -1) {\n-    int64_t period = compute_sampling_period(_rate);\n-    if (period != current_period) {\n-      Atomic::store(&_current_sampling_period_ns, period);\n-      update_all_thread_timers();\n-    }\n+  int64_t period = _throttle.compute_sampling_period();\n+  if (period != current_period) {\n+    Atomic::store(&_current_sampling_period_ns, period);\n+    update_all_thread_timers();\n@@ -718,5 +744,4 @@\n-void JfrCPUSamplerThread::set_rate(double rate, bool auto_adapt) {\n-  _rate = rate;\n-  _auto_adapt = auto_adapt;\n-  if (_rate > 0 && Atomic::load_acquire(&_disenrolled) == false) {\n-    auto_adapt_period_if_needed();\n+void JfrCPUSamplerThread::set_throttle(JfrCPUSamplerThrottle& throttle) {\n+  _throttle = throttle;\n+  if (_throttle.enabled() && Atomic::load_acquire(&_disenrolled) == false) {\n+    recompute_period_if_needed();\n@@ -724,1 +749,1 @@\n-    Atomic::store(&_current_sampling_period_ns, compute_sampling_period(rate));\n+    Atomic::store(&_current_sampling_period_ns, _throttle.compute_sampling_period());\n@@ -768,1 +793,1 @@\n-void JfrCPUTimeThreadSampling::set_rate(double rate, bool auto_adapt) {\n+void JfrCPUTimeThreadSampling::set_rate(double rate) {\n@@ -774,0 +799,6 @@\n+void JfrCPUTimeThreadSampling::set_period(u8 period_nanos) {\n+  if (period_nanos != 0) {\n+    warn();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":78,"deletions":47,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -98,0 +98,2 @@\n+class JfrCPUSamplerThrottle;\n+\n@@ -104,2 +106,2 @@\n-  void create_sampler(double rate, bool auto_adapt);\n-  void set_rate_value(double rate, bool auto_adapt);\n+  void create_sampler(JfrCPUSamplerThrottle& throttle);\n+  void set_throttle_value(JfrCPUSamplerThrottle& throttle);\n@@ -114,1 +116,3 @@\n-  void update_run_state(double rate, bool auto_adapt);\n+  void update_run_state(JfrCPUSamplerThrottle& throttle);\n+\n+  static void set_rate(JfrCPUSamplerThrottle& throttle);\n@@ -117,1 +121,2 @@\n-  static void set_rate(double rate, bool auto_adapt);\n+  static void set_rate(double rate);\n+  static void set_period(u8 nanos);\n@@ -143,1 +148,2 @@\n-  static void set_rate(double rate, bool auto_adapt);\n+  static void set_rate(double rate);\n+  static void set_period(u8 nanos);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.hpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"utilities\/spinYield.hpp\"\n@@ -603,1 +604,4 @@\n-  while (Atomic::cmpxchg(&_cpu_time_jfr_locked, UNLOCKED, DEQUEUE) != UNLOCKED);\n+  SpinYield s;\n+  while (Atomic::cmpxchg(&_cpu_time_jfr_locked, UNLOCKED, DEQUEUE) != UNLOCKED) {\n+    s.wait();\n+  }\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrThreadLocal.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    } else if (static_cast<size_t>(written - 2) > _decorator_padding[decorator]) {\n+    } else if ((written - 2) > _decorator_padding[decorator]) {\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-  size_t              _decorator_padding[LogDecorators::Count];\n+  int                 _decorator_padding[LogDecorators::Count];\n@@ -45,5 +45,6 @@\n-  LogFileStreamOutput(FILE *stream) : _fold_multilines(false), _write_error_is_shown(false), _stream(stream) {\n-    for (size_t i = 0; i < LogDecorators::Count; i++) {\n-      _decorator_padding[i] = 0;\n-    }\n-  }\n+  LogFileStreamOutput(FILE *stream)\n+    : _fold_multilines(false),\n+      _write_error_is_shown(false),\n+      _stream(stream),\n+      _decorator_padding()\n+  {}\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.hpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -753,7 +753,1 @@\n-      ik->clean_weak_instanceklass_links();\n-\n-      \/\/ JVMTI RedefineClasses creates previous versions that are not in\n-      \/\/ the class hierarchy, so process them here.\n-      while ((ik = ik->previous_versions()) != nullptr) {\n-        ik->clean_weak_instanceklass_links();\n-      }\n+      clean_weak_instanceklass_links(ik);\n@@ -764,0 +758,9 @@\n+void Klass::clean_weak_instanceklass_links(InstanceKlass* ik) {\n+  ik->clean_weak_instanceklass_links();\n+  \/\/ JVMTI RedefineClasses creates previous versions that are not in\n+  \/\/ the class hierarchy, so process them here.\n+  while ((ik = ik->previous_versions()) != nullptr) {\n+    ik->clean_weak_instanceklass_links();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -738,0 +738,1 @@\n+  \/\/ Clean out unnecessary weak klass links from the whole klass hierarchy.\n@@ -739,3 +740,2 @@\n-  static void clean_subklass_tree() {\n-    clean_weak_klass_links(\/*unloading_occurred*\/ true , \/* clean_alive_klasses *\/ false);\n-  }\n+  \/\/ Clean out unnecessary weak klass links from the given InstanceKlass.\n+  static void clean_weak_instanceklass_links(InstanceKlass* ik);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1183,32 +1183,36 @@\n-      InstanceKlass* method_holder = target->method_holder();\n-      InstanceKlass* interf = interface_method->method_holder();\n-      HandleMark hm(THREAD);\n-      Handle method_holder_loader(THREAD, method_holder->class_loader());\n-      Handle interface_loader(THREAD, interf->class_loader());\n-\n-      if (method_holder_loader() != interface_loader()) {\n-        ResourceMark rm(THREAD);\n-        Symbol* failed_type_symbol =\n-          SystemDictionary::check_signature_loaders(target->signature(),\n-                                                    _klass,\n-                                                    method_holder_loader,\n-                                                    interface_loader,\n-                                                    true);\n-        if (failed_type_symbol != nullptr) {\n-          stringStream ss;\n-          ss.print(\"loader constraint violation in interface itable\"\n-                   \" initialization for class %s: when selecting method '\",\n-                   _klass->external_name());\n-          interface_method->print_external_name(&ss),\n-          ss.print(\"' the class loader %s for super interface %s, and the class\"\n-                   \" loader %s of the selected method's %s, %s have\"\n-                   \" different Class objects for the type %s used in the signature (%s; %s)\",\n-                   interf->class_loader_data()->loader_name_and_id(),\n-                   interf->external_name(),\n-                   method_holder->class_loader_data()->loader_name_and_id(),\n-                   method_holder->external_kind(),\n-                   method_holder->external_name(),\n-                   failed_type_symbol->as_klass_external_name(),\n-                   interf->class_in_module_of_loader(false, true),\n-                   method_holder->class_in_module_of_loader(false, true));\n-          THROW_MSG(vmSymbols::java_lang_LinkageError(), ss.as_string());\n+      \/\/ Do not check loader constraints for overpass methods because overpass\n+      \/\/ methods are created by the jvm to throw exceptions.\n+      if (!target->is_overpass()) {\n+        InstanceKlass* method_holder = target->method_holder();\n+        InstanceKlass* interf = interface_method->method_holder();\n+        HandleMark hm(THREAD);\n+        Handle method_holder_loader(THREAD, method_holder->class_loader());\n+        Handle interface_loader(THREAD, interf->class_loader());\n+\n+        if (method_holder_loader() != interface_loader()) {\n+          ResourceMark rm(THREAD);\n+          Symbol* failed_type_symbol =\n+            SystemDictionary::check_signature_loaders(target->signature(),\n+                                                      _klass,\n+                                                      method_holder_loader,\n+                                                      interface_loader,\n+                                                      true);\n+          if (failed_type_symbol != nullptr) {\n+            stringStream ss;\n+            ss.print(\"loader constraint violation in interface itable\"\n+                     \" initialization for class %s: when selecting method '\",\n+                     _klass->external_name());\n+            interface_method->print_external_name(&ss),\n+              ss.print(\"' the class loader %s for super interface %s, and the class\"\n+                       \" loader %s of the selected method's %s, %s have\"\n+                       \" different Class objects for the type %s used in the signature (%s; %s)\",\n+                       interf->class_loader_data()->loader_name_and_id(),\n+                       interf->external_name(),\n+                       method_holder->class_loader_data()->loader_name_and_id(),\n+                       method_holder->external_kind(),\n+                       method_holder->external_name(),\n+                       failed_type_symbol->as_klass_external_name(),\n+                       interf->class_in_module_of_loader(false, true),\n+                       method_holder->class_in_module_of_loader(false, true));\n+            THROW_MSG(vmSymbols::java_lang_LinkageError(), ss.as_string());\n+          }\n@@ -1336,3 +1340,1 @@\n-    if (target == nullptr || !target->is_public() || target->is_abstract() || target->is_overpass()) {\n-      assert(target == nullptr || !target->is_overpass() || target->is_public(),\n-             \"Non-public overpass method!\");\n+    if (target == nullptr || !target->is_public() || target->is_abstract()) {\n@@ -1340,1 +1342,1 @@\n-      if (!(target == nullptr) && !target->is_public()) {\n+      if (target != nullptr && !target->is_public()) {\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":38,"deletions":36,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -1863,1 +1863,1 @@\n-  Mutex* lock = Atomic::load(&_extra_data_lock);\n+  Mutex* lock = Atomic::load_acquire(&_extra_data_lock);\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"memory\/universe.hpp\"\n@@ -436,3 +437,3 @@\n-  Handle hm(JavaThread::current(), klass->java_mirror());\n-  jobject hmj = JNIHandles::make_global(hm);\n-  _holder_mirror = hmj;\n+  \/\/ The OopHandle constructor will allocate a handle. We don't need to ever release it so we don't preserve\n+  \/\/ the handle object.\n+  OopHandle handle(Universe::vm_global(), klass->java_mirror());\n@@ -762,1 +763,0 @@\n-  _holder_mirror = nullptr;\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -434,1 +434,0 @@\n-  jobject _holder_mirror;   \/\/ extra link to prevent unloading by GC\n@@ -457,1 +456,0 @@\n-\n","filename":"src\/hotspot\/share\/oops\/trainingData.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,0 +268,4 @@\n+  product(uint, IFGEdgesLimit, 10000000, DIAGNOSTIC,                        \\\n+          \"Maximum allowed edges in the interference graphs\")               \\\n+          range(0, max_juint)                                               \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -333,0 +333,1 @@\n+  friend class LibraryCallKit;\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -432,0 +432,3 @@\n+  if (C->failing()) {\n+    return;\n+  }\n@@ -475,0 +478,3 @@\n+  if (C->failing()) {\n+    return;\n+  }\n@@ -516,0 +522,3 @@\n+    if (C->failing()) {\n+      return;\n+    }\n@@ -599,0 +608,3 @@\n+    if (C->failing()) {\n+      return;\n+    }\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -249,0 +249,3 @@\n+  \/\/ Keep track of number of edges to allow bailing out on very large IFGs\n+  uint _edges;\n+\n","filename":"src\/hotspot\/share\/opto\/chaitin.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3275,1 +3275,4 @@\n-  assert(OptimizePtrCompare, \"sanity\");\n+  const TypeInt* UNKNOWN = TypeInt::CC;    \/\/ [-1, 0,1]\n+  if (!OptimizePtrCompare) {\n+    return UNKNOWN;\n+  }\n@@ -3278,1 +3281,0 @@\n-  const TypeInt* UNKNOWN = TypeInt::CC;    \/\/ [-1, 0,1]\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+  _edges = 0;\n@@ -68,1 +69,6 @@\n-  return _adjs[a].insert( b );\n+  int ret = _adjs[a].insert(b);\n+  _edges += ret;\n+  if (_edges > IFGEdgesLimit) {\n+    C->record_method_not_compilable(\"out of IFG edges\");\n+  }\n+  return ret;\n@@ -302,0 +308,3 @@\n+        if (C->failing()) {\n+          return;\n+        }\n@@ -351,0 +360,3 @@\n+        if (C->failing()) {\n+          return;\n+        }\n@@ -394,0 +406,3 @@\n+            if (C->failing()) {\n+              return;\n+            }\n@@ -920,0 +935,3 @@\n+        if (C->failing()) {\n+          return 0;\n+        }\n","filename":"src\/hotspot\/share\/opto\/ifg.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -138,0 +138,1 @@\n+  assert(jvms->map() == kit.map(), \"Out of sync JVM state\");\n@@ -1727,2 +1728,1 @@\n-  uint old_sp = sp();\n-  SafePointNode* old_map = clone_map();\n+  SavedState old_state(this);\n@@ -1734,2 +1734,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1738,1 +1736,1 @@\n-  destruct_map_clone(old_map);\n+  old_state.discard();\n@@ -2376,0 +2374,41 @@\n+LibraryCallKit::SavedState::SavedState(LibraryCallKit* kit) :\n+  _kit(kit),\n+  _sp(kit->sp()),\n+  _jvms(kit->jvms()),\n+  _map(kit->clone_map()),\n+  _discarded(false)\n+{\n+  for (DUIterator_Fast imax, i = kit->control()->fast_outs(imax); i < imax; i++) {\n+    Node* out = kit->control()->fast_out(i);\n+    if (out->is_CFG()) {\n+      _ctrl_succ.push(out);\n+    }\n+  }\n+}\n+\n+LibraryCallKit::SavedState::~SavedState() {\n+  if (_discarded) {\n+    _kit->destruct_map_clone(_map);\n+    return;\n+  }\n+  _kit->jvms()->set_map(_map);\n+  _kit->jvms()->set_sp(_sp);\n+  _map->set_jvms(_kit->jvms());\n+  _kit->set_map(_map);\n+  _kit->set_sp(_sp);\n+  for (DUIterator_Fast imax, i = _kit->control()->fast_outs(imax); i < imax; i++) {\n+    Node* out = _kit->control()->fast_out(i);\n+    if (out->is_CFG() && out->in(0) == _kit->control() && out != _kit->map() && !_ctrl_succ.member(out)) {\n+      _kit->_gvn.hash_delete(out);\n+      out->set_req(0, _kit->C->top());\n+      _kit->C->record_for_igvn(out);\n+      --i; --imax;\n+      _kit->_gvn.hash_find_insert(out);\n+    }\n+  }\n+}\n+\n+void LibraryCallKit::SavedState::discard() {\n+  _discarded = true;\n+}\n+\n@@ -2437,2 +2476,1 @@\n-  uint old_sp = sp();\n-  SafePointNode* old_map = clone_map();\n+  SavedState old_state(this);\n@@ -2447,2 +2485,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -2466,2 +2502,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -2477,2 +2511,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -2497,2 +2529,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -2506,1 +2536,1 @@\n-  destruct_map_clone(old_map);\n+  old_state.discard();\n@@ -2742,2 +2772,1 @@\n-  uint old_sp = sp();\n-  SafePointNode* old_map = clone_map();\n+  SavedState old_state(this);\n@@ -2752,2 +2781,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -2757,1 +2784,1 @@\n-  destruct_map_clone(old_map);\n+  old_state.discard();\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":48,"deletions":21,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -132,0 +132,23 @@\n+  \/* When an intrinsic makes changes before bailing out, it's necessary to restore the graph\n+   * as it was. See JDK-8359344 for what can happen wrong. It's also not always possible to\n+   * bailout before making changes because the bailing out decision might depend on new nodes\n+   * (their types, for instance).\n+   *\n+   * So, if an intrinsic might cause this situation, one must start by saving the state in a\n+   * SavedState by constructing it, and the state will be restored on destruction. If the\n+   * intrinsic is not bailing out, one need to call discard to prevent restoring the old state.\n+   *\/\n+  class SavedState {\n+    LibraryCallKit* _kit;\n+    uint _sp;\n+    JVMState* _jvms;\n+    SafePointNode* _map;\n+    Unique_Node_List _ctrl_succ;\n+    bool _discarded;\n+\n+  public:\n+    SavedState(LibraryCallKit*);\n+    ~SavedState();\n+    void discard();\n+  };\n+\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -865,1 +865,1 @@\n-  assert(trip_count > 1, \"one iteration loop should be optimized out already\");\n+  assert(trip_count > 1, \"one-iteration loop should be optimized out already\");\n@@ -1402,0 +1402,1 @@\n+  C->print_method(PHASE_AFTER_POST_LOOP, 4, post_head);\n@@ -1616,0 +1617,1 @@\n+  C->print_method(PHASE_BEFORE_POST_LOOP, 4, main_head);\n@@ -1618,0 +1620,1 @@\n+  C->print_method(PHASE_AFTER_POST_LOOP, 4, post_head);\n@@ -3080,0 +3083,1 @@\n+  phase->C->print_method(PHASE_BEFORE_REMOVE_EMPTY_LOOP, 4, cl);\n@@ -3182,0 +3186,1 @@\n+  phase->C->print_method(PHASE_AFTER_REMOVE_EMPTY_LOOP, 4, final_iv);\n@@ -3317,1 +3322,1 @@\n-\/\/ Convert one iteration loop into normal code.\n+\/\/ Convert one-iteration loop into normal code.\n@@ -3334,0 +3339,1 @@\n+  phase->C->print_method(PHASE_BEFORE_ONE_ITERATION_LOOP, 4, cl);\n@@ -3343,0 +3349,1 @@\n+  phase->C->print_method(PHASE_AFTER_ONE_ITERATION_LOOP, 4, init_n);\n@@ -3357,1 +3364,1 @@\n-  \/\/ Convert one iteration loop into normal code.\n+  \/\/ Convert one-iteration loop into normal code.\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -745,1 +745,1 @@\n-  \/\/ Convert one iteration loop into normal code.\n+  \/\/ Convert one-iteration loop into normal code.\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4341,0 +4341,1 @@\n+  C->print_method(PHASE_BEFORE_DUPLICATE_LOOP_BACKEDGE, 4, head);\n@@ -4431,0 +4432,2 @@\n+  C->print_method(PHASE_AFTER_DUPLICATE_LOOP_BACKEDGE, 4, outer_head);\n+\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -96,8 +96,2 @@\n-Node* PhaseMacroExpand::opt_bits_test(Node* ctrl, Node* region, int edge, Node* word, int mask, int bits, bool return_fast_path) {\n-  Node* cmp;\n-  if (mask != 0) {\n-    Node* and_node = transform_later(new AndXNode(word, MakeConX(mask)));\n-    cmp = transform_later(new CmpXNode(and_node, MakeConX(bits)));\n-  } else {\n-    cmp = word;\n-  }\n+Node* PhaseMacroExpand::opt_bits_test(Node* ctrl, Node* region, int edge, Node* word) {\n+  Node* cmp = word;\n@@ -114,4 +108,0 @@\n-  if (return_fast_path) {\n-    region->init_req(edge, slow_taken); \/\/ Capture slow-control\n-    return fast_taken;\n-  } else {\n@@ -120,1 +110,0 @@\n-  }\n@@ -2223,1 +2212,1 @@\n-  slow_path = opt_bits_test(ctrl, region, 2, flock, 0, 0);\n+  slow_path = opt_bits_test(ctrl, region, 2, flock);\n@@ -2284,1 +2273,1 @@\n-  Node *slow_path = opt_bits_test(ctrl, region, 2, funlock, 0, 0);\n+  Node *slow_path = opt_bits_test(ctrl, region, 2, funlock);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-  Node* opt_bits_test(Node* ctrl, Node* region, int edge, Node* word, int mask, int bits, bool return_fast_path = false);\n+  Node* opt_bits_test(Node* ctrl, Node* region, int edge, Node* word);\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1821,1 +1821,2 @@\n-\n+  \/\/ The hash of a node should not change, this would indicate different inputs\n+  uint old_hash = n->hash();\n@@ -1835,0 +1836,10 @@\n+    if (old_hash != n->hash()) {\n+      stringStream ss; \/\/ Print as a block without tty lock.\n+      ss.cr();\n+      ss.print_cr(\"Ideal optimization did not make progress but node hash changed.\");\n+      ss.print_cr(\"  old_hash = %d, hash = %d\", old_hash, n->hash());\n+      n->dump_bfs(1, nullptr, \"\", &ss);\n+      tty->print_cr(\"%s\", ss.as_string());\n+      return true;\n+    }\n+\n@@ -2843,0 +2854,1 @@\n+  push_bool_with_cmpu_and_mask(worklist, use);\n@@ -2889,0 +2901,51 @@\n+\/\/ Look for the following shape, which can be optimized by BoolNode::Value_cmpu_and_mask() (i.e. corresponds to case\n+\/\/ (1b): \"(m & x) <u (m + 1))\".\n+\/\/ If any of the inputs on the level (%%) change, we need to revisit Bool because we could have prematurely found that\n+\/\/ the Bool is constant (i.e. case (1b) can be applied) which could become invalid with new type information during CCP.\n+\/\/\n+\/\/  m    x  m    1  (%%)\n+\/\/   \\  \/    \\  \/\n+\/\/   AndI    AddI\n+\/\/      \\    \/\n+\/\/       CmpU\n+\/\/        |\n+\/\/       Bool\n+\/\/\n+void PhaseCCP::push_bool_with_cmpu_and_mask(Unique_Node_List& worklist, const Node* use) const {\n+  uint use_op = use->Opcode();\n+  if (use_op != Op_AndI && (use_op != Op_AddI || use->in(2)->find_int_con(0) != 1)) {\n+    \/\/ Not \"m & x\" or \"m + 1\"\n+    return;\n+  }\n+  for (DUIterator_Fast imax, i = use->fast_outs(imax); i < imax; i++) {\n+    Node* cmpu = use->fast_out(i);\n+    if (cmpu->Opcode() == Op_CmpU) {\n+      push_bool_matching_case1b(worklist, cmpu);\n+    }\n+  }\n+}\n+\n+\/\/ Push any Bool below 'cmpu' that matches case (1b) of BoolNode::Value_cmpu_and_mask().\n+void PhaseCCP::push_bool_matching_case1b(Unique_Node_List& worklist, const Node* cmpu) const {\n+  assert(cmpu->Opcode() == Op_CmpU, \"must be\");\n+  for (DUIterator_Fast imax, i = cmpu->fast_outs(imax); i < imax; i++) {\n+    Node* bol = cmpu->fast_out(i);\n+    if (!bol->is_Bool() || bol->as_Bool()->_test._test != BoolTest::lt) {\n+      \/\/ Not a Bool with \"<u\"\n+      continue;\n+    }\n+    Node* andI = cmpu->in(1);\n+    Node* addI = cmpu->in(2);\n+    if (andI->Opcode() != Op_AndI || addI->Opcode() != Op_AddI || addI->in(2)->find_int_con(0) != 1) {\n+      \/\/ Not \"m & x\" and \"m + 1\"\n+      continue;\n+    }\n+\n+    Node* m = addI->in(1);\n+    if (m == andI->in(1) || m == andI->in(2)) {\n+      \/\/ Is \"m\" shared? Matched (1b) and thus we revisit Bool.\n+      push_if_not_bottom_type(worklist, bol);\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":64,"deletions":1,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -641,0 +641,2 @@\n+  void push_bool_with_cmpu_and_mask(Unique_Node_List& worklist, const Node* use) const;\n+  void push_bool_matching_case1b(Unique_Node_List& worklist, const Node* cmpu) const;\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,0 +78,8 @@\n+  flags(BEFORE_POST_LOOP,               \"Before Post Loop\") \\\n+  flags(AFTER_POST_LOOP,                \"After Post Loop\") \\\n+  flags(BEFORE_REMOVE_EMPTY_LOOP,       \"Before Remove Empty Loop\") \\\n+  flags(AFTER_REMOVE_EMPTY_LOOP,        \"After Remove Empty Loop\") \\\n+  flags(BEFORE_ONE_ITERATION_LOOP,      \"Before Replace One-Iteration Loop\") \\\n+  flags(AFTER_ONE_ITERATION_LOOP,       \"After Replace One-Iteration Loop\") \\\n+  flags(BEFORE_DUPLICATE_LOOP_BACKEDGE, \"Before Duplicate Loop Backedge\") \\\n+  flags(AFTER_DUPLICATE_LOOP_BACKEDGE,  \"After Duplicate Loop Backedge\") \\\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1883,1 +1883,1 @@\n-        if (rhs_m_type->_lo > -1 || rhs_m_type->_hi < -1) {\n+        if (rhs_m_type != nullptr && (rhs_m_type->_lo > -1 || rhs_m_type->_hi < -1)) {\n@@ -1901,0 +1901,4 @@\n+  const Type* input_type = phase->type(in(1));\n+  if (input_type == Type::TOP) {\n+    return Type::TOP;\n+  }\n@@ -1906,1 +1910,1 @@\n-  return _test.cc2logical( phase->type( in(1) ) );\n+  return _test.cc2logical(input_type);\n@@ -2021,4 +2025,6 @@\n-    case Op_ReverseBytesS:  return TypeInt::make(byteswap(checked_cast<jshort>(con->is_int()->get_con())));\n-    case Op_ReverseBytesUS: return TypeInt::make(byteswap(checked_cast<jchar>(con->is_int()->get_con())));\n-    case Op_ReverseBytesI:  return TypeInt::make(byteswap(checked_cast<jint>(con->is_int()->get_con())));\n-    case Op_ReverseBytesL:  return TypeLong::make(byteswap(checked_cast<jlong>(con->is_long()->get_con())));\n+    \/\/ It is valid in bytecode to load any int and pass it to a method that expects a smaller type (i.e., short, char).\n+    \/\/ Let's cast the value to match the Java behavior.\n+    case Op_ReverseBytesS:  return TypeInt::make(byteswap(static_cast<jshort>(con->is_int()->get_con())));\n+    case Op_ReverseBytesUS: return TypeInt::make(byteswap(static_cast<jchar>(con->is_int()->get_con())));\n+    case Op_ReverseBytesI:  return TypeInt::make(byteswap(con->is_int()->get_con()));\n+    case Op_ReverseBytesL:  return TypeLong::make(byteswap(con->is_long()->get_con()));\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2538,0 +2538,76 @@\n+\/\/ Returns true if the given operation can be vectorized with \"truncation\" where the upper bits in the integer do not\n+\/\/ contribute to the result. This is true for most arithmetic operations, but false for operations such as\n+\/\/ leading\/trailing zero count.\n+static bool can_subword_truncate(Node* in, const Type* type) {\n+  if (in->is_Load() || in->is_Store() || in->is_Convert() || in->is_Phi()) {\n+    return true;\n+  }\n+\n+  int opc = in->Opcode();\n+\n+  \/\/ If the node's base type is a subword type, check an additional set of nodes.\n+  if (type == TypeInt::SHORT || type == TypeInt::CHAR) {\n+    switch (opc) {\n+    case Op_ReverseBytesS:\n+    case Op_ReverseBytesUS:\n+      return true;\n+    }\n+  }\n+\n+  \/\/ Can be truncated:\n+  switch (opc) {\n+  case Op_AddI:\n+  case Op_SubI:\n+  case Op_MulI:\n+  case Op_AndI:\n+  case Op_OrI:\n+  case Op_XorI:\n+    return true;\n+  }\n+\n+#ifdef ASSERT\n+  \/\/ While shifts have subword vectorized forms, they require knowing the precise type of input loads so they are\n+  \/\/ considered non-truncating.\n+  if (VectorNode::is_shift_opcode(opc)) {\n+    return false;\n+  }\n+\n+  \/\/ Vector nodes should not truncate.\n+  if (type->isa_vect() != nullptr || type->isa_vectmask() != nullptr || in->is_Reduction()) {\n+    return false;\n+  }\n+\n+  \/\/ Cannot be truncated:\n+  switch (opc) {\n+  case Op_AbsI:\n+  case Op_DivI:\n+  case Op_ModI:\n+  case Op_MinI:\n+  case Op_MaxI:\n+  case Op_CMoveI:\n+  case Op_Conv2B:\n+  case Op_RotateRight:\n+  case Op_RotateLeft:\n+  case Op_PopCountI:\n+  case Op_ReverseBytesI:\n+  case Op_ReverseI:\n+  case Op_CountLeadingZerosI:\n+  case Op_CountTrailingZerosI:\n+  case Op_IsInfiniteF:\n+  case Op_IsInfiniteD:\n+  case Op_ExtractS:\n+  case Op_ExtractC:\n+  case Op_ExtractB:\n+    return false;\n+  default:\n+    \/\/ If this assert is hit, that means that we need to determine if the node can be safely truncated,\n+    \/\/ and then add it to the list of truncating nodes or the list of non-truncating ones just above.\n+    \/\/ In product, we just return false, which is always correct.\n+    assert(false, \"Unexpected node in SuperWord truncation: %s\", NodeClassNames[in->Opcode()]);\n+  }\n+#endif\n+\n+  \/\/ Default to disallowing vector truncation\n+  return false;\n+}\n+\n@@ -2592,1 +2668,1 @@\n-            if (VectorNode::is_shift_opcode(op) || op == Op_AbsI || op == Op_ReverseBytesI) {\n+            if (!can_subword_truncate(in, vt)) {\n@@ -2594,1 +2670,2 @@\n-              if (load->is_Load() &&\n+              \/\/ For certain operations such as shifts and abs(), use the size of the load if it exists\n+              if ((VectorNode::is_shift_opcode(op) || op == Op_AbsI) && load->is_Load() &&\n@@ -2601,1 +2678,1 @@\n-                \/\/ Widen type to int to avoid the creation of vector nodes. Note\n+                \/\/ Widen type to the node type to avoid the creation of vector nodes. Note\n@@ -2603,1 +2680,1 @@\n-                vt = TypeInt::INT;\n+                vt = container_type(in);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":81,"deletions":4,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -825,2 +825,1 @@\n-  uint old_sp = sp();\n-  SafePointNode* old_map = clone_map();\n+  SavedState old_state(this);\n@@ -863,2 +862,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -876,2 +873,0 @@\n-        set_map(old_map);\n-        set_sp(old_sp);\n@@ -886,2 +881,0 @@\n-        set_map(old_map);\n-        set_sp(old_sp);\n@@ -895,2 +888,0 @@\n-        set_map(old_map);\n-        set_sp(old_sp);\n@@ -901,2 +892,0 @@\n-        set_map(old_map);\n-        set_sp(old_sp);\n@@ -917,2 +906,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -955,1 +942,1 @@\n-  destruct_map_clone(old_map);\n+  old_state.discard();\n@@ -1032,2 +1019,1 @@\n-  uint old_sp = sp();\n-  SafePointNode* old_map = clone_map();\n+  SavedState old_state(this);\n@@ -1046,2 +1032,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1069,2 +1053,0 @@\n-        set_map(old_map);\n-        set_sp(old_sp);\n@@ -1080,2 +1062,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -1092,2 +1072,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1104,2 +1082,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -1116,2 +1092,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1138,2 +1112,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1148,2 +1120,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -1196,1 +1166,1 @@\n-  destruct_map_clone(old_map);\n+  old_state.discard();\n@@ -1319,2 +1289,1 @@\n-  uint old_sp = sp();\n-  SafePointNode* old_map = clone_map();\n+  SavedState old_state(this);\n@@ -1342,2 +1311,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1351,2 +1318,0 @@\n-    set_map(old_map);\n-    set_sp(old_sp);\n@@ -1367,2 +1332,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -1381,2 +1344,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -1391,2 +1352,0 @@\n-      set_map(old_map);\n-      set_sp(old_sp);\n@@ -1415,1 +1374,1 @@\n-  destruct_map_clone(old_map);\n+  old_state.discard();\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":6,"deletions":47,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2990,6 +2990,2 @@\n-          Called or calling method is a native method.\n-          The implementation is unable to pop this frame.\n-        <\/error>\n-        <error id=\"JVMTI_ERROR_OPAQUE_FRAME\">\n-          The thread is a suspended virtual thread and the implementation\n-          was unable to pop the current frame.\n+          The implementation is unable to pop this frame\n+          (e.g. called or calling method is a native method).\n@@ -3081,2 +3077,2 @@\n-          The frame at <code>depth<\/code> is executing a\n-          native method.\n+           A <eventlink id=\"FramePop\"><\/eventlink> event cannot be generated for this frame\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -3191,6 +3187,2 @@\n-          Attempted to return early from a frame\n-          corresponding to a native method.\n-          The thread is a suspended virtual thread and the implementation was\n-          unable to force its current frame to return.\n-          Or the implementation is unable to provide\n-          this functionality on this frame.\n+          The implementation is unable to force the current frame to return\n+          (e.g. current frame is executing a native method).\n@@ -3243,6 +3235,2 @@\n-          Attempted to return early from a frame\n-          corresponding to a native method.\n-          The thread is a suspended virtual thread and the implementation was\n-          unable to force its current frame to return.\n-          Or the implementation is unable to provide\n-          this functionality on this frame.\n+          The implementation is unable to force the current frame to return\n+          (e.g. current frame is executing a native method).\n@@ -3291,6 +3279,2 @@\n-          Attempted to return early from a frame\n-          corresponding to a native method.\n-          The thread is a suspended virtual thread and the implementation was\n-          unable to force its current frame to return.\n-          Or the implementation is unable to provide\n-          this functionality on this frame.\n+          The implementation is unable to force the current frame to return\n+          (e.g. current frame is executing a native method).\n@@ -3336,6 +3320,2 @@\n-          Attempted to return early from a frame\n-          corresponding to a native method.\n-          The thread is a suspended virtual thread and the implementation was\n-          unable to force its current frame to return.\n-          Or the implementation is unable to provide\n-          this functionality on this frame.\n+          The implementation is unable to force the current frame to return\n+          (e.g. current frame is executing a native method).\n@@ -3381,6 +3361,2 @@\n-          Attempted to return early from a frame\n-          corresponding to a native method.\n-          The thread is a suspended virtual thread and the implementation was\n-          unable to force its current frame to return.\n-          Or the implementation is unable to provide\n-          this functionality on this frame.\n+          The implementation is unable to force the current frame to return\n+          (e.g. current frame is executing a native method).\n@@ -3420,6 +3396,2 @@\n-          Attempted to return early from a frame\n-          corresponding to a native method.\n-          The thread is a suspended virtual thread and the implementation was\n-          unable to force its current frame to return.\n-          Or the implementation is unable to provide\n-          this functionality on this frame.\n+          The implementation is unable to force the current frame to return\n+          (e.g. current frame is executing a native method).\n@@ -5931,1 +5903,2 @@\n-          Not a visible frame\n+          The implementation is unable to get the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6034,1 +6007,2 @@\n-          Not a visible frame\n+          The implementation is unable to get the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6088,1 +6062,2 @@\n-          Not a visible frame\n+          The implementation is unable to get the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6142,1 +6117,2 @@\n-          Not a visible frame\n+          The implementation is unable to get the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6196,1 +6172,2 @@\n-          Not a visible frame\n+          The implementation is unable to get the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6255,6 +6232,2 @@\n-          Not a visible frame\n-        <\/error>\n-        <error id=\"JVMTI_ERROR_OPAQUE_FRAME\">\n-          The thread is a suspended virtual thread and the implementation does not support\n-          setting the value of locals in the frame of the given depth.\n-          See <internallink id=\"local\">Local Variables<\/internallink>.\n+          The implementation is unable to set the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6319,6 +6292,2 @@\n-          Not a visible frame\n-        <\/error>\n-        <error id=\"JVMTI_ERROR_OPAQUE_FRAME\">\n-          The thread is a suspended virtual thread and the implementation does not support\n-          setting the value of locals in the frame of the given depth.\n-          See <internallink id=\"local\">Local Variables<\/internallink>.\n+          The implementation is unable to set the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6378,6 +6347,2 @@\n-          Not a visible frame\n-        <\/error>\n-        <error id=\"JVMTI_ERROR_OPAQUE_FRAME\">\n-          The thread is a suspended virtual thread and the implementation does not support\n-          setting the value of locals in the frame of the given depth.\n-          See <internallink id=\"local\">Local Variables<\/internallink>.\n+          The implementation is unable to set the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6437,6 +6402,2 @@\n-          Not a visible frame\n-        <\/error>\n-        <error id=\"JVMTI_ERROR_OPAQUE_FRAME\">\n-          The thread is a suspended virtual thread and the implementation does not support\n-          setting the value of locals in the frame of the given depth.\n-          See <internallink id=\"local\">Local Variables<\/internallink>.\n+          The implementation is unable to set the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -6496,6 +6457,2 @@\n-          Not a visible frame\n-        <\/error>\n-        <error id=\"JVMTI_ERROR_OPAQUE_FRAME\">\n-          The thread is a suspended virtual thread and the implementation does not support\n-          setting the value of locals in the frame of the given depth.\n-          See <internallink id=\"local\">Local Variables<\/internallink>.\n+          The implementation is unable to set the frame locals\n+          (e.g. the frame at <code>depth<\/code> is executing a native method).\n@@ -12053,1 +12010,1 @@\n-      or the function cannot be performed on the thread's current frame.\n+      or the implementation is unable to provide this functionality on this frame.\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":37,"deletions":80,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  int must_commit = os::must_commit_stack_guard_pages();\n+  bool must_commit = os::must_commit_stack_guard_pages();\n","filename":"src\/hotspot\/share\/runtime\/stackOverflow.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -618,0 +618,11 @@\n+  do_stub(preuniverse, atomic_add)                                      \\\n+  do_entry(preuniverse, atomic_add, atomic_add_entry, atomic_add_entry) \\\n+  do_stub(preuniverse, atomic_xchg)                                     \\\n+  do_entry(preuniverse, atomic_xchg, atomic_xchg_entry,                 \\\n+           atomic_xchg_entry)                                           \\\n+  do_stub(preuniverse, atomic_cmpxchg)                                  \\\n+  do_entry(preuniverse, atomic_cmpxchg, atomic_cmpxchg_entry,           \\\n+           atomic_cmpxchg_entry)                                        \\\n+  do_stub(preuniverse, atomic_cmpxchg_long)                             \\\n+  do_entry(preuniverse, atomic_cmpxchg_long, atomic_cmpxchg_long_entry, \\\n+           atomic_cmpxchg_long_entry)                                   \\\n@@ -640,10 +651,0 @@\n-  do_stub(initial, atomic_add)                                          \\\n-  do_entry(initial, atomic_add, atomic_add_entry, atomic_add_entry)     \\\n-  do_stub(initial, atomic_xchg)                                         \\\n-  do_entry(initial, atomic_xchg, atomic_xchg_entry, atomic_xchg_entry)  \\\n-  do_stub(initial, atomic_cmpxchg)                                      \\\n-  do_entry(initial, atomic_cmpxchg, atomic_cmpxchg_entry,               \\\n-           atomic_cmpxchg_entry)                                        \\\n-  do_stub(initial, atomic_cmpxchg_long)                                 \\\n-  do_entry(initial, atomic_cmpxchg_long, atomic_cmpxchg_long_entry,     \\\n-           atomic_cmpxchg_long_entry)                                   \\\n","filename":"src\/hotspot\/share\/runtime\/stubDeclarations.hpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -159,0 +159,5 @@\n+  \/\/ normally when the two ids are equal the entry span is 1 but we\n+  \/\/ have a special case when the base and max are both NO_STUBID in\n+  \/\/ which case the entry count is 0. n.b. that only happens in the\n+  \/\/ case where a stub group is empty e.g. when either C1 or C2 is\n+  \/\/ omitted from the build\n@@ -161,1 +166,4 @@\n-  assert(idx2 >= 0 && idx2 >= idx1, \"bad stub ids first %d and second %d\", idx1, idx2);\n+  assert((idx1 < 0 && idx2  < 0) || (idx1 >= 0 && idx2 >= idx1), \"bad stub ids first %d and second %d\", idx1, idx2);\n+  if (idx1 < 0) {\n+    return 0;\n+  }\n@@ -167,0 +175,5 @@\n+  \/\/ normally when the two ids are equal the entry span is 1 but we\n+  \/\/ have a special case when the base and max are both NO_BLOBID in\n+  \/\/ which case the entry count is 0. n.b. that only happens in the\n+  \/\/ case where a stub group is empty e.g. when either C1 or C2 is\n+  \/\/ omitted from the build\n@@ -169,1 +182,4 @@\n-  assert(idx2 >= 0 && idx2 >= idx1, \"bad blob ids first %d and second %d\", idx1, idx2);\n+  assert((idx1 < 0 && idx2  < 0) || (idx1 >= 0 && idx2 >= idx1), \"bad blob ids first %d and second %d\", idx1, idx2);\n+  if (idx1 < 0) {\n+    return 0;\n+  }\n@@ -780,3 +796,10 @@\n-      ls.print_cr(\"  blobs: %s(%d)\",\n-                  blob_details(g._base)._name,\n-                  static_cast<int>(g._base));\n+      \/\/ some groups don't have a blob\n+      if (g._base == BlobId::NO_BLOBID) {\n+        ls.print_cr(\"  blobs: %s(%d)\",\n+                    \"no_blobs\",\n+                    static_cast<int>(g._base));\n+      } else {\n+        ls.print_cr(\"  blobs: %s(%d)\",\n+                    blob_details(g._base)._name,\n+                    static_cast<int>(g._base));\n+      }\n@@ -799,3 +822,10 @@\n-      ls.print_cr(\"  stubs: %s(%d)\",\n-                  stub_details(b._base)._name,\n-                  static_cast<int>(b._base));\n+      \/\/ some blobs don't have a stub\n+      if (b._base == StubId::NO_STUBID) {\n+        ls.print_cr(\"  stubs: %s(%d)\",\n+                    \"no_stubs\",\n+                    static_cast<int>(b._base));\n+      } else {\n+        ls.print_cr(\"  stubs: %s(%d)\",\n+                    stub_details(b._base)._name,\n+                    static_cast<int>(b._base));\n+      }\n@@ -908,2 +938,2 @@\n-  \/\/ delegate\n-  return stub_base(blob_base(stub_group));\n+  BlobId base = blob_base(stub_group);\n+  return (base == BlobId::NO_BLOBID ? StubId::NO_STUBID : stub_base(base));\n@@ -913,2 +943,2 @@\n-  \/\/ delegate\n-  return stub_max(blob_max(stub_group));\n+  BlobId base = blob_max(stub_group);\n+  return (base == BlobId::NO_BLOBID ? StubId::NO_STUBID : stub_max(base));\n","filename":"src\/hotspot\/share\/runtime\/stubInfo.cpp","additions":42,"deletions":12,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -1137,2 +1137,8 @@\n-        for (int i = 0; i < n; i++) {\n-            fs[i] = new File(ss[i], this);\n+        if (path.isEmpty()) {\n+            for (int i = 0; i < n; i++) {\n+                fs[i] = new File(ss[i]);\n+            }\n+        } else {\n+            for (int i = 0; i < n; i++) {\n+                fs[i] = new File(ss[i], this);\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1033,0 +1033,15 @@\n+        if (jfrTracing && FileReadEvent.enabled()) {\n+            long bytesRead = 0;\n+            long start = FileReadEvent.timestamp();\n+            try {\n+                String result = implReadLine();\n+                bytesRead = result == null ? 0 : result.length();\n+                return result;\n+            } finally {\n+                FileReadEvent.offer(start, path, bytesRead);\n+            }\n+        }\n+        return implReadLine();\n+    }\n+\n+    private final String implReadLine() throws IOException {\n@@ -1038,1 +1053,1 @@\n-            switch (c = read()) {\n+            switch (c = read0()) {\n@@ -1043,1 +1058,1 @@\n-                    if ((read()) != '\\n') {\n+                    if ((read0()) != '\\n') {\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-        throw new IllegalArgumentException(\"Illegal type: \" + (c == null ? null : c.getClass()));\n+        throw new IllegalArgumentException(\"Illegal type: \" + c.getClass()); \/\/ implicit null check\n@@ -562,1 +562,2 @@\n-        throw new IllegalArgumentException(\"Illegal type: \" + (c == null ? null : c.getClass()));\n+        \/\/ Shouldn't reach here\n+        throw new IllegalArgumentException(\"Illegal type: \" + c.getClass()); \/\/ implicit null check\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/constantpool\/ConstantPoolBuilder.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+import jdk.internal.util.regex.CaseFolding;\n@@ -2918,0 +2919,2 @@\n+           (7) Latin Capital Letter Sharp S u+1e0e, was added in version 5.1\n+              toLowerCase(u+1e9e) ==> u+00df\n@@ -2925,1 +2928,5 @@\n-               ch == 0xc5 || ch == 0xe5))) {  \/\/A+ring\n+               ch == 0xc5 || ch == 0xe5 ||    \/\/A+ring\n+               \/\/ need to force single() to use SingleU specifically for u+00df.\n+               \/\/ u+00df <-> u+1e9e, see https:\/\/codepoints.net\/U+00DF.\n+               \/\/ Character.toUpperCase('u+00df') still returns u+00df for now.\n+                ch == 0xdf))) {               \/\/ Shape S\n@@ -2942,1 +2949,1 @@\n-                if (upper != lower)\n+                if (upper != lower || ch == 0xDF)\n@@ -5963,0 +5970,10 @@\n+        int[] closingCharacters = CaseFolding.getClassRangeClosingCharacters(lower, upper);\n+        if (closingCharacters.length == 0) {\n+            return ch -> {\n+                if (inRange(lower, ch, upper))\n+                    return true;\n+                int up = Character.toUpperCase(ch);\n+                return (inRange(lower, up, upper) ||\n+                        inRange(lower, Character.toLowerCase(up), upper));\n+            };\n+        }\n@@ -5967,2 +5984,9 @@\n-            return inRange(lower, up, upper) ||\n-                   inRange(lower, Character.toLowerCase(up), upper);\n+            int lo = Character.toLowerCase(up);\n+            if (inRange(lower, up, upper) ||\n+                inRange(lower, lo, upper))\n+                return true;\n+            for (int cp : closingCharacters) {\n+                if (up == cp || lo == cp)\n+                return true;\n+            }\n+            return false;\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/Pattern.java","additions":28,"deletions":4,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -402,0 +402,1 @@\n+    \/\/ Null checks entry\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -209,1 +209,0 @@\n-                handlersSize++;\n@@ -549,0 +548,1 @@\n+        int targetBci = labelToBci(target); \/\/ implicit null check\n@@ -550,1 +550,0 @@\n-        int targetBci = labelToBci(target);\n@@ -573,0 +572,1 @@\n+        Objects.requireNonNull(target); \/\/ before any write\n@@ -620,0 +620,11 @@\n+        cases = new ArrayList<>(cases); \/\/ cases may be untrusted\n+        for (var each : cases) {\n+            Objects.requireNonNull(each); \/\/ single null case may exist\n+        }\n+        cases.sort(new Comparator<>() {\n+            @Override\n+            public int compare(SwitchCase c1, SwitchCase c2) {\n+                return Integer.compare(c1.caseValue(), c2.caseValue());\n+            }\n+        });\n+        \/\/ validation end\n@@ -627,7 +638,0 @@\n-        cases = new ArrayList<>(cases);\n-        cases.sort(new Comparator<>() {\n-            @Override\n-            public int compare(SwitchCase c1, SwitchCase c2) {\n-                return Integer.compare(c1.caseValue(), c2.caseValue());\n-            }\n-        });\n@@ -642,0 +646,5 @@\n+        var caseMap = new HashMap<Integer, Label>(cases.size()); \/\/ cases may be untrusted\n+        for (var c : cases) {\n+            caseMap.put(c.caseValue(), c.target());\n+        }\n+        \/\/ validation end\n@@ -649,4 +658,0 @@\n-        var caseMap = new HashMap<Integer, Label>(cases.size());\n-        for (var c : cases) {\n-            caseMap.put(c.caseValue(), c.target());\n-        }\n@@ -931,0 +936,1 @@\n+            Util.checkKind(opcode, Opcode.Kind.INVOKE);\n@@ -962,1 +968,2 @@\n-        bytecodesBufWriter.writeIndex(opcode.bytecode(), ref);\n+        Util.checkKind(opcode, Opcode.Kind.FIELD_ACCESS);\n+        writeFieldAccess(opcode, ref);\n@@ -980,0 +987,1 @@\n+        Util.checkKind(op, Opcode.Kind.BRANCH);\n@@ -1643,0 +1651,2 @@\n+        Objects.requireNonNull(defaultTarget);\n+        \/\/ check cases when we sort them\n@@ -1802,0 +1812,1 @@\n+        BytecodeHelpers.validateMultiArrayDimensions(dims);\n@@ -1848,0 +1859,2 @@\n+        Objects.requireNonNull(defaultTarget);\n+        \/\/ check cases when we write them\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":27,"deletions":14,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.io.IOException;\n-\n@@ -69,1 +67,0 @@\n-    \/* The precision in bits *\/\n@@ -72,2 +69,2 @@\n-    \/* Exponent width in bits *\/\n-    private static final int W = (Double.SIZE - 1) - (P - 1);\n+    \/* Exponent width in bits. *\/\n+    static final int W = (Double.SIZE - 1) - (P - 1);\n@@ -75,1 +72,1 @@\n-    \/* Minimum value of the exponent: -(2^(W-1)) - P + 3 *\/\n+    \/* Minimum value of the exponent: -(2^(W-1)) - P + 3. *\/\n@@ -78,1 +75,1 @@\n-    \/* Maximum value of the exponent: 2^(W-1) - P *\/\n+    \/* Maximum value of the exponent: 2^(W-1) - P. *\/\n@@ -81,1 +78,7 @@\n-    \/* 10^(E_MIN - 1) <= MIN_VALUE < 10^E_MIN *\/\n+    \/* Minimum value of the significand of a normal value: 2^(P-1). *\/\n+    static final long C_MIN = 1L << (P - 1);\n+\n+    \/* Maximum value of the significand of a normal value: 2^P - 1. *\/\n+    static final long C_MAX = (1L << P) - 1;\n+\n+    \/* E_MIN = max{e : 10^(e-1) <= MIN_VALUE}. *\/\n@@ -84,1 +87,1 @@\n-    \/* 10^(E_MAX - 1) <= MAX_VALUE < 10^E_MAX *\/\n+    \/* E_MAX = max{e : 10^(e-1) <= MAX_VALUE}. *\/\n@@ -87,2 +90,8 @@\n-    \/* Threshold to detect tiny values, as in section 8.2.1 of [1] *\/\n-    static final long C_TINY = 3;\n+    \/*\n+     * Let THR_Z = ulp(0.0) \/ 2 = MIN_VALUE \/ 2 = 2^(Q_MIN-1).\n+     * THR_Z is the zero threshold.\n+     * Real x rounds to 0 by roundTiesToEven iff |x| <= THR_Z.\n+     *\n+     * E_THR_Z = max{e : 10^e <= THR_Z}.\n+     *\/\n+    static final int E_THR_Z = -324;\n@@ -90,1 +99,10 @@\n-    \/* The minimum and maximum k, as in section 8 of [1] *\/\n+    \/*\n+     * Let THR_I = MAX_VALUE + ulp(MAX_VALUE) \/ 2 = (2 C_MAX + 1) 2^(Q_MAX-1).\n+     * THR_I is the infinity threshold.\n+     * Real x rounds to infinity by roundTiesToEven iff |x| >= THR_I.\n+     *\n+     * E_THR_I = min{e : THR_I <= 10^(e-1)}.\n+     *\/\n+    static final int E_THR_I = 310;\n+\n+    \/* K_MIN = max{k : 10^k <= 2^Q_MIN}. *\/\n@@ -92,0 +110,2 @@\n+\n+    \/* K_MAX = max{k : 10^k <= 2^Q_MAX}. *\/\n@@ -94,2 +114,5 @@\n-    \/* H is as in section 8.1 of [1] *\/\n-    static final int H = 17;\n+    \/*\n+     * Threshold to detect tiny values, as in section 8.2.1 of [1].\n+     *      C_TINY = ceil(2^(-Q_MIN) 10^(K_MIN+1))\n+     *\/\n+    static final long C_TINY = 3;\n@@ -97,2 +120,5 @@\n-    \/* Minimum value of the significand of a normal value: 2^(P-1) *\/\n-    private static final long C_MIN = 1L << (P - 1);\n+    \/*\n+     * H is as in section 8.1 of [1].\n+     *      H = max{e : 10^(e-2) <= 2^P}\n+     *\/\n+    static final int H = 17;\n@@ -100,1 +126,1 @@\n-    \/* Mask to extract the biased exponent *\/\n+    \/* Mask to extract the biased exponent. *\/\n@@ -103,1 +129,1 @@\n-    \/* Mask to extract the fraction bits *\/\n+    \/* Mask to extract the fraction bits. *\/\n@@ -106,1 +132,1 @@\n-    \/* Used in rop() *\/\n+    \/* Used in rop(). *\/\n@@ -172,1 +198,0 @@\n-     * @throws IOException If an I\/O error occurs\n@@ -283,2 +308,2 @@\n-        long g1 = g1(k);\n-        long g0 = g0(k);\n+        long g1 = g1(-k);\n+        long g0 = g0(-k);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/DoubleToDecimal.java","additions":48,"deletions":23,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.io.IOException;\n-\n@@ -69,1 +67,0 @@\n-    \/* The precision in bits *\/\n@@ -72,2 +69,2 @@\n-    \/* Exponent width in bits *\/\n-    private static final int W = (Float.SIZE - 1) - (P - 1);\n+    \/* Exponent width in bits. *\/\n+    static final int W = (Float.SIZE - 1) - (P - 1);\n@@ -75,1 +72,1 @@\n-    \/* Minimum value of the exponent: -(2^(W-1)) - P + 3 *\/\n+    \/* Minimum value of the exponent: -(2^(W-1)) - P + 3. *\/\n@@ -78,1 +75,1 @@\n-    \/* Maximum value of the exponent: 2^(W-1) - P *\/\n+    \/* Maximum value of the exponent: 2^(W-1) - P. *\/\n@@ -81,1 +78,7 @@\n-    \/* 10^(E_MIN - 1) <= MIN_VALUE < 10^E_MIN *\/\n+    \/* Minimum value of the significand of a normal value: 2^(P-1). *\/\n+    static final int C_MIN = 1 << (P - 1);\n+\n+    \/* Maximum value of the significand of a normal value: 2^P - 1. *\/\n+    static final int C_MAX = (1 << P) - 1;\n+\n+    \/* E_MIN = max{e : 10^(e-1) <= MIN_VALUE}. *\/\n@@ -84,1 +87,1 @@\n-    \/* 10^(E_MAX - 1) <= MAX_VALUE < 10^E_MAX *\/\n+    \/* E_MAX = max{e : 10^(e-1) <= MAX_VALUE}. *\/\n@@ -87,2 +90,8 @@\n-    \/* Threshold to detect tiny values, as in section 8.2.1 of [1] *\/\n-    static final int C_TINY = 8;\n+    \/*\n+     * Let THR_Z = ulp(0.0) \/ 2 = MIN_VALUE \/ 2 = 2^(Q_MIN-1).\n+     * THR_Z is the zero threshold.\n+     * x is rounded to 0 by roundTiesToEven iff |x| <= THR_Z.\n+     *\n+     * E_THR_Z = max{e : 10^e <= THR_Z}.\n+     *\/\n+    static final int E_THR_Z = -46;\n@@ -90,1 +99,10 @@\n-    \/* The minimum and maximum k, as in section 8 of [1] *\/\n+    \/*\n+     * Let THR_I = MAX_VALUE + ulp(MAX_VALUE) \/ 2 = (2 C_MAX + 1) 2^(Q_MAX-1).\n+     * THR_I is the infinity threshold.\n+     * x is rounded to infinity by roundTiesToEven iff |x| >= THR_I.\n+     *\n+     * E_THR_I = min{e : THR_I <= 10^(e-1)}.\n+     *\/\n+    static final int E_THR_I = 40;\n+\n+    \/* K_MIN = max{k : 10^k <= 2^Q_MIN}. *\/\n@@ -92,0 +110,2 @@\n+\n+    \/* K_MAX = max{k : 10^k <= 2^Q_MAX}. *\/\n@@ -94,2 +114,5 @@\n-    \/* H is as in section 8.1 of [1] *\/\n-    static final int H = 9;\n+    \/*\n+     * Threshold to detect tiny values, as in section 8.2.1 of [1].\n+     *      C_TINY = ceil(2^(-Q_MIN) 10^(K_MIN+1))\n+     *\/\n+    static final int C_TINY = 8;\n@@ -97,2 +120,5 @@\n-    \/* Minimum value of the significand of a normal value: 2^(P-1) *\/\n-    private static final int C_MIN = 1 << (P - 1);\n+    \/*\n+     * H is as in section 8.1 of [1].\n+     *      H = max{e : 10^(e-2) <= 2^P}\n+     *\/\n+    static final int H = 9;\n@@ -100,1 +126,1 @@\n-    \/* Mask to extract the biased exponent *\/\n+    \/* Mask to extract the biased exponent. *\/\n@@ -103,1 +129,1 @@\n-    \/* Mask to extract the fraction bits *\/\n+    \/* Mask to extract the fraction bits. *\/\n@@ -106,1 +132,1 @@\n-    \/* Used in rop() *\/\n+    \/* Used in rop(). *\/\n@@ -145,1 +171,1 @@\n-     * {@link #toString(double) rendered} and the resulting string were then\n+     * {@link #toString(float) rendered} and the resulting string were then\n@@ -150,1 +176,0 @@\n-     * @throws IOException If an I\/O error occurs\n@@ -259,1 +284,1 @@\n-        long g = g1(k) + 1;\n+        long g = g1(-k) + 1;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatToDecimal.java","additions":48,"deletions":23,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1877,8 +1877,1 @@\n-        \/*\n-         * In some places the idiom\n-         *      (ch | 0b10_0000) == lowercase-letter\n-         * is used as a shortcut for\n-         *      ch == lowercase-letter || ch == that-same-letter-as-uppercase\n-         *\n-         * Determine whether we are facing a symbolic value or hex notation.\n-         *\/\n+        \/* Determine whether we are facing a symbolic value or hex notation. *\/\n@@ -1889,1 +1882,1 @@\n-                scanSymbolic(in, i, \"Infinity\");\n+                scanSymbolic(in, i, INFINITY_REP);\n@@ -1893,1 +1886,1 @@\n-                scanSymbolic(in, i, \"NaN\");\n+                scanSymbolic(in, i, NAN_REP);\n@@ -1896,1 +1889,1 @@\n-            if (ch == '0' && i < len - 1 && (in.charAt(i + 1) | 0b10_0000) == 'x') {\n+            if (ch == '0' && i + 1 < len && toLowerCase(in.charAt(i + 1)) == 'x') {\n@@ -1934,1 +1927,1 @@\n-        if (i < len && ((ch = in.charAt(i) | 0b10_0000) == 'e' && isDec\n+        if (i < len && ((ch = toLowerCase(in.charAt(i))) == 'e' && isDec\n@@ -1964,1 +1957,1 @@\n-        if (i < len && (((ch = in.charAt(i) | 0b10_0000)) == 'f' || ch == 'd')) {\n+        if (i < len && ((ch = toLowerCase(in.charAt(i))) == 'f' || ch == 'd')) {\n@@ -2065,1 +2058,1 @@\n-            int bl = Long.SIZE - Long.numberOfLeadingZeros(c);  \/\/ bit length\n+            int bl = Long.SIZE - Long.numberOfLeadingZeros(c);  \/\/ bitlength\n@@ -2069,1 +2062,1 @@\n-             * When ep + bl - 1 > E_MAX then x surely rounds to infinity.\n+             * When ep + bl > QE_MAX then x surely rounds to infinity.\n@@ -2072,1 +2065,1 @@\n-                return buildZero(ix, ssign);\n+                return ssign != '-' ? A2BC_POSITIVE_ZERO : A2BC_NEGATIVE_ZERO;\n@@ -2074,2 +2067,2 @@\n-            if (ep > E_MAX[ix] - bl + 1) {\n-                return buildInfinity(ix, ssign);\n+            if (ep > QE_MAX[ix] - bl) {\n+                return ssign != '-' ? A2BC_POSITIVE_INFINITY : A2BC_NEGATIVE_INFINITY;\n@@ -2079,1 +2072,1 @@\n-            if (q > E_MIN[ix] - bl) {\n+            if (q >= QE_MIN[ix] - bl) {\n@@ -2115,5 +2108,4 @@\n-         * Define e' = n + ep, which leads to\n-         *      x = <0 . f_1 ... f_n> 10^e', 10^(e'-1) <= x < 10^e'\n-         * If e' <= EP_MIN then x rounds to zero.\n-         * Similarly, if e' >= EP_MAX then x rounds to infinity.\n-         * (See the comments on the fields for their semantics.)\n+         * Define e = n + ep, which leads to\n+         *      x = 0.d_1 ... d_n 10^e, 10^(e-1) <= x < 10^e\n+         * If e <= E_THR_Z then x rounds to zero.\n+         * Similarly, if e >= E_THR_I then x rounds to infinity.\n@@ -2121,1 +2113,1 @@\n-         * Otherwise, e' fits in an int named e.\n+         * Otherwise, e fits in an int, aptly named e as well.\n@@ -2123,2 +2115,2 @@\n-        int e = Math.clamp(ep + n, EP_MIN[ix], EP_MAX[ix]);\n-        if (e == EP_MIN[ix]) {  \/\/ e' <= E_MIN\n+        int e = Math.clamp(ep + n, E_THR_Z[ix], E_THR_I[ix]);\n+        if (e == E_THR_Z[ix]) {  \/\/ true e <= E_THR_Z\n@@ -2127,1 +2119,1 @@\n-        if (e == EP_MAX[ix]) {  \/\/ e' >= E_MAX\n+        if (e == E_THR_I[ix]) {  \/\/ true e >= E_THR_I\n@@ -2135,2 +2127,4 @@\n-         *      2^(P-1) <= beta < 2^P and q >= Q_MIN\n-         *      0 < beta < 2^(P-1) and q = Q_MIN\n+         *      q >= Q_MIN\n+         * and\n+         *      either  2^(P-1) <= beta < 2^P\n+         *      or      0 < beta < 2^(P-1) and q = Q_MIN\n@@ -2149,1 +2143,1 @@\n-         * When q >= Q_MIN, consider the interval [ 2^(P-1+q), 2^(P+q) ).\n+         * Consider the half-open interval [ 2^(P-1+q), 2^(P+q) ).\n@@ -2152,1 +2146,1 @@\n-         * When q = Q_MIN also consider the interval [0, 2^(P-1+q) )\n+         * When q = Q_MIN also consider the interval half-open [0, 2^(P-1+q) ),\n@@ -2163,0 +2157,1 @@\n+         *\n@@ -2168,1 +2163,1 @@\n-         * If n > e we pass the digits <f_1 ... f_e 3> (3 is as good as any other\n+         * If n > e we pass the digits d_1...d_e 3 (3 is as good as any other\n@@ -2170,1 +2165,1 @@\n-         * If n <= e we pass all the digits <f_1 ... f_n> (no sticky digit,\n+         * If n <= e we pass all the digits d_1...d_n (no sticky digit,\n@@ -2192,0 +2187,1 @@\n+        \/\/ TODO insert logic for small n: 9 for float, 18 for double\n@@ -2204,28 +2200,2 @@\n-    private static PreparedASCIIToBinaryBuffer buildZero(int ix, int ssign) {\n-        \/* For now throw on BINARY_16_IX, until Float16 is integrated in java.base. *\/\n-        return switch (ix) {\n-            case BINARY_32_IX ->\n-                new PreparedASCIIToBinaryBuffer(\n-                        Double.NaN,\n-                        ssign != '-' ? 0.0f : -0.0f);\n-            case BINARY_64_IX ->\n-                new PreparedASCIIToBinaryBuffer(\n-                        ssign != '-' ? 0.0d : -0.0d,\n-                        Float.NaN);\n-            default -> throw new AssertionError(\"unexpected\");\n-        };\n-    }\n-\n-    private static PreparedASCIIToBinaryBuffer buildInfinity(int ix, int ssign) {\n-        \/* For now throw on BINARY_16_IX, until Float16 is integrated in java.base. *\/\n-        return switch (ix) {\n-            case BINARY_32_IX ->\n-                new PreparedASCIIToBinaryBuffer(\n-                        Double.NaN,\n-                        ssign != '-' ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY);\n-            case BINARY_64_IX ->\n-                new PreparedASCIIToBinaryBuffer(\n-                        ssign != '-' ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY,\n-                        Float.NaN);\n-            default -> throw new AssertionError(\"unexpected\");\n-        };\n+    private static int toLowerCase(int ch) {\n+        return ch | 0b10_0000;\n@@ -2273,1 +2243,1 @@\n-                !isDec && 'a' <= (lch = ch | 0b10_0000) && lch <= 'f';\n+                !isDec && 'a' <= (lch = toLowerCase(ch)) && lch <= 'f';\n@@ -2278,1 +2248,1 @@\n-        return ch <= '9' ? ch - '0' : (ch | 0b10_0000) - ('a' - 10);\n+        return ch <= '9' ? ch - '0' : toLowerCase(ch) - ('a' - 10);\n@@ -2330,1 +2300,1 @@\n-     * of precision P is (uniquely) expressed as\n+     * value of precision P is (uniquely) expressed as\n@@ -2334,3 +2304,3 @@\n-     *      either      2^(P-1) <= c < 2^P  (normal)\n-     *      or          0 < c < 2^(P-1)  &  q = Q_MIN  (subnormal)\n-     *      c = <d_0 d_1 ... d_(P-1)>, d_i in [0, 2)\n+     *      either      2^(P-1) <= c < 2^P                  (normal)\n+     *      or          0 < c < 2^(P-1)  &  q = Q_MIN       (subnormal)\n+     *      c = b_1...b_P  (b_i in [0, 2))\n@@ -2338,1 +2308,1 @@\n-     * Equivalently, the fp value can be (uniquely) expressed as\n+     * Equivalently, the floating-point value can be (uniquely) expressed as\n@@ -2340,3 +2310,3 @@\n-     * where integer ep and real f meet\n-     *      ep = q + P - 1\n-     *      m = c 2^(1-P)\n+     * where integer qe and real f meet\n+     *      qe = q + P\n+     *      m = c 2^(-P)\n@@ -2344,5 +2314,4 @@\n-     *      E_MIN = Q_MIN + P - 1, E_MAX = Q_MAX + P - 1,\n-     *      1 <= m < 2      (normal)\n-     *      m < 1           (subnormal)\n-     *      m = <d_0 . d_1 ... d_(P-1)>\n-     * with a (binary) point between d_0 and d_1\n+     *      QE_MIN = Q_MIN + P, QE_MAX = Q_MAX + P,\n+     *      2^(-1) <= m < 1     (normal)\n+     *      m < 2^(-1)          (subnormal)\n+     *      m = 0.b_1...b_P\n@@ -2361,1 +2330,0 @@\n-    \/* The precision of the format. *\/\n@@ -2364,1 +2332,5 @@\n-            11, 24, 53, \/\/ 113, 237,\n+            11,\n+            FloatToDecimal.P,\n+            DoubleToDecimal.P,\n+            \/\/ 113,\n+            \/\/ 237,\n@@ -2367,6 +2339,0 @@\n-    \/*\n-     * EP_MIN = max{e : 10^e <= MIN_VALUE\/2}.\n-     * Note that MIN_VALUE\/2 is the 0 threshold.\n-     * Less or equal values round to 0 when using roundTiesToEven.\n-     * Equivalently, EP_MIN = floor(log10(2^(Q_MIN-1))).\n-     *\/\n@@ -2374,2 +2340,6 @@\n-    private static final int[] EP_MIN = {\n-            -8, -46, -324, \/\/ -4_966, -78_985,\n+    private static final int[] W = {\n+            5,\n+            FloatToDecimal.W,\n+            DoubleToDecimal.W,\n+\/\/            (1 << 4 + BINARY_128_IX) - P[BINARY_128_IX],\n+\/\/            (1 << 4 + BINARY_256_IX) - P[BINARY_256_IX],\n@@ -2378,6 +2348,2 @@\n-    \/*\n-     * EP_MAX = min{e : MAX_VALUE + ulp(MAX_VALUE)\/2 <= 10^(e-1)}.\n-     * Note that MAX_VALUE + ulp(MAX_VALUE)\/2 is the infinity threshold.\n-     * Greater or equal values round to infinity when using roundTiesToEven.\n-     * Equivalently, EP_MAX = ceil(log10((2^P - 1\/2) 2^Q_MAX)) + 1.\n-     *\/\n+    \/* Minimum exponent in the m 2^e representation. *\/\n+    \/* Minimum exponent in the c 2^q representation. *\/\n@@ -2385,2 +2351,6 @@\n-    private static final int[] EP_MAX = {\n-            6, 40, 310, \/\/ 4_934, 78_915,\n+    private static final int[] Q_MIN = {\n+            -24,  \/\/ Float16ToDecimal.Q_MIN,\n+            FloatToDecimal.Q_MIN,\n+            DoubleToDecimal.Q_MIN,\n+\/\/            QE_MIN[BINARY_128_IX] - (P[BINARY_128_IX] - 1),\n+\/\/            QE_MIN[BINARY_256_IX] - (P[BINARY_256_IX] - 1),\n@@ -2389,1 +2359,0 @@\n-    \/* Exponent width. *\/\n@@ -2391,6 +2360,6 @@\n-    private static final int[] W = {\n-            (1 << 4 + BINARY_16_IX) - P[BINARY_16_IX],\n-            (1 << 4 + BINARY_32_IX) - P[BINARY_32_IX],\n-            (1 << 4 + BINARY_64_IX) - P[BINARY_64_IX],\n-\/\/            (1 << 4 + BINARY_128_IX) - P[BINARY_128_IX],\n-\/\/            (1 << 4 + BINARY_256_IX) - P[BINARY_256_IX],\n+    private static final int[] QE_MIN = {\n+            Q_MIN[BINARY_16_IX] + P[BINARY_16_IX],\n+            FloatToDecimal.Q_MIN + FloatToDecimal.P,\n+            DoubleToDecimal.Q_MIN + DoubleToDecimal.P,\n+\/\/            Q_MIN[BINARY_128_IX] + P[BINARY_128_IX],\n+\/\/            Q_MIN[BINARY_256_IX] + P[BINARY_256_IX],\n@@ -2401,6 +2370,6 @@\n-    private static final int[] E_MAX = {\n-            (1 << W[BINARY_16_IX] - 1) - 1,\n-            (1 << W[BINARY_32_IX] - 1) - 1,\n-            (1 << W[BINARY_64_IX] - 1) - 1,\n-\/\/            (1 << W[BINARY_128_IX] - 1) - 1,\n-\/\/            (1 << W[BINARY_256_IX] - 1) - 1,\n+    private static final int[] QE_MAX = {\n+            3 - QE_MIN[BINARY_16_IX],\n+            FloatToDecimal.Q_MAX + FloatToDecimal.P,\n+            DoubleToDecimal.Q_MAX + DoubleToDecimal.P,\n+\/\/            3 - QE_MIN[BINARY_128_IX],\n+\/\/            3 - QE_MIN[BINARY_256_IX],\n@@ -2409,1 +2378,0 @@\n-    \/* Minimum exponent in the m 2^e representation. *\/\n@@ -2411,6 +2379,6 @@\n-    private static final int[] E_MIN = {\n-            1 - E_MAX[BINARY_16_IX],\n-            1 - E_MAX[BINARY_32_IX],\n-            1 - E_MAX[BINARY_64_IX],\n-\/\/            1 - E_MAX[BINARY_128_IX],\n-\/\/            1 - E_MAX[BINARY_256_IX],\n+    private static final int[] E_THR_Z = {\n+            -8,\n+            FloatToDecimal.E_THR_Z,\n+            DoubleToDecimal.E_THR_Z,\n+            \/\/ -4_966,\n+            \/\/ -78_985,\n@@ -2419,1 +2387,0 @@\n-    \/* Minimum exponent in the c 2^q representation. *\/\n@@ -2421,6 +2388,6 @@\n-    private static final int[] Q_MIN = {\n-            E_MIN[BINARY_16_IX] - (P[BINARY_16_IX] - 1),\n-            E_MIN[BINARY_32_IX] - (P[BINARY_32_IX] - 1),\n-            E_MIN[BINARY_64_IX] - (P[BINARY_64_IX] - 1),\n-\/\/            E_MIN[BINARY_128_IX] - (P[BINARY_128_IX] - 1),\n-\/\/            E_MIN[BINARY_256_IX] - (P[BINARY_256_IX] - 1),\n+    private static final int[] E_THR_I = {\n+            6,\n+            FloatToDecimal.E_THR_I,\n+            DoubleToDecimal.E_THR_I,\n+            \/\/ 4_934,\n+            \/\/ 78_915,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":90,"deletions":123,"binary":false,"changes":213,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.vm.annotation.Stable;\n+\n@@ -37,1 +39,1 @@\n-     *     Giulietti, \"The Schubfach way to render doubles\",\n+     * [1] Giulietti, \"The Schubfach way to render doubles\",\n@@ -42,3 +44,3 @@\n-     * The boundaries for k in g0(int) and g1(int).\n-     * K_MIN must be DoubleToDecimal.K_MIN or less.\n-     * K_MAX must be DoubleToDecimal.K_MAX or more.\n+     * N = max{n : 10^n - 1 <= 2^Long.SIZE - 1}\n+     * Every positive integer up to N decimal digits fits in an unsigned long,\n+     * but there are positive integers of N + 1 digits that do not.\n@@ -46,2 +48,1 @@\n-    static final int K_MIN = -324;\n-    static final int K_MAX = 292;\n+    static final int N = 19;\n@@ -49,2 +50,38 @@\n-    \/* Must be DoubleToDecimal.H or more *\/\n-    static final int H = 17;\n+    \/*\n+     * Given integer e, let 10^e = beta 2^r for the unique integer r and\n+     * real beta meeting\n+     *      2^125 <= beta < 2^126.\n+     * The unique r and beta are\n+     *      r = floor(log2(10^e)) - 125,  beta = 10^e 2^(-r)\n+     * Let g = floor(beta) + 1.\n+     * Thus,\n+     *      (g - 1) 2^r <= 10^e < g 2^r\n+     * Further, let\n+     *      g1 = floor(g 2^(-63)),  g0 = g - g1 2^63\n+     *\n+     * For e with GE_MIN <= e <= GE_MAX, the values g1 and g0 are available\n+     * by invoking methods g1(e) and g0(e).\n+     * In addition, r = flog2pow10(e) - 125.\n+     *\n+     * The boundaries GE_MIN, GE_MAX must minimally fit the purposes of the full\n+     * double->decimal and the fast paths of the decimal->double conversions.\n+     *\n+     * For the double->decimal conversion, the interval [GE_MIN, GE_MAX] must\n+     * include the interval [-K_MAX, -K_MIN], where K_MIN and K_MAX are\n+     * discussed in [1].\n+     * (See DoubleToDecimal.K_MIN and DoubleToDecimal.K_MAX.)\n+     *\n+     * Let x = f 10^ep, where integers f and ep meet 10^(n-1) <= f < 10^n\n+     * (that is, f has n digits) and E_THR_Z < ep + n < E_THR_I.\n+     * (See DoubleToDecimal.E_THR_Z and DoubleToDecimal.E_THR_I.)\n+     *\n+     * The decimal->double fast paths assume n <= N.\n+     * Thus, E_THR_Z - (N - 1) <= ep <= E_THR_I - 2, which means that\n+     * the interval [GE_MIN, GE_MAX] must include the interval\n+     * [E_THR_Z - (N - 1), E_THR_I - 2].\n+     * That is,\n+     *      GE_MIN = min(-K_MAX, E_THR_Z - (N - 1))\n+     *      GE_MAX = max(-K_MIN, E_THR_I - 2)\n+     *\/\n+    static final int GE_MIN = -342;\n+    static final int GE_MAX = 324;\n@@ -62,1 +99,0 @@\n-        throw new RuntimeException(\"not supposed to be instantiated.\");\n@@ -65,1 +101,6 @@\n-    \/* The first powers of 10. The last entry must be 10^(DoubleToDecimal.H) *\/\n+    \/*\n+     * The first (unsigned) powers of 10, where the last entry must be 10^N.\n+     *\n+     * @Stable is safe to use, as there are no 0 entries.\n+     *\/\n+    @Stable\n@@ -67,18 +108,20 @@\n-        1L,\n-        10L,\n-        100L,\n-        1_000L,\n-        10_000L,\n-        100_000L,\n-        1_000_000L,\n-        10_000_000L,\n-        100_000_000L,\n-        1_000_000_000L,\n-        10_000_000_000L,\n-        100_000_000_000L,\n-        1_000_000_000_000L,\n-        10_000_000_000_000L,\n-        100_000_000_000_000L,\n-        1_000_000_000_000_000L,\n-        10_000_000_000_000_000L,\n-        100_000_000_000_000_000L,\n+            1L,\n+            10L,\n+            100L,\n+            1_000L,\n+            10_000L,\n+            100_000L,\n+            1_000_000L,\n+            10_000_000L,\n+            100_000_000L,\n+            1_000_000_000L,\n+            10_000_000_000L,\n+            100_000_000_000L,\n+            1_000_000_000_000L,\n+            10_000_000_000_000L,\n+            100_000_000_000_000L,\n+            1_000_000_000_000_000L,\n+            10_000_000_000_000_000L,\n+            100_000_000_000_000_000L,\n+            1_000_000_000_000_000_000L,\n+            10 * 1_000_000_000_000_000_000L,\n@@ -88,1 +131,1 @@\n-     * Returns 10<sup>{@code e}<\/sup>.\n+     * Returns 10<sup>{@code e}<\/sup> as an unsigned long.\n@@ -90,2 +133,1 @@\n-     * @param e The exponent which must meet\n-     *          0 &le; {@code e} &le; {@link #H}.\n+     * @param e The exponent which must meet 0 &le; {@code e} &le; {@code N}.\n@@ -99,3 +141,1 @@\n-     * Returns the unique integer <i>k<\/i> such that\n-     * 10<sup><i>k<\/i><\/sup> &le; 2<sup>{@code e}<\/sup>\n-     * &lt; 10<sup><i>k<\/i>+1<\/sup>.\n+     * Returns max{e : 10<sup>e<\/sup> &le; 2<sup>{@code q}<\/sup>}.\n@@ -103,2 +143,2 @@\n-     * The result is correct when |{@code e}| &le; 6_432_162.\n-     * Otherwise the result is undefined.\n+     * The result is correct when |{@code q}| &le; 6_432_162.\n+     * Otherwise, the result is undefined.\n@@ -106,3 +146,3 @@\n-     * @param e The exponent of 2, which should meet\n-     *          |{@code e}| &le; 6_432_162 for safe results.\n-     * @return &lfloor;log<sub>10<\/sub>2<sup>{@code e}<\/sup>&rfloor;.\n+     * @param q The exponent of 2, which should meet\n+     *          |{@code q}| &le; 6_432_162 for safe results.\n+     * @return &lfloor;log<sub>10<\/sub>2<sup>{@code q}<\/sup>&rfloor;.\n@@ -110,2 +150,2 @@\n-    static int flog10pow2(int e) {\n-        return (int) (e * C_10 >> Q_10);\n+    static int flog10pow2(int q) {\n+        return (int) (q * C_10 >> Q_10);\n@@ -115,3 +155,1 @@\n-     * Returns the unique integer <i>k<\/i> such that\n-     * 10<sup><i>k<\/i><\/sup> &le; 3\/4 &middot; 2<sup>{@code e}<\/sup>\n-     * &lt; 10<sup><i>k<\/i>+1<\/sup>.\n+     * Returns max{e : 10<sup>e<\/sup> &le; 3\/4 &middot; 2<sup>{@code q}<\/sup>}.\n@@ -120,2 +158,2 @@\n-     * -3_606_689 &le; {@code e} &le; 3_150_619.\n-     * Otherwise the result is undefined.\n+     * -3_606_689 &le; {@code q} &le; 3_150_619.\n+     * Otherwise, the result is undefined.\n@@ -123,2 +161,2 @@\n-     * @param e The exponent of 2, which should meet\n-     *          -3_606_689 &le; {@code e} &le; 3_150_619 for safe results.\n+     * @param q The exponent of 2, which should meet\n+     *          -3_606_689 &le; {@code q} &le; 3_150_619 for safe results.\n@@ -126,1 +164,1 @@\n-     * 2<sup>{@code e}<\/sup>)&rfloor;.\n+     * 2<sup>{@code q}<\/sup>)&rfloor;.\n@@ -128,2 +166,2 @@\n-    static int flog10threeQuartersPow2(int e) {\n-        return (int) (e * C_10 + A_10 >> Q_10);\n+    static int flog10threeQuartersPow2(int q) {\n+        return (int) (q * C_10 + A_10 >> Q_10);\n@@ -133,3 +171,1 @@\n-     * Returns the unique integer <i>k<\/i> such that\n-     * 2<sup><i>k<\/i><\/sup> &le; 10<sup>{@code e}<\/sup>\n-     * &lt; 2<sup><i>k<\/i>+1<\/sup>.\n+     * Returns max{q : 2<sup>q<\/sup> &le; 10<sup>{@code e}<\/sup>}.\n@@ -138,1 +174,1 @@\n-     * Otherwise the result is undefined.\n+     * Otherwise, the result is undefined.\n@@ -148,25 +184,3 @@\n-    \/**\n-     * Let 10<sup>-{@code k}<\/sup> = <i>&beta;<\/i> 2<sup><i>r<\/i><\/sup>,\n-     * for the unique pair of integer <i>r<\/i> and real <i>&beta;<\/i> meeting\n-     * 2<sup>125<\/sup> &le; <i>&beta;<\/i> &lt; 2<sup>126<\/sup>.\n-     * Further, let <i>g<\/i> = &lfloor;<i>&beta;<\/i>&rfloor; + 1.\n-     * Split <i>g<\/i> into the higher 63 bits <i>g<\/i><sub>1<\/sub> and\n-     * the lower 63 bits <i>g<\/i><sub>0<\/sub>. Thus,\n-     * <i>g<\/i><sub>1<\/sub> =\n-     * &lfloor;<i>g<\/i> 2<sup>-63<\/sup>&rfloor;\n-     * and\n-     * <i>g<\/i><sub>0<\/sub> =\n-     * <i>g<\/i> - <i>g<\/i><sub>1<\/sub> 2<sup>63<\/sup>.\n-     * <p>\n-     * This method returns <i>g<\/i><sub>1<\/sub> while\n-     * {@link #g0(int)} returns <i>g<\/i><sub>0<\/sub>.\n-     * <p>\n-     * If needed, the exponent <i>r<\/i> can be computed as\n-     * <i>r<\/i> = {@code flog2pow10(-k)} - 125 (see {@link #flog2pow10(int)}).\n-     *\n-     * @param k The exponent of 10, which must meet\n-     *          {@link #K_MIN} &le; {@code e} &le; {@link #K_MAX}.\n-     * @return <i>g<\/i><sub>1<\/sub> as described above.\n-     *\/\n-    static long g1(int k) {\n-        return g[k - K_MIN << 1];\n+    \/* See the discussion above for the meaning of g1. *\/\n+    static long g1(int e) {\n+        return g[e - GE_MIN << 1];\n@@ -175,11 +189,3 @@\n-    \/**\n-     * Returns <i>g<\/i><sub>0<\/sub> as described in\n-     * {@link #g1(int)}.\n-     *\n-     * @param k The exponent of 10, which must meet\n-     *          {@link #K_MIN} &le; {@code e} &le; {@link #K_MAX}.\n-     * @return <i>g<\/i><sub>0<\/sub> as described in\n-     * {@link #g1(int)}.\n-     *\/\n-    static long g0(int k) {\n-        return g[k - K_MIN << 1 | 1];\n+    \/* See the discussion above for the meaning of g0. *\/\n+    static long g0(int e) {\n+        return g[e - GE_MIN << 1 | 1];\n@@ -189,3 +195,3 @@\n-     * The precomputed values for g1(int) and g0(int).\n-     * The first entry must be for an exponent of K_MIN or less.\n-     * The last entry must be for an exponent of K_MAX or more.\n+     * The precomputed values for g1 and g0.\n+     *\n+     * @Stable is safe to use, as there are no 0 entries.\n@@ -193,0 +199,1 @@\n+    @Stable\n@@ -194,617 +201,668 @@\n-        0x4F0C_EDC9_5A71_8DD4L, 0x5B01_E8B0_9AA0_D1B5L, \/\/ -324\n-        0x7E7B_160E_F71C_1621L, 0x119C_A780_F767_B5EEL, \/\/ -323\n-        0x652F_44D8_C5B0_11B4L, 0x0E16_EC67_2C52_F7F2L, \/\/ -322\n-        0x50F2_9D7A_37C0_0E29L, 0x5812_56B8_F042_5FF5L, \/\/ -321\n-        0x40C2_1794_F966_71BAL, 0x79A8_4560_C035_1991L, \/\/ -320\n-        0x679C_F287_F570_B5F7L, 0x75DA_089A_CD21_C281L, \/\/ -319\n-        0x52E3_F539_9126_F7F9L, 0x44AE_6D48_A41B_0201L, \/\/ -318\n-        0x424F_F761_40EB_F994L, 0x36F1_F106_E9AF_34CDL, \/\/ -317\n-        0x6A19_8BCE_CE46_5C20L, 0x57E9_81A4_A918_547BL, \/\/ -316\n-        0x54E1_3CA5_71D1_E34DL, 0x2CBA_CE1D_5413_76C9L, \/\/ -315\n-        0x43E7_63B7_8E41_82A4L, 0x23C8_A4E4_4342_C56EL, \/\/ -314\n-        0x6CA5_6C58_E39C_043AL, 0x060D_D4A0_6B9E_08B0L, \/\/ -313\n-        0x56EA_BD13_E949_9CFBL, 0x1E71_76E6_BC7E_6D59L, \/\/ -312\n-        0x4588_9743_2107_B0C8L, 0x7EC1_2BEB_C9FE_BDE1L, \/\/ -311\n-        0x6F40_F205_01A5_E7A7L, 0x7E01_DFDF_A997_9635L, \/\/ -310\n-        0x5900_C19D_9AEB_1FB9L, 0x4B34_B319_5479_44F7L, \/\/ -309\n-        0x4733_CE17_AF22_7FC7L, 0x55C3_C27A_A9FA_9D93L, \/\/ -308\n-        0x71EC_7CF2_B1D0_CC72L, 0x5606_03F7_765D_C8EAL, \/\/ -307\n-        0x5B23_9728_8E40_A38EL, 0x7804_CFF9_2B7E_3A55L, \/\/ -306\n-        0x48E9_45BA_0B66_E93FL, 0x1337_0CC7_55FE_9511L, \/\/ -305\n-        0x74A8_6F90_123E_41FEL, 0x51F1_AE0B_BCCA_881BL, \/\/ -304\n-        0x5D53_8C73_41CB_67FEL, 0x74C1_5809_63D5_39AFL, \/\/ -303\n-        0x4AA9_3D29_016F_8665L, 0x43CD_E007_8310_FAF3L, \/\/ -302\n-        0x7775_2EA8_024C_0A3CL, 0x0616_333F_381B_2B1EL, \/\/ -301\n-        0x5F90_F220_01D6_6E96L, 0x3811_C298_F9AF_55B1L, \/\/ -300\n-        0x4C73_F4E6_67DE_BEDEL, 0x600E_3547_2E25_DE28L, \/\/ -299\n-        0x7A53_2170_A631_3164L, 0x3349_EED8_49D6_303FL, \/\/ -298\n-        0x61DC_1AC0_84F4_2783L, 0x42A1_8BE0_3B11_C033L, \/\/ -297\n-        0x4E49_AF00_6A5C_EC69L, 0x1BB4_6FE6_95A7_CCF5L, \/\/ -296\n-        0x7D42_B19A_43C7_E0A8L, 0x2C53_E63D_BC3F_AE55L, \/\/ -295\n-        0x6435_5AE1_CFD3_1A20L, 0x2376_51CA_FCFF_BEAAL, \/\/ -294\n-        0x502A_AF1B_0CA8_E1B3L, 0x35F8_416F_30CC_9888L, \/\/ -293\n-        0x4022_25AF_3D53_E7C2L, 0x5E60_3458_F3D6_E06DL, \/\/ -292\n-        0x669D_0918_621F_D937L, 0x4A33_86F4_B957_CD7BL, \/\/ -291\n-        0x5217_3A79_E819_7A92L, 0x6E8F_9F2A_2DDF_D796L, \/\/ -290\n-        0x41AC_2EC7_ECE1_2EDBL, 0x720C_7F54_F17F_DFABL, \/\/ -289\n-        0x6913_7E0C_AE35_17C6L, 0x1CE0_CBBB_1BFF_CC45L, \/\/ -288\n-        0x540F_980A_24F7_4638L, 0x171A_3C95_AFFF_D69EL, \/\/ -287\n-        0x433F_ACD4_EA5F_6B60L, 0x127B_63AA_F333_1218L, \/\/ -286\n-        0x6B99_1487_DD65_7899L, 0x6A5F_05DE_51EB_5026L, \/\/ -285\n-        0x5614_106C_B11D_FA14L, 0x5518_D17E_A7EF_7352L, \/\/ -284\n-        0x44DC_D9F0_8DB1_94DDL, 0x2A7A_4132_1FF2_C2A8L, \/\/ -283\n-        0x6E2E_2980_E2B5_BAFBL, 0x5D90_6850_331E_043FL, \/\/ -282\n-        0x5824_EE00_B55E_2F2FL, 0x6473_86A6_8F4B_3699L, \/\/ -281\n-        0x4683_F19A_2AB1_BF59L, 0x36C2_D21E_D908_F87BL, \/\/ -280\n-        0x70D3_1C29_DDE9_3228L, 0x579E_1CFE_280E_5A5DL, \/\/ -279\n-        0x5A42_7CEE_4B20_F4EDL, 0x2C7E_7D98_200B_7B7EL, \/\/ -278\n-        0x4835_30BE_A280_C3F1L, 0x09FE_CAE0_19A2_C932L, \/\/ -277\n-        0x7388_4DFD_D0CE_064EL, 0x4331_4499_C29E_0EB6L, \/\/ -276\n-        0x5C6D_0B31_73D8_050BL, 0x4F5A_9D47_CEE4_D891L, \/\/ -275\n-        0x49F0_D5C1_2979_9DA2L, 0x72AE_E439_7250_AD41L, \/\/ -274\n-        0x764E_22CE_A8C2_95D1L, 0x377E_39F5_83B4_4868L, \/\/ -273\n-        0x5EA4_E8A5_53CE_DE41L, 0x12CB_6191_3629_D387L, \/\/ -272\n-        0x4BB7_2084_430B_E500L, 0x756F_8140_F821_7605L, \/\/ -271\n-        0x7925_00D3_9E79_6E67L, 0x6F18_CECE_59CF_233CL, \/\/ -270\n-        0x60EA_670F_B1FA_BEB9L, 0x3F47_0BD8_47D8_E8FDL, \/\/ -269\n-        0x4D88_5272_F4C8_9894L, 0x329F_3CAD_0647_20CAL, \/\/ -268\n-        0x7C0D_50B7_EE0D_C0EDL, 0x3765_2DE1_A3A5_0143L, \/\/ -267\n-        0x633D_DA2C_BE71_6724L, 0x2C50_F181_4FB7_3436L, \/\/ -266\n-        0x4F64_AE8A_31F4_5283L, 0x3D0D_8E01_0C92_902BL, \/\/ -265\n-        0x7F07_7DA9_E986_EA6BL, 0x7B48_E334_E0EA_8045L, \/\/ -264\n-        0x659F_97BB_2138_BB89L, 0x4907_1C2A_4D88_669DL, \/\/ -263\n-        0x514C_7962_80FA_2FA1L, 0x20D2_7CEE_A46D_1EE4L, \/\/ -262\n-        0x4109_FAB5_33FB_594DL, 0x670E_CA58_838A_7F1DL, \/\/ -261\n-        0x680F_F788_532B_C216L, 0x0B4A_DD5A_6C10_CB62L, \/\/ -260\n-        0x533F_F939_DC23_01ABL, 0x22A2_4AAE_BCDA_3C4EL, \/\/ -259\n-        0x4299_942E_49B5_9AEFL, 0x354E_A225_63E1_C9D8L, \/\/ -258\n-        0x6A8F_537D_42BC_2B18L, 0x554A_9D08_9FCF_A95AL, \/\/ -257\n-        0x553F_75FD_CEFC_EF46L, 0x776E_E406_E63F_BAAEL, \/\/ -256\n-        0x4432_C4CB_0BFD_8C38L, 0x5F8B_E99F_1E99_6225L, \/\/ -255\n-        0x6D1E_07AB_4662_79F4L, 0x3279_75CB_6428_9D08L, \/\/ -254\n-        0x574B_3955_D1E8_6190L, 0x2861_2B09_1CED_4A6DL, \/\/ -253\n-        0x45D5_C777_DB20_4E0DL, 0x06B4_226D_B0BD_D524L, \/\/ -252\n-        0x6FBC_7259_5E9A_167BL, 0x2453_6A49_1AC9_5506L, \/\/ -251\n-        0x5963_8EAD_E548_11FCL, 0x1D0F_883A_7BD4_4405L, \/\/ -250\n-        0x4782_D88B_1DD3_4196L, 0x4A72_D361_FCA9_D004L, \/\/ -249\n-        0x726A_F411_C952_028AL, 0x43EA_EBCF_FAA9_4CD3L, \/\/ -248\n-        0x5B88_C341_6DDB_353BL, 0x4FEF_230C_C887_70A9L, \/\/ -247\n-        0x493A_35CD_F17C_2A96L, 0x0CBF_4F3D_6D39_26EEL, \/\/ -246\n-        0x7529_EFAF_E8C6_AA89L, 0x6132_1862_485B_717CL, \/\/ -245\n-        0x5DBB_2626_53D2_2207L, 0x675B_46B5_06AF_8DFDL, \/\/ -244\n-        0x4AFC_1E85_0FDB_4E6CL, 0x52AF_6BC4_0559_3E64L, \/\/ -243\n-        0x77F9_CA6E_7FC5_4A47L, 0x377F_12D3_3BC1_FD6DL, \/\/ -242\n-        0x5FFB_0858_6637_6E9FL, 0x45FF_4242_9634_CABDL, \/\/ -241\n-        0x4CC8_D379_EB5F_8BB2L, 0x6B32_9B68_782A_3BCBL, \/\/ -240\n-        0x7ADA_EBF6_4565_AC51L, 0x2B84_2BDA_59DD_2C77L, \/\/ -239\n-        0x6248_BCC5_0451_56A7L, 0x3C69_BCAE_AE4A_89F9L, \/\/ -238\n-        0x4EA0_9704_0374_4552L, 0x6387_CA25_583B_A194L, \/\/ -237\n-        0x7DCD_BE6C_D253_A21EL, 0x05A6_103B_C05F_68EDL, \/\/ -236\n-        0x64A4_9857_0EA9_4E7EL, 0x37B8_0CFC_99E5_ED8AL, \/\/ -235\n-        0x5083_AD12_7221_0B98L, 0x2C93_3D96_E184_BE08L, \/\/ -234\n-        0x4069_5741_F4E7_3C79L, 0x7075_CADF_1AD0_9807L, \/\/ -233\n-        0x670E_F203_2171_FA5CL, 0x4D89_4498_2AE7_59A4L, \/\/ -232\n-        0x5272_5B35_B45B_2EB0L, 0x3E07_6A13_5585_E150L, \/\/ -231\n-        0x41F5_15C4_9048_F226L, 0x64D2_BB42_AAD1_810DL, \/\/ -230\n-        0x6988_22D4_1A0E_503EL, 0x07B7_9204_4482_6815L, \/\/ -229\n-        0x546C_E8A9_AE71_D9CBL, 0x1FC6_0E69_D068_5344L, \/\/ -228\n-        0x438A_53BA_F1F4_AE3CL, 0x196B_3EBB_0D20_429DL, \/\/ -227\n-        0x6C10_85F7_E987_7D2DL, 0x0F11_FDF8_1500_6A94L, \/\/ -226\n-        0x5673_9E5F_EE05_FDBDL, 0x58DB_3193_4400_5543L, \/\/ -225\n-        0x4529_4B7F_F19E_6497L, 0x60AF_5ADC_3666_AA9CL, \/\/ -224\n-        0x6EA8_78CC_B5CA_3A8CL, 0x344B_C493_8A3D_DDC7L, \/\/ -223\n-        0x5886_C70A_2B08_2ED6L, 0x5D09_6A0F_A1CB_17D2L, \/\/ -222\n-        0x46D2_38D4_EF39_BF12L, 0x173A_BB3F_B4A2_7975L, \/\/ -221\n-        0x7150_5AEE_4B8F_981DL, 0x0B91_2B99_2103_F588L, \/\/ -220\n-        0x5AA6_AF25_093F_ACE4L, 0x0940_EFAD_B403_2AD3L, \/\/ -219\n-        0x4885_58EA_6DCC_8A50L, 0x0767_2624_9002_88A9L, \/\/ -218\n-        0x7408_8E43_E2E0_DD4CL, 0x723E_A36D_B337_410EL, \/\/ -217\n-        0x5CD3_A503_1BE7_1770L, 0x5B65_4F8A_F5C5_CDA5L, \/\/ -216\n-        0x4A42_EA68_E31F_45F3L, 0x62B7_72D5_916B_0AEBL, \/\/ -215\n-        0x76D1_770E_3832_0986L, 0x0458_B7BC_1BDE_77DDL, \/\/ -214\n-        0x5F0D_F8D8_2CF4_D46BL, 0x1D13_C630_164B_9318L, \/\/ -213\n-        0x4C0B_2D79_BD90_A9EFL, 0x30DC_9E8C_DEA2_DC13L, \/\/ -212\n-        0x79AB_7BF5_FC1A_A97FL, 0x0160_FDAE_3104_9351L, \/\/ -211\n-        0x6155_FCC4_C9AE_EDFFL, 0x1AB3_FE24_F403_A90EL, \/\/ -210\n-        0x4DDE_63D0_A158_BE65L, 0x6229_981D_9002_EDA5L, \/\/ -209\n-        0x7C97_061A_9BC1_30A2L, 0x69DC_2695_B337_E2A1L, \/\/ -208\n-        0x63AC_04E2_1634_26E8L, 0x54B0_1EDE_28F9_821BL, \/\/ -207\n-        0x4FBC_D0B4_DE90_1F20L, 0x43C0_18B1_BA61_34E2L, \/\/ -206\n-        0x7F94_8121_6419_CB67L, 0x1F99_C11C_5D68_549DL, \/\/ -205\n-        0x6610_674D_E9AE_3C52L, 0x4C7B_00E3_7DED_107EL, \/\/ -204\n-        0x51A6_B90B_2158_3042L, 0x09FC_00B5_FE57_4065L, \/\/ -203\n-        0x4152_2DA2_8113_59CEL, 0x3B30_0091_9845_CD1DL, \/\/ -202\n-        0x6883_7C37_34EB_C2E3L, 0x784C_CDB5_C06F_AE95L, \/\/ -201\n-        0x539C_635F_5D89_68B6L, 0x2D0A_3E2B_0059_5877L, \/\/ -200\n-        0x42E3_82B2_B13A_BA2BL, 0x3DA1_CB55_99E1_1393L, \/\/ -199\n-        0x6B05_9DEA_B52A_C378L, 0x629C_7888_F634_EC1EL, \/\/ -198\n-        0x559E_17EE_F755_692DL, 0x3549_FA07_2B5D_89B1L, \/\/ -197\n-        0x447E_798B_F911_20F1L, 0x1107_FB38_EF7E_07C1L, \/\/ -196\n-        0x6D97_28DF_F4E8_34B5L, 0x01A6_5EC1_7F30_0C68L, \/\/ -195\n-        0x57AC_20B3_2A53_5D5DL, 0x4E1E_B234_65C0_09EDL, \/\/ -194\n-        0x4623_4D5C_21DC_4AB1L, 0x24E5_5B5D_1E33_3B24L, \/\/ -193\n-        0x7038_7BC6_9C93_AAB5L, 0x216E_F894_FD1E_C506L, \/\/ -192\n-        0x59C6_C96B_B076_222AL, 0x4DF2_6077_30E5_6A6CL, \/\/ -191\n-        0x47D2_3ABC_8D2B_4E88L, 0x3E5B_805F_5A51_21F0L, \/\/ -190\n-        0x72E9_F794_1512_1740L, 0x63C5_9A32_2A1B_697FL, \/\/ -189\n-        0x5BEE_5FA9_AA74_DF67L, 0x0304_7B5B_54E2_BACCL, \/\/ -188\n-        0x498B_7FBA_EEC3_E5ECL, 0x0269_FC49_10B5_623DL, \/\/ -187\n-        0x75AB_FF91_7E06_3CACL, 0x6A43_2D41_B455_69FBL, \/\/ -186\n-        0x5E23_32DA_CB38_308AL, 0x21CF_5767_C377_87FCL, \/\/ -185\n-        0x4B4F_5BE2_3C2C_F3A1L, 0x67D9_12B9_692C_6CCAL, \/\/ -184\n-        0x787E_F969_F9E1_85CFL, 0x595B_5128_A847_1476L, \/\/ -183\n-        0x6065_9454_C7E7_9E3FL, 0x6115_DA86_ED05_A9F8L, \/\/ -182\n-        0x4D1E_1043_D31F_B1CCL, 0x4DAB_1538_BD9E_2193L, \/\/ -181\n-        0x7B63_4D39_51CC_4FADL, 0x62AB_5527_95C9_CF52L, \/\/ -180\n-        0x62B5_D761_0E3D_0C8BL, 0x0222_AA86_116E_3F75L, \/\/ -179\n-        0x4EF7_DF80_D830_D6D5L, 0x4E82_2204_DABE_992AL, \/\/ -178\n-        0x7E59_659A_F381_57BCL, 0x1736_9CD4_9130_F510L, \/\/ -177\n-        0x6514_5148_C2CD_DFC9L, 0x5F5E_E3DD_40F3_F740L, \/\/ -176\n-        0x50DD_0DD3_CF0B_196EL, 0x1918_B64A_9A5C_C5CDL, \/\/ -175\n-        0x40B0_D7DC_A5A2_7ABEL, 0x4746_F83B_AEB0_9E3EL, \/\/ -174\n-        0x6781_5961_0903_F797L, 0x253E_59F9_1780_FD2FL, \/\/ -173\n-        0x52CD_E11A_6D9C_C612L, 0x50FE_AE60_DF9A_6426L, \/\/ -172\n-        0x423E_4DAE_BE17_04DBL, 0x5A65_584D_7FAE_B685L, \/\/ -171\n-        0x69FD_4917_968B_3AF9L, 0x10A2_26E2_65E4_573BL, \/\/ -170\n-        0x54CA_A0DF_ABA2_9594L, 0x0D4E_8581_EB1D_1295L, \/\/ -169\n-        0x43D5_4D7F_BC82_1143L, 0x243E_D134_BC17_4211L, \/\/ -168\n-        0x6C88_7BFF_9403_4ED2L, 0x06CA_E854_6025_3682L, \/\/ -167\n-        0x56D3_9666_1002_A574L, 0x6BD5_86A9_E684_2B9BL, \/\/ -166\n-        0x4576_11EB_4002_1DF7L, 0x0977_9EEE_5203_5616L, \/\/ -165\n-        0x6F23_4FDE_CCD0_2FF1L, 0x5BF2_97E3_B66B_BCEFL, \/\/ -164\n-        0x58E9_0CB2_3D73_598EL, 0x165B_ACB6_2B89_63F3L, \/\/ -163\n-        0x4720_D6F4_FDF5_E13EL, 0x4516_23C4_EFA1_1CC2L, \/\/ -162\n-        0x71CE_24BB_2FEF_CECAL, 0x3B56_9FA1_7F68_2E03L, \/\/ -161\n-        0x5B0B_5095_BFF3_0BD5L, 0x15DE_E61A_CC53_5803L, \/\/ -160\n-        0x48D5_DA11_665C_0977L, 0x2B18_B815_7042_ACCFL, \/\/ -159\n-        0x7489_5CE8_A3C6_758BL, 0x5E8D_F355_806A_AE18L, \/\/ -158\n-        0x5D3A_B0BA_1C9E_C46FL, 0x653E_5C44_66BB_BE7AL, \/\/ -157\n-        0x4A95_5A2E_7D4B_D059L, 0x3765_169D_1EFC_9861L, \/\/ -156\n-        0x7755_5D17_2EDF_B3C2L, 0x256E_8A94_FE60_F3CFL, \/\/ -155\n-        0x5F77_7DAC_257F_C301L, 0x6ABE_D543_FEB3_F63FL, \/\/ -154\n-        0x4C5F_97BC_EACC_9C01L, 0x3BCB_DDCF_FEF6_5E99L, \/\/ -153\n-        0x7A32_8C61_77AD_C668L, 0x5FAC_9619_97F0_975BL, \/\/ -152\n-        0x61C2_09E7_92F1_6B86L, 0x7FBD_44E1_465A_12AFL, \/\/ -151\n-        0x4E34_D4B9_425A_BC6BL, 0x7FCA_9D81_0514_DBBFL, \/\/ -150\n-        0x7D21_545B_9D5D_FA46L, 0x32DD_C8CE_6E87_C5FFL, \/\/ -149\n-        0x641A_A9E2_E44B_2E9EL, 0x5BE4_A0A5_2539_6B32L, \/\/ -148\n-        0x5015_54B5_836F_587EL, 0x7CB6_E6EA_842D_EF5CL, \/\/ -147\n-        0x4011_1091_35F2_AD32L, 0x3092_5255_368B_25E3L, \/\/ -146\n-        0x6681_B41B_8984_4850L, 0x4DB6_EA21_F0DE_A304L, \/\/ -145\n-        0x5201_5CE2_D469_D373L, 0x57C5_881B_2718_826AL, \/\/ -144\n-        0x419A_B0B5_76BB_0F8FL, 0x5FD1_39AF_527A_01EFL, \/\/ -143\n-        0x68F7_8122_5791_B27FL, 0x4C81_F5E5_50C3_364AL, \/\/ -142\n-        0x53F9_341B_7941_5B99L, 0x239B_2B1D_DA35_C508L, \/\/ -141\n-        0x432D_C349_2DCD_E2E1L, 0x02E2_88E4_AE91_6A6DL, \/\/ -140\n-        0x6B7C_6BA8_4949_6B01L, 0x516A_74A1_174F_10AEL, \/\/ -139\n-        0x55FD_22ED_076D_EF34L, 0x4121_F6E7_45D8_DA25L, \/\/ -138\n-        0x44CA_8257_3924_BF5DL, 0x1A81_9252_9E47_14EBL, \/\/ -137\n-        0x6E10_D08B_8EA1_322EL, 0x5D9C_1D50_FD3E_87DDL, \/\/ -136\n-        0x580D_73A2_D880_F4F2L, 0x17B0_1773_FDCB_9FE4L, \/\/ -135\n-        0x4671_294F_139A_5D8EL, 0x4626_7929_97D6_1984L, \/\/ -134\n-        0x70B5_0EE4_EC2A_2F4AL, 0x3D0A_5B75_BFBC_F59FL, \/\/ -133\n-        0x5A2A_7250_BCEE_8C3BL, 0x4A6E_AF91_6630_C47FL, \/\/ -132\n-        0x4821_F50D_63F2_09C9L, 0x21F2_260D_EB5A_36CCL, \/\/ -131\n-        0x7369_8815_6CB6_760EL, 0x6983_7016_455D_247AL, \/\/ -130\n-        0x5C54_6CDD_F091_F80BL, 0x6E02_C011_D117_5062L, \/\/ -129\n-        0x49DD_23E4_C074_C66FL, 0x719B_CCDB_0DAC_404EL, \/\/ -128\n-        0x762E_9FD4_6721_3D7FL, 0x68F9_47C4_E2AD_33B0L, \/\/ -127\n-        0x5E8B_B310_5280_FDFFL, 0x6D94_396A_4EF0_F627L, \/\/ -126\n-        0x4BA2_F5A6_A867_3199L, 0x3E10_2DEE_A58D_91B9L, \/\/ -125\n-        0x7904_BC3D_DA3E_B5C2L, 0x3019_E317_6F48_E927L, \/\/ -124\n-        0x60D0_9697_E1CB_C49BL, 0x4014_B5AC_5907_20ECL, \/\/ -123\n-        0x4D73_ABAC_B4A3_03AFL, 0x4CDD_5E23_7A6C_1A57L, \/\/ -122\n-        0x7BEC_45E1_2104_D2B2L, 0x47C8_969F_2A46_908AL, \/\/ -121\n-        0x6323_6B1A_80D0_A88EL, 0x6CA0_787F_5505_406FL, \/\/ -120\n-        0x4F4F_88E2_00A6_ED3FL, 0x0A19_F9FF_7737_66BFL, \/\/ -119\n-        0x7EE5_A7D0_010B_1531L, 0x5CF6_5CCB_F1F2_3DFEL, \/\/ -118\n-        0x6584_8640_00D5_AA8EL, 0x172B_7D6F_F4C1_CB32L, \/\/ -117\n-        0x5136_D1CC_CD77_BBA4L, 0x78EF_978C_C3CE_3C28L, \/\/ -116\n-        0x40F8_A7D7_0AC6_2FB7L, 0x13F2_DFA3_CFD8_3020L, \/\/ -115\n-        0x67F4_3FBE_77A3_7F8BL, 0x3984_9906_1959_E699L, \/\/ -114\n-        0x5329_CC98_5FB5_FFA2L, 0x6136_E0D1_ADE1_8548L, \/\/ -113\n-        0x4287_D6E0_4C91_994FL, 0x00F8_B3DA_F181_376DL, \/\/ -112\n-        0x6A72_F166_E0E8_F54BL, 0x1B27_862B_1C01_F247L, \/\/ -111\n-        0x5528_C11F_1A53_F76FL, 0x2F52_D1BC_1667_F506L, \/\/ -110\n-        0x4420_9A7F_4843_2C59L, 0x0C42_4163_451F_F738L, \/\/ -109\n-        0x6D00_F732_0D38_46F4L, 0x7A03_9BD2_0833_2526L, \/\/ -108\n-        0x5733_F8F4_D760_38C3L, 0x7B36_1641_A028_EA85L, \/\/ -107\n-        0x45C3_2D90_AC4C_FA36L, 0x2F5E_7834_8020_BB9EL, \/\/ -106\n-        0x6F9E_AF4D_E07B_29F0L, 0x4BCA_59ED_99CD_F8FCL, \/\/ -105\n-        0x594B_BF71_8062_87F3L, 0x563B_7B24_7B0B_2D96L, \/\/ -104\n-        0x476F_CC5A_CD1B_9FF6L, 0x11C9_2F50_626F_57ACL, \/\/ -103\n-        0x724C_7A2A_E1C5_CCBDL, 0x02DB_7EE7_03E5_5912L, \/\/ -102\n-        0x5B70_61BB_E7D1_7097L, 0x1BE2_CBEC_031D_E0DCL, \/\/ -101\n-        0x4926_B496_530D_F3ACL, 0x164F_0989_9C17_E716L, \/\/ -100\n-        0x750A_BA8A_1E7C_B913L, 0x3D4B_4275_C68C_A4F0L, \/\/  -99\n-        0x5DA2_2ED4_E530_940FL, 0x4AA2_9B91_6BA3_B726L, \/\/  -98\n-        0x4AE8_2577_1DC0_7672L, 0x6EE8_7C74_561C_9285L, \/\/  -97\n-        0x77D9_D58B_62CD_8A51L, 0x3173_FA53_BCFA_8408L, \/\/  -96\n-        0x5FE1_77A2_B571_3B74L, 0x278F_FB76_30C8_69A0L, \/\/  -95\n-        0x4CB4_5FB5_5DF4_2F90L, 0x1FA6_62C4_F3D3_87B3L, \/\/  -94\n-        0x7ABA_32BB_C986_B280L, 0x32A3_D13B_1FB8_D91FL, \/\/  -93\n-        0x622E_8EFC_A138_8ECDL, 0x0EE9_742F_4C93_E0E6L, \/\/  -92\n-        0x4E8B_A596_E760_723DL, 0x58BA_C359_0A0F_E71EL, \/\/  -91\n-        0x7DAC_3C24_A567_1D2FL, 0x412A_D228_1019_71C9L, \/\/  -90\n-        0x6489_C9B6_EAB8_E426L, 0x00EF_0E86_7347_8E3BL, \/\/  -89\n-        0x506E_3AF8_BBC7_1CEBL, 0x1A58_D86B_8F6C_71C9L, \/\/  -88\n-        0x4058_2F2D_6305_B0BCL, 0x1513_E056_0C56_C16EL, \/\/  -87\n-        0x66F3_7EAF_04D5_E793L, 0x3B53_0089_AD57_9BE2L, \/\/  -86\n-        0x525C_6558_D0AB_1FA9L, 0x15DC_006E_2446_164FL, \/\/  -85\n-        0x41E3_8447_0D55_B2EDL, 0x5E49_99F1_B69E_783FL, \/\/  -84\n-        0x696C_06D8_1555_EB15L, 0x7D42_8FE9_2430_C065L, \/\/  -83\n-        0x5456_6BE0_1111_88DEL, 0x3102_0CBA_835A_3384L, \/\/  -82\n-        0x4378_564C_DA74_6D7EL, 0x5A68_0A2E_CF7B_5C69L, \/\/  -81\n-        0x6BF3_BD47_C3ED_7BFDL, 0x770C_DD17_B25E_FA42L, \/\/  -80\n-        0x565C_976C_9CBD_FCCBL, 0x1270_B0DF_C1E5_9502L, \/\/  -79\n-        0x4516_DF8A_16FE_63D5L, 0x5B8D_5A4C_9B1E_10CEL, \/\/  -78\n-        0x6E8A_FF43_57FD_6C89L, 0x127B_C3AD_C4FC_E7B0L, \/\/  -77\n-        0x586F_329C_4664_56D4L, 0x0EC9_6957_D0CA_52F3L, \/\/  -76\n-        0x46BF_5BB0_3850_4576L, 0x3F07_8779_73D5_0F29L, \/\/  -75\n-        0x7132_2C4D_26E6_D58AL, 0x31A5_A58F_1FBB_4B75L, \/\/  -74\n-        0x5A8E_89D7_5252_446EL, 0x5AEA_EAD8_E62F_6F91L, \/\/  -73\n-        0x4872_07DF_750E_9D25L, 0x2F22_557A_51BF_8C74L, \/\/  -72\n-        0x73E9_A632_54E4_2EA2L, 0x1836_EF2A_1C65_AD86L, \/\/  -71\n-        0x5CBA_EB5B_771C_F21BL, 0x2CF8_BF54_E384_8AD2L, \/\/  -70\n-        0x4A2F_22AF_927D_8E7CL, 0x23FA_32AA_4F9D_3BDBL, \/\/  -69\n-        0x76B1_D118_EA62_7D93L, 0x5329_EAAA_18FB_92F8L, \/\/  -68\n-        0x5EF4_A747_21E8_6476L, 0x0F54_BBBB_472F_A8C6L, \/\/  -67\n-        0x4BF6_EC38_E7ED_1D2BL, 0x25DD_62FC_38F2_ED6CL, \/\/  -66\n-        0x798B_138E_3FE1_C845L, 0x22FB_D193_8E51_7BDFL, \/\/  -65\n-        0x613C_0FA4_FFE7_D36AL, 0x4F2F_DADC_71DA_C97FL, \/\/  -64\n-        0x4DC9_A61D_9986_42BBL, 0x58F3_157D_27E2_3ACCL, \/\/  -63\n-        0x7C75_D695_C270_6AC5L, 0x74B8_2261_D969_F7ADL, \/\/  -62\n-        0x6391_7877_CEC0_556BL, 0x1093_4EB4_ADEE_5FBEL, \/\/  -61\n-        0x4FA7_9393_0BCD_1122L, 0x4075_D890_8B25_1965L, \/\/  -60\n-        0x7F72_85B8_12E1_B504L, 0x00BC_8DB4_11D4_F56EL, \/\/  -59\n-        0x65F5_37C6_7581_5D9CL, 0x66FD_3E29_A7DD_9125L, \/\/  -58\n-        0x5190_F96B_9134_4AE3L, 0x6BFD_CB54_864A_DA84L, \/\/  -57\n-        0x4140_C789_40F6_A24FL, 0x6FFE_3C43_9EA2_486AL, \/\/  -56\n-        0x6867_A5A8_67F1_03B2L, 0x7FFD_2D38_FDD0_73DCL, \/\/  -55\n-        0x5386_1E20_5327_3628L, 0x6664_242D_97D9_F64AL, \/\/  -54\n-        0x42D1_B1B3_75B8_F820L, 0x51E9_B68A_DFE1_91D5L, \/\/  -53\n-        0x6AE9_1C52_55F4_C034L, 0x1CA9_2411_6635_B621L, \/\/  -52\n-        0x5587_49DB_77F7_0029L, 0x63BA_8341_1E91_5E81L, \/\/  -51\n-        0x446C_3B15_F992_6687L, 0x6962_029A_7EDA_B201L, \/\/  -50\n-        0x6D79_F823_28EA_3DA6L, 0x0F03_375D_97C4_5001L, \/\/  -49\n-        0x5794_C682_8721_CAEBL, 0x259C_2C4A_DFD0_4001L, \/\/  -48\n-        0x4610_9ECE_D281_6F22L, 0x5149_BD08_B30D_0001L, \/\/  -47\n-        0x701A_97B1_50CF_1837L, 0x3542_C80D_EB48_0001L, \/\/  -46\n-        0x59AE_DFC1_0D72_79C5L, 0x7768_A00B_22A0_0001L, \/\/  -45\n-        0x47BF_1967_3DF5_2E37L, 0x7920_8008_E880_0001L, \/\/  -44\n-        0x72CB_5BD8_6321_E38CL, 0x5B67_3341_7400_0001L, \/\/  -43\n-        0x5BD5_E313_8281_82D6L, 0x7C52_8F67_9000_0001L, \/\/  -42\n-        0x4977_E8DC_6867_9BDFL, 0x16A8_72B9_4000_0001L, \/\/  -41\n-        0x758C_A7C7_0D72_92FEL, 0x5773_EAC2_0000_0001L, \/\/  -40\n-        0x5E0A_1FD2_7128_7598L, 0x45F6_5568_0000_0001L, \/\/  -39\n-        0x4B3B_4CA8_5A86_C47AL, 0x04C5_1120_0000_0001L, \/\/  -38\n-        0x785E_E10D_5DA4_6D90L, 0x07A1_B500_0000_0001L, \/\/  -37\n-        0x604B_E73D_E483_8AD9L, 0x52E7_C400_0000_0001L, \/\/  -36\n-        0x4D09_85CB_1D36_08AEL, 0x0F1F_D000_0000_0001L, \/\/  -35\n-        0x7B42_6FAB_61F0_0DE3L, 0x31CC_8000_0000_0001L, \/\/  -34\n-        0x629B_8C89_1B26_7182L, 0x5B0A_0000_0000_0001L, \/\/  -33\n-        0x4EE2_D6D4_15B8_5ACEL, 0x7C08_0000_0000_0001L, \/\/  -32\n-        0x7E37_BE20_22C0_914BL, 0x1340_0000_0000_0001L, \/\/  -31\n-        0x64F9_64E6_8233_A76FL, 0x2900_0000_0000_0001L, \/\/  -30\n-        0x50C7_83EB_9B5C_85F2L, 0x5400_0000_0000_0001L, \/\/  -29\n-        0x409F_9CBC_7C4A_04C2L, 0x1000_0000_0000_0001L, \/\/  -28\n-        0x6765_C793_FA10_079DL, 0x0000_0000_0000_0001L, \/\/  -27\n-        0x52B7_D2DC_C80C_D2E4L, 0x0000_0000_0000_0001L, \/\/  -26\n-        0x422C_A8B0_A00A_4250L, 0x0000_0000_0000_0001L, \/\/  -25\n-        0x69E1_0DE7_6676_D080L, 0x0000_0000_0000_0001L, \/\/  -24\n-        0x54B4_0B1F_852B_DA00L, 0x0000_0000_0000_0001L, \/\/  -23\n-        0x43C3_3C19_3756_4800L, 0x0000_0000_0000_0001L, \/\/  -22\n-        0x6C6B_935B_8BBD_4000L, 0x0000_0000_0000_0001L, \/\/  -21\n-        0x56BC_75E2_D631_0000L, 0x0000_0000_0000_0001L, \/\/  -20\n-        0x4563_9182_44F4_0000L, 0x0000_0000_0000_0001L, \/\/  -19\n-        0x6F05_B59D_3B20_0000L, 0x0000_0000_0000_0001L, \/\/  -18\n-        0x58D1_5E17_6280_0000L, 0x0000_0000_0000_0001L, \/\/  -17\n-        0x470D_E4DF_8200_0000L, 0x0000_0000_0000_0001L, \/\/  -16\n-        0x71AF_D498_D000_0000L, 0x0000_0000_0000_0001L, \/\/  -15\n-        0x5AF3_107A_4000_0000L, 0x0000_0000_0000_0001L, \/\/  -14\n-        0x48C2_7395_0000_0000L, 0x0000_0000_0000_0001L, \/\/  -13\n-        0x746A_5288_0000_0000L, 0x0000_0000_0000_0001L, \/\/  -12\n-        0x5D21_DBA0_0000_0000L, 0x0000_0000_0000_0001L, \/\/  -11\n-        0x4A81_7C80_0000_0000L, 0x0000_0000_0000_0001L, \/\/  -10\n-        0x7735_9400_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -9\n-        0x5F5E_1000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -8\n-        0x4C4B_4000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -7\n-        0x7A12_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -6\n-        0x61A8_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -5\n-        0x4E20_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -4\n-        0x7D00_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -3\n-        0x6400_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -2\n-        0x5000_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/   -1\n-        0x4000_0000_0000_0000L, 0x0000_0000_0000_0001L, \/\/    0\n-        0x6666_6666_6666_6666L, 0x3333_3333_3333_3334L, \/\/    1\n-        0x51EB_851E_B851_EB85L, 0x0F5C_28F5_C28F_5C29L, \/\/    2\n-        0x4189_374B_C6A7_EF9DL, 0x5916_872B_020C_49BBL, \/\/    3\n-        0x68DB_8BAC_710C_B295L, 0x74F0_D844_D013_A92BL, \/\/    4\n-        0x53E2_D623_8DA3_C211L, 0x43F3_E037_0CDC_8755L, \/\/    5\n-        0x431B_DE82_D7B6_34DAL, 0x698F_E692_70B0_6C44L, \/\/    6\n-        0x6B5F_CA6A_F2BD_215EL, 0x0F4C_A41D_811A_46D4L, \/\/    7\n-        0x55E6_3B88_C230_E77EL, 0x3F70_834A_CDAE_9F10L, \/\/    8\n-        0x44B8_2FA0_9B5A_52CBL, 0x4C5A_02A2_3E25_4C0DL, \/\/    9\n-        0x6DF3_7F67_5EF6_EADFL, 0x2D5C_D103_96A2_1347L, \/\/   10\n-        0x57F5_FF85_E592_557FL, 0x3DE3_DA69_454E_75D3L, \/\/   11\n-        0x465E_6604_B7A8_4465L, 0x7E4F_E1ED_D10B_9175L, \/\/   12\n-        0x7097_09A1_25DA_0709L, 0x4A19_697C_81AC_1BEFL, \/\/   13\n-        0x5A12_6E1A_84AE_6C07L, 0x54E1_2130_67BC_E326L, \/\/   14\n-        0x480E_BE7B_9D58_566CL, 0x43E7_4DC0_52FD_8285L, \/\/   15\n-        0x734A_CA5F_6226_F0ADL, 0x530B_AF9A_1E62_6A6DL, \/\/   16\n-        0x5C3B_D519_1B52_5A24L, 0x426F_BFAE_7EB5_21F1L, \/\/   17\n-        0x49C9_7747_490E_AE83L, 0x4EBF_CC8B_9890_E7F4L, \/\/   18\n-        0x760F_253E_DB4A_B0D2L, 0x4ACC_7A78_F41B_0CBAL, \/\/   19\n-        0x5E72_8432_4908_8D75L, 0x223D_2EC7_29AF_3D62L, \/\/   20\n-        0x4B8E_D028_3A6D_3DF7L, 0x34FD_BF05_BAF2_9781L, \/\/   21\n-        0x78E4_8040_5D7B_9658L, 0x54C9_31A2_C4B7_58CFL, \/\/   22\n-        0x60B6_CD00_4AC9_4513L, 0x5D6D_C14F_03C5_E0A5L, \/\/   23\n-        0x4D5F_0A66_A23A_9DA9L, 0x3124_9AA5_9C9E_4D51L, \/\/   24\n-        0x7BCB_43D7_69F7_62A8L, 0x4EA0_F76F_60FD_4882L, \/\/   25\n-        0x6309_0312_BB2C_4EEDL, 0x254D_92BF_80CA_A068L, \/\/   26\n-        0x4F3A_68DB_C8F0_3F24L, 0x1DD7_A899_33D5_4D20L, \/\/   27\n-        0x7EC3_DAF9_4180_6506L, 0x62F2_A75B_8622_1500L, \/\/   28\n-        0x6569_7BFA_9ACD_1D9FL, 0x025B_B916_04E8_10CDL, \/\/   29\n-        0x5121_2FFB_AF0A_7E18L, 0x6849_60DE_6A53_40A4L, \/\/   30\n-        0x40E7_5996_25A1_FE7AL, 0x203A_B3E5_21DC_33B6L, \/\/   31\n-        0x67D8_8F56_A29C_CA5DL, 0x19F7_863B_6960_52BDL, \/\/   32\n-        0x5313_A5DE_E87D_6EB0L, 0x7B2C_6B62_BAB3_7564L, \/\/   33\n-        0x4276_1E4B_ED31_255AL, 0x2F56_BC4E_FBC2_C450L, \/\/   34\n-        0x6A56_96DF_E1E8_3BC3L, 0x6557_93B1_92D1_3A1AL, \/\/   35\n-        0x5512_124C_B4B9_C969L, 0x3779_42F4_7574_2E7BL, \/\/   36\n-        0x440E_750A_2A2E_3ABAL, 0x5F94_3590_5DF6_8B96L, \/\/   37\n-        0x6CE3_EE76_A9E3_912AL, 0x65B9_EF4D_6324_1289L, \/\/   38\n-        0x571C_BEC5_54B6_0DBBL, 0x6AFB_25D7_8283_4207L, \/\/   39\n-        0x45B0_989D_DD5E_7163L, 0x08C8_EB12_CECF_6806L, \/\/   40\n-        0x6F80_F42F_C897_1BD1L, 0x5ADB_11B7_B14B_D9A3L, \/\/   41\n-        0x5933_F68C_A078_E30EL, 0x157C_0E2C_8DD6_47B5L, \/\/   42\n-        0x475C_C53D_4D2D_8271L, 0x5DFC_D823_A4AB_6C91L, \/\/   43\n-        0x722E_0862_1515_9D82L, 0x632E_269F_6DDF_141BL, \/\/   44\n-        0x5B58_06B4_DDAA_E468L, 0x4F58_1EE5_F17F_4349L, \/\/   45\n-        0x4913_3890_B155_8386L, 0x72AC_E584_C132_9C3BL, \/\/   46\n-        0x74EB_8DB4_4EEF_38D7L, 0x6AAE_3C07_9B84_2D2AL, \/\/   47\n-        0x5D89_3E29_D8BF_60ACL, 0x5558_3006_1603_5755L, \/\/   48\n-        0x4AD4_31BB_13CC_4D56L, 0x7779_C004_DE69_12ABL, \/\/   49\n-        0x77B9_E92B_52E0_7BBEL, 0x258F_99A1_63DB_5111L, \/\/   50\n-        0x5FC7_EDBC_424D_2FCBL, 0x37A6_1481_1CAF_740DL, \/\/   51\n-        0x4C9F_F163_683D_BFD5L, 0x7951_AA00_E3BF_900BL, \/\/   52\n-        0x7A99_8238_A6C9_32EFL, 0x754F_7667_D2CC_19ABL, \/\/   53\n-        0x6214_682D_523A_8F26L, 0x2AA5_F853_0F09_AE22L, \/\/   54\n-        0x4E76_B9BD_DB62_0C1EL, 0x5551_9375_A5A1_581BL, \/\/   55\n-        0x7D8A_C2C9_5F03_4697L, 0x3BB5_B8BC_3C35_59C5L, \/\/   56\n-        0x646F_023A_B269_0545L, 0x7C91_6096_9691_149EL, \/\/   57\n-        0x5058_CE95_5B87_376BL, 0x16DA_B3AB_ABA7_43B2L, \/\/   58\n-        0x4047_0BAA_AF9F_5F88L, 0x78AE_F622_EFB9_02F5L, \/\/   59\n-        0x66D8_12AA_B298_98DBL, 0x0DE4_BD04_B2C1_9E54L, \/\/   60\n-        0x5246_7555_5BAD_4715L, 0x57EA_30D0_8F01_4B76L, \/\/   61\n-        0x41D1_F777_7C8A_9F44L, 0x4654_F3DA_0C01_092CL, \/\/   62\n-        0x694F_F258_C744_3207L, 0x23BB_1FC3_4668_0EACL, \/\/   63\n-        0x543F_F513_D29C_F4D2L, 0x4FC8_E635_D1EC_D88AL, \/\/   64\n-        0x4366_5DA9_754A_5D75L, 0x263A_51C4_A7F0_AD3BL, \/\/   65\n-        0x6BD6_FC42_5543_C8BBL, 0x56C3_B607_731A_AEC4L, \/\/   66\n-        0x5645_969B_7769_6D62L, 0x789C_919F_8F48_8BD0L, \/\/   67\n-        0x4504_787C_5F87_8AB5L, 0x46E3_A7B2_D906_D640L, \/\/   68\n-        0x6E6D_8D93_CC0C_1122L, 0x3E39_0C51_5B3E_239AL, \/\/   69\n-        0x5857_A476_3CD6_741BL, 0x4B60_D6A7_7C31_B615L, \/\/   70\n-        0x46AC_8391_CA45_29AFL, 0x55E7_121F_968E_2B44L, \/\/   71\n-        0x7114_05B6_106E_A919L, 0x0971_B698_F0E3_786DL, \/\/   72\n-        0x5A76_6AF8_0D25_5414L, 0x078E_2BAD_8D82_C6BDL, \/\/   73\n-        0x485E_BBF9_A41D_DCDCL, 0x6C71_BC8A_D79B_D231L, \/\/   74\n-        0x73CA_C65C_39C9_6161L, 0x2D82_C744_8C2C_8382L, \/\/   75\n-        0x5CA2_3849_C7D4_4DE7L, 0x3E02_3903_A356_CF9BL, \/\/   76\n-        0x4A1B_603B_0643_7185L, 0x7E68_2D9C_82AB_D949L, \/\/   77\n-        0x7692_3391_A39F_1C09L, 0x4A40_48FA_6AAC_8EDBL, \/\/   78\n-        0x5EDB_5C74_82E5_B007L, 0x5500_3A61_EEF0_7249L, \/\/   79\n-        0x4BE2_B05D_3584_8CD2L, 0x7733_61E7_F259_F507L, \/\/   80\n-        0x796A_B3C8_55A0_E151L, 0x3EB8_9CA6_508F_EE71L, \/\/   81\n-        0x6122_296D_114D_810DL, 0x7EFA_16EB_73A6_585BL, \/\/   82\n-        0x4DB4_EDF0_DAA4_673EL, 0x3261_ABEF_8FB8_46AFL, \/\/   83\n-        0x7C54_AFE7_C43A_3ECAL, 0x1D69_1318_E5F3_A44BL, \/\/   84\n-        0x6376_F31F_D02E_98A1L, 0x6454_0F47_1E5C_836FL, \/\/   85\n-        0x4F92_5C19_7358_7A1BL, 0x0376_729F_4B7D_35F3L, \/\/   86\n-        0x7F50_935B_EBC0_C35EL, 0x38BD_8432_1261_EFEBL, \/\/   87\n-        0x65DA_0F7C_BC9A_35E5L, 0x13CA_D028_0EB4_BFEFL, \/\/   88\n-        0x517B_3F96_FD48_2B1DL, 0x5CA2_4020_0BC3_CCBFL, \/\/   89\n-        0x412F_6612_6439_BC17L, 0x63B5_0019_A303_0A33L, \/\/   90\n-        0x684B_D683_D38F_9359L, 0x1F88_0029_04D1_A9EAL, \/\/   91\n-        0x536F_DECF_DC72_DC47L, 0x32D3_3354_03DA_EE55L, \/\/   92\n-        0x42BF_E573_16C2_49D2L, 0x5BDC_2910_0315_8B77L, \/\/   93\n-        0x6ACC_A251_BE03_A951L, 0x12F9_DB4C_D1BC_1258L, \/\/   94\n-        0x5570_81DA_FE69_5440L, 0x7594_AF70_A7C9_A847L, \/\/   95\n-        0x445A_017B_FEBA_A9CDL, 0x4476_F2C0_863A_ED06L, \/\/   96\n-        0x6D5C_CF2C_CAC4_42E2L, 0x3A57_EACD_A391_7B3CL, \/\/   97\n-        0x577D_728A_3BD0_3581L, 0x7B79_88A4_82DA_C8FDL, \/\/   98\n-        0x45FD_F53B_630C_F79BL, 0x15FA_D3B6_CF15_6D97L, \/\/   99\n-        0x6FFC_BB92_3814_BF5EL, 0x565E_1F8A_E4EF_15BEL, \/\/  100\n-        0x5996_FC74_F9AA_32B2L, 0x11E4_E608_B725_AAFFL, \/\/  101\n-        0x47AB_FD2A_6154_F55BL, 0x27EA_51A0_9284_88CCL, \/\/  102\n-        0x72AC_C843_CEEE_555EL, 0x7310_829A_8407_4146L, \/\/  103\n-        0x5BBD_6D03_0BF1_DDE5L, 0x4273_9BAE_D005_CDD2L, \/\/  104\n-        0x4964_5735_A327_E4B7L, 0x4EC2_E2F2_4004_A4A8L, \/\/  105\n-        0x756D_5855_D1D9_6DF2L, 0x4AD1_6B1D_333A_A10CL, \/\/  106\n-        0x5DF1_1377_DB14_57F5L, 0x2241_227D_C295_4DA3L, \/\/  107\n-        0x4B27_42C6_48DD_132AL, 0x4E9A_81FE_3544_3E1CL, \/\/  108\n-        0x783E_D13D_4161_B844L, 0x175D_9CC9_EED3_9694L, \/\/  109\n-        0x6032_40FD_CDE7_C69CL, 0x7917_B0A1_8BDC_7876L, \/\/  110\n-        0x4CF5_00CB_0B1F_D217L, 0x1412_F3B4_6FE3_9392L, \/\/  111\n-        0x7B21_9ADE_7832_E9BEL, 0x5351_85ED_7FD2_85B6L, \/\/  112\n-        0x6281_48B1_F9C2_5498L, 0x42A7_9E57_9975_37C5L, \/\/  113\n-        0x4ECD_D3C1_949B_76E0L, 0x3552_E512_E12A_9304L, \/\/  114\n-        0x7E16_1F9C_20F8_BE33L, 0x6EEB_081E_3510_EB39L, \/\/  115\n-        0x64DE_7FB0_1A60_9829L, 0x3F22_6CE4_F740_BC2EL, \/\/  116\n-        0x50B1_FFC0_151A_1354L, 0x3281_F0B7_2C33_C9BEL, \/\/  117\n-        0x408E_6633_4414_DC43L, 0x4201_8D5F_568F_D498L, \/\/  118\n-        0x674A_3D1E_D354_939FL, 0x1CCF_4898_8A7F_BA8DL, \/\/  119\n-        0x52A1_CA7F_0F76_DC7FL, 0x30A5_D3AD_3B99_620BL, \/\/  120\n-        0x421B_0865_A5F8_B065L, 0x73B7_DC8A_9614_4E6FL, \/\/  121\n-        0x69C4_DA3C_3CC1_1A3CL, 0x52BF_C744_2353_B0B1L, \/\/  122\n-        0x549D_7B63_63CD_AE96L, 0x7566_3903_4F76_26F4L, \/\/  123\n-        0x43B1_2F82_B63E_2545L, 0x4451_C735_D92B_525DL, \/\/  124\n-        0x6C4E_B26A_BD30_3BA2L, 0x3A1C_71EF_C1DE_EA2EL, \/\/  125\n-        0x56A5_5B88_9759_C94EL, 0x61B0_5B26_34B2_54F2L, \/\/  126\n-        0x4551_1606_DF7B_0772L, 0x1AF3_7C1E_908E_AA5BL, \/\/  127\n-        0x6EE8_233E_325E_7250L, 0x2B1F_2CFD_B417_76F8L, \/\/  128\n-        0x58B9_B5CB_5B7E_C1D9L, 0x6F4C_23FE_29AC_5F2DL, \/\/  129\n-        0x46FA_F7D5_E2CB_CE47L, 0x72A3_4FFE_87BD_18F1L, \/\/  130\n-        0x7191_8C89_6ADF_B073L, 0x0438_7FFD_A5FB_5B1BL, \/\/  131\n-        0x5ADA_D6D4_557F_C05CL, 0x0360_6664_84C9_15AFL, \/\/  132\n-        0x48AF_1243_7799_66B0L, 0x02B3_851D_3707_448CL, \/\/  133\n-        0x744B_506B_F28F_0AB3L, 0x1DEC_082E_BE72_0746L, \/\/  134\n-        0x5D09_0D23_2872_6EF5L, 0x64BC_D358_985B_3905L, \/\/  135\n-        0x4A6D_A41C_205B_8BF7L, 0x6A30_A913_AD15_C738L, \/\/  136\n-        0x7715_D360_33C5_ACBFL, 0x5D1A_A81F_7B56_0B8CL, \/\/  137\n-        0x5F44_A919_C304_8A32L, 0x7DAE_ECE5_FC44_D609L, \/\/  138\n-        0x4C36_EDAE_359D_3B5BL, 0x7E25_8A51_969D_7808L, \/\/  139\n-        0x79F1_7C49_EF61_F893L, 0x16A2_76E8_F0FB_F33FL, \/\/  140\n-        0x618D_FD07_F2B4_C6DCL, 0x121B_9253_F3FC_C299L, \/\/  141\n-        0x4E0B_30D3_2890_9F16L, 0x41AF_A843_2997_0214L, \/\/  142\n-        0x7CDE_B485_0DB4_31BDL, 0x4F7F_739E_A8F1_9CEDL, \/\/  143\n-        0x63E5_5D37_3E29_C164L, 0x3F99_294B_BA5A_E3F1L, \/\/  144\n-        0x4FEA_B0F8_FE87_CDE9L, 0x7FAD_BAA2_FB7B_E98DL, \/\/  145\n-        0x7FDD_E7F4_CA72_E30FL, 0x7F7C_5DD1_925F_DC15L, \/\/  146\n-        0x664B_1FF7_085B_E8D9L, 0x4C63_7E41_41E6_49ABL, \/\/  147\n-        0x51D5_B32C_06AF_ED7AL, 0x704F_9834_34B8_3AEFL, \/\/  148\n-        0x4177_C289_9EF3_2462L, 0x26A6_135C_F6F9_C8BFL, \/\/  149\n-        0x68BF_9DA8_FE51_D3D0L, 0x3DD6_8561_8B29_4132L, \/\/  150\n-        0x53CC_7E20_CB74_A973L, 0x4B12_044E_08ED_CDC2L, \/\/  151\n-        0x4309_FE80_A2C3_BAC2L, 0x6F41_9D0B_3A57_D7CEL, \/\/  152\n-        0x6B43_30CD_D139_2AD1L, 0x3202_94DE_C3BF_BFB0L, \/\/  153\n-        0x55CF_5A3E_40FA_88A7L, 0x419B_AA4B_CFCC_995AL, \/\/  154\n-        0x44A5_E1CB_672E_D3B9L, 0x1AE2_EEA3_0CA3_ADE1L, \/\/  155\n-        0x6DD6_3612_3EB1_52C1L, 0x77D1_7DD1_ADD2_AFCFL, \/\/  156\n-        0x57DE_91A8_3227_7567L, 0x7974_64A7_BE42_263FL, \/\/  157\n-        0x464B_A7B9_C1B9_2AB9L, 0x4790_5086_31CE_84FFL, \/\/  158\n-        0x7079_0C5C_6928_445CL, 0x0C1A_1A70_4FB0_D4CCL, \/\/  159\n-        0x59FA_7049_EDB9_D049L, 0x567B_4859_D95A_43D6L, \/\/  160\n-        0x47FB_8D07_F161_736EL, 0x11FC_39E1_7AAE_9CABL, \/\/  161\n-        0x732C_14D9_8235_857DL, 0x032D_2968_C44A_9445L, \/\/  162\n-        0x5C23_43E1_34F7_9DFDL, 0x4F57_5453_D03B_A9D1L, \/\/  163\n-        0x49B5_CFE7_5D92_E4CAL, 0x72AC_4376_402F_BB0EL, \/\/  164\n-        0x75EF_B30B_C8EB_07ABL, 0x0446_D256_CD19_2B49L, \/\/  165\n-        0x5E59_5C09_6D88_D2EFL, 0x1D05_7512_3DAD_BC3AL, \/\/  166\n-        0x4B7A_B007_8AD3_DBF2L, 0x4A6A_C40E_97BE_302FL, \/\/  167\n-        0x78C4_4CD8_DE1F_C650L, 0x7711_39B0_F2C9_E6B1L, \/\/  168\n-        0x609D_0A47_1819_6B73L, 0x78DA_948D_8F07_EBC1L, \/\/  169\n-        0x4D4A_6E9F_467A_BC5CL, 0x60AE_DD3E_0C06_5634L, \/\/  170\n-        0x7BAA_4A98_70C4_6094L, 0x344A_FB96_79A3_BD20L, \/\/  171\n-        0x62EE_A213_8D69_E6DDL, 0x103B_FC78_614F_CA80L, \/\/  172\n-        0x4F25_4E76_0ABB_1F17L, 0x2696_6393_810C_A200L, \/\/  173\n-        0x7EA2_1723_445E_9825L, 0x2423_D285_9B47_6999L, \/\/  174\n-        0x654E_78E9_037E_E01DL, 0x69B6_4204_7C39_2148L, \/\/  175\n-        0x510B_93ED_9C65_8017L, 0x6E2B_6803_9694_1AA0L, \/\/  176\n-        0x40D6_0FF1_49EA_CCDFL, 0x71BC_5336_1210_154DL, \/\/  177\n-        0x67BC_E64E_DCAA_E166L, 0x1C60_8523_5019_BBAEL, \/\/  178\n-        0x52FD_850B_E3BB_E784L, 0x7D1A_041C_4014_9625L, \/\/  179\n-        0x4264_6A6F_E963_1F9DL, 0x4A7B_367D_0010_781DL, \/\/  180\n-        0x6A3A_43E6_4238_3295L, 0x5D91_F0C8_001A_59C8L, \/\/  181\n-        0x54FB_6985_01C6_8EDEL, 0x17A7_F3D3_3348_47D4L, \/\/  182\n-        0x43FC_546A_67D2_0BE4L, 0x7953_2975_C2A0_3976L, \/\/  183\n-        0x6CC6_ED77_0C83_463BL, 0x0EEB_7589_3766_C256L, \/\/  184\n-        0x5705_8AC5_A39C_382FL, 0x2589_2AD4_2C52_3512L, \/\/  185\n-        0x459E_089E_1C7C_F9BFL, 0x37A0_EF10_2374_F742L, \/\/  186\n-        0x6F63_40FC_FA61_8F98L, 0x5901_7E80_38BB_2536L, \/\/  187\n-        0x591C_33FD_951A_D946L, 0x7A67_9866_93C8_EA91L, \/\/  188\n-        0x4749_C331_4415_7A9FL, 0x151F_AD1E_DCA0_BBA8L, \/\/  189\n-        0x720F_9EB5_39BB_F765L, 0x0832_AE97_C767_92A5L, \/\/  190\n-        0x5B3F_B22A_9496_5F84L, 0x068E_F213_05EC_7551L, \/\/  191\n-        0x48FF_C1BB_AA11_E603L, 0x1ED8_C1A8_D189_F774L, \/\/  192\n-        0x74CC_692C_434F_D66BL, 0x4AF4_690E_1C0F_F253L, \/\/  193\n-        0x5D70_5423_690C_AB89L, 0x225D_20D8_1673_2843L, \/\/  194\n-        0x4AC0_434F_873D_5607L, 0x3517_4D79_AB8F_5369L, \/\/  195\n-        0x779A_054C_0B95_5672L, 0x21BE_E25C_45B2_1F0EL, \/\/  196\n-        0x5FAE_6AA3_3C77_785BL, 0x3498_B516_9E28_18D8L, \/\/  197\n-        0x4C8B_8882_96C5_F9E2L, 0x5D46_F745_4B53_4713L, \/\/  198\n-        0x7A78_DA6A_8AD6_5C9DL, 0x7BA4_BED5_4552_0B52L, \/\/  199\n-        0x61FA_4855_3BDE_B07EL, 0x2FB6_FF11_0441_A2A8L, \/\/  200\n-        0x4E61_D377_6318_8D31L, 0x72F8_CC0D_9D01_4EEDL, \/\/  201\n-        0x7D69_5258_9E8D_AEB6L, 0x1E5A_E015_C802_17E1L, \/\/  202\n-        0x6454_41E0_7ED7_BEF8L, 0x1848_B344_A001_ACB4L, \/\/  203\n-        0x5043_67E6_CBDF_CBF9L, 0x603A_2903_B334_8A2AL, \/\/  204\n-        0x4035_ECB8_A319_6FFBL, 0x002E_8736_28F6_D4EEL, \/\/  205\n-        0x66BC_ADF4_3828_B32BL, 0x19E4_0B89_DB24_87E3L, \/\/  206\n-        0x5230_8B29_C686_F5BCL, 0x14B6_6FA1_7C1D_3983L, \/\/  207\n-        0x41C0_6F54_9ED2_5E30L, 0x1091_F2E7_967D_C79CL, \/\/  208\n-        0x6933_E554_3150_96B3L, 0x341C_B7D8_F0C9_3F5FL, \/\/  209\n-        0x5429_8443_5AA6_DEF5L, 0x767D_5FE0_C0A0_FF80L, \/\/  210\n-        0x4354_69CF_7BB8_B25EL, 0x2B97_7FE7_0080_CC66L, \/\/  211\n-        0x6BBA_42E5_92C1_1D63L, 0x5F58_CCA4_CD9A_E0A3L, \/\/  212\n-        0x562E_9BEA_DBCD_B11CL, 0x4C47_0A1D_7148_B3B6L, \/\/  213\n-        0x44F2_1655_7CA4_8DB0L, 0x3D05_A1B1_276D_5C92L, \/\/  214\n-        0x6E50_23BB_FAA0_E2B3L, 0x7B3C_35E8_3F15_60E9L, \/\/  215\n-        0x5840_1C96_621A_4EF6L, 0x2F63_5E53_65AA_B3EDL, \/\/  216\n-        0x4699_B078_4E7B_725EL, 0x591C_4B75_EAEE_F658L, \/\/  217\n-        0x70F5_E726_E3F8_B6FDL, 0x74FA_1256_44B1_8A26L, \/\/  218\n-        0x5A5E_5285_832D_5F31L, 0x43FB_41DE_9D5A_D4EBL, \/\/  219\n-        0x484B_7537_9C24_4C27L, 0x4FFC_34B2_177B_DD89L, \/\/  220\n-        0x73AB_EEBF_603A_1372L, 0x4CC6_BAB6_8BF9_6274L, \/\/  221\n-        0x5C89_8BCC_4CFB_42C2L, 0x0A38_955E_D661_1B90L, \/\/  222\n-        0x4A07_A309_D72F_689BL, 0x21C6_DDE5_784D_AFA7L, \/\/  223\n-        0x7672_9E76_2518_A75EL, 0x693E_2FD5_8D49_190BL, \/\/  224\n-        0x5EC2_185E_8413_B918L, 0x5431_BFDE_0AA0_E0D5L, \/\/  225\n-        0x4BCE_79E5_3676_2DADL, 0x29C1_664B_3BB3_E711L, \/\/  226\n-        0x794A_5CA1_F0BD_15E2L, 0x0F9B_D6DE_C5EC_A4E8L, \/\/  227\n-        0x6108_4A1B_26FD_AB1BL, 0x2616_457F_04BD_50BAL, \/\/  228\n-        0x4DA0_3B48_EBFE_227CL, 0x1E78_3798_D097_73C8L, \/\/  229\n-        0x7C33_920E_4663_6A60L, 0x30C0_58F4_80F2_52D9L, \/\/  230\n-        0x635C_74D8_384F_884DL, 0x0D66_AD90_6728_4247L, \/\/  231\n-        0x4F7D_2A46_9372_D370L, 0x711E_F140_5286_9B6CL, \/\/  232\n-        0x7F2E_AA0A_8584_8581L, 0x34FE_4ECD_50D7_5F14L, \/\/  233\n-        0x65BE_EE6E_D136_D134L, 0x2A65_0BD7_73DF_7F43L, \/\/  234\n-        0x5165_8B8B_DA92_40F6L, 0x551D_A312_C319_329CL, \/\/  235\n-        0x411E_093C_AEDB_672BL, 0x5DB1_4F42_35AD_C217L, \/\/  236\n-        0x6830_0EC7_7E2B_D845L, 0x7C4E_E536_BC49_368AL, \/\/  237\n-        0x5359_A56C_64EF_E037L, 0x7D0B_EA92_303A_9208L, \/\/  238\n-        0x42AE_1DF0_50BF_E693L, 0x173C_BBA8_2695_41A0L, \/\/  239\n-        0x6AB0_2FE6_E799_70EBL, 0x3EC7_92A6_A422_029AL, \/\/  240\n-        0x5559_BFEB_EC7A_C0BCL, 0x3239_421E_E9B4_CEE1L, \/\/  241\n-        0x4447_CCBC_BD2F_0096L, 0x5B61_01B2_5490_A581L, \/\/  242\n-        0x6D3F_ADFA_C84B_3424L, 0x2BCE_691D_541A_A268L, \/\/  243\n-        0x5766_24C8_A03C_29B6L, 0x563E_BA7D_DCE2_1B87L, \/\/  244\n-        0x45EB_50A0_8030_215EL, 0x7832_2ECB_171B_4939L, \/\/  245\n-        0x6FDE_E767_3380_3564L, 0x59E9_E478_24F8_7527L, \/\/  246\n-        0x597F_1F85_C2CC_F783L, 0x6187_E9F9_B72D_2A86L, \/\/  247\n-        0x4798_E604_9BD7_2C69L, 0x346C_BB2E_2C24_2205L, \/\/  248\n-        0x728E_3CD4_2C8B_7A42L, 0x20AD_F849_E039_D007L, \/\/  249\n-        0x5BA4_FD76_8A09_2E9BL, 0x33BE_603B_19C7_D99FL, \/\/  250\n-        0x4950_CAC5_3B3A_8BAFL, 0x42FE_B362_7B06_47B3L, \/\/  251\n-        0x754E_113B_91F7_45E5L, 0x5197_856A_5E70_72B8L, \/\/  252\n-        0x5DD8_0DC9_4192_9E51L, 0x27AC_6ABB_7EC0_5BC6L, \/\/  253\n-        0x4B13_3E3A_9ADB_B1DAL, 0x52F0_5562_CBCD_1638L, \/\/  254\n-        0x781E_C9F7_5E2C_4FC4L, 0x1E4D_556A_DFAE_89F3L, \/\/  255\n-        0x6018_A192_B1BD_0C9CL, 0x7EA4_4455_7FBE_D4C3L, \/\/  256\n-        0x4CE0_8142_27CA_707DL, 0x4BB6_9D11_32FF_109CL, \/\/  257\n-        0x7B00_CED0_3FAA_4D95L, 0x5F8A_94E8_5198_1A93L, \/\/  258\n-        0x6267_0BD9_CC88_3E11L, 0x32D5_43ED_0E13_4875L, \/\/  259\n-        0x4EB8_D647_D6D3_64DAL, 0x5BDD_CFF0_D80F_6D2BL, \/\/  260\n-        0x7DF4_8A0C_8AEB_D491L, 0x12FC_7FE7_C018_AEABL, \/\/  261\n-        0x64C3_A1A3_A256_43A7L, 0x28C9_FFEC_99AD_5889L, \/\/  262\n-        0x509C_814F_B511_CFB9L, 0x0707_FFF0_7AF1_13A1L, \/\/  263\n-        0x407D_343F_C40E_3FC7L, 0x1F39_998D_2F27_42E7L, \/\/  264\n-        0x672E_B9FF_A016_CC71L, 0x7EC2_8F48_4B72_04A4L, \/\/  265\n-        0x528B_C7FF_B345_705BL, 0x189B_A5D3_6F8E_6A1DL, \/\/  266\n-        0x4209_6CCC_8F6A_C048L, 0x7A16_1E42_BFA5_21B1L, \/\/  267\n-        0x69A8_AE14_18AA_CD41L, 0x4356_96D1_32A1_CF81L, \/\/  268\n-        0x5486_F1A9_AD55_7101L, 0x1C45_4574_2881_72CEL, \/\/  269\n-        0x439F_27BA_F111_2734L, 0x169D_D129_BA01_28A5L, \/\/  270\n-        0x6C31_D92B_1B4E_A520L, 0x242F_B50F_9001_DAA1L, \/\/  271\n-        0x568E_4755_AF72_1DB3L, 0x368C_90D9_4001_7BB4L, \/\/  272\n-        0x453E_9F77_BF8E_7E29L, 0x120A_0D7A_999A_C95DL, \/\/  273\n-        0x6ECA_98BF_98E3_FD0EL, 0x5010_1590_F5C4_7561L, \/\/  274\n-        0x58A2_13CC_7A4F_FDA5L, 0x2673_4473_F7D0_5DE8L, \/\/  275\n-        0x46E8_0FD6_C83F_FE1DL, 0x6B8F_69F6_5FD9_E4B9L, \/\/  276\n-        0x7173_4C8A_D9FF_FCFCL, 0x45B2_4323_CC8F_D45CL, \/\/  277\n-        0x5AC2_A3A2_47FF_FD96L, 0x6AF5_0283_0A0C_A9E3L, \/\/  278\n-        0x489B_B61B_6CCC_CADFL, 0x08C4_0202_6E70_87E9L, \/\/  279\n-        0x742C_5692_47AE_1164L, 0x746C_D003_E3E7_3FDBL, \/\/  280\n-        0x5CF0_4541_D2F1_A783L, 0x76BD_7336_4FEC_3315L, \/\/  281\n-        0x4A59_D101_758E_1F9CL, 0x5EFD_F5C5_0CBC_F5ABL, \/\/  282\n-        0x76F6_1B35_88E3_65C7L, 0x4B2F_EFA1_ADFB_22ABL, \/\/  283\n-        0x5F2B_48F7_A0B5_EB06L, 0x08F3_261A_F195_B555L, \/\/  284\n-        0x4C22_A0C6_1A2B_226BL, 0x20C2_84E2_5ADE_2AABL, \/\/  285\n-        0x79D1_013C_F6AB_6A45L, 0x1AD0_D49D_5E30_4444L, \/\/  286\n-        0x6174_00FD_9222_BB6AL, 0x48A7_107D_E4F3_69D0L, \/\/  287\n-        0x4DF6_6731_41B5_62BBL, 0x53B8_D9FE_50C2_BB0DL, \/\/  288\n-        0x7CBD_71E8_6922_3792L, 0x52C1_5CCA_1AD1_2B48L, \/\/  289\n-        0x63CA_C186_BA81_C60EL, 0x7567_7D6E_7BDA_8906L, \/\/  290\n-        0x4FD5_679E_FB9B_04D8L, 0x5DEC_6458_6315_3A6CL, \/\/  291\n-        0x7FBB_D8FE_5F5E_6E27L, 0x497A_3A27_04EE_C3DFL, \/\/  292\n+            \/\/         g1,                     g0,                e\n+            0x777A_29EB_491D_EB2DL, 0x044F_EA8A_41A8_4ED0L,  \/\/ -342\n+            0x4AAC_5A33_0DB2_B2FCL, 0x12B1_F296_6909_3142L,  \/\/ -341\n+            0x5D57_70BF_D11F_5FBBL, 0x175E_6F3C_034B_7D93L,  \/\/ -340\n+            0x74AD_4CEF_C567_37A9L, 0x7D36_0B0B_041E_5CF8L,  \/\/ -339\n+            0x48EC_5015_DB60_82CAL, 0x1E41_C6E6_E292_FA1BL,  \/\/ -338\n+            0x5B27_641B_5238_A37CL, 0x65D2_38A0_9B37_B8A2L,  \/\/ -337\n+            0x71F1_3D22_26C6_CC5BL, 0x7F46_C6C8_C205_A6CAL,  \/\/ -336\n+            0x4736_C635_583C_3FB9L, 0x3F8C_3C3D_7943_883EL,  \/\/ -335\n+            0x5904_77C2_AE4B_4FA7L, 0x6F6F_4B4C_D794_6A4EL,  \/\/ -334\n+            0x6F45_95B3_59DE_2391L, 0x6B4B_1E20_0D79_84E1L,  \/\/ -333\n+            0x458B_7D90_182A_D63BL, 0x130E_F2D4_086B_F30DL,  \/\/ -332\n+            0x56EE_5CF4_1E35_8BC9L, 0x77D2_AF89_0A86_EFD0L,  \/\/ -331\n+            0x6CA9_F431_25C2_EEBCL, 0x35C7_5B6B_4D28_ABC4L,  \/\/ -330\n+            0x43EA_389E_B799_D535L, 0x619C_9923_1039_6B5BL,  \/\/ -329\n+            0x54E4_C6C6_6580_4A83L, 0x1A03_BF6B_D447_C631L,  \/\/ -328\n+            0x6A1D_F877_FEE0_5D24L, 0x0084_AF46_C959_B7BDL,  \/\/ -327\n+            0x4252_BB4A_FF4C_3A36L, 0x4052_ED8C_3DD8_12D6L,  \/\/ -326\n+            0x52E7_6A1D_BF1F_48C4L, 0x1067_A8EF_4D4E_178CL,  \/\/ -325\n+            0x67A1_44A5_2EE7_1AF5L, 0x1481_932B_20A1_9D6FL,  \/\/ -324\n+            0x40C4_CAE7_3D50_70D9L, 0x1CD0_FBFA_F465_0265L,  \/\/ -323\n+            0x50F5_FDA1_0CA4_8D0FL, 0x4405_3AF9_B17E_42FFL,  \/\/ -322\n+            0x6533_7D09_4FCD_B053L, 0x3506_89B8_1DDD_D3BEL,  \/\/ -321\n+            0x7E80_5C4B_A3C1_1C68L, 0x2248_2C26_2555_48AEL,  \/\/ -320\n+            0x4F10_39AF_4658_B1C1L, 0x156D_1B97_D755_4D6DL,  \/\/ -319\n+            0x62D4_481B_17EE_DE31L, 0x3AC8_627D_CD2A_A0C8L,  \/\/ -318\n+            0x7B89_5A21_DDEA_95BDL, 0x697A_7B1D_4075_48FAL,  \/\/ -317\n+            0x4D35_D855_2AB2_9D96L, 0x51EC_8CF2_4849_4D9CL,  \/\/ -316\n+            0x6083_4E6A_755F_44FCL, 0x2667_B02E_DA5B_A103L,  \/\/ -315\n+            0x78A4_2205_12B7_163BL, 0x3001_9C3A_90F2_8944L,  \/\/ -314\n+            0x4B66_9543_2BB2_6DE5L, 0x0E01_01A4_9A97_95CBL,  \/\/ -313\n+            0x5E40_3A93_F69F_095EL, 0x3181_420D_C13D_7B3DL,  \/\/ -312\n+            0x75D0_4938_F446_CBB5L, 0x7DE1_9291_318C_DA0CL,  \/\/ -311\n+            0x49A2_2DC3_98AC_3F51L, 0x5EAC_FB9A_BEF8_0848L,  \/\/ -310\n+            0x5C0A_B934_7ED7_4F26L, 0x1658_3A81_6EB6_0A5AL,  \/\/ -309\n+            0x730D_6781_9E8D_22EFL, 0x5BEE_4921_CA63_8CF0L,  \/\/ -308\n+            0x47E8_60B1_0318_35D5L, 0x6974_EDB5_1E7E_3816L,  \/\/ -307\n+            0x59E2_78DD_43DE_434BL, 0x23D2_2922_661D_C61CL,  \/\/ -306\n+            0x705B_1714_94D5_D41EL, 0x0CC6_B36A_FFA5_37A2L,  \/\/ -305\n+            0x4638_EE6C_DD05_A492L, 0x67FC_3022_DFC7_42C6L,  \/\/ -304\n+            0x57C7_2A08_1447_0DB7L, 0x41FB_3C2B_97B9_1377L,  \/\/ -303\n+            0x6DB8_F48A_1958_D125L, 0x327A_0B36_7DA7_5855L,  \/\/ -302\n+            0x4493_98D6_4FD7_82B7L, 0x2F8C_4702_0E88_9735L,  \/\/ -301\n+            0x55B8_7F0B_E3CD_6365L, 0x1B6F_58C2_922A_BD02L,  \/\/ -300\n+            0x6B26_9ECE_DCC0_BC3EL, 0x424B_2EF3_36B5_6C43L,  \/\/ -299\n+            0x42F8_2341_49F8_75A7L, 0x096E_FD58_0231_63AAL,  \/\/ -298\n+            0x53B6_2C11_9C76_9310L, 0x6BCA_BCAE_02BD_BC94L,  \/\/ -297\n+            0x68A3_B716_0394_37D5L, 0x06BD_6BD9_836D_2BB9L,  \/\/ -296\n+            0x4166_526D_C23C_A2E5L, 0x1436_6367_F224_3B54L,  \/\/ -295\n+            0x51BF_E709_32CB_CB9EL, 0x3943_FC41_EEAD_4A29L,  \/\/ -294\n+            0x662F_E0CB_7F7E_BE86L, 0x0794_FB52_6A58_9CB3L,  \/\/ -293\n+            0x7FBB_D8FE_5F5E_6E27L, 0x497A_3A27_04EE_C3DFL,  \/\/ -292\n+            0x4FD5_679E_FB9B_04D8L, 0x5DEC_6458_6315_3A6CL,  \/\/ -291\n+            0x63CA_C186_BA81_C60EL, 0x7567_7D6E_7BDA_8906L,  \/\/ -290\n+            0x7CBD_71E8_6922_3792L, 0x52C1_5CCA_1AD1_2B48L,  \/\/ -289\n+            0x4DF6_6731_41B5_62BBL, 0x53B8_D9FE_50C2_BB0DL,  \/\/ -288\n+            0x6174_00FD_9222_BB6AL, 0x48A7_107D_E4F3_69D0L,  \/\/ -287\n+            0x79D1_013C_F6AB_6A45L, 0x1AD0_D49D_5E30_4444L,  \/\/ -286\n+            0x4C22_A0C6_1A2B_226BL, 0x20C2_84E2_5ADE_2AABL,  \/\/ -285\n+            0x5F2B_48F7_A0B5_EB06L, 0x08F3_261A_F195_B555L,  \/\/ -284\n+            0x76F6_1B35_88E3_65C7L, 0x4B2F_EFA1_ADFB_22ABL,  \/\/ -283\n+            0x4A59_D101_758E_1F9CL, 0x5EFD_F5C5_0CBC_F5ABL,  \/\/ -282\n+            0x5CF0_4541_D2F1_A783L, 0x76BD_7336_4FEC_3315L,  \/\/ -281\n+            0x742C_5692_47AE_1164L, 0x746C_D003_E3E7_3FDBL,  \/\/ -280\n+            0x489B_B61B_6CCC_CADFL, 0x08C4_0202_6E70_87E9L,  \/\/ -279\n+            0x5AC2_A3A2_47FF_FD96L, 0x6AF5_0283_0A0C_A9E3L,  \/\/ -278\n+            0x7173_4C8A_D9FF_FCFCL, 0x45B2_4323_CC8F_D45CL,  \/\/ -277\n+            0x46E8_0FD6_C83F_FE1DL, 0x6B8F_69F6_5FD9_E4B9L,  \/\/ -276\n+            0x58A2_13CC_7A4F_FDA5L, 0x2673_4473_F7D0_5DE8L,  \/\/ -275\n+            0x6ECA_98BF_98E3_FD0EL, 0x5010_1590_F5C4_7561L,  \/\/ -274\n+            0x453E_9F77_BF8E_7E29L, 0x120A_0D7A_999A_C95DL,  \/\/ -273\n+            0x568E_4755_AF72_1DB3L, 0x368C_90D9_4001_7BB4L,  \/\/ -272\n+            0x6C31_D92B_1B4E_A520L, 0x242F_B50F_9001_DAA1L,  \/\/ -271\n+            0x439F_27BA_F111_2734L, 0x169D_D129_BA01_28A5L,  \/\/ -270\n+            0x5486_F1A9_AD55_7101L, 0x1C45_4574_2881_72CEL,  \/\/ -269\n+            0x69A8_AE14_18AA_CD41L, 0x4356_96D1_32A1_CF81L,  \/\/ -268\n+            0x4209_6CCC_8F6A_C048L, 0x7A16_1E42_BFA5_21B1L,  \/\/ -267\n+            0x528B_C7FF_B345_705BL, 0x189B_A5D3_6F8E_6A1DL,  \/\/ -266\n+            0x672E_B9FF_A016_CC71L, 0x7EC2_8F48_4B72_04A4L,  \/\/ -265\n+            0x407D_343F_C40E_3FC7L, 0x1F39_998D_2F27_42E7L,  \/\/ -264\n+            0x509C_814F_B511_CFB9L, 0x0707_FFF0_7AF1_13A1L,  \/\/ -263\n+            0x64C3_A1A3_A256_43A7L, 0x28C9_FFEC_99AD_5889L,  \/\/ -262\n+            0x7DF4_8A0C_8AEB_D491L, 0x12FC_7FE7_C018_AEABL,  \/\/ -261\n+            0x4EB8_D647_D6D3_64DAL, 0x5BDD_CFF0_D80F_6D2BL,  \/\/ -260\n+            0x6267_0BD9_CC88_3E11L, 0x32D5_43ED_0E13_4875L,  \/\/ -259\n+            0x7B00_CED0_3FAA_4D95L, 0x5F8A_94E8_5198_1A93L,  \/\/ -258\n+            0x4CE0_8142_27CA_707DL, 0x4BB6_9D11_32FF_109CL,  \/\/ -257\n+            0x6018_A192_B1BD_0C9CL, 0x7EA4_4455_7FBE_D4C3L,  \/\/ -256\n+            0x781E_C9F7_5E2C_4FC4L, 0x1E4D_556A_DFAE_89F3L,  \/\/ -255\n+            0x4B13_3E3A_9ADB_B1DAL, 0x52F0_5562_CBCD_1638L,  \/\/ -254\n+            0x5DD8_0DC9_4192_9E51L, 0x27AC_6ABB_7EC0_5BC6L,  \/\/ -253\n+            0x754E_113B_91F7_45E5L, 0x5197_856A_5E70_72B8L,  \/\/ -252\n+            0x4950_CAC5_3B3A_8BAFL, 0x42FE_B362_7B06_47B3L,  \/\/ -251\n+            0x5BA4_FD76_8A09_2E9BL, 0x33BE_603B_19C7_D99FL,  \/\/ -250\n+            0x728E_3CD4_2C8B_7A42L, 0x20AD_F849_E039_D007L,  \/\/ -249\n+            0x4798_E604_9BD7_2C69L, 0x346C_BB2E_2C24_2205L,  \/\/ -248\n+            0x597F_1F85_C2CC_F783L, 0x6187_E9F9_B72D_2A86L,  \/\/ -247\n+            0x6FDE_E767_3380_3564L, 0x59E9_E478_24F8_7527L,  \/\/ -246\n+            0x45EB_50A0_8030_215EL, 0x7832_2ECB_171B_4939L,  \/\/ -245\n+            0x5766_24C8_A03C_29B6L, 0x563E_BA7D_DCE2_1B87L,  \/\/ -244\n+            0x6D3F_ADFA_C84B_3424L, 0x2BCE_691D_541A_A268L,  \/\/ -243\n+            0x4447_CCBC_BD2F_0096L, 0x5B61_01B2_5490_A581L,  \/\/ -242\n+            0x5559_BFEB_EC7A_C0BCL, 0x3239_421E_E9B4_CEE1L,  \/\/ -241\n+            0x6AB0_2FE6_E799_70EBL, 0x3EC7_92A6_A422_029AL,  \/\/ -240\n+            0x42AE_1DF0_50BF_E693L, 0x173C_BBA8_2695_41A0L,  \/\/ -239\n+            0x5359_A56C_64EF_E037L, 0x7D0B_EA92_303A_9208L,  \/\/ -238\n+            0x6830_0EC7_7E2B_D845L, 0x7C4E_E536_BC49_368AL,  \/\/ -237\n+            0x411E_093C_AEDB_672BL, 0x5DB1_4F42_35AD_C217L,  \/\/ -236\n+            0x5165_8B8B_DA92_40F6L, 0x551D_A312_C319_329CL,  \/\/ -235\n+            0x65BE_EE6E_D136_D134L, 0x2A65_0BD7_73DF_7F43L,  \/\/ -234\n+            0x7F2E_AA0A_8584_8581L, 0x34FE_4ECD_50D7_5F14L,  \/\/ -233\n+            0x4F7D_2A46_9372_D370L, 0x711E_F140_5286_9B6CL,  \/\/ -232\n+            0x635C_74D8_384F_884DL, 0x0D66_AD90_6728_4247L,  \/\/ -231\n+            0x7C33_920E_4663_6A60L, 0x30C0_58F4_80F2_52D9L,  \/\/ -230\n+            0x4DA0_3B48_EBFE_227CL, 0x1E78_3798_D097_73C8L,  \/\/ -229\n+            0x6108_4A1B_26FD_AB1BL, 0x2616_457F_04BD_50BAL,  \/\/ -228\n+            0x794A_5CA1_F0BD_15E2L, 0x0F9B_D6DE_C5EC_A4E8L,  \/\/ -227\n+            0x4BCE_79E5_3676_2DADL, 0x29C1_664B_3BB3_E711L,  \/\/ -226\n+            0x5EC2_185E_8413_B918L, 0x5431_BFDE_0AA0_E0D5L,  \/\/ -225\n+            0x7672_9E76_2518_A75EL, 0x693E_2FD5_8D49_190BL,  \/\/ -224\n+            0x4A07_A309_D72F_689BL, 0x21C6_DDE5_784D_AFA7L,  \/\/ -223\n+            0x5C89_8BCC_4CFB_42C2L, 0x0A38_955E_D661_1B90L,  \/\/ -222\n+            0x73AB_EEBF_603A_1372L, 0x4CC6_BAB6_8BF9_6274L,  \/\/ -221\n+            0x484B_7537_9C24_4C27L, 0x4FFC_34B2_177B_DD89L,  \/\/ -220\n+            0x5A5E_5285_832D_5F31L, 0x43FB_41DE_9D5A_D4EBL,  \/\/ -219\n+            0x70F5_E726_E3F8_B6FDL, 0x74FA_1256_44B1_8A26L,  \/\/ -218\n+            0x4699_B078_4E7B_725EL, 0x591C_4B75_EAEE_F658L,  \/\/ -217\n+            0x5840_1C96_621A_4EF6L, 0x2F63_5E53_65AA_B3EDL,  \/\/ -216\n+            0x6E50_23BB_FAA0_E2B3L, 0x7B3C_35E8_3F15_60E9L,  \/\/ -215\n+            0x44F2_1655_7CA4_8DB0L, 0x3D05_A1B1_276D_5C92L,  \/\/ -214\n+            0x562E_9BEA_DBCD_B11CL, 0x4C47_0A1D_7148_B3B6L,  \/\/ -213\n+            0x6BBA_42E5_92C1_1D63L, 0x5F58_CCA4_CD9A_E0A3L,  \/\/ -212\n+            0x4354_69CF_7BB8_B25EL, 0x2B97_7FE7_0080_CC66L,  \/\/ -211\n+            0x5429_8443_5AA6_DEF5L, 0x767D_5FE0_C0A0_FF80L,  \/\/ -210\n+            0x6933_E554_3150_96B3L, 0x341C_B7D8_F0C9_3F5FL,  \/\/ -209\n+            0x41C0_6F54_9ED2_5E30L, 0x1091_F2E7_967D_C79CL,  \/\/ -208\n+            0x5230_8B29_C686_F5BCL, 0x14B6_6FA1_7C1D_3983L,  \/\/ -207\n+            0x66BC_ADF4_3828_B32BL, 0x19E4_0B89_DB24_87E3L,  \/\/ -206\n+            0x4035_ECB8_A319_6FFBL, 0x002E_8736_28F6_D4EEL,  \/\/ -205\n+            0x5043_67E6_CBDF_CBF9L, 0x603A_2903_B334_8A2AL,  \/\/ -204\n+            0x6454_41E0_7ED7_BEF8L, 0x1848_B344_A001_ACB4L,  \/\/ -203\n+            0x7D69_5258_9E8D_AEB6L, 0x1E5A_E015_C802_17E1L,  \/\/ -202\n+            0x4E61_D377_6318_8D31L, 0x72F8_CC0D_9D01_4EEDL,  \/\/ -201\n+            0x61FA_4855_3BDE_B07EL, 0x2FB6_FF11_0441_A2A8L,  \/\/ -200\n+            0x7A78_DA6A_8AD6_5C9DL, 0x7BA4_BED5_4552_0B52L,  \/\/ -199\n+            0x4C8B_8882_96C5_F9E2L, 0x5D46_F745_4B53_4713L,  \/\/ -198\n+            0x5FAE_6AA3_3C77_785BL, 0x3498_B516_9E28_18D8L,  \/\/ -197\n+            0x779A_054C_0B95_5672L, 0x21BE_E25C_45B2_1F0EL,  \/\/ -196\n+            0x4AC0_434F_873D_5607L, 0x3517_4D79_AB8F_5369L,  \/\/ -195\n+            0x5D70_5423_690C_AB89L, 0x225D_20D8_1673_2843L,  \/\/ -194\n+            0x74CC_692C_434F_D66BL, 0x4AF4_690E_1C0F_F253L,  \/\/ -193\n+            0x48FF_C1BB_AA11_E603L, 0x1ED8_C1A8_D189_F774L,  \/\/ -192\n+            0x5B3F_B22A_9496_5F84L, 0x068E_F213_05EC_7551L,  \/\/ -191\n+            0x720F_9EB5_39BB_F765L, 0x0832_AE97_C767_92A5L,  \/\/ -190\n+            0x4749_C331_4415_7A9FL, 0x151F_AD1E_DCA0_BBA8L,  \/\/ -189\n+            0x591C_33FD_951A_D946L, 0x7A67_9866_93C8_EA91L,  \/\/ -188\n+            0x6F63_40FC_FA61_8F98L, 0x5901_7E80_38BB_2536L,  \/\/ -187\n+            0x459E_089E_1C7C_F9BFL, 0x37A0_EF10_2374_F742L,  \/\/ -186\n+            0x5705_8AC5_A39C_382FL, 0x2589_2AD4_2C52_3512L,  \/\/ -185\n+            0x6CC6_ED77_0C83_463BL, 0x0EEB_7589_3766_C256L,  \/\/ -184\n+            0x43FC_546A_67D2_0BE4L, 0x7953_2975_C2A0_3976L,  \/\/ -183\n+            0x54FB_6985_01C6_8EDEL, 0x17A7_F3D3_3348_47D4L,  \/\/ -182\n+            0x6A3A_43E6_4238_3295L, 0x5D91_F0C8_001A_59C8L,  \/\/ -181\n+            0x4264_6A6F_E963_1F9DL, 0x4A7B_367D_0010_781DL,  \/\/ -180\n+            0x52FD_850B_E3BB_E784L, 0x7D1A_041C_4014_9625L,  \/\/ -179\n+            0x67BC_E64E_DCAA_E166L, 0x1C60_8523_5019_BBAEL,  \/\/ -178\n+            0x40D6_0FF1_49EA_CCDFL, 0x71BC_5336_1210_154DL,  \/\/ -177\n+            0x510B_93ED_9C65_8017L, 0x6E2B_6803_9694_1AA0L,  \/\/ -176\n+            0x654E_78E9_037E_E01DL, 0x69B6_4204_7C39_2148L,  \/\/ -175\n+            0x7EA2_1723_445E_9825L, 0x2423_D285_9B47_6999L,  \/\/ -174\n+            0x4F25_4E76_0ABB_1F17L, 0x2696_6393_810C_A200L,  \/\/ -173\n+            0x62EE_A213_8D69_E6DDL, 0x103B_FC78_614F_CA80L,  \/\/ -172\n+            0x7BAA_4A98_70C4_6094L, 0x344A_FB96_79A3_BD20L,  \/\/ -171\n+            0x4D4A_6E9F_467A_BC5CL, 0x60AE_DD3E_0C06_5634L,  \/\/ -170\n+            0x609D_0A47_1819_6B73L, 0x78DA_948D_8F07_EBC1L,  \/\/ -169\n+            0x78C4_4CD8_DE1F_C650L, 0x7711_39B0_F2C9_E6B1L,  \/\/ -168\n+            0x4B7A_B007_8AD3_DBF2L, 0x4A6A_C40E_97BE_302FL,  \/\/ -167\n+            0x5E59_5C09_6D88_D2EFL, 0x1D05_7512_3DAD_BC3AL,  \/\/ -166\n+            0x75EF_B30B_C8EB_07ABL, 0x0446_D256_CD19_2B49L,  \/\/ -165\n+            0x49B5_CFE7_5D92_E4CAL, 0x72AC_4376_402F_BB0EL,  \/\/ -164\n+            0x5C23_43E1_34F7_9DFDL, 0x4F57_5453_D03B_A9D1L,  \/\/ -163\n+            0x732C_14D9_8235_857DL, 0x032D_2968_C44A_9445L,  \/\/ -162\n+            0x47FB_8D07_F161_736EL, 0x11FC_39E1_7AAE_9CABL,  \/\/ -161\n+            0x59FA_7049_EDB9_D049L, 0x567B_4859_D95A_43D6L,  \/\/ -160\n+            0x7079_0C5C_6928_445CL, 0x0C1A_1A70_4FB0_D4CCL,  \/\/ -159\n+            0x464B_A7B9_C1B9_2AB9L, 0x4790_5086_31CE_84FFL,  \/\/ -158\n+            0x57DE_91A8_3227_7567L, 0x7974_64A7_BE42_263FL,  \/\/ -157\n+            0x6DD6_3612_3EB1_52C1L, 0x77D1_7DD1_ADD2_AFCFL,  \/\/ -156\n+            0x44A5_E1CB_672E_D3B9L, 0x1AE2_EEA3_0CA3_ADE1L,  \/\/ -155\n+            0x55CF_5A3E_40FA_88A7L, 0x419B_AA4B_CFCC_995AL,  \/\/ -154\n+            0x6B43_30CD_D139_2AD1L, 0x3202_94DE_C3BF_BFB0L,  \/\/ -153\n+            0x4309_FE80_A2C3_BAC2L, 0x6F41_9D0B_3A57_D7CEL,  \/\/ -152\n+            0x53CC_7E20_CB74_A973L, 0x4B12_044E_08ED_CDC2L,  \/\/ -151\n+            0x68BF_9DA8_FE51_D3D0L, 0x3DD6_8561_8B29_4132L,  \/\/ -150\n+            0x4177_C289_9EF3_2462L, 0x26A6_135C_F6F9_C8BFL,  \/\/ -149\n+            0x51D5_B32C_06AF_ED7AL, 0x704F_9834_34B8_3AEFL,  \/\/ -148\n+            0x664B_1FF7_085B_E8D9L, 0x4C63_7E41_41E6_49ABL,  \/\/ -147\n+            0x7FDD_E7F4_CA72_E30FL, 0x7F7C_5DD1_925F_DC15L,  \/\/ -146\n+            0x4FEA_B0F8_FE87_CDE9L, 0x7FAD_BAA2_FB7B_E98DL,  \/\/ -145\n+            0x63E5_5D37_3E29_C164L, 0x3F99_294B_BA5A_E3F1L,  \/\/ -144\n+            0x7CDE_B485_0DB4_31BDL, 0x4F7F_739E_A8F1_9CEDL,  \/\/ -143\n+            0x4E0B_30D3_2890_9F16L, 0x41AF_A843_2997_0214L,  \/\/ -142\n+            0x618D_FD07_F2B4_C6DCL, 0x121B_9253_F3FC_C299L,  \/\/ -141\n+            0x79F1_7C49_EF61_F893L, 0x16A2_76E8_F0FB_F33FL,  \/\/ -140\n+            0x4C36_EDAE_359D_3B5BL, 0x7E25_8A51_969D_7808L,  \/\/ -139\n+            0x5F44_A919_C304_8A32L, 0x7DAE_ECE5_FC44_D609L,  \/\/ -138\n+            0x7715_D360_33C5_ACBFL, 0x5D1A_A81F_7B56_0B8CL,  \/\/ -137\n+            0x4A6D_A41C_205B_8BF7L, 0x6A30_A913_AD15_C738L,  \/\/ -136\n+            0x5D09_0D23_2872_6EF5L, 0x64BC_D358_985B_3905L,  \/\/ -135\n+            0x744B_506B_F28F_0AB3L, 0x1DEC_082E_BE72_0746L,  \/\/ -134\n+            0x48AF_1243_7799_66B0L, 0x02B3_851D_3707_448CL,  \/\/ -133\n+            0x5ADA_D6D4_557F_C05CL, 0x0360_6664_84C9_15AFL,  \/\/ -132\n+            0x7191_8C89_6ADF_B073L, 0x0438_7FFD_A5FB_5B1BL,  \/\/ -131\n+            0x46FA_F7D5_E2CB_CE47L, 0x72A3_4FFE_87BD_18F1L,  \/\/ -130\n+            0x58B9_B5CB_5B7E_C1D9L, 0x6F4C_23FE_29AC_5F2DL,  \/\/ -129\n+            0x6EE8_233E_325E_7250L, 0x2B1F_2CFD_B417_76F8L,  \/\/ -128\n+            0x4551_1606_DF7B_0772L, 0x1AF3_7C1E_908E_AA5BL,  \/\/ -127\n+            0x56A5_5B88_9759_C94EL, 0x61B0_5B26_34B2_54F2L,  \/\/ -126\n+            0x6C4E_B26A_BD30_3BA2L, 0x3A1C_71EF_C1DE_EA2EL,  \/\/ -125\n+            0x43B1_2F82_B63E_2545L, 0x4451_C735_D92B_525DL,  \/\/ -124\n+            0x549D_7B63_63CD_AE96L, 0x7566_3903_4F76_26F4L,  \/\/ -123\n+            0x69C4_DA3C_3CC1_1A3CL, 0x52BF_C744_2353_B0B1L,  \/\/ -122\n+            0x421B_0865_A5F8_B065L, 0x73B7_DC8A_9614_4E6FL,  \/\/ -121\n+            0x52A1_CA7F_0F76_DC7FL, 0x30A5_D3AD_3B99_620BL,  \/\/ -120\n+            0x674A_3D1E_D354_939FL, 0x1CCF_4898_8A7F_BA8DL,  \/\/ -119\n+            0x408E_6633_4414_DC43L, 0x4201_8D5F_568F_D498L,  \/\/ -118\n+            0x50B1_FFC0_151A_1354L, 0x3281_F0B7_2C33_C9BEL,  \/\/ -117\n+            0x64DE_7FB0_1A60_9829L, 0x3F22_6CE4_F740_BC2EL,  \/\/ -116\n+            0x7E16_1F9C_20F8_BE33L, 0x6EEB_081E_3510_EB39L,  \/\/ -115\n+            0x4ECD_D3C1_949B_76E0L, 0x3552_E512_E12A_9304L,  \/\/ -114\n+            0x6281_48B1_F9C2_5498L, 0x42A7_9E57_9975_37C5L,  \/\/ -113\n+            0x7B21_9ADE_7832_E9BEL, 0x5351_85ED_7FD2_85B6L,  \/\/ -112\n+            0x4CF5_00CB_0B1F_D217L, 0x1412_F3B4_6FE3_9392L,  \/\/ -111\n+            0x6032_40FD_CDE7_C69CL, 0x7917_B0A1_8BDC_7876L,  \/\/ -110\n+            0x783E_D13D_4161_B844L, 0x175D_9CC9_EED3_9694L,  \/\/ -109\n+            0x4B27_42C6_48DD_132AL, 0x4E9A_81FE_3544_3E1CL,  \/\/ -108\n+            0x5DF1_1377_DB14_57F5L, 0x2241_227D_C295_4DA3L,  \/\/ -107\n+            0x756D_5855_D1D9_6DF2L, 0x4AD1_6B1D_333A_A10CL,  \/\/ -106\n+            0x4964_5735_A327_E4B7L, 0x4EC2_E2F2_4004_A4A8L,  \/\/ -105\n+            0x5BBD_6D03_0BF1_DDE5L, 0x4273_9BAE_D005_CDD2L,  \/\/ -104\n+            0x72AC_C843_CEEE_555EL, 0x7310_829A_8407_4146L,  \/\/ -103\n+            0x47AB_FD2A_6154_F55BL, 0x27EA_51A0_9284_88CCL,  \/\/ -102\n+            0x5996_FC74_F9AA_32B2L, 0x11E4_E608_B725_AAFFL,  \/\/ -101\n+            0x6FFC_BB92_3814_BF5EL, 0x565E_1F8A_E4EF_15BEL,  \/\/ -100\n+            0x45FD_F53B_630C_F79BL, 0x15FA_D3B6_CF15_6D97L,  \/\/  -99\n+            0x577D_728A_3BD0_3581L, 0x7B79_88A4_82DA_C8FDL,  \/\/  -98\n+            0x6D5C_CF2C_CAC4_42E2L, 0x3A57_EACD_A391_7B3CL,  \/\/  -97\n+            0x445A_017B_FEBA_A9CDL, 0x4476_F2C0_863A_ED06L,  \/\/  -96\n+            0x5570_81DA_FE69_5440L, 0x7594_AF70_A7C9_A847L,  \/\/  -95\n+            0x6ACC_A251_BE03_A951L, 0x12F9_DB4C_D1BC_1258L,  \/\/  -94\n+            0x42BF_E573_16C2_49D2L, 0x5BDC_2910_0315_8B77L,  \/\/  -93\n+            0x536F_DECF_DC72_DC47L, 0x32D3_3354_03DA_EE55L,  \/\/  -92\n+            0x684B_D683_D38F_9359L, 0x1F88_0029_04D1_A9EAL,  \/\/  -91\n+            0x412F_6612_6439_BC17L, 0x63B5_0019_A303_0A33L,  \/\/  -90\n+            0x517B_3F96_FD48_2B1DL, 0x5CA2_4020_0BC3_CCBFL,  \/\/  -89\n+            0x65DA_0F7C_BC9A_35E5L, 0x13CA_D028_0EB4_BFEFL,  \/\/  -88\n+            0x7F50_935B_EBC0_C35EL, 0x38BD_8432_1261_EFEBL,  \/\/  -87\n+            0x4F92_5C19_7358_7A1BL, 0x0376_729F_4B7D_35F3L,  \/\/  -86\n+            0x6376_F31F_D02E_98A1L, 0x6454_0F47_1E5C_836FL,  \/\/  -85\n+            0x7C54_AFE7_C43A_3ECAL, 0x1D69_1318_E5F3_A44BL,  \/\/  -84\n+            0x4DB4_EDF0_DAA4_673EL, 0x3261_ABEF_8FB8_46AFL,  \/\/  -83\n+            0x6122_296D_114D_810DL, 0x7EFA_16EB_73A6_585BL,  \/\/  -82\n+            0x796A_B3C8_55A0_E151L, 0x3EB8_9CA6_508F_EE71L,  \/\/  -81\n+            0x4BE2_B05D_3584_8CD2L, 0x7733_61E7_F259_F507L,  \/\/  -80\n+            0x5EDB_5C74_82E5_B007L, 0x5500_3A61_EEF0_7249L,  \/\/  -79\n+            0x7692_3391_A39F_1C09L, 0x4A40_48FA_6AAC_8EDBL,  \/\/  -78\n+            0x4A1B_603B_0643_7185L, 0x7E68_2D9C_82AB_D949L,  \/\/  -77\n+            0x5CA2_3849_C7D4_4DE7L, 0x3E02_3903_A356_CF9BL,  \/\/  -76\n+            0x73CA_C65C_39C9_6161L, 0x2D82_C744_8C2C_8382L,  \/\/  -75\n+            0x485E_BBF9_A41D_DCDCL, 0x6C71_BC8A_D79B_D231L,  \/\/  -74\n+            0x5A76_6AF8_0D25_5414L, 0x078E_2BAD_8D82_C6BDL,  \/\/  -73\n+            0x7114_05B6_106E_A919L, 0x0971_B698_F0E3_786DL,  \/\/  -72\n+            0x46AC_8391_CA45_29AFL, 0x55E7_121F_968E_2B44L,  \/\/  -71\n+            0x5857_A476_3CD6_741BL, 0x4B60_D6A7_7C31_B615L,  \/\/  -70\n+            0x6E6D_8D93_CC0C_1122L, 0x3E39_0C51_5B3E_239AL,  \/\/  -69\n+            0x4504_787C_5F87_8AB5L, 0x46E3_A7B2_D906_D640L,  \/\/  -68\n+            0x5645_969B_7769_6D62L, 0x789C_919F_8F48_8BD0L,  \/\/  -67\n+            0x6BD6_FC42_5543_C8BBL, 0x56C3_B607_731A_AEC4L,  \/\/  -66\n+            0x4366_5DA9_754A_5D75L, 0x263A_51C4_A7F0_AD3BL,  \/\/  -65\n+            0x543F_F513_D29C_F4D2L, 0x4FC8_E635_D1EC_D88AL,  \/\/  -64\n+            0x694F_F258_C744_3207L, 0x23BB_1FC3_4668_0EACL,  \/\/  -63\n+            0x41D1_F777_7C8A_9F44L, 0x4654_F3DA_0C01_092CL,  \/\/  -62\n+            0x5246_7555_5BAD_4715L, 0x57EA_30D0_8F01_4B76L,  \/\/  -61\n+            0x66D8_12AA_B298_98DBL, 0x0DE4_BD04_B2C1_9E54L,  \/\/  -60\n+            0x4047_0BAA_AF9F_5F88L, 0x78AE_F622_EFB9_02F5L,  \/\/  -59\n+            0x5058_CE95_5B87_376BL, 0x16DA_B3AB_ABA7_43B2L,  \/\/  -58\n+            0x646F_023A_B269_0545L, 0x7C91_6096_9691_149EL,  \/\/  -57\n+            0x7D8A_C2C9_5F03_4697L, 0x3BB5_B8BC_3C35_59C5L,  \/\/  -56\n+            0x4E76_B9BD_DB62_0C1EL, 0x5551_9375_A5A1_581BL,  \/\/  -55\n+            0x6214_682D_523A_8F26L, 0x2AA5_F853_0F09_AE22L,  \/\/  -54\n+            0x7A99_8238_A6C9_32EFL, 0x754F_7667_D2CC_19ABL,  \/\/  -53\n+            0x4C9F_F163_683D_BFD5L, 0x7951_AA00_E3BF_900BL,  \/\/  -52\n+            0x5FC7_EDBC_424D_2FCBL, 0x37A6_1481_1CAF_740DL,  \/\/  -51\n+            0x77B9_E92B_52E0_7BBEL, 0x258F_99A1_63DB_5111L,  \/\/  -50\n+            0x4AD4_31BB_13CC_4D56L, 0x7779_C004_DE69_12ABL,  \/\/  -49\n+            0x5D89_3E29_D8BF_60ACL, 0x5558_3006_1603_5755L,  \/\/  -48\n+            0x74EB_8DB4_4EEF_38D7L, 0x6AAE_3C07_9B84_2D2AL,  \/\/  -47\n+            0x4913_3890_B155_8386L, 0x72AC_E584_C132_9C3BL,  \/\/  -46\n+            0x5B58_06B4_DDAA_E468L, 0x4F58_1EE5_F17F_4349L,  \/\/  -45\n+            0x722E_0862_1515_9D82L, 0x632E_269F_6DDF_141BL,  \/\/  -44\n+            0x475C_C53D_4D2D_8271L, 0x5DFC_D823_A4AB_6C91L,  \/\/  -43\n+            0x5933_F68C_A078_E30EL, 0x157C_0E2C_8DD6_47B5L,  \/\/  -42\n+            0x6F80_F42F_C897_1BD1L, 0x5ADB_11B7_B14B_D9A3L,  \/\/  -41\n+            0x45B0_989D_DD5E_7163L, 0x08C8_EB12_CECF_6806L,  \/\/  -40\n+            0x571C_BEC5_54B6_0DBBL, 0x6AFB_25D7_8283_4207L,  \/\/  -39\n+            0x6CE3_EE76_A9E3_912AL, 0x65B9_EF4D_6324_1289L,  \/\/  -38\n+            0x440E_750A_2A2E_3ABAL, 0x5F94_3590_5DF6_8B96L,  \/\/  -37\n+            0x5512_124C_B4B9_C969L, 0x3779_42F4_7574_2E7BL,  \/\/  -36\n+            0x6A56_96DF_E1E8_3BC3L, 0x6557_93B1_92D1_3A1AL,  \/\/  -35\n+            0x4276_1E4B_ED31_255AL, 0x2F56_BC4E_FBC2_C450L,  \/\/  -34\n+            0x5313_A5DE_E87D_6EB0L, 0x7B2C_6B62_BAB3_7564L,  \/\/  -33\n+            0x67D8_8F56_A29C_CA5DL, 0x19F7_863B_6960_52BDL,  \/\/  -32\n+            0x40E7_5996_25A1_FE7AL, 0x203A_B3E5_21DC_33B6L,  \/\/  -31\n+            0x5121_2FFB_AF0A_7E18L, 0x6849_60DE_6A53_40A4L,  \/\/  -30\n+            0x6569_7BFA_9ACD_1D9FL, 0x025B_B916_04E8_10CDL,  \/\/  -29\n+            0x7EC3_DAF9_4180_6506L, 0x62F2_A75B_8622_1500L,  \/\/  -28\n+            0x4F3A_68DB_C8F0_3F24L, 0x1DD7_A899_33D5_4D20L,  \/\/  -27\n+            0x6309_0312_BB2C_4EEDL, 0x254D_92BF_80CA_A068L,  \/\/  -26\n+            0x7BCB_43D7_69F7_62A8L, 0x4EA0_F76F_60FD_4882L,  \/\/  -25\n+            0x4D5F_0A66_A23A_9DA9L, 0x3124_9AA5_9C9E_4D51L,  \/\/  -24\n+            0x60B6_CD00_4AC9_4513L, 0x5D6D_C14F_03C5_E0A5L,  \/\/  -23\n+            0x78E4_8040_5D7B_9658L, 0x54C9_31A2_C4B7_58CFL,  \/\/  -22\n+            0x4B8E_D028_3A6D_3DF7L, 0x34FD_BF05_BAF2_9781L,  \/\/  -21\n+            0x5E72_8432_4908_8D75L, 0x223D_2EC7_29AF_3D62L,  \/\/  -20\n+            0x760F_253E_DB4A_B0D2L, 0x4ACC_7A78_F41B_0CBAL,  \/\/  -19\n+            0x49C9_7747_490E_AE83L, 0x4EBF_CC8B_9890_E7F4L,  \/\/  -18\n+            0x5C3B_D519_1B52_5A24L, 0x426F_BFAE_7EB5_21F1L,  \/\/  -17\n+            0x734A_CA5F_6226_F0ADL, 0x530B_AF9A_1E62_6A6DL,  \/\/  -16\n+            0x480E_BE7B_9D58_566CL, 0x43E7_4DC0_52FD_8285L,  \/\/  -15\n+            0x5A12_6E1A_84AE_6C07L, 0x54E1_2130_67BC_E326L,  \/\/  -14\n+            0x7097_09A1_25DA_0709L, 0x4A19_697C_81AC_1BEFL,  \/\/  -13\n+            0x465E_6604_B7A8_4465L, 0x7E4F_E1ED_D10B_9175L,  \/\/  -12\n+            0x57F5_FF85_E592_557FL, 0x3DE3_DA69_454E_75D3L,  \/\/  -11\n+            0x6DF3_7F67_5EF6_EADFL, 0x2D5C_D103_96A2_1347L,  \/\/  -10\n+            0x44B8_2FA0_9B5A_52CBL, 0x4C5A_02A2_3E25_4C0DL,  \/\/   -9\n+            0x55E6_3B88_C230_E77EL, 0x3F70_834A_CDAE_9F10L,  \/\/   -8\n+            0x6B5F_CA6A_F2BD_215EL, 0x0F4C_A41D_811A_46D4L,  \/\/   -7\n+            0x431B_DE82_D7B6_34DAL, 0x698F_E692_70B0_6C44L,  \/\/   -6\n+            0x53E2_D623_8DA3_C211L, 0x43F3_E037_0CDC_8755L,  \/\/   -5\n+            0x68DB_8BAC_710C_B295L, 0x74F0_D844_D013_A92BL,  \/\/   -4\n+            0x4189_374B_C6A7_EF9DL, 0x5916_872B_020C_49BBL,  \/\/   -3\n+            0x51EB_851E_B851_EB85L, 0x0F5C_28F5_C28F_5C29L,  \/\/   -2\n+            0x6666_6666_6666_6666L, 0x3333_3333_3333_3334L,  \/\/   -1\n+            0x4000_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    0\n+            0x5000_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    1\n+            0x6400_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    2\n+            0x7D00_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    3\n+            0x4E20_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    4\n+            0x61A8_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    5\n+            0x7A12_0000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    6\n+            0x4C4B_4000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    7\n+            0x5F5E_1000_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    8\n+            0x7735_9400_0000_0000L, 0x0000_0000_0000_0001L,  \/\/    9\n+            0x4A81_7C80_0000_0000L, 0x0000_0000_0000_0001L,  \/\/   10\n+            0x5D21_DBA0_0000_0000L, 0x0000_0000_0000_0001L,  \/\/   11\n+            0x746A_5288_0000_0000L, 0x0000_0000_0000_0001L,  \/\/   12\n+            0x48C2_7395_0000_0000L, 0x0000_0000_0000_0001L,  \/\/   13\n+            0x5AF3_107A_4000_0000L, 0x0000_0000_0000_0001L,  \/\/   14\n+            0x71AF_D498_D000_0000L, 0x0000_0000_0000_0001L,  \/\/   15\n+            0x470D_E4DF_8200_0000L, 0x0000_0000_0000_0001L,  \/\/   16\n+            0x58D1_5E17_6280_0000L, 0x0000_0000_0000_0001L,  \/\/   17\n+            0x6F05_B59D_3B20_0000L, 0x0000_0000_0000_0001L,  \/\/   18\n+            0x4563_9182_44F4_0000L, 0x0000_0000_0000_0001L,  \/\/   19\n+            0x56BC_75E2_D631_0000L, 0x0000_0000_0000_0001L,  \/\/   20\n+            0x6C6B_935B_8BBD_4000L, 0x0000_0000_0000_0001L,  \/\/   21\n+            0x43C3_3C19_3756_4800L, 0x0000_0000_0000_0001L,  \/\/   22\n+            0x54B4_0B1F_852B_DA00L, 0x0000_0000_0000_0001L,  \/\/   23\n+            0x69E1_0DE7_6676_D080L, 0x0000_0000_0000_0001L,  \/\/   24\n+            0x422C_A8B0_A00A_4250L, 0x0000_0000_0000_0001L,  \/\/   25\n+            0x52B7_D2DC_C80C_D2E4L, 0x0000_0000_0000_0001L,  \/\/   26\n+            0x6765_C793_FA10_079DL, 0x0000_0000_0000_0001L,  \/\/   27\n+            0x409F_9CBC_7C4A_04C2L, 0x1000_0000_0000_0001L,  \/\/   28\n+            0x50C7_83EB_9B5C_85F2L, 0x5400_0000_0000_0001L,  \/\/   29\n+            0x64F9_64E6_8233_A76FL, 0x2900_0000_0000_0001L,  \/\/   30\n+            0x7E37_BE20_22C0_914BL, 0x1340_0000_0000_0001L,  \/\/   31\n+            0x4EE2_D6D4_15B8_5ACEL, 0x7C08_0000_0000_0001L,  \/\/   32\n+            0x629B_8C89_1B26_7182L, 0x5B0A_0000_0000_0001L,  \/\/   33\n+            0x7B42_6FAB_61F0_0DE3L, 0x31CC_8000_0000_0001L,  \/\/   34\n+            0x4D09_85CB_1D36_08AEL, 0x0F1F_D000_0000_0001L,  \/\/   35\n+            0x604B_E73D_E483_8AD9L, 0x52E7_C400_0000_0001L,  \/\/   36\n+            0x785E_E10D_5DA4_6D90L, 0x07A1_B500_0000_0001L,  \/\/   37\n+            0x4B3B_4CA8_5A86_C47AL, 0x04C5_1120_0000_0001L,  \/\/   38\n+            0x5E0A_1FD2_7128_7598L, 0x45F6_5568_0000_0001L,  \/\/   39\n+            0x758C_A7C7_0D72_92FEL, 0x5773_EAC2_0000_0001L,  \/\/   40\n+            0x4977_E8DC_6867_9BDFL, 0x16A8_72B9_4000_0001L,  \/\/   41\n+            0x5BD5_E313_8281_82D6L, 0x7C52_8F67_9000_0001L,  \/\/   42\n+            0x72CB_5BD8_6321_E38CL, 0x5B67_3341_7400_0001L,  \/\/   43\n+            0x47BF_1967_3DF5_2E37L, 0x7920_8008_E880_0001L,  \/\/   44\n+            0x59AE_DFC1_0D72_79C5L, 0x7768_A00B_22A0_0001L,  \/\/   45\n+            0x701A_97B1_50CF_1837L, 0x3542_C80D_EB48_0001L,  \/\/   46\n+            0x4610_9ECE_D281_6F22L, 0x5149_BD08_B30D_0001L,  \/\/   47\n+            0x5794_C682_8721_CAEBL, 0x259C_2C4A_DFD0_4001L,  \/\/   48\n+            0x6D79_F823_28EA_3DA6L, 0x0F03_375D_97C4_5001L,  \/\/   49\n+            0x446C_3B15_F992_6687L, 0x6962_029A_7EDA_B201L,  \/\/   50\n+            0x5587_49DB_77F7_0029L, 0x63BA_8341_1E91_5E81L,  \/\/   51\n+            0x6AE9_1C52_55F4_C034L, 0x1CA9_2411_6635_B621L,  \/\/   52\n+            0x42D1_B1B3_75B8_F820L, 0x51E9_B68A_DFE1_91D5L,  \/\/   53\n+            0x5386_1E20_5327_3628L, 0x6664_242D_97D9_F64AL,  \/\/   54\n+            0x6867_A5A8_67F1_03B2L, 0x7FFD_2D38_FDD0_73DCL,  \/\/   55\n+            0x4140_C789_40F6_A24FL, 0x6FFE_3C43_9EA2_486AL,  \/\/   56\n+            0x5190_F96B_9134_4AE3L, 0x6BFD_CB54_864A_DA84L,  \/\/   57\n+            0x65F5_37C6_7581_5D9CL, 0x66FD_3E29_A7DD_9125L,  \/\/   58\n+            0x7F72_85B8_12E1_B504L, 0x00BC_8DB4_11D4_F56EL,  \/\/   59\n+            0x4FA7_9393_0BCD_1122L, 0x4075_D890_8B25_1965L,  \/\/   60\n+            0x6391_7877_CEC0_556BL, 0x1093_4EB4_ADEE_5FBEL,  \/\/   61\n+            0x7C75_D695_C270_6AC5L, 0x74B8_2261_D969_F7ADL,  \/\/   62\n+            0x4DC9_A61D_9986_42BBL, 0x58F3_157D_27E2_3ACCL,  \/\/   63\n+            0x613C_0FA4_FFE7_D36AL, 0x4F2F_DADC_71DA_C97FL,  \/\/   64\n+            0x798B_138E_3FE1_C845L, 0x22FB_D193_8E51_7BDFL,  \/\/   65\n+            0x4BF6_EC38_E7ED_1D2BL, 0x25DD_62FC_38F2_ED6CL,  \/\/   66\n+            0x5EF4_A747_21E8_6476L, 0x0F54_BBBB_472F_A8C6L,  \/\/   67\n+            0x76B1_D118_EA62_7D93L, 0x5329_EAAA_18FB_92F8L,  \/\/   68\n+            0x4A2F_22AF_927D_8E7CL, 0x23FA_32AA_4F9D_3BDBL,  \/\/   69\n+            0x5CBA_EB5B_771C_F21BL, 0x2CF8_BF54_E384_8AD2L,  \/\/   70\n+            0x73E9_A632_54E4_2EA2L, 0x1836_EF2A_1C65_AD86L,  \/\/   71\n+            0x4872_07DF_750E_9D25L, 0x2F22_557A_51BF_8C74L,  \/\/   72\n+            0x5A8E_89D7_5252_446EL, 0x5AEA_EAD8_E62F_6F91L,  \/\/   73\n+            0x7132_2C4D_26E6_D58AL, 0x31A5_A58F_1FBB_4B75L,  \/\/   74\n+            0x46BF_5BB0_3850_4576L, 0x3F07_8779_73D5_0F29L,  \/\/   75\n+            0x586F_329C_4664_56D4L, 0x0EC9_6957_D0CA_52F3L,  \/\/   76\n+            0x6E8A_FF43_57FD_6C89L, 0x127B_C3AD_C4FC_E7B0L,  \/\/   77\n+            0x4516_DF8A_16FE_63D5L, 0x5B8D_5A4C_9B1E_10CEL,  \/\/   78\n+            0x565C_976C_9CBD_FCCBL, 0x1270_B0DF_C1E5_9502L,  \/\/   79\n+            0x6BF3_BD47_C3ED_7BFDL, 0x770C_DD17_B25E_FA42L,  \/\/   80\n+            0x4378_564C_DA74_6D7EL, 0x5A68_0A2E_CF7B_5C69L,  \/\/   81\n+            0x5456_6BE0_1111_88DEL, 0x3102_0CBA_835A_3384L,  \/\/   82\n+            0x696C_06D8_1555_EB15L, 0x7D42_8FE9_2430_C065L,  \/\/   83\n+            0x41E3_8447_0D55_B2EDL, 0x5E49_99F1_B69E_783FL,  \/\/   84\n+            0x525C_6558_D0AB_1FA9L, 0x15DC_006E_2446_164FL,  \/\/   85\n+            0x66F3_7EAF_04D5_E793L, 0x3B53_0089_AD57_9BE2L,  \/\/   86\n+            0x4058_2F2D_6305_B0BCL, 0x1513_E056_0C56_C16EL,  \/\/   87\n+            0x506E_3AF8_BBC7_1CEBL, 0x1A58_D86B_8F6C_71C9L,  \/\/   88\n+            0x6489_C9B6_EAB8_E426L, 0x00EF_0E86_7347_8E3BL,  \/\/   89\n+            0x7DAC_3C24_A567_1D2FL, 0x412A_D228_1019_71C9L,  \/\/   90\n+            0x4E8B_A596_E760_723DL, 0x58BA_C359_0A0F_E71EL,  \/\/   91\n+            0x622E_8EFC_A138_8ECDL, 0x0EE9_742F_4C93_E0E6L,  \/\/   92\n+            0x7ABA_32BB_C986_B280L, 0x32A3_D13B_1FB8_D91FL,  \/\/   93\n+            0x4CB4_5FB5_5DF4_2F90L, 0x1FA6_62C4_F3D3_87B3L,  \/\/   94\n+            0x5FE1_77A2_B571_3B74L, 0x278F_FB76_30C8_69A0L,  \/\/   95\n+            0x77D9_D58B_62CD_8A51L, 0x3173_FA53_BCFA_8408L,  \/\/   96\n+            0x4AE8_2577_1DC0_7672L, 0x6EE8_7C74_561C_9285L,  \/\/   97\n+            0x5DA2_2ED4_E530_940FL, 0x4AA2_9B91_6BA3_B726L,  \/\/   98\n+            0x750A_BA8A_1E7C_B913L, 0x3D4B_4275_C68C_A4F0L,  \/\/   99\n+            0x4926_B496_530D_F3ACL, 0x164F_0989_9C17_E716L,  \/\/  100\n+            0x5B70_61BB_E7D1_7097L, 0x1BE2_CBEC_031D_E0DCL,  \/\/  101\n+            0x724C_7A2A_E1C5_CCBDL, 0x02DB_7EE7_03E5_5912L,  \/\/  102\n+            0x476F_CC5A_CD1B_9FF6L, 0x11C9_2F50_626F_57ACL,  \/\/  103\n+            0x594B_BF71_8062_87F3L, 0x563B_7B24_7B0B_2D96L,  \/\/  104\n+            0x6F9E_AF4D_E07B_29F0L, 0x4BCA_59ED_99CD_F8FCL,  \/\/  105\n+            0x45C3_2D90_AC4C_FA36L, 0x2F5E_7834_8020_BB9EL,  \/\/  106\n+            0x5733_F8F4_D760_38C3L, 0x7B36_1641_A028_EA85L,  \/\/  107\n+            0x6D00_F732_0D38_46F4L, 0x7A03_9BD2_0833_2526L,  \/\/  108\n+            0x4420_9A7F_4843_2C59L, 0x0C42_4163_451F_F738L,  \/\/  109\n+            0x5528_C11F_1A53_F76FL, 0x2F52_D1BC_1667_F506L,  \/\/  110\n+            0x6A72_F166_E0E8_F54BL, 0x1B27_862B_1C01_F247L,  \/\/  111\n+            0x4287_D6E0_4C91_994FL, 0x00F8_B3DA_F181_376DL,  \/\/  112\n+            0x5329_CC98_5FB5_FFA2L, 0x6136_E0D1_ADE1_8548L,  \/\/  113\n+            0x67F4_3FBE_77A3_7F8BL, 0x3984_9906_1959_E699L,  \/\/  114\n+            0x40F8_A7D7_0AC6_2FB7L, 0x13F2_DFA3_CFD8_3020L,  \/\/  115\n+            0x5136_D1CC_CD77_BBA4L, 0x78EF_978C_C3CE_3C28L,  \/\/  116\n+            0x6584_8640_00D5_AA8EL, 0x172B_7D6F_F4C1_CB32L,  \/\/  117\n+            0x7EE5_A7D0_010B_1531L, 0x5CF6_5CCB_F1F2_3DFEL,  \/\/  118\n+            0x4F4F_88E2_00A6_ED3FL, 0x0A19_F9FF_7737_66BFL,  \/\/  119\n+            0x6323_6B1A_80D0_A88EL, 0x6CA0_787F_5505_406FL,  \/\/  120\n+            0x7BEC_45E1_2104_D2B2L, 0x47C8_969F_2A46_908AL,  \/\/  121\n+            0x4D73_ABAC_B4A3_03AFL, 0x4CDD_5E23_7A6C_1A57L,  \/\/  122\n+            0x60D0_9697_E1CB_C49BL, 0x4014_B5AC_5907_20ECL,  \/\/  123\n+            0x7904_BC3D_DA3E_B5C2L, 0x3019_E317_6F48_E927L,  \/\/  124\n+            0x4BA2_F5A6_A867_3199L, 0x3E10_2DEE_A58D_91B9L,  \/\/  125\n+            0x5E8B_B310_5280_FDFFL, 0x6D94_396A_4EF0_F627L,  \/\/  126\n+            0x762E_9FD4_6721_3D7FL, 0x68F9_47C4_E2AD_33B0L,  \/\/  127\n+            0x49DD_23E4_C074_C66FL, 0x719B_CCDB_0DAC_404EL,  \/\/  128\n+            0x5C54_6CDD_F091_F80BL, 0x6E02_C011_D117_5062L,  \/\/  129\n+            0x7369_8815_6CB6_760EL, 0x6983_7016_455D_247AL,  \/\/  130\n+            0x4821_F50D_63F2_09C9L, 0x21F2_260D_EB5A_36CCL,  \/\/  131\n+            0x5A2A_7250_BCEE_8C3BL, 0x4A6E_AF91_6630_C47FL,  \/\/  132\n+            0x70B5_0EE4_EC2A_2F4AL, 0x3D0A_5B75_BFBC_F59FL,  \/\/  133\n+            0x4671_294F_139A_5D8EL, 0x4626_7929_97D6_1984L,  \/\/  134\n+            0x580D_73A2_D880_F4F2L, 0x17B0_1773_FDCB_9FE4L,  \/\/  135\n+            0x6E10_D08B_8EA1_322EL, 0x5D9C_1D50_FD3E_87DDL,  \/\/  136\n+            0x44CA_8257_3924_BF5DL, 0x1A81_9252_9E47_14EBL,  \/\/  137\n+            0x55FD_22ED_076D_EF34L, 0x4121_F6E7_45D8_DA25L,  \/\/  138\n+            0x6B7C_6BA8_4949_6B01L, 0x516A_74A1_174F_10AEL,  \/\/  139\n+            0x432D_C349_2DCD_E2E1L, 0x02E2_88E4_AE91_6A6DL,  \/\/  140\n+            0x53F9_341B_7941_5B99L, 0x239B_2B1D_DA35_C508L,  \/\/  141\n+            0x68F7_8122_5791_B27FL, 0x4C81_F5E5_50C3_364AL,  \/\/  142\n+            0x419A_B0B5_76BB_0F8FL, 0x5FD1_39AF_527A_01EFL,  \/\/  143\n+            0x5201_5CE2_D469_D373L, 0x57C5_881B_2718_826AL,  \/\/  144\n+            0x6681_B41B_8984_4850L, 0x4DB6_EA21_F0DE_A304L,  \/\/  145\n+            0x4011_1091_35F2_AD32L, 0x3092_5255_368B_25E3L,  \/\/  146\n+            0x5015_54B5_836F_587EL, 0x7CB6_E6EA_842D_EF5CL,  \/\/  147\n+            0x641A_A9E2_E44B_2E9EL, 0x5BE4_A0A5_2539_6B32L,  \/\/  148\n+            0x7D21_545B_9D5D_FA46L, 0x32DD_C8CE_6E87_C5FFL,  \/\/  149\n+            0x4E34_D4B9_425A_BC6BL, 0x7FCA_9D81_0514_DBBFL,  \/\/  150\n+            0x61C2_09E7_92F1_6B86L, 0x7FBD_44E1_465A_12AFL,  \/\/  151\n+            0x7A32_8C61_77AD_C668L, 0x5FAC_9619_97F0_975BL,  \/\/  152\n+            0x4C5F_97BC_EACC_9C01L, 0x3BCB_DDCF_FEF6_5E99L,  \/\/  153\n+            0x5F77_7DAC_257F_C301L, 0x6ABE_D543_FEB3_F63FL,  \/\/  154\n+            0x7755_5D17_2EDF_B3C2L, 0x256E_8A94_FE60_F3CFL,  \/\/  155\n+            0x4A95_5A2E_7D4B_D059L, 0x3765_169D_1EFC_9861L,  \/\/  156\n+            0x5D3A_B0BA_1C9E_C46FL, 0x653E_5C44_66BB_BE7AL,  \/\/  157\n+            0x7489_5CE8_A3C6_758BL, 0x5E8D_F355_806A_AE18L,  \/\/  158\n+            0x48D5_DA11_665C_0977L, 0x2B18_B815_7042_ACCFL,  \/\/  159\n+            0x5B0B_5095_BFF3_0BD5L, 0x15DE_E61A_CC53_5803L,  \/\/  160\n+            0x71CE_24BB_2FEF_CECAL, 0x3B56_9FA1_7F68_2E03L,  \/\/  161\n+            0x4720_D6F4_FDF5_E13EL, 0x4516_23C4_EFA1_1CC2L,  \/\/  162\n+            0x58E9_0CB2_3D73_598EL, 0x165B_ACB6_2B89_63F3L,  \/\/  163\n+            0x6F23_4FDE_CCD0_2FF1L, 0x5BF2_97E3_B66B_BCEFL,  \/\/  164\n+            0x4576_11EB_4002_1DF7L, 0x0977_9EEE_5203_5616L,  \/\/  165\n+            0x56D3_9666_1002_A574L, 0x6BD5_86A9_E684_2B9BL,  \/\/  166\n+            0x6C88_7BFF_9403_4ED2L, 0x06CA_E854_6025_3682L,  \/\/  167\n+            0x43D5_4D7F_BC82_1143L, 0x243E_D134_BC17_4211L,  \/\/  168\n+            0x54CA_A0DF_ABA2_9594L, 0x0D4E_8581_EB1D_1295L,  \/\/  169\n+            0x69FD_4917_968B_3AF9L, 0x10A2_26E2_65E4_573BL,  \/\/  170\n+            0x423E_4DAE_BE17_04DBL, 0x5A65_584D_7FAE_B685L,  \/\/  171\n+            0x52CD_E11A_6D9C_C612L, 0x50FE_AE60_DF9A_6426L,  \/\/  172\n+            0x6781_5961_0903_F797L, 0x253E_59F9_1780_FD2FL,  \/\/  173\n+            0x40B0_D7DC_A5A2_7ABEL, 0x4746_F83B_AEB0_9E3EL,  \/\/  174\n+            0x50DD_0DD3_CF0B_196EL, 0x1918_B64A_9A5C_C5CDL,  \/\/  175\n+            0x6514_5148_C2CD_DFC9L, 0x5F5E_E3DD_40F3_F740L,  \/\/  176\n+            0x7E59_659A_F381_57BCL, 0x1736_9CD4_9130_F510L,  \/\/  177\n+            0x4EF7_DF80_D830_D6D5L, 0x4E82_2204_DABE_992AL,  \/\/  178\n+            0x62B5_D761_0E3D_0C8BL, 0x0222_AA86_116E_3F75L,  \/\/  179\n+            0x7B63_4D39_51CC_4FADL, 0x62AB_5527_95C9_CF52L,  \/\/  180\n+            0x4D1E_1043_D31F_B1CCL, 0x4DAB_1538_BD9E_2193L,  \/\/  181\n+            0x6065_9454_C7E7_9E3FL, 0x6115_DA86_ED05_A9F8L,  \/\/  182\n+            0x787E_F969_F9E1_85CFL, 0x595B_5128_A847_1476L,  \/\/  183\n+            0x4B4F_5BE2_3C2C_F3A1L, 0x67D9_12B9_692C_6CCAL,  \/\/  184\n+            0x5E23_32DA_CB38_308AL, 0x21CF_5767_C377_87FCL,  \/\/  185\n+            0x75AB_FF91_7E06_3CACL, 0x6A43_2D41_B455_69FBL,  \/\/  186\n+            0x498B_7FBA_EEC3_E5ECL, 0x0269_FC49_10B5_623DL,  \/\/  187\n+            0x5BEE_5FA9_AA74_DF67L, 0x0304_7B5B_54E2_BACCL,  \/\/  188\n+            0x72E9_F794_1512_1740L, 0x63C5_9A32_2A1B_697FL,  \/\/  189\n+            0x47D2_3ABC_8D2B_4E88L, 0x3E5B_805F_5A51_21F0L,  \/\/  190\n+            0x59C6_C96B_B076_222AL, 0x4DF2_6077_30E5_6A6CL,  \/\/  191\n+            0x7038_7BC6_9C93_AAB5L, 0x216E_F894_FD1E_C506L,  \/\/  192\n+            0x4623_4D5C_21DC_4AB1L, 0x24E5_5B5D_1E33_3B24L,  \/\/  193\n+            0x57AC_20B3_2A53_5D5DL, 0x4E1E_B234_65C0_09EDL,  \/\/  194\n+            0x6D97_28DF_F4E8_34B5L, 0x01A6_5EC1_7F30_0C68L,  \/\/  195\n+            0x447E_798B_F911_20F1L, 0x1107_FB38_EF7E_07C1L,  \/\/  196\n+            0x559E_17EE_F755_692DL, 0x3549_FA07_2B5D_89B1L,  \/\/  197\n+            0x6B05_9DEA_B52A_C378L, 0x629C_7888_F634_EC1EL,  \/\/  198\n+            0x42E3_82B2_B13A_BA2BL, 0x3DA1_CB55_99E1_1393L,  \/\/  199\n+            0x539C_635F_5D89_68B6L, 0x2D0A_3E2B_0059_5877L,  \/\/  200\n+            0x6883_7C37_34EB_C2E3L, 0x784C_CDB5_C06F_AE95L,  \/\/  201\n+            0x4152_2DA2_8113_59CEL, 0x3B30_0091_9845_CD1DL,  \/\/  202\n+            0x51A6_B90B_2158_3042L, 0x09FC_00B5_FE57_4065L,  \/\/  203\n+            0x6610_674D_E9AE_3C52L, 0x4C7B_00E3_7DED_107EL,  \/\/  204\n+            0x7F94_8121_6419_CB67L, 0x1F99_C11C_5D68_549DL,  \/\/  205\n+            0x4FBC_D0B4_DE90_1F20L, 0x43C0_18B1_BA61_34E2L,  \/\/  206\n+            0x63AC_04E2_1634_26E8L, 0x54B0_1EDE_28F9_821BL,  \/\/  207\n+            0x7C97_061A_9BC1_30A2L, 0x69DC_2695_B337_E2A1L,  \/\/  208\n+            0x4DDE_63D0_A158_BE65L, 0x6229_981D_9002_EDA5L,  \/\/  209\n+            0x6155_FCC4_C9AE_EDFFL, 0x1AB3_FE24_F403_A90EL,  \/\/  210\n+            0x79AB_7BF5_FC1A_A97FL, 0x0160_FDAE_3104_9351L,  \/\/  211\n+            0x4C0B_2D79_BD90_A9EFL, 0x30DC_9E8C_DEA2_DC13L,  \/\/  212\n+            0x5F0D_F8D8_2CF4_D46BL, 0x1D13_C630_164B_9318L,  \/\/  213\n+            0x76D1_770E_3832_0986L, 0x0458_B7BC_1BDE_77DDL,  \/\/  214\n+            0x4A42_EA68_E31F_45F3L, 0x62B7_72D5_916B_0AEBL,  \/\/  215\n+            0x5CD3_A503_1BE7_1770L, 0x5B65_4F8A_F5C5_CDA5L,  \/\/  216\n+            0x7408_8E43_E2E0_DD4CL, 0x723E_A36D_B337_410EL,  \/\/  217\n+            0x4885_58EA_6DCC_8A50L, 0x0767_2624_9002_88A9L,  \/\/  218\n+            0x5AA6_AF25_093F_ACE4L, 0x0940_EFAD_B403_2AD3L,  \/\/  219\n+            0x7150_5AEE_4B8F_981DL, 0x0B91_2B99_2103_F588L,  \/\/  220\n+            0x46D2_38D4_EF39_BF12L, 0x173A_BB3F_B4A2_7975L,  \/\/  221\n+            0x5886_C70A_2B08_2ED6L, 0x5D09_6A0F_A1CB_17D2L,  \/\/  222\n+            0x6EA8_78CC_B5CA_3A8CL, 0x344B_C493_8A3D_DDC7L,  \/\/  223\n+            0x4529_4B7F_F19E_6497L, 0x60AF_5ADC_3666_AA9CL,  \/\/  224\n+            0x5673_9E5F_EE05_FDBDL, 0x58DB_3193_4400_5543L,  \/\/  225\n+            0x6C10_85F7_E987_7D2DL, 0x0F11_FDF8_1500_6A94L,  \/\/  226\n+            0x438A_53BA_F1F4_AE3CL, 0x196B_3EBB_0D20_429DL,  \/\/  227\n+            0x546C_E8A9_AE71_D9CBL, 0x1FC6_0E69_D068_5344L,  \/\/  228\n+            0x6988_22D4_1A0E_503EL, 0x07B7_9204_4482_6815L,  \/\/  229\n+            0x41F5_15C4_9048_F226L, 0x64D2_BB42_AAD1_810DL,  \/\/  230\n+            0x5272_5B35_B45B_2EB0L, 0x3E07_6A13_5585_E150L,  \/\/  231\n+            0x670E_F203_2171_FA5CL, 0x4D89_4498_2AE7_59A4L,  \/\/  232\n+            0x4069_5741_F4E7_3C79L, 0x7075_CADF_1AD0_9807L,  \/\/  233\n+            0x5083_AD12_7221_0B98L, 0x2C93_3D96_E184_BE08L,  \/\/  234\n+            0x64A4_9857_0EA9_4E7EL, 0x37B8_0CFC_99E5_ED8AL,  \/\/  235\n+            0x7DCD_BE6C_D253_A21EL, 0x05A6_103B_C05F_68EDL,  \/\/  236\n+            0x4EA0_9704_0374_4552L, 0x6387_CA25_583B_A194L,  \/\/  237\n+            0x6248_BCC5_0451_56A7L, 0x3C69_BCAE_AE4A_89F9L,  \/\/  238\n+            0x7ADA_EBF6_4565_AC51L, 0x2B84_2BDA_59DD_2C77L,  \/\/  239\n+            0x4CC8_D379_EB5F_8BB2L, 0x6B32_9B68_782A_3BCBL,  \/\/  240\n+            0x5FFB_0858_6637_6E9FL, 0x45FF_4242_9634_CABDL,  \/\/  241\n+            0x77F9_CA6E_7FC5_4A47L, 0x377F_12D3_3BC1_FD6DL,  \/\/  242\n+            0x4AFC_1E85_0FDB_4E6CL, 0x52AF_6BC4_0559_3E64L,  \/\/  243\n+            0x5DBB_2626_53D2_2207L, 0x675B_46B5_06AF_8DFDL,  \/\/  244\n+            0x7529_EFAF_E8C6_AA89L, 0x6132_1862_485B_717CL,  \/\/  245\n+            0x493A_35CD_F17C_2A96L, 0x0CBF_4F3D_6D39_26EEL,  \/\/  246\n+            0x5B88_C341_6DDB_353BL, 0x4FEF_230C_C887_70A9L,  \/\/  247\n+            0x726A_F411_C952_028AL, 0x43EA_EBCF_FAA9_4CD3L,  \/\/  248\n+            0x4782_D88B_1DD3_4196L, 0x4A72_D361_FCA9_D004L,  \/\/  249\n+            0x5963_8EAD_E548_11FCL, 0x1D0F_883A_7BD4_4405L,  \/\/  250\n+            0x6FBC_7259_5E9A_167BL, 0x2453_6A49_1AC9_5506L,  \/\/  251\n+            0x45D5_C777_DB20_4E0DL, 0x06B4_226D_B0BD_D524L,  \/\/  252\n+            0x574B_3955_D1E8_6190L, 0x2861_2B09_1CED_4A6DL,  \/\/  253\n+            0x6D1E_07AB_4662_79F4L, 0x3279_75CB_6428_9D08L,  \/\/  254\n+            0x4432_C4CB_0BFD_8C38L, 0x5F8B_E99F_1E99_6225L,  \/\/  255\n+            0x553F_75FD_CEFC_EF46L, 0x776E_E406_E63F_BAAEL,  \/\/  256\n+            0x6A8F_537D_42BC_2B18L, 0x554A_9D08_9FCF_A95AL,  \/\/  257\n+            0x4299_942E_49B5_9AEFL, 0x354E_A225_63E1_C9D8L,  \/\/  258\n+            0x533F_F939_DC23_01ABL, 0x22A2_4AAE_BCDA_3C4EL,  \/\/  259\n+            0x680F_F788_532B_C216L, 0x0B4A_DD5A_6C10_CB62L,  \/\/  260\n+            0x4109_FAB5_33FB_594DL, 0x670E_CA58_838A_7F1DL,  \/\/  261\n+            0x514C_7962_80FA_2FA1L, 0x20D2_7CEE_A46D_1EE4L,  \/\/  262\n+            0x659F_97BB_2138_BB89L, 0x4907_1C2A_4D88_669DL,  \/\/  263\n+            0x7F07_7DA9_E986_EA6BL, 0x7B48_E334_E0EA_8045L,  \/\/  264\n+            0x4F64_AE8A_31F4_5283L, 0x3D0D_8E01_0C92_902BL,  \/\/  265\n+            0x633D_DA2C_BE71_6724L, 0x2C50_F181_4FB7_3436L,  \/\/  266\n+            0x7C0D_50B7_EE0D_C0EDL, 0x3765_2DE1_A3A5_0143L,  \/\/  267\n+            0x4D88_5272_F4C8_9894L, 0x329F_3CAD_0647_20CAL,  \/\/  268\n+            0x60EA_670F_B1FA_BEB9L, 0x3F47_0BD8_47D8_E8FDL,  \/\/  269\n+            0x7925_00D3_9E79_6E67L, 0x6F18_CECE_59CF_233CL,  \/\/  270\n+            0x4BB7_2084_430B_E500L, 0x756F_8140_F821_7605L,  \/\/  271\n+            0x5EA4_E8A5_53CE_DE41L, 0x12CB_6191_3629_D387L,  \/\/  272\n+            0x764E_22CE_A8C2_95D1L, 0x377E_39F5_83B4_4868L,  \/\/  273\n+            0x49F0_D5C1_2979_9DA2L, 0x72AE_E439_7250_AD41L,  \/\/  274\n+            0x5C6D_0B31_73D8_050BL, 0x4F5A_9D47_CEE4_D891L,  \/\/  275\n+            0x7388_4DFD_D0CE_064EL, 0x4331_4499_C29E_0EB6L,  \/\/  276\n+            0x4835_30BE_A280_C3F1L, 0x09FE_CAE0_19A2_C932L,  \/\/  277\n+            0x5A42_7CEE_4B20_F4EDL, 0x2C7E_7D98_200B_7B7EL,  \/\/  278\n+            0x70D3_1C29_DDE9_3228L, 0x579E_1CFE_280E_5A5DL,  \/\/  279\n+            0x4683_F19A_2AB1_BF59L, 0x36C2_D21E_D908_F87BL,  \/\/  280\n+            0x5824_EE00_B55E_2F2FL, 0x6473_86A6_8F4B_3699L,  \/\/  281\n+            0x6E2E_2980_E2B5_BAFBL, 0x5D90_6850_331E_043FL,  \/\/  282\n+            0x44DC_D9F0_8DB1_94DDL, 0x2A7A_4132_1FF2_C2A8L,  \/\/  283\n+            0x5614_106C_B11D_FA14L, 0x5518_D17E_A7EF_7352L,  \/\/  284\n+            0x6B99_1487_DD65_7899L, 0x6A5F_05DE_51EB_5026L,  \/\/  285\n+            0x433F_ACD4_EA5F_6B60L, 0x127B_63AA_F333_1218L,  \/\/  286\n+            0x540F_980A_24F7_4638L, 0x171A_3C95_AFFF_D69EL,  \/\/  287\n+            0x6913_7E0C_AE35_17C6L, 0x1CE0_CBBB_1BFF_CC45L,  \/\/  288\n+            0x41AC_2EC7_ECE1_2EDBL, 0x720C_7F54_F17F_DFABL,  \/\/  289\n+            0x5217_3A79_E819_7A92L, 0x6E8F_9F2A_2DDF_D796L,  \/\/  290\n+            0x669D_0918_621F_D937L, 0x4A33_86F4_B957_CD7BL,  \/\/  291\n+            0x4022_25AF_3D53_E7C2L, 0x5E60_3458_F3D6_E06DL,  \/\/  292\n+            0x502A_AF1B_0CA8_E1B3L, 0x35F8_416F_30CC_9888L,  \/\/  293\n+            0x6435_5AE1_CFD3_1A20L, 0x2376_51CA_FCFF_BEAAL,  \/\/  294\n+            0x7D42_B19A_43C7_E0A8L, 0x2C53_E63D_BC3F_AE55L,  \/\/  295\n+            0x4E49_AF00_6A5C_EC69L, 0x1BB4_6FE6_95A7_CCF5L,  \/\/  296\n+            0x61DC_1AC0_84F4_2783L, 0x42A1_8BE0_3B11_C033L,  \/\/  297\n+            0x7A53_2170_A631_3164L, 0x3349_EED8_49D6_303FL,  \/\/  298\n+            0x4C73_F4E6_67DE_BEDEL, 0x600E_3547_2E25_DE28L,  \/\/  299\n+            0x5F90_F220_01D6_6E96L, 0x3811_C298_F9AF_55B1L,  \/\/  300\n+            0x7775_2EA8_024C_0A3CL, 0x0616_333F_381B_2B1EL,  \/\/  301\n+            0x4AA9_3D29_016F_8665L, 0x43CD_E007_8310_FAF3L,  \/\/  302\n+            0x5D53_8C73_41CB_67FEL, 0x74C1_5809_63D5_39AFL,  \/\/  303\n+            0x74A8_6F90_123E_41FEL, 0x51F1_AE0B_BCCA_881BL,  \/\/  304\n+            0x48E9_45BA_0B66_E93FL, 0x1337_0CC7_55FE_9511L,  \/\/  305\n+            0x5B23_9728_8E40_A38EL, 0x7804_CFF9_2B7E_3A55L,  \/\/  306\n+            0x71EC_7CF2_B1D0_CC72L, 0x5606_03F7_765D_C8EAL,  \/\/  307\n+            0x4733_CE17_AF22_7FC7L, 0x55C3_C27A_A9FA_9D93L,  \/\/  308\n+            0x5900_C19D_9AEB_1FB9L, 0x4B34_B319_5479_44F7L,  \/\/  309\n+            0x6F40_F205_01A5_E7A7L, 0x7E01_DFDF_A997_9635L,  \/\/  310\n+            0x4588_9743_2107_B0C8L, 0x7EC1_2BEB_C9FE_BDE1L,  \/\/  311\n+            0x56EA_BD13_E949_9CFBL, 0x1E71_76E6_BC7E_6D59L,  \/\/  312\n+            0x6CA5_6C58_E39C_043AL, 0x060D_D4A0_6B9E_08B0L,  \/\/  313\n+            0x43E7_63B7_8E41_82A4L, 0x23C8_A4E4_4342_C56EL,  \/\/  314\n+            0x54E1_3CA5_71D1_E34DL, 0x2CBA_CE1D_5413_76C9L,  \/\/  315\n+            0x6A19_8BCE_CE46_5C20L, 0x57E9_81A4_A918_547BL,  \/\/  316\n+            0x424F_F761_40EB_F994L, 0x36F1_F106_E9AF_34CDL,  \/\/  317\n+            0x52E3_F539_9126_F7F9L, 0x44AE_6D48_A41B_0201L,  \/\/  318\n+            0x679C_F287_F570_B5F7L, 0x75DA_089A_CD21_C281L,  \/\/  319\n+            0x40C2_1794_F966_71BAL, 0x79A8_4560_C035_1991L,  \/\/  320\n+            0x50F2_9D7A_37C0_0E29L, 0x5812_56B8_F042_5FF5L,  \/\/  321\n+            0x652F_44D8_C5B0_11B4L, 0x0E16_EC67_2C52_F7F2L,  \/\/  322\n+            0x7E7B_160E_F71C_1621L, 0x119C_A780_F767_B5EEL,  \/\/  323\n+            0x4F0C_EDC9_5A71_8DD4L, 0x5B01_E8B0_9AA0_D1B5L,  \/\/  324\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/MathUtils.java","additions":770,"deletions":712,"binary":false,"changes":1482,"status":"modified"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.util.regex;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import static java.util.Map.entry;\n+\n+public final class CaseFolding {\n+\n+    private static final Map<Integer, Integer> expanded_case_map = Map.ofEntries(\n+%%%Entries\n+    );\n+\n+    private static final int[] expanded_case_cps = expanded_case_map.keySet()\n+      .stream()\n+      .mapToInt(Integer::intValue)\n+      .toArray();\n+\n+    private CaseFolding()  {}\n+\n+    \/**\n+     * Returns an expansion set to \"close\" a given regex Unicode character class range for case-sensitive\n+     * matching, according to the\n+     * <a href=\"https:\/\/www.unicode.org\/reports\/tr18\/#Simple_Loose_Matches\">Simple Loose Matches<\/a>\n+     * rule defined in Unicode Technical Standard #18: Unicode Regular Expressions.\n+     * <p>\n+     * To conform with Level 1 of UTS #18, specifically RL1.5: Simple Loose Matches, simple case folding must\n+     * be applied to literals and (optionally) to character classes. When applied to character classes, each\n+     * character class is expected to be closed under simple case folding. See the standard for the\n+     * detailed explanation and example of \"closed\".\n+     * <p>\n+     * RL1.5 states: To meet this requirement, an implementation that supports case-sensitive matching should\n+     * <ol>\n+     * <li>Provide at least the simple, default Unicode case-insensitive matching, and<\/li>\n+     * <li>Specify which character properties or constructs are closed under the matching.<\/li>\n+     * <\/ol>\n+     * <p>\n+     * In the {@code  Pattern} implementation, 5 types of constructs maybe case-sensitive when matching:\n+     * back-refs, string slice (sequences), single, family(char-property) and class range. Single and\n+     * family may appears independently or within a class.\n+     * <p>\n+     * For loose\/case-insensitive matching, the back-refs, slices and singles apply {code toUpperCase} and\n+     * {@code toLowerCase} to both the pattern and the input string. This effectively 'close' the class for\n+     * matching.\n+     * <p>\n+     * The family\/char-properties are not \"closed\" and should remain unchanged. This is acceptable per RL1.5,\n+     * if their behavior is clearly specified.\n+     * <p>\n+     * This method addresses that requirement for the \"range\" construct within in character class by computing\n+     * the additional characters that should be included to close the range under simple case folding:\n+     * <p>\n+     * For each character in the input range {@code [start, end]} (inclusive), if the character has a simple\n+     * case folding mapping in Unicode's CaseFolding.txt, the mapping is not a round-trip map, and the mapped\n+     * character is not already in the range, then that mapped character (typically lowercase) is added to\n+     * the expansion set.\n+     * <p>\n+     * This allows regex character class \"range\" implementation to use the returned expansion set to support\n+     * additional case-insensitive matching, without duplicating characters already covered by the existing\n+     * regex range implementation. The expectation is the matching is done using both the uppercase and\n+     * lowercase forms of the input character, for example\n+     *\n+     * <pre>{@code\n+     *\n+     *     ch -> inRange(lower, Character.toUpperCase(ch), upper) ||\n+     *           inRange(lower, Character.toLower(ch), upper) ||\n+     *           additionalClosingCharacters.contains(Character.toUpperCase(ch)) ||\n+     *           additionalClosingCharacters.contains(Character.toUpperCase(ch))\n+     * }<\/pre>\n+     *\n+     * <p>\n+     * @spec https:\/\/www.unicode.org\/reports\/tr18\/#Simple_Loose_Matches\n+     * @param start the starting code point of the character range\n+     * @param end the ending code point of the character range\n+     * @return a {@code int[]} containing the all simple case equivalents of characters in the range, excluding\n+     *         those already in the range\n+     *\/\n+    public static int[] getClassRangeClosingCharacters(int start, int end) {\n+        int[] expanded = new int[expanded_case_cps.length];\n+        int off = 0;\n+        for (int cp : expanded_case_cps) {\n+            if (cp >= start && cp <= end) {\n+                int folding = expanded_case_map.get(cp);\n+                if (folding < start || folding > end) {\n+                    expanded[off++] = folding;\n+                }\n+            }\n+        }\n+        return Arrays.copyOf(expanded, off);\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/regex\/CaseFolding.java.template","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-\n-\n@@ -64,0 +62,1 @@\n+\n@@ -71,0 +70,1 @@\n+import static sun.net.util.ProxyUtil.copyProxy;\n@@ -957,1 +957,1 @@\n-        proxy = p;\n+        proxy = copyProxy(p);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/impl\/FtpClient.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.net.util;\n+\n+import sun.net.ApplicationProxy;\n+\n+import java.net.Proxy;\n+\n+public final class ProxyUtil {\n+\n+    private ProxyUtil() {}\n+\n+    \/**\n+     * Creates a new {@link Proxy} instance for the given proxy iff it is\n+     * neither null, {@link Proxy#NO_PROXY Proxy.NO_PROXY}, an\n+     * {@link ApplicationProxy} instance, nor already a {@code Proxy} instance.\n+     *\/\n+    public static Proxy copyProxy(Proxy proxy) {\n+        return proxy == null\n+                || proxy.getClass() == Proxy.class\n+                || proxy instanceof ApplicationProxy\n+                ? proxy\n+                : new Proxy(proxy.type(), proxy.address());\n+    }\n+\n+}\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/ProxyUtil.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,2 @@\n+\n+import static sun.net.util.ProxyUtil.copyProxy;\n@@ -264,1 +266,1 @@\n-        proxy = (p == null) ? Proxy.NO_PROXY : p;\n+        proxy = p == null ? Proxy.NO_PROXY : copyProxy(p);\n@@ -329,3 +331,1 @@\n-        if (p == null) {\n-            p = Proxy.NO_PROXY;\n-        }\n+        p = p == null ? Proxy.NO_PROXY : copyProxy(p);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/HttpClient.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+\n@@ -56,0 +57,1 @@\n+import static sun.net.util.ProxyUtil.copyProxy;\n@@ -237,1 +239,1 @@\n-                    p = proxy;\n+                    p = copyProxy(proxy);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/ftp\/FtpURLConnection.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,0 @@\n-import java.util.Map;\n-import java.util.HashMap;\n@@ -39,2 +37,2 @@\n-import sun.net.ftp.FtpClient;\n-import sun.net.www.protocol.http.HttpURLConnection;\n+\n+import static sun.net.util.ProxyUtil.copyProxy;\n@@ -60,1 +58,1 @@\n-    protected java.net.URLConnection openConnection(URL u, Proxy p)\n+    protected java.net.URLConnection openConnection(URL u, Proxy proxy)\n@@ -62,1 +60,1 @@\n-        FtpURLConnection connection = null;\n+        FtpURLConnection connection;\n@@ -64,1 +62,1 @@\n-            connection = new FtpURLConnection(u, p);\n+            connection = new FtpURLConnection(u, copyProxy(proxy));\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/ftp\/Handler.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+import static sun.net.util.ProxyUtil.copyProxy;\n@@ -857,1 +858,1 @@\n-        instProxy = p;\n+        instProxy = copyProxy(p);\n@@ -959,1 +960,1 @@\n-                        p = it.next();\n+                        p = copyProxy(it.next());\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1100,0 +1100,9 @@\n+\n+            \/\/ Ensure that the Certificate message has not been sent w\/o\n+            \/\/ an EncryptedExtensions preceding\n+            if (hc.handshakeConsumers.containsKey(\n+                    SSLHandshake.ENCRYPTED_EXTENSIONS.id)) {\n+                throw hc.conContext.fatal(Alert.UNEXPECTED_MESSAGE,\n+                                           \"Unexpected Certificate handshake message\");\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1166,0 +1166,8 @@\n+            \/\/ Ensure that the Certificate Verify message has not been sent w\/o\n+            \/\/ a Certificate message preceding\n+            if (hc.handshakeConsumers.containsKey(\n+                    SSLHandshake.CERTIFICATE.id)) {\n+                throw hc.conContext.fatal(Alert.UNEXPECTED_MESSAGE,\n+                                  \"Unexpected Certificate Verify handshake message\");\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateVerify.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -902,0 +902,8 @@\n+            \/\/ Ensure that the Finished message has not been sent w\/o\n+            \/\/ an EncryptedExtensions preceding\n+            if (chc.handshakeConsumers.containsKey(\n+                    SSLHandshake.ENCRYPTED_EXTENSIONS.id)) {\n+                throw chc.conContext.fatal(Alert.UNEXPECTED_MESSAGE,\n+                                           \"Unexpected Finished handshake message\");\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Finished.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    private static final List<String> EMPTY_SUBTAGS = Collections.emptyList();\n+    private static final List<String> EMPTY_SUBTAGS = List.of();\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/LanguageTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.Collections;\n@@ -391,2 +390,1 @@\n-    private static final List<LocaleServiceProvider> NULL_LIST =\n-        Collections.emptyList();\n+    private static final List<LocaleServiceProvider> NULL_LIST = List.of();\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleServiceProviderPool.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,1654 @@\n+# CaseFolding-16.0.0.txt\n+# Date: 2024-04-30, 21:48:11 GMT\n+# © 2024 Unicode®, Inc.\n+# Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.\n+# For terms of use and license, see https:\/\/www.unicode.org\/terms_of_use.html\n+#\n+# Unicode Character Database\n+#   For documentation, see https:\/\/www.unicode.org\/reports\/tr44\/\n+#\n+# Case Folding Properties\n+#\n+# This file is a supplement to the UnicodeData file.\n+# It provides a case folding mapping generated from the Unicode Character Database.\n+# If all characters are mapped according to the full mapping below, then\n+# case differences (according to UnicodeData.txt and SpecialCasing.txt)\n+# are eliminated.\n+#\n+# The data supports both implementations that require simple case foldings\n+# (where string lengths don't change), and implementations that allow full case folding\n+# (where string lengths may grow). Note that where they can be supported, the\n+# full case foldings are superior: for example, they allow \"MASSE\" and \"Maße\" to match.\n+#\n+# All code points not listed in this file map to themselves.\n+#\n+# NOTE: case folding does not preserve normalization formats!\n+#\n+# For information on case folding, including how to have case folding\n+# preserve normalization formats, see Section 3.13 Default Case Algorithms in\n+# The Unicode Standard.\n+#\n+# ================================================================================\n+# Format\n+# ================================================================================\n+# The entries in this file are in the following machine-readable format:\n+#\n+# <code>; <status>; <mapping>; # <name>\n+#\n+# The status field is:\n+# C: common case folding, common mappings shared by both simple and full mappings.\n+# F: full case folding, mappings that cause strings to grow in length. Multiple characters are separated by spaces.\n+# S: simple case folding, mappings to single characters where different from F.\n+# T: special case for uppercase I and dotted uppercase I\n+#    - For non-Turkic languages, this mapping is normally not used.\n+#    - For Turkic languages (tr, az), this mapping can be used instead of the normal mapping for these characters.\n+#      Note that the Turkic mappings do not maintain canonical equivalence without additional processing.\n+#      See the discussions of case mapping in the Unicode Standard for more information.\n+#\n+# Usage:\n+#  A. To do a simple case folding, use the mappings with status C + S.\n+#  B. To do a full case folding, use the mappings with status C + F.\n+#\n+#    The mappings with status T can be used or omitted depending on the desired case-folding\n+#    behavior. (The default option is to exclude them.)\n+#\n+# =================================================================\n+\n+# Property: Case_Folding\n+\n+#  All code points not explicitly listed for Case_Folding\n+#  have the value C for the status field, and the code point itself for the mapping field.\n+\n+# =================================================================\n+0041; C; 0061; # LATIN CAPITAL LETTER A\n+0042; C; 0062; # LATIN CAPITAL LETTER B\n+0043; C; 0063; # LATIN CAPITAL LETTER C\n+0044; C; 0064; # LATIN CAPITAL LETTER D\n+0045; C; 0065; # LATIN CAPITAL LETTER E\n+0046; C; 0066; # LATIN CAPITAL LETTER F\n+0047; C; 0067; # LATIN CAPITAL LETTER G\n+0048; C; 0068; # LATIN CAPITAL LETTER H\n+0049; C; 0069; # LATIN CAPITAL LETTER I\n+0049; T; 0131; # LATIN CAPITAL LETTER I\n+004A; C; 006A; # LATIN CAPITAL LETTER J\n+004B; C; 006B; # LATIN CAPITAL LETTER K\n+004C; C; 006C; # LATIN CAPITAL LETTER L\n+004D; C; 006D; # LATIN CAPITAL LETTER M\n+004E; C; 006E; # LATIN CAPITAL LETTER N\n+004F; C; 006F; # LATIN CAPITAL LETTER O\n+0050; C; 0070; # LATIN CAPITAL LETTER P\n+0051; C; 0071; # LATIN CAPITAL LETTER Q\n+0052; C; 0072; # LATIN CAPITAL LETTER R\n+0053; C; 0073; # LATIN CAPITAL LETTER S\n+0054; C; 0074; # LATIN CAPITAL LETTER T\n+0055; C; 0075; # LATIN CAPITAL LETTER U\n+0056; C; 0076; # LATIN CAPITAL LETTER V\n+0057; C; 0077; # LATIN CAPITAL LETTER W\n+0058; C; 0078; # LATIN CAPITAL LETTER X\n+0059; C; 0079; # LATIN CAPITAL LETTER Y\n+005A; C; 007A; # LATIN CAPITAL LETTER Z\n+00B5; C; 03BC; # MICRO SIGN\n+00C0; C; 00E0; # LATIN CAPITAL LETTER A WITH GRAVE\n+00C1; C; 00E1; # LATIN CAPITAL LETTER A WITH ACUTE\n+00C2; C; 00E2; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX\n+00C3; C; 00E3; # LATIN CAPITAL LETTER A WITH TILDE\n+00C4; C; 00E4; # LATIN CAPITAL LETTER A WITH DIAERESIS\n+00C5; C; 00E5; # LATIN CAPITAL LETTER A WITH RING ABOVE\n+00C6; C; 00E6; # LATIN CAPITAL LETTER AE\n+00C7; C; 00E7; # LATIN CAPITAL LETTER C WITH CEDILLA\n+00C8; C; 00E8; # LATIN CAPITAL LETTER E WITH GRAVE\n+00C9; C; 00E9; # LATIN CAPITAL LETTER E WITH ACUTE\n+00CA; C; 00EA; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX\n+00CB; C; 00EB; # LATIN CAPITAL LETTER E WITH DIAERESIS\n+00CC; C; 00EC; # LATIN CAPITAL LETTER I WITH GRAVE\n+00CD; C; 00ED; # LATIN CAPITAL LETTER I WITH ACUTE\n+00CE; C; 00EE; # LATIN CAPITAL LETTER I WITH CIRCUMFLEX\n+00CF; C; 00EF; # LATIN CAPITAL LETTER I WITH DIAERESIS\n+00D0; C; 00F0; # LATIN CAPITAL LETTER ETH\n+00D1; C; 00F1; # LATIN CAPITAL LETTER N WITH TILDE\n+00D2; C; 00F2; # LATIN CAPITAL LETTER O WITH GRAVE\n+00D3; C; 00F3; # LATIN CAPITAL LETTER O WITH ACUTE\n+00D4; C; 00F4; # LATIN CAPITAL LETTER O WITH CIRCUMFLEX\n+00D5; C; 00F5; # LATIN CAPITAL LETTER O WITH TILDE\n+00D6; C; 00F6; # LATIN CAPITAL LETTER O WITH DIAERESIS\n+00D8; C; 00F8; # LATIN CAPITAL LETTER O WITH STROKE\n+00D9; C; 00F9; # LATIN CAPITAL LETTER U WITH GRAVE\n+00DA; C; 00FA; # LATIN CAPITAL LETTER U WITH ACUTE\n+00DB; C; 00FB; # LATIN CAPITAL LETTER U WITH CIRCUMFLEX\n+00DC; C; 00FC; # LATIN CAPITAL LETTER U WITH DIAERESIS\n+00DD; C; 00FD; # LATIN CAPITAL LETTER Y WITH ACUTE\n+00DE; C; 00FE; # LATIN CAPITAL LETTER THORN\n+00DF; F; 0073 0073; # LATIN SMALL LETTER SHARP S\n+0100; C; 0101; # LATIN CAPITAL LETTER A WITH MACRON\n+0102; C; 0103; # LATIN CAPITAL LETTER A WITH BREVE\n+0104; C; 0105; # LATIN CAPITAL LETTER A WITH OGONEK\n+0106; C; 0107; # LATIN CAPITAL LETTER C WITH ACUTE\n+0108; C; 0109; # LATIN CAPITAL LETTER C WITH CIRCUMFLEX\n+010A; C; 010B; # LATIN CAPITAL LETTER C WITH DOT ABOVE\n+010C; C; 010D; # LATIN CAPITAL LETTER C WITH CARON\n+010E; C; 010F; # LATIN CAPITAL LETTER D WITH CARON\n+0110; C; 0111; # LATIN CAPITAL LETTER D WITH STROKE\n+0112; C; 0113; # LATIN CAPITAL LETTER E WITH MACRON\n+0114; C; 0115; # LATIN CAPITAL LETTER E WITH BREVE\n+0116; C; 0117; # LATIN CAPITAL LETTER E WITH DOT ABOVE\n+0118; C; 0119; # LATIN CAPITAL LETTER E WITH OGONEK\n+011A; C; 011B; # LATIN CAPITAL LETTER E WITH CARON\n+011C; C; 011D; # LATIN CAPITAL LETTER G WITH CIRCUMFLEX\n+011E; C; 011F; # LATIN CAPITAL LETTER G WITH BREVE\n+0120; C; 0121; # LATIN CAPITAL LETTER G WITH DOT ABOVE\n+0122; C; 0123; # LATIN CAPITAL LETTER G WITH CEDILLA\n+0124; C; 0125; # LATIN CAPITAL LETTER H WITH CIRCUMFLEX\n+0126; C; 0127; # LATIN CAPITAL LETTER H WITH STROKE\n+0128; C; 0129; # LATIN CAPITAL LETTER I WITH TILDE\n+012A; C; 012B; # LATIN CAPITAL LETTER I WITH MACRON\n+012C; C; 012D; # LATIN CAPITAL LETTER I WITH BREVE\n+012E; C; 012F; # LATIN CAPITAL LETTER I WITH OGONEK\n+0130; F; 0069 0307; # LATIN CAPITAL LETTER I WITH DOT ABOVE\n+0130; T; 0069; # LATIN CAPITAL LETTER I WITH DOT ABOVE\n+0132; C; 0133; # LATIN CAPITAL LIGATURE IJ\n+0134; C; 0135; # LATIN CAPITAL LETTER J WITH CIRCUMFLEX\n+0136; C; 0137; # LATIN CAPITAL LETTER K WITH CEDILLA\n+0139; C; 013A; # LATIN CAPITAL LETTER L WITH ACUTE\n+013B; C; 013C; # LATIN CAPITAL LETTER L WITH CEDILLA\n+013D; C; 013E; # LATIN CAPITAL LETTER L WITH CARON\n+013F; C; 0140; # LATIN CAPITAL LETTER L WITH MIDDLE DOT\n+0141; C; 0142; # LATIN CAPITAL LETTER L WITH STROKE\n+0143; C; 0144; # LATIN CAPITAL LETTER N WITH ACUTE\n+0145; C; 0146; # LATIN CAPITAL LETTER N WITH CEDILLA\n+0147; C; 0148; # LATIN CAPITAL LETTER N WITH CARON\n+0149; F; 02BC 006E; # LATIN SMALL LETTER N PRECEDED BY APOSTROPHE\n+014A; C; 014B; # LATIN CAPITAL LETTER ENG\n+014C; C; 014D; # LATIN CAPITAL LETTER O WITH MACRON\n+014E; C; 014F; # LATIN CAPITAL LETTER O WITH BREVE\n+0150; C; 0151; # LATIN CAPITAL LETTER O WITH DOUBLE ACUTE\n+0152; C; 0153; # LATIN CAPITAL LIGATURE OE\n+0154; C; 0155; # LATIN CAPITAL LETTER R WITH ACUTE\n+0156; C; 0157; # LATIN CAPITAL LETTER R WITH CEDILLA\n+0158; C; 0159; # LATIN CAPITAL LETTER R WITH CARON\n+015A; C; 015B; # LATIN CAPITAL LETTER S WITH ACUTE\n+015C; C; 015D; # LATIN CAPITAL LETTER S WITH CIRCUMFLEX\n+015E; C; 015F; # LATIN CAPITAL LETTER S WITH CEDILLA\n+0160; C; 0161; # LATIN CAPITAL LETTER S WITH CARON\n+0162; C; 0163; # LATIN CAPITAL LETTER T WITH CEDILLA\n+0164; C; 0165; # LATIN CAPITAL LETTER T WITH CARON\n+0166; C; 0167; # LATIN CAPITAL LETTER T WITH STROKE\n+0168; C; 0169; # LATIN CAPITAL LETTER U WITH TILDE\n+016A; C; 016B; # LATIN CAPITAL LETTER U WITH MACRON\n+016C; C; 016D; # LATIN CAPITAL LETTER U WITH BREVE\n+016E; C; 016F; # LATIN CAPITAL LETTER U WITH RING ABOVE\n+0170; C; 0171; # LATIN CAPITAL LETTER U WITH DOUBLE ACUTE\n+0172; C; 0173; # LATIN CAPITAL LETTER U WITH OGONEK\n+0174; C; 0175; # LATIN CAPITAL LETTER W WITH CIRCUMFLEX\n+0176; C; 0177; # LATIN CAPITAL LETTER Y WITH CIRCUMFLEX\n+0178; C; 00FF; # LATIN CAPITAL LETTER Y WITH DIAERESIS\n+0179; C; 017A; # LATIN CAPITAL LETTER Z WITH ACUTE\n+017B; C; 017C; # LATIN CAPITAL LETTER Z WITH DOT ABOVE\n+017D; C; 017E; # LATIN CAPITAL LETTER Z WITH CARON\n+017F; C; 0073; # LATIN SMALL LETTER LONG S\n+0181; C; 0253; # LATIN CAPITAL LETTER B WITH HOOK\n+0182; C; 0183; # LATIN CAPITAL LETTER B WITH TOPBAR\n+0184; C; 0185; # LATIN CAPITAL LETTER TONE SIX\n+0186; C; 0254; # LATIN CAPITAL LETTER OPEN O\n+0187; C; 0188; # LATIN CAPITAL LETTER C WITH HOOK\n+0189; C; 0256; # LATIN CAPITAL LETTER AFRICAN D\n+018A; C; 0257; # LATIN CAPITAL LETTER D WITH HOOK\n+018B; C; 018C; # LATIN CAPITAL LETTER D WITH TOPBAR\n+018E; C; 01DD; # LATIN CAPITAL LETTER REVERSED E\n+018F; C; 0259; # LATIN CAPITAL LETTER SCHWA\n+0190; C; 025B; # LATIN CAPITAL LETTER OPEN E\n+0191; C; 0192; # LATIN CAPITAL LETTER F WITH HOOK\n+0193; C; 0260; # LATIN CAPITAL LETTER G WITH HOOK\n+0194; C; 0263; # LATIN CAPITAL LETTER GAMMA\n+0196; C; 0269; # LATIN CAPITAL LETTER IOTA\n+0197; C; 0268; # LATIN CAPITAL LETTER I WITH STROKE\n+0198; C; 0199; # LATIN CAPITAL LETTER K WITH HOOK\n+019C; C; 026F; # LATIN CAPITAL LETTER TURNED M\n+019D; C; 0272; # LATIN CAPITAL LETTER N WITH LEFT HOOK\n+019F; C; 0275; # LATIN CAPITAL LETTER O WITH MIDDLE TILDE\n+01A0; C; 01A1; # LATIN CAPITAL LETTER O WITH HORN\n+01A2; C; 01A3; # LATIN CAPITAL LETTER OI\n+01A4; C; 01A5; # LATIN CAPITAL LETTER P WITH HOOK\n+01A6; C; 0280; # LATIN LETTER YR\n+01A7; C; 01A8; # LATIN CAPITAL LETTER TONE TWO\n+01A9; C; 0283; # LATIN CAPITAL LETTER ESH\n+01AC; C; 01AD; # LATIN CAPITAL LETTER T WITH HOOK\n+01AE; C; 0288; # LATIN CAPITAL LETTER T WITH RETROFLEX HOOK\n+01AF; C; 01B0; # LATIN CAPITAL LETTER U WITH HORN\n+01B1; C; 028A; # LATIN CAPITAL LETTER UPSILON\n+01B2; C; 028B; # LATIN CAPITAL LETTER V WITH HOOK\n+01B3; C; 01B4; # LATIN CAPITAL LETTER Y WITH HOOK\n+01B5; C; 01B6; # LATIN CAPITAL LETTER Z WITH STROKE\n+01B7; C; 0292; # LATIN CAPITAL LETTER EZH\n+01B8; C; 01B9; # LATIN CAPITAL LETTER EZH REVERSED\n+01BC; C; 01BD; # LATIN CAPITAL LETTER TONE FIVE\n+01C4; C; 01C6; # LATIN CAPITAL LETTER DZ WITH CARON\n+01C5; C; 01C6; # LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON\n+01C7; C; 01C9; # LATIN CAPITAL LETTER LJ\n+01C8; C; 01C9; # LATIN CAPITAL LETTER L WITH SMALL LETTER J\n+01CA; C; 01CC; # LATIN CAPITAL LETTER NJ\n+01CB; C; 01CC; # LATIN CAPITAL LETTER N WITH SMALL LETTER J\n+01CD; C; 01CE; # LATIN CAPITAL LETTER A WITH CARON\n+01CF; C; 01D0; # LATIN CAPITAL LETTER I WITH CARON\n+01D1; C; 01D2; # LATIN CAPITAL LETTER O WITH CARON\n+01D3; C; 01D4; # LATIN CAPITAL LETTER U WITH CARON\n+01D5; C; 01D6; # LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON\n+01D7; C; 01D8; # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE\n+01D9; C; 01DA; # LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON\n+01DB; C; 01DC; # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE\n+01DE; C; 01DF; # LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON\n+01E0; C; 01E1; # LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON\n+01E2; C; 01E3; # LATIN CAPITAL LETTER AE WITH MACRON\n+01E4; C; 01E5; # LATIN CAPITAL LETTER G WITH STROKE\n+01E6; C; 01E7; # LATIN CAPITAL LETTER G WITH CARON\n+01E8; C; 01E9; # LATIN CAPITAL LETTER K WITH CARON\n+01EA; C; 01EB; # LATIN CAPITAL LETTER O WITH OGONEK\n+01EC; C; 01ED; # LATIN CAPITAL LETTER O WITH OGONEK AND MACRON\n+01EE; C; 01EF; # LATIN CAPITAL LETTER EZH WITH CARON\n+01F0; F; 006A 030C; # LATIN SMALL LETTER J WITH CARON\n+01F1; C; 01F3; # LATIN CAPITAL LETTER DZ\n+01F2; C; 01F3; # LATIN CAPITAL LETTER D WITH SMALL LETTER Z\n+01F4; C; 01F5; # LATIN CAPITAL LETTER G WITH ACUTE\n+01F6; C; 0195; # LATIN CAPITAL LETTER HWAIR\n+01F7; C; 01BF; # LATIN CAPITAL LETTER WYNN\n+01F8; C; 01F9; # LATIN CAPITAL LETTER N WITH GRAVE\n+01FA; C; 01FB; # LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE\n+01FC; C; 01FD; # LATIN CAPITAL LETTER AE WITH ACUTE\n+01FE; C; 01FF; # LATIN CAPITAL LETTER O WITH STROKE AND ACUTE\n+0200; C; 0201; # LATIN CAPITAL LETTER A WITH DOUBLE GRAVE\n+0202; C; 0203; # LATIN CAPITAL LETTER A WITH INVERTED BREVE\n+0204; C; 0205; # LATIN CAPITAL LETTER E WITH DOUBLE GRAVE\n+0206; C; 0207; # LATIN CAPITAL LETTER E WITH INVERTED BREVE\n+0208; C; 0209; # LATIN CAPITAL LETTER I WITH DOUBLE GRAVE\n+020A; C; 020B; # LATIN CAPITAL LETTER I WITH INVERTED BREVE\n+020C; C; 020D; # LATIN CAPITAL LETTER O WITH DOUBLE GRAVE\n+020E; C; 020F; # LATIN CAPITAL LETTER O WITH INVERTED BREVE\n+0210; C; 0211; # LATIN CAPITAL LETTER R WITH DOUBLE GRAVE\n+0212; C; 0213; # LATIN CAPITAL LETTER R WITH INVERTED BREVE\n+0214; C; 0215; # LATIN CAPITAL LETTER U WITH DOUBLE GRAVE\n+0216; C; 0217; # LATIN CAPITAL LETTER U WITH INVERTED BREVE\n+0218; C; 0219; # LATIN CAPITAL LETTER S WITH COMMA BELOW\n+021A; C; 021B; # LATIN CAPITAL LETTER T WITH COMMA BELOW\n+021C; C; 021D; # LATIN CAPITAL LETTER YOGH\n+021E; C; 021F; # LATIN CAPITAL LETTER H WITH CARON\n+0220; C; 019E; # LATIN CAPITAL LETTER N WITH LONG RIGHT LEG\n+0222; C; 0223; # LATIN CAPITAL LETTER OU\n+0224; C; 0225; # LATIN CAPITAL LETTER Z WITH HOOK\n+0226; C; 0227; # LATIN CAPITAL LETTER A WITH DOT ABOVE\n+0228; C; 0229; # LATIN CAPITAL LETTER E WITH CEDILLA\n+022A; C; 022B; # LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON\n+022C; C; 022D; # LATIN CAPITAL LETTER O WITH TILDE AND MACRON\n+022E; C; 022F; # LATIN CAPITAL LETTER O WITH DOT ABOVE\n+0230; C; 0231; # LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON\n+0232; C; 0233; # LATIN CAPITAL LETTER Y WITH MACRON\n+023A; C; 2C65; # LATIN CAPITAL LETTER A WITH STROKE\n+023B; C; 023C; # LATIN CAPITAL LETTER C WITH STROKE\n+023D; C; 019A; # LATIN CAPITAL LETTER L WITH BAR\n+023E; C; 2C66; # LATIN CAPITAL LETTER T WITH DIAGONAL STROKE\n+0241; C; 0242; # LATIN CAPITAL LETTER GLOTTAL STOP\n+0243; C; 0180; # LATIN CAPITAL LETTER B WITH STROKE\n+0244; C; 0289; # LATIN CAPITAL LETTER U BAR\n+0245; C; 028C; # LATIN CAPITAL LETTER TURNED V\n+0246; C; 0247; # LATIN CAPITAL LETTER E WITH STROKE\n+0248; C; 0249; # LATIN CAPITAL LETTER J WITH STROKE\n+024A; C; 024B; # LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\n+024C; C; 024D; # LATIN CAPITAL LETTER R WITH STROKE\n+024E; C; 024F; # LATIN CAPITAL LETTER Y WITH STROKE\n+0345; C; 03B9; # COMBINING GREEK YPOGEGRAMMENI\n+0370; C; 0371; # GREEK CAPITAL LETTER HETA\n+0372; C; 0373; # GREEK CAPITAL LETTER ARCHAIC SAMPI\n+0376; C; 0377; # GREEK CAPITAL LETTER PAMPHYLIAN DIGAMMA\n+037F; C; 03F3; # GREEK CAPITAL LETTER YOT\n+0386; C; 03AC; # GREEK CAPITAL LETTER ALPHA WITH TONOS\n+0388; C; 03AD; # GREEK CAPITAL LETTER EPSILON WITH TONOS\n+0389; C; 03AE; # GREEK CAPITAL LETTER ETA WITH TONOS\n+038A; C; 03AF; # GREEK CAPITAL LETTER IOTA WITH TONOS\n+038C; C; 03CC; # GREEK CAPITAL LETTER OMICRON WITH TONOS\n+038E; C; 03CD; # GREEK CAPITAL LETTER UPSILON WITH TONOS\n+038F; C; 03CE; # GREEK CAPITAL LETTER OMEGA WITH TONOS\n+0390; F; 03B9 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS\n+0391; C; 03B1; # GREEK CAPITAL LETTER ALPHA\n+0392; C; 03B2; # GREEK CAPITAL LETTER BETA\n+0393; C; 03B3; # GREEK CAPITAL LETTER GAMMA\n+0394; C; 03B4; # GREEK CAPITAL LETTER DELTA\n+0395; C; 03B5; # GREEK CAPITAL LETTER EPSILON\n+0396; C; 03B6; # GREEK CAPITAL LETTER ZETA\n+0397; C; 03B7; # GREEK CAPITAL LETTER ETA\n+0398; C; 03B8; # GREEK CAPITAL LETTER THETA\n+0399; C; 03B9; # GREEK CAPITAL LETTER IOTA\n+039A; C; 03BA; # GREEK CAPITAL LETTER KAPPA\n+039B; C; 03BB; # GREEK CAPITAL LETTER LAMDA\n+039C; C; 03BC; # GREEK CAPITAL LETTER MU\n+039D; C; 03BD; # GREEK CAPITAL LETTER NU\n+039E; C; 03BE; # GREEK CAPITAL LETTER XI\n+039F; C; 03BF; # GREEK CAPITAL LETTER OMICRON\n+03A0; C; 03C0; # GREEK CAPITAL LETTER PI\n+03A1; C; 03C1; # GREEK CAPITAL LETTER RHO\n+03A3; C; 03C3; # GREEK CAPITAL LETTER SIGMA\n+03A4; C; 03C4; # GREEK CAPITAL LETTER TAU\n+03A5; C; 03C5; # GREEK CAPITAL LETTER UPSILON\n+03A6; C; 03C6; # GREEK CAPITAL LETTER PHI\n+03A7; C; 03C7; # GREEK CAPITAL LETTER CHI\n+03A8; C; 03C8; # GREEK CAPITAL LETTER PSI\n+03A9; C; 03C9; # GREEK CAPITAL LETTER OMEGA\n+03AA; C; 03CA; # GREEK CAPITAL LETTER IOTA WITH DIALYTIKA\n+03AB; C; 03CB; # GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA\n+03B0; F; 03C5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS\n+03C2; C; 03C3; # GREEK SMALL LETTER FINAL SIGMA\n+03CF; C; 03D7; # GREEK CAPITAL KAI SYMBOL\n+03D0; C; 03B2; # GREEK BETA SYMBOL\n+03D1; C; 03B8; # GREEK THETA SYMBOL\n+03D5; C; 03C6; # GREEK PHI SYMBOL\n+03D6; C; 03C0; # GREEK PI SYMBOL\n+03D8; C; 03D9; # GREEK LETTER ARCHAIC KOPPA\n+03DA; C; 03DB; # GREEK LETTER STIGMA\n+03DC; C; 03DD; # GREEK LETTER DIGAMMA\n+03DE; C; 03DF; # GREEK LETTER KOPPA\n+03E0; C; 03E1; # GREEK LETTER SAMPI\n+03E2; C; 03E3; # COPTIC CAPITAL LETTER SHEI\n+03E4; C; 03E5; # COPTIC CAPITAL LETTER FEI\n+03E6; C; 03E7; # COPTIC CAPITAL LETTER KHEI\n+03E8; C; 03E9; # COPTIC CAPITAL LETTER HORI\n+03EA; C; 03EB; # COPTIC CAPITAL LETTER GANGIA\n+03EC; C; 03ED; # COPTIC CAPITAL LETTER SHIMA\n+03EE; C; 03EF; # COPTIC CAPITAL LETTER DEI\n+03F0; C; 03BA; # GREEK KAPPA SYMBOL\n+03F1; C; 03C1; # GREEK RHO SYMBOL\n+03F4; C; 03B8; # GREEK CAPITAL THETA SYMBOL\n+03F5; C; 03B5; # GREEK LUNATE EPSILON SYMBOL\n+03F7; C; 03F8; # GREEK CAPITAL LETTER SHO\n+03F9; C; 03F2; # GREEK CAPITAL LUNATE SIGMA SYMBOL\n+03FA; C; 03FB; # GREEK CAPITAL LETTER SAN\n+03FD; C; 037B; # GREEK CAPITAL REVERSED LUNATE SIGMA SYMBOL\n+03FE; C; 037C; # GREEK CAPITAL DOTTED LUNATE SIGMA SYMBOL\n+03FF; C; 037D; # GREEK CAPITAL REVERSED DOTTED LUNATE SIGMA SYMBOL\n+0400; C; 0450; # CYRILLIC CAPITAL LETTER IE WITH GRAVE\n+0401; C; 0451; # CYRILLIC CAPITAL LETTER IO\n+0402; C; 0452; # CYRILLIC CAPITAL LETTER DJE\n+0403; C; 0453; # CYRILLIC CAPITAL LETTER GJE\n+0404; C; 0454; # CYRILLIC CAPITAL LETTER UKRAINIAN IE\n+0405; C; 0455; # CYRILLIC CAPITAL LETTER DZE\n+0406; C; 0456; # CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I\n+0407; C; 0457; # CYRILLIC CAPITAL LETTER YI\n+0408; C; 0458; # CYRILLIC CAPITAL LETTER JE\n+0409; C; 0459; # CYRILLIC CAPITAL LETTER LJE\n+040A; C; 045A; # CYRILLIC CAPITAL LETTER NJE\n+040B; C; 045B; # CYRILLIC CAPITAL LETTER TSHE\n+040C; C; 045C; # CYRILLIC CAPITAL LETTER KJE\n+040D; C; 045D; # CYRILLIC CAPITAL LETTER I WITH GRAVE\n+040E; C; 045E; # CYRILLIC CAPITAL LETTER SHORT U\n+040F; C; 045F; # CYRILLIC CAPITAL LETTER DZHE\n+0410; C; 0430; # CYRILLIC CAPITAL LETTER A\n+0411; C; 0431; # CYRILLIC CAPITAL LETTER BE\n+0412; C; 0432; # CYRILLIC CAPITAL LETTER VE\n+0413; C; 0433; # CYRILLIC CAPITAL LETTER GHE\n+0414; C; 0434; # CYRILLIC CAPITAL LETTER DE\n+0415; C; 0435; # CYRILLIC CAPITAL LETTER IE\n+0416; C; 0436; # CYRILLIC CAPITAL LETTER ZHE\n+0417; C; 0437; # CYRILLIC CAPITAL LETTER ZE\n+0418; C; 0438; # CYRILLIC CAPITAL LETTER I\n+0419; C; 0439; # CYRILLIC CAPITAL LETTER SHORT I\n+041A; C; 043A; # CYRILLIC CAPITAL LETTER KA\n+041B; C; 043B; # CYRILLIC CAPITAL LETTER EL\n+041C; C; 043C; # CYRILLIC CAPITAL LETTER EM\n+041D; C; 043D; # CYRILLIC CAPITAL LETTER EN\n+041E; C; 043E; # CYRILLIC CAPITAL LETTER O\n+041F; C; 043F; # CYRILLIC CAPITAL LETTER PE\n+0420; C; 0440; # CYRILLIC CAPITAL LETTER ER\n+0421; C; 0441; # CYRILLIC CAPITAL LETTER ES\n+0422; C; 0442; # CYRILLIC CAPITAL LETTER TE\n+0423; C; 0443; # CYRILLIC CAPITAL LETTER U\n+0424; C; 0444; # CYRILLIC CAPITAL LETTER EF\n+0425; C; 0445; # CYRILLIC CAPITAL LETTER HA\n+0426; C; 0446; # CYRILLIC CAPITAL LETTER TSE\n+0427; C; 0447; # CYRILLIC CAPITAL LETTER CHE\n+0428; C; 0448; # CYRILLIC CAPITAL LETTER SHA\n+0429; C; 0449; # CYRILLIC CAPITAL LETTER SHCHA\n+042A; C; 044A; # CYRILLIC CAPITAL LETTER HARD SIGN\n+042B; C; 044B; # CYRILLIC CAPITAL LETTER YERU\n+042C; C; 044C; # CYRILLIC CAPITAL LETTER SOFT SIGN\n+042D; C; 044D; # CYRILLIC CAPITAL LETTER E\n+042E; C; 044E; # CYRILLIC CAPITAL LETTER YU\n+042F; C; 044F; # CYRILLIC CAPITAL LETTER YA\n+0460; C; 0461; # CYRILLIC CAPITAL LETTER OMEGA\n+0462; C; 0463; # CYRILLIC CAPITAL LETTER YAT\n+0464; C; 0465; # CYRILLIC CAPITAL LETTER IOTIFIED E\n+0466; C; 0467; # CYRILLIC CAPITAL LETTER LITTLE YUS\n+0468; C; 0469; # CYRILLIC CAPITAL LETTER IOTIFIED LITTLE YUS\n+046A; C; 046B; # CYRILLIC CAPITAL LETTER BIG YUS\n+046C; C; 046D; # CYRILLIC CAPITAL LETTER IOTIFIED BIG YUS\n+046E; C; 046F; # CYRILLIC CAPITAL LETTER KSI\n+0470; C; 0471; # CYRILLIC CAPITAL LETTER PSI\n+0472; C; 0473; # CYRILLIC CAPITAL LETTER FITA\n+0474; C; 0475; # CYRILLIC CAPITAL LETTER IZHITSA\n+0476; C; 0477; # CYRILLIC CAPITAL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT\n+0478; C; 0479; # CYRILLIC CAPITAL LETTER UK\n+047A; C; 047B; # CYRILLIC CAPITAL LETTER ROUND OMEGA\n+047C; C; 047D; # CYRILLIC CAPITAL LETTER OMEGA WITH TITLO\n+047E; C; 047F; # CYRILLIC CAPITAL LETTER OT\n+0480; C; 0481; # CYRILLIC CAPITAL LETTER KOPPA\n+048A; C; 048B; # CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\n+048C; C; 048D; # CYRILLIC CAPITAL LETTER SEMISOFT SIGN\n+048E; C; 048F; # CYRILLIC CAPITAL LETTER ER WITH TICK\n+0490; C; 0491; # CYRILLIC CAPITAL LETTER GHE WITH UPTURN\n+0492; C; 0493; # CYRILLIC CAPITAL LETTER GHE WITH STROKE\n+0494; C; 0495; # CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK\n+0496; C; 0497; # CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER\n+0498; C; 0499; # CYRILLIC CAPITAL LETTER ZE WITH DESCENDER\n+049A; C; 049B; # CYRILLIC CAPITAL LETTER KA WITH DESCENDER\n+049C; C; 049D; # CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE\n+049E; C; 049F; # CYRILLIC CAPITAL LETTER KA WITH STROKE\n+04A0; C; 04A1; # CYRILLIC CAPITAL LETTER BASHKIR KA\n+04A2; C; 04A3; # CYRILLIC CAPITAL LETTER EN WITH DESCENDER\n+04A4; C; 04A5; # CYRILLIC CAPITAL LIGATURE EN GHE\n+04A6; C; 04A7; # CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK\n+04A8; C; 04A9; # CYRILLIC CAPITAL LETTER ABKHASIAN HA\n+04AA; C; 04AB; # CYRILLIC CAPITAL LETTER ES WITH DESCENDER\n+04AC; C; 04AD; # CYRILLIC CAPITAL LETTER TE WITH DESCENDER\n+04AE; C; 04AF; # CYRILLIC CAPITAL LETTER STRAIGHT U\n+04B0; C; 04B1; # CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE\n+04B2; C; 04B3; # CYRILLIC CAPITAL LETTER HA WITH DESCENDER\n+04B4; C; 04B5; # CYRILLIC CAPITAL LIGATURE TE TSE\n+04B6; C; 04B7; # CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\n+04B8; C; 04B9; # CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE\n+04BA; C; 04BB; # CYRILLIC CAPITAL LETTER SHHA\n+04BC; C; 04BD; # CYRILLIC CAPITAL LETTER ABKHASIAN CHE\n+04BE; C; 04BF; # CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER\n+04C0; C; 04CF; # CYRILLIC LETTER PALOCHKA\n+04C1; C; 04C2; # CYRILLIC CAPITAL LETTER ZHE WITH BREVE\n+04C3; C; 04C4; # CYRILLIC CAPITAL LETTER KA WITH HOOK\n+04C5; C; 04C6; # CYRILLIC CAPITAL LETTER EL WITH TAIL\n+04C7; C; 04C8; # CYRILLIC CAPITAL LETTER EN WITH HOOK\n+04C9; C; 04CA; # CYRILLIC CAPITAL LETTER EN WITH TAIL\n+04CB; C; 04CC; # CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\n+04CD; C; 04CE; # CYRILLIC CAPITAL LETTER EM WITH TAIL\n+04D0; C; 04D1; # CYRILLIC CAPITAL LETTER A WITH BREVE\n+04D2; C; 04D3; # CYRILLIC CAPITAL LETTER A WITH DIAERESIS\n+04D4; C; 04D5; # CYRILLIC CAPITAL LIGATURE A IE\n+04D6; C; 04D7; # CYRILLIC CAPITAL LETTER IE WITH BREVE\n+04D8; C; 04D9; # CYRILLIC CAPITAL LETTER SCHWA\n+04DA; C; 04DB; # CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS\n+04DC; C; 04DD; # CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS\n+04DE; C; 04DF; # CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS\n+04E0; C; 04E1; # CYRILLIC CAPITAL LETTER ABKHASIAN DZE\n+04E2; C; 04E3; # CYRILLIC CAPITAL LETTER I WITH MACRON\n+04E4; C; 04E5; # CYRILLIC CAPITAL LETTER I WITH DIAERESIS\n+04E6; C; 04E7; # CYRILLIC CAPITAL LETTER O WITH DIAERESIS\n+04E8; C; 04E9; # CYRILLIC CAPITAL LETTER BARRED O\n+04EA; C; 04EB; # CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS\n+04EC; C; 04ED; # CYRILLIC CAPITAL LETTER E WITH DIAERESIS\n+04EE; C; 04EF; # CYRILLIC CAPITAL LETTER U WITH MACRON\n+04F0; C; 04F1; # CYRILLIC CAPITAL LETTER U WITH DIAERESIS\n+04F2; C; 04F3; # CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE\n+04F4; C; 04F5; # CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS\n+04F6; C; 04F7; # CYRILLIC CAPITAL LETTER GHE WITH DESCENDER\n+04F8; C; 04F9; # CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS\n+04FA; C; 04FB; # CYRILLIC CAPITAL LETTER GHE WITH STROKE AND HOOK\n+04FC; C; 04FD; # CYRILLIC CAPITAL LETTER HA WITH HOOK\n+04FE; C; 04FF; # CYRILLIC CAPITAL LETTER HA WITH STROKE\n+0500; C; 0501; # CYRILLIC CAPITAL LETTER KOMI DE\n+0502; C; 0503; # CYRILLIC CAPITAL LETTER KOMI DJE\n+0504; C; 0505; # CYRILLIC CAPITAL LETTER KOMI ZJE\n+0506; C; 0507; # CYRILLIC CAPITAL LETTER KOMI DZJE\n+0508; C; 0509; # CYRILLIC CAPITAL LETTER KOMI LJE\n+050A; C; 050B; # CYRILLIC CAPITAL LETTER KOMI NJE\n+050C; C; 050D; # CYRILLIC CAPITAL LETTER KOMI SJE\n+050E; C; 050F; # CYRILLIC CAPITAL LETTER KOMI TJE\n+0510; C; 0511; # CYRILLIC CAPITAL LETTER REVERSED ZE\n+0512; C; 0513; # CYRILLIC CAPITAL LETTER EL WITH HOOK\n+0514; C; 0515; # CYRILLIC CAPITAL LETTER LHA\n+0516; C; 0517; # CYRILLIC CAPITAL LETTER RHA\n+0518; C; 0519; # CYRILLIC CAPITAL LETTER YAE\n+051A; C; 051B; # CYRILLIC CAPITAL LETTER QA\n+051C; C; 051D; # CYRILLIC CAPITAL LETTER WE\n+051E; C; 051F; # CYRILLIC CAPITAL LETTER ALEUT KA\n+0520; C; 0521; # CYRILLIC CAPITAL LETTER EL WITH MIDDLE HOOK\n+0522; C; 0523; # CYRILLIC CAPITAL LETTER EN WITH MIDDLE HOOK\n+0524; C; 0525; # CYRILLIC CAPITAL LETTER PE WITH DESCENDER\n+0526; C; 0527; # CYRILLIC CAPITAL LETTER SHHA WITH DESCENDER\n+0528; C; 0529; # CYRILLIC CAPITAL LETTER EN WITH LEFT HOOK\n+052A; C; 052B; # CYRILLIC CAPITAL LETTER DZZHE\n+052C; C; 052D; # CYRILLIC CAPITAL LETTER DCHE\n+052E; C; 052F; # CYRILLIC CAPITAL LETTER EL WITH DESCENDER\n+0531; C; 0561; # ARMENIAN CAPITAL LETTER AYB\n+0532; C; 0562; # ARMENIAN CAPITAL LETTER BEN\n+0533; C; 0563; # ARMENIAN CAPITAL LETTER GIM\n+0534; C; 0564; # ARMENIAN CAPITAL LETTER DA\n+0535; C; 0565; # ARMENIAN CAPITAL LETTER ECH\n+0536; C; 0566; # ARMENIAN CAPITAL LETTER ZA\n+0537; C; 0567; # ARMENIAN CAPITAL LETTER EH\n+0538; C; 0568; # ARMENIAN CAPITAL LETTER ET\n+0539; C; 0569; # ARMENIAN CAPITAL LETTER TO\n+053A; C; 056A; # ARMENIAN CAPITAL LETTER ZHE\n+053B; C; 056B; # ARMENIAN CAPITAL LETTER INI\n+053C; C; 056C; # ARMENIAN CAPITAL LETTER LIWN\n+053D; C; 056D; # ARMENIAN CAPITAL LETTER XEH\n+053E; C; 056E; # ARMENIAN CAPITAL LETTER CA\n+053F; C; 056F; # ARMENIAN CAPITAL LETTER KEN\n+0540; C; 0570; # ARMENIAN CAPITAL LETTER HO\n+0541; C; 0571; # ARMENIAN CAPITAL LETTER JA\n+0542; C; 0572; # ARMENIAN CAPITAL LETTER GHAD\n+0543; C; 0573; # ARMENIAN CAPITAL LETTER CHEH\n+0544; C; 0574; # ARMENIAN CAPITAL LETTER MEN\n+0545; C; 0575; # ARMENIAN CAPITAL LETTER YI\n+0546; C; 0576; # ARMENIAN CAPITAL LETTER NOW\n+0547; C; 0577; # ARMENIAN CAPITAL LETTER SHA\n+0548; C; 0578; # ARMENIAN CAPITAL LETTER VO\n+0549; C; 0579; # ARMENIAN CAPITAL LETTER CHA\n+054A; C; 057A; # ARMENIAN CAPITAL LETTER PEH\n+054B; C; 057B; # ARMENIAN CAPITAL LETTER JHEH\n+054C; C; 057C; # ARMENIAN CAPITAL LETTER RA\n+054D; C; 057D; # ARMENIAN CAPITAL LETTER SEH\n+054E; C; 057E; # ARMENIAN CAPITAL LETTER VEW\n+054F; C; 057F; # ARMENIAN CAPITAL LETTER TIWN\n+0550; C; 0580; # ARMENIAN CAPITAL LETTER REH\n+0551; C; 0581; # ARMENIAN CAPITAL LETTER CO\n+0552; C; 0582; # ARMENIAN CAPITAL LETTER YIWN\n+0553; C; 0583; # ARMENIAN CAPITAL LETTER PIWR\n+0554; C; 0584; # ARMENIAN CAPITAL LETTER KEH\n+0555; C; 0585; # ARMENIAN CAPITAL LETTER OH\n+0556; C; 0586; # ARMENIAN CAPITAL LETTER FEH\n+0587; F; 0565 0582; # ARMENIAN SMALL LIGATURE ECH YIWN\n+10A0; C; 2D00; # GEORGIAN CAPITAL LETTER AN\n+10A1; C; 2D01; # GEORGIAN CAPITAL LETTER BAN\n+10A2; C; 2D02; # GEORGIAN CAPITAL LETTER GAN\n+10A3; C; 2D03; # GEORGIAN CAPITAL LETTER DON\n+10A4; C; 2D04; # GEORGIAN CAPITAL LETTER EN\n+10A5; C; 2D05; # GEORGIAN CAPITAL LETTER VIN\n+10A6; C; 2D06; # GEORGIAN CAPITAL LETTER ZEN\n+10A7; C; 2D07; # GEORGIAN CAPITAL LETTER TAN\n+10A8; C; 2D08; # GEORGIAN CAPITAL LETTER IN\n+10A9; C; 2D09; # GEORGIAN CAPITAL LETTER KAN\n+10AA; C; 2D0A; # GEORGIAN CAPITAL LETTER LAS\n+10AB; C; 2D0B; # GEORGIAN CAPITAL LETTER MAN\n+10AC; C; 2D0C; # GEORGIAN CAPITAL LETTER NAR\n+10AD; C; 2D0D; # GEORGIAN CAPITAL LETTER ON\n+10AE; C; 2D0E; # GEORGIAN CAPITAL LETTER PAR\n+10AF; C; 2D0F; # GEORGIAN CAPITAL LETTER ZHAR\n+10B0; C; 2D10; # GEORGIAN CAPITAL LETTER RAE\n+10B1; C; 2D11; # GEORGIAN CAPITAL LETTER SAN\n+10B2; C; 2D12; # GEORGIAN CAPITAL LETTER TAR\n+10B3; C; 2D13; # GEORGIAN CAPITAL LETTER UN\n+10B4; C; 2D14; # GEORGIAN CAPITAL LETTER PHAR\n+10B5; C; 2D15; # GEORGIAN CAPITAL LETTER KHAR\n+10B6; C; 2D16; # GEORGIAN CAPITAL LETTER GHAN\n+10B7; C; 2D17; # GEORGIAN CAPITAL LETTER QAR\n+10B8; C; 2D18; # GEORGIAN CAPITAL LETTER SHIN\n+10B9; C; 2D19; # GEORGIAN CAPITAL LETTER CHIN\n+10BA; C; 2D1A; # GEORGIAN CAPITAL LETTER CAN\n+10BB; C; 2D1B; # GEORGIAN CAPITAL LETTER JIL\n+10BC; C; 2D1C; # GEORGIAN CAPITAL LETTER CIL\n+10BD; C; 2D1D; # GEORGIAN CAPITAL LETTER CHAR\n+10BE; C; 2D1E; # GEORGIAN CAPITAL LETTER XAN\n+10BF; C; 2D1F; # GEORGIAN CAPITAL LETTER JHAN\n+10C0; C; 2D20; # GEORGIAN CAPITAL LETTER HAE\n+10C1; C; 2D21; # GEORGIAN CAPITAL LETTER HE\n+10C2; C; 2D22; # GEORGIAN CAPITAL LETTER HIE\n+10C3; C; 2D23; # GEORGIAN CAPITAL LETTER WE\n+10C4; C; 2D24; # GEORGIAN CAPITAL LETTER HAR\n+10C5; C; 2D25; # GEORGIAN CAPITAL LETTER HOE\n+10C7; C; 2D27; # GEORGIAN CAPITAL LETTER YN\n+10CD; C; 2D2D; # GEORGIAN CAPITAL LETTER AEN\n+13F8; C; 13F0; # CHEROKEE SMALL LETTER YE\n+13F9; C; 13F1; # CHEROKEE SMALL LETTER YI\n+13FA; C; 13F2; # CHEROKEE SMALL LETTER YO\n+13FB; C; 13F3; # CHEROKEE SMALL LETTER YU\n+13FC; C; 13F4; # CHEROKEE SMALL LETTER YV\n+13FD; C; 13F5; # CHEROKEE SMALL LETTER MV\n+1C80; C; 0432; # CYRILLIC SMALL LETTER ROUNDED VE\n+1C81; C; 0434; # CYRILLIC SMALL LETTER LONG-LEGGED DE\n+1C82; C; 043E; # CYRILLIC SMALL LETTER NARROW O\n+1C83; C; 0441; # CYRILLIC SMALL LETTER WIDE ES\n+1C84; C; 0442; # CYRILLIC SMALL LETTER TALL TE\n+1C85; C; 0442; # CYRILLIC SMALL LETTER THREE-LEGGED TE\n+1C86; C; 044A; # CYRILLIC SMALL LETTER TALL HARD SIGN\n+1C87; C; 0463; # CYRILLIC SMALL LETTER TALL YAT\n+1C88; C; A64B; # CYRILLIC SMALL LETTER UNBLENDED UK\n+1C89; C; 1C8A; # CYRILLIC CAPITAL LETTER TJE\n+1C90; C; 10D0; # GEORGIAN MTAVRULI CAPITAL LETTER AN\n+1C91; C; 10D1; # GEORGIAN MTAVRULI CAPITAL LETTER BAN\n+1C92; C; 10D2; # GEORGIAN MTAVRULI CAPITAL LETTER GAN\n+1C93; C; 10D3; # GEORGIAN MTAVRULI CAPITAL LETTER DON\n+1C94; C; 10D4; # GEORGIAN MTAVRULI CAPITAL LETTER EN\n+1C95; C; 10D5; # GEORGIAN MTAVRULI CAPITAL LETTER VIN\n+1C96; C; 10D6; # GEORGIAN MTAVRULI CAPITAL LETTER ZEN\n+1C97; C; 10D7; # GEORGIAN MTAVRULI CAPITAL LETTER TAN\n+1C98; C; 10D8; # GEORGIAN MTAVRULI CAPITAL LETTER IN\n+1C99; C; 10D9; # GEORGIAN MTAVRULI CAPITAL LETTER KAN\n+1C9A; C; 10DA; # GEORGIAN MTAVRULI CAPITAL LETTER LAS\n+1C9B; C; 10DB; # GEORGIAN MTAVRULI CAPITAL LETTER MAN\n+1C9C; C; 10DC; # GEORGIAN MTAVRULI CAPITAL LETTER NAR\n+1C9D; C; 10DD; # GEORGIAN MTAVRULI CAPITAL LETTER ON\n+1C9E; C; 10DE; # GEORGIAN MTAVRULI CAPITAL LETTER PAR\n+1C9F; C; 10DF; # GEORGIAN MTAVRULI CAPITAL LETTER ZHAR\n+1CA0; C; 10E0; # GEORGIAN MTAVRULI CAPITAL LETTER RAE\n+1CA1; C; 10E1; # GEORGIAN MTAVRULI CAPITAL LETTER SAN\n+1CA2; C; 10E2; # GEORGIAN MTAVRULI CAPITAL LETTER TAR\n+1CA3; C; 10E3; # GEORGIAN MTAVRULI CAPITAL LETTER UN\n+1CA4; C; 10E4; # GEORGIAN MTAVRULI CAPITAL LETTER PHAR\n+1CA5; C; 10E5; # GEORGIAN MTAVRULI CAPITAL LETTER KHAR\n+1CA6; C; 10E6; # GEORGIAN MTAVRULI CAPITAL LETTER GHAN\n+1CA7; C; 10E7; # GEORGIAN MTAVRULI CAPITAL LETTER QAR\n+1CA8; C; 10E8; # GEORGIAN MTAVRULI CAPITAL LETTER SHIN\n+1CA9; C; 10E9; # GEORGIAN MTAVRULI CAPITAL LETTER CHIN\n+1CAA; C; 10EA; # GEORGIAN MTAVRULI CAPITAL LETTER CAN\n+1CAB; C; 10EB; # GEORGIAN MTAVRULI CAPITAL LETTER JIL\n+1CAC; C; 10EC; # GEORGIAN MTAVRULI CAPITAL LETTER CIL\n+1CAD; C; 10ED; # GEORGIAN MTAVRULI CAPITAL LETTER CHAR\n+1CAE; C; 10EE; # GEORGIAN MTAVRULI CAPITAL LETTER XAN\n+1CAF; C; 10EF; # GEORGIAN MTAVRULI CAPITAL LETTER JHAN\n+1CB0; C; 10F0; # GEORGIAN MTAVRULI CAPITAL LETTER HAE\n+1CB1; C; 10F1; # GEORGIAN MTAVRULI CAPITAL LETTER HE\n+1CB2; C; 10F2; # GEORGIAN MTAVRULI CAPITAL LETTER HIE\n+1CB3; C; 10F3; # GEORGIAN MTAVRULI CAPITAL LETTER WE\n+1CB4; C; 10F4; # GEORGIAN MTAVRULI CAPITAL LETTER HAR\n+1CB5; C; 10F5; # GEORGIAN MTAVRULI CAPITAL LETTER HOE\n+1CB6; C; 10F6; # GEORGIAN MTAVRULI CAPITAL LETTER FI\n+1CB7; C; 10F7; # GEORGIAN MTAVRULI CAPITAL LETTER YN\n+1CB8; C; 10F8; # GEORGIAN MTAVRULI CAPITAL LETTER ELIFI\n+1CB9; C; 10F9; # GEORGIAN MTAVRULI CAPITAL LETTER TURNED GAN\n+1CBA; C; 10FA; # GEORGIAN MTAVRULI CAPITAL LETTER AIN\n+1CBD; C; 10FD; # GEORGIAN MTAVRULI CAPITAL LETTER AEN\n+1CBE; C; 10FE; # GEORGIAN MTAVRULI CAPITAL LETTER HARD SIGN\n+1CBF; C; 10FF; # GEORGIAN MTAVRULI CAPITAL LETTER LABIAL SIGN\n+1E00; C; 1E01; # LATIN CAPITAL LETTER A WITH RING BELOW\n+1E02; C; 1E03; # LATIN CAPITAL LETTER B WITH DOT ABOVE\n+1E04; C; 1E05; # LATIN CAPITAL LETTER B WITH DOT BELOW\n+1E06; C; 1E07; # LATIN CAPITAL LETTER B WITH LINE BELOW\n+1E08; C; 1E09; # LATIN CAPITAL LETTER C WITH CEDILLA AND ACUTE\n+1E0A; C; 1E0B; # LATIN CAPITAL LETTER D WITH DOT ABOVE\n+1E0C; C; 1E0D; # LATIN CAPITAL LETTER D WITH DOT BELOW\n+1E0E; C; 1E0F; # LATIN CAPITAL LETTER D WITH LINE BELOW\n+1E10; C; 1E11; # LATIN CAPITAL LETTER D WITH CEDILLA\n+1E12; C; 1E13; # LATIN CAPITAL LETTER D WITH CIRCUMFLEX BELOW\n+1E14; C; 1E15; # LATIN CAPITAL LETTER E WITH MACRON AND GRAVE\n+1E16; C; 1E17; # LATIN CAPITAL LETTER E WITH MACRON AND ACUTE\n+1E18; C; 1E19; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX BELOW\n+1E1A; C; 1E1B; # LATIN CAPITAL LETTER E WITH TILDE BELOW\n+1E1C; C; 1E1D; # LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE\n+1E1E; C; 1E1F; # LATIN CAPITAL LETTER F WITH DOT ABOVE\n+1E20; C; 1E21; # LATIN CAPITAL LETTER G WITH MACRON\n+1E22; C; 1E23; # LATIN CAPITAL LETTER H WITH DOT ABOVE\n+1E24; C; 1E25; # LATIN CAPITAL LETTER H WITH DOT BELOW\n+1E26; C; 1E27; # LATIN CAPITAL LETTER H WITH DIAERESIS\n+1E28; C; 1E29; # LATIN CAPITAL LETTER H WITH CEDILLA\n+1E2A; C; 1E2B; # LATIN CAPITAL LETTER H WITH BREVE BELOW\n+1E2C; C; 1E2D; # LATIN CAPITAL LETTER I WITH TILDE BELOW\n+1E2E; C; 1E2F; # LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE\n+1E30; C; 1E31; # LATIN CAPITAL LETTER K WITH ACUTE\n+1E32; C; 1E33; # LATIN CAPITAL LETTER K WITH DOT BELOW\n+1E34; C; 1E35; # LATIN CAPITAL LETTER K WITH LINE BELOW\n+1E36; C; 1E37; # LATIN CAPITAL LETTER L WITH DOT BELOW\n+1E38; C; 1E39; # LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON\n+1E3A; C; 1E3B; # LATIN CAPITAL LETTER L WITH LINE BELOW\n+1E3C; C; 1E3D; # LATIN CAPITAL LETTER L WITH CIRCUMFLEX BELOW\n+1E3E; C; 1E3F; # LATIN CAPITAL LETTER M WITH ACUTE\n+1E40; C; 1E41; # LATIN CAPITAL LETTER M WITH DOT ABOVE\n+1E42; C; 1E43; # LATIN CAPITAL LETTER M WITH DOT BELOW\n+1E44; C; 1E45; # LATIN CAPITAL LETTER N WITH DOT ABOVE\n+1E46; C; 1E47; # LATIN CAPITAL LETTER N WITH DOT BELOW\n+1E48; C; 1E49; # LATIN CAPITAL LETTER N WITH LINE BELOW\n+1E4A; C; 1E4B; # LATIN CAPITAL LETTER N WITH CIRCUMFLEX BELOW\n+1E4C; C; 1E4D; # LATIN CAPITAL LETTER O WITH TILDE AND ACUTE\n+1E4E; C; 1E4F; # LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS\n+1E50; C; 1E51; # LATIN CAPITAL LETTER O WITH MACRON AND GRAVE\n+1E52; C; 1E53; # LATIN CAPITAL LETTER O WITH MACRON AND ACUTE\n+1E54; C; 1E55; # LATIN CAPITAL LETTER P WITH ACUTE\n+1E56; C; 1E57; # LATIN CAPITAL LETTER P WITH DOT ABOVE\n+1E58; C; 1E59; # LATIN CAPITAL LETTER R WITH DOT ABOVE\n+1E5A; C; 1E5B; # LATIN CAPITAL LETTER R WITH DOT BELOW\n+1E5C; C; 1E5D; # LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON\n+1E5E; C; 1E5F; # LATIN CAPITAL LETTER R WITH LINE BELOW\n+1E60; C; 1E61; # LATIN CAPITAL LETTER S WITH DOT ABOVE\n+1E62; C; 1E63; # LATIN CAPITAL LETTER S WITH DOT BELOW\n+1E64; C; 1E65; # LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE\n+1E66; C; 1E67; # LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE\n+1E68; C; 1E69; # LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE\n+1E6A; C; 1E6B; # LATIN CAPITAL LETTER T WITH DOT ABOVE\n+1E6C; C; 1E6D; # LATIN CAPITAL LETTER T WITH DOT BELOW\n+1E6E; C; 1E6F; # LATIN CAPITAL LETTER T WITH LINE BELOW\n+1E70; C; 1E71; # LATIN CAPITAL LETTER T WITH CIRCUMFLEX BELOW\n+1E72; C; 1E73; # LATIN CAPITAL LETTER U WITH DIAERESIS BELOW\n+1E74; C; 1E75; # LATIN CAPITAL LETTER U WITH TILDE BELOW\n+1E76; C; 1E77; # LATIN CAPITAL LETTER U WITH CIRCUMFLEX BELOW\n+1E78; C; 1E79; # LATIN CAPITAL LETTER U WITH TILDE AND ACUTE\n+1E7A; C; 1E7B; # LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS\n+1E7C; C; 1E7D; # LATIN CAPITAL LETTER V WITH TILDE\n+1E7E; C; 1E7F; # LATIN CAPITAL LETTER V WITH DOT BELOW\n+1E80; C; 1E81; # LATIN CAPITAL LETTER W WITH GRAVE\n+1E82; C; 1E83; # LATIN CAPITAL LETTER W WITH ACUTE\n+1E84; C; 1E85; # LATIN CAPITAL LETTER W WITH DIAERESIS\n+1E86; C; 1E87; # LATIN CAPITAL LETTER W WITH DOT ABOVE\n+1E88; C; 1E89; # LATIN CAPITAL LETTER W WITH DOT BELOW\n+1E8A; C; 1E8B; # LATIN CAPITAL LETTER X WITH DOT ABOVE\n+1E8C; C; 1E8D; # LATIN CAPITAL LETTER X WITH DIAERESIS\n+1E8E; C; 1E8F; # LATIN CAPITAL LETTER Y WITH DOT ABOVE\n+1E90; C; 1E91; # LATIN CAPITAL LETTER Z WITH CIRCUMFLEX\n+1E92; C; 1E93; # LATIN CAPITAL LETTER Z WITH DOT BELOW\n+1E94; C; 1E95; # LATIN CAPITAL LETTER Z WITH LINE BELOW\n+1E96; F; 0068 0331; # LATIN SMALL LETTER H WITH LINE BELOW\n+1E97; F; 0074 0308; # LATIN SMALL LETTER T WITH DIAERESIS\n+1E98; F; 0077 030A; # LATIN SMALL LETTER W WITH RING ABOVE\n+1E99; F; 0079 030A; # LATIN SMALL LETTER Y WITH RING ABOVE\n+1E9A; F; 0061 02BE; # LATIN SMALL LETTER A WITH RIGHT HALF RING\n+1E9B; C; 1E61; # LATIN SMALL LETTER LONG S WITH DOT ABOVE\n+1E9E; F; 0073 0073; # LATIN CAPITAL LETTER SHARP S\n+1E9E; S; 00DF; # LATIN CAPITAL LETTER SHARP S\n+1EA0; C; 1EA1; # LATIN CAPITAL LETTER A WITH DOT BELOW\n+1EA2; C; 1EA3; # LATIN CAPITAL LETTER A WITH HOOK ABOVE\n+1EA4; C; 1EA5; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE\n+1EA6; C; 1EA7; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE\n+1EA8; C; 1EA9; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE\n+1EAA; C; 1EAB; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE\n+1EAC; C; 1EAD; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW\n+1EAE; C; 1EAF; # LATIN CAPITAL LETTER A WITH BREVE AND ACUTE\n+1EB0; C; 1EB1; # LATIN CAPITAL LETTER A WITH BREVE AND GRAVE\n+1EB2; C; 1EB3; # LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE\n+1EB4; C; 1EB5; # LATIN CAPITAL LETTER A WITH BREVE AND TILDE\n+1EB6; C; 1EB7; # LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW\n+1EB8; C; 1EB9; # LATIN CAPITAL LETTER E WITH DOT BELOW\n+1EBA; C; 1EBB; # LATIN CAPITAL LETTER E WITH HOOK ABOVE\n+1EBC; C; 1EBD; # LATIN CAPITAL LETTER E WITH TILDE\n+1EBE; C; 1EBF; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE\n+1EC0; C; 1EC1; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE\n+1EC2; C; 1EC3; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE\n+1EC4; C; 1EC5; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE\n+1EC6; C; 1EC7; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW\n+1EC8; C; 1EC9; # LATIN CAPITAL LETTER I WITH HOOK ABOVE\n+1ECA; C; 1ECB; # LATIN CAPITAL LETTER I WITH DOT BELOW\n+1ECC; C; 1ECD; # LATIN CAPITAL LETTER O WITH DOT BELOW\n+1ECE; C; 1ECF; # LATIN CAPITAL LETTER O WITH HOOK ABOVE\n+1ED0; C; 1ED1; # LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE\n+1ED2; C; 1ED3; # LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE\n+1ED4; C; 1ED5; # LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE\n+1ED6; C; 1ED7; # LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE\n+1ED8; C; 1ED9; # LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW\n+1EDA; C; 1EDB; # LATIN CAPITAL LETTER O WITH HORN AND ACUTE\n+1EDC; C; 1EDD; # LATIN CAPITAL LETTER O WITH HORN AND GRAVE\n+1EDE; C; 1EDF; # LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE\n+1EE0; C; 1EE1; # LATIN CAPITAL LETTER O WITH HORN AND TILDE\n+1EE2; C; 1EE3; # LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW\n+1EE4; C; 1EE5; # LATIN CAPITAL LETTER U WITH DOT BELOW\n+1EE6; C; 1EE7; # LATIN CAPITAL LETTER U WITH HOOK ABOVE\n+1EE8; C; 1EE9; # LATIN CAPITAL LETTER U WITH HORN AND ACUTE\n+1EEA; C; 1EEB; # LATIN CAPITAL LETTER U WITH HORN AND GRAVE\n+1EEC; C; 1EED; # LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE\n+1EEE; C; 1EEF; # LATIN CAPITAL LETTER U WITH HORN AND TILDE\n+1EF0; C; 1EF1; # LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW\n+1EF2; C; 1EF3; # LATIN CAPITAL LETTER Y WITH GRAVE\n+1EF4; C; 1EF5; # LATIN CAPITAL LETTER Y WITH DOT BELOW\n+1EF6; C; 1EF7; # LATIN CAPITAL LETTER Y WITH HOOK ABOVE\n+1EF8; C; 1EF9; # LATIN CAPITAL LETTER Y WITH TILDE\n+1EFA; C; 1EFB; # LATIN CAPITAL LETTER MIDDLE-WELSH LL\n+1EFC; C; 1EFD; # LATIN CAPITAL LETTER MIDDLE-WELSH V\n+1EFE; C; 1EFF; # LATIN CAPITAL LETTER Y WITH LOOP\n+1F08; C; 1F00; # GREEK CAPITAL LETTER ALPHA WITH PSILI\n+1F09; C; 1F01; # GREEK CAPITAL LETTER ALPHA WITH DASIA\n+1F0A; C; 1F02; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND VARIA\n+1F0B; C; 1F03; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND VARIA\n+1F0C; C; 1F04; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND OXIA\n+1F0D; C; 1F05; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND OXIA\n+1F0E; C; 1F06; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PERISPOMENI\n+1F0F; C; 1F07; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PERISPOMENI\n+1F18; C; 1F10; # GREEK CAPITAL LETTER EPSILON WITH PSILI\n+1F19; C; 1F11; # GREEK CAPITAL LETTER EPSILON WITH DASIA\n+1F1A; C; 1F12; # GREEK CAPITAL LETTER EPSILON WITH PSILI AND VARIA\n+1F1B; C; 1F13; # GREEK CAPITAL LETTER EPSILON WITH DASIA AND VARIA\n+1F1C; C; 1F14; # GREEK CAPITAL LETTER EPSILON WITH PSILI AND OXIA\n+1F1D; C; 1F15; # GREEK CAPITAL LETTER EPSILON WITH DASIA AND OXIA\n+1F28; C; 1F20; # GREEK CAPITAL LETTER ETA WITH PSILI\n+1F29; C; 1F21; # GREEK CAPITAL LETTER ETA WITH DASIA\n+1F2A; C; 1F22; # GREEK CAPITAL LETTER ETA WITH PSILI AND VARIA\n+1F2B; C; 1F23; # GREEK CAPITAL LETTER ETA WITH DASIA AND VARIA\n+1F2C; C; 1F24; # GREEK CAPITAL LETTER ETA WITH PSILI AND OXIA\n+1F2D; C; 1F25; # GREEK CAPITAL LETTER ETA WITH DASIA AND OXIA\n+1F2E; C; 1F26; # GREEK CAPITAL LETTER ETA WITH PSILI AND PERISPOMENI\n+1F2F; C; 1F27; # GREEK CAPITAL LETTER ETA WITH DASIA AND PERISPOMENI\n+1F38; C; 1F30; # GREEK CAPITAL LETTER IOTA WITH PSILI\n+1F39; C; 1F31; # GREEK CAPITAL LETTER IOTA WITH DASIA\n+1F3A; C; 1F32; # GREEK CAPITAL LETTER IOTA WITH PSILI AND VARIA\n+1F3B; C; 1F33; # GREEK CAPITAL LETTER IOTA WITH DASIA AND VARIA\n+1F3C; C; 1F34; # GREEK CAPITAL LETTER IOTA WITH PSILI AND OXIA\n+1F3D; C; 1F35; # GREEK CAPITAL LETTER IOTA WITH DASIA AND OXIA\n+1F3E; C; 1F36; # GREEK CAPITAL LETTER IOTA WITH PSILI AND PERISPOMENI\n+1F3F; C; 1F37; # GREEK CAPITAL LETTER IOTA WITH DASIA AND PERISPOMENI\n+1F48; C; 1F40; # GREEK CAPITAL LETTER OMICRON WITH PSILI\n+1F49; C; 1F41; # GREEK CAPITAL LETTER OMICRON WITH DASIA\n+1F4A; C; 1F42; # GREEK CAPITAL LETTER OMICRON WITH PSILI AND VARIA\n+1F4B; C; 1F43; # GREEK CAPITAL LETTER OMICRON WITH DASIA AND VARIA\n+1F4C; C; 1F44; # GREEK CAPITAL LETTER OMICRON WITH PSILI AND OXIA\n+1F4D; C; 1F45; # GREEK CAPITAL LETTER OMICRON WITH DASIA AND OXIA\n+1F50; F; 03C5 0313; # GREEK SMALL LETTER UPSILON WITH PSILI\n+1F52; F; 03C5 0313 0300; # GREEK SMALL LETTER UPSILON WITH PSILI AND VARIA\n+1F54; F; 03C5 0313 0301; # GREEK SMALL LETTER UPSILON WITH PSILI AND OXIA\n+1F56; F; 03C5 0313 0342; # GREEK SMALL LETTER UPSILON WITH PSILI AND PERISPOMENI\n+1F59; C; 1F51; # GREEK CAPITAL LETTER UPSILON WITH DASIA\n+1F5B; C; 1F53; # GREEK CAPITAL LETTER UPSILON WITH DASIA AND VARIA\n+1F5D; C; 1F55; # GREEK CAPITAL LETTER UPSILON WITH DASIA AND OXIA\n+1F5F; C; 1F57; # GREEK CAPITAL LETTER UPSILON WITH DASIA AND PERISPOMENI\n+1F68; C; 1F60; # GREEK CAPITAL LETTER OMEGA WITH PSILI\n+1F69; C; 1F61; # GREEK CAPITAL LETTER OMEGA WITH DASIA\n+1F6A; C; 1F62; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND VARIA\n+1F6B; C; 1F63; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND VARIA\n+1F6C; C; 1F64; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND OXIA\n+1F6D; C; 1F65; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND OXIA\n+1F6E; C; 1F66; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PERISPOMENI\n+1F6F; C; 1F67; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI\n+1F80; F; 1F00 03B9; # GREEK SMALL LETTER ALPHA WITH PSILI AND YPOGEGRAMMENI\n+1F81; F; 1F01 03B9; # GREEK SMALL LETTER ALPHA WITH DASIA AND YPOGEGRAMMENI\n+1F82; F; 1F02 03B9; # GREEK SMALL LETTER ALPHA WITH PSILI AND VARIA AND YPOGEGRAMMENI\n+1F83; F; 1F03 03B9; # GREEK SMALL LETTER ALPHA WITH DASIA AND VARIA AND YPOGEGRAMMENI\n+1F84; F; 1F04 03B9; # GREEK SMALL LETTER ALPHA WITH PSILI AND OXIA AND YPOGEGRAMMENI\n+1F85; F; 1F05 03B9; # GREEK SMALL LETTER ALPHA WITH DASIA AND OXIA AND YPOGEGRAMMENI\n+1F86; F; 1F06 03B9; # GREEK SMALL LETTER ALPHA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI\n+1F87; F; 1F07 03B9; # GREEK SMALL LETTER ALPHA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI\n+1F88; F; 1F00 03B9; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PROSGEGRAMMENI\n+1F88; S; 1F80; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PROSGEGRAMMENI\n+1F89; F; 1F01 03B9; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PROSGEGRAMMENI\n+1F89; S; 1F81; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PROSGEGRAMMENI\n+1F8A; F; 1F02 03B9; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1F8A; S; 1F82; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1F8B; F; 1F03 03B9; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1F8B; S; 1F83; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1F8C; F; 1F04 03B9; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1F8C; S; 1F84; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1F8D; F; 1F05 03B9; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1F8D; S; 1F85; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1F8E; F; 1F06 03B9; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1F8E; S; 1F86; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1F8F; F; 1F07 03B9; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1F8F; S; 1F87; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1F90; F; 1F20 03B9; # GREEK SMALL LETTER ETA WITH PSILI AND YPOGEGRAMMENI\n+1F91; F; 1F21 03B9; # GREEK SMALL LETTER ETA WITH DASIA AND YPOGEGRAMMENI\n+1F92; F; 1F22 03B9; # GREEK SMALL LETTER ETA WITH PSILI AND VARIA AND YPOGEGRAMMENI\n+1F93; F; 1F23 03B9; # GREEK SMALL LETTER ETA WITH DASIA AND VARIA AND YPOGEGRAMMENI\n+1F94; F; 1F24 03B9; # GREEK SMALL LETTER ETA WITH PSILI AND OXIA AND YPOGEGRAMMENI\n+1F95; F; 1F25 03B9; # GREEK SMALL LETTER ETA WITH DASIA AND OXIA AND YPOGEGRAMMENI\n+1F96; F; 1F26 03B9; # GREEK SMALL LETTER ETA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI\n+1F97; F; 1F27 03B9; # GREEK SMALL LETTER ETA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI\n+1F98; F; 1F20 03B9; # GREEK CAPITAL LETTER ETA WITH PSILI AND PROSGEGRAMMENI\n+1F98; S; 1F90; # GREEK CAPITAL LETTER ETA WITH PSILI AND PROSGEGRAMMENI\n+1F99; F; 1F21 03B9; # GREEK CAPITAL LETTER ETA WITH DASIA AND PROSGEGRAMMENI\n+1F99; S; 1F91; # GREEK CAPITAL LETTER ETA WITH DASIA AND PROSGEGRAMMENI\n+1F9A; F; 1F22 03B9; # GREEK CAPITAL LETTER ETA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1F9A; S; 1F92; # GREEK CAPITAL LETTER ETA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1F9B; F; 1F23 03B9; # GREEK CAPITAL LETTER ETA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1F9B; S; 1F93; # GREEK CAPITAL LETTER ETA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1F9C; F; 1F24 03B9; # GREEK CAPITAL LETTER ETA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1F9C; S; 1F94; # GREEK CAPITAL LETTER ETA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1F9D; F; 1F25 03B9; # GREEK CAPITAL LETTER ETA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1F9D; S; 1F95; # GREEK CAPITAL LETTER ETA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1F9E; F; 1F26 03B9; # GREEK CAPITAL LETTER ETA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1F9E; S; 1F96; # GREEK CAPITAL LETTER ETA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1F9F; F; 1F27 03B9; # GREEK CAPITAL LETTER ETA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1F9F; S; 1F97; # GREEK CAPITAL LETTER ETA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1FA0; F; 1F60 03B9; # GREEK SMALL LETTER OMEGA WITH PSILI AND YPOGEGRAMMENI\n+1FA1; F; 1F61 03B9; # GREEK SMALL LETTER OMEGA WITH DASIA AND YPOGEGRAMMENI\n+1FA2; F; 1F62 03B9; # GREEK SMALL LETTER OMEGA WITH PSILI AND VARIA AND YPOGEGRAMMENI\n+1FA3; F; 1F63 03B9; # GREEK SMALL LETTER OMEGA WITH DASIA AND VARIA AND YPOGEGRAMMENI\n+1FA4; F; 1F64 03B9; # GREEK SMALL LETTER OMEGA WITH PSILI AND OXIA AND YPOGEGRAMMENI\n+1FA5; F; 1F65 03B9; # GREEK SMALL LETTER OMEGA WITH DASIA AND OXIA AND YPOGEGRAMMENI\n+1FA6; F; 1F66 03B9; # GREEK SMALL LETTER OMEGA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI\n+1FA7; F; 1F67 03B9; # GREEK SMALL LETTER OMEGA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI\n+1FA8; F; 1F60 03B9; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PROSGEGRAMMENI\n+1FA8; S; 1FA0; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PROSGEGRAMMENI\n+1FA9; F; 1F61 03B9; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PROSGEGRAMMENI\n+1FA9; S; 1FA1; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PROSGEGRAMMENI\n+1FAA; F; 1F62 03B9; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1FAA; S; 1FA2; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1FAB; F; 1F63 03B9; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1FAB; S; 1FA3; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1FAC; F; 1F64 03B9; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1FAC; S; 1FA4; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1FAD; F; 1F65 03B9; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1FAD; S; 1FA5; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1FAE; F; 1F66 03B9; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1FAE; S; 1FA6; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1FAF; F; 1F67 03B9; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1FAF; S; 1FA7; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1FB2; F; 1F70 03B9; # GREEK SMALL LETTER ALPHA WITH VARIA AND YPOGEGRAMMENI\n+1FB3; F; 03B1 03B9; # GREEK SMALL LETTER ALPHA WITH YPOGEGRAMMENI\n+1FB4; F; 03AC 03B9; # GREEK SMALL LETTER ALPHA WITH OXIA AND YPOGEGRAMMENI\n+1FB6; F; 03B1 0342; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI\n+1FB7; F; 03B1 0342 03B9; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI AND YPOGEGRAMMENI\n+1FB8; C; 1FB0; # GREEK CAPITAL LETTER ALPHA WITH VRACHY\n+1FB9; C; 1FB1; # GREEK CAPITAL LETTER ALPHA WITH MACRON\n+1FBA; C; 1F70; # GREEK CAPITAL LETTER ALPHA WITH VARIA\n+1FBB; C; 1F71; # GREEK CAPITAL LETTER ALPHA WITH OXIA\n+1FBC; F; 03B1 03B9; # GREEK CAPITAL LETTER ALPHA WITH PROSGEGRAMMENI\n+1FBC; S; 1FB3; # GREEK CAPITAL LETTER ALPHA WITH PROSGEGRAMMENI\n+1FBE; C; 03B9; # GREEK PROSGEGRAMMENI\n+1FC2; F; 1F74 03B9; # GREEK SMALL LETTER ETA WITH VARIA AND YPOGEGRAMMENI\n+1FC3; F; 03B7 03B9; # GREEK SMALL LETTER ETA WITH YPOGEGRAMMENI\n+1FC4; F; 03AE 03B9; # GREEK SMALL LETTER ETA WITH OXIA AND YPOGEGRAMMENI\n+1FC6; F; 03B7 0342; # GREEK SMALL LETTER ETA WITH PERISPOMENI\n+1FC7; F; 03B7 0342 03B9; # GREEK SMALL LETTER ETA WITH PERISPOMENI AND YPOGEGRAMMENI\n+1FC8; C; 1F72; # GREEK CAPITAL LETTER EPSILON WITH VARIA\n+1FC9; C; 1F73; # GREEK CAPITAL LETTER EPSILON WITH OXIA\n+1FCA; C; 1F74; # GREEK CAPITAL LETTER ETA WITH VARIA\n+1FCB; C; 1F75; # GREEK CAPITAL LETTER ETA WITH OXIA\n+1FCC; F; 03B7 03B9; # GREEK CAPITAL LETTER ETA WITH PROSGEGRAMMENI\n+1FCC; S; 1FC3; # GREEK CAPITAL LETTER ETA WITH PROSGEGRAMMENI\n+1FD2; F; 03B9 0308 0300; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND VARIA\n+1FD3; F; 03B9 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND OXIA\n+1FD3; S; 0390; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND OXIA\n+1FD6; F; 03B9 0342; # GREEK SMALL LETTER IOTA WITH PERISPOMENI\n+1FD7; F; 03B9 0308 0342; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND PERISPOMENI\n+1FD8; C; 1FD0; # GREEK CAPITAL LETTER IOTA WITH VRACHY\n+1FD9; C; 1FD1; # GREEK CAPITAL LETTER IOTA WITH MACRON\n+1FDA; C; 1F76; # GREEK CAPITAL LETTER IOTA WITH VARIA\n+1FDB; C; 1F77; # GREEK CAPITAL LETTER IOTA WITH OXIA\n+1FE2; F; 03C5 0308 0300; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND VARIA\n+1FE3; F; 03C5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND OXIA\n+1FE3; S; 03B0; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND OXIA\n+1FE4; F; 03C1 0313; # GREEK SMALL LETTER RHO WITH PSILI\n+1FE6; F; 03C5 0342; # GREEK SMALL LETTER UPSILON WITH PERISPOMENI\n+1FE7; F; 03C5 0308 0342; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND PERISPOMENI\n+1FE8; C; 1FE0; # GREEK CAPITAL LETTER UPSILON WITH VRACHY\n+1FE9; C; 1FE1; # GREEK CAPITAL LETTER UPSILON WITH MACRON\n+1FEA; C; 1F7A; # GREEK CAPITAL LETTER UPSILON WITH VARIA\n+1FEB; C; 1F7B; # GREEK CAPITAL LETTER UPSILON WITH OXIA\n+1FEC; C; 1FE5; # GREEK CAPITAL LETTER RHO WITH DASIA\n+1FF2; F; 1F7C 03B9; # GREEK SMALL LETTER OMEGA WITH VARIA AND YPOGEGRAMMENI\n+1FF3; F; 03C9 03B9; # GREEK SMALL LETTER OMEGA WITH YPOGEGRAMMENI\n+1FF4; F; 03CE 03B9; # GREEK SMALL LETTER OMEGA WITH OXIA AND YPOGEGRAMMENI\n+1FF6; F; 03C9 0342; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI\n+1FF7; F; 03C9 0342 03B9; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI AND YPOGEGRAMMENI\n+1FF8; C; 1F78; # GREEK CAPITAL LETTER OMICRON WITH VARIA\n+1FF9; C; 1F79; # GREEK CAPITAL LETTER OMICRON WITH OXIA\n+1FFA; C; 1F7C; # GREEK CAPITAL LETTER OMEGA WITH VARIA\n+1FFB; C; 1F7D; # GREEK CAPITAL LETTER OMEGA WITH OXIA\n+1FFC; F; 03C9 03B9; # GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI\n+1FFC; S; 1FF3; # GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI\n+2126; C; 03C9; # OHM SIGN\n+212A; C; 006B; # KELVIN SIGN\n+212B; C; 00E5; # ANGSTROM SIGN\n+2132; C; 214E; # TURNED CAPITAL F\n+2160; C; 2170; # ROMAN NUMERAL ONE\n+2161; C; 2171; # ROMAN NUMERAL TWO\n+2162; C; 2172; # ROMAN NUMERAL THREE\n+2163; C; 2173; # ROMAN NUMERAL FOUR\n+2164; C; 2174; # ROMAN NUMERAL FIVE\n+2165; C; 2175; # ROMAN NUMERAL SIX\n+2166; C; 2176; # ROMAN NUMERAL SEVEN\n+2167; C; 2177; # ROMAN NUMERAL EIGHT\n+2168; C; 2178; # ROMAN NUMERAL NINE\n+2169; C; 2179; # ROMAN NUMERAL TEN\n+216A; C; 217A; # ROMAN NUMERAL ELEVEN\n+216B; C; 217B; # ROMAN NUMERAL TWELVE\n+216C; C; 217C; # ROMAN NUMERAL FIFTY\n+216D; C; 217D; # ROMAN NUMERAL ONE HUNDRED\n+216E; C; 217E; # ROMAN NUMERAL FIVE HUNDRED\n+216F; C; 217F; # ROMAN NUMERAL ONE THOUSAND\n+2183; C; 2184; # ROMAN NUMERAL REVERSED ONE HUNDRED\n+24B6; C; 24D0; # CIRCLED LATIN CAPITAL LETTER A\n+24B7; C; 24D1; # CIRCLED LATIN CAPITAL LETTER B\n+24B8; C; 24D2; # CIRCLED LATIN CAPITAL LETTER C\n+24B9; C; 24D3; # CIRCLED LATIN CAPITAL LETTER D\n+24BA; C; 24D4; # CIRCLED LATIN CAPITAL LETTER E\n+24BB; C; 24D5; # CIRCLED LATIN CAPITAL LETTER F\n+24BC; C; 24D6; # CIRCLED LATIN CAPITAL LETTER G\n+24BD; C; 24D7; # CIRCLED LATIN CAPITAL LETTER H\n+24BE; C; 24D8; # CIRCLED LATIN CAPITAL LETTER I\n+24BF; C; 24D9; # CIRCLED LATIN CAPITAL LETTER J\n+24C0; C; 24DA; # CIRCLED LATIN CAPITAL LETTER K\n+24C1; C; 24DB; # CIRCLED LATIN CAPITAL LETTER L\n+24C2; C; 24DC; # CIRCLED LATIN CAPITAL LETTER M\n+24C3; C; 24DD; # CIRCLED LATIN CAPITAL LETTER N\n+24C4; C; 24DE; # CIRCLED LATIN CAPITAL LETTER O\n+24C5; C; 24DF; # CIRCLED LATIN CAPITAL LETTER P\n+24C6; C; 24E0; # CIRCLED LATIN CAPITAL LETTER Q\n+24C7; C; 24E1; # CIRCLED LATIN CAPITAL LETTER R\n+24C8; C; 24E2; # CIRCLED LATIN CAPITAL LETTER S\n+24C9; C; 24E3; # CIRCLED LATIN CAPITAL LETTER T\n+24CA; C; 24E4; # CIRCLED LATIN CAPITAL LETTER U\n+24CB; C; 24E5; # CIRCLED LATIN CAPITAL LETTER V\n+24CC; C; 24E6; # CIRCLED LATIN CAPITAL LETTER W\n+24CD; C; 24E7; # CIRCLED LATIN CAPITAL LETTER X\n+24CE; C; 24E8; # CIRCLED LATIN CAPITAL LETTER Y\n+24CF; C; 24E9; # CIRCLED LATIN CAPITAL LETTER Z\n+2C00; C; 2C30; # GLAGOLITIC CAPITAL LETTER AZU\n+2C01; C; 2C31; # GLAGOLITIC CAPITAL LETTER BUKY\n+2C02; C; 2C32; # GLAGOLITIC CAPITAL LETTER VEDE\n+2C03; C; 2C33; # GLAGOLITIC CAPITAL LETTER GLAGOLI\n+2C04; C; 2C34; # GLAGOLITIC CAPITAL LETTER DOBRO\n+2C05; C; 2C35; # GLAGOLITIC CAPITAL LETTER YESTU\n+2C06; C; 2C36; # GLAGOLITIC CAPITAL LETTER ZHIVETE\n+2C07; C; 2C37; # GLAGOLITIC CAPITAL LETTER DZELO\n+2C08; C; 2C38; # GLAGOLITIC CAPITAL LETTER ZEMLJA\n+2C09; C; 2C39; # GLAGOLITIC CAPITAL LETTER IZHE\n+2C0A; C; 2C3A; # GLAGOLITIC CAPITAL LETTER INITIAL IZHE\n+2C0B; C; 2C3B; # GLAGOLITIC CAPITAL LETTER I\n+2C0C; C; 2C3C; # GLAGOLITIC CAPITAL LETTER DJERVI\n+2C0D; C; 2C3D; # GLAGOLITIC CAPITAL LETTER KAKO\n+2C0E; C; 2C3E; # GLAGOLITIC CAPITAL LETTER LJUDIJE\n+2C0F; C; 2C3F; # GLAGOLITIC CAPITAL LETTER MYSLITE\n+2C10; C; 2C40; # GLAGOLITIC CAPITAL LETTER NASHI\n+2C11; C; 2C41; # GLAGOLITIC CAPITAL LETTER ONU\n+2C12; C; 2C42; # GLAGOLITIC CAPITAL LETTER POKOJI\n+2C13; C; 2C43; # GLAGOLITIC CAPITAL LETTER RITSI\n+2C14; C; 2C44; # GLAGOLITIC CAPITAL LETTER SLOVO\n+2C15; C; 2C45; # GLAGOLITIC CAPITAL LETTER TVRIDO\n+2C16; C; 2C46; # GLAGOLITIC CAPITAL LETTER UKU\n+2C17; C; 2C47; # GLAGOLITIC CAPITAL LETTER FRITU\n+2C18; C; 2C48; # GLAGOLITIC CAPITAL LETTER HERU\n+2C19; C; 2C49; # GLAGOLITIC CAPITAL LETTER OTU\n+2C1A; C; 2C4A; # GLAGOLITIC CAPITAL LETTER PE\n+2C1B; C; 2C4B; # GLAGOLITIC CAPITAL LETTER SHTA\n+2C1C; C; 2C4C; # GLAGOLITIC CAPITAL LETTER TSI\n+2C1D; C; 2C4D; # GLAGOLITIC CAPITAL LETTER CHRIVI\n+2C1E; C; 2C4E; # GLAGOLITIC CAPITAL LETTER SHA\n+2C1F; C; 2C4F; # GLAGOLITIC CAPITAL LETTER YERU\n+2C20; C; 2C50; # GLAGOLITIC CAPITAL LETTER YERI\n+2C21; C; 2C51; # GLAGOLITIC CAPITAL LETTER YATI\n+2C22; C; 2C52; # GLAGOLITIC CAPITAL LETTER SPIDERY HA\n+2C23; C; 2C53; # GLAGOLITIC CAPITAL LETTER YU\n+2C24; C; 2C54; # GLAGOLITIC CAPITAL LETTER SMALL YUS\n+2C25; C; 2C55; # GLAGOLITIC CAPITAL LETTER SMALL YUS WITH TAIL\n+2C26; C; 2C56; # GLAGOLITIC CAPITAL LETTER YO\n+2C27; C; 2C57; # GLAGOLITIC CAPITAL LETTER IOTATED SMALL YUS\n+2C28; C; 2C58; # GLAGOLITIC CAPITAL LETTER BIG YUS\n+2C29; C; 2C59; # GLAGOLITIC CAPITAL LETTER IOTATED BIG YUS\n+2C2A; C; 2C5A; # GLAGOLITIC CAPITAL LETTER FITA\n+2C2B; C; 2C5B; # GLAGOLITIC CAPITAL LETTER IZHITSA\n+2C2C; C; 2C5C; # GLAGOLITIC CAPITAL LETTER SHTAPIC\n+2C2D; C; 2C5D; # GLAGOLITIC CAPITAL LETTER TROKUTASTI A\n+2C2E; C; 2C5E; # GLAGOLITIC CAPITAL LETTER LATINATE MYSLITE\n+2C2F; C; 2C5F; # GLAGOLITIC CAPITAL LETTER CAUDATE CHRIVI\n+2C60; C; 2C61; # LATIN CAPITAL LETTER L WITH DOUBLE BAR\n+2C62; C; 026B; # LATIN CAPITAL LETTER L WITH MIDDLE TILDE\n+2C63; C; 1D7D; # LATIN CAPITAL LETTER P WITH STROKE\n+2C64; C; 027D; # LATIN CAPITAL LETTER R WITH TAIL\n+2C67; C; 2C68; # LATIN CAPITAL LETTER H WITH DESCENDER\n+2C69; C; 2C6A; # LATIN CAPITAL LETTER K WITH DESCENDER\n+2C6B; C; 2C6C; # LATIN CAPITAL LETTER Z WITH DESCENDER\n+2C6D; C; 0251; # LATIN CAPITAL LETTER ALPHA\n+2C6E; C; 0271; # LATIN CAPITAL LETTER M WITH HOOK\n+2C6F; C; 0250; # LATIN CAPITAL LETTER TURNED A\n+2C70; C; 0252; # LATIN CAPITAL LETTER TURNED ALPHA\n+2C72; C; 2C73; # LATIN CAPITAL LETTER W WITH HOOK\n+2C75; C; 2C76; # LATIN CAPITAL LETTER HALF H\n+2C7E; C; 023F; # LATIN CAPITAL LETTER S WITH SWASH TAIL\n+2C7F; C; 0240; # LATIN CAPITAL LETTER Z WITH SWASH TAIL\n+2C80; C; 2C81; # COPTIC CAPITAL LETTER ALFA\n+2C82; C; 2C83; # COPTIC CAPITAL LETTER VIDA\n+2C84; C; 2C85; # COPTIC CAPITAL LETTER GAMMA\n+2C86; C; 2C87; # COPTIC CAPITAL LETTER DALDA\n+2C88; C; 2C89; # COPTIC CAPITAL LETTER EIE\n+2C8A; C; 2C8B; # COPTIC CAPITAL LETTER SOU\n+2C8C; C; 2C8D; # COPTIC CAPITAL LETTER ZATA\n+2C8E; C; 2C8F; # COPTIC CAPITAL LETTER HATE\n+2C90; C; 2C91; # COPTIC CAPITAL LETTER THETHE\n+2C92; C; 2C93; # COPTIC CAPITAL LETTER IAUDA\n+2C94; C; 2C95; # COPTIC CAPITAL LETTER KAPA\n+2C96; C; 2C97; # COPTIC CAPITAL LETTER LAULA\n+2C98; C; 2C99; # COPTIC CAPITAL LETTER MI\n+2C9A; C; 2C9B; # COPTIC CAPITAL LETTER NI\n+2C9C; C; 2C9D; # COPTIC CAPITAL LETTER KSI\n+2C9E; C; 2C9F; # COPTIC CAPITAL LETTER O\n+2CA0; C; 2CA1; # COPTIC CAPITAL LETTER PI\n+2CA2; C; 2CA3; # COPTIC CAPITAL LETTER RO\n+2CA4; C; 2CA5; # COPTIC CAPITAL LETTER SIMA\n+2CA6; C; 2CA7; # COPTIC CAPITAL LETTER TAU\n+2CA8; C; 2CA9; # COPTIC CAPITAL LETTER UA\n+2CAA; C; 2CAB; # COPTIC CAPITAL LETTER FI\n+2CAC; C; 2CAD; # COPTIC CAPITAL LETTER KHI\n+2CAE; C; 2CAF; # COPTIC CAPITAL LETTER PSI\n+2CB0; C; 2CB1; # COPTIC CAPITAL LETTER OOU\n+2CB2; C; 2CB3; # COPTIC CAPITAL LETTER DIALECT-P ALEF\n+2CB4; C; 2CB5; # COPTIC CAPITAL LETTER OLD COPTIC AIN\n+2CB6; C; 2CB7; # COPTIC CAPITAL LETTER CRYPTOGRAMMIC EIE\n+2CB8; C; 2CB9; # COPTIC CAPITAL LETTER DIALECT-P KAPA\n+2CBA; C; 2CBB; # COPTIC CAPITAL LETTER DIALECT-P NI\n+2CBC; C; 2CBD; # COPTIC CAPITAL LETTER CRYPTOGRAMMIC NI\n+2CBE; C; 2CBF; # COPTIC CAPITAL LETTER OLD COPTIC OOU\n+2CC0; C; 2CC1; # COPTIC CAPITAL LETTER SAMPI\n+2CC2; C; 2CC3; # COPTIC CAPITAL LETTER CROSSED SHEI\n+2CC4; C; 2CC5; # COPTIC CAPITAL LETTER OLD COPTIC SHEI\n+2CC6; C; 2CC7; # COPTIC CAPITAL LETTER OLD COPTIC ESH\n+2CC8; C; 2CC9; # COPTIC CAPITAL LETTER AKHMIMIC KHEI\n+2CCA; C; 2CCB; # COPTIC CAPITAL LETTER DIALECT-P HORI\n+2CCC; C; 2CCD; # COPTIC CAPITAL LETTER OLD COPTIC HORI\n+2CCE; C; 2CCF; # COPTIC CAPITAL LETTER OLD COPTIC HA\n+2CD0; C; 2CD1; # COPTIC CAPITAL LETTER L-SHAPED HA\n+2CD2; C; 2CD3; # COPTIC CAPITAL LETTER OLD COPTIC HEI\n+2CD4; C; 2CD5; # COPTIC CAPITAL LETTER OLD COPTIC HAT\n+2CD6; C; 2CD7; # COPTIC CAPITAL LETTER OLD COPTIC GANGIA\n+2CD8; C; 2CD9; # COPTIC CAPITAL LETTER OLD COPTIC DJA\n+2CDA; C; 2CDB; # COPTIC CAPITAL LETTER OLD COPTIC SHIMA\n+2CDC; C; 2CDD; # COPTIC CAPITAL LETTER OLD NUBIAN SHIMA\n+2CDE; C; 2CDF; # COPTIC CAPITAL LETTER OLD NUBIAN NGI\n+2CE0; C; 2CE1; # COPTIC CAPITAL LETTER OLD NUBIAN NYI\n+2CE2; C; 2CE3; # COPTIC CAPITAL LETTER OLD NUBIAN WAU\n+2CEB; C; 2CEC; # COPTIC CAPITAL LETTER CRYPTOGRAMMIC SHEI\n+2CED; C; 2CEE; # COPTIC CAPITAL LETTER CRYPTOGRAMMIC GANGIA\n+2CF2; C; 2CF3; # COPTIC CAPITAL LETTER BOHAIRIC KHEI\n+A640; C; A641; # CYRILLIC CAPITAL LETTER ZEMLYA\n+A642; C; A643; # CYRILLIC CAPITAL LETTER DZELO\n+A644; C; A645; # CYRILLIC CAPITAL LETTER REVERSED DZE\n+A646; C; A647; # CYRILLIC CAPITAL LETTER IOTA\n+A648; C; A649; # CYRILLIC CAPITAL LETTER DJERV\n+A64A; C; A64B; # CYRILLIC CAPITAL LETTER MONOGRAPH UK\n+A64C; C; A64D; # CYRILLIC CAPITAL LETTER BROAD OMEGA\n+A64E; C; A64F; # CYRILLIC CAPITAL LETTER NEUTRAL YER\n+A650; C; A651; # CYRILLIC CAPITAL LETTER YERU WITH BACK YER\n+A652; C; A653; # CYRILLIC CAPITAL LETTER IOTIFIED YAT\n+A654; C; A655; # CYRILLIC CAPITAL LETTER REVERSED YU\n+A656; C; A657; # CYRILLIC CAPITAL LETTER IOTIFIED A\n+A658; C; A659; # CYRILLIC CAPITAL LETTER CLOSED LITTLE YUS\n+A65A; C; A65B; # CYRILLIC CAPITAL LETTER BLENDED YUS\n+A65C; C; A65D; # CYRILLIC CAPITAL LETTER IOTIFIED CLOSED LITTLE YUS\n+A65E; C; A65F; # CYRILLIC CAPITAL LETTER YN\n+A660; C; A661; # CYRILLIC CAPITAL LETTER REVERSED TSE\n+A662; C; A663; # CYRILLIC CAPITAL LETTER SOFT DE\n+A664; C; A665; # CYRILLIC CAPITAL LETTER SOFT EL\n+A666; C; A667; # CYRILLIC CAPITAL LETTER SOFT EM\n+A668; C; A669; # CYRILLIC CAPITAL LETTER MONOCULAR O\n+A66A; C; A66B; # CYRILLIC CAPITAL LETTER BINOCULAR O\n+A66C; C; A66D; # CYRILLIC CAPITAL LETTER DOUBLE MONOCULAR O\n+A680; C; A681; # CYRILLIC CAPITAL LETTER DWE\n+A682; C; A683; # CYRILLIC CAPITAL LETTER DZWE\n+A684; C; A685; # CYRILLIC CAPITAL LETTER ZHWE\n+A686; C; A687; # CYRILLIC CAPITAL LETTER CCHE\n+A688; C; A689; # CYRILLIC CAPITAL LETTER DZZE\n+A68A; C; A68B; # CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\n+A68C; C; A68D; # CYRILLIC CAPITAL LETTER TWE\n+A68E; C; A68F; # CYRILLIC CAPITAL LETTER TSWE\n+A690; C; A691; # CYRILLIC CAPITAL LETTER TSSE\n+A692; C; A693; # CYRILLIC CAPITAL LETTER TCHE\n+A694; C; A695; # CYRILLIC CAPITAL LETTER HWE\n+A696; C; A697; # CYRILLIC CAPITAL LETTER SHWE\n+A698; C; A699; # CYRILLIC CAPITAL LETTER DOUBLE O\n+A69A; C; A69B; # CYRILLIC CAPITAL LETTER CROSSED O\n+A722; C; A723; # LATIN CAPITAL LETTER EGYPTOLOGICAL ALEF\n+A724; C; A725; # LATIN CAPITAL LETTER EGYPTOLOGICAL AIN\n+A726; C; A727; # LATIN CAPITAL LETTER HENG\n+A728; C; A729; # LATIN CAPITAL LETTER TZ\n+A72A; C; A72B; # LATIN CAPITAL LETTER TRESILLO\n+A72C; C; A72D; # LATIN CAPITAL LETTER CUATRILLO\n+A72E; C; A72F; # LATIN CAPITAL LETTER CUATRILLO WITH COMMA\n+A732; C; A733; # LATIN CAPITAL LETTER AA\n+A734; C; A735; # LATIN CAPITAL LETTER AO\n+A736; C; A737; # LATIN CAPITAL LETTER AU\n+A738; C; A739; # LATIN CAPITAL LETTER AV\n+A73A; C; A73B; # LATIN CAPITAL LETTER AV WITH HORIZONTAL BAR\n+A73C; C; A73D; # LATIN CAPITAL LETTER AY\n+A73E; C; A73F; # LATIN CAPITAL LETTER REVERSED C WITH DOT\n+A740; C; A741; # LATIN CAPITAL LETTER K WITH STROKE\n+A742; C; A743; # LATIN CAPITAL LETTER K WITH DIAGONAL STROKE\n+A744; C; A745; # LATIN CAPITAL LETTER K WITH STROKE AND DIAGONAL STROKE\n+A746; C; A747; # LATIN CAPITAL LETTER BROKEN L\n+A748; C; A749; # LATIN CAPITAL LETTER L WITH HIGH STROKE\n+A74A; C; A74B; # LATIN CAPITAL LETTER O WITH LONG STROKE OVERLAY\n+A74C; C; A74D; # LATIN CAPITAL LETTER O WITH LOOP\n+A74E; C; A74F; # LATIN CAPITAL LETTER OO\n+A750; C; A751; # LATIN CAPITAL LETTER P WITH STROKE THROUGH DESCENDER\n+A752; C; A753; # LATIN CAPITAL LETTER P WITH FLOURISH\n+A754; C; A755; # LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\n+A756; C; A757; # LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\n+A758; C; A759; # LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\n+A75A; C; A75B; # LATIN CAPITAL LETTER R ROTUNDA\n+A75C; C; A75D; # LATIN CAPITAL LETTER RUM ROTUNDA\n+A75E; C; A75F; # LATIN CAPITAL LETTER V WITH DIAGONAL STROKE\n+A760; C; A761; # LATIN CAPITAL LETTER VY\n+A762; C; A763; # LATIN CAPITAL LETTER VISIGOTHIC Z\n+A764; C; A765; # LATIN CAPITAL LETTER THORN WITH STROKE\n+A766; C; A767; # LATIN CAPITAL LETTER THORN WITH STROKE THROUGH DESCENDER\n+A768; C; A769; # LATIN CAPITAL LETTER VEND\n+A76A; C; A76B; # LATIN CAPITAL LETTER ET\n+A76C; C; A76D; # LATIN CAPITAL LETTER IS\n+A76E; C; A76F; # LATIN CAPITAL LETTER CON\n+A779; C; A77A; # LATIN CAPITAL LETTER INSULAR D\n+A77B; C; A77C; # LATIN CAPITAL LETTER INSULAR F\n+A77D; C; 1D79; # LATIN CAPITAL LETTER INSULAR G\n+A77E; C; A77F; # LATIN CAPITAL LETTER TURNED INSULAR G\n+A780; C; A781; # LATIN CAPITAL LETTER TURNED L\n+A782; C; A783; # LATIN CAPITAL LETTER INSULAR R\n+A784; C; A785; # LATIN CAPITAL LETTER INSULAR S\n+A786; C; A787; # LATIN CAPITAL LETTER INSULAR T\n+A78B; C; A78C; # LATIN CAPITAL LETTER SALTILLO\n+A78D; C; 0265; # LATIN CAPITAL LETTER TURNED H\n+A790; C; A791; # LATIN CAPITAL LETTER N WITH DESCENDER\n+A792; C; A793; # LATIN CAPITAL LETTER C WITH BAR\n+A796; C; A797; # LATIN CAPITAL LETTER B WITH FLOURISH\n+A798; C; A799; # LATIN CAPITAL LETTER F WITH STROKE\n+A79A; C; A79B; # LATIN CAPITAL LETTER VOLAPUK AE\n+A79C; C; A79D; # LATIN CAPITAL LETTER VOLAPUK OE\n+A79E; C; A79F; # LATIN CAPITAL LETTER VOLAPUK UE\n+A7A0; C; A7A1; # LATIN CAPITAL LETTER G WITH OBLIQUE STROKE\n+A7A2; C; A7A3; # LATIN CAPITAL LETTER K WITH OBLIQUE STROKE\n+A7A4; C; A7A5; # LATIN CAPITAL LETTER N WITH OBLIQUE STROKE\n+A7A6; C; A7A7; # LATIN CAPITAL LETTER R WITH OBLIQUE STROKE\n+A7A8; C; A7A9; # LATIN CAPITAL LETTER S WITH OBLIQUE STROKE\n+A7AA; C; 0266; # LATIN CAPITAL LETTER H WITH HOOK\n+A7AB; C; 025C; # LATIN CAPITAL LETTER REVERSED OPEN E\n+A7AC; C; 0261; # LATIN CAPITAL LETTER SCRIPT G\n+A7AD; C; 026C; # LATIN CAPITAL LETTER L WITH BELT\n+A7AE; C; 026A; # LATIN CAPITAL LETTER SMALL CAPITAL I\n+A7B0; C; 029E; # LATIN CAPITAL LETTER TURNED K\n+A7B1; C; 0287; # LATIN CAPITAL LETTER TURNED T\n+A7B2; C; 029D; # LATIN CAPITAL LETTER J WITH CROSSED-TAIL\n+A7B3; C; AB53; # LATIN CAPITAL LETTER CHI\n+A7B4; C; A7B5; # LATIN CAPITAL LETTER BETA\n+A7B6; C; A7B7; # LATIN CAPITAL LETTER OMEGA\n+A7B8; C; A7B9; # LATIN CAPITAL LETTER U WITH STROKE\n+A7BA; C; A7BB; # LATIN CAPITAL LETTER GLOTTAL A\n+A7BC; C; A7BD; # LATIN CAPITAL LETTER GLOTTAL I\n+A7BE; C; A7BF; # LATIN CAPITAL LETTER GLOTTAL U\n+A7C0; C; A7C1; # LATIN CAPITAL LETTER OLD POLISH O\n+A7C2; C; A7C3; # LATIN CAPITAL LETTER ANGLICANA W\n+A7C4; C; A794; # LATIN CAPITAL LETTER C WITH PALATAL HOOK\n+A7C5; C; 0282; # LATIN CAPITAL LETTER S WITH HOOK\n+A7C6; C; 1D8E; # LATIN CAPITAL LETTER Z WITH PALATAL HOOK\n+A7C7; C; A7C8; # LATIN CAPITAL LETTER D WITH SHORT STROKE OVERLAY\n+A7C9; C; A7CA; # LATIN CAPITAL LETTER S WITH SHORT STROKE OVERLAY\n+A7CB; C; 0264; # LATIN CAPITAL LETTER RAMS HORN\n+A7CC; C; A7CD; # LATIN CAPITAL LETTER S WITH DIAGONAL STROKE\n+A7D0; C; A7D1; # LATIN CAPITAL LETTER CLOSED INSULAR G\n+A7D6; C; A7D7; # LATIN CAPITAL LETTER MIDDLE SCOTS S\n+A7D8; C; A7D9; # LATIN CAPITAL LETTER SIGMOID S\n+A7DA; C; A7DB; # LATIN CAPITAL LETTER LAMBDA\n+A7DC; C; 019B; # LATIN CAPITAL LETTER LAMBDA WITH STROKE\n+A7F5; C; A7F6; # LATIN CAPITAL LETTER REVERSED HALF H\n+AB70; C; 13A0; # CHEROKEE SMALL LETTER A\n+AB71; C; 13A1; # CHEROKEE SMALL LETTER E\n+AB72; C; 13A2; # CHEROKEE SMALL LETTER I\n+AB73; C; 13A3; # CHEROKEE SMALL LETTER O\n+AB74; C; 13A4; # CHEROKEE SMALL LETTER U\n+AB75; C; 13A5; # CHEROKEE SMALL LETTER V\n+AB76; C; 13A6; # CHEROKEE SMALL LETTER GA\n+AB77; C; 13A7; # CHEROKEE SMALL LETTER KA\n+AB78; C; 13A8; # CHEROKEE SMALL LETTER GE\n+AB79; C; 13A9; # CHEROKEE SMALL LETTER GI\n+AB7A; C; 13AA; # CHEROKEE SMALL LETTER GO\n+AB7B; C; 13AB; # CHEROKEE SMALL LETTER GU\n+AB7C; C; 13AC; # CHEROKEE SMALL LETTER GV\n+AB7D; C; 13AD; # CHEROKEE SMALL LETTER HA\n+AB7E; C; 13AE; # CHEROKEE SMALL LETTER HE\n+AB7F; C; 13AF; # CHEROKEE SMALL LETTER HI\n+AB80; C; 13B0; # CHEROKEE SMALL LETTER HO\n+AB81; C; 13B1; # CHEROKEE SMALL LETTER HU\n+AB82; C; 13B2; # CHEROKEE SMALL LETTER HV\n+AB83; C; 13B3; # CHEROKEE SMALL LETTER LA\n+AB84; C; 13B4; # CHEROKEE SMALL LETTER LE\n+AB85; C; 13B5; # CHEROKEE SMALL LETTER LI\n+AB86; C; 13B6; # CHEROKEE SMALL LETTER LO\n+AB87; C; 13B7; # CHEROKEE SMALL LETTER LU\n+AB88; C; 13B8; # CHEROKEE SMALL LETTER LV\n+AB89; C; 13B9; # CHEROKEE SMALL LETTER MA\n+AB8A; C; 13BA; # CHEROKEE SMALL LETTER ME\n+AB8B; C; 13BB; # CHEROKEE SMALL LETTER MI\n+AB8C; C; 13BC; # CHEROKEE SMALL LETTER MO\n+AB8D; C; 13BD; # CHEROKEE SMALL LETTER MU\n+AB8E; C; 13BE; # CHEROKEE SMALL LETTER NA\n+AB8F; C; 13BF; # CHEROKEE SMALL LETTER HNA\n+AB90; C; 13C0; # CHEROKEE SMALL LETTER NAH\n+AB91; C; 13C1; # CHEROKEE SMALL LETTER NE\n+AB92; C; 13C2; # CHEROKEE SMALL LETTER NI\n+AB93; C; 13C3; # CHEROKEE SMALL LETTER NO\n+AB94; C; 13C4; # CHEROKEE SMALL LETTER NU\n+AB95; C; 13C5; # CHEROKEE SMALL LETTER NV\n+AB96; C; 13C6; # CHEROKEE SMALL LETTER QUA\n+AB97; C; 13C7; # CHEROKEE SMALL LETTER QUE\n+AB98; C; 13C8; # CHEROKEE SMALL LETTER QUI\n+AB99; C; 13C9; # CHEROKEE SMALL LETTER QUO\n+AB9A; C; 13CA; # CHEROKEE SMALL LETTER QUU\n+AB9B; C; 13CB; # CHEROKEE SMALL LETTER QUV\n+AB9C; C; 13CC; # CHEROKEE SMALL LETTER SA\n+AB9D; C; 13CD; # CHEROKEE SMALL LETTER S\n+AB9E; C; 13CE; # CHEROKEE SMALL LETTER SE\n+AB9F; C; 13CF; # CHEROKEE SMALL LETTER SI\n+ABA0; C; 13D0; # CHEROKEE SMALL LETTER SO\n+ABA1; C; 13D1; # CHEROKEE SMALL LETTER SU\n+ABA2; C; 13D2; # CHEROKEE SMALL LETTER SV\n+ABA3; C; 13D3; # CHEROKEE SMALL LETTER DA\n+ABA4; C; 13D4; # CHEROKEE SMALL LETTER TA\n+ABA5; C; 13D5; # CHEROKEE SMALL LETTER DE\n+ABA6; C; 13D6; # CHEROKEE SMALL LETTER TE\n+ABA7; C; 13D7; # CHEROKEE SMALL LETTER DI\n+ABA8; C; 13D8; # CHEROKEE SMALL LETTER TI\n+ABA9; C; 13D9; # CHEROKEE SMALL LETTER DO\n+ABAA; C; 13DA; # CHEROKEE SMALL LETTER DU\n+ABAB; C; 13DB; # CHEROKEE SMALL LETTER DV\n+ABAC; C; 13DC; # CHEROKEE SMALL LETTER DLA\n+ABAD; C; 13DD; # CHEROKEE SMALL LETTER TLA\n+ABAE; C; 13DE; # CHEROKEE SMALL LETTER TLE\n+ABAF; C; 13DF; # CHEROKEE SMALL LETTER TLI\n+ABB0; C; 13E0; # CHEROKEE SMALL LETTER TLO\n+ABB1; C; 13E1; # CHEROKEE SMALL LETTER TLU\n+ABB2; C; 13E2; # CHEROKEE SMALL LETTER TLV\n+ABB3; C; 13E3; # CHEROKEE SMALL LETTER TSA\n+ABB4; C; 13E4; # CHEROKEE SMALL LETTER TSE\n+ABB5; C; 13E5; # CHEROKEE SMALL LETTER TSI\n+ABB6; C; 13E6; # CHEROKEE SMALL LETTER TSO\n+ABB7; C; 13E7; # CHEROKEE SMALL LETTER TSU\n+ABB8; C; 13E8; # CHEROKEE SMALL LETTER TSV\n+ABB9; C; 13E9; # CHEROKEE SMALL LETTER WA\n+ABBA; C; 13EA; # CHEROKEE SMALL LETTER WE\n+ABBB; C; 13EB; # CHEROKEE SMALL LETTER WI\n+ABBC; C; 13EC; # CHEROKEE SMALL LETTER WO\n+ABBD; C; 13ED; # CHEROKEE SMALL LETTER WU\n+ABBE; C; 13EE; # CHEROKEE SMALL LETTER WV\n+ABBF; C; 13EF; # CHEROKEE SMALL LETTER YA\n+FB00; F; 0066 0066; # LATIN SMALL LIGATURE FF\n+FB01; F; 0066 0069; # LATIN SMALL LIGATURE FI\n+FB02; F; 0066 006C; # LATIN SMALL LIGATURE FL\n+FB03; F; 0066 0066 0069; # LATIN SMALL LIGATURE FFI\n+FB04; F; 0066 0066 006C; # LATIN SMALL LIGATURE FFL\n+FB05; F; 0073 0074; # LATIN SMALL LIGATURE LONG S T\n+FB05; S; FB06; # LATIN SMALL LIGATURE LONG S T\n+FB06; F; 0073 0074; # LATIN SMALL LIGATURE ST\n+FB13; F; 0574 0576; # ARMENIAN SMALL LIGATURE MEN NOW\n+FB14; F; 0574 0565; # ARMENIAN SMALL LIGATURE MEN ECH\n+FB15; F; 0574 056B; # ARMENIAN SMALL LIGATURE MEN INI\n+FB16; F; 057E 0576; # ARMENIAN SMALL LIGATURE VEW NOW\n+FB17; F; 0574 056D; # ARMENIAN SMALL LIGATURE MEN XEH\n+FF21; C; FF41; # FULLWIDTH LATIN CAPITAL LETTER A\n+FF22; C; FF42; # FULLWIDTH LATIN CAPITAL LETTER B\n+FF23; C; FF43; # FULLWIDTH LATIN CAPITAL LETTER C\n+FF24; C; FF44; # FULLWIDTH LATIN CAPITAL LETTER D\n+FF25; C; FF45; # FULLWIDTH LATIN CAPITAL LETTER E\n+FF26; C; FF46; # FULLWIDTH LATIN CAPITAL LETTER F\n+FF27; C; FF47; # FULLWIDTH LATIN CAPITAL LETTER G\n+FF28; C; FF48; # FULLWIDTH LATIN CAPITAL LETTER H\n+FF29; C; FF49; # FULLWIDTH LATIN CAPITAL LETTER I\n+FF2A; C; FF4A; # FULLWIDTH LATIN CAPITAL LETTER J\n+FF2B; C; FF4B; # FULLWIDTH LATIN CAPITAL LETTER K\n+FF2C; C; FF4C; # FULLWIDTH LATIN CAPITAL LETTER L\n+FF2D; C; FF4D; # FULLWIDTH LATIN CAPITAL LETTER M\n+FF2E; C; FF4E; # FULLWIDTH LATIN CAPITAL LETTER N\n+FF2F; C; FF4F; # FULLWIDTH LATIN CAPITAL LETTER O\n+FF30; C; FF50; # FULLWIDTH LATIN CAPITAL LETTER P\n+FF31; C; FF51; # FULLWIDTH LATIN CAPITAL LETTER Q\n+FF32; C; FF52; # FULLWIDTH LATIN CAPITAL LETTER R\n+FF33; C; FF53; # FULLWIDTH LATIN CAPITAL LETTER S\n+FF34; C; FF54; # FULLWIDTH LATIN CAPITAL LETTER T\n+FF35; C; FF55; # FULLWIDTH LATIN CAPITAL LETTER U\n+FF36; C; FF56; # FULLWIDTH LATIN CAPITAL LETTER V\n+FF37; C; FF57; # FULLWIDTH LATIN CAPITAL LETTER W\n+FF38; C; FF58; # FULLWIDTH LATIN CAPITAL LETTER X\n+FF39; C; FF59; # FULLWIDTH LATIN CAPITAL LETTER Y\n+FF3A; C; FF5A; # FULLWIDTH LATIN CAPITAL LETTER Z\n+10400; C; 10428; # DESERET CAPITAL LETTER LONG I\n+10401; C; 10429; # DESERET CAPITAL LETTER LONG E\n+10402; C; 1042A; # DESERET CAPITAL LETTER LONG A\n+10403; C; 1042B; # DESERET CAPITAL LETTER LONG AH\n+10404; C; 1042C; # DESERET CAPITAL LETTER LONG O\n+10405; C; 1042D; # DESERET CAPITAL LETTER LONG OO\n+10406; C; 1042E; # DESERET CAPITAL LETTER SHORT I\n+10407; C; 1042F; # DESERET CAPITAL LETTER SHORT E\n+10408; C; 10430; # DESERET CAPITAL LETTER SHORT A\n+10409; C; 10431; # DESERET CAPITAL LETTER SHORT AH\n+1040A; C; 10432; # DESERET CAPITAL LETTER SHORT O\n+1040B; C; 10433; # DESERET CAPITAL LETTER SHORT OO\n+1040C; C; 10434; # DESERET CAPITAL LETTER AY\n+1040D; C; 10435; # DESERET CAPITAL LETTER OW\n+1040E; C; 10436; # DESERET CAPITAL LETTER WU\n+1040F; C; 10437; # DESERET CAPITAL LETTER YEE\n+10410; C; 10438; # DESERET CAPITAL LETTER H\n+10411; C; 10439; # DESERET CAPITAL LETTER PEE\n+10412; C; 1043A; # DESERET CAPITAL LETTER BEE\n+10413; C; 1043B; # DESERET CAPITAL LETTER TEE\n+10414; C; 1043C; # DESERET CAPITAL LETTER DEE\n+10415; C; 1043D; # DESERET CAPITAL LETTER CHEE\n+10416; C; 1043E; # DESERET CAPITAL LETTER JEE\n+10417; C; 1043F; # DESERET CAPITAL LETTER KAY\n+10418; C; 10440; # DESERET CAPITAL LETTER GAY\n+10419; C; 10441; # DESERET CAPITAL LETTER EF\n+1041A; C; 10442; # DESERET CAPITAL LETTER VEE\n+1041B; C; 10443; # DESERET CAPITAL LETTER ETH\n+1041C; C; 10444; # DESERET CAPITAL LETTER THEE\n+1041D; C; 10445; # DESERET CAPITAL LETTER ES\n+1041E; C; 10446; # DESERET CAPITAL LETTER ZEE\n+1041F; C; 10447; # DESERET CAPITAL LETTER ESH\n+10420; C; 10448; # DESERET CAPITAL LETTER ZHEE\n+10421; C; 10449; # DESERET CAPITAL LETTER ER\n+10422; C; 1044A; # DESERET CAPITAL LETTER EL\n+10423; C; 1044B; # DESERET CAPITAL LETTER EM\n+10424; C; 1044C; # DESERET CAPITAL LETTER EN\n+10425; C; 1044D; # DESERET CAPITAL LETTER ENG\n+10426; C; 1044E; # DESERET CAPITAL LETTER OI\n+10427; C; 1044F; # DESERET CAPITAL LETTER EW\n+104B0; C; 104D8; # OSAGE CAPITAL LETTER A\n+104B1; C; 104D9; # OSAGE CAPITAL LETTER AI\n+104B2; C; 104DA; # OSAGE CAPITAL LETTER AIN\n+104B3; C; 104DB; # OSAGE CAPITAL LETTER AH\n+104B4; C; 104DC; # OSAGE CAPITAL LETTER BRA\n+104B5; C; 104DD; # OSAGE CAPITAL LETTER CHA\n+104B6; C; 104DE; # OSAGE CAPITAL LETTER EHCHA\n+104B7; C; 104DF; # OSAGE CAPITAL LETTER E\n+104B8; C; 104E0; # OSAGE CAPITAL LETTER EIN\n+104B9; C; 104E1; # OSAGE CAPITAL LETTER HA\n+104BA; C; 104E2; # OSAGE CAPITAL LETTER HYA\n+104BB; C; 104E3; # OSAGE CAPITAL LETTER I\n+104BC; C; 104E4; # OSAGE CAPITAL LETTER KA\n+104BD; C; 104E5; # OSAGE CAPITAL LETTER EHKA\n+104BE; C; 104E6; # OSAGE CAPITAL LETTER KYA\n+104BF; C; 104E7; # OSAGE CAPITAL LETTER LA\n+104C0; C; 104E8; # OSAGE CAPITAL LETTER MA\n+104C1; C; 104E9; # OSAGE CAPITAL LETTER NA\n+104C2; C; 104EA; # OSAGE CAPITAL LETTER O\n+104C3; C; 104EB; # OSAGE CAPITAL LETTER OIN\n+104C4; C; 104EC; # OSAGE CAPITAL LETTER PA\n+104C5; C; 104ED; # OSAGE CAPITAL LETTER EHPA\n+104C6; C; 104EE; # OSAGE CAPITAL LETTER SA\n+104C7; C; 104EF; # OSAGE CAPITAL LETTER SHA\n+104C8; C; 104F0; # OSAGE CAPITAL LETTER TA\n+104C9; C; 104F1; # OSAGE CAPITAL LETTER EHTA\n+104CA; C; 104F2; # OSAGE CAPITAL LETTER TSA\n+104CB; C; 104F3; # OSAGE CAPITAL LETTER EHTSA\n+104CC; C; 104F4; # OSAGE CAPITAL LETTER TSHA\n+104CD; C; 104F5; # OSAGE CAPITAL LETTER DHA\n+104CE; C; 104F6; # OSAGE CAPITAL LETTER U\n+104CF; C; 104F7; # OSAGE CAPITAL LETTER WA\n+104D0; C; 104F8; # OSAGE CAPITAL LETTER KHA\n+104D1; C; 104F9; # OSAGE CAPITAL LETTER GHA\n+104D2; C; 104FA; # OSAGE CAPITAL LETTER ZA\n+104D3; C; 104FB; # OSAGE CAPITAL LETTER ZHA\n+10570; C; 10597; # VITHKUQI CAPITAL LETTER A\n+10571; C; 10598; # VITHKUQI CAPITAL LETTER BBE\n+10572; C; 10599; # VITHKUQI CAPITAL LETTER BE\n+10573; C; 1059A; # VITHKUQI CAPITAL LETTER CE\n+10574; C; 1059B; # VITHKUQI CAPITAL LETTER CHE\n+10575; C; 1059C; # VITHKUQI CAPITAL LETTER DE\n+10576; C; 1059D; # VITHKUQI CAPITAL LETTER DHE\n+10577; C; 1059E; # VITHKUQI CAPITAL LETTER EI\n+10578; C; 1059F; # VITHKUQI CAPITAL LETTER E\n+10579; C; 105A0; # VITHKUQI CAPITAL LETTER FE\n+1057A; C; 105A1; # VITHKUQI CAPITAL LETTER GA\n+1057C; C; 105A3; # VITHKUQI CAPITAL LETTER HA\n+1057D; C; 105A4; # VITHKUQI CAPITAL LETTER HHA\n+1057E; C; 105A5; # VITHKUQI CAPITAL LETTER I\n+1057F; C; 105A6; # VITHKUQI CAPITAL LETTER IJE\n+10580; C; 105A7; # VITHKUQI CAPITAL LETTER JE\n+10581; C; 105A8; # VITHKUQI CAPITAL LETTER KA\n+10582; C; 105A9; # VITHKUQI CAPITAL LETTER LA\n+10583; C; 105AA; # VITHKUQI CAPITAL LETTER LLA\n+10584; C; 105AB; # VITHKUQI CAPITAL LETTER ME\n+10585; C; 105AC; # VITHKUQI CAPITAL LETTER NE\n+10586; C; 105AD; # VITHKUQI CAPITAL LETTER NJE\n+10587; C; 105AE; # VITHKUQI CAPITAL LETTER O\n+10588; C; 105AF; # VITHKUQI CAPITAL LETTER PE\n+10589; C; 105B0; # VITHKUQI CAPITAL LETTER QA\n+1058A; C; 105B1; # VITHKUQI CAPITAL LETTER RE\n+1058C; C; 105B3; # VITHKUQI CAPITAL LETTER SE\n+1058D; C; 105B4; # VITHKUQI CAPITAL LETTER SHE\n+1058E; C; 105B5; # VITHKUQI CAPITAL LETTER TE\n+1058F; C; 105B6; # VITHKUQI CAPITAL LETTER THE\n+10590; C; 105B7; # VITHKUQI CAPITAL LETTER U\n+10591; C; 105B8; # VITHKUQI CAPITAL LETTER VE\n+10592; C; 105B9; # VITHKUQI CAPITAL LETTER XE\n+10594; C; 105BB; # VITHKUQI CAPITAL LETTER Y\n+10595; C; 105BC; # VITHKUQI CAPITAL LETTER ZE\n+10C80; C; 10CC0; # OLD HUNGARIAN CAPITAL LETTER A\n+10C81; C; 10CC1; # OLD HUNGARIAN CAPITAL LETTER AA\n+10C82; C; 10CC2; # OLD HUNGARIAN CAPITAL LETTER EB\n+10C83; C; 10CC3; # OLD HUNGARIAN CAPITAL LETTER AMB\n+10C84; C; 10CC4; # OLD HUNGARIAN CAPITAL LETTER EC\n+10C85; C; 10CC5; # OLD HUNGARIAN CAPITAL LETTER ENC\n+10C86; C; 10CC6; # OLD HUNGARIAN CAPITAL LETTER ECS\n+10C87; C; 10CC7; # OLD HUNGARIAN CAPITAL LETTER ED\n+10C88; C; 10CC8; # OLD HUNGARIAN CAPITAL LETTER AND\n+10C89; C; 10CC9; # OLD HUNGARIAN CAPITAL LETTER E\n+10C8A; C; 10CCA; # OLD HUNGARIAN CAPITAL LETTER CLOSE E\n+10C8B; C; 10CCB; # OLD HUNGARIAN CAPITAL LETTER EE\n+10C8C; C; 10CCC; # OLD HUNGARIAN CAPITAL LETTER EF\n+10C8D; C; 10CCD; # OLD HUNGARIAN CAPITAL LETTER EG\n+10C8E; C; 10CCE; # OLD HUNGARIAN CAPITAL LETTER EGY\n+10C8F; C; 10CCF; # OLD HUNGARIAN CAPITAL LETTER EH\n+10C90; C; 10CD0; # OLD HUNGARIAN CAPITAL LETTER I\n+10C91; C; 10CD1; # OLD HUNGARIAN CAPITAL LETTER II\n+10C92; C; 10CD2; # OLD HUNGARIAN CAPITAL LETTER EJ\n+10C93; C; 10CD3; # OLD HUNGARIAN CAPITAL LETTER EK\n+10C94; C; 10CD4; # OLD HUNGARIAN CAPITAL LETTER AK\n+10C95; C; 10CD5; # OLD HUNGARIAN CAPITAL LETTER UNK\n+10C96; C; 10CD6; # OLD HUNGARIAN CAPITAL LETTER EL\n+10C97; C; 10CD7; # OLD HUNGARIAN CAPITAL LETTER ELY\n+10C98; C; 10CD8; # OLD HUNGARIAN CAPITAL LETTER EM\n+10C99; C; 10CD9; # OLD HUNGARIAN CAPITAL LETTER EN\n+10C9A; C; 10CDA; # OLD HUNGARIAN CAPITAL LETTER ENY\n+10C9B; C; 10CDB; # OLD HUNGARIAN CAPITAL LETTER O\n+10C9C; C; 10CDC; # OLD HUNGARIAN CAPITAL LETTER OO\n+10C9D; C; 10CDD; # OLD HUNGARIAN CAPITAL LETTER NIKOLSBURG OE\n+10C9E; C; 10CDE; # OLD HUNGARIAN CAPITAL LETTER RUDIMENTA OE\n+10C9F; C; 10CDF; # OLD HUNGARIAN CAPITAL LETTER OEE\n+10CA0; C; 10CE0; # OLD HUNGARIAN CAPITAL LETTER EP\n+10CA1; C; 10CE1; # OLD HUNGARIAN CAPITAL LETTER EMP\n+10CA2; C; 10CE2; # OLD HUNGARIAN CAPITAL LETTER ER\n+10CA3; C; 10CE3; # OLD HUNGARIAN CAPITAL LETTER SHORT ER\n+10CA4; C; 10CE4; # OLD HUNGARIAN CAPITAL LETTER ES\n+10CA5; C; 10CE5; # OLD HUNGARIAN CAPITAL LETTER ESZ\n+10CA6; C; 10CE6; # OLD HUNGARIAN CAPITAL LETTER ET\n+10CA7; C; 10CE7; # OLD HUNGARIAN CAPITAL LETTER ENT\n+10CA8; C; 10CE8; # OLD HUNGARIAN CAPITAL LETTER ETY\n+10CA9; C; 10CE9; # OLD HUNGARIAN CAPITAL LETTER ECH\n+10CAA; C; 10CEA; # OLD HUNGARIAN CAPITAL LETTER U\n+10CAB; C; 10CEB; # OLD HUNGARIAN CAPITAL LETTER UU\n+10CAC; C; 10CEC; # OLD HUNGARIAN CAPITAL LETTER NIKOLSBURG UE\n+10CAD; C; 10CED; # OLD HUNGARIAN CAPITAL LETTER RUDIMENTA UE\n+10CAE; C; 10CEE; # OLD HUNGARIAN CAPITAL LETTER EV\n+10CAF; C; 10CEF; # OLD HUNGARIAN CAPITAL LETTER EZ\n+10CB0; C; 10CF0; # OLD HUNGARIAN CAPITAL LETTER EZS\n+10CB1; C; 10CF1; # OLD HUNGARIAN CAPITAL LETTER ENT-SHAPED SIGN\n+10CB2; C; 10CF2; # OLD HUNGARIAN CAPITAL LETTER US\n+10D50; C; 10D70; # GARAY CAPITAL LETTER A\n+10D51; C; 10D71; # GARAY CAPITAL LETTER CA\n+10D52; C; 10D72; # GARAY CAPITAL LETTER MA\n+10D53; C; 10D73; # GARAY CAPITAL LETTER KA\n+10D54; C; 10D74; # GARAY CAPITAL LETTER BA\n+10D55; C; 10D75; # GARAY CAPITAL LETTER JA\n+10D56; C; 10D76; # GARAY CAPITAL LETTER SA\n+10D57; C; 10D77; # GARAY CAPITAL LETTER WA\n+10D58; C; 10D78; # GARAY CAPITAL LETTER LA\n+10D59; C; 10D79; # GARAY CAPITAL LETTER GA\n+10D5A; C; 10D7A; # GARAY CAPITAL LETTER DA\n+10D5B; C; 10D7B; # GARAY CAPITAL LETTER XA\n+10D5C; C; 10D7C; # GARAY CAPITAL LETTER YA\n+10D5D; C; 10D7D; # GARAY CAPITAL LETTER TA\n+10D5E; C; 10D7E; # GARAY CAPITAL LETTER RA\n+10D5F; C; 10D7F; # GARAY CAPITAL LETTER NYA\n+10D60; C; 10D80; # GARAY CAPITAL LETTER FA\n+10D61; C; 10D81; # GARAY CAPITAL LETTER NA\n+10D62; C; 10D82; # GARAY CAPITAL LETTER PA\n+10D63; C; 10D83; # GARAY CAPITAL LETTER HA\n+10D64; C; 10D84; # GARAY CAPITAL LETTER OLD KA\n+10D65; C; 10D85; # GARAY CAPITAL LETTER OLD NA\n+118A0; C; 118C0; # WARANG CITI CAPITAL LETTER NGAA\n+118A1; C; 118C1; # WARANG CITI CAPITAL LETTER A\n+118A2; C; 118C2; # WARANG CITI CAPITAL LETTER WI\n+118A3; C; 118C3; # WARANG CITI CAPITAL LETTER YU\n+118A4; C; 118C4; # WARANG CITI CAPITAL LETTER YA\n+118A5; C; 118C5; # WARANG CITI CAPITAL LETTER YO\n+118A6; C; 118C6; # WARANG CITI CAPITAL LETTER II\n+118A7; C; 118C7; # WARANG CITI CAPITAL LETTER UU\n+118A8; C; 118C8; # WARANG CITI CAPITAL LETTER E\n+118A9; C; 118C9; # WARANG CITI CAPITAL LETTER O\n+118AA; C; 118CA; # WARANG CITI CAPITAL LETTER ANG\n+118AB; C; 118CB; # WARANG CITI CAPITAL LETTER GA\n+118AC; C; 118CC; # WARANG CITI CAPITAL LETTER KO\n+118AD; C; 118CD; # WARANG CITI CAPITAL LETTER ENY\n+118AE; C; 118CE; # WARANG CITI CAPITAL LETTER YUJ\n+118AF; C; 118CF; # WARANG CITI CAPITAL LETTER UC\n+118B0; C; 118D0; # WARANG CITI CAPITAL LETTER ENN\n+118B1; C; 118D1; # WARANG CITI CAPITAL LETTER ODD\n+118B2; C; 118D2; # WARANG CITI CAPITAL LETTER TTE\n+118B3; C; 118D3; # WARANG CITI CAPITAL LETTER NUNG\n+118B4; C; 118D4; # WARANG CITI CAPITAL LETTER DA\n+118B5; C; 118D5; # WARANG CITI CAPITAL LETTER AT\n+118B6; C; 118D6; # WARANG CITI CAPITAL LETTER AM\n+118B7; C; 118D7; # WARANG CITI CAPITAL LETTER BU\n+118B8; C; 118D8; # WARANG CITI CAPITAL LETTER PU\n+118B9; C; 118D9; # WARANG CITI CAPITAL LETTER HIYO\n+118BA; C; 118DA; # WARANG CITI CAPITAL LETTER HOLO\n+118BB; C; 118DB; # WARANG CITI CAPITAL LETTER HORR\n+118BC; C; 118DC; # WARANG CITI CAPITAL LETTER HAR\n+118BD; C; 118DD; # WARANG CITI CAPITAL LETTER SSUU\n+118BE; C; 118DE; # WARANG CITI CAPITAL LETTER SII\n+118BF; C; 118DF; # WARANG CITI CAPITAL LETTER VIYO\n+16E40; C; 16E60; # MEDEFAIDRIN CAPITAL LETTER M\n+16E41; C; 16E61; # MEDEFAIDRIN CAPITAL LETTER S\n+16E42; C; 16E62; # MEDEFAIDRIN CAPITAL LETTER V\n+16E43; C; 16E63; # MEDEFAIDRIN CAPITAL LETTER W\n+16E44; C; 16E64; # MEDEFAIDRIN CAPITAL LETTER ATIU\n+16E45; C; 16E65; # MEDEFAIDRIN CAPITAL LETTER Z\n+16E46; C; 16E66; # MEDEFAIDRIN CAPITAL LETTER KP\n+16E47; C; 16E67; # MEDEFAIDRIN CAPITAL LETTER P\n+16E48; C; 16E68; # MEDEFAIDRIN CAPITAL LETTER T\n+16E49; C; 16E69; # MEDEFAIDRIN CAPITAL LETTER G\n+16E4A; C; 16E6A; # MEDEFAIDRIN CAPITAL LETTER F\n+16E4B; C; 16E6B; # MEDEFAIDRIN CAPITAL LETTER I\n+16E4C; C; 16E6C; # MEDEFAIDRIN CAPITAL LETTER K\n+16E4D; C; 16E6D; # MEDEFAIDRIN CAPITAL LETTER A\n+16E4E; C; 16E6E; # MEDEFAIDRIN CAPITAL LETTER J\n+16E4F; C; 16E6F; # MEDEFAIDRIN CAPITAL LETTER E\n+16E50; C; 16E70; # MEDEFAIDRIN CAPITAL LETTER B\n+16E51; C; 16E71; # MEDEFAIDRIN CAPITAL LETTER C\n+16E52; C; 16E72; # MEDEFAIDRIN CAPITAL LETTER U\n+16E53; C; 16E73; # MEDEFAIDRIN CAPITAL LETTER YU\n+16E54; C; 16E74; # MEDEFAIDRIN CAPITAL LETTER L\n+16E55; C; 16E75; # MEDEFAIDRIN CAPITAL LETTER Q\n+16E56; C; 16E76; # MEDEFAIDRIN CAPITAL LETTER HP\n+16E57; C; 16E77; # MEDEFAIDRIN CAPITAL LETTER NY\n+16E58; C; 16E78; # MEDEFAIDRIN CAPITAL LETTER X\n+16E59; C; 16E79; # MEDEFAIDRIN CAPITAL LETTER D\n+16E5A; C; 16E7A; # MEDEFAIDRIN CAPITAL LETTER OE\n+16E5B; C; 16E7B; # MEDEFAIDRIN CAPITAL LETTER N\n+16E5C; C; 16E7C; # MEDEFAIDRIN CAPITAL LETTER R\n+16E5D; C; 16E7D; # MEDEFAIDRIN CAPITAL LETTER O\n+16E5E; C; 16E7E; # MEDEFAIDRIN CAPITAL LETTER AI\n+16E5F; C; 16E7F; # MEDEFAIDRIN CAPITAL LETTER Y\n+1E900; C; 1E922; # ADLAM CAPITAL LETTER ALIF\n+1E901; C; 1E923; # ADLAM CAPITAL LETTER DAALI\n+1E902; C; 1E924; # ADLAM CAPITAL LETTER LAAM\n+1E903; C; 1E925; # ADLAM CAPITAL LETTER MIIM\n+1E904; C; 1E926; # ADLAM CAPITAL LETTER BA\n+1E905; C; 1E927; # ADLAM CAPITAL LETTER SINNYIIYHE\n+1E906; C; 1E928; # ADLAM CAPITAL LETTER PE\n+1E907; C; 1E929; # ADLAM CAPITAL LETTER BHE\n+1E908; C; 1E92A; # ADLAM CAPITAL LETTER RA\n+1E909; C; 1E92B; # ADLAM CAPITAL LETTER E\n+1E90A; C; 1E92C; # ADLAM CAPITAL LETTER FA\n+1E90B; C; 1E92D; # ADLAM CAPITAL LETTER I\n+1E90C; C; 1E92E; # ADLAM CAPITAL LETTER O\n+1E90D; C; 1E92F; # ADLAM CAPITAL LETTER DHA\n+1E90E; C; 1E930; # ADLAM CAPITAL LETTER YHE\n+1E90F; C; 1E931; # ADLAM CAPITAL LETTER WAW\n+1E910; C; 1E932; # ADLAM CAPITAL LETTER NUN\n+1E911; C; 1E933; # ADLAM CAPITAL LETTER KAF\n+1E912; C; 1E934; # ADLAM CAPITAL LETTER YA\n+1E913; C; 1E935; # ADLAM CAPITAL LETTER U\n+1E914; C; 1E936; # ADLAM CAPITAL LETTER JIIM\n+1E915; C; 1E937; # ADLAM CAPITAL LETTER CHI\n+1E916; C; 1E938; # ADLAM CAPITAL LETTER HA\n+1E917; C; 1E939; # ADLAM CAPITAL LETTER QAAF\n+1E918; C; 1E93A; # ADLAM CAPITAL LETTER GA\n+1E919; C; 1E93B; # ADLAM CAPITAL LETTER NYA\n+1E91A; C; 1E93C; # ADLAM CAPITAL LETTER TU\n+1E91B; C; 1E93D; # ADLAM CAPITAL LETTER NHA\n+1E91C; C; 1E93E; # ADLAM CAPITAL LETTER VA\n+1E91D; C; 1E93F; # ADLAM CAPITAL LETTER KHA\n+1E91E; C; 1E940; # ADLAM CAPITAL LETTER GBE\n+1E91F; C; 1E941; # ADLAM CAPITAL LETTER ZAL\n+1E920; C; 1E942; # ADLAM CAPITAL LETTER KPO\n+1E921; C; 1E943; # ADLAM CAPITAL LETTER SHA\n+#\n+# EOF\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/data\/unicodedata\/CaseFolding.txt","additions":1654,"deletions":0,"binary":false,"changes":1654,"status":"added"},{"patch":"@@ -735,1 +735,1 @@\n-        throwInternalIOException(env, errno, \"Bad file descriptor\", c->mode);\n+        throwInternalIOException(env, errno, \"Bad file descriptor\", mode);\n","filename":"src\/java.base\/unix\/native\/libjava\/ProcessImpl_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -242,0 +242,1 @@\n+                free(temp);\n@@ -255,0 +256,1 @@\n+                free(temp);\n","filename":"src\/java.base\/unix\/native\/libjava\/java_props_md.c","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    static class Key {\n+    static final class Key {\n@@ -87,0 +87,1 @@\n+        @Override\n@@ -92,1 +93,1 @@\n-    static class DoubleValue {\n+    static final class DoubleValue {\n@@ -109,0 +110,1 @@\n+        @Override\n@@ -113,0 +115,1 @@\n+        @Override\n@@ -117,0 +120,1 @@\n+        @Override\n@@ -123,1 +127,1 @@\n-    static class PropertyEncoding {\n+    static final class PropertyEncoding {\n@@ -153,0 +157,1 @@\n+        @Override\n@@ -158,1 +163,1 @@\n-    public static class Size extends Property {\n+    public static final class Size extends Property {\n@@ -178,1 +183,1 @@\n-    public static class State extends Property {\n+    public static final class State extends Property {\n@@ -212,1 +217,1 @@\n-    public static class Direction extends Property {\n+    public static final class Direction extends Property {\n@@ -242,1 +247,1 @@\n-    public static class Orientation extends Property {\n+    public static final class Orientation extends Property {\n@@ -258,1 +263,1 @@\n-    public static class AlignmentVertical extends Property {\n+    public static final class AlignmentVertical extends Property {\n@@ -276,1 +281,1 @@\n-    public static class AlignmentHorizontal extends Property {\n+    public static final class AlignmentHorizontal extends Property {\n@@ -294,1 +299,1 @@\n-    public static class SegmentPosition extends Property {\n+    public static final class SegmentPosition extends Property {\n@@ -314,1 +319,1 @@\n-    public static class ScrollBarPart extends Property {\n+    public static final class ScrollBarPart extends Property {\n@@ -342,1 +347,1 @@\n-    public static class Variant extends Property {\n+    public static final class Variant extends Property {\n@@ -373,1 +378,1 @@\n-    public static class WindowType extends Property {\n+    public static final class WindowType extends Property {\n@@ -391,1 +396,1 @@\n-    public static class Focused extends Property {\n+    public static final class Focused extends Property {\n@@ -407,1 +412,1 @@\n-    public static class IndicatorOnly extends Property {\n+    public static final class IndicatorOnly extends Property {\n@@ -423,1 +428,1 @@\n-    public static class NoIndicator extends Property {\n+    public static final class NoIndicator extends Property {\n@@ -439,1 +444,1 @@\n-    public static class ArrowsOnly extends Property {\n+    public static final class ArrowsOnly extends Property {\n@@ -455,1 +460,1 @@\n-    public static class FrameOnly extends Property {\n+    public static final class FrameOnly extends Property {\n@@ -471,1 +476,1 @@\n-    public static class SegmentTrailingSeparator extends Property {\n+    public static final class SegmentTrailingSeparator extends Property {\n@@ -487,1 +492,1 @@\n-    public static class SegmentLeadingSeparator extends Property {\n+    public static final class SegmentLeadingSeparator extends Property {\n@@ -503,1 +508,1 @@\n-    public static class NothingToScroll extends Property {\n+    public static final class NothingToScroll extends Property {\n@@ -519,1 +524,1 @@\n-    public static class WindowTitleBarSeparator extends Property {\n+    public static final class WindowTitleBarSeparator extends Property {\n@@ -535,1 +540,1 @@\n-    public static class WindowClipCorners extends Property {\n+    public static final class WindowClipCorners extends Property {\n@@ -551,1 +556,1 @@\n-    public static class ShowArrows extends Property {\n+    public static final class ShowArrows extends Property {\n@@ -567,1 +572,1 @@\n-    public static class BooleanValue extends Property {\n+    public static final class BooleanValue extends Property {\n@@ -583,1 +588,1 @@\n-    public static class Animating extends Property {\n+    public static final class Animating extends Property {\n@@ -599,1 +604,1 @@\n-    public static class Widget extends Property {\n+    public static final class Widget extends Property {\n@@ -814,0 +819,1 @@\n+        @Override\n@@ -819,1 +825,1 @@\n-    public static class ScrollBarHit extends Hit {\n+    public static final class ScrollBarHit extends Hit {\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIConstants.java","additions":34,"deletions":28,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    private static class ThreadLocalByteBuffer {\n+    private static final class ThreadLocalByteBuffer {\n@@ -117,0 +117,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIControl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-public class JRSUIFocus {\n+public final class JRSUIFocus {\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIFocus.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-    public static class AnimationFrameState extends JRSUIState {\n+    public static final class AnimationFrameState extends JRSUIState {\n@@ -190,1 +190,1 @@\n-    public static class TitleBarHeightState extends ValueState {\n+    public static final class TitleBarHeightState extends ValueState {\n@@ -207,1 +207,1 @@\n-    public static class ScrollBarState extends ValueState {\n+    public static final class ScrollBarState extends ValueState {\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIState.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-public class JRSUIStateFactory {\n+public final class JRSUIStateFactory {\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIStateFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    public static class TabbedPane {\n+    public static final class TabbedPane {\n@@ -102,1 +102,1 @@\n-    public static class InternalFrame {\n+    public static final class InternalFrame {\n@@ -108,1 +108,1 @@\n-    public static class Tree {\n+    public static final class Tree {\n@@ -114,1 +114,1 @@\n-    public static class ScrollBar {\n+    public static final class ScrollBar {\n@@ -140,1 +140,1 @@\n-    public static class Images {\n+    public static final class Images {\n@@ -146,1 +146,1 @@\n-    public static class HitDetection {\n+    public static final class HitDetection {\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIUtils.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-public class Application {\n+public final class Application {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/Application.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,2 @@\n-public class ApplicationBeanInfo extends SimpleBeanInfo {\n+public final class ApplicationBeanInfo extends SimpleBeanInfo {\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/ApplicationBeanInfo.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+        @Override\n@@ -45,0 +46,1 @@\n+        @Override\n@@ -46,0 +48,1 @@\n+        @Override\n@@ -47,0 +50,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/FullScreenAdapter.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-public class MacQuitResponse implements QuitResponse {\n+public final class MacQuitResponse implements QuitResponse {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/MacQuitResponse.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class _AppDockIconHandler {\n+final class _AppDockIconHandler {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/_AppDockIconHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-class _AppEventHandler {\n+final class _AppEventHandler {\n@@ -274,1 +274,2 @@\n-    class _AboutDispatcher extends _AppEventDispatcher<AboutHandler> {\n+    final class _AboutDispatcher extends _AppEventDispatcher<AboutHandler> {\n+        @Override\n@@ -279,0 +280,1 @@\n+        @Override\n@@ -284,1 +286,2 @@\n-    static class _PreferencesDispatcher extends _AppEventDispatcher<PreferencesHandler> {\n+    static final class _PreferencesDispatcher extends _AppEventDispatcher<PreferencesHandler> {\n+        @Override\n@@ -292,0 +295,1 @@\n+        @Override\n@@ -297,1 +301,2 @@\n-    static class _OpenAppDispatcher extends _QueuingAppEventDispatcher<com.apple.eawt._OpenAppHandler> {\n+    static final class _OpenAppDispatcher extends _QueuingAppEventDispatcher<com.apple.eawt._OpenAppHandler> {\n+        @Override\n@@ -303,1 +308,2 @@\n-    static class _AppReOpenedDispatcher extends _AppEventMultiplexor<AppReopenedListener> {\n+    static final class _AppReOpenedDispatcher extends _AppEventMultiplexor<AppReopenedListener> {\n+        @Override\n@@ -310,1 +316,2 @@\n-    static class _AppForegroundDispatcher extends _BooleanAppEventMultiplexor<AppForegroundListener, AppForegroundEvent> {\n+    static final class _AppForegroundDispatcher extends _BooleanAppEventMultiplexor<AppForegroundListener, AppForegroundEvent> {\n+        @Override\n@@ -313,0 +320,1 @@\n+        @Override\n@@ -317,0 +325,1 @@\n+        @Override\n@@ -322,1 +331,2 @@\n-    static class _HiddenAppDispatcher extends _BooleanAppEventMultiplexor<AppHiddenListener, AppHiddenEvent> {\n+    static final class _HiddenAppDispatcher extends _BooleanAppEventMultiplexor<AppHiddenListener, AppHiddenEvent> {\n+        @Override\n@@ -325,0 +335,1 @@\n+        @Override\n@@ -329,0 +340,1 @@\n+        @Override\n@@ -334,1 +346,2 @@\n-    static class _UserSessionDispatcher extends _BooleanAppEventMultiplexor<UserSessionListener, UserSessionEvent> {\n+    static final class _UserSessionDispatcher extends _BooleanAppEventMultiplexor<UserSessionListener, UserSessionEvent> {\n+        @Override\n@@ -339,0 +352,1 @@\n+        @Override\n@@ -343,0 +357,1 @@\n+        @Override\n@@ -347,0 +362,1 @@\n+        @Override\n@@ -352,1 +368,2 @@\n-    static class _ScreenSleepDispatcher extends _BooleanAppEventMultiplexor<ScreenSleepListener, ScreenSleepEvent> {\n+    static final class _ScreenSleepDispatcher extends _BooleanAppEventMultiplexor<ScreenSleepListener, ScreenSleepEvent> {\n+        @Override\n@@ -355,0 +372,1 @@\n+        @Override\n@@ -359,0 +377,1 @@\n+        @Override\n@@ -363,0 +382,1 @@\n+        @Override\n@@ -368,1 +388,2 @@\n-    static class _SystemSleepDispatcher extends _BooleanAppEventMultiplexor<SystemSleepListener, SystemSleepEvent> {\n+    static final class _SystemSleepDispatcher extends _BooleanAppEventMultiplexor<SystemSleepListener, SystemSleepEvent> {\n+        @Override\n@@ -371,0 +392,1 @@\n+        @Override\n@@ -375,0 +397,1 @@\n+        @Override\n@@ -379,0 +402,1 @@\n+        @Override\n@@ -384,1 +408,2 @@\n-    static class _OpenFileDispatcher extends _QueuingAppEventDispatcher<OpenFilesHandler> {\n+    static final class _OpenFileDispatcher extends _QueuingAppEventDispatcher<OpenFilesHandler> {\n+        @Override\n@@ -397,1 +422,2 @@\n-    static class _PrintFileDispatcher extends _QueuingAppEventDispatcher<PrintFilesHandler> {\n+    static final class _PrintFileDispatcher extends _QueuingAppEventDispatcher<PrintFilesHandler> {\n+        @Override\n@@ -409,1 +435,2 @@\n-    static class _OpenURIDispatcher extends _QueuingAppEventDispatcher<OpenURIHandler> {\n+    static final class _OpenURIDispatcher extends _QueuingAppEventDispatcher<OpenURIHandler> {\n+        @Override\n@@ -420,1 +447,2 @@\n-    class _QuitDispatcher extends _AppEventDispatcher<QuitHandler> {\n+    final class _QuitDispatcher extends _AppEventDispatcher<QuitHandler> {\n+        @Override\n@@ -425,0 +453,1 @@\n+        @Override\n@@ -439,1 +468,1 @@\n-    static class _NativeEvent {\n+    static final class _NativeEvent {\n@@ -594,0 +623,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/_AppEventHandler.java","additions":45,"deletions":15,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-class _AppMenuBarHandler {\n+final class _AppMenuBarHandler {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/_AppMenuBarHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-class _AppMiscHandlers {\n+final class _AppMiscHandlers {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/_AppMiscHandlers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class FullScreenEvent extends EventObject {\n+public final class FullScreenEvent extends EventObject {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/FullScreenEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+    @Override\n@@ -41,0 +42,1 @@\n+    @Override\n@@ -42,0 +44,1 @@\n+    @Override\n@@ -43,0 +46,1 @@\n+    @Override\n@@ -44,0 +48,1 @@\n+    @Override\n@@ -45,0 +50,1 @@\n+    @Override\n@@ -46,0 +52,1 @@\n+    @Override\n@@ -47,0 +54,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/GestureAdapter.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-    static class PerComponentNotifier {\n+    static final class PerComponentNotifier {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/GestureHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class GesturePhaseEvent extends GestureEvent {\n+public final class GesturePhaseEvent extends GestureEvent {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/GesturePhaseEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class MagnificationEvent extends GestureEvent {\n+public final class MagnificationEvent extends GestureEvent {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/MagnificationEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class RotationEvent extends GestureEvent {\n+public final class RotationEvent extends GestureEvent {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/RotationEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class SwipeEvent extends GestureEvent {\n+public final class SwipeEvent extends GestureEvent {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/event\/SwipeEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-public class FileManager {\n+public final class FileManager {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eio\/FileManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+    @Override\n@@ -147,0 +148,1 @@\n+    @Override\n@@ -175,0 +177,1 @@\n+    @Override\n@@ -179,1 +182,1 @@\n-    static class SizeConstants {\n+    static final class SizeConstants {\n@@ -186,1 +189,1 @@\n-    public static class Dynamic extends AquaButtonBorder {\n+    public static final class Dynamic extends AquaButtonBorder {\n@@ -205,0 +208,1 @@\n+        @Override\n@@ -222,0 +226,1 @@\n+        @Override\n@@ -259,1 +264,1 @@\n-    public static class Toggle extends AquaButtonBorder {\n+    public static final class Toggle extends AquaButtonBorder {\n@@ -268,0 +273,1 @@\n+        @Override\n@@ -291,0 +297,1 @@\n+        @Override\n@@ -297,1 +304,1 @@\n-    public static class Toolbar extends AquaButtonBorder {\n+    public static final class Toolbar extends AquaButtonBorder {\n@@ -307,0 +314,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonBorder.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaButtonCheckBoxUI extends AquaButtonLabeledUI {\n+public final class AquaButtonCheckBoxUI extends AquaButtonLabeledUI {\n@@ -52,0 +52,1 @@\n+    @Override\n@@ -56,0 +57,1 @@\n+    @Override\n@@ -60,1 +62,1 @@\n-    public static class CheckBoxButtonBorder extends LabeledButtonBorder {\n+    public static final class CheckBoxButtonBorder extends LabeledButtonBorder {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonCheckBoxUI.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-public class AquaButtonExtendedTypes {\n+public final class AquaButtonExtendedTypes {\n@@ -99,0 +99,1 @@\n+        @Override\n@@ -107,1 +108,1 @@\n-    static class SegmentedBorderDefinedTypeSpecifier extends BorderDefinedTypeSpecifier {\n+    static final class SegmentedBorderDefinedTypeSpecifier extends BorderDefinedTypeSpecifier {\n@@ -118,0 +119,1 @@\n+        @Override\n@@ -123,1 +125,1 @@\n-    public static class SegmentedNamedBorder extends AquaButtonBorder.Named {\n+    public static final class SegmentedNamedBorder extends AquaButtonBorder.Named {\n@@ -132,0 +134,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonExtendedTypes.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    protected static class RecyclableSizingIcon extends RecyclableSingleton<Icon> {\n+    protected static final class RecyclableSizingIcon extends RecyclableSingleton<Icon> {\n@@ -53,0 +53,1 @@\n+        @Override\n@@ -64,0 +65,1 @@\n+    @Override\n@@ -77,0 +79,1 @@\n+    @Override\n@@ -89,0 +92,1 @@\n+    @Override\n@@ -195,0 +199,1 @@\n+    @Override\n@@ -247,0 +252,1 @@\n+        @Override\n@@ -253,0 +259,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonLabeledUI.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-public class AquaButtonRadioUI extends AquaButtonLabeledUI {\n+public final class AquaButtonRadioUI extends AquaButtonLabeledUI {\n@@ -75,0 +75,1 @@\n+    @Override\n@@ -79,0 +80,1 @@\n+    @Override\n@@ -83,1 +85,1 @@\n-    public static class RadioButtonBorder extends LabeledButtonBorder {\n+    public static final class RadioButtonBorder extends LabeledButtonBorder {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonRadioUI.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonToggleUI.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+    @Override\n@@ -123,0 +124,1 @@\n+    @Override\n@@ -219,0 +221,1 @@\n+    @Override\n@@ -231,0 +234,1 @@\n+    @Override\n@@ -237,0 +241,1 @@\n+    @Override\n@@ -244,0 +249,1 @@\n+    @Override\n@@ -249,0 +255,1 @@\n+    @Override\n@@ -256,0 +263,1 @@\n+    @Override\n@@ -262,0 +270,1 @@\n+    @Override\n@@ -284,0 +293,1 @@\n+    @Override\n@@ -355,0 +365,1 @@\n+    @Override\n@@ -482,0 +493,1 @@\n+    @Override\n@@ -499,0 +511,1 @@\n+    @Override\n@@ -503,0 +516,1 @@\n+    @Override\n@@ -508,0 +522,1 @@\n+    @Override\n@@ -517,0 +532,1 @@\n+    @Override\n@@ -532,0 +548,1 @@\n+    @Override\n@@ -568,1 +585,1 @@\n-    static class AquaHierarchyButtonListener implements HierarchyListener {\n+    static final class AquaHierarchyButtonListener implements HierarchyListener {\n@@ -571,0 +588,1 @@\n+        @Override\n@@ -586,1 +604,1 @@\n-    class AquaButtonListener extends BasicButtonListener {\n+    final class AquaButtonListener extends BasicButtonListener {\n@@ -594,0 +612,1 @@\n+        @Override\n@@ -598,0 +617,1 @@\n+        @Override\n@@ -607,0 +627,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonUI.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-public class AquaCaret extends DefaultCaret\n+public final class AquaCaret extends DefaultCaret\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaCaret.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-class AquaComboBoxButton extends JButton {\n+final class AquaComboBoxButton extends JButton {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxButton.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-class AquaComboBoxRenderer extends AquaComboBoxRendererInternal<Object> implements UIResource {\n+final class AquaComboBoxRenderer extends AquaComboBoxRendererInternal<Object> implements UIResource {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxRenderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    @Override\n@@ -66,0 +67,1 @@\n+    @Override\n@@ -70,0 +72,1 @@\n+    @Override\n@@ -75,0 +78,1 @@\n+    @Override\n@@ -130,0 +134,1 @@\n+    @Override\n@@ -144,0 +149,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxRendererInternal.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-public class AquaComboBoxUI extends BasicComboBoxUI implements Sizeable {\n+public final class AquaComboBoxUI extends BasicComboBoxUI implements Sizeable {\n@@ -88,0 +88,1 @@\n+    @Override\n@@ -99,0 +100,1 @@\n+    @Override\n@@ -104,0 +106,1 @@\n+    @Override\n@@ -109,0 +112,1 @@\n+    @Override\n@@ -114,0 +118,1 @@\n+    @Override\n@@ -122,0 +127,1 @@\n+    @Override\n@@ -132,0 +138,1 @@\n+    @Override\n@@ -164,0 +171,1 @@\n+    @Override\n@@ -168,0 +176,1 @@\n+    @Override\n@@ -172,0 +181,1 @@\n+    @Override\n@@ -176,0 +186,1 @@\n+    @Override\n@@ -180,0 +191,1 @@\n+    @Override\n@@ -232,1 +244,1 @@\n-    class AquaCustomComboTextField extends JTextField {\n+    final class AquaCustomComboTextField extends JTextField {\n@@ -261,0 +273,1 @@\n+        @Override\n@@ -277,0 +290,1 @@\n+    @Override\n@@ -309,0 +323,1 @@\n+    @Override\n@@ -333,0 +348,1 @@\n+        @Override\n@@ -446,0 +462,1 @@\n+    @Override\n@@ -450,1 +467,1 @@\n-    class AquaComboBoxLayoutManager extends BasicComboBoxUI.ComboBoxLayoutManager {\n+    final class AquaComboBoxLayoutManager extends BasicComboBoxUI.ComboBoxLayoutManager {\n@@ -476,0 +493,1 @@\n+        @Override\n@@ -618,0 +636,1 @@\n+    @Override\n@@ -626,0 +645,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxUI.java","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaEditorPaneUI extends BasicEditorPaneUI {\n+public final class AquaEditorPaneUI extends BasicEditorPaneUI {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaEditorPaneUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-public class AquaFileChooserUI extends FileChooserUI {\n+public final class AquaFileChooserUI extends FileChooserUI {\n@@ -207,0 +207,1 @@\n+    @Override\n@@ -220,0 +221,1 @@\n+    @Override\n@@ -567,0 +569,1 @@\n+    @Override\n@@ -572,0 +575,1 @@\n+    @Override\n@@ -612,0 +616,1 @@\n+    @Override\n@@ -645,1 +650,2 @@\n-    protected class SelectionListener implements ListSelectionListener {\n+    protected final class SelectionListener implements ListSelectionListener {\n+        @Override\n@@ -692,1 +698,2 @@\n-    protected class SaveTextFocusListener implements FocusListener {\n+    protected final class SaveTextFocusListener implements FocusListener {\n+        @Override\n@@ -698,0 +705,1 @@\n+        @Override\n@@ -705,1 +713,2 @@\n-    protected class SaveTextDocumentListener implements DocumentListener {\n+    protected final class SaveTextDocumentListener implements DocumentListener {\n+        @Override\n@@ -710,0 +719,1 @@\n+        @Override\n@@ -714,0 +724,1 @@\n+        @Override\n@@ -737,1 +748,1 @@\n-    protected class DoubleClickListener extends MouseAdapter {\n+    protected final class DoubleClickListener extends MouseAdapter {\n@@ -744,0 +755,1 @@\n+        @Override\n@@ -767,1 +779,2 @@\n-    class DnDHandler extends DropTargetAdapter {\n+    final class DnDHandler extends DropTargetAdapter {\n+        @Override\n@@ -772,0 +785,1 @@\n+        @Override\n@@ -776,0 +790,1 @@\n+        @Override\n@@ -780,0 +795,1 @@\n+        @Override\n@@ -887,0 +903,1 @@\n+    @Override\n@@ -891,0 +908,1 @@\n+    @Override\n@@ -898,0 +916,1 @@\n+    @Override\n@@ -941,1 +960,2 @@\n-    protected class DefaultButtonAction extends AbstractAction {\n+    protected final class DefaultButtonAction extends AbstractAction {\n+        @Override\n@@ -959,0 +979,1 @@\n+        @Override\n@@ -968,1 +989,1 @@\n-    protected class NewFolderAction extends AbstractAction {\n+    protected final class NewFolderAction extends AbstractAction {\n@@ -995,0 +1016,1 @@\n+        @Override\n@@ -1031,1 +1053,2 @@\n-    protected class ApproveSelectionAction extends AbstractAction {\n+    protected final class ApproveSelectionAction extends AbstractAction {\n+        @Override\n@@ -1041,1 +1064,2 @@\n-    protected class OpenSelectionAction extends AbstractAction {\n+    protected final class OpenSelectionAction extends AbstractAction {\n+        @Override\n@@ -1055,1 +1079,2 @@\n-    protected class CancelSelectionAction extends AbstractAction {\n+    protected final class CancelSelectionAction extends AbstractAction {\n+        @Override\n@@ -1060,0 +1085,1 @@\n+        @Override\n@@ -1069,1 +1095,2 @@\n-    protected class UpdateAction extends AbstractAction {\n+    protected final class UpdateAction extends AbstractAction {\n+        @Override\n@@ -1080,1 +1107,1 @@\n-    private static class AcceptAllFileFilter extends FileFilter {\n+    private static final class AcceptAllFileFilter extends FileFilter {\n@@ -1084,0 +1111,1 @@\n+        @Override\n@@ -1088,0 +1116,1 @@\n+        @Override\n@@ -1104,0 +1133,1 @@\n+        @Override\n@@ -1118,0 +1148,1 @@\n+        @Override\n@@ -1176,1 +1207,1 @@\n-    protected class FileRenderer extends MacFCTableCellRenderer {\n+    protected final class FileRenderer extends MacFCTableCellRenderer {\n@@ -1181,0 +1212,1 @@\n+        @Override\n@@ -1203,1 +1235,1 @@\n-    protected class DateRenderer extends MacFCTableCellRenderer {\n+    protected final class DateRenderer extends MacFCTableCellRenderer {\n@@ -1208,0 +1240,1 @@\n+        @Override\n@@ -1281,1 +1314,1 @@\n-    protected class DirectoryComboBoxModel extends AbstractListModel<File> implements ComboBoxModel<File> {\n+    protected final class DirectoryComboBoxModel extends AbstractListModel<File> implements ComboBoxModel<File> {\n@@ -1343,0 +1376,1 @@\n+        @Override\n@@ -1348,0 +1382,1 @@\n+        @Override\n@@ -1352,0 +1387,1 @@\n+        @Override\n@@ -1356,0 +1392,1 @@\n+        @Override\n@@ -1389,1 +1426,1 @@\n-    protected class FilterComboBoxModel extends AbstractListModel<FileFilter> implements ComboBoxModel<FileFilter>,\n+    protected final class FilterComboBoxModel extends AbstractListModel<FileFilter> implements ComboBoxModel<FileFilter>,\n@@ -1399,0 +1436,1 @@\n+        @Override\n@@ -1409,0 +1447,1 @@\n+        @Override\n@@ -1421,0 +1460,1 @@\n+        @Override\n@@ -1442,0 +1482,1 @@\n+        @Override\n@@ -1450,0 +1491,1 @@\n+        @Override\n@@ -1471,1 +1513,1 @@\n-    protected class FilterComboBoxAction extends AbstractAction {\n+    protected final class FilterComboBoxAction extends AbstractAction {\n@@ -1476,0 +1518,1 @@\n+        @Override\n@@ -1488,1 +1531,1 @@\n-    protected class DirectoryComboBoxAction extends AbstractAction {\n+    protected final class DirectoryComboBoxAction extends AbstractAction {\n@@ -1493,0 +1536,1 @@\n+        @Override\n@@ -1500,1 +1544,1 @@\n-    class JSortingTableHeader extends JTableHeader {\n+    final class JSortingTableHeader extends JTableHeader {\n@@ -1510,0 +1554,1 @@\n+        @Override\n@@ -1529,0 +1574,1 @@\n+        @Override\n@@ -1533,0 +1579,1 @@\n+        @Override\n@@ -1540,1 +1587,2 @@\n-        class AquaTableCellRenderer extends DefaultTableCellRenderer implements UIResource {\n+        final class AquaTableCellRenderer extends DefaultTableCellRenderer implements UIResource {\n+            @Override\n@@ -1844,1 +1892,2 @@\n-    protected class FileListMouseListener extends MouseAdapter {\n+    protected final class FileListMouseListener extends MouseAdapter {\n+        @Override\n@@ -1920,1 +1969,1 @@\n-    protected class ScrollPaneCornerPanel extends JPanel {\n+    protected final class ScrollPaneCornerPanel extends JPanel {\n@@ -1923,0 +1972,1 @@\n+        @Override\n@@ -2098,0 +2148,1 @@\n+        @Override\n@@ -2116,0 +2167,1 @@\n+        @Override\n@@ -2134,0 +2186,1 @@\n+        @Override\n@@ -2149,0 +2202,1 @@\n+        @Override\n@@ -2154,0 +2208,1 @@\n+        @Override\n@@ -2173,1 +2228,2 @@\n-    class SaveFilePanel extends CustomFilePanel {\n+    final class SaveFilePanel extends CustomFilePanel {\n+        @Override\n@@ -2182,0 +2238,1 @@\n+        @Override\n@@ -2187,0 +2244,1 @@\n+        @Override\n@@ -2198,0 +2256,1 @@\n+        @Override\n@@ -2203,0 +2262,1 @@\n+        @Override\n@@ -2208,0 +2268,1 @@\n+        @Override\n@@ -2212,0 +2273,1 @@\n+        @Override\n@@ -2218,0 +2280,1 @@\n+        @Override\n@@ -2232,1 +2295,2 @@\n-    class OpenFilePanel extends FCSubpanel {\n+    final class OpenFilePanel extends FCSubpanel {\n+        @Override\n@@ -2245,0 +2309,1 @@\n+        @Override\n@@ -2249,0 +2314,1 @@\n+        @Override\n@@ -2256,0 +2322,1 @@\n+        @Override\n@@ -2260,0 +2327,1 @@\n+        @Override\n@@ -2265,0 +2333,1 @@\n+        @Override\n@@ -2269,0 +2338,1 @@\n+        @Override\n@@ -2273,0 +2343,1 @@\n+        @Override\n@@ -2280,0 +2351,1 @@\n+        @Override\n@@ -2284,0 +2356,1 @@\n+        @Override\n@@ -2288,0 +2361,1 @@\n+        @Override\n@@ -2310,1 +2384,2 @@\n-    class OpenDirOrAnyPanel extends DirOrAnyPanel {\n+    final class OpenDirOrAnyPanel extends DirOrAnyPanel {\n+        @Override\n@@ -2318,0 +2393,1 @@\n+        @Override\n@@ -2322,0 +2398,1 @@\n+        @Override\n@@ -2326,0 +2403,1 @@\n+        @Override\n@@ -2333,0 +2411,1 @@\n+        @Override\n@@ -2350,1 +2429,2 @@\n-    class CustomDirOrAnyPanel extends DirOrAnyPanel {\n+    final class CustomDirOrAnyPanel extends DirOrAnyPanel {\n+        @Override\n@@ -2358,0 +2438,1 @@\n+        @Override\n@@ -2368,0 +2449,1 @@\n+        @Override\n@@ -2377,1 +2459,1 @@\n-    class MacListSelectionModel extends DefaultListSelectionModel {\n+    final class MacListSelectionModel extends DefaultListSelectionModel {\n@@ -2430,0 +2512,1 @@\n+        @Override\n@@ -2434,0 +2517,1 @@\n+        @Override\n@@ -2438,0 +2522,1 @@\n+        @Override\n@@ -2448,0 +2533,1 @@\n+        @Override\n@@ -2468,1 +2554,1 @@\n-    static class JTableExtension extends JTable {\n+    static final class JTableExtension extends JTable {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileChooserUI.java","additions":115,"deletions":29,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-class AquaFileSystemModel extends AbstractTableModel implements PropertyChangeListener {\n+final class AquaFileSystemModel extends AbstractTableModel implements PropertyChangeListener {\n@@ -78,0 +78,1 @@\n+    @Override\n@@ -189,0 +190,1 @@\n+    @Override\n@@ -193,0 +195,1 @@\n+    @Override\n@@ -197,0 +200,1 @@\n+    @Override\n@@ -202,0 +206,1 @@\n+    @Override\n@@ -241,0 +246,1 @@\n+    @Override\n@@ -341,1 +347,2 @@\n-    static class QuickSortNames extends QuickSort {\n+    static final class QuickSortNames extends QuickSort {\n+        @Override\n@@ -349,1 +356,2 @@\n-    static class QuickSortDates extends QuickSort {\n+    static final class QuickSortDates extends QuickSort {\n+        @Override\n@@ -356,1 +364,1 @@\n-    static class SortableFile \/* extends FileView *\/{\n+    static final class SortableFile \/* extends FileView *\/{\n@@ -374,0 +382,1 @@\n+        @Override\n@@ -385,1 +394,1 @@\n-    class FilesLoader implements Runnable {\n+    final class FilesLoader implements Runnable {\n@@ -452,1 +461,1 @@\n-    class DoChangeContents implements Runnable {\n+    final class DoChangeContents implements Runnable {\n@@ -469,0 +478,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileSystemModel.java","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-class AquaFileView extends FileView {\n+final class AquaFileView extends FileView {\n@@ -100,1 +100,1 @@\n-    static class FileInfo {\n+    static final class FileInfo {\n@@ -153,0 +153,1 @@\n+    @Override\n@@ -174,0 +175,1 @@\n+    @Override\n@@ -178,0 +180,1 @@\n+    @Override\n@@ -183,0 +186,1 @@\n+    @Override\n@@ -213,0 +217,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileView.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public class AquaFocus {\n+public final class AquaFocus {\n@@ -112,1 +112,1 @@\n-    static class FocusedIcon extends AquaUtils.ShadowBorder implements Icon {\n+    static final class FocusedIcon extends AquaUtils.ShadowBorder implements Icon {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFocus.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    @Override\n@@ -68,0 +69,1 @@\n+    @Override\n@@ -77,0 +79,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFocusHandler.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class AquaFonts {\n+public final class AquaFonts {\n@@ -134,0 +134,1 @@\n+        @Override\n@@ -138,0 +139,1 @@\n+        @Override\n@@ -142,0 +144,1 @@\n+        @Override\n@@ -146,0 +149,1 @@\n+        @Override\n@@ -150,0 +154,1 @@\n+        @Override\n@@ -154,0 +159,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFonts.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    @Override\n@@ -73,1 +74,1 @@\n-    protected static class TabbedPane extends AquaGroupBorder {\n+    protected static final class TabbedPane extends AquaGroupBorder {\n@@ -79,1 +80,1 @@\n-    protected static class Titled extends AquaGroupBorder {\n+    protected static final class Titled extends AquaGroupBorder {\n@@ -85,1 +86,1 @@\n-    protected static class Titleless extends AquaGroupBorder {\n+    protected static final class Titleless extends AquaGroupBorder {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaGroupBorder.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class AquaHighlighter extends DefaultHighlighter implements UIResource {\n+public final class AquaHighlighter extends DefaultHighlighter implements UIResource {\n@@ -50,1 +50,1 @@\n-    public static class AquaHighlightPainter extends DefaultHighlightPainter {\n+    public static final class AquaHighlightPainter extends DefaultHighlightPainter {\n@@ -58,0 +58,1 @@\n+        @Override\n@@ -85,0 +86,1 @@\n+        @Override\n@@ -90,0 +92,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaHighlighter.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public class AquaIcon {\n+public final class AquaIcon {\n@@ -80,0 +80,1 @@\n+        @Override\n@@ -97,0 +98,1 @@\n+        @Override\n@@ -101,0 +103,1 @@\n+        @Override\n@@ -105,0 +108,1 @@\n+        @Override\n@@ -145,0 +149,1 @@\n+        @Override\n@@ -161,0 +166,1 @@\n+        @Override\n@@ -165,0 +171,1 @@\n+        @Override\n@@ -217,1 +224,1 @@\n-    static class FileIcon extends CachingScalingIcon {\n+    static final class FileIcon extends CachingScalingIcon {\n@@ -229,0 +236,1 @@\n+        @Override\n@@ -234,1 +242,1 @@\n-    static class SystemIconSingleton extends RecyclableSingleton<SystemIcon> {\n+    static final class SystemIconSingleton extends RecyclableSingleton<SystemIcon> {\n@@ -247,1 +255,1 @@\n-    static class SystemIconUIResourceSingleton extends RecyclableSingleton<IconUIResource> {\n+    static final class SystemIconUIResourceSingleton extends RecyclableSingleton<IconUIResource> {\n@@ -260,1 +268,1 @@\n-    static class SystemIcon extends CachingScalingIcon {\n+    static final class SystemIcon extends CachingScalingIcon {\n@@ -302,0 +310,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaIcon.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-public class AquaImageFactory {\n+public final class AquaImageFactory {\n@@ -196,1 +196,1 @@\n-    static class NamedImageSingleton extends RecyclableSingleton<Image> {\n+    static final class NamedImageSingleton extends RecyclableSingleton<Image> {\n@@ -209,1 +209,1 @@\n-    static class IconUIResourceSingleton extends RecyclableSingleton<IconUIResource> {\n+    static final class IconUIResourceSingleton extends RecyclableSingleton<IconUIResource> {\n@@ -223,1 +223,1 @@\n-    static class InvertableImageIcon extends ImageIcon implements InvertableIcon, UIResource {\n+    static final class InvertableImageIcon extends ImageIcon implements InvertableIcon, UIResource {\n@@ -299,1 +299,1 @@\n-    public static class NineSliceMetrics {\n+    public static final class NineSliceMetrics {\n@@ -323,1 +323,1 @@\n-    public static class SlicedImageControl {\n+    public static final class SlicedImageControl {\n@@ -469,0 +469,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaImageFactory.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-public class AquaInternalFrameBorder implements Border, UIResource {\n+public final class AquaInternalFrameBorder implements Border, UIResource {\n@@ -145,0 +145,1 @@\n+    @Override\n@@ -150,0 +151,1 @@\n+    @Override\n@@ -415,0 +417,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFrameBorder.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+    @Override\n@@ -84,0 +85,1 @@\n+    @Override\n@@ -99,0 +101,1 @@\n+    @Override\n@@ -120,0 +123,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFrameManager.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class AquaInternalFramePaneUI extends BasicDesktopPaneUI implements MouseListener {\n+public final class AquaInternalFramePaneUI extends BasicDesktopPaneUI implements MouseListener {\n@@ -46,0 +46,1 @@\n+    @Override\n@@ -54,0 +55,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n@@ -77,0 +80,1 @@\n+    @Override\n@@ -84,0 +88,1 @@\n+    @Override\n@@ -99,1 +104,2 @@\n-    class DockLayoutManager implements LayoutManager {\n+    final class DockLayoutManager implements LayoutManager {\n+        @Override\n@@ -103,0 +109,1 @@\n+        @Override\n@@ -106,0 +113,1 @@\n+        @Override\n@@ -110,0 +118,1 @@\n+        @Override\n@@ -114,0 +123,1 @@\n+        @Override\n@@ -120,1 +130,1 @@\n-    class Dock extends JComponent implements Border {\n+    final class Dock extends JComponent implements Border {\n@@ -129,0 +139,1 @@\n+        @Override\n@@ -139,0 +150,1 @@\n+        @Override\n@@ -150,0 +162,1 @@\n+        @Override\n@@ -160,0 +173,1 @@\n+        @Override\n@@ -164,0 +178,1 @@\n+        @Override\n@@ -168,0 +183,1 @@\n+        @Override\n@@ -190,1 +206,2 @@\n-    static class AquaDockingDesktopManager extends AquaInternalFrameManager {\n+    static final class AquaDockingDesktopManager extends AquaInternalFrameManager {\n+        @Override\n@@ -200,0 +217,1 @@\n+        @Override\n@@ -216,0 +234,1 @@\n+        @Override\n@@ -223,0 +242,1 @@\n+        @Override\n@@ -229,0 +249,1 @@\n+    @Override\n@@ -239,0 +260,1 @@\n+    @Override\n@@ -240,0 +262,1 @@\n+    @Override\n@@ -241,0 +264,1 @@\n+    @Override\n@@ -242,0 +266,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFramePaneUI.java","additions":29,"deletions":4,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-public class AquaInternalFrameUI extends BasicInternalFrameUI implements SwingConstants {\n+public final class AquaInternalFrameUI extends BasicInternalFrameUI implements SwingConstants {\n@@ -180,1 +180,1 @@\n-    static class AquaInternalFrameButtonIcon extends AquaIcon.JRSUIIcon {\n+    static final class AquaInternalFrameButtonIcon extends AquaIcon.JRSUIIcon {\n@@ -388,1 +388,1 @@\n-    protected class AquaBorderListener extends MouseInputAdapter {\n+    protected final class AquaBorderListener extends MouseInputAdapter {\n@@ -434,1 +434,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -470,3 +469,0 @@\n-                } else if (c instanceof JApplet) {\n-                    ((JApplet)c).getGlassPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n-                    ((JApplet)c).getGlassPane().setVisible(false);\n@@ -704,1 +700,1 @@\n-    class PropertyListener implements PropertyChangeListener {\n+    final class PropertyListener implements PropertyChangeListener {\n@@ -801,1 +797,1 @@\n-    static class CompoundUIBorder extends CompoundBorder implements UIResource {\n+    static final class CompoundUIBorder extends CompoundBorder implements UIResource {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFrameUI.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class AquaKeyBindings {\n+public final class AquaKeyBindings {\n@@ -478,1 +478,1 @@\n-    static class SimpleBinding implements BindingsProvider {\n+    static final class SimpleBinding implements BindingsProvider {\n@@ -481,0 +481,1 @@\n+        @Override\n@@ -485,1 +486,1 @@\n-    static class LateBoundInputMap implements LazyValue, BindingsProvider {\n+    static final class LateBoundInputMap implements LazyValue, BindingsProvider {\n@@ -493,0 +494,1 @@\n+        @Override\n@@ -497,0 +499,1 @@\n+        @Override\n@@ -551,0 +554,1 @@\n+        @Override\n@@ -586,1 +590,1 @@\n-    static class AquaMultilineAction extends TextAction {\n+    static final class AquaMultilineAction extends TextAction {\n@@ -596,0 +600,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaKeyBindings.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public class AquaLabelUI extends BasicLabelUI {\n+public final class AquaLabelUI extends BasicLabelUI {\n@@ -49,0 +49,1 @@\n+    @Override\n@@ -54,0 +55,1 @@\n+    @Override\n@@ -59,0 +61,1 @@\n+    @Override\n@@ -76,0 +79,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLabelUI.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-public class AquaListUI extends BasicListUI {\n+public final class AquaListUI extends BasicListUI {\n@@ -53,0 +53,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -64,0 +66,1 @@\n+    @Override\n@@ -71,1 +74,1 @@\n-    static class AquaHomeEndAction extends AbstractAction {\n+    static final class AquaHomeEndAction extends AbstractAction {\n@@ -81,0 +84,1 @@\n+        @Override\n@@ -97,1 +101,2 @@\n-    class FocusHandler extends BasicListUI.FocusHandler {\n+    final class FocusHandler extends BasicListUI.FocusHandler {\n+        @Override\n@@ -103,0 +108,1 @@\n+        @Override\n@@ -109,0 +115,1 @@\n+    @Override\n@@ -113,1 +120,2 @@\n-    class AquaPropertyChangeHandler extends PropertyChangeHandler {\n+    final class AquaPropertyChangeHandler extends PropertyChangeHandler {\n+        @Override\n@@ -129,1 +137,1 @@\n-    class MouseInputHandler extends BasicListUI.MouseInputHandler {\n+    final class MouseInputHandler extends BasicListUI.MouseInputHandler {\n@@ -197,1 +205,2 @@\n-    static class ComponentPainter extends AquaBorder.Default {\n+    static final class ComponentPainter extends AquaBorder.Default {\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaListUI.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-public class AquaLookAndFeel extends BasicLookAndFeel {\n+public final class AquaLookAndFeel extends BasicLookAndFeel {\n@@ -80,0 +80,1 @@\n+    @Override\n@@ -93,0 +94,1 @@\n+    @Override\n@@ -102,0 +104,1 @@\n+    @Override\n@@ -121,0 +124,1 @@\n+    @Override\n@@ -129,0 +133,1 @@\n+    @Override\n@@ -141,0 +146,1 @@\n+    @Override\n@@ -156,0 +162,1 @@\n+    @Override\n@@ -178,0 +185,1 @@\n+    @Override\n@@ -212,0 +220,1 @@\n+    @Override\n@@ -232,0 +241,1 @@\n+    @Override\n@@ -282,0 +292,1 @@\n+    @Override\n@@ -1020,0 +1031,1 @@\n+    @Override\n@@ -1062,0 +1074,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLookAndFeel.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class AquaMenuBarBorder implements Border, UIResource {\n+public final class AquaMenuBarBorder implements Border, UIResource {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuBarBorder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public class AquaMenuBarUI extends BasicMenuBarUI implements ScreenMenuBarProvider {\n+public final class AquaMenuBarUI extends BasicMenuBarUI implements ScreenMenuBarProvider {\n@@ -50,0 +50,1 @@\n+    @Override\n@@ -68,0 +69,1 @@\n+    @Override\n@@ -74,0 +76,1 @@\n+    @Override\n@@ -81,0 +84,1 @@\n+    @Override\n@@ -85,0 +89,1 @@\n+    @Override\n@@ -114,0 +119,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuBarUI.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-public class AquaMenuBorder implements Border, UIResource {\n+public final class AquaMenuBorder implements Border, UIResource {\n@@ -47,0 +47,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -82,0 +84,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuBorder.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class AquaMenuItemUI extends BasicMenuItemUI implements AquaMenuPainter.Client\/*, ScreenMenuItemUI*\/ {\n+public final class AquaMenuItemUI extends BasicMenuItemUI implements AquaMenuPainter.Client\/*, ScreenMenuItemUI*\/ {\n@@ -60,0 +60,1 @@\n+    @Override\n@@ -102,0 +103,1 @@\n+    @Override\n@@ -106,0 +108,1 @@\n+    @Override\n@@ -110,0 +113,1 @@\n+    @Override\n@@ -122,0 +126,1 @@\n+    @Override\n@@ -149,0 +154,1 @@\n+    @Override\n@@ -161,1 +167,1 @@\n-    static class IndeterminateListener implements PropertyChangeListener {\n+    static final class IndeterminateListener implements PropertyChangeListener {\n@@ -173,0 +179,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuItemUI.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-public class AquaMenuPainter {\n+public final class AquaMenuPainter {\n@@ -154,1 +154,1 @@\n-    static class RecyclableBorder extends RecyclableSingleton<Border> {\n+    static final class RecyclableBorder extends RecyclableSingleton<Border> {\n@@ -157,0 +157,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuPainter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaMenuUI extends BasicMenuUI implements AquaMenuPainter.Client {\n+public final class AquaMenuUI extends BasicMenuUI implements AquaMenuPainter.Client {\n@@ -41,0 +41,1 @@\n+    @Override\n@@ -45,0 +46,1 @@\n+    @Override\n@@ -54,0 +56,1 @@\n+    @Override\n@@ -58,0 +61,1 @@\n+    @Override\n@@ -64,0 +68,1 @@\n+    @Override\n@@ -85,0 +90,1 @@\n+    @Override\n@@ -89,0 +95,1 @@\n+    @Override\n@@ -94,1 +101,2 @@\n-    class MenuDragMouseHandler implements MenuDragMouseListener {\n+    final class MenuDragMouseHandler implements MenuDragMouseListener {\n+        @Override\n@@ -121,0 +129,1 @@\n+        @Override\n@@ -122,0 +131,1 @@\n+        @Override\n@@ -123,0 +133,1 @@\n+        @Override\n@@ -133,1 +144,1 @@\n-    protected class AquaMouseInputHandler extends MouseInputHandler {\n+    protected final class AquaMouseInputHandler extends MouseInputHandler {\n@@ -142,0 +153,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuUI.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaNativeResources {\n+public final class AquaNativeResources {\n@@ -43,1 +43,1 @@\n-    static class CColorPaintUIResource extends Color\/*CColorPaint*\/ implements UIResource {\n+    static final class CColorPaintUIResource extends Color\/*CColorPaint*\/ implements UIResource {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaNativeResources.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-public class AquaOptionPaneUI extends BasicOptionPaneUI {\n+public final class AquaOptionPaneUI extends BasicOptionPaneUI {\n@@ -52,0 +52,1 @@\n+    @Override\n@@ -64,0 +65,1 @@\n+    @Override\n@@ -114,1 +116,1 @@\n-    public static class AquaButtonAreaLayout extends ButtonAreaLayout {\n+    public static final class AquaButtonAreaLayout extends ButtonAreaLayout {\n@@ -119,0 +121,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaOptionPaneUI.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    private static class AquaNineSlicingImagePainter<T extends JRSUIState>\n+    private static final class AquaNineSlicingImagePainter<T extends JRSUIState>\n@@ -208,1 +208,1 @@\n-    private static class AquaPixelsKey implements ImageCache.PixelsKey {\n+    private static final class AquaPixelsKey implements ImageCache.PixelsKey {\n@@ -262,1 +262,1 @@\n-    private static class RecyclableJRSUISlicedImageControl\n+    private static final class RecyclableJRSUISlicedImageControl\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaPainter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class AquaPanelUI extends BasicPanelUI {\n+public final class AquaPanelUI extends BasicPanelUI {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaPanelUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaPopupMenuSeparatorUI extends BasicSeparatorUI {\n+public final class AquaPopupMenuSeparatorUI extends BasicSeparatorUI {\n@@ -43,0 +43,1 @@\n+    @Override\n@@ -47,0 +48,1 @@\n+    @Override\n@@ -65,0 +67,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaPopupMenuSeparatorUI.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class AquaPopupMenuUI extends BasicPopupMenuUI {\n+public final class AquaPopupMenuUI extends BasicPopupMenuUI {\n@@ -40,0 +40,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaPopupMenuUI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-public class AquaProgressBarUI extends ProgressBarUI implements ChangeListener, PropertyChangeListener, AncestorListener, Sizeable {\n+public final class AquaProgressBarUI extends ProgressBarUI implements ChangeListener, PropertyChangeListener, AncestorListener, Sizeable {\n@@ -79,0 +79,1 @@\n+    @Override\n@@ -85,0 +86,1 @@\n+    @Override\n@@ -117,0 +119,1 @@\n+    @Override\n@@ -121,0 +124,1 @@\n+    @Override\n@@ -140,0 +144,1 @@\n+    @Override\n@@ -144,0 +149,1 @@\n+    @Override\n@@ -151,0 +157,1 @@\n+    @Override\n@@ -153,0 +160,1 @@\n+    @Override\n@@ -266,0 +274,1 @@\n+    @Override\n@@ -325,0 +334,1 @@\n+    @Override\n@@ -343,0 +353,1 @@\n+    @Override\n@@ -359,0 +370,1 @@\n+    @Override\n@@ -443,1 +455,1 @@\n-    protected class Animator implements ActionListener {\n+    protected final class Animator implements ActionListener {\n@@ -479,0 +491,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaProgressBarUI.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-public class AquaRootPaneUI extends BasicRootPaneUI implements AncestorListener, WindowListener, ContainerListener {\n+public final class AquaRootPaneUI extends BasicRootPaneUI implements AncestorListener, WindowListener, ContainerListener {\n@@ -53,0 +53,1 @@\n+    @Override\n@@ -83,0 +84,1 @@\n+    @Override\n@@ -100,0 +102,1 @@\n+    @Override\n@@ -128,0 +131,1 @@\n+    @Override\n@@ -159,0 +163,1 @@\n+    @Override\n@@ -181,0 +186,1 @@\n+    @Override\n@@ -182,0 +188,1 @@\n+    @Override\n@@ -184,0 +191,1 @@\n+    @Override\n@@ -188,0 +196,1 @@\n+    @Override\n@@ -192,0 +201,1 @@\n+    @Override\n@@ -193,0 +203,1 @@\n+    @Override\n@@ -195,0 +206,1 @@\n+    @Override\n@@ -201,0 +213,1 @@\n+    @Override\n@@ -202,0 +215,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaRootPaneUI.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-public class AquaScrollBarUI extends ScrollBarUI {\n+public final class AquaScrollBarUI extends ScrollBarUI {\n@@ -99,0 +99,1 @@\n+    @Override\n@@ -105,0 +106,1 @@\n+    @Override\n@@ -172,0 +174,1 @@\n+    @Override\n@@ -271,1 +274,2 @@\n-    protected class PropertyChangeHandler implements PropertyChangeListener {\n+    protected final class PropertyChangeHandler implements PropertyChangeListener {\n+        @Override\n@@ -288,1 +292,2 @@\n-    protected class ModelListener implements ChangeListener {\n+    protected final class ModelListener implements ChangeListener {\n+        @Override\n@@ -295,1 +300,1 @@\n-    protected class TrackListener extends MouseAdapter implements MouseMotionListener {\n+    protected final class TrackListener extends MouseAdapter implements MouseMotionListener {\n@@ -302,0 +307,1 @@\n+        @Override\n@@ -318,0 +324,1 @@\n+        @Override\n@@ -334,0 +341,1 @@\n+        @Override\n@@ -544,1 +552,1 @@\n-    protected class ScrollListener implements ActionListener {\n+    protected final class ScrollListener implements ActionListener {\n@@ -556,0 +564,1 @@\n+        @Override\n@@ -628,0 +637,1 @@\n+    @Override\n@@ -632,0 +642,1 @@\n+    @Override\n@@ -636,0 +647,1 @@\n+    @Override\n@@ -702,1 +714,1 @@\n-    static class HitUtil {\n+    static final class HitUtil {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaScrollBarUI.java","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-public class AquaScrollPaneUI extends javax.swing.plaf.basic.BasicScrollPaneUI {\n+public final class AquaScrollPaneUI extends javax.swing.plaf.basic.BasicScrollPaneUI {\n@@ -39,0 +39,1 @@\n+    @Override\n@@ -43,1 +44,2 @@\n-    protected class XYMouseWheelHandler extends BasicScrollPaneUI.MouseWheelHandler {\n+    protected final class XYMouseWheelHandler extends BasicScrollPaneUI.MouseWheelHandler {\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaScrollPaneUI.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public class AquaScrollRegionBorder extends AquaBorder {\n+public final class AquaScrollRegionBorder extends AquaBorder {\n@@ -60,0 +60,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaScrollRegionBorder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-public class AquaSliderUI extends BasicSliderUI implements Sizeable {\n+public final class AquaSliderUI extends BasicSliderUI implements Sizeable {\n@@ -103,0 +103,1 @@\n+    @Override\n@@ -110,0 +111,1 @@\n+    @Override\n@@ -114,0 +116,1 @@\n+    @Override\n@@ -120,0 +123,1 @@\n+    @Override\n@@ -126,0 +130,1 @@\n+    @Override\n@@ -132,0 +137,1 @@\n+    @Override\n@@ -217,0 +223,1 @@\n+    @Override\n@@ -233,0 +240,1 @@\n+    @Override\n@@ -255,0 +263,1 @@\n+    @Override\n@@ -277,0 +286,1 @@\n+    @Override\n@@ -296,0 +306,1 @@\n+    @Override\n@@ -300,0 +311,1 @@\n+    @Override\n@@ -304,0 +316,1 @@\n+    @Override\n@@ -316,1 +329,1 @@\n-    class TrackListener extends javax.swing.plaf.basic.BasicSliderUI.TrackListener {\n+    final class TrackListener extends javax.swing.plaf.basic.BasicSliderUI.TrackListener {\n@@ -320,0 +333,1 @@\n+        @Override\n@@ -345,0 +359,1 @@\n+        @Override\n@@ -401,0 +416,1 @@\n+        @Override\n@@ -432,0 +448,1 @@\n+        @Override\n@@ -496,0 +513,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaSliderUI.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-public class AquaSpinnerUI extends SpinnerUI {\n+public final class AquaSpinnerUI extends SpinnerUI {\n@@ -273,1 +273,1 @@\n-    class TransparentButton extends JButton implements SwingConstants {\n+    final class TransparentButton extends JButton implements SwingConstants {\n@@ -389,1 +389,1 @@\n-    private static class ArrowButtonHandler extends AbstractAction implements FocusListener, MouseListener {\n+    private static final class ArrowButtonHandler extends AbstractAction implements FocusListener, MouseListener {\n@@ -610,0 +610,1 @@\n+        @Override\n@@ -613,0 +614,1 @@\n+        @Override\n@@ -629,1 +631,1 @@\n-    class SpinPainter extends JComponent {\n+    final class SpinPainter extends JComponent {\n@@ -696,1 +698,1 @@\n-    static class SpinnerLayout implements LayoutManager {\n+    static final class SpinnerLayout implements LayoutManager {\n@@ -803,1 +805,1 @@\n-    static class PropertyChangeHandler implements PropertyChangeListener {\n+    static final class PropertyChangeHandler implements PropertyChangeListener {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaSpinnerUI.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public class AquaSplitPaneDividerUI extends BasicSplitPaneDivider {\n+public final class AquaSplitPaneDividerUI extends BasicSplitPaneDivider {\n@@ -55,0 +55,1 @@\n+    @Override\n@@ -83,0 +84,1 @@\n+    @Override\n@@ -121,0 +123,1 @@\n+    @Override\n@@ -125,0 +128,1 @@\n+    @Override\n@@ -159,1 +163,2 @@\n-    protected class DividerLayout extends BasicSplitPaneDivider.DividerLayout {\n+    protected final class DividerLayout extends BasicSplitPaneDivider.DividerLayout {\n+        @Override\n@@ -207,1 +212,1 @@\n-    static class HorizontalSplitDividerGradientPainter implements Border {\n+    static final class HorizontalSplitDividerGradientPainter implements Border {\n@@ -217,0 +222,1 @@\n+        @Override\n@@ -221,0 +227,1 @@\n+        @Override\n@@ -225,0 +232,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaSplitPaneDividerUI.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaSplitPaneUI extends BasicSplitPaneUI implements MouseListener, PropertyChangeListener {\n+public final class AquaSplitPaneUI extends BasicSplitPaneUI implements MouseListener, PropertyChangeListener {\n@@ -47,0 +47,1 @@\n+    @Override\n@@ -51,0 +52,1 @@\n+    @Override\n@@ -57,0 +59,1 @@\n+    @Override\n@@ -63,0 +66,1 @@\n+    @Override\n@@ -93,0 +97,1 @@\n+    @Override\n@@ -94,0 +99,1 @@\n+    @Override\n@@ -95,0 +101,1 @@\n+    @Override\n@@ -96,0 +103,1 @@\n+    @Override\n@@ -98,0 +106,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaSplitPaneUI.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-public class AquaTabbedPaneContrastUI extends AquaTabbedPaneUI {\n+public final class AquaTabbedPaneContrastUI extends AquaTabbedPaneUI {\n@@ -53,0 +53,1 @@\n+    @Override\n@@ -104,0 +105,1 @@\n+    @Override\n@@ -108,0 +110,1 @@\n+    @Override\n@@ -116,0 +119,1 @@\n+    @Override\n@@ -121,0 +125,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTabbedPaneContrastUI.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,0 +214,1 @@\n+    @Override\n@@ -227,0 +228,1 @@\n+    @Override\n@@ -407,1 +409,5 @@\n-            htmlViews = createHTMLVector();\n+            Boolean htmlDisabled = (Boolean)\n+                                   tabPane.getClientProperty(\"html.disable\");\n+            if (!(Boolean.TRUE.equals(htmlDisabled))) {\n+                htmlViews = createHTMLVector();\n+            }\n@@ -575,0 +581,1 @@\n+    @Override\n@@ -580,0 +587,1 @@\n+    @Override\n@@ -593,0 +601,1 @@\n+    @Override\n@@ -624,0 +633,1 @@\n+    @Override\n@@ -745,0 +755,1 @@\n+    @Override\n@@ -1352,0 +1363,1 @@\n+    @Override\n@@ -1358,0 +1370,1 @@\n+    @Override\n@@ -1367,0 +1380,1 @@\n+    @Override\n@@ -2013,1 +2027,1 @@\n-    private static class Actions extends UIAction {\n+    private static final class Actions extends UIAction {\n@@ -2040,0 +2054,1 @@\n+        @Override\n@@ -2120,0 +2135,1 @@\n+        @Override\n@@ -2122,0 +2138,1 @@\n+        @Override\n@@ -2124,0 +2141,1 @@\n+        @Override\n@@ -2128,0 +2146,1 @@\n+        @Override\n@@ -2205,0 +2224,1 @@\n+        @Override\n@@ -2690,1 +2710,1 @@\n-    class TabbedPaneScrollLayout extends TabbedPaneLayout {\n+    final class TabbedPaneScrollLayout extends TabbedPaneLayout {\n@@ -2692,0 +2712,1 @@\n+        @Override\n@@ -2696,0 +2717,1 @@\n+        @Override\n@@ -2700,0 +2722,1 @@\n+        @Override\n@@ -2934,0 +2957,1 @@\n+        @Override\n@@ -3032,1 +3056,1 @@\n-    private class ScrollableTabSupport implements ActionListener, ChangeListener {\n+    private final class ScrollableTabSupport implements ActionListener, ChangeListener {\n@@ -3130,0 +3154,1 @@\n+        @Override\n@@ -3188,0 +3213,1 @@\n+        @Override\n@@ -3207,0 +3233,1 @@\n+        @Override\n@@ -3217,1 +3244,1 @@\n-    private class ScrollableTabViewport extends JViewport implements UIResource {\n+    private final class ScrollableTabViewport extends JViewport implements UIResource {\n@@ -3232,1 +3259,1 @@\n-    private class ScrollableTabPanel extends JPanel implements UIResource {\n+    private final class ScrollableTabPanel extends JPanel implements UIResource {\n@@ -3243,0 +3270,1 @@\n+        @Override\n@@ -3254,0 +3282,1 @@\n+        @Override\n@@ -3263,1 +3292,1 @@\n-    private static class ScrollableTabButton extends javax.swing.plaf.basic.BasicArrowButton implements UIResource, SwingConstants {\n+    private static final class ScrollableTabButton extends javax.swing.plaf.basic.BasicArrowButton implements UIResource, SwingConstants {\n@@ -3271,1 +3300,1 @@\n-    private class Handler implements ChangeListener, ContainerListener, FocusListener, MouseListener, MouseMotionListener, PropertyChangeListener {\n+    private final class Handler implements ChangeListener, ContainerListener, FocusListener, MouseListener, MouseMotionListener, PropertyChangeListener {\n@@ -3275,0 +3304,1 @@\n+        @Override\n@@ -3333,0 +3363,1 @@\n+        @Override\n@@ -3351,0 +3382,1 @@\n+        @Override\n@@ -3353,0 +3385,1 @@\n+        @Override\n@@ -3355,0 +3388,1 @@\n+        @Override\n@@ -3359,0 +3393,1 @@\n+        @Override\n@@ -3363,0 +3398,1 @@\n+        @Override\n@@ -3386,0 +3422,1 @@\n+        @Override\n@@ -3388,0 +3425,1 @@\n+        @Override\n@@ -3395,0 +3433,1 @@\n+        @Override\n@@ -3399,0 +3438,1 @@\n+        @Override\n@@ -3436,0 +3476,1 @@\n+        @Override\n@@ -3448,0 +3489,2 @@\n+            Boolean htmlDisabled = (Boolean)\n+                                   tabPane.getClientProperty(\"html.disable\");\n@@ -3449,1 +3492,1 @@\n-            if (isHTML) {\n+            if (isHTML && !(Boolean.TRUE.equals(htmlDisabled))) {\n@@ -3472,0 +3515,1 @@\n+        @Override\n@@ -3508,0 +3552,1 @@\n+        @Override\n@@ -3517,1 +3562,1 @@\n-    public class TabSelectionHandler implements ChangeListener {\n+    public final class TabSelectionHandler implements ChangeListener {\n@@ -3522,0 +3567,1 @@\n+        @Override\n@@ -3531,1 +3577,1 @@\n-    public class MouseHandler extends MouseAdapter {\n+    public final class MouseHandler extends MouseAdapter {\n@@ -3536,0 +3582,1 @@\n+        @Override\n@@ -3545,1 +3592,1 @@\n-    public class FocusHandler extends FocusAdapter {\n+    public final class FocusHandler extends FocusAdapter {\n@@ -3550,0 +3597,1 @@\n+        @Override\n@@ -3554,0 +3602,1 @@\n+        @Override\n@@ -3576,1 +3625,1 @@\n-    private class TabContainer extends JPanel implements UIResource {\n+    private final class TabContainer extends JPanel implements UIResource {\n@@ -3584,0 +3633,1 @@\n+        @Override\n@@ -3603,0 +3653,1 @@\n+        @Override\n@@ -3607,0 +3658,1 @@\n+        @Override\n@@ -3621,1 +3673,1 @@\n-    private class CroppedEdge extends JPanel implements UIResource {\n+    private final class CroppedEdge extends JPanel implements UIResource {\n@@ -3678,0 +3730,1 @@\n+        @Override\n@@ -3701,1 +3754,1 @@\n-    static class LazyActionMap extends ActionMapUIResource {\n+    static final class LazyActionMap extends ActionMapUIResource {\n@@ -3759,0 +3812,1 @@\n+        @Override\n@@ -3764,0 +3818,1 @@\n+        @Override\n@@ -3769,0 +3824,1 @@\n+        @Override\n@@ -3774,0 +3830,1 @@\n+        @Override\n@@ -3779,0 +3836,1 @@\n+        @Override\n@@ -3784,0 +3842,1 @@\n+        @Override\n@@ -3789,0 +3848,1 @@\n+        @Override\n@@ -3794,0 +3854,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTabbedPaneCopyFromBasicUI.java","additions":77,"deletions":16,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-class AquaTabbedPaneTabState {\n+final class AquaTabbedPaneTabState {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTabbedPaneTabState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+    @Override\n@@ -78,0 +79,1 @@\n+    @Override\n@@ -93,0 +95,1 @@\n+    @Override\n@@ -109,0 +112,1 @@\n+    @Override\n@@ -113,0 +117,1 @@\n+    @Override\n@@ -117,0 +122,1 @@\n+    @Override\n@@ -121,0 +127,1 @@\n+    @Override\n@@ -125,0 +132,1 @@\n+    @Override\n@@ -140,0 +148,1 @@\n+    @Override\n@@ -232,0 +241,1 @@\n+    @Override\n@@ -248,0 +258,1 @@\n+    @Override\n@@ -549,1 +560,1 @@\n-    static class AlterRects {\n+    static final class AlterRects {\n@@ -591,0 +602,1 @@\n+    @Override\n@@ -638,0 +650,1 @@\n+    @Override\n@@ -655,0 +668,1 @@\n+    @Override\n@@ -748,0 +762,1 @@\n+    @Override\n@@ -767,0 +782,1 @@\n+    @Override\n@@ -776,0 +792,1 @@\n+    @Override\n@@ -786,0 +803,1 @@\n+    @Override\n@@ -790,1 +808,2 @@\n-    protected class TabbedPanePropertyChangeHandler extends PropertyChangeHandler {\n+    protected final class TabbedPanePropertyChangeHandler extends PropertyChangeHandler {\n+        @Override\n@@ -810,0 +829,1 @@\n+    @Override\n@@ -821,1 +841,1 @@\n-    protected class FocusHandler extends FocusAdapter {\n+    protected final class FocusHandler extends FocusAdapter {\n@@ -824,0 +844,1 @@\n+        @Override\n@@ -832,0 +853,1 @@\n+        @Override\n@@ -865,1 +887,1 @@\n-    class MouseHandler extends MouseInputAdapter implements ActionListener {\n+    final class MouseHandler extends MouseInputAdapter implements ActionListener {\n@@ -879,0 +901,1 @@\n+        @Override\n@@ -901,0 +924,1 @@\n+        @Override\n@@ -920,0 +944,1 @@\n+        @Override\n@@ -947,0 +972,1 @@\n+        @Override\n@@ -1066,1 +1092,1 @@\n-    protected class AquaTruncatingTabbedPaneLayout extends AquaTabbedPaneCopyFromBasicUI.TabbedPaneLayout {\n+    protected final class AquaTruncatingTabbedPaneLayout extends AquaTabbedPaneCopyFromBasicUI.TabbedPaneLayout {\n@@ -1068,0 +1094,1 @@\n+        @Override\n@@ -1080,0 +1107,1 @@\n+        @Override\n@@ -1088,0 +1116,1 @@\n+        @Override\n@@ -1099,0 +1128,1 @@\n+        @Override\n@@ -1250,0 +1280,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTabbedPaneUI.java","additions":36,"deletions":5,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class AquaTableHeaderBorder extends AbstractBorder {\n+public final class AquaTableHeaderBorder extends AbstractBorder {\n@@ -70,0 +70,1 @@\n+    @Override\n@@ -143,0 +144,1 @@\n+    @Override\n@@ -148,0 +150,1 @@\n+    @Override\n@@ -161,0 +164,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTableHeaderBorder.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class AquaTableHeaderUI extends BasicTableHeaderUI {\n+public final class AquaTableHeaderUI extends BasicTableHeaderUI {\n@@ -49,0 +49,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -115,1 +117,2 @@\n-    class AquaTableCellRenderer extends DefaultTableCellRenderer implements UIResource {\n+    final class AquaTableCellRenderer extends DefaultTableCellRenderer implements UIResource {\n+        @Override\n@@ -168,0 +171,1 @@\n+    @Override\n@@ -173,0 +177,1 @@\n+    @Override\n@@ -235,0 +240,1 @@\n+    @Override\n@@ -250,0 +256,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTableHeaderUI.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class AquaTableUI extends BasicTableUI {\n+public final class AquaTableUI extends BasicTableUI {\n@@ -49,0 +49,1 @@\n+    @Override\n@@ -56,0 +57,1 @@\n+    @Override\n@@ -65,1 +67,2 @@\n-    public class FocusHandler extends BasicTableUI.FocusHandler {\n+    public final class FocusHandler extends BasicTableUI.FocusHandler {\n+        @Override\n@@ -71,0 +74,1 @@\n+        @Override\n@@ -84,0 +88,1 @@\n+    @Override\n@@ -90,0 +95,1 @@\n+    @Override\n@@ -100,1 +106,1 @@\n-    public class MouseInputHandler extends BasicTableUI.MouseInputHandler {\n+    public final class MouseInputHandler extends BasicTableUI.MouseInputHandler {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTableUI.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class AquaTextAreaUI extends BasicTextAreaUI {\n+public final class AquaTextAreaUI extends BasicTextAreaUI {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTextAreaUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    @Override\n@@ -64,0 +65,1 @@\n+    @Override\n@@ -125,0 +127,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTextFieldBorder.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class AquaTextFieldFormattedUI extends AquaTextFieldUI implements MouseListener {\n+public final class AquaTextFieldFormattedUI extends AquaTextFieldUI implements MouseListener {\n@@ -48,0 +48,1 @@\n+    @Override\n@@ -53,0 +54,1 @@\n+    @Override\n@@ -58,0 +60,1 @@\n+    @Override\n@@ -69,0 +72,1 @@\n+    @Override\n@@ -70,0 +74,1 @@\n+    @Override\n@@ -71,0 +76,1 @@\n+    @Override\n@@ -72,0 +78,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTextFieldFormattedUI.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public class AquaTextFieldSearch {\n+public final class AquaTextFieldSearch {\n@@ -61,1 +61,2 @@\n-    static class SearchFieldPropertyListener implements PropertyChangeListener {\n+    static final class SearchFieldPropertyListener implements PropertyChangeListener {\n+        @Override\n@@ -293,1 +294,1 @@\n-    static class SearchFieldBorder extends AquaTextFieldBorder implements JComponentPainter {\n+    static final class SearchFieldBorder extends AquaTextFieldBorder implements JComponentPainter {\n@@ -305,0 +306,1 @@\n+        @Override\n@@ -312,0 +314,1 @@\n+        @Override\n@@ -317,0 +320,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTextFieldSearch.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaTextPaneUI extends BasicTextPaneUI {\n+public final class AquaTextPaneUI extends BasicTextPaneUI {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTextPaneUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class AquaTextPasswordFieldUI extends AquaTextFieldUI {\n+public final class AquaTextPasswordFieldUI extends AquaTextFieldUI {\n@@ -87,1 +87,1 @@\n-    protected class AquaPasswordView extends PasswordView {\n+    protected final class AquaPasswordView extends PasswordView {\n@@ -102,1 +102,1 @@\n-    static class CapsLockSymbolPainter extends KeyAdapter implements Border, UIResource {\n+    static final class CapsLockSymbolPainter extends KeyAdapter implements Border, UIResource {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTextPasswordFieldUI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaToolBarSeparatorUI extends BasicToolBarSeparatorUI {\n+public final class AquaToolBarSeparatorUI extends BasicToolBarSeparatorUI {\n@@ -49,0 +49,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -70,0 +72,1 @@\n+    @Override\n@@ -78,0 +81,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaToolBarSeparatorUI.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class AquaToolBarUI extends BasicToolBarUI implements SwingConstants {\n+public final class AquaToolBarUI extends BasicToolBarUI implements SwingConstants {\n@@ -47,0 +47,1 @@\n+    @Override\n@@ -48,0 +49,1 @@\n+    @Override\n@@ -49,0 +51,1 @@\n+    @Override\n@@ -51,0 +54,1 @@\n+    @Override\n@@ -59,1 +63,1 @@\n-    static class ToolBarBorder extends AbstractBorder implements UIResource, javax.swing.SwingConstants {\n+    static final class ToolBarBorder extends AbstractBorder implements UIResource, javax.swing.SwingConstants {\n@@ -73,0 +77,1 @@\n+        @Override\n@@ -103,0 +108,1 @@\n+        @Override\n@@ -108,0 +114,1 @@\n+        @Override\n@@ -135,0 +142,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaToolBarUI.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class AquaToolTipUI extends BasicToolTipUI {\n+public final class AquaToolTipUI extends BasicToolTipUI {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaToolTipUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-public class AquaTreeUI extends BasicTreeUI {\n+public final class AquaTreeUI extends BasicTreeUI {\n@@ -83,0 +83,1 @@\n+    @Override\n@@ -91,0 +92,1 @@\n+    @Override\n@@ -99,0 +101,1 @@\n+    @Override\n@@ -120,0 +123,1 @@\n+    @Override\n@@ -128,0 +132,1 @@\n+    @Override\n@@ -159,0 +164,1 @@\n+    @Override\n@@ -165,0 +171,1 @@\n+    @Override\n@@ -172,1 +179,2 @@\n-    class LineListener implements PropertyChangeListener {\n+    final class LineListener implements PropertyChangeListener {\n+        @Override\n@@ -185,0 +193,1 @@\n+    @Override\n@@ -275,0 +284,1 @@\n+    @Override\n@@ -282,0 +292,1 @@\n+    @Override\n@@ -286,1 +297,2 @@\n-    class FocusHandler extends BasicTreeUI.FocusHandler {\n+    final class FocusHandler extends BasicTreeUI.FocusHandler {\n+        @Override\n@@ -292,0 +304,1 @@\n+        @Override\n@@ -298,0 +311,1 @@\n+    @Override\n@@ -302,1 +316,2 @@\n-    public class MacPropertyChangeHandler extends PropertyChangeHandler {\n+    public final class MacPropertyChangeHandler extends PropertyChangeHandler {\n+        @Override\n@@ -321,1 +336,1 @@\n-    class TreeArrowMouseInputHandler extends MouseInputAdapter {\n+    final class TreeArrowMouseInputHandler extends MouseInputAdapter {\n@@ -365,0 +380,1 @@\n+        @Override\n@@ -376,0 +392,1 @@\n+        @Override\n@@ -488,0 +505,1 @@\n+    @Override\n@@ -497,1 +515,1 @@\n-    class KeyboardExpandCollapseAction extends AbstractAction {\n+    final class KeyboardExpandCollapseAction extends AbstractAction {\n@@ -512,0 +530,1 @@\n+        @Override\n@@ -545,0 +564,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTreeUI.java","additions":26,"deletions":6,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class AquaUtilControlSize {\n+public final class AquaUtilControlSize {\n@@ -130,1 +130,1 @@\n-    protected static class PropertySizeListener implements PropertyChangeListener {\n+    protected static final class PropertySizeListener implements PropertyChangeListener {\n@@ -207,1 +207,1 @@\n-    public static class SizeVariant {\n+    public static final class SizeVariant {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaUtilControlSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-    static class RecyclableSingletonFromDefaultConstructor<T> extends RecyclableSingleton<T> {\n+    static final class RecyclableSingletonFromDefaultConstructor<T> extends RecyclableSingleton<T> {\n@@ -311,1 +311,1 @@\n-    static class SlicedShadowBorder extends ShadowBorder {\n+    static final class SlicedShadowBorder extends ShadowBorder {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class ScreenMenuBar extends MenuBar\n+public final class ScreenMenuBar extends MenuBar\n@@ -56,0 +56,1 @@\n+    @Override\n@@ -85,0 +86,1 @@\n+    @Override\n@@ -113,0 +115,1 @@\n+    @Override\n@@ -122,0 +125,1 @@\n+    @Override\n@@ -131,0 +135,1 @@\n+    @Override\n@@ -136,0 +141,1 @@\n+    @Override\n@@ -143,0 +149,1 @@\n+    @Override\n@@ -155,0 +162,1 @@\n+    @Override\n@@ -166,0 +174,1 @@\n+    @Override\n@@ -187,0 +196,1 @@\n+    @Override\n@@ -188,0 +198,1 @@\n+    @Override\n@@ -190,0 +201,1 @@\n+    @Override\n@@ -197,0 +209,1 @@\n+    @Override\n@@ -198,0 +211,1 @@\n+    @Override\n@@ -201,0 +215,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenuBar.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    @Override\n@@ -95,0 +96,1 @@\n+    @Override\n@@ -128,0 +130,1 @@\n+    @Override\n@@ -135,0 +138,1 @@\n+    @Override\n@@ -140,0 +144,1 @@\n+    @Override\n@@ -147,0 +152,1 @@\n+    @Override\n@@ -157,0 +163,1 @@\n+    @Override\n@@ -171,0 +178,1 @@\n+    @Override\n@@ -179,0 +187,1 @@\n+    @Override\n@@ -195,0 +204,1 @@\n+    @Override\n@@ -198,0 +208,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenuItem.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+    @Override\n@@ -107,0 +108,1 @@\n+    @Override\n@@ -128,0 +130,1 @@\n+    @Override\n@@ -135,0 +138,1 @@\n+    @Override\n@@ -140,0 +144,1 @@\n+    @Override\n@@ -147,0 +152,1 @@\n+    @Override\n@@ -157,0 +163,1 @@\n+    @Override\n@@ -161,0 +168,1 @@\n+    @Override\n@@ -168,0 +176,1 @@\n+    @Override\n@@ -191,0 +200,1 @@\n+    @Override\n@@ -196,0 +206,1 @@\n+    @Override\n@@ -212,0 +223,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenuItemCheckbox.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-class ScreenMenuPropertyListener implements PropertyChangeListener {\n+final class ScreenMenuPropertyListener implements PropertyChangeListener {\n@@ -45,0 +45,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenuPropertyListener.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-class ScreenPopupFactory extends PopupFactory {\n+final class ScreenPopupFactory extends PopupFactory {\n@@ -53,0 +53,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenPopupFactory.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-public class PlatformGraphicsInfo {\n+public final class PlatformGraphicsInfo {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class CCharToGlyphMapper extends CharToGlyphMapper {\n+public final class CCharToGlyphMapper extends CharToGlyphMapper {\n@@ -45,0 +45,1 @@\n+    @Override\n@@ -52,0 +53,1 @@\n+    @Override\n@@ -57,0 +59,1 @@\n+    @Override\n@@ -62,0 +65,1 @@\n+    @Override\n@@ -94,0 +98,1 @@\n+    @Override\n@@ -112,0 +117,1 @@\n+    @Override\n@@ -116,0 +122,1 @@\n+    @Override\n@@ -134,0 +141,1 @@\n+    @Override\n@@ -138,0 +146,1 @@\n+    @Override\n@@ -154,1 +163,1 @@\n-    private class Cache {\n+    private final class Cache {\n@@ -212,1 +221,1 @@\n-        private class SparseBitShiftingTwoLayerArray {\n+        private final class SparseBitShiftingTwoLayerArray {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CCharToGlyphMapper.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+    @Override\n@@ -70,0 +71,1 @@\n+    @Override\n@@ -83,0 +85,1 @@\n+    @Override\n@@ -87,0 +90,1 @@\n+    @Override\n@@ -91,0 +95,1 @@\n+    @Override\n@@ -125,0 +130,1 @@\n+    @Override\n@@ -149,0 +155,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CCompositeGlyphMapper.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    @Override\n@@ -51,0 +52,1 @@\n+    @Override\n@@ -55,0 +57,1 @@\n+    @Override\n@@ -60,0 +63,1 @@\n+    @Override\n@@ -64,0 +68,1 @@\n+    @Override\n@@ -69,0 +74,1 @@\n+    @Override\n@@ -74,0 +80,1 @@\n+    @Override\n@@ -197,0 +204,1 @@\n+    @Override\n@@ -243,0 +251,1 @@\n+    @Override\n@@ -250,0 +259,1 @@\n+    @Override\n@@ -258,0 +268,1 @@\n+    @Override\n@@ -265,0 +276,1 @@\n+    @Override\n@@ -279,0 +291,1 @@\n+    @Override\n@@ -283,0 +296,1 @@\n+    @Override\n@@ -291,0 +305,1 @@\n+    @Override\n@@ -295,0 +310,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFont.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class CFontConfiguration extends FontConfiguration {\n+final class CFontConfiguration extends FontConfiguration {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFontConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+    @Override\n@@ -204,0 +205,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFontManager.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,0 +139,1 @@\n+    @Override\n@@ -186,0 +187,1 @@\n+    @Override\n@@ -203,0 +205,1 @@\n+    @Override\n@@ -224,0 +227,1 @@\n+    @Override\n@@ -229,0 +233,1 @@\n+    @Override\n@@ -234,0 +239,1 @@\n+    @Override\n@@ -253,0 +259,1 @@\n+    @Override\n@@ -364,1 +371,1 @@\n-    private static class GlyphInfoCache extends CStrikeDisposer {\n+    private static final class GlyphInfoCache extends CStrikeDisposer {\n@@ -431,0 +438,1 @@\n+        @Override\n@@ -479,1 +487,1 @@\n-        private static class SparseBitShiftingTwoLayerArray {\n+        private static final class SparseBitShiftingTwoLayerArray {\n@@ -508,1 +516,1 @@\n-    private static class GlyphAdvanceCache {\n+    private static final class GlyphAdvanceCache {\n@@ -561,1 +569,1 @@\n-        private static class SparseBitShiftingTwoLayerArray {\n+        private static final class SparseBitShiftingTwoLayerArray {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CStrike.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -78,0 +78,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CStrikeDisposer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class NativeFont extends PhysicalFont {\n+public final class NativeFont extends PhysicalFont {\n@@ -56,0 +56,1 @@\n+    @Override\n@@ -64,0 +65,1 @@\n+    @Override\n@@ -72,0 +74,1 @@\n+    @Override\n@@ -76,0 +79,1 @@\n+    @Override\n@@ -82,0 +86,1 @@\n+    @Override\n@@ -89,0 +94,1 @@\n+    @Override\n@@ -94,0 +100,1 @@\n+    @Override\n@@ -99,0 +106,1 @@\n+    @Override\n@@ -103,0 +111,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/NativeFont.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+    @Override\n@@ -54,0 +55,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n@@ -67,0 +70,1 @@\n+    @Override\n@@ -71,0 +75,1 @@\n+    @Override\n@@ -75,0 +80,1 @@\n+    @Override\n@@ -78,0 +84,1 @@\n+    @Override\n@@ -82,0 +89,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/NativeStrike.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+    @Override\n@@ -75,0 +76,1 @@\n+    @Override\n@@ -102,0 +104,1 @@\n+    @Override\n@@ -115,0 +118,1 @@\n+    @Override\n@@ -142,0 +146,1 @@\n+    @Override\n@@ -154,0 +159,1 @@\n+    @Override\n@@ -181,0 +187,1 @@\n+    @Override\n@@ -193,0 +200,1 @@\n+    @Override\n@@ -220,0 +228,1 @@\n+    @Override\n@@ -233,0 +242,1 @@\n+    @Override\n@@ -247,0 +257,1 @@\n+    @Override\n@@ -262,0 +273,1 @@\n+    @Override\n@@ -377,0 +389,1 @@\n+    @Override\n@@ -386,0 +399,1 @@\n+    @Override\n@@ -530,0 +544,1 @@\n+    @Override\n@@ -542,0 +557,1 @@\n+    @Override\n@@ -554,0 +570,1 @@\n+    @Override\n@@ -566,0 +583,1 @@\n+    @Override\n@@ -578,0 +596,1 @@\n+    @Override\n@@ -593,0 +612,1 @@\n+    @Override\n@@ -605,1 +625,2 @@\n-    public static class Tracer extends CRenderer {\n+    public static final class Tracer extends CRenderer {\n+        @Override\n@@ -611,0 +632,1 @@\n+        @Override\n@@ -616,0 +638,1 @@\n+        @Override\n@@ -621,0 +644,1 @@\n+        @Override\n@@ -626,0 +650,1 @@\n+        @Override\n@@ -631,0 +656,1 @@\n+        @Override\n@@ -636,0 +662,1 @@\n+        @Override\n@@ -641,0 +668,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/CRenderer.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class CompositeCRenderer extends CRenderer implements PixelDrawPipe, PixelFillPipe, ShapeDrawPipe, DrawImagePipe, TextPipe {\n+public final class CompositeCRenderer extends CRenderer implements PixelDrawPipe, PixelFillPipe, ShapeDrawPipe, DrawImagePipe, TextPipe {\n@@ -52,0 +52,1 @@\n+    @Override\n@@ -59,0 +60,1 @@\n+    @Override\n@@ -66,0 +68,1 @@\n+    @Override\n@@ -73,0 +76,1 @@\n+    @Override\n@@ -80,0 +84,1 @@\n+    @Override\n@@ -87,0 +92,1 @@\n+    @Override\n@@ -91,0 +97,1 @@\n+    @Override\n@@ -95,0 +102,1 @@\n+    @Override\n@@ -102,0 +110,1 @@\n+    @Override\n@@ -109,0 +118,1 @@\n+    @Override\n@@ -116,0 +126,1 @@\n+    @Override\n@@ -123,0 +134,1 @@\n+    @Override\n@@ -143,0 +155,1 @@\n+    @Override\n@@ -147,0 +160,1 @@\n+    @Override\n@@ -195,0 +209,1 @@\n+    @Override\n@@ -199,0 +214,1 @@\n+    @Override\n@@ -207,0 +223,1 @@\n+    @Override\n@@ -245,0 +262,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/CompositeCRenderer.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -108,0 +108,1 @@\n+    @Override\n@@ -121,0 +122,1 @@\n+    @Override\n@@ -134,0 +136,1 @@\n+    @Override\n@@ -147,0 +150,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/DataBufferNIOInt.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class IntegerNIORaster extends SunWritableRaster {\n+public final class IntegerNIORaster extends SunWritableRaster {\n@@ -58,0 +58,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -72,0 +74,1 @@\n+    @Override\n@@ -79,0 +82,1 @@\n+    @Override\n@@ -89,0 +93,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/IntegerNIORaster.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-public class MacOSFlags {\n+public final class MacOSFlags {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/MacOSFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class OSXOffScreenSurfaceData extends OSXSurfaceData \/\/ implements RasterListener\n+public final class OSXOffScreenSurfaceData extends OSXSurfaceData \/\/ implements RasterListener\n@@ -477,0 +477,1 @@\n+    @Override\n@@ -527,0 +528,1 @@\n+    @Override\n@@ -541,0 +543,1 @@\n+    @Override\n@@ -552,0 +555,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/OSXOffScreenSurfaceData.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+    @Override\n@@ -124,0 +125,1 @@\n+    @Override\n@@ -129,0 +131,1 @@\n+    @Override\n@@ -197,0 +200,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/OSXSurfaceData.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-class MTLSurfaceToSurfaceBlit extends Blit {\n+final class MTLSurfaceToSurfaceBlit extends Blit {\n@@ -345,0 +345,1 @@\n+    @Override\n@@ -359,1 +360,1 @@\n-class MTLSurfaceToSurfaceScale extends ScaledBlit {\n+final class MTLSurfaceToSurfaceScale extends ScaledBlit {\n@@ -367,0 +368,1 @@\n+    @Override\n@@ -384,1 +386,1 @@\n-class MTLSurfaceToSurfaceTransform extends TransformBlit {\n+final class MTLSurfaceToSurfaceTransform extends TransformBlit {\n@@ -392,0 +394,1 @@\n+    @Override\n@@ -407,1 +410,1 @@\n-class MTLRTTSurfaceToSurfaceBlit extends Blit {\n+final class MTLRTTSurfaceToSurfaceBlit extends Blit {\n@@ -415,0 +418,1 @@\n+    @Override\n@@ -429,1 +433,1 @@\n-class MTLRTTSurfaceToSurfaceScale extends ScaledBlit {\n+final class MTLRTTSurfaceToSurfaceScale extends ScaledBlit {\n@@ -437,0 +441,1 @@\n+    @Override\n@@ -454,1 +459,1 @@\n-class MTLRTTSurfaceToSurfaceTransform extends TransformBlit {\n+final class MTLRTTSurfaceToSurfaceTransform extends TransformBlit {\n@@ -462,0 +467,1 @@\n+    @Override\n@@ -524,0 +530,1 @@\n+    @Override\n@@ -577,1 +584,1 @@\n-class MTLSwToSurfaceBlit extends Blit {\n+final class MTLSwToSurfaceBlit extends Blit {\n@@ -588,0 +595,1 @@\n+    @Override\n@@ -601,1 +609,1 @@\n-class MTLSwToSurfaceScale extends ScaledBlit {\n+final class MTLSwToSurfaceScale extends ScaledBlit {\n@@ -612,0 +620,1 @@\n+    @Override\n@@ -628,1 +637,1 @@\n-class MTLSwToSurfaceTransform extends TransformBlit {\n+final class MTLSwToSurfaceTransform extends TransformBlit {\n@@ -639,0 +648,1 @@\n+    @Override\n@@ -652,1 +662,1 @@\n-class MTLSwToTextureBlit extends Blit {\n+final class MTLSwToTextureBlit extends Blit {\n@@ -663,0 +673,1 @@\n+    @Override\n@@ -676,1 +687,1 @@\n-class MTLTextureToSurfaceBlit extends Blit {\n+final class MTLTextureToSurfaceBlit extends Blit {\n@@ -684,0 +695,1 @@\n+    @Override\n@@ -698,1 +710,1 @@\n-class MTLTextureToSurfaceScale extends ScaledBlit {\n+final class MTLTextureToSurfaceScale extends ScaledBlit {\n@@ -706,0 +718,1 @@\n+    @Override\n@@ -723,1 +736,1 @@\n-class MTLTextureToSurfaceTransform extends TransformBlit {\n+final class MTLTextureToSurfaceTransform extends TransformBlit {\n@@ -731,0 +744,1 @@\n+    @Override\n@@ -752,1 +766,1 @@\n-class MTLGeneralBlit extends Blit {\n+final class MTLGeneralBlit extends Blit {\n@@ -765,0 +779,1 @@\n+    @Override\n@@ -860,0 +875,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLBlitLoops.java","additions":30,"deletions":14,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-class MTLBufImgOps extends BufferedBufImgOps {\n+final class MTLBufImgOps extends BufferedBufImgOps {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLBufImgOps.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    public static class MTLContextCaps extends ContextCapabilities {\n+    public static final class MTLContextCaps extends ContextCapabilities {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class MTLDrawImage extends DrawImage {\n+public final class MTLDrawImage extends DrawImage {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLDrawImage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-    private static class MTLGCDisposerRecord implements DisposerRecord {\n+    private static final class MTLGCDisposerRecord implements DisposerRecord {\n@@ -216,0 +216,1 @@\n+        @Override\n@@ -305,1 +306,1 @@\n-    private static class MTLBufferCaps extends BufferCapabilities {\n+    private static final class MTLBufferCaps extends BufferCapabilities {\n@@ -320,1 +321,1 @@\n-    private static class MTLImageCaps extends ImageCapabilities {\n+    private static final class MTLImageCaps extends ImageCapabilities {\n@@ -324,0 +325,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLGraphicsConfig.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class MTLLayer extends CFLayer {\n+public final class MTLLayer extends CFLayer {\n@@ -55,0 +55,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLLayer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-class MTLMaskBlit extends BufferedMaskBlit {\n+final class MTLMaskBlit extends BufferedMaskBlit {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLMaskBlit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-class MTLMaskFill extends BufferedMaskFill {\n+final class MTLMaskFill extends BufferedMaskFill {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLMaskFill.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    private static class Gradient extends MTLPaints {\n+    private static final class Gradient extends MTLPaints {\n@@ -96,1 +96,1 @@\n-    private static class Texture extends MTLPaints {\n+    private static final class Texture extends MTLPaints {\n@@ -174,1 +174,1 @@\n-    private static class LinearGradient extends MultiGradient {\n+    private static final class LinearGradient extends MultiGradient {\n@@ -196,1 +196,1 @@\n-    private static class RadialGradient extends MultiGradient {\n+    private static final class RadialGradient extends MultiGradient {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLPaints.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class MTLRenderQueue extends RenderQueue {\n+public final class MTLRenderQueue extends RenderQueue {\n@@ -131,0 +131,1 @@\n+    @Override\n@@ -156,1 +157,1 @@\n-    private class QueueFlusher implements Runnable {\n+    private final class QueueFlusher implements Runnable {\n@@ -195,0 +196,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLRenderQueue.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    private static class Tracer extends MTLRenderer {\n+    private static final class Tracer extends MTLRenderer {\n@@ -107,0 +107,1 @@\n+        @Override\n@@ -138,0 +139,1 @@\n+        @Override\n@@ -141,0 +143,1 @@\n+        @Override\n@@ -147,0 +150,1 @@\n+        @Override\n@@ -151,0 +155,1 @@\n+        @Override\n@@ -158,0 +163,1 @@\n+        @Override\n@@ -162,0 +168,1 @@\n+        @Override\n@@ -168,0 +175,1 @@\n+        @Override\n@@ -174,0 +182,1 @@\n+        @Override\n@@ -180,0 +189,1 @@\n+        @Override\n@@ -192,0 +202,1 @@\n+        @Override\n@@ -205,0 +216,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLRenderer.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -294,0 +294,1 @@\n+    @Override\n@@ -308,0 +309,1 @@\n+    @Override\n@@ -323,0 +325,1 @@\n+    @Override\n@@ -340,0 +343,1 @@\n+    @Override\n@@ -469,0 +473,1 @@\n+    @Override\n@@ -513,0 +518,1 @@\n+    @Override\n@@ -520,0 +526,1 @@\n+    @Override\n@@ -534,0 +541,1 @@\n+    @Override\n@@ -551,1 +559,1 @@\n-    public static class MTLLayerSurfaceData extends MTLSurfaceData {\n+    public static final class MTLLayerSurfaceData extends MTLSurfaceData {\n@@ -592,1 +600,1 @@\n-    public static class MTLOffScreenSurfaceData extends MTLSurfaceData {\n+    public static final class MTLOffScreenSurfaceData extends MTLSurfaceData {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLSurfaceData.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class MTLSurfaceDataProxy extends SurfaceDataProxy {\n+public final class MTLSurfaceDataProxy extends SurfaceDataProxy {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLSurfaceDataProxy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    private static class Tracer extends MTLTextRenderer {\n+    private static final class Tracer extends MTLTextRenderer {\n@@ -67,0 +67,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLTextRenderer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class MTLVolatileSurfaceManager extends VolatileSurfaceManager {\n+public final class MTLVolatileSurfaceManager extends VolatileSurfaceManager {\n@@ -52,0 +52,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLVolatileSurfaceManager.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-    private static class CGLGCDisposerRecord implements DisposerRecord {\n+    private static final class CGLGCDisposerRecord implements DisposerRecord {\n@@ -218,0 +218,1 @@\n+        @Override\n@@ -324,1 +325,1 @@\n-    private static class CGLBufferCaps extends BufferCapabilities {\n+    private static final class CGLBufferCaps extends BufferCapabilities {\n@@ -339,1 +340,1 @@\n-    private static class CGLImageCaps extends ImageCapabilities {\n+    private static final class CGLImageCaps extends ImageCapabilities {\n@@ -343,0 +344,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/opengl\/CGLGraphicsConfig.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class CGLLayer extends CFLayer {\n+public final class CGLLayer extends CFLayer {\n@@ -51,0 +51,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/opengl\/CGLLayer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    public static class CGLLayerSurfaceData extends CGLSurfaceData {\n+    public static final class CGLLayerSurfaceData extends CGLSurfaceData {\n@@ -155,1 +155,1 @@\n-    public static class CGLOffScreenSurfaceData extends CGLSurfaceData {\n+    public static final class CGLOffScreenSurfaceData extends CGLSurfaceData {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/opengl\/CGLSurfaceData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class CGLVolatileSurfaceManager extends VolatileSurfaceManager {\n+public final class CGLVolatileSurfaceManager extends VolatileSurfaceManager {\n@@ -57,0 +57,1 @@\n+    @Override\n@@ -65,0 +66,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/opengl\/CGLVolatileSurfaceManager.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-public class LWKeyboardFocusManagerPeer extends KeyboardFocusManagerPeerImpl {\n+public final class LWKeyboardFocusManagerPeer extends KeyboardFocusManagerPeerImpl {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWKeyboardFocusManagerPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class LWLightweightFramePeer extends LWWindowPeer implements OverrideNativeWindowHandle {\n+public final class LWLightweightFramePeer extends LWWindowPeer implements OverrideNativeWindowHandle {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWLightweightFramePeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class LWMouseInfoPeer implements MouseInfoPeer {\n+public final class LWMouseInfoPeer implements MouseInfoPeer {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWMouseInfoPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -828,1 +828,1 @@\n-            \/\/ compatibility with applets. It can be removed when the\n+            \/\/ compatibility. It can be removed when the\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWWindowPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-class CAccessibility implements PropertyChangeListener {\n+final class CAccessibility implements PropertyChangeListener {\n@@ -107,0 +107,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-class CAccessible extends CFRetainedResource implements Accessible {\n+final class CAccessible extends CFRetainedResource implements Accessible {\n@@ -114,1 +114,1 @@\n-    private class AXChangeNotifier implements PropertyChangeListener {\n+    private final class AXChangeNotifier implements PropertyChangeListener {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-class CAccessibleText {\n+final class CAccessibleText {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibleText.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-public class CCheckboxMenuItem extends CMenuItem implements CheckboxMenuItemPeer {\n+public final class CCheckboxMenuItem extends CMenuItem implements CheckboxMenuItemPeer {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CCheckboxMenuItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-public class CCustomCursor extends Cursor {\n+public final class CCustomCursor extends Cursor {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CCustomCursor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-public class CDataTransferer extends DataTransferer {\n+public final class CDataTransferer extends DataTransferer {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDataTransferer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,0 +84,1 @@\n+    @Override\n@@ -91,0 +92,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDragSourceContextPeer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -156,0 +157,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDropTargetContextPeer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class CEmbeddedFrame extends EmbeddedFrame {\n+public final class CEmbeddedFrame extends EmbeddedFrame {\n@@ -50,0 +50,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CEmbeddedFrame.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-class CFileDialog implements FileDialogPeer {\n+final class CFileDialog implements FileDialogPeer {\n@@ -61,1 +61,1 @@\n-    private class Task implements Runnable {\n+    private final class Task implements Runnable {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CFileDialog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class CImage extends CFRetainedResource {\n+public final class CImage extends CFRetainedResource {\n@@ -85,1 +85,1 @@\n-    public static class Creator {\n+    public static final class Creator {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CImage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-public class CInputMethod extends InputMethodAdapter {\n+public final class CInputMethod extends InputMethodAdapter {\n@@ -106,0 +106,1 @@\n+    @Override\n@@ -129,0 +130,1 @@\n+    @Override\n@@ -162,0 +164,1 @@\n+    @Override\n@@ -187,0 +190,1 @@\n+    @Override\n@@ -194,0 +198,1 @@\n+    @Override\n@@ -198,0 +203,1 @@\n+    @Override\n@@ -221,0 +227,1 @@\n+    @Override\n@@ -234,0 +241,1 @@\n+    @Override\n@@ -238,0 +246,1 @@\n+    @Override\n@@ -246,0 +255,1 @@\n+    @Override\n@@ -264,0 +274,1 @@\n+    @Override\n@@ -278,0 +289,1 @@\n+    @Override\n@@ -350,0 +362,1 @@\n+    @Override\n@@ -365,0 +378,1 @@\n+    @Override\n@@ -385,0 +399,1 @@\n+    @Override\n@@ -787,0 +802,1 @@\n+    @Override\n@@ -792,0 +808,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CInputMethod.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class CInputMethodDescriptor implements InputMethodDescriptor {\n+public final class CInputMethodDescriptor implements InputMethodDescriptor {\n@@ -51,0 +51,1 @@\n+    @Override\n@@ -78,0 +79,1 @@\n+    @Override\n@@ -85,0 +87,1 @@\n+    @Override\n@@ -96,0 +99,1 @@\n+    @Override\n@@ -104,0 +108,1 @@\n+    @Override\n@@ -108,0 +113,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CInputMethodDescriptor.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-class CMouseDragGestureRecognizer extends MouseDragGestureRecognizer {\n+final class CMouseDragGestureRecognizer extends MouseDragGestureRecognizer {\n@@ -87,0 +87,1 @@\n+    @Override\n@@ -92,0 +93,1 @@\n+    @Override\n@@ -101,0 +103,1 @@\n+    @Override\n@@ -106,0 +109,1 @@\n+    @Override\n@@ -111,0 +115,1 @@\n+    @Override\n@@ -122,0 +127,1 @@\n+    @Override\n@@ -147,0 +153,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CMouseDragGestureRecognizer.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public class CPlatformEmbeddedFrame implements PlatformWindow {\n+public final class CPlatformEmbeddedFrame implements PlatformWindow {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformEmbeddedFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-class CPlatformLWComponent extends CPlatformComponent {\n+final class CPlatformLWComponent extends CPlatformComponent {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformLWComponent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-public class CPlatformLWView extends CPlatformView {\n+public final class CPlatformLWView extends CPlatformView {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformLWView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-public class CPlatformLWWindow extends CPlatformWindow {\n+public final class CPlatformLWWindow extends CPlatformWindow {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformLWWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-    static class DeltaAccumulator {\n+    static final class DeltaAccumulator {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformResponder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -436,1 +436,0 @@\n-            \/\/ Popups in applets don't activate applet's process\n@@ -607,0 +606,1 @@\n+    @Override\n@@ -717,1 +717,0 @@\n-                        \/\/ Popups in applets don't activate applet's process\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformWindow.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class CPrinterDialogPeer extends LWWindowPeer {\n+public final class CPrinterDialogPeer extends LWWindowPeer {\n@@ -50,0 +50,1 @@\n+    @Override\n@@ -54,0 +55,1 @@\n+    @Override\n@@ -66,0 +68,1 @@\n+    @Override\n@@ -67,0 +70,1 @@\n+    @Override\n@@ -68,0 +72,1 @@\n+    @Override\n@@ -69,0 +74,1 @@\n+    @Override\n@@ -73,0 +79,1 @@\n+    @Override\n@@ -74,0 +81,1 @@\n+    @Override\n@@ -75,0 +83,1 @@\n+    @Override\n@@ -81,0 +90,1 @@\n+    @Override\n@@ -82,0 +92,1 @@\n+    @Override\n@@ -90,0 +101,1 @@\n+    @Override\n@@ -95,0 +107,1 @@\n+    @Override\n@@ -98,0 +111,1 @@\n+    @Override\n@@ -103,0 +117,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterDialogPeer.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class CPrinterGraphics extends ProxyGraphics2D {\n+public final class CPrinterGraphics extends ProxyGraphics2D {\n@@ -46,0 +46,1 @@\n+    @Override\n@@ -55,0 +56,1 @@\n+    @Override\n@@ -65,0 +67,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterGraphics.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -987,1 +987,1 @@\n-    private static class FlipPageFormat extends PageFormat {\n+    private static final class FlipPageFormat extends PageFormat {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-public class CPrinterSurfaceData extends OSXSurfaceData{\n+public final class CPrinterSurfaceData extends OSXSurfaceData{\n@@ -52,0 +52,1 @@\n+    @Override\n@@ -63,0 +64,1 @@\n+    @Override\n@@ -68,0 +70,1 @@\n+    @Override\n@@ -73,0 +76,1 @@\n+    @Override\n@@ -88,0 +92,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterSurfaceData.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-public class CSystemTray implements SystemTrayPeer {\n+public final class CSystemTray implements SystemTrayPeer {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CSystemTray.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+    @Override\n@@ -144,0 +145,1 @@\n+    @Override\n@@ -170,0 +172,1 @@\n+    @Override\n@@ -184,1 +187,1 @@\n-    public static class Tracer extends CTextPipe {\n+    public static final class Tracer extends CTextPipe {\n@@ -190,0 +193,1 @@\n+        @Override\n@@ -195,0 +199,1 @@\n+        @Override\n@@ -200,0 +205,1 @@\n+        @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CTextPipe.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+    @Override\n@@ -50,0 +51,1 @@\n+    @Override\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CToolkitThreadBlockedHandler.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-public class CTrayIcon extends CFRetainedResource implements TrayIconPeer {\n+public final class CTrayIcon extends CFRetainedResource implements TrayIconPeer {\n@@ -143,0 +143,1 @@\n+    @Override\n@@ -360,1 +361,1 @@\n-    class IconObserver implements ImageObserver {\n+    final class IconObserver implements ImageObserver {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CTrayIcon.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public class CViewEmbeddedFrame extends EmbeddedFrame {\n+public final class CViewEmbeddedFrame extends EmbeddedFrame {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CViewEmbeddedFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class CViewPlatformEmbeddedFrame implements PlatformWindow {\n+public final class CViewPlatformEmbeddedFrame implements PlatformWindow {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CViewPlatformEmbeddedFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-    private static class AppleSpecificColor extends Color {\n+    private static final class AppleSpecificColor extends Color {\n@@ -405,1 +405,1 @@\n-    static class OSXPlatformFont extends sun.awt.PlatformFont {\n+    static final class OSXPlatformFont extends sun.awt.PlatformFont {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/LWCToolkit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-public class PlatformPrinterJobProxy {\n+public final class PlatformPrinterJobProxy {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/print\/PlatformPrinterJobProxy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * all good applets are only interested in logical key typed events not\n+ * all good applications are only interested in logical key typed events not\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/AWTEvent.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-\/\/ This may not work in the Applet case, since they are all running in the same VM\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/DnDUtilities.m","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -240,0 +240,1 @@\n+    size_t srcHeight = canvas->image->height;\n@@ -249,1 +250,1 @@\n-    for (y = 0; y < height; y++) {\n+    for (y = 0; y < height && y < srcHeight; y++) {\n@@ -254,1 +255,1 @@\n-        for (x = 0; x < destRowWidth; x++) {\n+        for (x = 0; x < destRowWidth && x < srcRowWidth; x++) {\n@@ -292,0 +293,1 @@\n+    size_t srcHeight = canvas->image->height;\n@@ -301,1 +303,1 @@\n-    for (y = 0; y < height; y++) {\n+    for (y = 0; y < height && y < srcHeight; y++) {\n@@ -305,1 +307,1 @@\n-        for (x = 0; x < destRowWidth; x++) {\n+        for (x = 0; x < destRowWidth && x < srcRowWidth; x++) {\n@@ -320,0 +322,1 @@\n+    size_t srcHeight = canvas->image->height;\n@@ -328,1 +331,1 @@\n-    for (y = 0; y < height; y++) {\n+    for (y = 0; y < height && y < srcHeight; y++) {\n@@ -331,1 +334,2 @@\n-            UInt16 destRowBytes = info->rowBytes;\n+            size_t srcRowBytes = canvas->image->rowBytes;\n+            UInt16 destRowBytes = (info->rowBytes < srcRowBytes) ? info->rowBytes : srcRowBytes;\n@@ -336,1 +340,1 @@\n-            for (x = 0; x < destRowWidth; x++) {\n+            for (x = 0; x < destRowWidth && x < srcRowWidth; x++) {\n@@ -429,2 +433,4 @@\n-        [[NSException exceptionWithName:NSMallocException\n-            reason:@\"Failed to allocate memory for the buffer which backs the CGContext for glyph strikes.\" userInfo:nil] raise];\n+        canvas->image->width = 0;\n+        canvas->image->height = 0;\n+        canvas->image->rowBytes = 0;\n+        canvas->image->data = malloc(0);\n@@ -480,0 +486,4 @@\n+ * This function only increases the size. To get a smaller canvas, free it first.\n+ * This function adds padding \/ slack multiplier to the requested size.\n+ * So resizes must be based on the size you need, not the size of the canvas.\n+ * The function will internally account for the multiplier it uses.\n@@ -487,1 +497,1 @@\n-        width  < canvas->image->width &&\n+        width < canvas->image->width &&\n@@ -493,0 +503,13 @@\n+    vImagePixelCount w = width * CGGI_GLYPH_CANVAS_SLACK;\n+    vImagePixelCount h = height * CGGI_GLYPH_CANVAS_SLACK;\n+\n+    \/\/ Do not allow the canvas to be resized smaller.\n+    if (canvas->image != NULL) {\n+       if (w < canvas->image->width) {\n+           w = canvas->image->width;\n+       }\n+       if (h < canvas->image->height) {\n+           h = canvas->image->height;\n+       }\n+    }\n+\n@@ -497,2 +520,2 @@\n-                    width * CGGI_GLYPH_CANVAS_SLACK,\n-                    height * CGGI_GLYPH_CANVAS_SLACK,\n+                    w,\n+                    h,\n@@ -514,0 +537,6 @@\n+    if (canvas->image->width < canvasRectToClear.width) {\n+          canvasRectToClear.width = canvas->image->width;\n+    }\n+    if (canvas->image->height < canvasRectToClear.height) {\n+          canvasRectToClear.height = canvas->image->height;\n+    }\n@@ -873,1 +902,0 @@\n-\n@@ -949,4 +977,10 @@\n-    \/\/ just do one malloc, and carve it up for all the buffers\n-    void *buffer = malloc(sizeof(CGRect) * sizeof(CGSize) *\n-                          sizeof(CGGlyph) * sizeof(UnicodeScalarValue) * len);\n-    if (buffer == NULL) {\n+    CGRect *bboxes   = (CGRect*)calloc(len, sizeof(CGRect));\n+    CGSize *advances = (CGSize*)calloc(len, sizeof(CGSize));\n+    CGGlyph *glyphs  = (CGGlyph*)calloc(len, sizeof(CGGlyph));\n+    UnicodeScalarValue *uniChars = (UnicodeScalarValue*)calloc(len, sizeof(UnicodeScalarValue));\n+\n+    if (bboxes == NULL || advances == NULL || glyphs == NULL || uniChars == NULL) {\n+        free(bboxes);\n+        free(advances);\n+        free(glyphs);\n+        free(uniChars);\n@@ -957,5 +991,0 @@\n-    CGRect *bboxes = (CGRect *)(buffer);\n-    CGSize *advances = (CGSize *)(bboxes + sizeof(CGRect) * len);\n-    CGGlyph *glyphs = (CGGlyph *)(advances + sizeof(CGGlyph) * len);\n-    UnicodeScalarValue *uniChars = (UnicodeScalarValue *)(glyphs + sizeof(UnicodeScalarValue) * len);\n-\n@@ -966,1 +995,4 @@\n-    free(buffer);\n+    free(bboxes);\n+    free(advances);\n+    free(glyphs);\n+    free(uniChars);\n@@ -969,0 +1001,2 @@\n+#define TX_FIXED_UNSAFE(v)  (isinf(v) || isnan(v) || fabs(v) >= (1<<30))\n+\n@@ -980,0 +1014,21 @@\n+\n+    if (TX_FIXED_UNSAFE(tx->a) || TX_FIXED_UNSAFE(tx->b) || TX_FIXED_UNSAFE(tx->c) ||\n+        TX_FIXED_UNSAFE(tx->d) || TX_FIXED_UNSAFE(tx->tx) || TX_FIXED_UNSAFE(tx->tx)) {\n+\n+        if (bboxes) {\n+            for (int i = 0; i < count; i++) {\n+                bboxes[i].origin.x = 0;\n+                bboxes[i].origin.y = 0;\n+                bboxes[i].size.width = 0;\n+                bboxes[i].size.height = 0;\n+            }\n+        }\n+        if (advances) {\n+            for (int i = 0; i < count; i++) {\n+                advances[i].width = 0;\n+                advances[i].height = 0;\n+            }\n+        }\n+        return;\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/font\/CGGlyphImages.m","additions":78,"deletions":23,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.Applet;\n@@ -56,3 +55,1 @@\n- * This is a second part of sun.swing.SwingUtilities2. It is required\n- * to provide services for JavaFX applets.\n- *\n+ * This is a second part of sun.swing.SwingUtilities2.\n@@ -94,2 +91,1 @@\n-     * @param rootContainer topmost container. Should be either {@code Window}\n-     *  or {@code Applet}\n+     * @param rootContainer topmost container. Should be {@code Window}\n@@ -98,1 +94,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -101,1 +96,1 @@\n-        assert (rootContainer instanceof Applet) || (rootContainer instanceof Window);\n+        assert (rootContainer instanceof Window);\n@@ -112,1 +107,1 @@\n-     * @param rootContainer topmost container. Should be either Window or Applet\n+     * @param rootContainer topmost container. Should be Window\n@@ -115,1 +110,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -117,1 +111,1 @@\n-        assert (rootContainer instanceof Applet) || (rootContainer instanceof Window);\n+        assert (rootContainer instanceof Window);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/SwingUtilities3.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.AudioClip;\n@@ -33,0 +32,1 @@\n+import java.io.FileOutputStream;\n@@ -38,0 +38,1 @@\n+import javax.sound.SoundClip;\n@@ -62,2 +63,1 @@\n-@SuppressWarnings(\"removal\")\n-public final class JavaSoundAudioClip implements AudioClip, MetaEventListener, LineListener {\n+public final class JavaSoundAudioClip implements MetaEventListener, LineListener {\n@@ -106,2 +106,3 @@\n-    public static JavaSoundAudioClip create(final URLConnection uc) {\n-        JavaSoundAudioClip clip = new JavaSoundAudioClip();\n+    \/* Used [only] by sun.awt.www.content.MultiMediaContentHandlers *\/\n+    public static SoundClip create(final URLConnection uc) {\n+        File tmpFile = null;\n@@ -109,3 +110,9 @@\n-            clip.init(uc.getInputStream());\n-        } catch (final Exception ignored) {\n-            \/\/ Playing the clip will be a no-op if an exception occured in inititialization.\n+            tmpFile = File.createTempFile(\"javaurl\", \".aud\");\n+        } catch (IOException e) {\n+            return null;\n+        }\n+\n+        try (InputStream in = uc.getInputStream();\n+             FileOutputStream out = new FileOutputStream(tmpFile)) {\n+             in.transferTo(out);\n+        } catch (IOException e) {\n@@ -113,2 +120,0 @@\n-        return clip;\n-    }\n@@ -116,2 +121,0 @@\n-    public static JavaSoundAudioClip create(final URL url) {\n-        JavaSoundAudioClip clip = new JavaSoundAudioClip();\n@@ -119,3 +122,4 @@\n-            clip.init(url.openStream());\n-        } catch (final Exception ignored) {\n-            \/\/ Playing the clip will be a no-op if an exception occurred in inititialization.\n+             return SoundClip.createSoundClip(tmpFile);\n+        } catch (IOException e) {\n+        } finally {\n+            tmpFile.delete();\n@@ -123,1 +127,1 @@\n-        return clip;\n+        return null;\n@@ -170,1 +174,0 @@\n-    @Override\n@@ -178,1 +181,0 @@\n-    @Override\n@@ -187,1 +189,1 @@\n-        \/\/ hack for some applets that call the start method very rapidly...\n+        \/\/ hack for some applications that call the start method very rapidly...\n@@ -250,1 +252,0 @@\n-    @Override\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JavaSoundAudioClip.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1,609 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.applet;\n-\n-import java.awt.Dimension;\n-import java.awt.GraphicsEnvironment;\n-import java.awt.HeadlessException;\n-import java.awt.Image;\n-import java.awt.Panel;\n-import java.awt.event.ComponentEvent;\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.Serial;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.util.Locale;\n-\n-import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n-\n-import com.sun.media.sound.JavaSoundAudioClip;\n-\n-\/**\n- * An applet is a small program that is intended not to be run on its own, but\n- * rather to be embedded inside another application.\n- * <p>\n- * The {@code Applet} class must be the superclass of any applet that is to be\n- * embedded in a Web page or viewed by the Java Applet Viewer. The\n- * {@code Applet} class provides a standard interface between applets and their\n- * environment.\n- *\n- * @author Arthur van Hoff\n- * @author Chris Warth\n- * @since 1.0\n- * @deprecated The Applet API is deprecated, no replacement.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-@SuppressWarnings(\"removal\")\n-public class Applet extends Panel {\n-\n-    \/**\n-     * Constructs a new Applet.\n-     * <p>\n-     * Note: Many methods in {@code java.applet.Applet} may be invoked by the\n-     * applet only after the applet is fully constructed; applet should avoid\n-     * calling methods in {@code java.applet.Applet} in the constructor.\n-     *\n-     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n-     *         returns {@code true}\n-     * @see java.awt.GraphicsEnvironment#isHeadless\n-     * @since 1.4\n-     *\/\n-    public Applet() throws HeadlessException {\n-        if (GraphicsEnvironment.isHeadless()) {\n-            throw new HeadlessException();\n-        }\n-    }\n-\n-    \/**\n-     * Applets can be serialized but the following conventions MUST be followed:\n-     * <p>\n-     * Before Serialization: An applet must be in STOPPED state.\n-     * <p>\n-     * After Deserialization: The applet will be restored in STOPPED state (and\n-     * most clients will likely move it into RUNNING state). The stub field will\n-     * be restored by the reader.\n-     *\/\n-    private transient AppletStub stub;\n-\n-    \/**\n-     * Use serialVersionUID from JDK 1.0 for interoperability.\n-     *\/\n-    @Serial\n-    private static final long serialVersionUID = -5836846270535785031L;\n-\n-    \/**\n-     * Read an applet from an object input stream.\n-     *\n-     * @param  s the {@code ObjectInputStream} to read\n-     * @throws ClassNotFoundException if the class of a serialized object could\n-     *         not be found\n-     * @throws IOException if an I\/O error occurs\n-     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n-     *         returns {@code true}\n-     *\n-     * @see java.awt.GraphicsEnvironment#isHeadless\n-     * @since 1.4\n-     *\/\n-    @Serial\n-    private void readObject(ObjectInputStream s)\n-        throws ClassNotFoundException, IOException, HeadlessException {\n-        if (GraphicsEnvironment.isHeadless()) {\n-            throw new HeadlessException();\n-        }\n-        s.defaultReadObject();\n-    }\n-\n-    \/**\n-     * Sets this applet's stub. This is done automatically by the system.\n-     *\n-     * @param  stub the new stub\n-     *\/\n-    public final void setStub(AppletStub stub) {\n-        this.stub = stub;\n-    }\n-\n-    \/**\n-     * Determines if this applet is active. An applet is marked active just\n-     * before its {@code start} method is called. It becomes inactive just\n-     * before its {@code stop} method is called.\n-     *\n-     * @return {@code true} if the applet is active; {@code false} otherwise\n-     * @see java.applet.Applet#start()\n-     * @see java.applet.Applet#stop()\n-     *\/\n-    public boolean isActive() {\n-        if (stub != null) {\n-            return stub.isActive();\n-        } else {        \/\/ If stub field not filled in, applet never active\n-            return false;\n-        }\n-    }\n-\n-    \/**\n-     * Gets the {@code URL} of the document in which this applet is embedded.\n-     * For example, suppose an applet is contained within the document:\n-     * <blockquote><pre>\n-     *    http:\/\/www.oracle.com\/technetwork\/java\/index.html\n-     * <\/pre><\/blockquote>\n-     * The document base is:\n-     * <blockquote><pre>\n-     *    http:\/\/www.oracle.com\/technetwork\/java\/index.html\n-     * <\/pre><\/blockquote>\n-     *\n-     * @return the {@link java.net.URL} of the document that contains this\n-     *         applet\n-     * @see java.applet.Applet#getCodeBase()\n-     *\/\n-    public URL getDocumentBase() {\n-        return stub.getDocumentBase();\n-    }\n-\n-    \/**\n-     * Gets the base {@code URL}. This is the {@code URL} of the directory which\n-     * contains this applet.\n-     *\n-     * @return the base {@link java.net.URL} of the directory which contains\n-     *         this applet\n-     * @see java.applet.Applet#getDocumentBase()\n-     *\/\n-    public URL getCodeBase() {\n-        return stub.getCodeBase();\n-    }\n-\n-    \/**\n-     * Returns the value of the named parameter in the HTML tag. For example, if\n-     * this applet is specified as\n-     * <blockquote><pre>\n-     * &lt;applet code=\"Clock\" width=50 height=50&gt;\n-     * &lt;param name=Color value=\"blue\"&gt;\n-     * &lt;\/applet&gt;\n-     * <\/pre><\/blockquote>\n-     * <p>\n-     * then a call to {@code getParameter(\"Color\")} returns the value\n-     * {@code \"blue\"}.\n-     * <p>\n-     * The {@code name} argument is case insensitive.\n-     *\n-     * @param  name a parameter name\n-     * @return the value of the named parameter, or {@code null} if not set\n-     *\/\n-    public String getParameter(String name) {\n-        return stub.getParameter(name);\n-    }\n-\n-    \/**\n-     * Determines this applet's context, which allows the applet to query and\n-     * affect the environment in which it runs.\n-     * <p>\n-     * This environment of an applet represents the document that contains the\n-     * applet.\n-     *\n-     * @return the applet's context\n-     *\/\n-    public AppletContext getAppletContext() {\n-        return stub.getAppletContext();\n-    }\n-\n-    \/**\n-     * Requests that this applet be resized.\n-     *\n-     * @param  width the new requested width for the applet\n-     * @param  height the new requested height for the applet\n-     *\/\n-    @SuppressWarnings(\"deprecation\")\n-    public void resize(int width, int height) {\n-        Dimension d = size();\n-        if ((d.width != width) || (d.height != height)) {\n-            super.resize(width, height);\n-            if (stub != null) {\n-                stub.appletResize(width, height);\n-            }\n-        }\n-    }\n-\n-    \/**\n-     * Requests that this applet be resized.\n-     *\n-     * @param  d an object giving the new width and height\n-     *\/\n-    @SuppressWarnings(\"deprecation\")\n-    public void resize(Dimension d) {\n-        resize(d.width, d.height);\n-    }\n-\n-    \/**\n-     * Indicates if this container is a validate root.\n-     * <p>\n-     * {@code Applet} objects are the validate roots, and, therefore, they\n-     * override this method to return {@code true}.\n-     *\n-     * @return {@code true}\n-     * @see java.awt.Container#isValidateRoot\n-     * @since 1.7\n-     *\/\n-    @Override\n-    public boolean isValidateRoot() {\n-        return true;\n-    }\n-\n-    \/**\n-     * Requests that the argument string be displayed in the \"status window\".\n-     * Many browsers and applet viewers provide such a window, where the\n-     * application can inform users of its current state.\n-     *\n-     * @param  msg a string to display in the status window\n-     *\/\n-    public void showStatus(String msg) {\n-        getAppletContext().showStatus(msg);\n-    }\n-\n-    \/**\n-     * Returns an {@code Image} object that can then be painted on the screen.\n-     * The {@code url} that is passed as an argument must specify an absolute\n-     * {@code URL}.\n-     * <p>\n-     * This method always returns immediately, whether or not the image exists.\n-     * When this applet attempts to draw the image on the screen, the data will\n-     * be loaded. The graphics primitives that draw the image will incrementally\n-     * paint on the screen.\n-     *\n-     * @param  url an absolute {@code URL} giving the location of the image\n-     * @return the image at the specified {@code URL}\n-     * @see java.awt.Image\n-     *\/\n-    public Image getImage(URL url) {\n-        return getAppletContext().getImage(url);\n-    }\n-\n-    \/**\n-     * Returns an {@code Image} object that can then be painted on the screen.\n-     * The {@code url} argument must specify an absolute {@code URL}. The\n-     * {@code name} argument is a specifier that is relative to the {@code url}\n-     * argument.\n-     * <p>\n-     * This method always returns immediately, whether or not the image exists.\n-     * When this applet attempts to draw the image on the screen, the data will\n-     * be loaded. The graphics primitives that draw the image will incrementally\n-     * paint on the screen.\n-     *\n-     * @param  url an absolute URL giving the base location of the image\n-     * @param  name the location of the image, relative to the {@code url}\n-     *         argument\n-     * @return the image at the specified {@code URL}\n-     * @see java.awt.Image\n-     *\/\n-    public Image getImage(URL url, String name) {\n-        try {\n-            @SuppressWarnings(\"deprecation\")\n-            var u = new URL(url, name);\n-            return getImage(u);\n-        } catch (MalformedURLException e) {\n-            return null;\n-        }\n-    }\n-\n-    \/**\n-     * Get an audio clip from the given {@code URL}.\n-     *\n-     * @param  url points to the audio clip\n-     * @return the audio clip at the specified {@code URL}\n-     * @since 1.2\n-     *\/\n-    public static final AudioClip newAudioClip(URL url) {\n-        return JavaSoundAudioClip.create(url);\n-    }\n-\n-    \/**\n-     * Returns the {@code AudioClip} object specified by the {@code URL}\n-     * argument.\n-     * <p>\n-     * This method always returns immediately, whether or not the audio clip\n-     * exists. When this applet attempts to play the audio clip, the data will\n-     * be loaded.\n-     *\n-     * @param  url an absolute {@code URL} giving the location of the audio clip\n-     * @return the audio clip at the specified {@code URL}\n-     * @see java.applet.AudioClip\n-     *\/\n-    public AudioClip getAudioClip(URL url) {\n-        return getAppletContext().getAudioClip(url);\n-    }\n-\n-    \/**\n-     * Returns the {@code AudioClip} object specified by the {@code URL} and\n-     * {@code name} arguments.\n-     * <p>\n-     * This method always returns immediately, whether or not the audio clip\n-     * exists. When this applet attempts to play the audio clip, the data will\n-     * be loaded.\n-     *\n-     * @param  url an absolute {@code URL} giving the base location of the audio\n-     *         clip\n-     * @param  name the location of the audio clip, relative to the {@code url}\n-     *         argument\n-     * @return the audio clip at the specified {@code URL}\n-     * @see java.applet.AudioClip\n-     *\/\n-    public AudioClip getAudioClip(URL url, String name) {\n-        try {\n-            @SuppressWarnings(\"deprecation\")\n-            var u = new URL(url, name);\n-            return getAudioClip(u);\n-        } catch (MalformedURLException e) {\n-            return null;\n-        }\n-    }\n-\n-    \/**\n-     * Returns information about this applet. An applet should override this\n-     * method to return a {@code String} containing information about the\n-     * author, version, and copyright of the applet.\n-     * <p>\n-     * The implementation of this method provided by the {@code Applet} class\n-     * returns {@code null}.\n-     *\n-     * @return a string containing information about the author, version, and\n-     *         copyright of the applet\n-     *\/\n-    public String getAppletInfo() {\n-        return null;\n-    }\n-\n-    \/**\n-     * Gets the locale of the applet. It allows the applet to maintain its own\n-     * locale separated from the locale of the browser or appletviewer.\n-     *\n-     * @return the locale of the applet; if no locale has been set, the default\n-     *         locale is returned\n-     * @since 1.1\n-     *\/\n-    public Locale getLocale() {\n-        Locale locale = super.getLocale();\n-        if (locale == null) {\n-            return Locale.getDefault();\n-        }\n-        return locale;\n-    }\n-\n-    \/**\n-     * Returns information about the parameters that are understood by this\n-     * applet. An applet should override this method to return an array of\n-     * strings describing these parameters.\n-     * <p>\n-     * Each element of the array should be a set of three strings containing the\n-     * name, the type, and a description. For example:\n-     * <blockquote><pre>\n-     * String pinfo[][] = {\n-     *   {\"fps\",    \"1-10\",    \"frames per second\"},\n-     *   {\"repeat\", \"boolean\", \"repeat image loop\"},\n-     *   {\"imgs\",   \"url\",     \"images directory\"}\n-     * };\n-     * <\/pre><\/blockquote>\n-     * <p>\n-     * The implementation of this method provided by the {@code Applet} class\n-     * returns {@code null}.\n-     *\n-     * @return an array describing the parameters this applet looks for\n-     *\/\n-    public String[][] getParameterInfo() {\n-        return null;\n-    }\n-\n-    \/**\n-     * Plays the audio clip at the specified absolute {@code URL}. Nothing\n-     * happens if the audio clip cannot be found.\n-     *\n-     * @param  url an absolute {@code URL} giving the location of the audio clip\n-     *\/\n-    public void play(URL url) {\n-        AudioClip clip = getAudioClip(url);\n-        if (clip != null) {\n-            clip.play();\n-        }\n-    }\n-\n-    \/**\n-     * Plays the audio clip given the {@code URL} and a specifier that is\n-     * relative to it. Nothing happens if the audio clip cannot be found.\n-     *\n-     * @param  url an absolute {@code URL} giving the base location of the audio\n-     *         clip\n-     * @param  name the location of the audio clip, relative to the {@code url}\n-     *         argument\n-     *\/\n-    public void play(URL url, String name) {\n-        AudioClip clip = getAudioClip(url, name);\n-        if (clip != null) {\n-            clip.play();\n-        }\n-    }\n-\n-    \/**\n-     * Called by the browser or applet viewer to inform this applet that it has\n-     * been loaded into the system. It is always called before the first time\n-     * that the {@code start} method is called.\n-     * <p>\n-     * A subclass of {@code Applet} should override this method if it has\n-     * initialization to perform. For example, an applet with threads would use\n-     * the {@code init} method to create the threads and the {@code destroy}\n-     * method to kill them.\n-     * <p>\n-     * The implementation of this method provided by the {@code Applet} class\n-     * does nothing.\n-     *\n-     * @see java.applet.Applet#destroy()\n-     * @see java.applet.Applet#start()\n-     * @see java.applet.Applet#stop()\n-     *\/\n-    public void init() {\n-    }\n-\n-    \/**\n-     * Called by the browser or applet viewer to inform this applet that it\n-     * should start its execution. It is called after the {@code init} method\n-     * and each time the applet is revisited in a Web page.\n-     * <p>\n-     * A subclass of {@code Applet} should override this method if it has any\n-     * operation that it wants to perform each time the Web page containing it\n-     * is visited. For example, an applet with animation might want to use the\n-     * {@code start} method to resume animation, and the {@code stop} method to\n-     * suspend the animation.\n-     * <p>\n-     * Note: some methods, such as {@code getLocationOnScreen}, can only provide\n-     * meaningful results if the applet is showing. Because {@code isShowing}\n-     * returns {@code false} when the applet's {@code start} is first called,\n-     * methods requiring {@code isShowing} to return {@code true} should be\n-     * called from a {@code ComponentListener}.\n-     * <p>\n-     * The implementation of this method provided by the {@code Applet} class\n-     * does nothing.\n-     *\n-     * @see java.applet.Applet#destroy()\n-     * @see java.applet.Applet#init()\n-     * @see java.applet.Applet#stop()\n-     * @see java.awt.Component#isShowing()\n-     * @see java.awt.event.ComponentListener#componentShown(ComponentEvent)\n-     *\/\n-    public void start() {\n-    }\n-\n-    \/**\n-     * Called by the browser or applet viewer to inform this applet that it\n-     * should stop its execution. It is called when the Web page that contains\n-     * this applet has been replaced by another page, and also just before the\n-     * applet is to be destroyed.\n-     * <p>\n-     * A subclass of {@code Applet} should override this method if it has any\n-     * operation that it wants to perform each time the Web page containing it\n-     * is no longer visible. For example, an applet with animation might want to\n-     * use the {@code start} method to resume animation, and the {@code stop}\n-     * method to suspend the animation.\n-     * <p>\n-     * The implementation of this method provided by the {@code Applet} class\n-     * does nothing.\n-     *\n-     * @see java.applet.Applet#destroy()\n-     * @see java.applet.Applet#init()\n-     *\/\n-    public void stop() {\n-    }\n-\n-    \/**\n-     * Called by the browser or applet viewer to inform this applet that it is\n-     * being reclaimed and that it should destroy any resources that it has\n-     * allocated. The {@code stop} method will always be called before\n-     * {@code destroy}.\n-     * <p>\n-     * A subclass of {@code Applet} should override this method if it has any\n-     * operation that it wants to perform before it is destroyed. For example,\n-     * an applet with threads would use the {@code init} method to create the\n-     * threads and the {@code destroy} method to kill them.\n-     * <p>\n-     * The implementation of this method provided by the {@code Applet} class\n-     * does nothing.\n-     *\n-     * @see java.applet.Applet#init()\n-     * @see java.applet.Applet#start()\n-     * @see java.applet.Applet#stop()\n-     *\/\n-    public void destroy() {\n-    }\n-\n-    \/\/\n-    \/\/ Accessibility support\n-    \/\/\n-\n-    \/**\n-     * @serial The accessible context associated with this {@code Applet}.\n-     *\/\n-    @SuppressWarnings(\"serial\") \/\/ Not statically typed as Serializable\n-    AccessibleContext accessibleContext = null;\n-\n-    \/**\n-     * Gets the {@code AccessibleContext} associated with this {@code Applet}.\n-     * For applets, the {@code AccessibleContext} takes the form of an\n-     * {@code AccessibleApplet}. A new {@code AccessibleApplet} instance is\n-     * created if necessary.\n-     *\n-     * @return an {@code AccessibleApplet} that serves as the\n-     *         {@code AccessibleContext} of this {@code Applet}\n-     * @since 1.3\n-     *\/\n-    public AccessibleContext getAccessibleContext() {\n-        if (accessibleContext == null) {\n-            accessibleContext = new AccessibleApplet();\n-        }\n-        return accessibleContext;\n-    }\n-\n-    \/**\n-     * This class implements accessibility support for the {@code Applet} class.\n-     * It provides an implementation of the Java Accessibility API appropriate\n-     * to applet user-interface elements.\n-     *\n-     * @since 1.3\n-     *\/\n-    protected class AccessibleApplet extends AccessibleAWTPanel {\n-\n-        \/**\n-         * Use serialVersionUID from JDK 1.3 for interoperability.\n-         *\/\n-        @Serial\n-        private static final long serialVersionUID = 8127374778187708896L;\n-\n-        \/**\n-         * Constructs an {@code AccessibleApplet}.\n-         *\/\n-        protected AccessibleApplet() {}\n-\n-        \/**\n-         * Get the role of this object.\n-         *\n-         * @return an instance of {@code AccessibleRole} describing the role of\n-         *         the object\n-         *\/\n-        public AccessibleRole getAccessibleRole() {\n-            return AccessibleRole.FRAME;\n-        }\n-\n-        \/**\n-         * Get the state of this object.\n-         *\n-         * @return an instance of {@code AccessibleStateSet} containing the\n-         *         current state set of the object\n-         * @see AccessibleState\n-         *\/\n-        public AccessibleStateSet getAccessibleStateSet() {\n-            AccessibleStateSet states = super.getAccessibleStateSet();\n-            states.add(AccessibleState.ACTIVE);\n-            return states;\n-        }\n-    }\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/applet\/Applet.java","additions":0,"deletions":609,"binary":false,"changes":609,"status":"deleted"},{"patch":"@@ -1,200 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.applet;\n-\n-import java.awt.Image;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.net.URL;\n-import java.util.Enumeration;\n-import java.util.Iterator;\n-\n-\/**\n- * This interface corresponds to an applet's environment: the document\n- * containing the applet and the other applets in the same document.\n- * <p>\n- * The methods in this interface can be used by an applet to obtain information\n- * about its environment.\n- *\n- * @author Arthur van Hoff\n- * @since 1.0\n- * @deprecated The Applet API is deprecated, no replacement.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-@SuppressWarnings(\"removal\")\n-public interface AppletContext {\n-\n-    \/**\n-     * Creates an audio clip.\n-     *\n-     * @param  url an absolute {@code URL} giving the location of the audio clip\n-     * @return the audio clip at the specified {@code URL}\n-     *\/\n-    AudioClip getAudioClip(URL url);\n-\n-    \/**\n-     * Returns an {@code Image} object that can then be painted on the screen.\n-     * The {@code url} argument that is passed as an argument must specify an\n-     * absolute {@code URL}.\n-     * <p>\n-     * This method always returns immediately, whether or not the image exists.\n-     * When the applet attempts to draw the image on the screen, the data will\n-     * be loaded. The graphics primitives that draw the image will incrementally\n-     * paint on the screen.\n-     *\n-     * @param  url an absolute {@code URL} giving the location of the image\n-     * @return the image at the specified {@code URL}\n-     * @see java.awt.Image\n-     *\/\n-    Image getImage(URL url);\n-\n-    \/**\n-     * Finds and returns the applet in the document represented by this applet\n-     * context with the given name. The name can be set in the HTML tag by\n-     * setting the {@code name} attribute.\n-     *\n-     * @param  name an applet name\n-     * @return the applet with the given name, or {@code null} if not found\n-     *\/\n-    Applet getApplet(String name);\n-\n-    \/**\n-     * Finds all the applets in the document represented by this applet context.\n-     *\n-     * @return an enumeration of all applets in the document represented by this\n-     *         applet context\n-     *\/\n-    Enumeration<Applet> getApplets();\n-\n-    \/**\n-     * Requests that the browser or applet viewer show the Web page indicated by\n-     * the {@code url} argument. The browser or applet viewer determines which\n-     * window or frame to display the Web page. This method may be ignored by\n-     * applet contexts that are not browsers.\n-     *\n-     * @param url an absolute {@code URL} giving the location of the document\n-     *\/\n-    void showDocument(URL url);\n-\n-    \/**\n-     * Requests that the browser or applet viewer show the Web page indicated by\n-     * the {@code url} argument. The {@code target} argument indicates in which\n-     * HTML frame the document is to be displayed. The target argument is\n-     * interpreted as follows:\n-     *\n-     * <table class=\"striped\">\n-     * <caption>Target arguments and their descriptions<\/caption>\n-     * <thead>\n-     *   <tr>\n-     *     <th scope=\"col\">Target Argument\n-     *     <th scope=\"col\">Description\n-     * <\/thead>\n-     * <tbody>\n-     *   <tr>\n-     *     <th scope=\"row\">{@code \"_self\"}\n-     *     <td>Show in the window and frame that contain the applet.\n-     *   <tr>\n-     *     <th scope=\"row\">{@code \"_parent\"}\n-     *     <td>Show in the applet's parent frame. If the applet's frame has no\n-     *     parent frame, acts the same as \"_self\".\n-     *   <tr>\n-     *     <th scope=\"row\">{@code \"_top\"}\n-     *     <td>Show in the top-level frame of the applet's window. If the\n-     *     applet's frame is the top-level frame, acts the same as \"_self\".\n-     *   <tr>\n-     *     <th scope=\"row\">{@code \"_blank\"}\n-     *     <td>Show in a new, unnamed top-level window.\n-     *   <tr>\n-     *     <th scope=\"row\"><i>name<\/i>\n-     *     <td>Show in the frame or window named <i>name<\/i>. If a target named\n-     *     <i>name<\/i> does not already exist, a new top-level window with the\n-     *     specified name is created, and the document is shown there.\n-     * <\/tbody>\n-     * <\/table>\n-     * <p>\n-     * An applet viewer or browser is free to ignore {@code showDocument}.\n-     *\n-     * @param  url an absolute {@code URL} giving the location of the document\n-     * @param  target a {@code String} indicating where to display the page\n-     *\/\n-    public void showDocument(URL url, String target);\n-\n-    \/**\n-     * Requests that the argument string be displayed in the \"status window\".\n-     * Many browsers and applet viewers provide such a window, where the\n-     * application can inform users of its current state.\n-     *\n-     * @param  status a string to display in the status window\n-     *\/\n-    void showStatus(String status);\n-\n-    \/**\n-     * Associates the specified stream with the specified key in this applet\n-     * context. If the applet context previously contained a mapping for this\n-     * key, the old value is replaced.\n-     * <p>\n-     * For security reasons, mapping of streams and keys exists for each\n-     * codebase. In other words, applet from one codebase cannot access the\n-     * streams created by an applet from a different codebase\n-     *\n-     * @param  key key with which the specified value is to be associated\n-     * @param  stream stream to be associated with the specified key. If this\n-     *         parameter is {@code null}, the specified key is removed in this\n-     *         applet context.\n-     * @throws IOException if the stream size exceeds a certain size limit. Size\n-     *         limit is decided by the implementor of this interface.\n-     * @since 1.4\n-     *\/\n-    public void setStream(String key, InputStream stream) throws IOException;\n-\n-    \/**\n-     * Returns the stream to which specified key is associated within this\n-     * applet context. Returns {@code null} if the applet context contains no\n-     * stream for this key.\n-     * <p>\n-     * For security reasons, mapping of streams and keys exists for each\n-     * codebase. In other words, applet from one codebase cannot access the\n-     * streams created by an applet from a different codebase.\n-     *\n-     * @param  key key whose associated stream is to be returned\n-     * @return the stream to which this applet context maps the key\n-     * @since 1.4\n-     *\/\n-    public InputStream getStream(String key);\n-\n-    \/**\n-     * Finds all the keys of the streams in this applet context.\n-     * <p>\n-     * For security reasons, mapping of streams and keys exists for each\n-     * codebase. In other words, applet from one codebase cannot access the\n-     * streams created by an applet from a different codebase.\n-     *\n-     * @return an {@code Iterator} of all the names of the streams in this\n-     *         applet context\n-     * @since 1.4\n-     *\/\n-    public Iterator<String> getStreamKeys();\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/applet\/AppletContext.java","additions":0,"deletions":200,"binary":false,"changes":200,"status":"deleted"},{"patch":"@@ -1,111 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.applet;\n-\n-import java.net.URL;\n-\n-\/**\n- * When an applet is first created, an applet stub is attached to it using the\n- * applet's {@code setStub} method. This stub serves as the interface between\n- * the applet and the browser environment or applet viewer environment in which\n- * the application is running.\n- *\n- * @author Arthur van Hoff\n- * @see java.applet.Applet#setStub(java.applet.AppletStub)\n- * @since 1.0\n- * @deprecated The Applet API is deprecated, no replacement.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-@SuppressWarnings(\"removal\")\n-public interface AppletStub {\n-\n-    \/**\n-     * Determines if the applet is active. An applet is active just before its\n-     * {@code start} method is called. It becomes inactive just before its\n-     * {@code stop} method is called.\n-     *\n-     * @return {@code true} if the applet is active; {@code false} otherwise\n-     *\/\n-    boolean isActive();\n-\n-    \/**\n-     * Gets the {@code URL} of the document in which the applet is embedded. For\n-     * example, suppose an applet is contained within the document:\n-     * <blockquote><pre>\n-     *    http:\/\/www.oracle.com\/technetwork\/java\/index.html\n-     * <\/pre><\/blockquote>\n-     * The document base is:\n-     * <blockquote><pre>\n-     *    http:\/\/www.oracle.com\/technetwork\/java\/index.html\n-     * <\/pre><\/blockquote>\n-     *\n-     * @return the {@link java.net.URL} of the document that contains the applet\n-     * @see java.applet.AppletStub#getCodeBase()\n-     *\/\n-    URL getDocumentBase();\n-\n-    \/**\n-     * Gets the base {@code URL}. This is the {@code URL} of the directory which\n-     * contains the applet.\n-     *\n-     * @return the base {@link java.net.URL} of the directory which contains the\n-     *         applet\n-     * @see java.applet.AppletStub#getDocumentBase()\n-     *\/\n-    URL getCodeBase();\n-\n-    \/**\n-     * Returns the value of the named parameter in the HTML tag. For example, if\n-     * an applet is specified as\n-     * <blockquote><pre>\n-     * &lt;applet code=\"Clock\" width=50 height=50&gt;\n-     * &lt;param name=Color value=\"blue\"&gt;\n-     * &lt;\/applet&gt;\n-     * <\/pre><\/blockquote>\n-     * <p>\n-     * then a call to {@code getParameter(\"Color\")} returns the value\n-     * {@code \"blue\"}.\n-     *\n-     * @param  name a parameter name\n-     * @return the value of the named parameter, or {@code null} if not set\n-     *\/\n-    String getParameter(String name);\n-\n-    \/**\n-     * Returns the applet's context.\n-     *\n-     * @return the applet's context\n-     *\/\n-    AppletContext getAppletContext();\n-\n-    \/**\n-     * Called when the applet wants to be resized.\n-     *\n-     * @param  width the new requested width for the applet\n-     * @param  height the new requested height for the applet\n-     *\/\n-    void appletResize(int width, int height);\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/applet\/AppletStub.java","additions":0,"deletions":111,"binary":false,"changes":111,"status":"deleted"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.applet;\n-\n-\/**\n- * The {@code AudioClip} interface is a simple abstraction for playing a sound\n- * clip. Multiple {@code AudioClip} items can be playing at the same time, and\n- * the resulting sound is mixed together to produce a composite.\n- *\n- * @author Arthur van Hoff\n- * @since 1.0\n- * @deprecated The Applet API is deprecated, no replacement.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-public interface AudioClip {\n-\n-    \/**\n-     * Starts playing this audio clip. Each time this method is called, the clip\n-     * is restarted from the beginning.\n-     *\/\n-    void play();\n-\n-    \/**\n-     * Starts playing this audio clip in a loop.\n-     *\/\n-    void loop();\n-\n-    \/**\n-     * Stops playing this audio clip.\n-     *\/\n-    void stop();\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/applet\/AudioClip.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,47 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * Provides the classes necessary to create an applet and the classes an applet\n- * uses to communicate with its applet context.\n- * <p>\n- * The applet framework involves two entities: the <i>applet<\/i> and the\n- * <i>applet context<\/i>. An applet is an embeddable window (see the Panel\n- * class) with a few extra methods that the applet context can use to\n- * initialize, start, and stop the applet.\n- * <p>\n- * The applet context is an application that is responsible for loading and\n- * running applets. For example, the applet context could be a Web browser or an\n- * applet development environment.\n- * <p>\n- * This package has been deprecated and may be removed in\n- * a future version of the Java Platform. There is no replacement.\n- * All of the classes and interfaces in this package have been terminally\n- * deprecated.\n- * Users are advised to migrate their applications to other technologies.\n- *\n- * @since 1.0\n- *\/\n-package java.applet;\n","filename":"src\/java.desktop\/share\/classes\/java\/applet\/package-info.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.Applet;\n@@ -240,2 +239,1 @@\n-     * The {@code AppContext} of the component. Applets\/Plugin may\n-     * change the AppContext.\n+     * The {@code AppContext} of the component.\n@@ -3940,1 +3938,1 @@\n-     * be a {@code Canvas} or {@code Window} or {@code Applet}.\n+     * be a {@code Canvas} or {@code Window}.\n@@ -3943,1 +3941,0 @@\n-     * @see Applet\n@@ -3991,2 +3988,1 @@\n-         * The component must be a {@code Canvas} or {@code Window} or\n-         * {@code Applet}.\n+         * The component must be a {@code Canvas} or {@code Window}.\n@@ -3995,1 +3991,0 @@\n-         * @see Applet\n@@ -4013,2 +4008,1 @@\n-                !(Component.this instanceof Canvas) &&\n-                !(Component.this instanceof Applet))\n+                !(Component.this instanceof Canvas))\n@@ -4017,1 +4011,1 @@\n-                        \"Component must be a Canvas or Window or Applet\");\n+                        \"Component must be a Canvas or Window\");\n@@ -8164,6 +8158,0 @@\n-            if (toFocus == null) {\n-                Applet applet = EmbeddedFrame.getAppletIfAncestorOf(this);\n-                if (applet != null) {\n-                    toFocus = applet;\n-                }\n-            }\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Component.java","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1560,2 +1560,2 @@\n-     * The {@code Window} class and the {@code Applet} class are the validate\n-     * roots in AWT.  Swing introduces more validate roots.\n+     * The {@code Window} class is the validate root in AWT.\n+     * Swing introduces more validate roots.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Container.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,3 +168,0 @@\n-         * If there are several applets launched in a browser, they can be\n-         * treated either as separate applications or a single one. This behavior\n-         * is implementation-dependent.\n@@ -175,5 +172,1 @@\n-         * from the same toolkit except those from its own child hierarchy. If there\n-         * are several applets launched in a browser, all of them run with the same\n-         * toolkit; thus, a toolkit-modal dialog displayed by an applet may affect\n-         * other applets and all windows of the browser instance which embeds the\n-         * Java runtime environment for this toolkit.\n+         * from the same toolkit except those from its own child hierarchy.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Dialog.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -70,9 +70,0 @@\n- * Some browsers partition applets in different code bases into\n- * separate contexts, and establish walls between these contexts.\n- * In such a scenario, there will be one {@code EventQueue}\n- * per context. Other browsers place all applets into the same\n- * context, implying that there will be only a single, global\n- * {@code EventQueue} for all applets. This behavior is\n- * implementation-dependent.  Consult your browser's documentation\n- * for more information.\n- * <p>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/EventQueue.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1126,2 +1126,0 @@\n-     * If called from an applet, the array includes only the {@code Frame}s\n-     * accessible by that applet.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Frame.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,2 +295,1 @@\n-     * application or applet. This means applets cannot register fonts in\n-     * a way that they are visible to other applets.\n+     * application.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/GraphicsEnvironment.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -74,10 +74,0 @@\n- * Some browsers partition applets in different code bases into separate\n- * contexts, and establish walls between these contexts. In such a scenario,\n- * there will be one KeyboardFocusManager per context. Other browsers place all\n- * applets into the same context, implying that there will be only a single,\n- * global KeyboardFocusManager for all applets. This behavior is\n- * implementation-dependent. Consult your browser's documentation for more\n- * information. No matter how many contexts there may be, however, there can\n- * never be more than one focus owner, focused Window, or active Window, per\n- * ClassLoader.\n- * <p>\n@@ -1180,1 +1170,1 @@\n-     *        for this application or applet's browser context\n+     *        for this application\n@@ -1265,1 +1255,1 @@\n-     *        for this application or applet's browser context\n+     *        for this application\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/KeyboardFocusManager.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-        \/\/ Fix 6343431: Applet compatibility problems if arrays are not\n+        \/\/ Fix 6343431: compatibility problems if arrays are not\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Polygon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -309,4 +309,1 @@\n-     * application.  Some browsers partition applets in different\n-     * code bases into separate contexts, and establish walls between\n-     * these contexts.  In such a scenario, only the tray icons added\n-     * from this context will be returned.\n+     * application.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/SystemTray.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1353,7 +1353,1 @@\n-     * Get the application's or applet's EventQueue instance.\n-     * Depending on the Toolkit implementation, different EventQueues\n-     * may be returned for different applets.  Applets should\n-     * therefore not assume that the EventQueue instance returned\n-     * by this method will be shared by other applets or the system.\n-     *\n-     * @return    the {@code EventQueue} object\n+     * {@return the {@code EventQueue} for this application}\n@@ -1366,3 +1360,3 @@\n-     * Gets the application's or applet's {@code EventQueue}\n-     * instance, without checking access.  For security reasons,\n-     * this can only be called from a {@code Toolkit} subclass.\n+     * A method used by toolkit subclasses to get the {@code EventQueue}.\n+     * This may be more direct or more efficient than calling\n+     * {@code getSystemEventQueue()}.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Toolkit.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1523,2 +1523,0 @@\n-     * If called from an applet, the array includes only the {@code Window}s\n-     * accessible by that applet.\n@@ -1546,2 +1544,0 @@\n-     * If called from an applet, the array includes only the {@code Window}s\n-     * accessible by that applet.\n@@ -3868,1 +3864,1 @@\n-                \/\/ Iterate down one level to see whether we have a JApplet\n+                \/\/ Iterate down one level to see whether we have (eg) a JInternalFrame\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Window.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -84,1 +84,0 @@\n-      <li><a href=#BrowserContexts>KeyboardFocusManager and Browser Contexts<\/a>\n@@ -216,16 +215,0 @@\n-<a id=\"BrowserContexts\"><\/a>\n-<h2>KeyboardFocusManager and Browser Contexts<\/h2>\n-<p>\n-Some browsers partition applets in different code bases into separate\n-contexts, and establish walls between these contexts. Each thread and\n-each Component is associated with a particular context and cannot\n-interfere with threads or access Components in other contexts. In such\n-a scenario, there will be one KeyboardFocusManager per context. Other\n-browsers place all applets into the same context, implying that there\n-will be only a single, global KeyboardFocusManager for all\n-applets. This behavior is implementation-dependent. Consult your\n-browser's documentation for more information. No matter how many\n-contexts there may be, however, there can never be more than one focus\n-owner, focused Window, or active Window, per ClassLoader.\n-\n-\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/doc-files\/FocusSpec.html","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -120,3 +120,0 @@\n-        If there are several applets launched in a browser, they can be\n-        treated either as separate applications or a single application.\n-\tThis behavior is implementation-dependent.\n@@ -125,5 +122,1 @@\n-        toolkit except those from its child hierarchy. If there\n-        are several applets launched all of them run with the same toolkit,\n-        so a toolkit-modal dialog shown from an applet may affect other\n-        applets and all windows of the browser instance which embeds the\n-        Java runtime environment for this toolkit.\n+        toolkit except those from its child hierarchy.\n@@ -359,2 +352,2 @@\n-      but the only distinction between application- and toolkit-modality is for\n-      applets and applications launched from Java Web Start.\n+      and now with single application per-VM there is no\n+      distinction between application- and toolkit-modality.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/doc-files\/Modality.html","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1,90 +0,0 @@\n-\/*\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.beans;\n-\n-import java.applet.Applet;\n-\n-import java.beans.beancontext.BeanContext;\n-\n-\/**\n- * This interface is designed to work in collusion with java.beans.Beans.instantiate.\n- * The interface is intended to provide mechanism to allow the proper\n- * initialization of JavaBeans that are also Applets, during their\n- * instantiation by java.beans.Beans.instantiate().\n- *\n- * @see java.beans.Beans#instantiate\n- *\n- * @since 1.2\n- *\n- * @deprecated The Applet API is deprecated. See the\n- * <a href=\"..\/applet\/package-summary.html\"> java.applet package\n- * documentation<\/a> for further information.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-public interface AppletInitializer {\n-\n-    \/**\n-     * <p>\n-     * If passed to the appropriate variant of java.beans.Beans.instantiate\n-     * this method will be called in order to associate the newly instantiated\n-     * Applet (JavaBean) with its AppletContext, AppletStub, and Container.\n-     * <\/p>\n-     * <p>\n-     * Conformant implementations shall:\n-     * <ol>\n-     * <li> Associate the newly instantiated Applet with the appropriate\n-     * AppletContext.\n-     *\n-     * <li> Instantiate an AppletStub() and associate that AppletStub with\n-     * the Applet via an invocation of setStub().\n-     *\n-     * <li> If BeanContext parameter is null, then it shall associate the\n-     * Applet with its appropriate Container by adding that Applet to its\n-     * Container via an invocation of add(). If the BeanContext parameter is\n-     * non-null, then it is the responsibility of the BeanContext to associate\n-     * the Applet with its Container during the subsequent invocation of its\n-     * addChildren() method.\n-     * <\/ol>\n-     *\n-     * @param newAppletBean  The newly instantiated JavaBean\n-     * @param bCtxt          The BeanContext intended for this Applet, or\n-     *                       null.\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    void initialize(Applet newAppletBean, BeanContext bCtxt);\n-\n-    \/**\n-     * <p>\n-     * Activate, and\/or mark Applet active. Implementors of this interface\n-     * shall mark this Applet as active, and optionally invoke its start()\n-     * method.\n-     * <\/p>\n-     *\n-     * @param newApplet  The newly instantiated JavaBean\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    void activate(Applet newApplet);\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/AppletInitializer.java","additions":0,"deletions":90,"binary":false,"changes":90,"status":"deleted"},{"patch":"@@ -30,5 +30,0 @@\n-import java.applet.Applet;\n-import java.applet.AppletContext;\n-import java.applet.AppletStub;\n-import java.applet.AudioClip;\n-\n@@ -85,1 +80,1 @@\n-        return Beans.instantiate(cls, beanName, null, null);\n+        return Beans.instantiate(cls, beanName, null);\n@@ -112,67 +107,0 @@\n-        return Beans.instantiate(cls, beanName, beanContext, null);\n-    }\n-\n-    \/**\n-     * Instantiate a bean.\n-     * <p>\n-     * The bean is created based on a name relative to a class-loader.\n-     * This name should be a dot-separated name such as \"a.b.c\".\n-     * <p>\n-     * In Beans 1.0 the given name can indicate either a serialized object\n-     * or a class.  Other mechanisms may be added in the future.  In\n-     * beans 1.0 we first try to treat the beanName as a serialized object\n-     * name then as a class name.\n-     * <p>\n-     * When using the beanName as a serialized object name we convert the\n-     * given beanName to a resource pathname and add a trailing \".ser\" suffix.\n-     * We then try to load a serialized object from that resource.\n-     * <p>\n-     * For example, given a beanName of \"x.y\", Beans.instantiate would first\n-     * try to read a serialized object from the resource \"x\/y.ser\" and if\n-     * that failed it would try to load the class \"x.y\" and create an\n-     * instance of that class.\n-     * <p>\n-     * If the bean is a subtype of java.applet.Applet, then it is given\n-     * some special initialization.  First, it is supplied with a default\n-     * AppletStub and AppletContext.  Second, if it was instantiated from\n-     * a classname the applet's \"init\" method is called.  (If the bean was\n-     * deserialized this step is skipped.)\n-     * <p>\n-     * Note that for beans which are applets, it is the caller's responsibility\n-     * to call \"start\" on the applet.  For correct behaviour, this should be done\n-     * after the applet has been added into a visible AWT container.\n-     * <p>\n-     * Note that applets created via beans.instantiate run in a slightly\n-     * different environment than applets running inside browsers.  In\n-     * particular, bean applets have no access to \"parameters\", so they may\n-     * wish to provide property get\/set methods to set parameter values.  We\n-     * advise bean-applet developers to test their bean-applets against both\n-     * the JDK appletviewer (for a reference browser environment) and the\n-     * BDK BeanBox (for a reference bean container).\n-     *\n-     * @return a JavaBean\n-     * @param     cls         the class-loader from which we should create\n-     *                        the bean.  If this is null, then the system\n-     *                        class-loader is used.\n-     * @param     beanName    the name of the bean within the class-loader.\n-     *                        For example \"sun.beanbox.foobah\"\n-     * @param     beanContext The BeanContext in which to nest the new bean\n-     * @param     initializer The AppletInitializer for the new bean\n-     *\n-     * @throws ClassNotFoundException if the class of a serialized\n-     *              object could not be found.\n-     * @throws IOException if an I\/O error occurs.\n-     * @since 1.2\n-     *\n-     * @deprecated It is recommended to use\n-     * {@link #instantiate(ClassLoader, String, BeanContext)},\n-     * because the Applet API is deprecated. See the\n-     * <a href=\"..\/..\/java\/applet\/package-summary.html\"> java.applet package\n-     * documentation<\/a> for further information.\n-     *\/\n-    @Deprecated(since = \"9\", forRemoval = true)\n-    @SuppressWarnings(\"removal\")\n-    public static Object instantiate(ClassLoader cls, String beanName,\n-                                     BeanContext beanContext,\n-                                     AppletInitializer initializer)\n-            throws IOException, ClassNotFoundException {\n@@ -252,95 +180,1 @@\n-\n-            \/\/ Ok, if the result is an applet initialize it.\n-\n-            AppletStub stub = null;\n-\n-            if (result instanceof Applet) {\n-                Applet  applet      = (Applet) result;\n-                boolean needDummies = initializer == null;\n-\n-                if (needDummies) {\n-\n-                    \/\/ Figure our the codebase and docbase URLs.  We do this\n-                    \/\/ by locating the URL for a known resource, and then\n-                    \/\/ massaging the URL.\n-\n-                    \/\/ First find the \"resource name\" corresponding to the bean\n-                    \/\/ itself.  So a serialized bean \"a.b.c\" would imply a\n-                    \/\/ resource name of \"a\/b\/c.ser\" and a classname of \"x.y\"\n-                    \/\/ would imply a resource name of \"x\/y.class\".\n-\n-                    final String resourceName;\n-\n-                    if (serialized) {\n-                        \/\/ Serialized bean\n-                        resourceName = beanName.replace('.','\/').concat(\".ser\");\n-                    } else {\n-                        \/\/ Regular class\n-                        resourceName = beanName.replace('.','\/').concat(\".class\");\n-                    }\n-\n-                    URL objectUrl = null;\n-                    URL codeBase  = null;\n-                    URL docBase   = null;\n-\n-                    \/\/ Now get the URL corresponding to the resource name.\n-                    if (cls == null) {\n-                        objectUrl = ClassLoader.getSystemResource(resourceName);\n-                    } else\n-                        objectUrl = cls.getResource(resourceName);\n-\n-                    \/\/ If we found a URL, we try to locate the docbase by taking\n-                    \/\/ of the final path name component, and the code base by taking\n-                    \/\/ of the complete resourceName.\n-                    \/\/ So if we had a resourceName of \"a\/b\/c.class\" and we got an\n-                    \/\/ objectURL of \"file:\/\/bert\/classes\/a\/b\/c.class\" then we would\n-                    \/\/ want to set the codebase to \"file:\/\/bert\/classes\/\" and the\n-                    \/\/ docbase to \"file:\/\/bert\/classes\/a\/b\/\"\n-\n-                    if (objectUrl != null) {\n-                        String s = objectUrl.toExternalForm();\n-\n-                        if (s.endsWith(resourceName)) {\n-                            int ix   = s.length() - resourceName.length();\n-                            codeBase = newURL(s.substring(0,ix));\n-                            docBase  = codeBase;\n-\n-                            ix = s.lastIndexOf('\/');\n-\n-                            if (ix >= 0) {\n-                                docBase = newURL(s.substring(0,ix+1));\n-                            }\n-                        }\n-                    }\n-\n-                    \/\/ Setup a default context and stub.\n-                    BeansAppletContext context = new BeansAppletContext(applet);\n-\n-                    stub = (AppletStub)new BeansAppletStub(applet, context, codeBase, docBase);\n-                    applet.setStub(stub);\n-                } else {\n-                    initializer.initialize(applet, beanContext);\n-                }\n-\n-                \/\/ now, if there is a BeanContext, add the bean, if applicable.\n-\n-                if (beanContext != null) {\n-                    unsafeBeanContextAdd(beanContext, result);\n-                }\n-\n-                \/\/ If it was deserialized then it was already init-ed.\n-                \/\/ Otherwise we need to initialize it.\n-\n-                if (!serialized) {\n-                    \/\/ We need to set a reasonable initial size, as many\n-                    \/\/ applets are unhappy if they are started without\n-                    \/\/ having been explicitly sized.\n-                    applet.setSize(100,100);\n-                    applet.init();\n-                }\n-\n-                if (needDummies) {\n-                  ((BeansAppletStub)stub).active = true;\n-                } else initializer.activate(applet);\n-\n-            } else if (beanContext != null) unsafeBeanContextAdd(beanContext, result);\n+           if (beanContext != null) unsafeBeanContextAdd(beanContext, result);\n@@ -485,135 +319,0 @@\n-\n-\/**\n- * Package private support class.  This provides a default AppletContext\n- * for beans which are applets.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-@SuppressWarnings(\"removal\")\n-class BeansAppletContext implements AppletContext {\n-    Applet target;\n-    Hashtable<URL,Object> imageCache = new Hashtable<>();\n-\n-    BeansAppletContext(Applet target) {\n-        this.target = target;\n-    }\n-\n-    public AudioClip getAudioClip(URL url) {\n-        \/\/ We don't currently support audio clips in the Beans.instantiate\n-        \/\/ applet context, unless by some luck there exists a URL content\n-        \/\/ class that can generate an AudioClip from the audio URL.\n-        try {\n-            return (AudioClip) url.getContent();\n-        } catch (Exception ex) {\n-            return null;\n-        }\n-    }\n-\n-    public synchronized Image getImage(URL url) {\n-        Object o = imageCache.get(url);\n-        if (o != null) {\n-            return (Image)o;\n-        }\n-        try {\n-            o = url.getContent();\n-            if (o == null) {\n-                return null;\n-            }\n-            if (o instanceof Image) {\n-                imageCache.put(url, o);\n-                return (Image) o;\n-            }\n-            \/\/ Otherwise it must be an ImageProducer.\n-            Image img = target.createImage((java.awt.image.ImageProducer)o);\n-            imageCache.put(url, img);\n-            return img;\n-\n-        } catch (Exception ex) {\n-            return null;\n-        }\n-    }\n-\n-    public Applet getApplet(String name) {\n-        return null;\n-    }\n-\n-    public Enumeration<Applet> getApplets() {\n-        Vector<Applet> applets = new Vector<>();\n-        applets.addElement(target);\n-        return applets.elements();\n-    }\n-\n-    public void showDocument(URL url) {\n-        \/\/ We do nothing.\n-    }\n-\n-    public void showDocument(URL url, String target) {\n-        \/\/ We do nothing.\n-    }\n-\n-    public void showStatus(String status) {\n-        \/\/ We do nothing.\n-    }\n-\n-    public void setStream(String key, InputStream stream)throws IOException{\n-        \/\/ We do nothing.\n-    }\n-\n-    public InputStream getStream(String key){\n-        \/\/ We do nothing.\n-        return null;\n-    }\n-\n-    public Iterator<String> getStreamKeys(){\n-        \/\/ We do nothing.\n-        return null;\n-    }\n-}\n-\n-\/**\n- * Package private support class.  This provides an AppletStub\n- * for beans which are applets.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-@SuppressWarnings(\"removal\")\n-class BeansAppletStub implements AppletStub {\n-    transient boolean active;\n-    transient Applet target;\n-    transient AppletContext context;\n-    transient URL codeBase;\n-    transient URL docBase;\n-\n-    BeansAppletStub(Applet target,\n-                AppletContext context, URL codeBase,\n-                                URL docBase) {\n-        this.target = target;\n-        this.context = context;\n-        this.codeBase = codeBase;\n-        this.docBase = docBase;\n-    }\n-\n-    public boolean isActive() {\n-        return active;\n-    }\n-\n-    public URL getDocumentBase() {\n-        \/\/ use the root directory of the applet's class-loader\n-        return docBase;\n-    }\n-\n-    public URL getCodeBase() {\n-        \/\/ use the directory where we found the class or serialized object.\n-        return codeBase;\n-    }\n-\n-    public String getParameter(String name) {\n-        return null;\n-    }\n-\n-    public AppletContext getAppletContext() {\n-        return context;\n-    }\n-\n-    public void appletResize(int width, int height) {\n-        \/\/ we do nothing.\n-    }\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/Beans.java","additions":2,"deletions":303,"binary":false,"changes":305,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * as opposed to runtime when the JavaBean is part of an applet, application,\n+ * as opposed to runtime when the JavaBean is part of an application,\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/DesignMode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -955,1 +955,1 @@\n-         * This includes plugins bundled with applets\/applications.\n+         * This includes plugins bundled with applications.\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/metadata\/IIOMetadataFormatImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,3 +113,1 @@\n-     * <p> Each {@code ThreadGroup} will receive its own\n-     * instance; this allows different {@code Applet}s in the\n-     * same browser (for example) to each have their own registry.\n+     * <p> Each {@code ThreadGroup} will receive its own instance.\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/spi\/IIORegistry.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -537,2 +537,1 @@\n-               (!(root instanceof Window) &&\n-                !SunToolkit.isInstanceOf(root, \"java.applet.Applet\"))) {\n+               (!(root instanceof Window))) {\n@@ -690,1 +689,1 @@\n-         * Returns the Root (Window or Applet) that this BufferInfo references.\n+         * Returns the Root (Window) that this BufferInfo references.\n@@ -796,24 +795,8 @@\n-            if (SunToolkit.isInstanceOf(root, \"java.applet.Applet\")) {\n-                try {\n-                    AWTAccessor.ComponentAccessor componentAccessor\n-                            = AWTAccessor.getComponentAccessor();\n-                    componentAccessor.createBufferStrategy(root, 2, caps);\n-                    bs = componentAccessor.getBufferStrategy(root);\n-                } catch (AWTException e) {\n-                    \/\/ Type is not supported\n-                    if (LOGGER.isLoggable(PlatformLogger.Level.FINER)) {\n-                        LOGGER.finer(\"createBufferStrategy failed\",\n-                                     e);\n-                    }\n-                }\n-            }\n-            else {\n-                try {\n-                    ((Window)root).createBufferStrategy(2, caps);\n-                    bs = ((Window)root).getBufferStrategy();\n-                } catch (AWTException e) {\n-                    \/\/ Type not supported\n-                    if (LOGGER.isLoggable(PlatformLogger.Level.FINER)) {\n-                        LOGGER.finer(\"createBufferStrategy failed\",\n-                                     e);\n-                    }\n+            try {\n+                ((Window)root).createBufferStrategy(2, caps);\n+                bs = ((Window)root).getBufferStrategy();\n+            } catch (AWTException e) {\n+                \/\/ Type not supported\n+                if (LOGGER.isLoggable(PlatformLogger.Level.FINER)) {\n+                    LOGGER.finer(\"createBufferStrategy failed\",\n+                                 e);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/BufferStrategyPaintManager.java","additions":10,"deletions":27,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -1,580 +0,0 @@\n-\/*\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javax.swing;\n-\n-import java.applet.Applet;\n-import java.awt.AWTEvent;\n-import java.awt.BorderLayout;\n-import java.awt.Color;\n-import java.awt.Component;\n-import java.awt.Container;\n-import java.awt.Graphics;\n-import java.awt.HeadlessException;\n-import java.awt.LayoutManager;\n-import java.beans.BeanProperty;\n-import java.beans.JavaBean;\n-\n-import javax.accessibility.Accessible;\n-import javax.accessibility.AccessibleContext;\n-\n-\/**\n- * An extended version of <code>java.applet.Applet<\/code> that adds support for\n- * the JFC\/Swing component architecture.\n- * You can find task-oriented documentation about using <code>JApplet<\/code>\n- * in <em>The Java Tutorial<\/em>,\n- * in the section\n- * <a\n- href=\"https:\/\/docs.oracle.com\/javase\/tutorial\/uiswing\/components\/applet.html\">How to Make Applets<\/a>.\n- * <p>\n- * The <code>JApplet<\/code> class is slightly incompatible with\n- * <code>java.applet.Applet<\/code>.  <code>JApplet<\/code> contains a\n- * <code>JRootPane<\/code> as its only child.  The <code>contentPane<\/code>\n- * should be the parent of any children of the <code>JApplet<\/code>.\n- * As a convenience, the {@code add}, {@code remove}, and {@code setLayout}\n- * methods of this class are overridden, so that they delegate calls\n- * to the corresponding methods of the {@code ContentPane}.\n- * For example, you can add a child component to an applet as follows:\n- * <pre>\n- *       applet.add(child);\n- * <\/pre>\n- *\n- * And the child will be added to the <code>contentPane<\/code>.\n- * The <code>contentPane<\/code> will always be non-<code>null<\/code>.\n- * Attempting to set it to <code>null<\/code> will cause the\n- * <code>JApplet<\/code> to throw an exception. The default\n- * <code>contentPane<\/code> will have a <code>BorderLayout<\/code>\n- * manager set on it.\n- * Refer to {@link javax.swing.RootPaneContainer}\n- * for details on adding, removing and setting the <code>LayoutManager<\/code>\n- * of a <code>JApplet<\/code>.\n- * <p>\n- * Please see the <code>JRootPane<\/code> documentation for a\n- * complete description of the <code>contentPane<\/code>, <code>glassPane<\/code>,\n- * and <code>layeredPane<\/code> properties.\n- * <p>\n- * <strong>Warning:<\/strong> Swing is not thread safe. For more\n- * information see <a\n- * href=\"package-summary.html#threading\">Swing's Threading\n- * Policy<\/a>.\n- * <p>\n- * <strong>Warning:<\/strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases. The current serialization support is\n- * appropriate for short term storage or RMI between applications running\n- * the same version of Swing.  As of 1.4, support for long term storage\n- * of all JavaBeans\n- * has been added to the <code>java.beans<\/code> package.\n- * Please see {@link java.beans.XMLEncoder}.\n- *\n- * @see javax.swing.RootPaneContainer\n- *\n- * @author Arnaud Weber\n- * @since 1.2\n- *\n- * @deprecated The Applet API is deprecated, no replacement.\n- *\/\n-@Deprecated(since = \"9\", forRemoval = true)\n-@JavaBean(defaultProperty = \"JMenuBar\", description = \"Swing's Applet subclass.\")\n-@SwingContainer(delegate = \"getContentPane\")\n-@SuppressWarnings({\"serial\", \"removal\"}) \/\/ Same-version serialization only\n-public class JApplet extends Applet implements Accessible,\n-                                               RootPaneContainer,\n-                               TransferHandler.HasGetTransferHandler\n-{\n-    \/**\n-     * The <code>JRootPane<\/code> instance that manages the\n-     * <code>contentPane<\/code>.\n-     *\n-     * @see #getRootPane\n-     * @see #setRootPane\n-     *\/\n-    protected JRootPane rootPane;\n-\n-    \/**\n-     * If true then calls to <code>add<\/code> and <code>setLayout<\/code>\n-     * will be forwarded to the <code>contentPane<\/code>. This is initially\n-     * false, but is set to true when the <code>JApplet<\/code> is constructed.\n-     *\n-     * @see #isRootPaneCheckingEnabled\n-     * @see #setRootPaneCheckingEnabled\n-     * @see javax.swing.RootPaneContainer\n-     *\/\n-    protected boolean rootPaneCheckingEnabled = false;\n-\n-    \/**\n-     * The <code>TransferHandler<\/code> for this applet.\n-     *\/\n-    private TransferHandler transferHandler;\n-\n-    \/**\n-     * Creates a swing applet instance.\n-     * <p>\n-     * This constructor sets the component's locale property to the value\n-     * returned by <code>JComponent.getDefaultLocale<\/code>.\n-     *\n-     * @throws HeadlessException if GraphicsEnvironment.isHeadless()\n-     * returns true.\n-     * @see java.awt.GraphicsEnvironment#isHeadless\n-     * @see JComponent#getDefaultLocale\n-     *\/\n-    public JApplet() throws HeadlessException {\n-        super();\n-        \/\/ Check the timerQ and restart if necessary.\n-        TimerQueue q = TimerQueue.sharedInstance();\n-        if(q != null) {\n-            q.startIfNeeded();\n-        }\n-\n-        \/* Workaround for bug 4155072.  The shared double buffer image\n-         * may hang on to a reference to this applet; unfortunately\n-         * Image.getGraphics() will continue to call JApplet.getForeground()\n-         * and getBackground() even after this applet has been destroyed.\n-         * So we ensure that these properties are non-null here.\n-         *\/\n-        setForeground(Color.black);\n-        setBackground(Color.white);\n-\n-        setLocale( JComponent.getDefaultLocale() );\n-        setLayout(new BorderLayout());\n-        setRootPane(createRootPane());\n-        setRootPaneCheckingEnabled(true);\n-\n-        setFocusTraversalPolicyProvider(true);\n-        sun.awt.SunToolkit.checkAndSetPolicy(this);\n-\n-        enableEvents(AWTEvent.KEY_EVENT_MASK);\n-    }\n-\n-    \/**\n-     * Called by the constructor methods to create the default rootPane.\n-     *\n-     * @return  a new {@code JRootPane}\n-     *\/\n-    protected JRootPane createRootPane() {\n-        JRootPane rp = new JRootPane();\n-        \/\/ NOTE: this uses setOpaque vs LookAndFeel.installProperty as there\n-        \/\/ is NO reason for the RootPane not to be opaque. For painting to\n-        \/\/ work the contentPane must be opaque, therefore the RootPane can\n-        \/\/ also be opaque.\n-        rp.setOpaque(true);\n-        return rp;\n-    }\n-\n-    \/**\n-     * Sets the {@code transferHandler} property, which is a mechanism to\n-     * support transfer of data into this component. Use {@code null}\n-     * if the component does not support data transfer operations.\n-     * <p>\n-     * If the system property {@code suppressSwingDropSupport} is {@code false}\n-     * (the default) and the current drop target on this component is either\n-     * {@code null} or not a user-set drop target, this method will change the\n-     * drop target as follows: If {@code newHandler} is {@code null} it will\n-     * clear the drop target. If not {@code null} it will install a new\n-     * {@code DropTarget}.\n-     * <p>\n-     * Note: When used with {@code JApplet}, {@code TransferHandler} only\n-     * provides data import capability, as the data export related methods\n-     * are currently typed to {@code JComponent}.\n-     * <p>\n-     * Please see\n-     * <a href=\"https:\/\/docs.oracle.com\/javase\/tutorial\/uiswing\/dnd\/index.html\">\n-     * How to Use Drag and Drop and Data Transfer<\/a>, a section in\n-     * <em>The Java Tutorial<\/em>, for more information.\n-     *\n-     * @param newHandler the new {@code TransferHandler}\n-     *\n-     * @see TransferHandler\n-     * @see #getTransferHandler\n-     * @see java.awt.Component#setDropTarget\n-     * @since 1.6\n-     *\/\n-    @BeanProperty(hidden = true, description\n-            = \"Mechanism for transfer of data into the component\")\n-    public void setTransferHandler(TransferHandler newHandler) {\n-        TransferHandler oldHandler = transferHandler;\n-        transferHandler = newHandler;\n-        SwingUtilities.installSwingDropTargetAsNecessary(this, transferHandler);\n-        firePropertyChange(\"transferHandler\", oldHandler, newHandler);\n-    }\n-\n-    \/**\n-     * Gets the <code>transferHandler<\/code> property.\n-     *\n-     * @return the value of the <code>transferHandler<\/code> property\n-     *\n-     * @see TransferHandler\n-     * @see #setTransferHandler\n-     * @since 1.6\n-     *\/\n-    public TransferHandler getTransferHandler() {\n-        return transferHandler;\n-    }\n-\n-    \/**\n-     * Just calls <code>paint(g)<\/code>.  This method was overridden to\n-     * prevent an unnecessary call to clear the background.\n-     *\/\n-    public void update(Graphics g) {\n-        paint(g);\n-    }\n-\n-   \/**\n-    * Sets the menubar for this applet.\n-    * @param menuBar the menubar being placed in the applet\n-    *\n-    * @see #getJMenuBar\n-    *\/\n-    @BeanProperty(bound = false, hidden = true, description\n-            = \"The menubar for accessing pulldown menus from this applet.\")\n-    public void setJMenuBar(final JMenuBar menuBar) {\n-        getRootPane().setJMenuBar(menuBar);\n-    }\n-\n-   \/**\n-    * Returns the menubar set on this applet.\n-    *\n-    * @return the menubar set on this applet\n-    * @see #setJMenuBar\n-    *\/\n-    public JMenuBar getJMenuBar() {\n-        return getRootPane().getJMenuBar();\n-    }\n-\n-\n-    \/**\n-     * Returns whether calls to <code>add<\/code> and\n-     * <code>setLayout<\/code> are forwarded to the <code>contentPane<\/code>.\n-     *\n-     * @return true if <code>add<\/code> and <code>setLayout<\/code>\n-     *         are forwarded; false otherwise\n-     *\n-     * @see #addImpl\n-     * @see #setLayout\n-     * @see #setRootPaneCheckingEnabled\n-     * @see javax.swing.RootPaneContainer\n-     *\/\n-    protected boolean isRootPaneCheckingEnabled() {\n-        return rootPaneCheckingEnabled;\n-    }\n-\n-\n-    \/**\n-     * Sets whether calls to <code>add<\/code> and\n-     * <code>setLayout<\/code> are forwarded to the <code>contentPane<\/code>.\n-     *\n-     * @param enabled  true if <code>add<\/code> and <code>setLayout<\/code>\n-     *        are forwarded, false if they should operate directly on the\n-     *        <code>JApplet<\/code>.\n-     *\n-     * @see #addImpl\n-     * @see #setLayout\n-     * @see #isRootPaneCheckingEnabled\n-     * @see javax.swing.RootPaneContainer\n-     *\/\n-    @BeanProperty(hidden = true, description\n-            = \"Whether the add and setLayout methods are forwarded\")\n-    protected void setRootPaneCheckingEnabled(boolean enabled) {\n-        rootPaneCheckingEnabled = enabled;\n-    }\n-\n-\n-    \/**\n-     * Adds the specified child <code>Component<\/code>.\n-     * This method is overridden to conditionally forward calls to the\n-     * <code>contentPane<\/code>.\n-     * By default, children are added to the <code>contentPane<\/code> instead\n-     * of the frame, refer to {@link javax.swing.RootPaneContainer} for\n-     * details.\n-     *\n-     * @param comp the component to be enhanced\n-     * @param constraints the constraints to be respected\n-     * @param index the index\n-     * @throws IllegalArgumentException if <code>index<\/code> is invalid\n-     * @throws IllegalArgumentException if adding the container's parent\n-     *                  to itself\n-     * @throws IllegalArgumentException if adding a window to a container\n-     *\n-     * @see #setRootPaneCheckingEnabled\n-     * @see javax.swing.RootPaneContainer\n-     *\/\n-    protected void addImpl(Component comp, Object constraints, int index)\n-    {\n-        if(isRootPaneCheckingEnabled()) {\n-            getContentPane().add(comp, constraints, index);\n-        }\n-        else {\n-            super.addImpl(comp, constraints, index);\n-        }\n-    }\n-\n-    \/**\n-     * Removes the specified component from the container. If\n-     * <code>comp<\/code> is not the <code>rootPane<\/code>, this will forward\n-     * the call to the <code>contentPane<\/code>. This will do nothing if\n-     * <code>comp<\/code> is not a child of the <code>JFrame<\/code> or\n-     * <code>contentPane<\/code>.\n-     *\n-     * @param comp the component to be removed\n-     * @throws NullPointerException if <code>comp<\/code> is null\n-     * @see #add\n-     * @see javax.swing.RootPaneContainer\n-     *\/\n-    public void remove(Component comp) {\n-        if (comp == rootPane) {\n-            super.remove(comp);\n-        } else {\n-            getContentPane().remove(comp);\n-        }\n-    }\n-\n-\n-    \/**\n-     * Sets the <code>LayoutManager<\/code>.\n-     * Overridden to conditionally forward the call to the\n-     * <code>contentPane<\/code>.\n-     * Refer to {@link javax.swing.RootPaneContainer} for\n-     * more information.\n-     *\n-     * @param manager the <code>LayoutManager<\/code>\n-     * @see #setRootPaneCheckingEnabled\n-     * @see javax.swing.RootPaneContainer\n-     *\/\n-    public void setLayout(LayoutManager manager) {\n-        if(isRootPaneCheckingEnabled()) {\n-            getContentPane().setLayout(manager);\n-        }\n-        else {\n-            super.setLayout(manager);\n-        }\n-    }\n-\n-\n-    \/**\n-     * Returns the rootPane object for this applet.\n-     *\n-     * @see #setRootPane\n-     * @see RootPaneContainer#getRootPane\n-     *\/\n-    @BeanProperty(bound = false, hidden = true, description\n-            = \"the RootPane object for this applet.\")\n-    public JRootPane getRootPane() {\n-        return rootPane;\n-    }\n-\n-\n-    \/**\n-     * Sets the rootPane property.  This method is called by the constructor.\n-     * @param root the rootPane object for this applet\n-     *\n-     * @see #getRootPane\n-     *\/\n-    protected void setRootPane(JRootPane root) {\n-        if(rootPane != null) {\n-            remove(rootPane);\n-        }\n-        rootPane = root;\n-        if(rootPane != null) {\n-            boolean checkingEnabled = isRootPaneCheckingEnabled();\n-            try {\n-                setRootPaneCheckingEnabled(false);\n-                add(rootPane, BorderLayout.CENTER);\n-            }\n-            finally {\n-                setRootPaneCheckingEnabled(checkingEnabled);\n-            }\n-        }\n-    }\n-\n-\n-    \/**\n-     * Returns the contentPane object for this applet.\n-     *\n-     * @see #setContentPane\n-     * @see RootPaneContainer#getContentPane\n-     *\/\n-    public Container getContentPane() {\n-        return getRootPane().getContentPane();\n-    }\n-\n-   \/**\n-     * Sets the contentPane property.  This method is called by the constructor.\n-     * @param contentPane the contentPane object for this applet\n-     *\n-     * @throws java.awt.IllegalComponentStateException (a runtime\n-     *            exception) if the content pane parameter is null\n-     * @see #getContentPane\n-     * @see RootPaneContainer#setContentPane\n-     *\/\n-   @BeanProperty(bound = false, hidden = true, description\n-           = \"The client area of the applet where child components are normally inserted.\")\n-    public void setContentPane(Container contentPane) {\n-        getRootPane().setContentPane(contentPane);\n-    }\n-\n-    \/**\n-     * Returns the layeredPane object for this applet.\n-     *\n-     * @throws java.awt.IllegalComponentStateException (a runtime\n-     *            exception) if the layered pane parameter is null\n-     * @see #setLayeredPane\n-     * @see RootPaneContainer#getLayeredPane\n-     *\/\n-    public JLayeredPane getLayeredPane() {\n-        return getRootPane().getLayeredPane();\n-    }\n-\n-    \/**\n-     * Sets the layeredPane property.  This method is called by the constructor.\n-     * @param layeredPane the layeredPane object for this applet\n-     *\n-     * @see #getLayeredPane\n-     * @see RootPaneContainer#setLayeredPane\n-     *\/\n-    @BeanProperty(bound = false, hidden = true, description\n-            = \"The pane which holds the various applet layers.\")\n-    public void setLayeredPane(JLayeredPane layeredPane) {\n-        getRootPane().setLayeredPane(layeredPane);\n-    }\n-\n-    \/**\n-     * Returns the glassPane object for this applet.\n-     *\n-     * @see #setGlassPane\n-     * @see RootPaneContainer#getGlassPane\n-     *\/\n-    public Component getGlassPane() {\n-        return getRootPane().getGlassPane();\n-    }\n-\n-    \/**\n-     * Sets the glassPane property.\n-     * This method is called by the constructor.\n-     * @param glassPane the glassPane object for this applet\n-     *\n-     * @see #getGlassPane\n-     * @see RootPaneContainer#setGlassPane\n-     *\/\n-    @BeanProperty(bound = false, hidden = true, description\n-            = \"A transparent pane used for menu rendering.\")\n-    public void setGlassPane(Component glassPane) {\n-        getRootPane().setGlassPane(glassPane);\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\n-     * @since 1.6\n-     *\/\n-    @BeanProperty(bound = false)\n-    public Graphics getGraphics() {\n-        JComponent.getGraphicsInvoked(this);\n-        return super.getGraphics();\n-    }\n-\n-    \/**\n-     * Repaints the specified rectangle of this component within\n-     * <code>time<\/code> milliseconds.  Refer to <code>RepaintManager<\/code>\n-     * for details on how the repaint is handled.\n-     *\n-     * @param     time   maximum time in milliseconds before update\n-     * @param     x    the <i>x<\/i> coordinate\n-     * @param     y    the <i>y<\/i> coordinate\n-     * @param     width    the width\n-     * @param     height   the height\n-     * @see       RepaintManager\n-     * @since     1.6\n-     *\/\n-    public void repaint(long time, int x, int y, int width, int height) {\n-        if (RepaintManager.HANDLE_TOP_LEVEL_PAINT) {\n-            RepaintManager.currentManager(this).addDirtyRegion(\n-                              this, x, y, width, height);\n-        }\n-        else {\n-            super.repaint(time, x, y, width, height);\n-        }\n-    }\n-\n-    \/**\n-     * Returns a string representation of this JApplet. This method\n-     * is intended to be used only for debugging purposes, and the\n-     * content and format of the returned string may vary between\n-     * implementations. The returned string may be empty but may not\n-     * be <code>null<\/code>.\n-     *\n-     * @return  a string representation of this JApplet.\n-     *\/\n-    protected String paramString() {\n-        String rootPaneString = (rootPane != null ?\n-                                 rootPane.toString() : \"\");\n-        String rootPaneCheckingEnabledString = (rootPaneCheckingEnabled ?\n-                                                \"true\" : \"false\");\n-\n-        return super.paramString() +\n-        \",rootPane=\" + rootPaneString +\n-        \",rootPaneCheckingEnabled=\" + rootPaneCheckingEnabledString;\n-    }\n-\n-\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\/\/ Accessibility support\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-    \/**\n-     * {@code AccessibleContext} associated with this {@code JApplet}\n-     *\/\n-    protected AccessibleContext accessibleContext = null;\n-\n-    \/**\n-     * Gets the AccessibleContext associated with this JApplet.\n-     * For JApplets, the AccessibleContext takes the form of an\n-     * AccessibleJApplet.\n-     * A new AccessibleJApplet instance is created if necessary.\n-     *\n-     * @return an AccessibleJApplet that serves as the\n-     *         AccessibleContext of this JApplet\n-     *\/\n-    public AccessibleContext getAccessibleContext() {\n-        if (accessibleContext == null) {\n-            accessibleContext = new AccessibleJApplet();\n-        }\n-        return accessibleContext;\n-    }\n-\n-    \/**\n-     * This class implements accessibility support for the\n-     * <code>JApplet<\/code> class.\n-     *\/\n-    protected class AccessibleJApplet extends AccessibleApplet {\n-\n-        \/**\n-         * Constructs an {@code AccessibleJApplet}.\n-         *\/\n-        protected AccessibleJApplet() {}\n-\n-        \/\/ everything moved to new parent, AccessibleApplet\n-    }\n-}\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JApplet.java","additions":0,"deletions":580,"binary":false,"changes":580,"status":"deleted"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.Applet;\n@@ -109,2 +108,1 @@\n- * such as <code>JFrame<\/code>, <code>JDialog<\/code>,\n- * and <code>JApplet<\/code> --\n+ * such as <code>JFrame<\/code> and <code>JDialog<\/code> --\n@@ -612,1 +610,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -626,2 +623,1 @@\n-                if(parent instanceof Window ||\n-                   parent instanceof Applet) {\n+                if(parent instanceof Window) {\n@@ -2841,5 +2837,0 @@\n-     * The default locale has \"AppContext\" scope so that applets (and\n-     * potentially multiple lightweight applications running in a single VM)\n-     * can have their own setting. An applet can safely alter its default\n-     * locale because it will have no affect on other applets (or the browser).\n-     *\n@@ -2868,4 +2859,0 @@\n-     * The default locale has \"AppContext\" scope so that applets (and\n-     * potentially multiple lightweight applications running in a single VM)\n-     * can have their own setting. An applet can safely alter its default\n-     * locale because it will have no affect on other applets (or the browser).\n@@ -2981,1 +2968,1 @@\n-    @SuppressWarnings({\"deprecation\", \"removal\"})\n+    @SuppressWarnings(\"deprecation\")\n@@ -3018,2 +3005,1 @@\n-      while (parent != null && !(parent instanceof Window) &&\n-             !(parent instanceof Applet)) {\n+      while (parent != null && !(parent instanceof Window)) {\n@@ -4537,1 +4523,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -4542,1 +4527,1 @@\n-        if (p == null || p instanceof Window || p instanceof Applet) {\n+        if (p == null || p instanceof Window) {\n@@ -4697,2 +4682,2 @@\n-     * Returns the top-level ancestor of this component (either the\n-     * containing <code>Window<\/code> or <code>Applet<\/code>),\n+     * Returns the top-level ancestor of this component (the\n+     * containing <code>Window<\/code>)\n@@ -4706,1 +4691,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -4709,1 +4693,1 @@\n-            if(p instanceof Window || p instanceof Applet) {\n+            if(p instanceof Window) {\n@@ -5129,1 +5113,1 @@\n-        \/\/ parent Container's up to Window or Applet. First container is\n+        \/\/ parent Container's up to Window. First container is\n@@ -5159,1 +5143,1 @@\n-             c != null && !(c instanceof Window) && !(c instanceof Applet);\n+             c != null && !(c instanceof Window);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JComponent.java","additions":10,"deletions":26,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1342,2 +1342,1 @@\n-     * called once when running in plugin resulting in the entries only\n-     * appearing in the first applet.\n+     * called once when running in an AppContext.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JEditorPane.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1319,5 +1319,1 @@\n-             * is tested below).  This is necessary for JApplets, because\n-             * because an applet normally isn't made visible until after its\n-             * start() method returns -- if this method is called from start(),\n-             * the applet will appear to hang while an invisible modal frame\n-             * waits for input.\n+             * is tested below).\n@@ -1463,5 +1459,1 @@\n-         * is tested below).  This is necessary for JApplets, because\n-         * because an applet normally isn't made visible until after its\n-         * start() method returns -- if this method is called from start(),\n-         * the applet will appear to hang while an invisible modal frame\n-         * waits for input.\n+         * is tested below).\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JOptionPane.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * <code>JApplet<\/code>, and <code>JInternalFrame<\/code>.\n+ * and <code>JInternalFrame<\/code>.\n@@ -45,1 +45,1 @@\n- * <p style=\"text-align:center\"><img src=\"doc-files\/JRootPane-1.gif\"\n+ * <p style=\"text-align:center\"><img src=\"doc-files\/JRootPane-1.svg\"\n@@ -47,1 +47,1 @@\n- * HEIGHT=484 WIDTH=629><\/p>\n+ * HEIGHT=600 WIDTH=850><\/p>\n@@ -49,11 +49,8 @@\n- * component on the host system) are shown with a darker, heavier box. The four\n- * heavyweight JFC\/Swing containers (<code>JFrame<\/code>, <code>JDialog<\/code>,\n- * <code>JWindow<\/code>, and <code>JApplet<\/code>) are\n- * shown in relation to the AWT classes they extend.\n- * These four components are the\n- * only heavyweight containers in the Swing library. The lightweight container\n- * <code>JInternalFrame<\/code> is also shown.\n- * All five of these JFC\/Swing containers implement the\n- * <code>RootPaneContainer<\/code> interface,\n- * and they all delegate their operations to a\n- * <code>JRootPane<\/code> (shown with a little \"handle\" on top).\n+ * component on the host system) are shown with a heavier box. AWT components in red,\n+ * Swing heavyweights in blue.\n+ * The three heavyweight JFC\/Swing containers ({@code JFrame}, {@code JDialog}, and\n+ * {@code JWindow}) are shown in relation to the AWT classes they extend.\n+ * These three components are the only heavyweight containers in the Swing library.\n+ * The lightweight container {@code JInternalFrame} is also shown in green with thin outline.\n+ * All four of these JFC\/Swing containers implement the {@code RootPaneContainer} interface,\n+ * and they all delegate their operations to a {@code JRootPane}.\n@@ -182,1 +179,0 @@\n- * @see JApplet\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JRootPane.java","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.Applet;\n@@ -6125,1 +6124,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -6136,2 +6134,1 @@\n-                } else if ((c instanceof Window) ||\n-                           (c instanceof Applet && c.getParent() == null)) {\n+                } else if (c instanceof Window) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -381,1 +381,1 @@\n-     * ancestors is not a <code>Window<\/code> or <code>Applet<\/code>.\n+     * ancestors is not a <code>Window<\/code>.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JViewport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.applet.*;\n@@ -133,1 +132,1 @@\n-       * Find the top focusable Window, Applet, or InternalFrame\n+       * Find the top focusable Window, or InternalFrame\n@@ -135,1 +134,0 @@\n-     @SuppressWarnings(\"removal\")\n@@ -139,1 +137,1 @@\n-                p instanceof Applet || p instanceof JInternalFrame) {\n+                p instanceof JInternalFrame) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/KeyboardManager.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.Applet;\n@@ -277,1 +276,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -291,4 +289,0 @@\n-            if ((OSInfo.getOSType() == OSInfo.OSType.MACOSX) && (owner != null) &&\n-                (EmbeddedFrame.getAppletIfAncestorOf(owner) != null)) {\n-                ((HeavyWeightPopup)popup).setCacheEnabled(false);\n-            }\n@@ -629,1 +623,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -659,6 +652,0 @@\n-                } else if (parent instanceof JApplet) {\n-                    Rectangle parentBounds = parent.getBounds();\n-                    Point p = parent.getLocationOnScreen();\n-                    parentBounds.x = p.x;\n-                    parentBounds.y = p.y;\n-                    result = parentBounds.contains(x, y, popupWidth, popupHeight);\n@@ -798,1 +785,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -820,5 +806,0 @@\n-                } else if (p instanceof JApplet) {\n-                    \/\/ Painting code stops at Applets, we don't want\n-                    \/\/ to add to a Component above an Applet otherwise\n-                    \/\/ you'll never see it painted.\n-                    break;\n@@ -951,1 +932,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -964,1 +944,1 @@\n-            while (!(parent instanceof Window || parent instanceof Applet) &&\n+            while (!(parent instanceof Window) &&\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/PopupFactory.java","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.applet.*;\n@@ -55,2 +54,2 @@\n- * for Swing's top level components (<code>JApplet<\/code>,\n- * <code>JWindow<\/code>, <code>JFrame<\/code> and <code>JDialog<\/code>).\n+ * for Swing's top level components\n+ * (<code>JWindow<\/code>, <code>JFrame<\/code> and <code>JDialog<\/code>).\n@@ -393,5 +392,2 @@\n-        if(invalidComponents != null) {\n-            int index = invalidComponents.indexOf(component);\n-            if(index != -1) {\n-                invalidComponents.remove(index);\n-            }\n+        if (invalidComponents != null) {\n+            invalidComponents.remove(component);\n@@ -409,1 +405,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -427,1 +422,1 @@\n-        \/* Make sure that c and all it ancestors (up to an Applet or\n+        \/* Make sure that c and all it ancestors (up to a\n@@ -443,1 +438,1 @@\n-            if ((p instanceof Window) || (p instanceof Applet)) {\n+            if (p instanceof Window) {\n@@ -511,23 +506,0 @@\n-    \/**\n-     * Adds <code>applet<\/code> to the list of <code>Component<\/code>s that\n-     * need to be repainted.\n-     *\n-     * @param applet Applet to repaint, null results in nothing happening.\n-     * @param x X coordinate of the region to repaint\n-     * @param y Y coordinate of the region to repaint\n-     * @param w Width of the region to repaint\n-     * @param h Height of the region to repaint\n-     * @see JApplet#repaint\n-     * @since 1.6\n-     *\n-     * @deprecated The Applet API is deprecated. See the\n-     * <a href=\"..\/..\/java\/applet\/package-summary.html\"> java.applet package\n-     * documentation<\/a> for further information.\n-     *\/\n-    @Deprecated(since = \"9\", forRemoval = true)\n-    @SuppressWarnings(\"removal\")\n-    public void addDirtyRegion(Applet applet, int x, int y, int w, int h) {\n-        addDirtyRegion0(applet, x, y, w, h);\n-    }\n-\n-    @SuppressWarnings(\"removal\")\n@@ -550,4 +522,0 @@\n-            else if (hw instanceof Applet) {\n-                addDirtyRegion((Applet)hw, dirty.x, dirty.y,\n-                               dirty.width, dirty.height);\n-            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/RepaintManager.java","additions":7,"deletions":39,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * JRootPane child: JDialog, JFrame, JWindow, JApplet, JInternalFrame.\n+ * JRootPane child: JDialog, JFrame, JWindow, JInternalFrame.\n@@ -49,1 +49,1 @@\n- * (such as {@code JFrame}, {@code JDialog}, {@code JWindow}, {@code JApplet},\n+ * (such as {@code JFrame}, {@code JDialog}, {@code JWindow},\n@@ -65,1 +65,1 @@\n- * <code>JApplet<\/code> and <code>JInternalFrame<\/code> is controlled by\n+ * and <code>JInternalFrame<\/code> is controlled by\n@@ -76,1 +76,0 @@\n- * @see JApplet\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/RootPaneContainer.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * is a top level Swing component (JFrame, JWindow, JDialog, JApplet), this\n+ * is a top level Swing component (JFrame, JWindow, JDialog), this\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SwingPaintEventDispatcher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.applet.*;\n-\n@@ -419,1 +417,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -428,2 +425,1 @@\n-                } else if(c instanceof java.applet.Applet ||\n-                          c instanceof java.awt.Window) {\n+                } else if(c instanceof java.awt.Window) {\n@@ -446,1 +442,1 @@\n-                if(c instanceof java.awt.Window || c instanceof java.applet.Applet)\n+                if(c instanceof java.awt.Window)\n@@ -459,1 +455,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -468,2 +463,1 @@\n-            }  else if(c instanceof java.applet.Applet ||\n-                       c instanceof java.awt.Window) {\n+            }  else if (c instanceof java.awt.Window) {\n@@ -486,1 +480,1 @@\n-            if(c instanceof java.awt.Window || c instanceof java.applet.Applet)\n+            if(c instanceof java.awt.Window)\n@@ -1658,1 +1652,1 @@\n-     * @return the first ancestor of c that's a Window or the last Applet ancestor\n+     * @return the first ancestor of c that's a Window\n@@ -1660,1 +1654,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1662,1 +1655,0 @@\n-        Component applet = null;\n@@ -1667,3 +1659,0 @@\n-            if (p instanceof Applet) {\n-                applet = p;\n-            }\n@@ -1671,1 +1660,1 @@\n-        return applet;\n+        return null;\n@@ -1701,1 +1690,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1721,3 +1709,2 @@\n-                if ((component instanceof Applet) ||\n-                    (component instanceof Window)) {\n-                    \/\/ No JComponents, if Window or Applet parent, process\n+                if (component instanceof Window) {\n+                    \/\/ No JComponents, if Window parent, process\n@@ -2205,2 +2192,1 @@\n-     * (either a {@code Frame} or an {@code Applet} object.) Otherwise this\n-     * method returns {@code null}.\n+     * (a {@code Frame}). Otherwise this method returns {@code null}.\n@@ -2217,1 +2203,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -2240,1 +2225,1 @@\n-            if (c instanceof Window || c instanceof Applet) {\n+            if (c instanceof Window) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SwingUtilities.java","additions":10,"deletions":25,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-    \/\/ happen in applet case when TimerQueues thread is destroyed.\n+    \/\/ happen in an AppContext case when TimerQueues thread is destroyed.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/Timer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -797,1 +797,0 @@\n- @SuppressWarnings(\"removal\")\n@@ -806,1 +805,1 @@\n-        } else if (parent instanceof JApplet || parent instanceof JInternalFrame) {\n+        } else if (parent instanceof JInternalFrame) {\n@@ -831,1 +830,1 @@\n-        } else if (parent instanceof JApplet || parent instanceof JInternalFrame) {\n+        } else if (parent instanceof JInternalFrame) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ToolTipManager.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -183,4 +183,2 @@\n-     * scope instead so that applets (and potentially multiple lightweight\n-     * applications running in a single VM) have their own state. For example,\n-     * an applet can alter its look and feel, see <code>setLookAndFeel<\/code>.\n-     * Doing so has no affect on other applets (or the browser).\n+     * scope instead so that potentially multiple lightweight\n+     * applications running in a single VM have their own state.\n@@ -1458,2 +1456,2 @@\n-     * <code>AppContext<\/code> specific LAFState object runs.  When the AppContext\n-     * corresponds to a set of applets it's possible for this method\n+     * <code>AppContext<\/code> specific LAFState object runs.\n+     * In some AppContext cases, it's possible for this method\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/UIManager.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/beaninfo\/images\/JAppletColor16.gif","binary":true,"status":"deleted"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/beaninfo\/images\/JAppletColor32.gif","binary":true,"status":"deleted"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/beaninfo\/images\/JAppletMono16.gif","binary":true,"status":"deleted"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/beaninfo\/images\/JAppletMono32.gif","binary":true,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -741,0 +741,4 @@\n+        if (c instanceof JComponent comp) {\n+            this.label.putClientProperty(\"html.disable\",\n+                                         comp.getClientProperty(\"html.disable\"));\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/TitledBorder.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/doc-files\/JRootPane-1.gif","binary":true,"status":"deleted"},{"patch":"@@ -0,0 +1,112 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+ Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+ This code is free software; you can redistribute it and\/or modify it\n+ under the terms of the GNU General Public License version 2 only, as\n+ published by the Free Software Foundation.  Oracle designates this\n+ particular file as subject to the \"Classpath\" exception as provided\n+ by Oracle in the LICENSE file that accompanied this code.\n+\n+ This code is distributed in the hope that it will be useful, but WITHOUT\n+ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ version 2 for more details (a copy is included in the LICENSE file that\n+ accompanied this code).\n+\n+ You should have received a copy of the GNU General Public License version\n+ 2 along with this work; if not, write to the Free Software Foundation,\n+ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+ Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ or visit www.oracle.com if you need additional information or have any\n+ questions.\n+-->\n+\n+<svg version=\"1.1\"\n+     width=\"850\" height=\"600\"\n+     xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n+     xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n+    <style><![CDATA[\n+        text {\n+            font: 20px 'DejaVu Sans', Verdana, Arial, sans-serif;\n+            fill: #000000;\n+        }\n+        text.centered {\n+            text-anchor: middle;\n+            dominant-baseline: middle;\n+        }\n+    ]]><\/style>\n+\n+    <defs>\n+\n+    <g id=\"window\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"100\" height=\"60\" fill=\"none\" stroke=\"#ff0000\" stroke-width=\"5\" \/>\n+       <text id=\"t1\" x=\"60\" y=\"40\" class=\"centered\">Window<\/text>\n+    <\/g>\n+\n+    <g id=\"frame\">\n+       <rect id=\"w2\" x=\"10\" y=\"10\" width=\"100\" height=\"60\" fill=\"none\" stroke=\"#ff0000\" stroke-width=\"5\" \/>\n+       <text id=\"t2\" x=\"60\" y=\"40\" class=\"centered\">Frame<\/text>\n+    <\/g>\n+\n+    <g id=\"dialog\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"100\" height=\"60\" fill=\"none\" stroke=\"#ff0000\" stroke-width=\"5\" \/>\n+       <text id=\"t1\" x=\"60\" y=\"40\" class=\"centered\">Dialog<\/text>\n+    <\/g>\n+\n+    <g id=\"jframe\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"100\" height=\"60\" fill=\"none\" stroke=\"#0000ff\" stroke-width=\"5\" \/>\n+       <text id=\"t1\" x=\"60\" y=\"40\" class=\"centered\">JFrame<\/text>\n+    <\/g>\n+\n+    <g id=\"jdialog\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"100\" height=\"60\" fill=\"none\" stroke=\"#0000ff\" stroke-width=\"5\" \/>\n+       <text id=\"t1\" x=\"60\" y=\"40\" class=\"centered\">JDialog<\/text>\n+    <\/g>\n+\n+    <g id=\"jwindow\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"100\" height=\"60\" fill=\"none\" stroke=\"#0000ff\" stroke-width=\"5\" \/>\n+       <text id=\"t1\" x=\"60\" y=\"40\" class=\"centered\">JWindow<\/text>\n+    <\/g>\n+\n+    <g id=\"jinternalframe\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"160\" height=\"60\" fill=\"none\" stroke=\"#00ff00\" stroke-width=\"2\" \/>\n+       <text id=\"t1\" x=\"90\" y=\"40\" class=\"centered\">JInternalFrame<\/text>\n+    <\/g>\n+\n+    <g id=\"jrootpane\">\n+       <rect id=\"w1\" x=\"10\" y=\"10\" width=\"120\" height=\"60\" fill=\"none\" stroke=\"#00ff00\" stroke-width=\"2\" \/>\n+       <text id=\"t1\" x=\"70\" y=\"40\" class=\"centered\">JRootPane<\/text>\n+    <\/g>\n+\n+    <\/defs>\n+\n+    <use x=\"300\" y=\"10\" xlink:href=\"#window\"\/>\n+    <use x=\"300\" y=\"300\" xlink:href=\"#jwindow\"\/>\n+    <use x=\"10\" y=\"150\" xlink:href=\"#frame\"\/>\n+    <use x=\"10\" y=\"300\" xlink:href=\"#jframe\"\/>\n+    <use x=\"150\" y=\"150\" xlink:href=\"#dialog\"\/>\n+    <use x=\"150\" y=\"300\" xlink:href=\"#jdialog\"\/>\n+    <use x=\"450\" y=\"300\" xlink:href=\"#jinternalframe\"\/>\n+    <use x=\"270\" y=\"450\" xlink:href=\"#jrootpane\"\/>\n+    <line x1=\"10\" y1=\"260\" x2=\"640\" y2=\"260\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"10\" y1=\"410\" x2=\"640\" y2=\"410\" stroke=\"#000000\" stroke-width=\"5\" \/>\n+\n+    <line x1=\"70\" y1=\"120\" x2=\"360\" y2=\"120\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"70\" y1=\"120\" x2=\"70\" y2=\"160\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"210\" y1=\"120\" x2=\"210\" y2=\"160\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"70\" y1=\"220\" x2=\"70\" y2=\"310\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"210\" y1=\"220\" x2=\"210\" y2=\"310\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"360\" y1=\"80\" x2=\"360\" y2=\"310\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+    <line x1=\"340\" y1=\"410\" x2=\"340\" y2=\"460\" stroke=\"#000000\" stroke-width=\"2\" \/>\n+\n+    <text x=\"650\" y=\"150\">AWT classes<\/text>\n+    <text x=\"650\" y=\"300\">Swing classes<\/text>\n+    <text x=\"650\" y=\"330\">implementing the<\/text>\n+    <text x=\"650\" y=\"360\">RootPaneContainer<\/text>\n+    <text x=\"650\" y=\"390\">interface<\/text>\n+\n+<\/svg>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/doc-files\/JRootPane-1.svg","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -47,2 +47,2 @@\n- * application. Calls to an application's {@code main} method, or methods in\n- * {@code Applet}, are not invoked on the event dispatching thread. As such,\n+ * application. Calls to an application's {@code main} method,\n+ * are not invoked on the event dispatching thread. As such,\n@@ -50,1 +50,1 @@\n- * constructing and showing an application or applet. The preferred way to\n+ * constructing and showing an application. The preferred way to\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/package-info.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -471,0 +471,4 @@\n+                if (Boolean.TRUE.equals(\n+                    this.optionPane.getClientProperty(\"html.disable\"))) {\n+                    label.putClientProperty(\"html.disable\", true);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicOptionPaneUI.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import java.applet.Applet;\n-\n@@ -919,1 +917,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -922,1 +919,1 @@\n-                if (c instanceof Applet || c instanceof Window) {\n+                if (c instanceof Window) {\n@@ -1134,1 +1131,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -1174,2 +1170,0 @@\n-                    } else if(c instanceof JApplet) {\n-                        invoker = ((JApplet)c).getRootPane();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicPopupMenuUI.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -498,1 +498,5 @@\n-            htmlViews = createHTMLVector();\n+            Boolean htmlDisabled = (Boolean)\n+                                    tabPane.getClientProperty(\"html.disable\");\n+            if (!(Boolean.TRUE.equals(htmlDisabled))) {\n+                htmlViews = createHTMLVector();\n+            }\n@@ -4068,0 +4072,2 @@\n+            Boolean htmlDisabled = (Boolean)\n+                                    tabPane.getClientProperty(\"html.disable\");\n@@ -4069,1 +4075,1 @@\n-            if (isHTML) {\n+            if (isHTML && !(Boolean.TRUE.equals(htmlDisabled))) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTabbedPaneUI.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1032,4 +1032,5 @@\n-     * Gets the allocation to give the root View.  Due\n-     * to an unfortunate set of historical events this\n-     * method is inappropriately named.  The Rectangle\n-     * returned has nothing to do with visibility.\n+     * Gets the allocation (that is the allocated size) for the root view.\n+     * <p>\n+     * The returned rectangle is unrelated to visibility.\n+     * It is used to set the size of the root view.\n+     * <p>\n@@ -1040,0 +1041,2 @@\n+     * @see View#paint\n+     * @see View#setSize\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTextUI.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-    exports java.applet;\n","filename":"src\/java.desktop\/share\/classes\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n- * The AppContext allows applet access to what would otherwise be\n+ * The AppContext allows a context access to what would otherwise be\n@@ -82,1 +82,1 @@\n- * so that applets and other untrusted code can execute methods on the\n+ * so that untrusted code can execute methods on the\n@@ -107,1 +107,1 @@\n- * within the AppContext \"sandbox\".  For example, say a malicious applet\n+ * within the AppContext \"sandbox\".  For example, say malicious code\n@@ -110,2 +110,2 @@\n- * using AppContexts, the only key events that applet will be able to\n- * listen to are its own.  A more reasonable applet request would be to\n+ * using AppContexts, the only key events that code will be able to\n+ * listen to are its own.  A more reasonable request would be to\n@@ -113,8 +113,2 @@\n- * an AppContext, the applet's look-and-feel will change without\n- * disrupting other applets or potentially the browser itself.<p>\n- *\n- * Because the AppContext is a facility for safely extending application\n- * service support to applets, none of its methods may be blocked by a\n- * a SecurityManager check in a valid Java implementation.  Applets may\n- * therefore safely invoke any of its methods without worry of being\n- * blocked.\n+ * an AppContext, the look-and-feel will change without\n+ * disrupting other contexts.\n@@ -158,1 +152,1 @@\n-       standalone apps only (i.e. not applets)\n+       standalone apps only.\n@@ -286,3 +280,1 @@\n-            \/\/ if no contexts have been created yet. This covers standalone apps\n-            \/\/ and excludes applets because by the time applet starts\n-            \/\/ a number of contexts have already been created by the plugin.\n+            \/\/ if no contexts have been created yet.\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/AppContext.java","additions":9,"deletions":17,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.applet.Applet;\n@@ -52,1 +51,1 @@\n- * A generic container used for embedding Java components, usually applets.\n+ * A generic container used for embedding Java components.\n@@ -56,1 +55,1 @@\n- *   firewall, preventing the contained components or applets from using\n+ *   firewall, preventing the contained components from using\n@@ -74,1 +73,1 @@\n-    private KeyboardFocusManager appletKFM;\n+    private KeyboardFocusManager appKFM;\n@@ -142,1 +141,1 @@\n-        \/\/ should be the same as appletKFM\n+        \/\/ should be the same as appKFM\n@@ -145,1 +144,1 @@\n-        appletKFM = KeyboardFocusManager.getCurrentKeyboardFocusManager();\n+        appKFM = KeyboardFocusManager.getCurrentKeyboardFocusManager();\n@@ -147,1 +146,1 @@\n-            addTraversingOutListeners(appletKFM);\n+            addTraversingOutListeners(appKFM);\n@@ -172,1 +171,1 @@\n-     * must call this method on the Applet's AppContext. After that, all the changes\n+     * must call this method on the AppContext. After that, all the changes\n@@ -177,2 +176,2 @@\n-        if (appletKFM != null) {\n-            removeTraversingOutListeners(appletKFM);\n+        if (appKFM != null) {\n+            removeTraversingOutListeners(appKFM);\n@@ -180,1 +179,1 @@\n-        appletKFM = KeyboardFocusManager.getCurrentKeyboardFocusManager();\n+        appKFM = KeyboardFocusManager.getCurrentKeyboardFocusManager();\n@@ -182,1 +181,1 @@\n-            addTraversingOutListeners(appletKFM);\n+            addTraversingOutListeners(appKFM);\n@@ -188,1 +187,1 @@\n-     * KeyboardFocusManager of applet's AppContext. We don't want the KFM to keep\n+     * KeyboardFocusManager of an AppContext. We don't want the KFM to keep\n@@ -194,2 +193,2 @@\n-        if (appletKFM != null) {\n-            addTraversingOutListeners(appletKFM);\n+        if (appKFM != null) {\n+            addTraversingOutListeners(appKFM);\n@@ -202,1 +201,1 @@\n-     * KeyboardFocusManager of applet's AppContext. We don't want the KFM to keep\n+     * KeyboardFocusManager of an AppContext. We don't want the KFM to keep\n@@ -208,2 +207,2 @@\n-        if (appletKFM != null) {\n-            removeTraversingOutListeners(appletKFM);\n+        if (appKFM != null) {\n+            removeTraversingOutListeners(appKFM);\n@@ -514,25 +513,0 @@\n-    \/**\n-     * Checks if the component is in an EmbeddedFrame. If so,\n-     * returns the applet found in the hierarchy or null if\n-     * not found.\n-     * @return the parent applet or {@code null}\n-     * @since 1.6\n-     *\n-     * @deprecated The Applet API is deprecated. See the\n-     * <a href=\"..\/..\/java\/applet\/package-summary.html\"> java.applet package\n-     * documentation<\/a> for further information.\n-     *\/\n-    @Deprecated(since = \"9\", forRemoval = true)\n-    @SuppressWarnings(\"removal\")\n-    public static Applet getAppletIfAncestorOf(Component comp) {\n-        Container parent = comp.getParent();\n-        Applet applet = null;\n-        while (parent != null && !(parent instanceof EmbeddedFrame)) {\n-            if (parent instanceof Applet) {\n-                applet = (Applet)parent;\n-            }\n-            parent = parent.getParent();\n-        }\n-        return parent == null ? null : applet;\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/EmbeddedFrame.java","additions":17,"deletions":43,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -270,2 +270,1 @@\n-     * new ThreadGroup.  Browser code, for example, would use this\n-     * method to create an AppContext & EventQueue for an Applet.\n+     * new ThreadGroup.\n@@ -1638,3 +1637,0 @@\n-     * This could be stored per-app context which would work\n-     * for different applets, but wouldn't help for a single application\n-     * using GTK and some other L&F concurrently.\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/SunToolkit.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.util.Arrays;\n@@ -572,0 +573,3 @@\n+            if (model.getTransparentPixel() > 0) {\n+                Arrays.fill(saved_image, (byte) model.getTransparentPixel());\n+            }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/GifImageDecoder.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,3 +47,3 @@\n- * use of particular time values by multiple applets will cause\n- * confusing results.  For example, if plugin runs two applets\n- * simultaneously, the initTime for those applets will collide\n+ * use of particular time values by multiple AppContexts will cause\n+ * confusing results.  For example, if two contexts run\n+ * simultaneously, the initTime for those will collide\n@@ -52,1 +52,1 @@\n- * To automatically track startup performance in an app or applet,\n+ * To automatically track startup performance in an app\n@@ -170,1 +170,1 @@\n-     * during the startup of a Java applet or application.  This time is\n+     * during the startup of an application.  This time is\n@@ -172,1 +172,1 @@\n-     * time and other events in the system (such as an applet's init time).\n+     * time and other events in the system.\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/util\/PerformanceLogger.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2484,1 +2484,1 @@\n-     * running in an applet\/browser\/Java plugin environment these new fonts\n+     * in an AppContext environment these new fonts\n@@ -2505,1 +2505,1 @@\n-     * If _usingAlternateComposites is true, we are not in an \"applet\"\n+     * If _usingAlternateComposites is true, we are not in an \"AppContext\"\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/SunFontManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1444,1 +1444,1 @@\n-            \/\/ applets, embedded, etc - translate directly\n+            \/\/ embedded, etc - translate directly\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -336,1 +336,1 @@\n-    private static native boolean initXrandrExtension();\n+    private static native boolean initXrandrExtension(boolean useOldConfigDisplayMode);\n@@ -353,2 +353,3 @@\n-            xrandrExtSupported =\n-                Boolean.valueOf(initXrandrExtension());\n+            boolean useOldConfigDisplayMode =\n+                    Boolean.getBoolean(\"awt.x11useOldConfigDisplayMode\");\n+            xrandrExtSupported = initXrandrExtension(useOldConfigDisplayMode);\n@@ -356,1 +357,1 @@\n-        return xrandrExtSupported.booleanValue();\n+        return xrandrExtSupported;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsDevice.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -65,0 +65,7 @@\n+#define MAX_DISPLAY_MODES 256\n+typedef struct {\n+    unsigned int width;\n+    unsigned int height;\n+    jint refresh;\n+} DisplayMode;\n+\n","filename":"src\/java.desktop\/unix\/native\/common\/awt\/awt_GraphicsEnv.h","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+#include <math.h>\n@@ -79,0 +80,2 @@\n+static Bool useNewConfigDisplayMode = True;\n+\n@@ -1508,0 +1511,14 @@\n+typedef void (*XRRSetScreenSizeType)(Display *dpy, Window window,\n+                                     int width, int height,\n+                                     int mmWidth, int mmHeight);\n+\n+typedef Status (*XRRSetCrtcConfigType)(Display *dpy,\n+                                       XRRScreenResources *resources,\n+                                       RRCrtc crtc,\n+                                       Time timestamp,\n+                                       int x, int y,\n+                                       RRMode mode,\n+                                       Rotation rotation,\n+                                       RROutput *outputs,\n+                                       int noutputs);\n+\n@@ -1523,0 +1540,2 @@\n+static XRRSetScreenSizeType              awt_XRRSetScreenSize;\n+static XRRSetCrtcConfigType              awt_XRRSetCrtcConfig;\n@@ -1600,0 +1619,2 @@\n+    LOAD_XRANDR_FUNC(XRRSetScreenSize);\n+    LOAD_XRANDR_FUNC(XRRSetCrtcConfig);\n@@ -1700,1 +1721,1 @@\n- * Signature: ()Z\n+ * Signature: (Z)Z\n@@ -1704,1 +1725,1 @@\n-    (JNIEnv *env, jclass x11gd)\n+    (JNIEnv *env, jclass x11gd, jboolean useOldConfigDisplayMode)\n@@ -1720,0 +1741,2 @@\n+    useNewConfigDisplayMode = !useOldConfigDisplayMode;\n+\n@@ -1724,0 +1747,292 @@\n+\/\/ ---------------------------------------------------\n+\/\/ display mode change via XRRSetCrtcConfig\n+\/\/ ---------------------------------------------------\n+\n+static jint refreshRateFromModeInfo(const XRRModeInfo *modeInfo) {\n+    if (!modeInfo->hTotal || !modeInfo->vTotal) {\n+        return 0;\n+    }\n+\n+    double vTotal = modeInfo->vTotal;\n+\n+    if (modeInfo->modeFlags & RR_Interlace) {\n+        vTotal \/= 2;\n+    }\n+\n+    if (modeInfo->modeFlags & RR_DoubleScan) {\n+        vTotal *= 2;\n+    }\n+\n+    return (jint) round((double) modeInfo->dotClock \/ (vTotal * (double) modeInfo->hTotal));\n+}\n+\n+static inline Bool isLandscapeOrientation(XRRCrtcInfo* info) {\n+    if (!info) {\n+        return True;\n+    }\n+    return info->rotation == RR_Rotate_0 || info->rotation == RR_Rotate_180;\n+}\n+\n+static Bool xrrGetInfoForScreen(XRRScreenResources *res,\n+                                int screen,\n+                                XRRCrtcInfo **outCrtcInfo,\n+                                XRROutputInfo **outOutputInfo) {\n+    if (!res) {\n+        return False;\n+    }\n+\n+    int screenX = 0;\n+    int screenY = 0;\n+\n+    if (usingXinerama) {\n+        int nscreens = 0;\n+        XineramaScreenInfo *screens = XineramaQueryScreens(awt_display, &nscreens);\n+\n+        if (!screens) {\n+            return False;\n+        }\n+\n+        if (screen >= nscreens) {\n+            XFree(screens);\n+            return False;\n+        }\n+\n+        XineramaScreenInfo xScreenInfo = screens[screen];\n+\n+        screenX = xScreenInfo.x_org;\n+        screenY= xScreenInfo.y_org;\n+\n+        XFree(screens);\n+    }\n+\n+    for (int i = 0; i < res->noutput; ++i) {\n+        XRROutputInfo *output = awt_XRRGetOutputInfo(awt_display, res, res->outputs[i]);\n+        if (!output) {\n+            continue;\n+        }\n+        if (output->connection == RR_Connected && output->crtc) {\n+            \/\/ output is connected and has an active mode\n+            XRRCrtcInfo *crtcInfo = awt_XRRGetCrtcInfo(awt_display, res, output->crtc);\n+            if (crtcInfo) {\n+                if (crtcInfo->mode != None\n+                    && crtcInfo->x == screenX\n+                    && crtcInfo->y == screenY) {\n+                    if (outCrtcInfo) {\n+                        *outCrtcInfo = crtcInfo;\n+                    } else {\n+                        awt_XRRFreeCrtcInfo(crtcInfo);\n+                    }\n+                    if (outOutputInfo) {\n+                        *outOutputInfo = output;\n+                    } else {\n+                        awt_XRRFreeOutputInfo(output);\n+                    }\n+                    return True;\n+                }\n+                awt_XRRFreeCrtcInfo(crtcInfo);\n+            }\n+        }\n+        awt_XRRFreeOutputInfo(output);\n+    }\n+\n+    return False;\n+}\n+\n+static jobject xrrGetCurrentDisplayMode(JNIEnv* env, int screen) {\n+    XRRScreenResources *res = awt_XRRGetScreenResources(awt_display, DefaultRootWindow(awt_display));\n+    if (!res) {\n+        return NULL;\n+    }\n+\n+    XRRCrtcInfo* currentCrtcInfo = NULL;\n+    if (!xrrGetInfoForScreen(res, screen, &currentCrtcInfo, NULL)) {\n+        goto cleanup;\n+    }\n+\n+    if (!currentCrtcInfo || currentCrtcInfo->mode == None) {\n+        goto cleanup;\n+    }\n+\n+    for (int i = 0; i < res->nmode; ++i) {\n+        if (res->modes[i].id == currentCrtcInfo->mode) {\n+            XRRModeInfo mode = res->modes[i];\n+            DisplayMode dm = {\n+                    mode.width,\n+                    mode.height,\n+                    refreshRateFromModeInfo(&mode)\n+            };\n+\n+            Bool isLandscape =  isLandscapeOrientation(currentCrtcInfo);\n+\n+            jint resultWidth = isLandscape ? (jint)  dm.width : (jint) dm.height;\n+            jint resultHeight = isLandscape ? (jint)  dm.height : (jint) dm.width;\n+\n+            jobject displayMode = X11GD_CreateDisplayMode(env,\n+                                                          resultWidth,\n+                                                          resultHeight,\n+                                                          BIT_DEPTH_MULTI,\n+                                                          dm.refresh);\n+\n+            awt_XRRFreeCrtcInfo(currentCrtcInfo);\n+            awt_XRRFreeScreenResources(res);\n+\n+            return displayMode;\n+        }\n+    }\n+\n+    cleanup:\n+        if (currentCrtcInfo) {\n+            awt_XRRFreeCrtcInfo(currentCrtcInfo);\n+        }\n+        awt_XRRFreeScreenResources(res);\n+    return NULL;\n+}\n+\n+static Bool isUniqueDisplayMode(DisplayMode seen[], int count, unsigned int width, unsigned int height, int refresh) {\n+    for (int i = 0; i < count; ++i) {\n+        if (seen[i].width == width &&\n+            seen[i].height == height &&\n+            seen[i].refresh == refresh) {\n+            return False;\n+        }\n+    }\n+    return True;\n+}\n+\n+static void xrrEnumDisplayModes(JNIEnv *env, jobject arrayList, jint screen) {\n+    XRRScreenResources *res = awt_XRRGetScreenResources(awt_display, DefaultRootWindow(awt_display));\n+    if (!res) {\n+        return;\n+    }\n+\n+    XRRCrtcInfo *crtcInfo = NULL;\n+    XRROutputInfo *outputInfo = NULL;\n+    if (!xrrGetInfoForScreen(res, screen, &crtcInfo, &outputInfo)) {\n+        goto cleanup;\n+    }\n+\n+    DisplayMode seenModes[MAX_DISPLAY_MODES];\n+    int seenCount = 0;\n+\n+    Bool isLandscape = isLandscapeOrientation(crtcInfo);\n+\n+    for (int i = 0; i < outputInfo->nmode; ++i) {\n+        RRMode mode_id = outputInfo->modes[i];\n+\n+        for (int j = 0; j < res->nmode; ++j) {\n+            if (res->modes[j].id == mode_id) {\n+                XRRModeInfo mode = res->modes[j];\n+                jint rr = refreshRateFromModeInfo(&mode);\n+\n+                \/\/ The refresh rate is stored as an integer in Java, so we need to round the double value.\n+                \/\/ Because of this rounding, duplicate modes may appear. We only keep the first one encountered.\n+                if (isUniqueDisplayMode(seenModes, seenCount, mode.width, mode.height, rr)) {\n+                    seenModes[seenCount++] = (DisplayMode) {\n+                            mode.width,\n+                            mode.height,\n+                            rr\n+                    };\n+                    X11GD_AddDisplayMode(env, arrayList,\n+                                         isLandscape ? (jint) mode.width : (jint) mode.height,\n+                                         isLandscape ? (jint) mode.height : (jint) mode.width,\n+                                         BIT_DEPTH_MULTI,\n+                                         rr);\n+                    if ((*env)->ExceptionCheck(env)) {\n+                        goto cleanup;\n+                    }\n+                }\n+                break;\n+            }\n+        }\n+    }\n+\n+    cleanup:\n+        if (outputInfo) {\n+            awt_XRRFreeOutputInfo(outputInfo);\n+        }\n+        if (crtcInfo) {\n+            awt_XRRFreeCrtcInfo(crtcInfo);\n+        }\n+        awt_XRRFreeScreenResources(res);\n+}\n+\n+static void xrrChangeDisplayMode(jint screen, jint width, jint height, jint refreshRate) {\n+    Drawable root = DefaultRootWindow(awt_display);\n+\n+\n+    XRRScreenResources *res = awt_XRRGetScreenResources(awt_display, root);\n+    if (!res) {\n+        return;\n+    }\n+\n+    XRRCrtcInfo *crtcInfo = NULL;\n+    XRROutputInfo *outputInfo = NULL;\n+\n+    if (!xrrGetInfoForScreen(res, screen, &crtcInfo, &outputInfo)) {\n+        goto cleanup;\n+    }\n+\n+    RRMode new_mode = None;\n+\n+    Bool isLandscape = isLandscapeOrientation(crtcInfo);\n+\n+    for (int i = 0; i < res->nmode; ++i) {\n+        XRRModeInfo mode = res->modes[i];\n+        jint rr = refreshRateFromModeInfo(&mode);\n+\n+        Bool matchW = (isLandscape ? mode.width : mode.height) == (unsigned int) width;\n+        Bool matchH = (isLandscape ? mode.height : mode.width) == (unsigned int) height;\n+\n+        if (matchW && matchH && rr == refreshRate) {\n+            for (int j = 0; j < outputInfo->nmode; ++j) {\n+                if (mode.id == outputInfo->modes[j]) {\n+                    \/\/ belongs to our output\n+                    new_mode = mode.id;\n+                    break;\n+                }\n+            }\n+            if (new_mode != None) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    if (new_mode == None) {\n+        goto cleanup;\n+    }\n+\n+    awt_XRRSetCrtcConfig (awt_display, res, outputInfo->crtc, CurrentTime,\n+                          0, 0, None, RR_Rotate_0, NULL, 0);\n+\n+    int resultMmWidth = outputInfo->mm_width\n+                        ? (int) outputInfo->mm_width\n+                        : DisplayWidthMM(awt_display, DefaultScreen(awt_display));\n+\n+    int resultMmHeight = outputInfo->mm_height\n+                         ? (int) outputInfo->mm_height\n+                         : XDisplayHeightMM(awt_display, DefaultScreen(awt_display));\n+\n+    awt_XRRSetScreenSize(awt_display, root,\n+                         width, height,\n+                         resultMmWidth, resultMmHeight);\n+\n+    Status s = awt_XRRSetCrtcConfig(awt_display, res, outputInfo->crtc,\n+                         CurrentTime,\n+                         crtcInfo->x, crtcInfo->y,\n+                         new_mode, crtcInfo->rotation,\n+                         crtcInfo->outputs, crtcInfo->noutput);\n+\n+    cleanup:\n+        if (crtcInfo) {\n+            awt_XRRFreeCrtcInfo(crtcInfo);\n+        }\n+        if (outputInfo) {\n+            awt_XRRFreeOutputInfo(outputInfo);\n+        }\n+        awt_XRRFreeScreenResources(res);\n+}\n+\n+\/\/ ---------------------------------------------------\n+\/\/ display mode change via XRRSetCrtcConfig\n+\/\/ ---------------------------------------------------\n+\n@@ -1736,1 +2051,0 @@\n-    XRRScreenConfiguration *config;\n@@ -1739,0 +2053,9 @@\n+    if (useNewConfigDisplayMode) {\n+        AWT_LOCK();\n+        displayMode = xrrGetCurrentDisplayMode(env, screen);\n+        AWT_FLUSH_UNLOCK();\n+        return displayMode;\n+    }\n+\n+    XRRScreenConfiguration *config;\n+\n@@ -1789,1 +2112,6 @@\n-    AWT_LOCK();\n+    if (useNewConfigDisplayMode) {\n+        AWT_LOCK();\n+        xrrEnumDisplayModes(env, arrayList, screen);\n+        AWT_FLUSH_UNLOCK();\n+        return;\n+    }\n@@ -1839,0 +2167,9 @@\n+    if (useNewConfigDisplayMode) {\n+        AWT_LOCK();\n+        XGrabServer(awt_display);\n+        xrrChangeDisplayMode(screen, width, height, refreshRate);\n+        XUngrabServer(awt_display);\n+        AWT_FLUSH_UNLOCK();\n+        return;\n+    }\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/awt_GraphicsEnv.c","additions":341,"deletions":4,"binary":false,"changes":345,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"java_awt_event_KeyEvent.h\"\n@@ -1200,0 +1201,18 @@\n+static int getNumpadKey(jint jkey) {\n+    switch (jkey) {\n+        case java_awt_event_KeyEvent_VK_NUMPAD0: return XK_KP_Insert;\n+        case java_awt_event_KeyEvent_VK_NUMPAD1: return XK_KP_End;\n+        case java_awt_event_KeyEvent_VK_NUMPAD2: return XK_KP_Down;\n+        case java_awt_event_KeyEvent_VK_NUMPAD3: return XK_KP_Page_Down;\n+        case java_awt_event_KeyEvent_VK_NUMPAD4: return XK_KP_Left;\n+        case java_awt_event_KeyEvent_VK_NUMPAD5: return XK_KP_Begin;\n+        case java_awt_event_KeyEvent_VK_NUMPAD6: return XK_KP_Right;\n+        case java_awt_event_KeyEvent_VK_NUMPAD7: return XK_KP_Home;\n+        case java_awt_event_KeyEvent_VK_NUMPAD8: return XK_KP_Up;\n+        case java_awt_event_KeyEvent_VK_NUMPAD9: return XK_KP_Prior;\n+        case java_awt_event_KeyEvent_VK_DECIMAL:\n+        case java_awt_event_KeyEvent_VK_SEPARATOR: return XK_KP_Delete;\n+        default: return 0;\n+    }\n+}\n+\n@@ -1208,3 +1227,6 @@\n-    AWT_LOCK();\n-    int key = awt_getX11KeySym(jkey);\n-    AWT_UNLOCK();\n+    int key = getNumpadKey(jkey);\n+    if (!key) {\n+        AWT_LOCK();\n+        key = awt_getX11KeySym(jkey);\n+        AWT_UNLOCK();\n+    }\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -256,2 +256,2 @@\n-     *     container at the moment when it is blocked, for example,\n-     *     when running an applet in IE. Then the call to this method\n+     *     container at the moment when it is blocked.\n+     *     Then the call to this method\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WEmbeddedFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -131,2 +131,1 @@\n-    \/\/ MouseHookProc but installed on non-toolkit threads, for\n-    \/\/ example on browser's thread when running in Java Plugin\n+    \/\/ MouseHookProc but installed on non-toolkit threads\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Dialog.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n- * (which could include the browser, in the case of applets)\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_GDIObject.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1789,2 +1789,2 @@\n-    \/* This code is rarely used now. It used to be invoked by Java plugin browser\n-     * printing. Today embedded frames are used only when a toolkit such as SWT\n+    \/* This code is rarely used now.\n+     * Today embedded frames are used only when a toolkit such as SWT\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,7 +40,3 @@\n- * <p id=\"type-safe\">For compatibility reasons, it is possible, though\n- * highly discouraged, to add objects to an {@code AttributeList} that are\n- * not instances of {@code Attribute}.  However, an {@code AttributeList}\n- * can be made <em>type-safe<\/em>, which means that an attempt to add\n- * an object that is not an {@code Attribute} will produce an {@code\n- * IllegalArgumentException}.  An {@code AttributeList} becomes type-safe\n- * when the method {@link #asList()} is called on it.<\/p>\n+ * <p>It is not permitted to add objects to an {@code AttributeList} that are\n+ * not instances of {@code Attribute}.  This will produce an {@code IllegalArgumentException}\n+ * when calling methods in this class, or when using {@code listIterator} and {@code add} or {@code set}.<\/p>\n@@ -67,3 +63,0 @@\n-    private transient volatile boolean typeSafe;\n-    private transient volatile boolean tainted;\n-\n@@ -148,8 +141,0 @@\n-     * <p>If this method has ever been called on a given\n-     * {@code AttributeList} instance, a subsequent attempt to add\n-     * an object to that instance which is not an {@code Attribute}\n-     * will fail with an {@code IllegalArgumentException}. For compatibility\n-     * reasons, an {@code AttributeList} on which this method has never\n-     * been called does allow objects other than {@code Attribute}s to\n-     * be added.<\/p>\n-     *\n@@ -163,3 +148,1 @@\n-        typeSafe = true;\n-        if (tainted)\n-            adding((Collection<?>) this);  \/\/ will throw IllegalArgumentException\n+        adding((Collection<?>) this);\n@@ -260,2 +243,1 @@\n-     * a non-Attribute to the List, and disallow that if asList has ever\n-     * been called on this instance.\n+     * a non-Attribute to the List, and disallow.\n@@ -266,3 +248,1 @@\n-     * @throws IllegalArgumentException if this {@code AttributeList} is\n-     * <a href=\"#type-safe\">type-safe<\/a> and {@code element} is not an\n-     * {@code Attribute}.\n+     * @throws IllegalArgumentException if {@code element} is not an {@code Attribute}.\n@@ -278,3 +258,1 @@\n-     * @throws IllegalArgumentException if this {@code AttributeList} is\n-     * <a href=\"#type-safe\">type-safe<\/a> and {@code element} is not an\n-     * {@code Attribute}.\n+     * @throws IllegalArgumentException if {@code element} is not an {@code Attribute}.\n@@ -290,3 +268,1 @@\n-     * @throws IllegalArgumentException if this {@code AttributeList} is\n-     * <a href=\"#type-safe\">type-safe<\/a> and {@code c} contains an\n-     * element that is not an {@code Attribute}.\n+     * @throws IllegalArgumentException if {@code c} contains an element that is not an {@code Attribute}.\n@@ -302,3 +278,1 @@\n-     * @throws IllegalArgumentException if this {@code AttributeList} is\n-     * <a href=\"#type-safe\">type-safe<\/a> and {@code c} contains an\n-     * element that is not an {@code Attribute}.\n+     * @throws IllegalArgumentException if {@code c} contains an element that is not an {@code Attribute}.\n@@ -314,3 +288,1 @@\n-     * @throws IllegalArgumentException if this {@code AttributeList} is\n-     * <a href=\"#type-safe\">type-safe<\/a> and {@code element} is not an\n-     * {@code Attribute}.\n+     * @throws IllegalArgumentException if {@code element} is not an {@code Attribute}.\n@@ -327,4 +299,1 @@\n-        if (typeSafe)\n-            throw new IllegalArgumentException(\"Not an Attribute: \" + x);\n-        else\n-            tainted = true;\n+        throw new IllegalArgumentException(\"Not an Attribute: \" + x);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/AttributeList.java","additions":12,"deletions":43,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -177,131 +177,0 @@\n-\n-    \/**\n-     * <p>Descriptor constructor taking an XML String.<\/p>\n-     *\n-     * <p>The format of the XML string is not defined, but an\n-     * implementation must ensure that the string returned by\n-     * {@link #toXMLString() toXMLString()} on an existing\n-     * descriptor can be used to instantiate an equivalent\n-     * descriptor using this constructor.<\/p>\n-     *\n-     * <p>In this implementation, all field values will be created\n-     * as Strings.  If the field values are not Strings, the\n-     * programmer will have to reset or convert these fields\n-     * correctly.<\/p>\n-     *\n-     * @param inStr An XML-formatted string used to populate this\n-     * Descriptor.  The format is not defined, but any\n-     * implementation must ensure that the string returned by\n-     * method {@link #toXMLString toXMLString} on an existing\n-     * descriptor can be used to instantiate an equivalent\n-     * descriptor when instantiated using this constructor.\n-     *\n-     * @exception RuntimeOperationsException If the String inStr\n-     * passed in parameter is null\n-     * @exception XMLParseException XML parsing problem while parsing\n-     * the input String\n-     * @exception MBeanException Wraps a distributed communication Exception.\n-     * @deprecated This constructor exists for historical reasons.  If\n-     * reading from XML is required, it should be implemented externally.\n-     *\/\n-    \/* At some stage we should rewrite this code to be cleverer.  Using\n-       a StringTokenizer as we do means, first, that we accept a lot of\n-       bogus strings without noticing they are bogus, and second, that we\n-       split the string being parsed at characters like > even if they\n-       occur in the middle of a field value. *\/\n-    @Deprecated(since=\"25\", forRemoval=true)\n-    @SuppressWarnings(\"removal\")\n-    public DescriptorSupport(String inStr)\n-            throws MBeanException, RuntimeOperationsException,\n-                   XMLParseException {\n-        \/* parse an XML-formatted string and populate internal\n-         * structure with it *\/\n-        if (MODELMBEAN_LOGGER.isLoggable(Level.TRACE)) {\n-            MODELMBEAN_LOGGER.log(Level.TRACE,\n-                    \"Descriptor(String = '\" + inStr + \"') Constructor\");\n-        }\n-        if (inStr == null) {\n-            if (MODELMBEAN_LOGGER.isLoggable(Level.TRACE)) {\n-                MODELMBEAN_LOGGER.log(Level.TRACE,\n-                        \"Descriptor(String = null) Illegal arguments\");\n-            }\n-            final String msg = \"String in parameter is null\";\n-            final RuntimeException iae = new IllegalArgumentException(msg);\n-            throw new RuntimeOperationsException(iae, msg);\n-        }\n-\n-        final String lowerInStr = inStr.toLowerCase(Locale.ENGLISH);\n-        if (!lowerInStr.startsWith(\"<descriptor>\")\n-            || !lowerInStr.endsWith(\"<\/descriptor>\")) {\n-            throw new XMLParseException(\"No <descriptor>, <\/descriptor> pair\");\n-            \/\/ XMLParseException is deprecated for removal.\n-        }\n-\n-        \/\/ parse xmlstring into structures\n-        init(null);\n-        \/\/ create dummy descriptor: should have same size\n-        \/\/ as number of fields in xmlstring\n-        \/\/ loop through structures and put them in descriptor\n-\n-        StringTokenizer st = new StringTokenizer(inStr, \"<> \\t\\n\\r\\f\");\n-\n-        boolean inFld = false;\n-        boolean inDesc = false;\n-        String fieldName = null;\n-        String fieldValue = null;\n-\n-\n-        while (st.hasMoreTokens()) {  \/\/ loop through tokens\n-            String tok = st.nextToken();\n-\n-            if (tok.equalsIgnoreCase(\"FIELD\")) {\n-                inFld = true;\n-            } else if (tok.equalsIgnoreCase(\"\/FIELD\")) {\n-                if ((fieldName != null) && (fieldValue != null)) {\n-                    fieldName =\n-                        fieldName.substring(fieldName.indexOf('\"') + 1,\n-                                            fieldName.lastIndexOf('\"'));\n-                    final Object fieldValueObject =\n-                        parseQuotedFieldValue(fieldValue);\n-                    setField(fieldName, fieldValueObject);\n-                }\n-                fieldName = null;\n-                fieldValue = null;\n-                inFld = false;\n-            } else if (tok.equalsIgnoreCase(\"DESCRIPTOR\")) {\n-                inDesc = true;\n-            } else if (tok.equalsIgnoreCase(\"\/DESCRIPTOR\")) {\n-                inDesc = false;\n-                fieldName = null;\n-                fieldValue = null;\n-                inFld = false;\n-            } else if (inFld && inDesc) {\n-                \/\/ want kw=value, eg, name=\"myname\" value=\"myvalue\"\n-                int eq_separator = tok.indexOf('=');\n-                if (eq_separator > 0) {\n-                    String kwPart = tok.substring(0,eq_separator);\n-                    String valPart = tok.substring(eq_separator+1);\n-                    if (kwPart.equalsIgnoreCase(\"NAME\"))\n-                        fieldName = valPart;\n-                    else if (kwPart.equalsIgnoreCase(\"VALUE\"))\n-                        fieldValue = valPart;\n-                    else {  \/\/ xml parse exception\n-                        final String msg =\n-                            \"Expected `name' or `value', got `\" + tok + \"'\";\n-                        throw new XMLParseException(msg);\n-                        \/\/ XMLParseException is deprecated for removal.\n-                    }\n-                } else { \/\/ xml parse exception\n-                    final String msg =\n-                        \"Expected `keyword=value', got `\" + tok + \"'\";\n-                    throw new XMLParseException(msg);\n-                    \/\/ XMLParseException is deprecated for removal.\n-                }\n-            }\n-        }  \/\/ while tokens\n-        if (MODELMBEAN_LOGGER.isLoggable(Level.TRACE)) {\n-            MODELMBEAN_LOGGER.log(Level.TRACE,\n-                    \"Descriptor(XMLString) Exit\");\n-        }\n-    }\n-\n@@ -902,225 +771,0 @@\n-\n-\n-    \/**\n-     * <p>Returns an XML String representing the descriptor.<\/p>\n-     *\n-     * <p>The format is not defined, but an implementation must\n-     * ensure that the string returned by this method can be\n-     * used to build an equivalent descriptor when instantiated\n-     * using the constructor {@link #DescriptorSupport(String)\n-     * DescriptorSupport(String inStr)}.<\/p>\n-     *\n-     * <p>Fields which are not String objects will have toString()\n-     * called on them to create the value. The value will be\n-     * enclosed in parentheses.  It is not guaranteed that you can\n-     * reconstruct these objects unless they have been\n-     * specifically set up to support toString() in a meaningful\n-     * format and have a matching constructor that accepts a\n-     * String in the same format.<\/p>\n-     *\n-     * <p>If the descriptor is empty the following String is\n-     * returned: &lt;Descriptor&gt;&lt;\/Descriptor&gt;<\/p>\n-     *\n-     * @return the XML string.\n-     *\n-     * @exception RuntimeOperationsException for illegal value for\n-     * field Names or field Values.  If the XML formatted string\n-     * construction fails for any reason, this exception will be\n-     * thrown.\n-     * @deprecated This method exists for historical reasons.  If\n-     * writing to XML is required, it should be implemented externally.\n-     *\/\n-    @Deprecated(since=\"25\", forRemoval=true)\n-    public synchronized String toXMLString() {\n-        final StringBuilder buf = new StringBuilder(\"<Descriptor>\");\n-        Set<Map.Entry<String, Object>> returnedSet = descriptorMap.entrySet();\n-        for (Map.Entry<String, Object> currElement : returnedSet) {\n-            final String name = currElement.getKey();\n-            Object value = currElement.getValue();\n-            String valueString = null;\n-            \/* Set valueString to non-null if and only if this is a string that\n-               cannot be confused with the encoding of an object.  If it\n-               could be so confused (surrounded by parentheses) then we\n-               call makeFieldValue as for any non-String object and end\n-               up with an encoding like \"(java.lang.String\/(thing))\".  *\/\n-            if (value instanceof String) {\n-                final String svalue = (String) value;\n-                if (!svalue.startsWith(\"(\") || !svalue.endsWith(\")\"))\n-                    valueString = quote(svalue);\n-            }\n-            if (valueString == null)\n-                valueString = makeFieldValue(value);\n-            buf.append(\"<field name=\\\"\").append(name).append(\"\\\" value=\\\"\")\n-                .append(valueString).append(\"\\\"><\/field>\");\n-        }\n-        buf.append(\"<\/Descriptor>\");\n-        return buf.toString();\n-    }\n-\n-    private static final String[] entities = {\n-        \" &#32;\",\n-        \"\\\"&quot;\",\n-        \"<&lt;\",\n-        \">&gt;\",\n-        \"&&amp;\",\n-        \"\\r&#13;\",\n-        \"\\t&#9;\",\n-        \"\\n&#10;\",\n-        \"\\f&#12;\",\n-    };\n-    private static final Map<String,Character> entityToCharMap =\n-        new HashMap<>();\n-    private static final String[] charToEntityMap;\n-\n-    static {\n-        char maxChar = 0;\n-        for (int i = 0; i < entities.length; i++) {\n-            final char c = entities[i].charAt(0);\n-            if (c > maxChar)\n-                maxChar = c;\n-        }\n-        charToEntityMap = new String[maxChar + 1];\n-        for (int i = 0; i < entities.length; i++) {\n-            final char c = entities[i].charAt(0);\n-            final String entity = entities[i].substring(1);\n-            charToEntityMap[c] = entity;\n-            entityToCharMap.put(entity, c);\n-        }\n-    }\n-\n-    private static boolean isMagic(char c) {\n-        return (c < charToEntityMap.length && charToEntityMap[c] != null);\n-    }\n-\n-    \/*\n-     * Quote the string so that it will be acceptable to the (String)\n-     * constructor.  Since the parsing code in that constructor is fairly\n-     * stupid, we're obliged to quote apparently innocuous characters like\n-     * space, <, and >.  In a future version, we should rewrite the parser\n-     * and only quote \" plus either \\ or & (depending on the quote syntax).\n-     *\/\n-    private static String quote(String s) {\n-        boolean found = false;\n-        for (int i = 0; i < s.length(); i++) {\n-            if (isMagic(s.charAt(i))) {\n-                found = true;\n-                break;\n-            }\n-        }\n-        if (!found)\n-            return s;\n-        final StringBuilder buf = new StringBuilder();\n-        for (int i = 0; i < s.length(); i++) {\n-            char c = s.charAt(i);\n-            if (isMagic(c))\n-                buf.append(charToEntityMap[c]);\n-            else\n-                buf.append(c);\n-        }\n-        return buf.toString();\n-    }\n-\n-    @SuppressWarnings(\"removal\")\n-    private static String unquote(String s) throws XMLParseException {\n-        if (!s.startsWith(\"\\\"\") || !s.endsWith(\"\\\"\")) {\n-            throw new XMLParseException(\"Value must be quoted: <\" + s + \">\");\n-            \/\/ XMLParseException is deprecated for removal.\n-        }\n-        final StringBuilder buf = new StringBuilder();\n-        final int len = s.length() - 1;\n-        for (int i = 1; i < len; i++) {\n-            final char c = s.charAt(i);\n-            final int semi;\n-            final Character quoted;\n-            if (c == '&'\n-                && (semi = s.indexOf(';', i + 1)) >= 0\n-                && ((quoted = entityToCharMap.get(s.substring(i, semi+1)))\n-                    != null)) {\n-                buf.append(quoted);\n-                i = semi;\n-            } else\n-                buf.append(c);\n-        }\n-        return buf.toString();\n-    }\n-\n-    \/**\n-     * Make the string that will go inside \"...\" for a value that is not\n-     * a plain String.\n-     * @throws RuntimeOperationsException if the value cannot be encoded.\n-     *\/\n-    private static String makeFieldValue(Object value) {\n-        if (value == null)\n-            return \"(null)\";\n-\n-        Class<?> valueClass = value.getClass();\n-        try {\n-            valueClass.getConstructor(String.class);\n-        } catch (NoSuchMethodException e) {\n-            final String msg =\n-                \"Class \" + valueClass + \" does not have a public \" +\n-                \"constructor with a single string arg\";\n-            final RuntimeException iae = new IllegalArgumentException(msg);\n-            throw new RuntimeOperationsException(iae,\n-                                                 \"Cannot make XML descriptor\");\n-        } catch (SecurityException e) {\n-            \/\/ OK: we'll pretend the constructor is there\n-            \/\/ too bad if it's not: we'll find out when we try to\n-            \/\/ reconstruct the DescriptorSupport\n-        }\n-\n-        final String quotedValueString = quote(value.toString());\n-\n-        return \"(\" + valueClass.getName() + \"\/\" + quotedValueString + \")\";\n-    }\n-\n-    \/*\n-     * Parse a field value from the XML produced by toXMLString().\n-     * Given a descriptor XML containing <field name=\"nnn\" value=\"vvv\">,\n-     * the argument to this method will be \"vvv\" (a string including the\n-     * containing quote characters).  If vvv begins and ends with parentheses,\n-     * then it may contain:\n-     * - the characters \"null\", in which case the result is null;\n-     * - a value of the form \"some.class.name\/xxx\", in which case the\n-     * result is equivalent to `new some.class.name(\"xxx\")';\n-     * - some other string, in which case the result is that string,\n-     * without the parentheses.\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    private static Object parseQuotedFieldValue(String s)\n-            throws XMLParseException {\n-        s = unquote(s);\n-        if (s.equalsIgnoreCase(\"(null)\"))\n-            return null;\n-        if (!s.startsWith(\"(\") || !s.endsWith(\")\"))\n-            return s;\n-        final int slash = s.indexOf('\/');\n-        if (slash < 0) {\n-            \/\/ compatibility: old code didn't include class name\n-            return s.substring(1, s.length() - 1);\n-        }\n-        final String className = s.substring(1, slash);\n-\n-        final Constructor<?> constr;\n-        try {\n-            final ClassLoader contextClassLoader =\n-                Thread.currentThread().getContextClassLoader();\n-            final Class<?> c =\n-                Class.forName(className, false, contextClassLoader);\n-            constr = c.getConstructor(new Class<?>[] {String.class});\n-        } catch (Exception e) {\n-            throw new XMLParseException(e, \"Cannot parse value: <\" + s + \">\");\n-            \/\/ XMLParseException is deprecated for removal.\n-        }\n-        final String arg = s.substring(slash + 1, s.length() - 1);\n-        try {\n-            return constr.newInstance(new Object[] {arg});\n-        } catch (Exception e) {\n-            final String msg =\n-                \"Cannot construct instance of \" + className +\n-                \" with arg: <\" + s + \">\";\n-            throw new XMLParseException(e, msg);\n-            \/\/ XMLParseException is deprecated for removal.\n-        }\n-    }\n-\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/DescriptorSupport.java","additions":0,"deletions":356,"binary":false,"changes":356,"status":"modified"},{"patch":"@@ -1,103 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\/*\n- * @author    IBM Corp.\n- *\n- * Copyright IBM Corp. 1999-2000.  All rights reserved.\n- *\/\n-\n-\n-package javax.management.modelmbean;\n-\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectStreamField;\n-\n-\/**\n-* This exception is thrown when an XML formatted string is being parsed into ModelMBean objects\n-* or when XML formatted strings are being created from ModelMBean objects.\n-*\n-* It is also used to wrapper exceptions from XML parsers that may be used.\n-*\n-* <p>The <b>serialVersionUID<\/b> of this class is <code>3176664577895105181L<\/code>.\n-*\n-* @deprecated This class exists only to support XML parsing implemented privately in this module,\n-* in DescriptorSupport.  That feature is deprecated for removal.\n-*\n-* @since 1.5\n-*\/\n-@Deprecated(since=\"25\", forRemoval=true)\n-public class XMLParseException\n-extends Exception\n-{\n-    private static final long serialVersionUID = 3176664577895105181L;\n-\n-    \/**\n-     * Default constructor .\n-     *\/\n-    public  XMLParseException ()\n-    {\n-      super(\"XML Parse Exception.\");\n-    }\n-\n-    \/**\n-     * Constructor taking a string.\n-     *\n-     * @param s the detail message.\n-     *\/\n-    public  XMLParseException (String s)\n-    {\n-      super(\"XML Parse Exception: \" + s);\n-    }\n-    \/**\n-     * Constructor taking a string and an exception.\n-     *\n-     * @param e the nested exception.\n-     * @param s the detail message.\n-     *\/\n-    public  XMLParseException (Exception e, String s)\n-    {\n-      super(\"XML Parse Exception: \" + s + \":\" + e.toString());\n-    }\n-\n-    \/**\n-     * Deserializes an {@link XMLParseException} from an {@link ObjectInputStream}.\n-     *\/\n-    private void readObject(ObjectInputStream in)\n-            throws IOException, ClassNotFoundException {\n-      \/\/ New serial form ignores extra field \"msgStr\"\n-      in.defaultReadObject();\n-    }\n-\n-\n-    \/**\n-     * Serializes an {@link XMLParseException} to an {@link ObjectOutputStream}.\n-     *\/\n-    private void writeObject(ObjectOutputStream out)\n-            throws IOException {\n-      out.defaultWriteObject();\n-    }\n-}\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/XMLParseException.java","additions":0,"deletions":103,"binary":false,"changes":103,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,4 @@\n+\n+ * <p>It is not permitted to add objects to a {@code RoleList} that are\n+ * not instances of {@code Role}.  This will produce an {@code IllegalArgumentException}\n+ * when calling methods in this class, or when using {@code listIterator} and {@code add} or {@code set}.<\/p>\n@@ -58,3 +62,0 @@\n-    private transient boolean typeSafe;\n-    private transient boolean tainted;\n-\n@@ -124,8 +125,0 @@\n-     * <p>If this method has ever been called on a given\n-     * {@code RoleList} instance, a subsequent attempt to add\n-     * an object to that instance which is not a {@code Role}\n-     * will fail with an {@code IllegalArgumentException}. For compatibility\n-     * reasons, a {@code RoleList} on which this method has never\n-     * been called does allow objects other than {@code Role}s to\n-     * be added.<\/p>\n-     *\n@@ -138,5 +131,1 @@\n-        if (!typeSafe) {\n-            if (tainted)\n-                checkTypeSafe(this);\n-            typeSafe = true;\n-        }\n+        checkTypeSafe(this);\n@@ -161,2 +150,1 @@\n-            String excMsg = \"Invalid parameter\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -186,2 +174,1 @@\n-            String excMsg = \"Invalid parameter\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -189,1 +176,0 @@\n-\n@@ -211,3 +197,1 @@\n-            \/\/ Revisit [cebro] Localize message\n-            String excMsg = \"Invalid parameter.\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -215,1 +199,0 @@\n-\n@@ -239,1 +222,0 @@\n-\n@@ -266,3 +248,1 @@\n-            \/\/ Revisit [cebro] Localize message\n-            String excMsg = \"Invalid parameter.\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -280,0 +260,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code o} is not a {@code Role}.\n+     *\/\n@@ -282,4 +266,1 @@\n-        if (!tainted)\n-            tainted = isTainted(o);\n-        if (typeSafe)\n-            checkTypeSafe(o);\n+        checkTypeSafe(o);\n@@ -289,0 +270,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code element} is not a {@code Role}.\n+     *\/\n@@ -291,4 +276,1 @@\n-        if (!tainted)\n-            tainted = isTainted(element);\n-        if (typeSafe)\n-            checkTypeSafe(element);\n+        checkTypeSafe(element);\n@@ -298,0 +280,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code c} contains a member that is not a {@code Role}.\n+     *\/\n@@ -300,4 +286,1 @@\n-        if (!tainted)\n-            tainted = isTainted(c);\n-        if (typeSafe)\n-            checkTypeSafe(c);\n+        checkTypeSafe(c);\n@@ -307,0 +290,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code c} contains a member that is not a {@code Role}.\n+     *\/\n@@ -309,4 +296,1 @@\n-        if (!tainted)\n-            tainted = isTainted(c);\n-        if (typeSafe)\n-            checkTypeSafe(c);\n+        checkTypeSafe(c);\n@@ -316,0 +300,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code element} is not a {@code Role}.\n+     *\/\n@@ -318,4 +306,1 @@\n-        if (!tainted)\n-            tainted = isTainted(element);\n-        if (typeSafe)\n-            checkTypeSafe(element);\n+        checkTypeSafe(element);\n@@ -348,24 +333,0 @@\n-\n-    \/**\n-     * Returns true if o is a non-Role object.\n-     *\/\n-    private static boolean isTainted(Object o) {\n-        try {\n-            checkTypeSafe(o);\n-        } catch (IllegalArgumentException e) {\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    \/**\n-     * Returns true if c contains any non-Role objects.\n-     *\/\n-    private static boolean isTainted(Collection<?> c) {\n-        try {\n-            checkTypeSafe(c);\n-        } catch (IllegalArgumentException e) {\n-            return true;\n-        }\n-        return false;\n-    }\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RoleList.java","additions":35,"deletions":74,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,4 @@\n+ * <p>It is not permitted to add objects to a {@code RoleUnresolvedList} that are\n+ * not instances of {@code RoleUnresolved}.  This will produce an {@code IllegalArgumentException}\n+ * when calling methods in this class, or when using {@code listIterator} and {@code add} or {@code set}.<\/p>\n+ *\n@@ -57,3 +61,0 @@\n-    private transient boolean typeSafe;\n-    private transient boolean tainted;\n-\n@@ -124,8 +125,0 @@\n-     * <p>If this method has ever been called on a given\n-     * {@code RoleUnresolvedList} instance, a subsequent attempt to add\n-     * an object to that instance which is not a {@code RoleUnresolved}\n-     * will fail with an {@code IllegalArgumentException}. For compatibility\n-     * reasons, a {@code RoleUnresolvedList} on which this method has never\n-     * been called does allow objects other than {@code RoleUnresolved}s to\n-     * be added.<\/p>\n-     *\n@@ -138,5 +131,1 @@\n-        if (!typeSafe) {\n-            if (tainted)\n-                checkTypeSafe(this);\n-            typeSafe = true;\n-        }\n+        checkTypeSafe(this);\n@@ -161,2 +150,1 @@\n-            String excMsg = \"Invalid parameter\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -187,2 +175,1 @@\n-            String excMsg = \"Invalid parameter\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -190,1 +177,0 @@\n-\n@@ -213,2 +199,1 @@\n-            String excMsg = \"Invalid parameter\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -216,1 +201,0 @@\n-\n@@ -239,1 +223,0 @@\n-\n@@ -264,2 +247,1 @@\n-            String excMsg = \"Invalid parameter\";\n-            throw new IllegalArgumentException(excMsg);\n+            throw new IllegalArgumentException(\"Invalid parameter\");\n@@ -267,1 +249,0 @@\n-\n@@ -277,0 +258,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code o} is not a {@code RoleUnresolved}.\n+     *\/\n@@ -279,4 +264,1 @@\n-        if (!tainted)\n-            tainted = isTainted(o);\n-        if (typeSafe)\n-            checkTypeSafe(o);\n+        checkTypeSafe(o);\n@@ -286,0 +268,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code element} is not a {@code RoleUnresolved}.\n+     *\/\n@@ -288,4 +274,1 @@\n-        if (!tainted)\n-            tainted = isTainted(element);\n-        if (typeSafe)\n-            checkTypeSafe(element);\n+        checkTypeSafe(element);\n@@ -295,0 +278,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code c} contains a member that is not a {@code RoleUnresolved}.\n+     *\/\n@@ -297,4 +284,1 @@\n-        if (!tainted)\n-            tainted = isTainted(c);\n-        if (typeSafe)\n-            checkTypeSafe(c);\n+        checkTypeSafe(c);\n@@ -304,0 +288,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code c} contains a member that is not a {@code RoleUnresolved}.\n+     *\/\n@@ -306,4 +294,1 @@\n-        if (!tainted)\n-            tainted = isTainted(c);\n-        if (typeSafe)\n-            checkTypeSafe(c);\n+        checkTypeSafe(c);\n@@ -313,0 +298,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @throws IllegalArgumentException if {@code element} is not a {@code RoleUnresolved}.\n+     *\/\n@@ -315,4 +304,1 @@\n-        if (!tainted)\n-            tainted = isTainted(element);\n-        if (typeSafe)\n-            checkTypeSafe(element);\n+        checkTypeSafe(element);\n@@ -345,24 +331,0 @@\n-\n-    \/**\n-     * Returns true if o is a non-RoleUnresolved object.\n-     *\/\n-    private static boolean isTainted(Object o) {\n-        try {\n-            checkTypeSafe(o);\n-        } catch (IllegalArgumentException e) {\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    \/**\n-     * Returns true if c contains any non-RoleUnresolved objects.\n-     *\/\n-    private static boolean isTainted(Collection<?> c) {\n-        try {\n-            checkTypeSafe(c);\n-        } catch (IllegalArgumentException e) {\n-            return true;\n-        }\n-        return false;\n-    }\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RoleUnresolvedList.java","additions":35,"deletions":73,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import java.util.function.BiPredicate;\n@@ -48,1 +49,0 @@\n-import static java.net.Authenticator.RequestorType.PROXY;\n@@ -52,0 +52,1 @@\n+import static jdk.internal.net.http.common.Utils.copyProxy;\n@@ -130,9 +131,1 @@\n-        if (isWebSocket) {\n-            \/\/ WebSocket determines and sets the proxy itself\n-            this.proxy = ((HttpRequestImpl) request).proxy;\n-        } else {\n-            if (ps != null)\n-                this.proxy = retrieveProxy(ps, uri);\n-            else\n-                this.proxy = null;\n-        }\n+        this.proxy = retrieveProxy(request, ps, uri);\n@@ -159,1 +152,5 @@\n-        return new HttpRequestImpl(uri, method, other, mayHaveBody);\n+        if (uri.getScheme().equalsIgnoreCase(other.uri.getScheme()) &&\n+                uri.getRawAuthority().equals(other.uri.getRawAuthority())) {\n+            return new HttpRequestImpl(uri, method, other, mayHaveBody, Optional.empty());\n+        }\n+        return new HttpRequestImpl(uri, method, other, mayHaveBody, Optional.of(Utils.ALLOWED_REDIRECT_HEADERS));\n@@ -179,0 +176,8 @@\n+        this(uri, method, other, mayHaveBody, Optional.empty());\n+    }\n+\n+    private HttpRequestImpl(URI uri,\n+                            String method,\n+                            HttpRequestImpl other,\n+                            boolean mayHaveBody,\n+                            Optional<BiPredicate<String, String>> redirectHeadersFilter) {\n@@ -180,2 +185,4 @@\n-        this.method = method == null? \"GET\" : method;\n-        this.userHeaders = other.userHeaders;\n+        this.method = method == null ? \"GET\" : method;\n+        HttpHeaders userHeaders = redirectHeadersFilter.isPresent() ?\n+                HttpHeaders.of(other.userHeaders.map(), redirectHeadersFilter.get()) : other.userHeaders;\n+        this.userHeaders = userHeaders;\n@@ -295,8 +302,6 @@\n-    \/** Retrieves the proxy, from the given ProxySelector, if there is one. *\/\n-    private static Proxy retrieveProxy(ProxySelector ps, URI uri) {\n-        Proxy proxy = null;\n-        List<Proxy> pl = ps.select(uri);\n-        if (!pl.isEmpty()) {\n-            Proxy p = pl.get(0);\n-            if (p.type() == Proxy.Type.HTTP)\n-                proxy = p;\n+    \/** Retrieves a copy of the proxy either from the given {@link HttpRequest} or {@link ProxySelector}, if there is one. *\/\n+    private static Proxy retrieveProxy(HttpRequest request, ProxySelector ps, URI uri) {\n+\n+        \/\/ WebSocket determines and sets the proxy itself\n+        if (request instanceof HttpRequestImpl requestImpl && requestImpl.isWebSocket) {\n+            return requestImpl.proxy;\n@@ -304,1 +309,14 @@\n-        return proxy;\n+\n+        \/\/ Try to find a matching one from the `ProxySelector`\n+        if (ps != null) {\n+            List<Proxy> pl = ps.select(uri);\n+            if (!pl.isEmpty()) {\n+                Proxy p = pl.getFirst();\n+                if (p.type() == Proxy.Type.HTTP) {\n+                    return copyProxy(p);\n+                }\n+            }\n+        }\n+\n+        return null;\n+\n@@ -320,1 +338,1 @@\n-        this.proxy = proxy;\n+        this.proxy = copyProxy(proxy);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpRequestImpl.java","additions":42,"deletions":24,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+import java.net.Proxy;\n+import java.net.URI;\n@@ -188,0 +190,12 @@\n+    private static final Set<String> DISALLOWED_REDIRECT_HEADERS_SET = getDisallowedRedirectHeaders();\n+\n+    private static Set<String> getDisallowedRedirectHeaders() {\n+        Set<String> headers = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+        headers.addAll(Set.of(\"Authorization\", \"Cookie\", \"Origin\", \"Referer\", \"Host\"));\n+\n+        return Collections.unmodifiableSet(headers);\n+    }\n+\n+    public static final BiPredicate<String, String>\n+            ALLOWED_REDIRECT_HEADERS = (header, _) -> !DISALLOWED_REDIRECT_HEADERS_SET.contains(header);\n+\n@@ -309,0 +323,11 @@\n+    \/**\n+     * Creates a new {@link Proxy} instance for the given proxy iff it is\n+     * neither null, {@link Proxy#NO_PROXY Proxy.NO_PROXY}, nor already a\n+     * {@code Proxy} instance.\n+     *\/\n+    public static Proxy copyProxy(Proxy proxy) {\n+        return proxy == null || proxy.getClass() == Proxy.class\n+                ? proxy\n+                : new Proxy(proxy.type(), proxy.address());\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+import static jdk.internal.net.http.common.Utils.copyProxy;\n@@ -372,1 +373,1 @@\n-        return proxy;\n+        return copyProxy(proxy);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/OpeningHandshake.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-import com.sun.tools.javac.code.Source.Feature;\n@@ -52,1 +51,0 @@\n-import com.sun.tools.javac.comp.LambdaToMethod;\n@@ -2239,2 +2237,5 @@\n-     * Return the base type of t or any of its outer types that starts\n-     * with the given symbol.  If none exists, return null.\n+     *  This method returns the first type in a sequence (starting at `t`) that is\n+     *  a subclass of `sym`. The next type in the sequence is obtained by calling\n+     *  `getEnclosingType()` on the previous type in the sequence. Note, this is\n+     *  typically used to compute the implicit qualifier in a method\/field access\n+     *  expression. Example:\n@@ -2242,2 +2243,13 @@\n-     * @param t a type\n-     * @param sym a symbol\n+     *  static class Sup<F> { public F f; }\n+     *   class Outer {\n+     *    static class Sub extends Sup<String> {\n+     *        class I {\n+     *          void test() {\n+     *              String f2 = f; \/\/ Sup<String>::f\n+     *          }\n+     *        }\n+     *    }\n+     *  }\n+     *\n+     *  @param t a type\n+     *  @param sym a symbol\n@@ -2246,16 +2258,5 @@\n-        switch (t.getTag()) {\n-        case CLASS:\n-            do {\n-                Type s = asSuper(t, sym);\n-                if (s != null) return s;\n-                t = t.getEnclosingType();\n-            } while (t.hasTag(CLASS));\n-            return null;\n-        case ARRAY:\n-            return isSubtype(t, sym.type) ? sym.type : null;\n-        case TYPEVAR:\n-            return asSuper(t, sym);\n-        case ERROR:\n-            return t;\n-        default:\n-            return null;\n+        Type t1 = t;\n+        while (!t1.hasTag(NONE)) {\n+            Type s = asSuper(t1, sym);\n+            if (s != null) return s;\n+            t1 = t1.getEnclosingType();\n@@ -2263,0 +2264,1 @@\n+        return null;\n@@ -2266,2 +2268,13 @@\n-     * Return the base type of t or any of its enclosing types that\n-     * starts with the given symbol.  If none exists, return null.\n+     * This method returns the first type in a sequence (starting at `t`) that is\n+     * a subclass of `sym`. The next type in the sequence is obtained by obtaining\n+     * innermost lexically enclosing class type of the previous type in the sequence.\n+     * Note, this is typically used to compute the implicit qualifier in\n+     * a type expression. Example:\n+     *\n+     * class A<T> { class B { } }\n+     *\n+     * class C extends A<String> {\n+     *   static class D {\n+     *      B b; \/\/ A<String>.B\n+     *   }\n+     * }\n@@ -2273,19 +2286,7 @@\n-        switch (t.getTag()) {\n-        case CLASS:\n-            do {\n-                Type s = asSuper(t, sym);\n-                if (s != null) return s;\n-                Type outer = t.getEnclosingType();\n-                t = (outer.hasTag(CLASS)) ? outer :\n-                    (t.tsym.owner.enclClass() != null) ? t.tsym.owner.enclClass().type :\n-                    Type.noType;\n-            } while (t.hasTag(CLASS));\n-            return null;\n-        case ARRAY:\n-            return isSubtype(t, sym.type) ? sym.type : null;\n-        case TYPEVAR:\n-            return asSuper(t, sym);\n-        case ERROR:\n-            return t;\n-        default:\n-            return null;\n+        Type t1 = t;\n+        while (!t1.hasTag(NONE)) {\n+            Type s = asSuper(t1, sym);\n+            if (s != null) return s;\n+            t1 = (t1.tsym.owner.enclClass() != null)\n+                    ? t1.tsym.owner.enclClass().type\n+                    : noType;\n@@ -2293,0 +2294,1 @@\n+        return null;\n@@ -4517,1 +4519,1 @@\n-        List<Type> commonSupers = superClosure(to, erasure(from));\n+        List<Type> commonSupers = supertypeClosure(to, erasure(from));\n@@ -4575,1 +4577,1 @@\n-    private List<Type> superClosure(Type t, Type s) {\n+    private List<Type> supertypeClosure(Type t, Type s) {\n@@ -4581,1 +4583,1 @@\n-                cl = union(cl, superClosure(l.head, s));\n+                cl = union(cl, supertypeClosure(l.head, s));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":48,"deletions":46,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -4676,5 +4676,2 @@\n-                    else if (ownOuter.hasTag(CLASS) && site != ownOuter) {\n-                        Type normOuter = site;\n-                        if (normOuter.hasTag(CLASS)) {\n-                            normOuter = types.asEnclosingSuper(site, ownOuter.tsym);\n-                        }\n+                    else if ((ownOuter.hasTag(CLASS) || ownOuter.hasTag(TYPEVAR)) && site != ownOuter) {\n+                        Type normOuter = types.asEnclosingSuper(site, ownOuter.tsym);\n@@ -5066,2 +5063,2 @@\n-                        if (site.hasTag(CLASS))\n-                            site = types.asOuterSuper(site, clazzOuter.tsym);\n+                        if (site.hasTag(CLASS) || site.hasTag(TYPEVAR))\n+                            site = types.asEnclosingSuper(site, clazzOuter.tsym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -3762,1 +3762,1 @@\n-                log.mandatoryWarning(pos, Warnings.SunProprietary(s));\n+                log.warning(pos, Warnings.SunProprietary(s));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1145,3 +1145,1 @@\n-        tree.bounds = translate(tree.bounds, null);\n-        tree.type = erasure(tree.type);\n-        result = tree;\n+        result = translate(tree.bounds.head, null);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1972,0 +1972,1 @@\n+# flags: strict\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -461,1 +461,3 @@\n-        SOURCE_LEVEL;\n+        SOURCE_LEVEL,\n+        \/** Flag for warnings that cannot be disabled *\/\n+        STRICT;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/JCDiagnostic.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+import com.sun.tools.javac.util.JCDiagnostic.DiagnosticFlag;\n@@ -682,10 +683,0 @@\n-    \/** Report a warning that cannot be suppressed.\n-     *  @param pos    The source position at which to report the warning.\n-     *  @param key    The key for the localized warning message.\n-     *  @param args   Fields of the warning message.\n-     *\/\n-    public void strictWarning(DiagnosticPosition pos, String key, Object ... args) {\n-        writeDiagnostic(diags.warning(null, source, pos, key, args));\n-        nwarnings++;\n-    }\n-\n@@ -800,1 +791,8 @@\n-                \/\/ Emit warning unless not mandatory and warnings are disabled\n+                \/\/ Strict warnings are always emitted\n+                if (diagnostic.isFlagSet(DiagnosticFlag.STRICT)) {\n+                    writeDiagnostic(diagnostic);\n+                    nwarnings++;\n+                    return;\n+                }\n+\n+                \/\/ Emit other warning unless not mandatory and warnings are disabled\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Log.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -487,1 +487,1 @@\n-recordcomponent name pem descriptor Ljava\/lang\/String;\n+recordcomponent name content descriptor Ljava\/lang\/String;\n@@ -489,1 +489,0 @@\n-innerclass innerClass java\/util\/Base64$Decoder outerClass java\/util\/Base64 innerClassName Decoder flags 9\n@@ -493,1 +492,0 @@\n-method name getEncoded descriptor ()[B flags 1\n@@ -498,1 +496,0 @@\n-method name pem descriptor ()Ljava\/lang\/String; flags 1\n@@ -500,0 +497,1 @@\n+method name content descriptor ()Ljava\/lang\/String; flags 1\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.base-P.sym.txt","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -580,1 +580,1 @@\n-    public static final Binary SUADD = binary(\"SUADD\", \"+\", VectorSupport.VECTOR_OP_SUADD, VO_NOFP);\n+    public static final Associative SUADD = assoc(\"SUADD\", \"+\", VectorSupport.VECTOR_OP_SUADD, VO_NOFP+VO_ASSOC);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorOperators.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -276,0 +276,2 @@\n+     * Use {@link #setCPUPeriod(long)} if you want a fixed sampling period instead.\n+     *\n@@ -279,1 +281,0 @@\n-     * @param autoAdapt true if the rate should be adapted automatically\n@@ -281,1 +282,12 @@\n-    public static native void setCPUThrottle(double rate, boolean autoAdapt);\n+    public static native void setCPURate(double rate);\n+\n+    \/**\n+     * Set the fixed CPU time sampler period.\n+     *\n+     * Use {@link #setCPURate(double)} if you want a fixed rate with an auto-adjusted period instead.\n+     *\n+     * Setting period to 0 turns off the CPU time sampler.\n+     *\n+     * @param periodNanos the new fixed period in nanoseconds\n+     *\/\n+    public static native void setCPUPeriod(long periodNanos);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -207,1 +207,5 @@\n-                JVM.setCPUThrottle(rate.rate(), rate.autoAdapt());\n+                if (rate.isRate()) {\n+                    JVM.setCPURate(rate.rate());\n+                } else {\n+                    JVM.setCPUPeriod(rate.periodNanos());\n+                }\n@@ -273,2 +277,6 @@\n-                TimespanRate r = enabled ? cpuRate : new TimespanRate(0, false);\n-                JVM.setCPUThrottle(r.rate(), r.autoAdapt());\n+                TimespanRate r = enabled ? cpuRate : TimespanRate.OFF;\n+                if (r.isRate()) {\n+                    JVM.setCPURate(r.rate());\n+                } else {\n+                    JVM.setCPUPeriod(r.periodNanos());\n+                }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformEventType.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-                missing:whitespace, missing:whitespace, missing:whitespace,\n-                missing:whitespace\n+                missing:whitespace, missing:whitespace, missing:whitespace\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/view.ini","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        TimespanRate max = null;\n+        TimespanRate highestRate = null;\n@@ -65,2 +65,4 @@\n-                if (max == null || rate.isHigher(max)) {\n-                    max = rate;\n+                if (highestRate == null) {\n+                    highestRate = rate;\n+                } else {\n+                    highestRate = TimespanRate.selectHigherResolution(highestRate, rate);\n@@ -68,1 +70,0 @@\n-                max = new TimespanRate(max.rate(), max.autoAdapt() || rate.autoAdapt());\n@@ -71,2 +72,1 @@\n-        \/\/ \"off\" is not supported\n-        return Objects.requireNonNullElse(max.toString(), DEFAULT_VALUE);\n+        return Objects.requireNonNullElse(highestRate.toString(), DEFAULT_VALUE);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/CPUThrottleSetting.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public record TimespanRate(double rate, boolean autoAdapt) {\n+public record TimespanRate(double rate, long periodNanos, boolean isRate) {\n@@ -35,0 +35,11 @@\n+    public static final TimespanRate OFF = new TimespanRate(0, 0, false);\n+\n+    \/**\n+     * Parses the rate string. Supports\n+     *\n+     * <ul>\n+     *  <li>off<\/li>\n+     *  <li>time value like \"1ms\"<\/li>\n+     *  <li>rate value like \"10\/s\"<\/li>\n+     * <\/ul>\n+     *\/\n@@ -37,1 +48,1 @@\n-            text = CPUThrottleSetting.DEFAULT_VALUE;\n+            return OFF;\n@@ -46,1 +57,1 @@\n-                return new TimespanRate(0, false);\n+                return OFF;\n@@ -48,1 +59,1 @@\n-            return new TimespanRate(Runtime.getRuntime().availableProcessors() \/ (period \/ 1_000_000_000.0), false);\n+            return new TimespanRate(0, period, false);\n@@ -54,1 +65,1 @@\n-        return new TimespanRate(r.perSecond(), true);\n+        return new TimespanRate(r.perSecond(), 0, true);\n@@ -57,2 +68,13 @@\n-    public boolean isHigher(TimespanRate that) {\n-        return rate() > that.rate();\n+    public static TimespanRate selectHigherResolution(TimespanRate a, TimespanRate b) {\n+        if (a.isRate && b.isRate) {\n+            return a.rate() > b.rate() ? a : b;\n+        }\n+        if (!a.isRate && !b.isRate) {\n+            return a.periodNanos() < b.periodNanos() ? a : b;\n+        }\n+        if (a.isRate) {\n+            double bRate = Runtime.getRuntime().availableProcessors() * (1_000_000_000.0 \/ b.periodNanos());\n+            return new TimespanRate(Math.max(a.rate(), bRate), 0, true);\n+        }\n+        double aRate = Runtime.getRuntime().availableProcessors() * (1_000_000_000.0 \/ a.periodNanos());\n+        return new TimespanRate(Math.max(aRate, b.rate()), 0, true);\n@@ -63,2 +85,27 @@\n-        if (autoAdapt) {\n-            return String.format(\"%d\/ns\", (long)(rate * 1_000_000_000L));\n+        if (isRate) {\n+            return toRateString();\n+        }\n+        return toPeriodString();\n+    }\n+\n+    private String toRateString() {\n+        \/\/ idea: try to use the smallest unit possible where the rate is still an integer\n+        \/\/ start with seconds, then try minutes, hours, etc.\n+        assert isRate;\n+        if (rate == 0) {\n+            return \"0\/s\";\n+        }\n+        for (TimespanUnit unit : TimespanUnit.values()) {\n+            double value = rate \/ unit.nanos * 1_000_000_000.0;\n+            if (value % 1 == 0) {\n+                return String.format(\"%d\/%s\", (long)value, unit.text);\n+            }\n+        }\n+        \/\/ fallback to days if no smaller unit is found\n+        return String.format(\"%d\/%s\", (long)(rate \/ TimespanUnit.DAYS.nanos * 1_000_000_000.0), TimespanUnit.DAYS.text);\n+    }\n+\n+    private String toPeriodString() {\n+        assert !isRate;\n+        if (periodNanos == 0) {\n+            return \"0ms\";\n@@ -66,1 +113,1 @@\n-        return String.format(\"%dns\", (long)(Runtime.getRuntime().availableProcessors() \/ rate * 1_000_000_000L));\n+        return String.format(\"%dns\", periodNanos);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/TimespanRate.java","additions":57,"deletions":10,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -1434,0 +1434,8 @@\n+\n+        @Override\n+        public Attributes enterRawMode() {\n+            Attributes res = super.enterRawMode();\n+            res.setControlChar(ControlChar.VEOF, 4);\n+            return res;\n+        }\n+\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+import jdk.jshell.execution.impl.RestartableInputStream;\n@@ -118,1 +119,1 @@\n-        this.in = b.in;\n+        this.in = new RestartableInputStream(b.in);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/JShell.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+import jdk.jshell.execution.impl.RestartableInputStream;\n@@ -65,0 +66,1 @@\n+    private static final int TAG_EOF = 3;\n@@ -125,0 +127,1 @@\n+                            case TAG_EOF: return -1;\n@@ -186,1 +189,5 @@\n-                            inTarget.write(TAG_CLOSED);\n+                            if (in instanceof RestartableInputStream ris && !ris.isClosed()) {\n+                                inTarget.write(TAG_EOF);\n+                            } else {\n+                                inTarget.write(TAG_CLOSED);\n+                            }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/Util.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jshell.execution.impl;\n+\n+import java.io.FilterInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+public class RestartableInputStream extends FilterInputStream {\n+\n+    private final AtomicBoolean closed = new AtomicBoolean();\n+\n+    public RestartableInputStream(InputStream delegate) {\n+        super(delegate);\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        closed.set(true);\n+        super.close();\n+    }\n+\n+    public boolean isClosed() {\n+        return closed.get();\n+    }\n+}\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/impl\/RestartableInputStream.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -93,1 +93,0 @@\n-\n@@ -96,1 +95,0 @@\n-    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -107,1 +105,0 @@\n-    ReservedMemoryRegion rmr = VirtualMemoryTracker::Instance::tree()->find_reserved_region(addr);\n@@ -109,0 +106,3 @@\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n+\n+    ReservedMemoryRegion rmr = rtree->find_reserved_region(addr);\n@@ -167,1 +167,0 @@\n-  }\n@@ -169,2 +168,0 @@\n-  static void test_add_committed_region_adjacent_overlapping() {\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n@@ -172,0 +169,1 @@\n+  }\n@@ -173,0 +171,1 @@\n+  static void test_add_committed_region_adjacent_overlapping() {\n@@ -175,0 +174,2 @@\n+\n+    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n@@ -255,1 +256,0 @@\n-  }\n@@ -257,2 +257,0 @@\n-  static void test_add_committed_region_overlapping() {\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n@@ -260,0 +258,1 @@\n+  }\n@@ -261,0 +260,1 @@\n+  static void test_add_committed_region_overlapping() {\n@@ -262,1 +262,0 @@\n-\n@@ -264,0 +263,2 @@\n+\n+    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n@@ -421,0 +422,2 @@\n+\n+    rtree->tree().remove_all();\n@@ -435,3 +438,0 @@\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n-    rtree->tree().remove_all();\n-\n@@ -440,0 +440,2 @@\n+\n+    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n@@ -561,0 +563,2 @@\n+\n+    rtree->tree().remove_all();\n@@ -578,1 +582,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-compiler\/onSpinWait\/TestOnSpinWaitAArch64.java 8360936 linux-aarch64,macosx-aarch64\n+compiler\/debug\/TestStressBailout.java 8361752 generic-all\n@@ -145,0 +145,2 @@\n+serviceability\/sa\/ClhsdbThreadContext.java        8356704 windows-x64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1606,1 +1606,0 @@\n-  vmTestbase\/jit\/misctests\/fpustack\/GraphApplet.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.quick-groups","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,58 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @key external-dep\n- * @library \/test\/lib\n- * @run driver Scimark\n- *\/\n-\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.artifacts.Artifact;\n-import jdk.test.lib.artifacts.ArtifactResolver;\n-import jdk.test.lib.artifacts.ArtifactResolverException;\n-import java.nio.file.Path;\n-import java.util.Map;\n-\n-@Artifact(organization = \"gov.nist.math\", name = \"scimark\", revision = \"2.0\", extension = \"zip\")\n-public class Scimark {\n-    public static void main(String... args) throws Exception {\n-        Map<String, Path> artifacts;\n-        try {\n-            artifacts = ArtifactResolver.resolve(Scimark.class);\n-        } catch (ArtifactResolverException e) {\n-            throw new Error(\"TESTBUG: Can not resolve artifacts for \"\n-                            + Scimark.class.getName(), e);\n-        }\n-\n-        System.setProperty(\"test.noclasspath\", \"true\");\n-\n-        OutputAnalyzer output = new OutputAnalyzer(ProcessTools.createTestJavaProcessBuilder(\n-            \"-cp\", artifacts.get(\"gov.nist.math.scimark-2.0\").toString(),\n-            \"jnt.scimark2.commandline\", \"-large\")\n-            .start());\n-        output.shouldHaveExitValue(0);\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/applications\/scimark\/Scimark.java","additions":0,"deletions":58,"binary":false,"changes":58,"status":"deleted"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8358592\n+ * @summary Regression test for -XX:+UseSSE42Intrinsics -XX:UseSSE=1 crash\n+ * @requires os.arch==\"amd64\" | os.arch==\"x86_64\"\n+ * @requires vm.debug\n+ * @run main\/othervm -XX:+UseSSE42Intrinsics -XX:UseSSE=1 compiler.arguments.TestUseSSE42IntrinsicsWithLowLevelSSE\n+ *\/\n+package compiler.arguments;\n+\n+public class TestUseSSE42IntrinsicsWithLowLevelSSE {\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"passed\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestUseSSE42IntrinsicsWithLowLevelSSE.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -614,1 +614,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -629,1 +629,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -639,1 +639,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -647,1 +647,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -656,1 +656,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -667,1 +667,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -683,2 +683,2 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\"},\n@@ -700,2 +700,2 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\"},\n@@ -717,2 +717,2 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\"},\n@@ -746,1 +746,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -749,4 +749,4 @@\n-    @IR(counts = { IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                   IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                   IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                   IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n+    @IR(counts = { IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                   IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                   IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                   IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n@@ -769,1 +769,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -779,1 +779,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -782,4 +782,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n@@ -826,4 +826,4 @@\n-    @IR(counts = { IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                   IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                   IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                   IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n+    @IR(counts = { IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                   IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                   IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                   IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n@@ -833,1 +833,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -849,1 +849,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -859,4 +859,4 @@\n-    @IR(counts = { IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                   IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                   IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                   IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n+    @IR(counts = { IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                   IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                   IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                   IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n@@ -866,1 +866,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -906,4 +906,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n@@ -912,4 +912,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -945,4 +945,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -952,1 +952,1 @@\n-    @IR(counts = {IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\"},\n+    @IR(counts = {IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\"},\n@@ -990,4 +990,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\", \/\/ 3 (+ 1 for uncommon trap)\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\", \/\/ 3 (+ 1 for uncommon trap)\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n@@ -996,4 +996,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\",  \/\/ Unmerged stores: offset + (2,3,16) , and 1 for uncommon trap\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",  \/\/ 1([+0,+1]) for platform order and 2([+4,+5], [+14,+15]) for reverse order\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",  \/\/ 1([+6,+9]) for platform order and 1([+10,+13]) for reverse order\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\",  \/\/ Unmerged stores: offset + (2,3,16) , and 1 for uncommon trap\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",  \/\/ 1([+0,+1]) for platform order and 2([+4,+5], [+14,+15]) for reverse order\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",  \/\/ 1([+6,+9]) for platform order and 1([+10,+13]) for reverse order\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -1048,4 +1048,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\",  \/\/ Unmerged stores: offset + (2,3,16) , and 1 for uncommon trap\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",  \/\/ 1([+0,+1]) for platform order and 2([+4,+5], [+14,+15]) for reverse order\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",  \/\/ 1([+6,+9]) for platform order and 1([+10,+13]) for reverse order\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\",  \/\/ Unmerged stores: offset + (2,3,16) , and 1 for uncommon trap\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",  \/\/ 1([+0,+1]) for platform order and 2([+4,+5], [+14,+15]) for reverse order\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",  \/\/ 1([+6,+9]) for platform order and 1([+10,+13]) for reverse order\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -1056,4 +1056,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\", \/\/ 3 (+ 1 for uncommon trap)\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\", \/\/ 3 (+ 1 for uncommon trap)\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n@@ -1104,4 +1104,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -1142,4 +1142,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1167,4 +1167,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1187,4 +1187,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1214,4 +1214,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\", \/\/ no merge\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\", \/\/ no merge\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1235,4 +1235,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ 1 left in uncommon trap path of RangeCheck\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ 1 left in uncommon trap path of RangeCheck\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -1257,4 +1257,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ 1 left in uncommon trap path of RangeCheck\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ 1 left in uncommon trap path of RangeCheck\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -1280,4 +1280,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -1299,4 +1299,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -1318,4 +1318,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\", \/\/ no merge\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\", \/\/ no merge\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1358,4 +1358,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_I_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_L_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\"},\n@@ -1402,4 +1402,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ only for RC\n-                  IRNode.STORE_I_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_L_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ only for RC\n+                  IRNode.STORE_I_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\"},\n@@ -1448,4 +1448,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\", \/\/ 3 (+1 that goes into RC)\n-                  IRNode.STORE_I_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",\n-                  IRNode.STORE_L_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\", \/\/ 3 (+1 that goes into RC)\n+                  IRNode.STORE_I_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",\n+                  IRNode.STORE_L_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\"},\n@@ -1454,4 +1454,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"12\",\n-                  IRNode.STORE_I_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",  \/\/ Stores of constants can be merged\n-                  IRNode.STORE_L_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"12\",\n+                  IRNode.STORE_I_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",  \/\/ Stores of constants can be merged\n+                  IRNode.STORE_L_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -1504,4 +1504,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"12\",\n-                  IRNode.STORE_I_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",  \/\/ Stores of constants can be merged\n-                  IRNode.STORE_L_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"12\",\n+                  IRNode.STORE_I_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",  \/\/ Stores of constants can be merged\n+                  IRNode.STORE_L_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"},\n@@ -1510,4 +1510,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\", \/\/ 3 (+1 that goes into RC)\n-                  IRNode.STORE_I_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"3\",\n-                  IRNode.STORE_L_OF_CLASS, \"short\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\", \/\/ 3 (+1 that goes into RC)\n+                  IRNode.STORE_I_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"3\",\n+                  IRNode.STORE_L_OF_CLASS, \"short\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\"},\n@@ -1558,4 +1558,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"7\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"7\"},\n@@ -1602,4 +1602,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ only for RC\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"7\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ only for RC\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"7\"},\n@@ -1648,4 +1648,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"6\", \/\/ 5 (+1 that goes into RC)\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"6\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"6\", \/\/ 5 (+1 that goes into RC)\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"6\"},\n@@ -1654,4 +1654,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"10\",\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\"}, \/\/ Stores of constants can be merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"10\",\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\"}, \/\/ Stores of constants can be merged\n@@ -1704,4 +1704,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"10\",\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"4\"}, \/\/ Stores of constants can be merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"10\",\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"4\"}, \/\/ Stores of constants can be merged\n@@ -1710,4 +1710,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"6\", \/\/ 5 (+1 that goes into RC)\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"6\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"6\", \/\/ 5 (+1 that goes into RC)\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"6\"},\n@@ -1748,1 +1748,1 @@\n-    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\"},\n+    @IR(counts = {IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\"},\n@@ -1774,4 +1774,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -1821,4 +1821,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ for RangeCheck trap\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ expect merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ for RangeCheck trap\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ expect merged\n@@ -1827,4 +1827,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ for RangeCheck trap\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ expect merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ for RangeCheck trap\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ expect merged\n@@ -1858,4 +1858,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\", \/\/ No optimization because of too many RangeChecks\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\", \/\/ No optimization because of too many RangeChecks\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1886,4 +1886,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\", \/\/ No optimization because of too many RangeChecks\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\", \/\/ No optimization because of too many RangeChecks\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -1943,4 +1943,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ for RangeCheck trap\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ expect merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ for RangeCheck trap\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ expect merged\n@@ -1950,4 +1950,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\", \/\/ for RangeCheck trap\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ expect merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\", \/\/ for RangeCheck trap\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ expect merged\n@@ -1980,4 +1980,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"7\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"7\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -1987,4 +1987,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"7\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"7\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n@@ -2017,4 +2017,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"7\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"7\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -2024,4 +2024,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"7\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"7\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n@@ -2076,4 +2076,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -2126,4 +2126,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\",  \/\/ nothing merged\n-                  IRNode.STORE_C_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"8\",  \/\/ nothing merged\n+                  IRNode.STORE_C_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n@@ -2131,4 +2131,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\"}, \/\/ all merged\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"bottom\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\"}, \/\/ all merged\n@@ -2168,4 +2168,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_C_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_L_OF_CLASS, \"int\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_C_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_L_OF_CLASS, \"int\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -2191,4 +2191,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"6\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"})\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"6\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"})\n@@ -2220,4 +2220,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n@@ -2227,4 +2227,4 @@\n-    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"2\",\n-                  IRNode.STORE_C_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\",\n-                  IRNode.STORE_I_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"1\",\n-                  IRNode.STORE_L_OF_CLASS, \"byte\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"0\"},\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"2\",\n+                  IRNode.STORE_C_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\",\n+                  IRNode.STORE_I_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"byte\\\\[int:>=0] \\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\)\", \"0\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestMergeStores.java","additions":225,"deletions":225,"binary":false,"changes":450,"status":"modified"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8361140\n+ * @summary Test ConnectionGraph::reduce_phi_on_cmp when OptimizePtrCompare is disabled\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.TestReducePhiOnCmpWithNoOptPtrCompare\n+ *\/\n+\n+package compiler.c2;\n+\n+import java.util.Random;\n+import jdk.test.lib.Asserts;\n+import compiler.lib.ir_framework.*;\n+\n+public class TestReducePhiOnCmpWithNoOptPtrCompare {\n+\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\"-XX:-OptimizePtrCompare\",\"-XX:+VerifyReduceAllocationMerges\",\"-XX:+IgnoreUnrecognizedVMOptions\");\n+    }\n+\n+    @Run(test = {\"testReducePhiOnCmp_C2\"})\n+    public void runner(RunInfo info) {\n+        Random random = info.getRandom();\n+        boolean cond = random.nextBoolean();\n+        int x = random.nextInt();\n+        int y = random.nextInt();\n+        Asserts.assertEQ(testReducePhiOnCmp_Interp(cond, x, y),testReducePhiOnCmp_C2(cond, x, y));\n+    }\n+\n+    @Test\n+    int testReducePhiOnCmp_C2(boolean cond, int x, int y) { return testReducePhiOnCmp(cond, x, y); }\n+\n+    @DontCompile\n+    int testReducePhiOnCmp_Interp(boolean cond, int x, int y) { return testReducePhiOnCmp(cond, x, y); }\n+\n+    int testReducePhiOnCmp(boolean cond,int x,int y) {\n+        Point p = null;\n+\n+        if (cond) {\n+            p = new Point(x*x, y*y);\n+        } else if (x > y) {\n+            p = new Point(x+y, x*y);\n+        }\n+\n+        if (p != null) {\n+            return p.x * p.y;\n+        } else {\n+            return 1984;\n+        }\n+    }\n+\n+    static class Point {\n+        int x, y;\n+        Point(int x, int y) {\n+            this.x = x;\n+            this.y = y;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (o == this) return true;\n+            if (!(o instanceof Point)) return false;\n+            Point p = (Point) o;\n+            return (p.x == x) && (p.y == y);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestReducePhiOnCmpWithNoOptPtrCompare.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package compiler\/c2\/gvn;\n+\n+public class ReverseBytesConstantsHelper {\n+    public Method \"<init>\":\"()V\" stack 1 locals 1 {\n+        aload_0;\n+        invokespecial Method java\/lang\/Object.\"<init>\":\"()V\";\n+        return;\n+    }\n+\n+    public static Method reverseBytesShort:\"(I)S\" stack 1 locals 1 {\n+        iload_0;\n+        invokestatic Method java\/lang\/Short.\"reverseBytes\":\"(S)S\";\n+        ireturn;\n+    }\n+\n+    public static Method reverseBytesChar:\"(I)C\" stack 1 locals 1 {\n+        iload_0;\n+        invokestatic Method java\/lang\/Character.\"reverseBytes\":\"(C)C\";\n+        ireturn;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/ReverseBytesConstantsHelper.jasm","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -37,1 +37,1 @@\n- * @bug 8353551\n+ * @bug 8353551 8359678\n@@ -40,0 +40,1 @@\n+ * @compile ReverseBytesConstantsHelper.jasm\n@@ -54,1 +55,1 @@\n-        TestFramework.run();\n+        TestFramework.runWithFlags(\"-XX:CompileCommand=inline,compiler.c2.gvn.ReverseBytesConstantsHelper::*\");\n@@ -58,4 +59,4 @@\n-        \"testI1\", \"testI2\", \"testI3\",\n-        \"testL1\", \"testL2\", \"testL3\",\n-        \"testS1\", \"testS2\", \"testS3\",\n-        \"testUS1\", \"testUS2\", \"testUS3\",\n+        \"testI1\", \"testI2\", \"testI3\", \"testI4\",\n+        \"testL1\", \"testL2\", \"testL3\", \"testL4\",\n+        \"testS1\", \"testS2\", \"testS3\", \"testS4\",\n+        \"testUS1\", \"testUS2\", \"testUS3\", \"testUS4\",\n@@ -174,0 +175,12 @@\n+    @Test\n+    @IR(failOn = {IRNode.REVERSE_BYTES_S, IRNode.CALL})\n+    public short testS5() {\n+        return ReverseBytesConstantsHelper.reverseBytesShort(C_INT);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.REVERSE_BYTES_S, IRNode.CALL})\n+    public short testS6() {\n+        return ReverseBytesConstantsHelper.reverseBytesShort(C_CHAR);\n+    }\n+\n@@ -198,0 +211,12 @@\n+    @Test\n+    @IR(failOn = {IRNode.REVERSE_BYTES_US, IRNode.CALL})\n+    public char testUS5() {\n+        return ReverseBytesConstantsHelper.reverseBytesChar(C_INT);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.REVERSE_BYTES_US, IRNode.CALL})\n+    public char testUS6() {\n+        return ReverseBytesConstantsHelper.reverseBytesChar(C_SHORT);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/ReverseBytesConstantsTests.java","additions":31,"deletions":6,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -79,1 +79,15 @@\n-        framework.addScenarios(scenario0, scenario1, scenario2).start();\n+        Scenario scenario3 = new Scenario(3, \"-XX:+UnlockDiagnosticVMOptions\",\n+                                             \"-XX:+ReduceAllocationMerges\",\n+                                             \"-XX:+TraceReduceAllocationMerges\",\n+                                             \"-XX:+DeoptimizeALot\",\n+                                             \"-XX:+UseCompressedOops\",\n+                                             \"-XX:+UseCompressedClassPointers\",\n+                                             \"-XX:-OptimizePtrCompare\",\n+                                             \"-XX:+VerifyReduceAllocationMerges\",\n+                                             \"-XX:CompileCommand=inline,*::charAt*\",\n+                                             \"-XX:CompileCommand=inline,*PicturePositions::*\",\n+                                             \"-XX:CompileCommand=inline,*Point::*\",\n+                                             \"-XX:CompileCommand=inline,*Nested::*\",\n+                                             \"-XX:CompileCommand=exclude,*::dummy*\");\n+\n+        framework.addScenarios(scenario0, scenario1, scenario2, scenario3).start();\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/AllocationMergesTests.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.intrinsics;\n+\n+\/*\n+ * @test\n+ * @bug 8359344\n+ * @summary Intrinsic storeMasked can add some control flow before bailing out, leaving a malformed CFG.\n+ * @modules jdk.incubator.vector\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:TypeProfileLevel=222 -Xbatch\n+ *                   -XX:CompileCommand=compileonly,jdk.incubator.vector.Long*::intoArray0\n+ *                   -XX:+AbortVMOnCompilationFailure\n+ *                    compiler.intrinsics.VectorIntoArrayInvalidControlFlow\n+ *\n+ * @run main compiler.intrinsics.VectorIntoArrayInvalidControlFlow\n+ *\/\n+\n+import jdk.incubator.vector.*;\n+\n+public class VectorIntoArrayInvalidControlFlow {\n+    private static final VectorSpecies<Long> L_SPECIES = LongVector.SPECIES_128;\n+    private static final LongVector longVector;\n+    private static final long[] longArray = new long[L_SPECIES.length()];\n+    private static final boolean[] longMask = new boolean[L_SPECIES.length()];\n+    private static final VectorMask<Long> longVectorMask;\n+\n+    static {\n+        for (int i = 0; i < L_SPECIES.length(); i++) {\n+            longArray[i] = i + 1;\n+            longMask[i] = L_SPECIES.length() > 1 && i % 2 == 0;\n+        }\n+        longVector = LongVector.fromArray(L_SPECIES, longArray, 0);\n+        longVectorMask = VectorMask.fromArray(L_SPECIES, longMask, 0);\n+    }\n+\n+    static long[] test() {\n+        long[] res = new long[L_SPECIES.length()];\n+        for(int j = 0; j < 10_000; j++) {\n+            longVector.intoArray(res, 0, longVectorMask);\n+        }\n+        return res;\n+    }\n+\n+    static public void main(String[] args) {\n+        test();\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/VectorIntoArrayInvalidControlFlow.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -89,0 +89,8 @@\n+    BEFORE_POST_LOOP(               \"Before Post Loop\"),\n+    AFTER_POST_LOOP(                \"After Post Loop\"),\n+    BEFORE_REMOVE_EMPTY_LOOP(       \"Before Remove Empty Loop\"),\n+    AFTER_REMOVE_EMPTY_LOOP(        \"After Remove Empty Loop\"),\n+    BEFORE_ONE_ITERATION_LOOP(      \"Before Replacing One-Iteration Loop\"),\n+    AFTER_ONE_ITERATION_LOOP(       \"After Replacing One-Iteration Loop\"),\n+    BEFORE_DUPLICATE_LOOP_BACKEDGE( \"Before Duplicate Loop Backedge\"),\n+    AFTER_DUPLICATE_LOOP_BACKEDGE(  \"After Duplicate Loop Backedge\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/CompilePhase.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -102,5 +102,3 @@\n-    private static final String START = \"(\\\\d+(\\\\s){2}(\";\n-    private static final String MID = \".*)+(\\\\s){2}===.*\";\n-    private static final String END = \")\";\n-    private static final String STORE_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n-    private static final String LOAD_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n+    public static final String START = \"(\\\\d+(\\\\s){2}(\";\n+    public static final String MID = \".*)+(\\\\s){2}===.*\";\n+    public static final String END = \")\";\n@@ -2972,0 +2970,12 @@\n+    \/\/ Typename in load\/store have the structure:\n+    \/\/ @fully\/qualified\/package\/name\/to\/TheClass+12 *\n+    \/\/ And variation:\n+    \/\/ - after @, we can have \"stable:\" or other labels, with optional space after ':'\n+    \/\/ - the class can actually be a subclass, with $ separator (and it must be ok to give only the deepest one\n+    \/\/ - after the class name, we can have a comma-separated list of implemented interfaces enclosed in parentheses\n+    \/\/ - before the offset, we can have something like \":NotNull\", either way, seeing \"+\" or \":\" means the end of the type\n+    \/\/ Worst case, it can be something like:\n+    \/\/ @bla: bli:a\/b\/c$d$e (f\/g,h\/i\/j):NotNull+24 *\n+    private static final String LOAD_STORE_PREFIX = \"@(\\\\w+: ?)*[\\\\w\/\\\\$]*\\\\b\";\n+    private static final String LOAD_STORE_SUFFIX = \"( \\\\([^\\\\)]+\\\\))?(:|\\\\+)\\\\S* \\\\*\";\n+\n@@ -2973,1 +2983,1 @@\n-        String regex = START + irNodeRegex + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+        String regex = START + irNodeRegex + MID + LOAD_STORE_PREFIX + IS_REPLACED + LOAD_STORE_SUFFIX + END;\n@@ -2978,1 +2988,1 @@\n-        String regex = START + irNodeRegex + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+        String regex = START + irNodeRegex + MID + LOAD_STORE_PREFIX + IS_REPLACED + LOAD_STORE_SUFFIX + END;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import java.util.regex.Matcher;\n+\n@@ -65,1 +67,1 @@\n-                nodeRegex = nodeRegex.replaceAll(IRNode.IS_REPLACED, userPostfix.value());\n+                nodeRegex = nodeRegex.replaceAll(IRNode.IS_REPLACED, Matcher.quoteReplacement(userPostfix.value()));\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/checkattribute\/parsing\/RawIRNode.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @requires vm.debug\n@@ -45,0 +46,1 @@\n+import java.util.Arrays;\n@@ -52,0 +54,1 @@\n+\n@@ -94,1 +97,1 @@\n-          return \"1f20 03d5\";\n+          return \"1f2003d5\";\n@@ -96,1 +99,1 @@\n-          return \"df3f 03d5\";\n+          return \"df3f03d5\";\n@@ -98,1 +101,1 @@\n-          return \"3f20 03d5\";\n+          return \"3f2003d5\";\n@@ -100,1 +103,1 @@\n-          return \"ff30 03d5\";\n+          return \"ff3003d5\";\n@@ -106,7 +109,2 @@\n-    private static void addInstrs(String line, ArrayList<String> instrs) {\n-        for (String instr : line.split(\"\\\\|\")) {\n-            instrs.add(instr.trim());\n-        }\n-    }\n-\n-    \/\/ The expected output of PrintAssembly for example for a spin wait with three NOPs:\n+    \/\/ The expected output for a spin wait with three NOPs\n+    \/\/ if the hsdis library is available:\n@@ -114,3 +112,5 @@\n-    \/\/ # {method} {0x0000ffff6ac00370} 'test' '()V' in 'compiler\/onSpinWait\/TestOnSpinWaitAArch64$Launcher'\n-    \/\/ #           [sp+0x40]  (sp of caller)\n-    \/\/ 0x0000ffff9d557680: 1f20 03d5 | e953 40d1 | 3f01 00f9 | ff03 01d1 | fd7b 03a9 | 1f20 03d5 | 1f20 03d5\n+    \/\/ ;; spin_wait {\n+    \/\/ 0x0000000111dfa58c:   nop\n+    \/\/ 0x0000000111dfa590:   nop\n+    \/\/ 0x0000000111dfa594:   nop\n+    \/\/ ;; }\n@@ -118,24 +118,1 @@\n-    \/\/ 0x0000ffff9d5576ac: ;*invokestatic onSpinWait {reexecute=0 rethrow=0 return_oop=0}\n-    \/\/                     ; - compiler.onSpinWait.TestOnSpinWaitAArch64$Launcher::test@0 (line 161)\n-    \/\/ 0x0000ffff9d5576ac: 1f20 03d5 | fd7b 43a9 | ff03 0191\n-    \/\/\n-    \/\/ The checkOutput method adds hex instructions before 'invokestatic onSpinWait' and from the line after\n-    \/\/ it to a list. The list is traversed from the end to count spin wait instructions.\n-    \/\/\n-    \/\/ If JVM finds the hsdis library the output is like:\n-    \/\/\n-    \/\/ # {method} {0x0000ffff63000370} 'test' '()V' in 'compiler\/onSpinWait\/TestOnSpinWaitAArch64$Launcher'\n-    \/\/ #           [sp+0x20]  (sp of caller)\n-    \/\/ 0x0000ffffa409da80:   nop\n-    \/\/ 0x0000ffffa409da84:   sub sp, sp, #0x20\n-    \/\/ 0x0000ffffa409da88:   stp x29, x30, [sp, #16]         ;*synchronization entry\n-    \/\/                                                       ; - compiler.onSpinWait.TestOnSpinWaitAArch64$Launcher::test@-1 (line 187)\n-    \/\/ 0x0000ffffa409da8c:   nop\n-    \/\/ 0x0000ffffa409da90:   nop\n-    \/\/ 0x0000ffffa409da94:   nop\n-    \/\/ 0x0000ffffa409da98:   nop\n-    \/\/ 0x0000ffffa409da9c:   nop\n-    \/\/ 0x0000ffffa409daa0:   nop\n-    \/\/ 0x0000ffffa409daa4:   nop                                 ;*invokestatic onSpinWait {reexecute=0 rethrow=0 return_oop=0}\n-    \/\/                                                           ; - compiler.onSpinWait.TestOnSpinWaitAArch64$Launcher::test@0 (line 187)\n-    private static void checkOutput(OutputAnalyzer output, String spinWaitInst, int spinWaitInstCount) {\n+    private static void checkOutput(OutputAnalyzer output, final String spinWaitInst, final int expectedCount) {\n@@ -144,8 +121,2 @@\n-        String match = skipTo(iter, \"'test' '()V' in 'compiler\/onSpinWait\/TestOnSpinWaitAArch64$Launcher'\");\n-        if (match == null) {\n-            throw new RuntimeException(\"Missing compiler output for the method compiler.onSpinWait.TestOnSpinWaitAArch64$Launcher::test\");\n-        }\n-\n-        ArrayList<String> instrs = new ArrayList<String>();\n-        String line = null;\n-        boolean hasHexInstInOutput = false;\n+        \/\/ 1. Check whether printed instructions are disassembled\n+        boolean isDisassembled = false;\n@@ -153,2 +124,3 @@\n-            line = iter.next();\n-            if (line.contains(\"*invokestatic onSpinWait\")) {\n+            String line = iter.next();\n+            if (line.contains(\"[Disassembly]\")) {\n+                isDisassembled = true;\n@@ -157,32 +129,1 @@\n-            if (!hasHexInstInOutput) {\n-                hasHexInstInOutput = line.contains(\"|\");\n-            }\n-            if (line.contains(\"0x\") && !line.contains(\";\")) {\n-                addInstrs(line, instrs);\n-            }\n-        }\n-\n-        if (!iter.hasNext() || !iter.next().contains(\"- compiler.onSpinWait.TestOnSpinWaitAArch64$Launcher::test@0\") || !iter.hasNext()) {\n-            throw new RuntimeException(\"Missing compiler output for Thread.onSpinWait intrinsic\");\n-        }\n-\n-        String strToSearch = null;\n-        if (!hasHexInstInOutput) {\n-            instrs.add(line.split(\";\")[0].trim());\n-            strToSearch = spinWaitInst;\n-        } else {\n-            line = iter.next();\n-            if (!line.contains(\"0x\") || line.contains(\";\")) {\n-                throw new RuntimeException(\"Expected hex instructions\");\n-            }\n-\n-            addInstrs(line, instrs);\n-            strToSearch = getSpinWaitInstHex(spinWaitInst);\n-        }\n-\n-        int foundInstCount = 0;\n-\n-        ListIterator<String> instrReverseIter = instrs.listIterator(instrs.size());\n-        while (instrReverseIter.hasPrevious()) {\n-            if (instrReverseIter.previous().endsWith(strToSearch)) {\n-                foundInstCount = 1;\n+            if (line.contains(\"[MachCode]\")) {\n@@ -193,2 +134,6 @@\n-        while (instrReverseIter.hasPrevious()) {\n-            if (!instrReverseIter.previous().endsWith(strToSearch)) {\n+        \/\/ 2. Look for the block comment\n+        boolean foundHead = false;\n+        while (iter.hasNext()) {\n+            String line = iter.next().trim();\n+            if (line.contains(\";; spin_wait {\")) {\n+                foundHead = true;\n@@ -197,1 +142,0 @@\n-            ++foundInstCount;\n@@ -199,3 +143,2 @@\n-\n-        if (foundInstCount != spinWaitInstCount) {\n-            throw new RuntimeException(\"Wrong instruction \" + strToSearch + \" count \" + foundInstCount + \"!\\n  -- expecting \" + spinWaitInstCount);\n+        if (!foundHead) {\n+            throw new RuntimeException(\"Block comment not found\");\n@@ -203,1 +146,0 @@\n-    }\n@@ -205,1 +147,3 @@\n-    private static String skipTo(Iterator<String> iter, String substring) {\n+        \/\/ 3. Count spin wait instructions\n+        final String expectedInst = isDisassembled ? spinWaitInst : getSpinWaitInstHex(spinWaitInst);\n+        int foundCount = 0;\n@@ -207,3 +151,10 @@\n-            String nextLine = iter.next();\n-            if (nextLine.contains(substring)) {\n-                return nextLine;\n+            String line = iter.next().trim();\n+            if (line.startsWith(\";; }\")) {\n+                break;\n+            }\n+            if (!line.startsWith(\"0x\")) {\n+                continue;\n+            }\n+            int pos = line.indexOf(':');\n+            if (pos == -1 || pos == line.length() - 1) {\n+                continue;\n@@ -211,0 +162,13 @@\n+            line = line.substring(pos + 1).replaceAll(\"\\\\s\", \"\");\n+            if (line.startsWith(\";\")) {\n+                continue;\n+            }\n+            \/\/ When code is disassembled, we have one instruction per line.\n+            \/\/ Otherwise, there can be multiple hex instructions separated by '|'.\n+            foundCount += (int)Arrays.stream(line.split(\"\\\\|\"))\n+                                     .takeWhile(i -> i.startsWith(expectedInst))\n+                                     .count();\n+        }\n+\n+        if (foundCount != expectedCount) {\n+            throw new RuntimeException(\"Expected \" + expectedCount + \" \" + spinWaitInst + \" instructions. Found: \" + foundCount);\n@@ -212,1 +176,0 @@\n-        return null;\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64.java","additions":55,"deletions":92,"binary":false,"changes":147,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Test that no Template Assertion Predicate is created in Loop Prediction for one iteration loop.\n+ * @summary Test that no Template Assertion Predicate is created in Loop Prediction for one-iteration loop.\n@@ -35,1 +35,1 @@\n- * @summary Test that no Template Assertion Predicate is created in Loop Prediction for one iteration loop.\n+ * @summary Test that no Template Assertion Predicate is created in Loop Prediction for one-iteration loop.\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/assertion\/TestTemplateWithoutOpaqueLoopNodes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-            \/\/ Empty one iteration loop which is only removed after split if in first loop opts phase. This prevents\n+            \/\/ Empty one-iteration loop which is only removed after split if in first loop opts phase. This prevents\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestSplitDivisionThroughPhi.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8155781\n+ * @bug 8155781 8359344\n@@ -28,21 +28,2 @@\n- *\n- * @run main\/bootclasspath\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                                 -XX:-TieredCompilation -Xbatch\n- *                                 -XX:+UseCompressedOops -XX:+UseCompressedClassPointers\n- *                                 -XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\n- *                                 compiler.unsafe.OpaqueAccesses\n- * @run main\/bootclasspath\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                                 -XX:-TieredCompilation -Xbatch\n- *                                 -XX:+UseCompressedOops -XX:-UseCompressedClassPointers\n- *                                 -XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\n- *                                 compiler.unsafe.OpaqueAccesses\n- * @run main\/bootclasspath\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                                 -XX:-TieredCompilation -Xbatch\n- *                                 -XX:-UseCompressedOops -XX:+UseCompressedClassPointers\n- *                                 -XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\n- *                                 compiler.unsafe.OpaqueAccesses\n- * @run main\/bootclasspath\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                                 -XX:-TieredCompilation -Xbatch\n- *                                 -XX:-UseCompressedOops -XX:-UseCompressedClassPointers\n- *                                 -XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\n- *                                 compiler.unsafe.OpaqueAccesses\n+ * @library \/test\/lib \/\n+ * @run driver compiler.unsafe.OpaqueAccesses\n@@ -52,0 +33,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -80,0 +63,18 @@\n+    \/\/ To the end of a line, a new line character, repeated.\n+    private static final String FULL_LINES = \"(.*\\\\R)*\";\n+    \/\/ Finish the line after the node type, skips full line, and eats until before the node types\n+    private static final String SKIP = IRNode.MID + IRNode.END + \"\\\\R\" + FULL_LINES + \"\\\\s*\" + IRNode.START;\n+\n+    private static final String CALL_STATIC_JAVA_AND_THEN_OPAQUE_NOT_NULL = IRNode.START + \"CallStaticJava\" + SKIP + \"OpaqueNotNull\" + IRNode.MID + IRNode.END;\n+    private static final String OPAQUE_NOT_NULL_AND_THEN_CALL_STATIC_JAVA = IRNode.START + \"OpaqueNotNull\" + SKIP + \"CallStaticJava\" + IRNode.MID + IRNode.END;\n+    \/* Having both CallStaticJava and OpaqueNotNull, in any order. We use that in a failOn to make sure we have one\n+     * or the other (or none), but not both.\n+     * The CallStaticJava happens when the call is not intrinsified, and the OpaqueNotNull comes from the intrinsic.\n+     * We don't want a unfinished intrinsic, with the call nevertheless.\n+     *\/\n+    private static final String BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL =\n+            \"(\" + CALL_STATIC_JAVA_AND_THEN_OPAQUE_NOT_NULL + \") | (\" + OPAQUE_NOT_NULL_AND_THEN_CALL_STATIC_JAVA + \")\";\n+\n+\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -84,0 +85,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -88,0 +91,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -92,0 +97,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -96,0 +103,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -100,0 +109,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -104,0 +115,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -108,0 +121,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -112,0 +127,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -116,0 +133,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -120,0 +139,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -124,0 +145,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -128,0 +151,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -132,0 +157,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -136,0 +163,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -140,0 +169,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -144,0 +175,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -148,0 +181,2 @@\n+    @Test\n+    @IR(failOn = {BOTH_CALL_STATIC_JAVA_AND_OPAQUE_NOT_NULL}, phase = CompilePhase.BEFORE_MACRO_EXPANSION)\n@@ -155,0 +190,1 @@\n+    @Test\n@@ -162,25 +198,44 @@\n-    public static void main(String[] args) {\n-        for (int i = 0; i < 20_000; i++) {\n-            \/\/ Instance\n-            testFixedOffsetField(INSTANCE);\n-            testFixedOffsetHeader0(INSTANCE);\n-            testFixedOffsetHeader4(INSTANCE);\n-            testFixedOffsetHeader8(INSTANCE);\n-            testFixedOffsetHeader12(INSTANCE);\n-            testFixedOffsetHeader16(INSTANCE);\n-            testFixedOffsetHeader17(INSTANCE);\n-            testFixedBase(F_OFFSET);\n-            testOpaque(INSTANCE, F_OFFSET);\n-            testMixedAccess();\n-\n-            \/\/ Array\n-            testFixedOffsetHeaderArray0(ARRAY);\n-            testFixedOffsetHeaderArray4(ARRAY);\n-            testFixedOffsetHeaderArray8(ARRAY);\n-            testFixedOffsetHeaderArray12(ARRAY);\n-            testFixedOffsetHeaderArray16(ARRAY);\n-            testFixedOffsetHeaderArray17(ARRAY);\n-            testFixedOffsetArray(ARRAY);\n-            testFixedBaseArray(E_OFFSET);\n-            testOpaqueArray(ARRAY, E_OFFSET);\n-        }\n+    @Run(test = {\n+            \"testFixedOffsetField\",\n+            \"testFixedOffsetHeader0\",\n+            \"testFixedOffsetHeader4\",\n+            \"testFixedOffsetHeader8\",\n+            \"testFixedOffsetHeader12\",\n+            \"testFixedOffsetHeader16\",\n+            \"testFixedOffsetHeader17\",\n+            \"testFixedBase\",\n+            \"testOpaque\",\n+            \"testMixedAccess\",\n+            \"testFixedOffsetHeaderArray0\",\n+            \"testFixedOffsetHeaderArray4\",\n+            \"testFixedOffsetHeaderArray8\",\n+            \"testFixedOffsetHeaderArray12\",\n+            \"testFixedOffsetHeaderArray16\",\n+            \"testFixedOffsetHeaderArray17\",\n+            \"testFixedOffsetArray\",\n+            \"testFixedBaseArray\",\n+            \"testOpaqueArray\",\n+    })\n+    public static void runMethod() {\n+        \/\/ Instance\n+        testFixedOffsetField(INSTANCE);\n+        testFixedOffsetHeader0(INSTANCE);\n+        testFixedOffsetHeader4(INSTANCE);\n+        testFixedOffsetHeader8(INSTANCE);\n+        testFixedOffsetHeader12(INSTANCE);\n+        testFixedOffsetHeader16(INSTANCE);\n+        testFixedOffsetHeader17(INSTANCE);\n+        testFixedBase(F_OFFSET);\n+        testOpaque(INSTANCE, F_OFFSET);\n+        testMixedAccess();\n+\n+        \/\/ Array\n+        testFixedOffsetHeaderArray0(ARRAY);\n+        testFixedOffsetHeaderArray4(ARRAY);\n+        testFixedOffsetHeaderArray8(ARRAY);\n+        testFixedOffsetHeaderArray12(ARRAY);\n+        testFixedOffsetHeaderArray16(ARRAY);\n+        testFixedOffsetHeaderArray17(ARRAY);\n+        testFixedOffsetArray(ARRAY);\n+        testFixedBaseArray(E_OFFSET);\n+        testOpaqueArray(ARRAY, E_OFFSET);\n@@ -189,0 +244,31 @@\n+\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\n+                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:-TieredCompilation\", \"-Xbatch\",\n+                \"-XX:+UseCompressedOops\", \"-XX:+UseCompressedClassPointers\",\n+                \"-XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\"\n+        );\n+        TestFramework.runWithFlags(\n+                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:-TieredCompilation\", \"-Xbatch\",\n+                \"-XX:+UseCompressedOops\", \"-XX:-UseCompressedClassPointers\",\n+                \"-XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\"\n+        );\n+        TestFramework.runWithFlags(\n+                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:-TieredCompilation\", \"-Xbatch\",\n+                \"-XX:-UseCompressedOops\", \"-XX:+UseCompressedClassPointers\",\n+                \"-XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\"\n+        );\n+        TestFramework.runWithFlags(\n+                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:-TieredCompilation\", \"-Xbatch\",\n+                \"-XX:-UseCompressedOops\", \"-XX:-UseCompressedClassPointers\",\n+                \"-XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\"\n+        );\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/OpaqueAccesses.java","additions":133,"deletions":47,"binary":false,"changes":180,"status":"modified"},{"patch":"@@ -130,0 +130,3 @@\n+            makePair(SSPEC64, ISPEC64),\n+            makePair(SSPEC64, ISPEC64, true),\n+            makePair(SSPEC64, FSPEC64),\n@@ -134,0 +137,2 @@\n+            makePair(SSPEC64, LSPEC128),\n+            makePair(SSPEC64, LSPEC128, true),\n@@ -135,0 +140,1 @@\n+            makePair(SSPEC64, DSPEC128),\n@@ -159,0 +165,2 @@\n+            makePair(SSPEC128, LSPEC128),\n+            makePair(SSPEC128, LSPEC128, true),\n@@ -160,0 +168,1 @@\n+            makePair(SSPEC128, DSPEC128),\n@@ -231,0 +240,1 @@\n+            makePair(ISPEC64, SSPEC64),\n@@ -302,0 +312,1 @@\n+            makePair(LSPEC128, SSPEC64),\n@@ -306,0 +317,1 @@\n+            makePair(LSPEC128, SSPEC128),\n@@ -372,0 +384,1 @@\n+            makePair(FSPEC64, SSPEC64),\n@@ -436,0 +449,1 @@\n+            makePair(DSPEC128, SSPEC64),\n@@ -440,0 +454,1 @@\n+            makePair(DSPEC128, SSPEC128),\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/TestCastMethods.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,396 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorization;\n+\n+import jdk.test.lib.Asserts;\n+import compiler.lib.ir_framework.*;\n+import compiler.lib.generators.*;\n+\n+\/*\n+ * @test\n+ * @bug 8350177 8362171\n+ * @summary Ensure that truncation of subword vectors produces correct results\n+ * @library \/test\/lib \/\n+ * @run driver compiler.vectorization.TestSubwordTruncation\n+ *\/\n+\n+public class TestSubwordTruncation {\n+    private static final RestrictableGenerator<Integer> G = Generators.G.ints();\n+    private static final int SIZE = 10000;\n+\n+    @Setup\n+    static Object[] setupShortArray() {\n+        short[] arr = new short[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            arr[i] = G.next().shortValue();\n+        }\n+\n+        return new Object[] { arr };\n+    }\n+\n+\n+    @Setup\n+    static Object[] setupByteArray() {\n+        byte[] arr = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            arr[i] = G.next().byteValue();\n+        }\n+\n+        return new Object[] { arr };\n+    }\n+\n+    @Setup\n+    static Object[] setupCharArray() {\n+        char[] arr = new char[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            arr[i] = (char) G.next().shortValue();\n+        }\n+\n+        return new Object[] { arr };\n+    }\n+\n+    \/\/ Shorts\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupShortArray\")\n+    public Object[] testShortLeadingZeros(short[] in) {\n+        short[] res = new short[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (short) Integer.numberOfLeadingZeros(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testShortLeadingZeros\")\n+    public void checkTestShortLeadingZeros(Object[] vals) {\n+        short[] in = (short[]) vals[0];\n+        short[] res = (short[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            short val = (short) Integer.numberOfLeadingZeros(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupShortArray\")\n+    public Object[] testShortTrailingZeros(short[] in) {\n+        short[] res = new short[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (short) Integer.numberOfTrailingZeros(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testShortTrailingZeros\")\n+    public void checkTestShortTrailingZeros(Object[] vals) {\n+        short[] in = (short[]) vals[0];\n+        short[] res = (short[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            short val = (short) Integer.numberOfTrailingZeros(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupShortArray\")\n+    public Object[] testShortReverse(short[] in) {\n+        short[] res = new short[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (short) Integer.reverse(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testShortReverse\")\n+    public void checkTestShortReverse(Object[] vals) {\n+        short[] in = (short[]) vals[0];\n+        short[] res = (short[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            short val = (short) Integer.reverse(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupShortArray\")\n+    public Object[] testShortBitCount(short[] in) {\n+        short[] res = new short[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (short) Integer.bitCount(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testShortBitCount\")\n+    public void checkTestShortBitCount(Object[] vals) {\n+        short[] in = (short[]) vals[0];\n+        short[] res = (short[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            short val = (short) Integer.bitCount(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    \/\/ Chars\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupCharArray\")\n+    public Object[] testCharLeadingZeros(char[] in) {\n+        char[] res = new char[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (char) Integer.numberOfLeadingZeros(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testCharLeadingZeros\")\n+    public void checkTestCharLeadingZeros(Object[] vals) {\n+        char[] in = (char[]) vals[0];\n+        char[] res = (char[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            char val = (char) Integer.numberOfLeadingZeros(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupCharArray\")\n+    public Object[] testCharTrailingZeros(char[] in) {\n+        char[] res = new char[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (char) Integer.numberOfTrailingZeros(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testCharTrailingZeros\")\n+    public void checkTestCharTrailingZeros(Object[] vals) {\n+        char[] in = (char[]) vals[0];\n+        char[] res = (char[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            char val = (char) Integer.numberOfTrailingZeros(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupCharArray\")\n+    public Object[] testCharReverse(char[] in) {\n+        char[] res = new char[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (char) Integer.reverse(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testCharReverse\")\n+    public void checkTestCharReverse(Object[] vals) {\n+        char[] in = (char[]) vals[0];\n+        char[] res = (char[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            char val = (char) Integer.reverse(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupCharArray\")\n+    public Object[] testCharBitCount(char[] in) {\n+        char[] res = new char[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (char) Integer.bitCount(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testCharBitCount\")\n+    public void checkTestCharBitCount(Object[] vals) {\n+        char[] in = (char[]) vals[0];\n+        char[] res = (char[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            char val = (char) Integer.bitCount(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    \/\/ Bytes\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testByteLeadingZeros(byte[] in) {\n+        byte[] res = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (byte) Integer.numberOfLeadingZeros(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testByteLeadingZeros\")\n+    public void checkTestByteLeadingZeros(Object[] vals) {\n+        byte[] in = (byte[]) vals[0];\n+        byte[] res = (byte[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            byte val = (byte) Integer.numberOfLeadingZeros(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testByteTrailingZeros(byte[] in) {\n+        byte[] res = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (byte) Integer.numberOfTrailingZeros(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testByteTrailingZeros\")\n+    public void checkTestByteTrailingZeros(Object[] vals) {\n+        byte[] in = (byte[]) vals[0];\n+        byte[] res = (byte[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            byte val = (byte) Integer.numberOfTrailingZeros(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testByteReverse(byte[] in) {\n+        byte[] res = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (byte) Integer.reverse(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testByteReverse\")\n+    public void checkTestByteReverse(Object[] vals) {\n+        byte[] in = (byte[]) vals[0];\n+        byte[] res = (byte[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            byte val = (byte) Integer.reverse(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testByteBitCount(byte[] in) {\n+        byte[] res = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+             res[i] = (byte) Integer.bitCount(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testByteBitCount\")\n+    public void checkTestByteBitCount(Object[] vals) {\n+        byte[] in = (byte[]) vals[0];\n+        byte[] res = (byte[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            byte val = (byte) Integer.bitCount(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    int intField;\n+    short shortField;\n+\n+    @Test\n+    @IR(counts = { IRNode.MOD_I, \">0\" })\n+    public void testMod() {\n+        for (int i = 1; i < SIZE; i++) {\n+            for (int j = 1; j < 204; j++) {\n+                shortField %= intField | 1;\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestSubwordTruncation.java","additions":396,"deletions":0,"binary":false,"changes":396,"status":"added"},{"patch":"@@ -144,1 +144,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\", \"rvv\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\", \"zvbb\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicIntOpTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,2 @@\n-        \/\/ Force the log level to warning for all tags to supressed the CDS logs. Also disable the timestamp.\n+        \/\/ Force the log level to warning for all tags to suppress the CDS logs. Also disable the timestamp.\n+        \/\/ Disable CDS error by turing off CDS logging.\n@@ -54,1 +55,1 @@\n-        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"ServiceLoaderApp\");\n+        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"-Xlog:cds=off\", \"ServiceLoaderApp\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ServiceLoaderTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -136,0 +136,1 @@\n+            \"-Xlog:cds=off\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/ArchivedModuleWithCustomImageTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-             \"-Xmx64m\", \"-Xms32m\",\n+             \"-Xmx256m\", \"-Xms32m\",\n@@ -76,1 +76,1 @@\n-            \"-Xmx64m\", \"-Xms32m\",\n+            \"-Xmx256m\", \"-Xms32m\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LotsUnloadTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -559,1 +559,1 @@\n-        ft2 = Files.getLastModifiedTime(Paths.get(versionB));\n+        ft2 = Files.getLastModifiedTime(Paths.get(versionF));\n@@ -562,1 +562,1 @@\n-            throw new RuntimeException(\"Shared archive \" + versionB + \" should be created at exit\");\n+            throw new RuntimeException(\"Shared archive \" + versionF + \" should be created at exit\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestAutoCreateSharedArchive.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import org.junit.jupiter.api.BeforeEach;\n@@ -50,0 +51,11 @@\n+    boolean done;\n+\n+    \/**\n+     * The tests accumulate previous heap dumps. Trigger GC before each test to get rid of them.\n+     * This makes dumps smaller, processing faster, and avoids OOMs\n+     *\/\n+    @BeforeEach\n+    void doGC() {\n+        System.gc();\n+    }\n+\n@@ -99,1 +111,3 @@\n-                    lock.wait();\n+                    while (!done) {\n+                        lock.wait();\n+                    }\n@@ -112,1 +126,1 @@\n-\n+        } finally {\n@@ -114,0 +128,1 @@\n+                done = true;\n@@ -116,1 +131,0 @@\n-        } finally {\n@@ -162,1 +176,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/HeapDump\/UnmountedVThreadNativeMethodAtTop.java","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,18 @@\n+\/\/ JVMTI_ERROR_WRONG_PHASE guard\n+static jrawMonitorID event_mon = NULL;\n+static int is_vm_dead = 0;\n+\n+void lock(jvmtiEnv *jvmti, JNIEnv *jni) {\n+  jvmtiError err = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+  if (err != JVMTI_ERROR_NONE) {\n+    JNI_ENV_PTR(jni)->FatalError(JNI_ENV_ARGS2(jni, \"RawMonitorEnter failed\"));\n+  }\n+}\n+\n+void unlock(jvmtiEnv *jvmti, JNIEnv *jni) {\n+  jvmtiError err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+  if (err != JVMTI_ERROR_NONE) {\n+    JNI_ENV_PTR(jni)->FatalError(JNI_ENV_ARGS2(jni, \"RawMonitorExit failed\"));\n+  }\n+}\n+\n@@ -56,0 +74,6 @@\n+  lock(jvmti, jni);\n+  if (is_vm_dead) {\n+    unlock(jvmti, jni);\n+    return;\n+  }\n+\n@@ -81,0 +105,1 @@\n+  unlock(jvmti, jni);\n@@ -87,0 +112,6 @@\n+extern JNIEXPORT void JNICALL OnVMDeath(jvmtiEnv *jvmti, JNIEnv *jni) {\n+  lock(jvmti, jni);\n+  is_vm_dead = 1;\n+  unlock(jvmti, jni);\n+}\n+\n@@ -92,0 +123,1 @@\n+  jvmtiError err;\n@@ -97,0 +129,6 @@\n+  err = (*jvmti)->CreateRawMonitor(jvmti, \"Event Monitor\", &event_mon);\n+  if (err != JVMTI_ERROR_NONE) {\n+    printf(\"CreateRawMonitor failed: %d\\n\", err);\n+    return JNI_ERR;\n+  }\n+\n@@ -100,0 +138,1 @@\n+  callbacks.VMDeath = &OnVMDeath;\n@@ -107,0 +146,1 @@\n+  (*jvmti)->SetEventNotificationMode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/VMEvent\/libVMEventTest.c","additions":41,"deletions":1,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -128,0 +128,6 @@\n+        runCheck(\n+                BadFailOnConstraint.create(AllocInstance.class, \"allocNested()\", 1),\n+                BadFailOnConstraint.create(AllocInstance.class, \"allocNested()\", 2),\n+                BadFailOnConstraint.create(AllocInstance.class, \"allocNested()\", 3)\n+        );\n+\n@@ -966,0 +972,7 @@\n+\n+    static class Nested {}\n+    @Test\n+    @IR(failOn = {IRNode.ALLOC_OF, \"Nested\"})\n+    @IR(failOn = {IRNode.ALLOC_OF, \"AllocInstance\\\\$Nested\"})\n+    @IR(failOn = {IRNode.ALLOC_OF, \"AllocInst\\\\w+\\\\$Nested\"})\n+    public Nested allocNested() { return new Nested(); }\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+        run(LoadStore.class);\n@@ -552,0 +553,236 @@\n+\n+\/\/ Test load and store regexes\n+class LoadStore {\n+    int i;\n+    float f;\n+    interface I1 {}\n+    static class Base implements I1 {\n+        int i;\n+    }\n+    interface I2 {}\n+    static class Derived extends Base implements I2 {\n+        long l;\n+    }\n+    Base base = new Base();\n+    Derived derived = new Derived();\n+\n+    static class SingleNest {\n+        static class DoubleNest {\n+            int i;\n+        }\n+    }\n+\n+    SingleNest.DoubleNest doubleNest = new SingleNest.DoubleNest();\n+\n+\n+    @Test\n+    @IR(failOn = {IRNode.LOAD_OF_CLASS, \".*\", IRNode.STORE_OF_CLASS, \".*\"})\n+    public void triviallyFailBoth() {\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.LOAD_OF_CLASS, \"LoadS[a-z]+\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"Load.tore\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"LoadStore\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"\/LoadStore\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"tests\/LoadStore\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"\/tests\/LoadStore\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"ir_framework\/tests\/LoadStore\", \"1\",\n+            IRNode.LOAD_OF_CLASS, \"(?<=[@: ])ir_framework\/tests\/LoadStore\", \"1\",  \/\/ To assert it's the whole qualification\n+            IRNode.LOAD_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$\/]*tests[\\\\w\\\\$\/]*\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.LOAD_OF_CLASS, \"oadStore\",\n+            IRNode.LOAD_OF_CLASS, \"LoadStor\",\n+            IRNode.LOAD_OF_CLASS, \"\/ir_framework\/tests\/LoadStore\",\n+            IRNode.LOAD_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$]*tests[\\\\w\\\\$]*\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore+12 *\n+    public float simpleLoad() {\n+        return f;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.STORE_OF_CLASS, \"LoadS[a-z]+\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"Load.tore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"LoadStore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"\/LoadStore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"tests\/LoadStore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"\/tests\/LoadStore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"ir_framework\/tests\/LoadStore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"(?<=[@: ])ir_framework\/tests\/LoadStore\", \"1\",\n+            IRNode.STORE_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$\/]*tests[\\\\w\\\\$\/]*\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.STORE_OF_CLASS, \"oadStore\",\n+            IRNode.STORE_OF_CLASS, \"LoadStor\",\n+            IRNode.STORE_OF_CLASS, \"\/ir_framework\/tests\/LoadStore\",\n+            IRNode.STORE_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$]*tests[\\\\w\\\\$]*\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore+12 *\n+    public void simpleStore() {\n+        i = 1;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.LOAD_I_OF_CLASS, \"Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadS[a-z]+\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"Load.tore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadStore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\/tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"ir_framework\/tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"(?<=[@: ])ir_framework\/tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$\/]*tests[\\\\w\\\\$\/]*\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.LOAD_I_OF_CLASS, \"\/Base\",\n+            IRNode.LOAD_I_OF_CLASS, \"oadStore\\\\$Base\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadStore\\\\$Bas\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadStore\",\n+            IRNode.LOAD_I_OF_CLASS, \"\/ir_framework\/tests\/LoadStore\\\\$Base\",\n+            IRNode.LOAD_I_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$]*tests[\\\\w\\\\$]*\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore$Base (ir_framework\/tests\/LoadStore$I1)+12 *\n+    public int loadWithInterface() {\n+        return base.i;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.STORE_I_OF_CLASS, \"Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadS[a-z]+\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"Load.tore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadStore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\/tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"ir_framework\/tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"(?<=[@: ])ir_framework\/tests\/LoadStore\\\\$Base\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$\/]*tests[\\\\w\\\\$\/]*\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.STORE_I_OF_CLASS, \"\/Base\",\n+            IRNode.STORE_I_OF_CLASS, \"oadStore\\\\$Base\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadStore\\\\$Bas\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadStore\",\n+            IRNode.STORE_I_OF_CLASS, \"\/ir_framework\/tests\/LoadStore\\\\$Base\",\n+            IRNode.STORE_I_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$]*tests[\\\\w\\\\$]*\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore$Base (ir_framework\/tests\/LoadStore$I1)+12 *\n+    public void storeWithInterface() {\n+        base.i = 1;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.LOAD_L_OF_CLASS, \"Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"LoadS[a-z]+\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"Load.tore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"LoadStore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"\/tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"ir_framework\/tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"(?<=[@: ])ir_framework\/tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.LOAD_L_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$\/]*tests[\\\\w\\\\$\/]*\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.LOAD_L_OF_CLASS, \"\/Derived\",\n+            IRNode.LOAD_L_OF_CLASS, \"oadStore\\\\$Derived\",\n+            IRNode.LOAD_L_OF_CLASS, \"LoadStore\\\\$Derive\",\n+            IRNode.LOAD_L_OF_CLASS, \"LoadStore\",\n+            IRNode.LOAD_L_OF_CLASS, \"\/ir_framework\/tests\/LoadStore\\\\$Derived\",\n+            IRNode.LOAD_L_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$]*tests[\\\\w\\\\$]*\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore$Derived (ir_framework\/tests\/LoadStore$I1,ir_framework\/tests\/LoadStore$I2)+24 *\n+    public long loadWithInterfaces() {\n+        return derived.l;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.STORE_L_OF_CLASS, \"Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"LoadS[a-z]+\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"Load.tore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"LoadStore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"\/tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"ir_framework\/tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"(?<=[@: ])ir_framework\/tests\/LoadStore\\\\$Derived\", \"1\",\n+            IRNode.STORE_L_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$\/]*tests[\\\\w\\\\$\/]*\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.STORE_L_OF_CLASS, \"\/Derived\",\n+            IRNode.STORE_L_OF_CLASS, \"oadStore\\\\$Derived\",\n+            IRNode.STORE_L_OF_CLASS, \"LoadStore\\\\$Derive\",\n+            IRNode.STORE_L_OF_CLASS, \"LoadStore\",\n+            IRNode.STORE_L_OF_CLASS, \"\/ir_framework\/tests\/LoadStore\\\\$Derived\",\n+            IRNode.STORE_L_OF_CLASS, \"(?<=[@: ])[\\\\w\\\\$]*tests[\\\\w\\\\$]*\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore$Derived (ir_framework\/tests\/LoadStore$I1,ir_framework\/tests\/LoadStore$I2)+24 *\n+    public void storeWithInterfaces() {\n+        derived.l = 1;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.LOAD_I_OF_CLASS, \"DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"tests\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"\/tests\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.LOAD_I_OF_CLASS, \"ir_framework\/tests\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.LOAD_I_OF_CLASS, \"SingleNest\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadStore\",\n+            IRNode.LOAD_I_OF_CLASS, \"LoadStore\\\\$SingleNest\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore$SingleNest$DoubleNest+12 *\n+    public int loadDoubleNested() {\n+        return doubleNest.i;\n+    }\n+\n+    @Test\n+    @IR(counts = {\n+            IRNode.STORE_I_OF_CLASS, \"DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"tests\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"\/tests\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+            IRNode.STORE_I_OF_CLASS, \"ir_framework\/tests\/LoadStore\\\\$SingleNest\\\\$DoubleNest\", \"1\",\n+        },\n+        failOn = {\n+            IRNode.STORE_I_OF_CLASS, \"SingleNest\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadStore\",\n+            IRNode.STORE_I_OF_CLASS, \"LoadStore\\\\$SingleNest\",\n+        }\n+    )\n+    \/\/ @ir_framework\/tests\/LoadStore$SingleNest$DoubleNest+12 *\n+    public void storeDoubleNested() {\n+        doubleNest.i = 1;\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPhaseIRMatching.java","additions":237,"deletions":0,"binary":false,"changes":237,"status":"modified"},{"patch":"@@ -1,156 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @key headful\n- *\n- * @summary converted from VM Testbase jit\/misctests\/fpustack.\n- * VM Testbase keywords: [jit, desktop, jdk_desktop, quick]\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @run main\/othervm jit.misctests.fpustack.GraphApplet\n- *\/\n-\n-package jit.misctests.fpustack;\n-\n-import java.util.*;\n-import java.awt.*;\n-import java.applet.Applet;\n-import nsk.share.TestFailure;\n-\n-\n-public class GraphApplet extends Applet {\n-    private GraphPanel panel;\n-    private boolean isApplet = true;\n-    private boolean initialized = false;\n-\n-    \/**\n-    ** main method for testing that class\n-    **\n-    **\/\n-    public static void main( String[] args )        {\n-        Frame f = new Frame(\"GraphApplet\");\n-        GraphApplet app = new GraphApplet();\n-        app.isApplet = false;\n-        app.setSize(600,400);\n-        f.setLayout( new BorderLayout() );\n-        f.add(\"Center\",app);\n-        f.setSize(600,400);\n-\n-        app.init();\n-        \/\/      f.pack();\n-        f.show(true);\n-        app.start();\n-\n-        try {\n-            Thread.currentThread().sleep(5*1000);\n-        } catch (InterruptedException e) {\n-        }\n-\n-        f.show(false);\n-        app.stop();\n-        f.dispose();\n-        return;\n-    }\n-\n-    \/**\n-    ** init-Method in applet's lifecycle.\n-    ** the graphic panel is build up and the date is filled.\n-    **\/\n-    public synchronized void init() {\n-        System.out.println( \"GraphApplet : init\");\n-        setLayout(new BorderLayout());\n-\n-        panel = new GraphPanel(this, new layout() );\n-        fill( panel );\n-        add(\"Center\", panel);\n-        Panel p = new Panel();\n-        add(\"South\", p);\n-        initialized = true;\n-    }\n-\n-    public synchronized void start() {\n-        System.out.println( \"GraphApplet : start\");\n-        panel.formatNodes();\n-    }\n-    public synchronized void stop() {\n-        initialized = false;\n-        System.out.println( \"GraphApplet : stop\");\n-    }\n-\n-    public synchronized void destroy() {\n-        System.out.println( \"GraphApplet : destroy\");\n-    }\n-\n-    \/**\n-    ** paint the Applet\n-    **\/\n-    public synchronized void paint(Graphics g) {\n-        try {\n-            while ( ! initialized )\n-                Thread.currentThread().sleep(5);\n-        } catch (InterruptedException e) {}\n-        if (g instanceof PrintGraphics )\n-            System.out.println( \"printing GraphApplet ...\");\n-    }\n-\n-    public synchronized void print(Graphics g) {\n-        try {\n-            while ( ! initialized )\n-                Thread.currentThread().sleep(5);\n-        } catch (InterruptedException e) {}\n-        System.out.println( \"Print Applet \"  + g);\n-        panel.print(g);\n-    }\n-\n-    public void print() {\n-        \/\/ System.out.println( \"Print Applet\");\n-        Toolkit kit = getToolkit();\n-        try {\n-\n-            PrintJob job = kit.getPrintJob( new Frame(\"x\"), \"PrintableFrame print job\",\n-                                            null);\n-            \/\/ do the printing if the user didn't cancel the print job\n-            if (job != null) {\n-                Graphics g = job.getGraphics();\n-                printAll(g);                                    \/\/ not paint(g)\n-                g.dispose();                                    \/\/ finish with this page\n-                job.end();                                              \/\/ finish with the PrintJob\n-            }\n-        } catch (Exception ex) {\n-            System.out.println( \"print exception \" + ex);\n-        }\n-    }\n-\n-    \/**\n-    **\n-    ** @param      panel   the container for nodes\n-    **\n-    **\/\n-    private void\n-        fill(  GraphPanel panel )       {\n-            panel.addNodes(\"Node1\", \"Node2\", \"Node3\" );\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/misctests\/fpustack\/GraphApplet.java","additions":0,"deletions":156,"binary":false,"changes":156,"status":"deleted"},{"patch":"@@ -1,111 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jit.misctests.fpustack;\n-\n-import java.util.*;\n-import java.awt.*;\n-import java.applet.Applet;\n-import nsk.share.TestFailure;\n-\n-public class GraphPanel extends Panel {\n-    private Panel graph;                                                        \/\/ the container\n-\n-    private ilayout layout = null;  \/\/ the strategy\n-\n-\n-    private int nodesN;                                                         \/\/ number of nodes\n-    private Node nodes[] = new Node[200];                       \/\/ nodes container\n-\n-    \/**\n-    ** constructor\n-    **\n-    ** @param      Panel                   the container\n-    ** @param      layout  a strategy to layout the nodes\n-    **\n-    **\/\n-    GraphPanel(Panel graph, layout ls ) {\n-        this.graph = graph;\n-        layout = ls;\n-    }\n-\n-\n-\n-\n-    \/**\n-    ** add a node via label text.\n-    **\n-    ** @param      lbl             the label\n-    ** @return     the index of the node in array nodes[]\n-    **\n-    **\/\n-\n-    public int addNode(String lbl) {\n-        Node n = new Node();\n-        if (nodesN > 0) {\n-            n.x = nodes[nodesN-1].x + 30;\n-            n.y = nodes[nodesN-1].y + 30;\n-        }\n-        n.lbl = lbl;\n-\n-        nodes[nodesN] = n;\n-        return nodesN++;\n-    }\n-\n-\n-\n-    \/**\n-    ** add a node via label text.\n-    **\n-    ** @param      lbl             the label\n-    ** @return     the index of the node in array nodes[]\n-    **\n-    **\/\n-\n-    public void addNodes(String lb1, String lb2, String lb3) {\n-        addNode(lb1);\n-        addNode(lb2);\n-        addNode(lb3);\n-    }\n-\n-\n-\n-    \/**\n-    ** layout the nodes on the panel. the layout is used\n-    **\n-    **\n-    **\/\n-    public synchronized void formatNodes( ) {\n-\n-        \/\/ format nodes\n-        FontMetrics fm = getFontMetrics(getFont());\n-        Dimension d = getSize();\n-\n-        Node[] ns = new Node[ nodesN ];\n-        System.arraycopy(nodes, 0, ns, 0, nodesN);\n-        layout.formatNodes( ns, d, fm );\n-\n-    }\n-\n-\n-\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/misctests\/fpustack\/GraphPanel.java","additions":0,"deletions":111,"binary":false,"changes":111,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jit.misctests.fpustack;\n-\n-import nsk.share.TestFailure;\n-\n-public class Node {\n-\n-        double x = 0.0;\n-        double y = 0.0;\n-\n-        String lbl;\n-\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/misctests\/fpustack\/Node.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,33 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jit.misctests.fpustack;\n-\n-import java.util.*;\n-import java.awt.*;\n-import nsk.share.TestFailure;\n-\n-interface ilayout {\n-\n-    public void formatNodes( Node[] n, Dimension d, FontMetrics fm );\n-\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/misctests\/fpustack\/ilayout.java","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jit.misctests.fpustack;\n-\n-import java.util.*;\n-import java.awt.*;\n-import java.applet.Applet;\n-import nsk.share.TestFailure;\n-\n-public class layout implements ilayout {\n-    public  void formatNodes( Node[] nodes, Dimension d, FontMetrics fm )   {\n-        int h = d.height\/2 - 10 ;\n-\n-        double alpha = -Math.PI\/2;\n-        for ( int j = 0; j < nodes.length; j++) {\n-            Node n = nodes[j];\n-            int w = d.width\/2 - fm.stringWidth( n.lbl )\/2;\n-\n-            n.x = d.width\/2 + (int)(w*Math.cos( alpha ));\n-\n-            n.y = d.height\/2 + (int)(h*Math.sin( alpha ));\n-            alpha += 2*Math.PI\/nodes.length;\n-        }\n-    }\n-\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/misctests\/fpustack\/layout.java","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -30,1 +30,0 @@\n-* common\/misctests\/fpustack\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/removal_candidates.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment The test intentionally passes a bad argument to the function to verify error checking,\n+            which causes a false positive from the ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment The test intentionally passes a bad argument to the function to verify error checking,\n+            which causes a false positive from the ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment The test intentionally passes a bad argument to the function to verify error checking,\n+            which causes a false positive from the ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment The test intentionally passes a bad argument to the function to verify error checking,\n+            which causes a false positive from the ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment The test intentionally passes a bad argument to the function to verify error checking,\n+            which causes a false positive from the ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -240,4 +240,0 @@\n-\n-    if (!NSK_JVMTI_VERIFY(jvmti->DestroyRawMonitor(syncLock)))\n-        nsk_jvmti_setFailStatus();\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t002\/em07t002.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm nsk.monitoring.stress.thread.strace010 -depth=100 -threadCount=30\n+ * @run main\/othervm\/native nsk.monitoring.stress.thread.strace010 -depth=100 -threadCount=30\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace010\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace011\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace012\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace013\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace014\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace015\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace016\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace017\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run main\/othervm\/native\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace018\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+     * TEST: I c = new C(); c.m() ==> ICCE\n+     * TEST: J c = new C(); c.m() ==> ICCE\n@@ -98,1 +100,7 @@\n-                .throws_(IncompatibleClassChangeError.class)\n+                .throwsExact(IncompatibleClassChangeError.class)\n+            .done()\n+         .test().callSite(I, C, \"m\",\"()I\")\n+                .throwsExact(IncompatibleClassChangeError.class)\n+            .done()\n+         .test().callSite(J, C, \"m\",\"()I\")\n+                .throwsExact(IncompatibleClassChangeError.class)\n@@ -148,1 +156,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -180,1 +188,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -183,1 +191,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -186,1 +194,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -189,1 +197,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -221,1 +229,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -262,1 +270,1 @@\n-                .throws_(IncompatibleClassChangeError.class)\n+                .throwsExact(IncompatibleClassChangeError.class)\n@@ -265,1 +273,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -268,1 +276,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -310,1 +318,1 @@\n-                .throws_(IncompatibleClassChangeError.class)\n+                .throwsExact(IncompatibleClassChangeError.class)\n@@ -313,1 +321,1 @@\n-                .throws_(AbstractMethodError.class)\n+                .throwsExact(AbstractMethodError.class)\n@@ -373,1 +381,1 @@\n-                 .throws_(expectedError2)\n+                 .throwsExact(expectedError2)\n@@ -376,1 +384,1 @@\n-                 .throws_(expectedError2)\n+                 .throwsExact(expectedError2)\n@@ -379,1 +387,1 @@\n-                 .throws_(expectedError1)\n+                 .throwsExact(expectedError1)\n@@ -382,1 +390,1 @@\n-                 .throws_(expectedError1)\n+                 .throwsExact(expectedError1)\n@@ -385,1 +393,1 @@\n-                 .throws_(expectedError2)\n+                 .throwsExact(expectedError2)\n@@ -388,1 +396,1 @@\n-                 .throws_(expectedError2)\n+                 .throwsExact(expectedError2)\n@@ -489,1 +497,1 @@\n-                .throws_(NoSuchMethodError.class)\n+                .throwsExact(NoSuchMethodError.class)\n@@ -495,1 +503,1 @@\n-                .throws_(NoSuchMethodError.class)\n+                .throwsExact(NoSuchMethodError.class)\n@@ -542,1 +550,1 @@\n-                .throws_(IncompatibleClassChangeError.class)\n+                .throwsExact(IncompatibleClassChangeError.class)\n@@ -548,1 +556,1 @@\n-                .throws_(IncompatibleClassChangeError.class)\n+                .throwsExact(IncompatibleClassChangeError.class)\n@@ -554,1 +562,1 @@\n-                .throws_(IncompatibleClassChangeError.class)\n+                .throwsExact(IncompatibleClassChangeError.class)\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/runtime\/defmeth\/ConflictingDefaultsTest.java","additions":31,"deletions":23,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -122,0 +122,1 @@\n+java\/awt\/Frame\/BogusFocusableWindowState\/BogusFocusableWindowState.java 8361521 linux-all\n@@ -842,1 +843,0 @@\n-tools\/sincechecker\/modules\/java.base\/JavaBaseCheckSince.java 8358627 generic-all\n@@ -844,1 +844,0 @@\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,123 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @key headful\n- * @bug 6683728\n- * @summary Tests that a JApplet in a translucent JFrame works properly\n- * @compile -XDignore.symbol.file=true TranslucentJAppletTest.java\n- * @run main\/othervm -Dsun.java2d.uiScale=1 TranslucentJAppletTest\n- *\/\n-\n-import java.awt.*;\n-import java.awt.image.*;\n-\n-import javax.swing.*;\n-\n-public class TranslucentJAppletTest {\n-\n-    private static volatile GraphicsConfiguration graphicsConfig = null;\n-    private static JFrame frame;\n-    private static volatile boolean paintComponentCalled = false;\n-\n-    private static void initAndShowGUI() {\n-        frame = new JFrame(graphicsConfig);\n-        JApplet applet = new JApplet();\n-        applet.setBackground(new Color(0, 0, 0, 0));\n-        JPanel panel = new JPanel() {\n-            protected void paintComponent(Graphics g) {\n-                paintComponentCalled = true;\n-                g.setColor(Color.RED);\n-                g.fillOval(0, 0, getWidth(), getHeight());\n-            }\n-        };\n-        panel.setDoubleBuffered(false);\n-        panel.setOpaque(false);\n-        applet.add(panel);\n-        frame.add(applet);\n-        frame.setBounds(100, 100, 200, 200);\n-        frame.setUndecorated(true);\n-        frame.setBackground(new Color(0, 0, 0, 0));\n-        frame.setVisible(true);\n-    }\n-\n-    public static void main(String[] args)\n-        throws Exception\n-    {\n-\n-        final GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n-        for (GraphicsDevice gd : ge.getScreenDevices()) {\n-            if (gd.isWindowTranslucencySupported(\n-                        GraphicsDevice.WindowTranslucency.PERPIXEL_TRANSLUCENT))\n-            {\n-                for (GraphicsConfiguration gc : gd.getConfigurations()) {\n-                    if (gc.isTranslucencyCapable()) {\n-                        graphicsConfig = gc;\n-                        break;\n-                    }\n-                }\n-            }\n-            if (graphicsConfig != null) {\n-                break;\n-            }\n-        }\n-        if (graphicsConfig == null) {\n-            System.out.println(\"The system does not support translucency. Consider the test passed.\");\n-            return;\n-        }\n-\n-        Robot r = new Robot();\n-        Color color1 = r.getPixelColor(100, 100); \/\/ (0, 0) in frame coordinates\n-\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                initAndShowGUI();\n-            }\n-        });\n-        r.waitForIdle();\n-\n-        if (!paintComponentCalled) {\n-            throw new RuntimeException(\"Test FAILED: panel's paintComponent() method is not called\");\n-        }\n-        Thread.sleep(1500);\n-\n-        Color newColor1 = r.getPixelColor(100, 100);\n-        Color newColor2 = r.getPixelColor(200, 200);\n-\n-        \/\/ Frame must be transparent at (100, 100) in screen coords\n-        if (!color1.equals(newColor1)) {\n-            System.err.println(\"color1 = \" + color1);\n-            System.err.println(\"newColor1 = \" + newColor1);\n-            throw new RuntimeException(\"Test FAILED: frame pixel at (0, 0) is not transparent\");\n-        }\n-\n-        \/\/ Frame must be RED at (200, 200) in screen coords\n-        if (!newColor2.equals(Color.RED)) {\n-            System.err.println(\"newColor2 = \" + newColor2);\n-            throw new RuntimeException(\"Test FAILED: frame pixel at (100, 100) is not red (transparent?)\");\n-        }\n-\n-        System.out.println(\"Test PASSED\");\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Window\/TranslucentJAppletTest\/TranslucentJAppletTest.java","additions":0,"deletions":123,"binary":false,"changes":123,"status":"deleted"},{"patch":"@@ -1,93 +0,0 @@\n-\/*\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.AWTException;\n-import java.awt.BufferCapabilities;\n-import java.awt.BufferCapabilities.FlipContents;\n-import java.awt.Frame;\n-import java.awt.ImageCapabilities;\n-import java.util.HashSet;\n-import java.util.Set;\n-\n-import sun.awt.AWTAccessor;\n-import sun.awt.AWTAccessor.ComponentAccessor;\n-\n-import static java.awt.BufferCapabilities.FlipContents.BACKGROUND;\n-import static java.awt.BufferCapabilities.FlipContents.COPIED;\n-import static java.awt.BufferCapabilities.FlipContents.PRIOR;\n-import static java.awt.BufferCapabilities.FlipContents.UNDEFINED;\n-\n-\/**\n- * @test\n- * @key headful\n- * @bug 8130390 8134732\n- * @summary Applet fails to launch on virtual desktop\n- * @modules java.desktop\/sun.awt\n- * @author Semyon Sadetsky\n- *\/\n-public final class AppletFlipBuffer {\n-\n-    static final ImageCapabilities[] ics = {new ImageCapabilities(true),\n-                                            new ImageCapabilities(false)};\n-    static final FlipContents[] cntx = {UNDEFINED, BACKGROUND, PRIOR, COPIED};\n-    static final Set<BufferCapabilities> bcs = new HashSet<>();\n-\n-    static {\n-        for (final ImageCapabilities icFront : ics) {\n-            for (final ImageCapabilities icBack : ics) {\n-                for (final FlipContents cnt : cntx) {\n-                    bcs.add(new BufferCapabilities(icFront, icBack, cnt));\n-                }\n-            }\n-        }\n-    }\n-\n-    public static void main(final String[] args) throws Exception {\n-        Applet applet = new Applet();\n-        Frame frame = new Frame();\n-        try {\n-            frame.setSize(10, 10);\n-            frame.add(applet);\n-            frame.setUndecorated(true);\n-            frame.setVisible(true);\n-            test(applet);\n-            System.out.println(\"ok\");\n-        } finally {\n-            frame.dispose();\n-        }\n-    }\n-\n-    private static void test(final Applet applet) {\n-        ComponentAccessor acc = AWTAccessor.getComponentAccessor();\n-        for (int i = 1; i < 10; ++i) {\n-            for (final BufferCapabilities caps : bcs) {\n-                try {\n-                    acc.createBufferStrategy(applet, i, caps);\n-                } catch (final AWTException ignored) {\n-                    \/\/ this kind of buffer strategy is not supported\n-                }\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/applet\/Applet\/AppletFlipBuffer.java","additions":0,"deletions":93,"binary":false,"changes":93,"status":"deleted"},{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.HeadlessException;\n-\n-\/*\n- * @test\n- * @summary Check HeadlessException occurrence when trying to create Applet\n- *          in headless mode\n- * @run main\/othervm -Djava.awt.headless=true HeadlessApplet\n- *\/\n-\n-public class HeadlessApplet {\n-\n-    public static void main(String args[]) {\n-        boolean noExceptions = true;\n-\n-        try {\n-            Applet a = new Applet();\n-        } catch (HeadlessException e) {\n-            noExceptions = false;\n-        }\n-\n-        if (noExceptions) {\n-            throw new RuntimeException(\"No HeadlessException occured when creating Applet in headless mode\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/applet\/Applet\/HeadlessApplet.java","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-  @bug 5013984\n+  @bug 5013984 8360647\n@@ -40,1 +40,1 @@\n-    HashMap<Integer, Character> transMap = new HashMap();\n+    HashMap<Integer, Character> transMap = new HashMap<>();\n@@ -50,2 +50,2 @@\n-        Object value = transMap.get(e.getKeyCode());\n-        if (value != null && e.getKeyChar() != ((Character)value).charValue()) {\n+        Character value = transMap.get(e.getKeyCode());\n+        if (value != null && e.getKeyChar() != value) {\n@@ -57,1 +57,14 @@\n-    public void start () {\n+    private void testKeyRange(Robot robot, int start, int end) {\n+        System.out.printf(\"\\nTesting range on %d to %d\\n\", start, end);\n+        for(int vkey = start; vkey <= end; vkey++) {\n+            try {\n+                robot.keyPress(vkey);\n+                robot.keyRelease(vkey);\n+                System.out.println(KeyEvent.getKeyText(vkey) + \" \" + vkey);\n+            } catch (RuntimeException ignored) {}\n+        }\n+        robot.delay(100);\n+    }\n+\n+    public void start() throws Exception {\n+        Robot robot = new Robot();\n@@ -64,0 +77,1 @@\n+        boolean wasNumlockPressed = false;\n@@ -65,1 +79,0 @@\n-            Robot robot = new Robot();\n@@ -75,9 +88,8 @@\n-            for(int vkey = 0x20; vkey < 0x7F; vkey++) {\n-                try {\n-                    robot.keyPress(vkey);\n-                    robot.keyRelease(vkey);\n-                    System.out.println(KeyEvent.getKeyText(vkey) + \" \" + vkey);\n-                } catch (RuntimeException e) {\n-                }\n-            }\n-            robot.delay(100);\n+            testKeyRange(robot, 0x20, 0x7E);\n+\n+            \/\/ Try again with a different numpad state.\n+            robot.keyPress(KeyEvent.VK_NUM_LOCK);\n+            robot.keyRelease(KeyEvent.VK_NUM_LOCK);\n+            wasNumlockPressed = true;\n+\n+            testKeyRange(robot, KeyEvent.VK_NUMPAD0, KeyEvent.VK_DIVIDE);\n@@ -85,1 +97,0 @@\n-            e.printStackTrace();\n@@ -87,0 +98,5 @@\n+        } finally {\n+            if (wasNumlockPressed) {\n+                robot.keyPress(KeyEvent.VK_NUM_LOCK);\n+                robot.keyRelease(KeyEvent.VK_NUM_LOCK);\n+            }\n@@ -90,1 +106,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/KeyCharTest\/KeyCharTest.java","additions":34,"deletions":18,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import javax.swing.JApplet;\n@@ -64,1 +63,1 @@\n-        test(null, JApplet.class, JButton.class, JCheckBox.class);\n+        test(null, JButton.class, JCheckBox.class);\n","filename":"test\/jdk\/java\/beans\/Introspector\/4520754\/Test4520754.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/manual TestIntrospector\n+ * @run main TestIntrospector\n@@ -46,1 +46,0 @@\n-            javax.swing.JApplet.class,\n","filename":"test\/jdk\/java\/beans\/Performance\/TestIntrospector.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import javax.swing.JApplet;\n@@ -73,1 +72,0 @@\n-            JApplet.class,\n","filename":"test\/jdk\/java\/beans\/PropertyChangeSupport\/Test4682386.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 4842706 8024695\n+ * @bug 4842706 8024695 8361587\n@@ -39,0 +39,1 @@\n+import java.util.List;\n@@ -40,0 +41,1 @@\n+import java.util.stream.Collectors;\n@@ -45,1 +47,0 @@\n-import org.junit.jupiter.api.condition.EnabledOnOs;\n@@ -108,0 +109,5 @@\n+    @Test\n+    public void getAbsoluteFile() {\n+        assertEquals(p.toAbsolutePath().toFile(), f.getAbsoluteFile());\n+    }\n+\n@@ -115,0 +121,10 @@\n+    @Test\n+    public void getCanonicalFile() throws IOException {\n+        assertEquals(p.toRealPath().toFile(), f.getCanonicalFile());\n+    }\n+\n+    @Test\n+    public void getCanonicalPath() throws IOException {\n+        assertEquals(p.toRealPath().toString(), f.getCanonicalPath());\n+    }\n+\n@@ -139,0 +155,5 @@\n+    @Test\n+    public void getParentFile() {\n+        assertNull(f.getParentFile());\n+    }\n+\n@@ -201,0 +222,34 @@\n+    @Test\n+    public void listFiles() throws IOException {\n+        File child = new File(f.getAbsoluteFile(), \"child\");\n+        assertTrue(child.createNewFile());\n+        child.deleteOnExit();\n+\n+        File[] files = f.listFiles();\n+        for (File file : files)\n+            assertEquals(-1, f.toString().indexOf(File.separatorChar));\n+\n+        Set<String> ioSet = Arrays.stream(files)\n+            .map(File::getName)\n+            .collect(Collectors.toSet());\n+\n+        assertTrue(ioSet.contains(child.getName()));\n+\n+        Set<String> nioSet = Files.list(p)\n+            .map(Path::getFileName)\n+            .map(Path::toString)\n+            .collect(Collectors.toSet());\n+        assertEquals(nioSet, ioSet);\n+    }\n+\n+    @Test\n+    public void listRoots() {\n+        Set<String> expected = Arrays.stream(f.getAbsoluteFile().listRoots())\n+            .map(File::toString)\n+            .collect(Collectors.toSet());\n+        Set<String> actual = Arrays.stream(f.listRoots())\n+            .map(File::toString)\n+            .collect(Collectors.toSet());\n+        assertEquals(expected, actual);\n+    }\n+\n@@ -206,0 +261,12 @@\n+    @Test\n+    public void mkdirs() {\n+        assertFalse(f.mkdirs());\n+    }\n+\n+    @Test\n+    public void renameTo() throws IOException {\n+        File tmp = File.createTempFile(\"foo\", \"bar\", f.getAbsoluteFile());\n+        assertTrue(tmp.exists());\n+        assertFalse(f.renameTo(tmp));\n+    }\n+\n@@ -274,0 +341,6 @@\n+    @Test\n+    public String toString() {\n+        assertEquals(EMPTY_STRING, f.toString());\n+        return EMPTY_STRING;\n+    }\n+\n","filename":"test\/jdk\/java\/io\/File\/EmptyPath.java","additions":75,"deletions":2,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4851642 8253409\n+ * @bug 4851642 8253409 8362207\n@@ -355,2 +355,3 @@\n-            \/\/ Double-rounding if done in double precision\n-            {0x1.fffffep23f, 0x1.000004p28f, 0x1.fep5f, 0x1.000002p52f}\n+            \/\/ Double-rounding if done in double precision and\/or double fma\n+            {0x1.fffffep23f, 0x1.000004p28f, 0x1.fep5f, 0x1.000002p52f},\n+            {0x1.001p0f,     0x1.001p0f,     0x1p-100f, 0x1.002002p0f},\n","filename":"test\/jdk\/java\/lang\/Math\/FusedMultiplyAddTests.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -264,2 +264,3 @@\n-                \/\/ The test server does not support PROXY305 properly\n-                if (authType == DigestEchoServer.HttpAuthType.PROXY305) continue;\n+                \/\/ The test server does not support PROXY305 or SERVER307 properly\n+                if (authType == DigestEchoServer.HttpAuthType.PROXY305 ||\n+                    authType == DigestEchoServer.HttpAuthType.SERVER307) continue;\n","filename":"test\/jdk\/java\/net\/httpclient\/DigestEchoClient.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,165 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary tests RegExp unicode case-insensitive match (?ui)\n+ * @bug 8360459\n+ * @library \/lib\/testlibrary\/java\/lang\n+ * @run junit CaseFoldingTest\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.util.ArrayList;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class CaseFoldingTest {\n+\n+    @Test\n+    void testUnicodeCaseInsensitiveMatch() throws Throwable {\n+        var testAll = true;   \/\/ true to test all codepoints defined in CaseFolding.txt\n+        var verbose = true;   \/\/ true to display all codepoints being tested\n+        var filter = \"^.*; [CTS]; .*$\";  \/\/ update C,T,S to test different type\n+        var excluded = Set.of(\n+            \/\/ these 'S' characters failed for known reason. they don't map to their\n+            \/\/ folding form with toUpperCase or toLowerCase, only map with case-folding.\n+            \/\/ exclude them for now.\n+            0x1fd3,  \/\/ 1FD3 [lo: 1fd3, up: 1fd3]  0390 [lo: 0390, up: 0390]\n+            0x1fe3,  \/\/ 1FE3 [lo: 1fe3, up: 1fe3]  03B0 [lo: 03b0, up: 03b0]\n+            0xfb05   \/\/ FB05 [lo: fb05, up: fb05]  FB06 [lo: fb06, up: fb06]\n+        );\n+\n+        var results = Files.lines(UCDFiles.CASEFOLDING)\n+            .filter(line -> !line.startsWith(\"#\") && line.matches(filter))\n+            .map(line -> {\n+                var strs = line.split(\"; \");\n+                return new String[] {strs[0], strs[1], strs[2]};\n+            })\n+            .filter(cps -> {\n+                var cp1 = Integer.parseInt(cps[0], 16);\n+                var cp2 = Integer.parseInt(cps[2], 16);\n+                if (excluded.contains(cp1))\n+                    return false;\n+                if (testAll) {\n+                    return true;\n+                }\n+                \/\/ the folding codepoint doesn't map back to the original codepoint.\n+                return Character.toUpperCase(cp2) != cp1 && Character.toLowerCase(cp2) != cp1;\n+            })\n+            .flatMap(cps -> {\n+                \/\/ test slice, single & range\n+                var cp = Integer.parseInt(cps[0], 16);\n+                var folding = Integer.parseInt(cps[2], 16);\n+                var errors = testCaseFolding(cp, folding);\n+                if (verbose)\n+                    System.out.format(\" [%s] %s [lo: %04x, up: %04x]  %s [lo: %04x, up: %04x]\\n\",\n+                        cps[1],\n+                        cps[0],\n+                        Character.toLowerCase(cp),\n+                        Character.toUpperCase(cp),\n+                        cps[2],\n+                        Character.toLowerCase(folding),\n+                        Character.toUpperCase(folding)\n+                    );\n+                errors.forEach(error -> System.out.print(error));\n+                return errors.stream();\n+            })\n+            .collect(Collectors.toList());\n+        assertEquals(results.size(), 0);\n+    }\n+\n+    private static ArrayList<String> testCaseFolding(int cp, int folding) {\n+        ArrayList<String> errors = new ArrayList<>();\n+        testCaseFolding0(cp, folding, errors, \"s-t\");\n+        testCaseFolding0(folding, cp, errors, \"t-s\");\n+        \/\/ test all uppercase, lowercase combinations\n+        var up = Character.toUpperCase(cp);\n+        var lo = Character.toLowerCase(cp);\n+        var folding_up = Character.toUpperCase(folding);  \/\/ folding should be normally lowercase\n+        if (up != cp) {\n+            testCaseFolding0(up, folding, errors, \"s(u)-t\");\n+            testCaseFolding0(folding, up, errors, \"t-s(u)\");\n+            if (folding_up != folding) {\n+                testCaseFolding0(up, folding_up, errors, \"s(u)-t(u)\");\n+                testCaseFolding0(folding_up, up, errors, \"t(u)-s(u)\");\n+            }\n+        }\n+        if (lo != cp) {\n+            testCaseFolding0(lo, folding, errors, \"s(l)-t\");\n+            testCaseFolding0(folding, lo, errors, \"t-s(l)\");\n+            if (folding_up != folding) {\n+                testCaseFolding0(lo, folding_up, errors, \"s(l)-t(u)\");\n+                testCaseFolding0(folding_up, lo, errors, \"t(u)-s(l)\");\n+            }\n+        }\n+        return errors;\n+    }\n+\n+    private static void testCaseFolding0(int cp, int folding, ArrayList<String> errors, String type) {\n+        var cp_str = Character.isSupplementaryCodePoint(cp)\n+            ? String.format(\"\\\\u%04x\\\\u%04x\", (int)Character.highSurrogate(cp), (int)Character.lowSurrogate(cp))\n+            : String.format(\"\\\\u%04x\", cp);\n+\n+        var t = new String(Character.toChars(folding));\n+        var p = String.format(\"(?iu)%s\", cp_str);\n+\n+        if (Pattern.compile(p).matcher(t).matches() == false) {\n+            errors.add(String.format(\"     [FAILED] slice:  %-20s  t: u+%04x  (%s)\\n\", p, folding, type));\n+        }\n+\n+        p = String.format(\"(?iu)[%s]\", cp_str);\n+        if (Pattern.compile(p).matcher(t).matches() == false) {\n+            errors.add(String.format(\"     [FAILED] single: %-20s  t: u+%04x  (%s)\\n\", p, folding, type));\n+        }\n+\n+        p = String.format(\"(?iu)[%s-%s]\", cp_str, cp_str);\n+        if (Pattern.compile(p).matcher(t).matches() == false) {\n+            errors.add(String.format(\"     [FAILED] range:  %-20s  t: u+%04x  (%s)\\n\", p, folding, type));\n+        }\n+\n+        \/\/ small range\n+        var end_cp = cp + 16;\n+        var end_cp_str = Character.isSupplementaryCodePoint(end_cp)\n+                ? String.format(\"\\\\u%04x\\\\u%04x\", (int)Character.highSurrogate(end_cp), (int)Character.lowSurrogate(end_cp))\n+                : String.format(\"\\\\u%04x\", end_cp);\n+        p = String.format(\"(?iu)[%s-%s]\", cp_str, end_cp_str);\n+        if (Pattern.compile(p).matcher(t).matches() == false) {\n+            errors.add(String.format(\"     [FAILED] range:  %-20s  t: u+%04x  (%s)\\n\", p, folding, type));\n+        }\n+\n+        end_cp = cp + 128;  \/\/ bigger than the expanded_casefolding_map.\n+        end_cp_str = Character.isSupplementaryCodePoint(end_cp)\n+                ? String.format(\"\\\\u%04x\\\\u%04x\", (int)Character.highSurrogate(end_cp), (int)Character.lowSurrogate(end_cp))\n+                : String.format(\"\\\\u%04x\", end_cp);\n+        p = String.format(\"(?iu)[%s-%s]\", cp_str, end_cp_str);\n+        if (Pattern.compile(p).matcher(t).matches() == false) {\n+            errors.add(String.format(\"     [FAILED] range:  %-20s  t: u+%04x  (%s)\\n\", p, folding, type));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/regex\/CaseFoldingTest.java","additions":165,"deletions":0,"binary":false,"changes":165,"status":"added"},{"patch":"@@ -1276,0 +1276,25 @@\n+\n+\/\/\n+(?ui)\\u00df\n+\\u1e9e\n+true \\u1e9e 0\n+\n+(?ui)[\\u00df]\n+\\u1e9e\n+true \\u1e9e 0\n+\n+(?ui)[\\u00df-\\u00df]\n+\\u1e9e\n+true \\u1e9e 0\n+\n+(?ui)\\u1e9e\n+\\u00df\n+true \\u00df 0\n+\n+(?ui)[\\u1e9e]\n+\\u00df\n+true \\u00df 0\n+\n+(?ui)[\\u1e9e-\\u1e9e]\n+\\u00df\n+true \\u00df 0\n","filename":"test\/jdk\/java\/util\/regex\/TestCases.txt","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"filename":"test\/jdk\/javax\/crypto\/SecretKeyFactory\/P1.jar","binary":true,"status":"modified"},{"filename":"test\/jdk\/javax\/crypto\/SecretKeyFactory\/P2.jar","binary":true,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6336968\n+ * @bug 6336968 8359809\n@@ -41,1 +41,1 @@\n-        \/\/ Test calling asList after adding non-Attribute by various means\n+        \/\/ Test adding non-Attribute by various means\n@@ -44,3 +44,3 @@\n-            alist.add(new Attribute(\"foo\", \"bar\"));\n-            doOp(alist, op);\n-            String what = \"asList() after calling \" + op + \" with non-Attribute\";\n+            alist.add(new Attribute(\"foo\", \"bar\")); \/\/ Add actual Attribute\n+            alist.add(null);\n+            String what = \"Using \" + op + \" with non-Attribute\";\n@@ -48,15 +48,1 @@\n-                List<Attribute> lista = alist.asList();\n-                fail(what + \": succeeded but should not have\");\n-            } catch (IllegalArgumentException e) {\n-                System.out.println(\"OK: \" + what + \": got IllegalArgumentException\");\n-            }\n-        }\n-\n-        \/\/ Test adding non-Attribute by various means after calling asList\n-        for (Op op : Op.values()) {\n-            AttributeList alist = new AttributeList();\n-            List<Attribute> lista = alist.asList();\n-            lista.add(new Attribute(\"foo\", \"bar\"));\n-            String what = op + \" with non-Attribute after calling asList()\";\n-            try {\n-                doOp(alist, op);\n+                doOp(alist, op); \/\/ Add some other non-Attribute, should fail\n","filename":"test\/jdk\/javax\/management\/MBeanServer\/AttributeListTypeSafeTest.java","additions":7,"deletions":21,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import javax.management.modelmbean.XMLParseException;\n@@ -103,1 +102,0 @@\n-        exceptions.add(new XMLParseException());\n","filename":"test\/jdk\/javax\/management\/MBeanServer\/ExceptionFactory.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,2 @@\n- * @bug 6250772\n- * @summary Test that *List objects are checked after asList is called.\n+ * @bug 6250772 8359809\n+ * @summary Test that *List objects are checked\n@@ -42,4 +42,4 @@\n- * logically they should extend ArrayList<Attribute> etc.  They are\n- * all specified to have a method asList() with return type\n- * List<Attribute> etc, and to refuse to add any object other than\n- * an Attribute etc once this method has been called, but not before.\n+ * logically they should extend ArrayList<Attribute> etc.\n+ *\n+ * Before JDK-8359809, their method asList() had to be called, to make\n+ * the class refuse to add any object other than the intended type.\n@@ -52,2 +52,7 @@\n-        for (Class c : classes)\n-            test((Class<? extends ArrayList>) c);\n+        Object[] objects =  {\n+            new Attribute(\"myAttr\", \"myVal\"), new Role(\"myRole\", new ArrayList<ObjectName>()),\n+            new RoleUnresolved(\"myRoleUnresolved\", new ArrayList<ObjectName>(), RoleStatus.NO_ROLE_WITH_NAME)\n+        };\n+        for (int i = 0; i < classes.length; i++) {\n+            test((Class<? extends ArrayList>) classes[i], objects[i]);\n+        }\n@@ -56,1 +61,1 @@\n-    private static void test(Class<? extends ArrayList> c) throws Exception {\n+    private static void test(Class<? extends ArrayList> c, Object o) throws Exception {\n@@ -59,1 +64,1 @@\n-        test(al);\n+        test(al, o);\n@@ -62,2 +67,2 @@\n-    private static void test(ArrayList al) throws Exception {\n-        test(al, true);\n+    private static void test(ArrayList al, Object o) throws Exception {\n+        test0(al, o);\n@@ -66,2 +71,2 @@\n-        m.invoke(al);\n-        test(al, false);\n+        m.invoke(al); \/\/ Calling asList() does not change behaviour\n+        test0(al, o);\n@@ -70,2 +75,2 @@\n-    private static void test(ArrayList al, boolean allowsBogus) throws Exception {\n-        for (int i = 0; i < 5; i++) {\n+    private static void test0(ArrayList al, Object o) throws Exception {\n+        for (int i = 0; i < 7; i++) {\n@@ -75,0 +80,1 @@\n+                        \/\/ Add the wrong kind of element, will fail:\n@@ -89,0 +95,14 @@\n+                    case 5:\n+                        \/\/ Add the correct kind of element, so we can test ListIterator.\n+                        al.add(o);\n+                        ListIterator iter = al.listIterator();\n+                        Object x = iter.next();\n+                        iter.set(\"blah\"); \/\/ Test \"set\", should fail like the others.\n+                        break;\n+                    case 6:\n+                        \/\/ Add the correct kind of element, so we can test ListIterator.\n+                        al.add(o);\n+                        ListIterator iter2 = al.listIterator();\n+                        Object x2 = iter2.next();\n+                        iter2.add(\"blah\"); \/\/ Test \"add\", should fail like the others.\n+                        break;\n@@ -92,2 +112,2 @@\n-                if (!allowsBogus)\n-                    throw new Exception(\"op allowed but should fail\");\n+                \/\/ All cases above should have caused an Exception:\n+                throw new Exception(\"op \" + i + \" allowed but should fail on \" + al.getClass());\n@@ -95,2 +115,1 @@\n-                if (allowsBogus)\n-                    throw new Exception(\"got exception but should not\", e);\n+                System.out.println(\"op \" + i + \" got expected \" + e + \" on \" + al.getClass());\n","filename":"test\/jdk\/javax\/management\/generified\/ListTypeCheckTest.java","additions":40,"deletions":21,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -186,3 +186,0 @@\n-        ok &= caseTest(new DescriptorSupport(d1.toXMLString()),\n-                       \"DescriptorSupport(String)\");\n-        d1 = new DescriptorSupport(new String[] {\"NAME=blah\"});\n","filename":"test\/jdk\/javax\/management\/modelmbean\/DescriptorSupportTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,176 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 4957393\n- * @summary Test that DescriptorSupport.toXMLString() can be used to\n- * reconstruct an equivalent DescriptorSupport\n- * @author Eamonn McManus\n- *\n- * @run clean DescriptorSupportXMLTest\n- * @run build DescriptorSupportXMLTest\n- * @run main DescriptorSupportXMLTest\n- *\/\n-\n-import java.util.Arrays;\n-\n-import javax.management.RuntimeOperationsException;\n-import javax.management.modelmbean.DescriptorSupport;\n-\n-public class DescriptorSupportXMLTest {\n-    public static void main(String[] args) throws Exception {\n-        System.out.println(\"Testing that DescriptorSupport.toXMLString() \" +\n-                           \"can be used to reconstruct an equivalent \" +\n-                           \"DescriptorSupport\");\n-        int failed = 0;\n-\n-        final Object[] testValues = {\n-            \/\/ Values that should be encodable.\n-            \"\",\n-            \"ok\",\n-            \"null\",\n-            \"(open\",\n-            \"close)\",\n-            \"(parens)\",\n-            \"quote\\\"quote\",\n-            \"a description with several words\",\n-            \"magic&\\\"\\\\<> \\r\\t\\n\\f;&;magic\",\n-            \"&lt;descriptor&gt;&&&&lt;\/descriptor&gt;\",\n-            \"&lt;descriptor&gt;&&&&lt;\/blahblahblah&gt;\",\n-            null,\n-            new Integer(10),\n-            Boolean.TRUE,\n-            new Float(1.0f),\n-\n-            \/\/ Values that are not encodable: it is important that we throw\n-            \/\/ an exception during encoding rather than waiting until decode\n-            \/\/ time to discover the problem.  These classes are not encodable\n-            \/\/ because they don't have a (String) constructor.\n-            new Character('!'),\n-            new java.util.HashMap(),\n-        };\n-\n-        for (int i = 0; i < testValues.length; i++) {\n-            final Object v = testValues[i];\n-            final String what =\n-                (v == null) ? \"null\" :\n-                (v.getClass().getName() + \"{\" + v + \"}\");\n-\n-            final DescriptorSupport in =\n-                new DescriptorSupport(new String[] {\"bloo\"}, new Object[] {v});\n-\n-            final String xml;\n-            try {\n-                xml = in.toXMLString();\n-            } catch (RuntimeOperationsException e) {\n-                final Throwable cause = e.getCause();\n-                if (cause instanceof IllegalArgumentException) {\n-                    System.out.println(\"OK: \" + what + \": got a \" +\n-                                       \"RuntimeOperationsException wrapping \" +\n-                                       \"an IllegalArgumentException: \" +\n-                                       cause.getMessage());\n-                } else {\n-                    final String causeString =\n-                        (cause == null) ? \"null\" : cause.getClass().getName();\n-                    System.out.println(\"FAILED: \" + what + \": got a \" +\n-                                       \"RuntimeOperationException wrapping \" +\n-                                       causeString);\n-                    failed++;\n-                }\n-                continue;\n-            }\n-\n-            System.out.println(\"Encoded \" + what + \" as \" + xml);\n-\n-            final DescriptorSupport out;\n-            try {\n-                out = new DescriptorSupport(xml);\n-            } catch (Exception e) {\n-                System.out.println(\"FAILED: \" + what + \": got an exception:\");\n-                e.printStackTrace(System.out);\n-                failed++;\n-                continue;\n-            }\n-\n-            final String[] names = out.getFieldNames();\n-            if (names.length != 1 || !\"bloo\".equals(names[0])) {\n-                System.out.println(\"FAILED: decoded names wrong: \" +\n-                                   Arrays.asList(names));\n-                failed++;\n-                continue;\n-            }\n-\n-            final Object[] values = out.getFieldValues(names);\n-            if (values.length != 1) {\n-                System.out.println(\"FAILED: wrong number of values: \" +\n-                                   Arrays.asList(values));\n-                failed++;\n-                continue;\n-            }\n-\n-            final Object outValue = values[0];\n-\n-            if (v == null) {\n-                if (outValue == null)\n-                    System.out.println(\"OK: decoded null value\");\n-                else {\n-                    System.out.println(\"FAILED: decoded null value as \" +\n-                                       outValue.getClass().getName() + \"{\" +\n-                                       outValue + \"}\");\n-                    failed++;\n-                }\n-                continue;\n-            }\n-\n-            if (outValue == null) {\n-                System.out.println(\"FAILED: decoded non-null value as null\");\n-                failed++;\n-                continue;\n-            }\n-\n-            if (v.getClass() != outValue.getClass()) {\n-                System.out.println(\"FAILED: decoded value has class \" +\n-                                   outValue.getClass().getName() + \"{\" +\n-                                   outValue + \"}\");\n-                failed++;\n-                continue;\n-            }\n-\n-            if (v.equals(outValue))\n-                System.out.println(\"OK: decoded value is equal to original\");\n-            else {\n-                System.out.println(\"FAILED: decoded value is different: {\" +\n-                                   outValue + \"}\");\n-                failed++;\n-            }\n-        }\n-\n-        if (failed == 0)\n-            System.out.println(\"OK: all tests passed\");\n-        else {\n-            System.out.println(\"TEST FAILED: fail count: \" + failed);\n-            System.exit(1);\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/modelmbean\/DescriptorSupportXMLTest.java","additions":0,"deletions":176,"binary":false,"changes":176,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-        \"DescriptorSupport(String)\",\n@@ -75,3 +74,0 @@\n-                        ds = new DescriptorSupport(new DescriptorSupport().toXMLString());\n-                        break;\n-                    case 3:\n@@ -80,1 +76,1 @@\n-                    case 4:\n+                    case 3:\n@@ -83,1 +79,1 @@\n-                    case 5:\n+                    case 4:\n@@ -86,1 +82,1 @@\n-                    case 6:\n+                    case 5:\n","filename":"test\/jdk\/javax\/management\/modelmbean\/LoggingExceptionTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.applet.AudioClip;\n@@ -34,0 +33,1 @@\n+import javax.sound.SoundClip;\n@@ -47,2 +47,2 @@\n- * @bug 8204454\n- * @summary URL.getContent() should return AudioClip for supported formats\n+ * @bug 8204454 8359053\n+ * @summary URL.getContent() should return SoundClip for supported formats\n@@ -80,1 +80,1 @@\n-                AudioClip content;\n+                SoundClip content;\n@@ -82,2 +82,2 @@\n-                    content = (AudioClip) file.toURL().getContent();\n-                    \/\/ We need to generate OOM because the stream in AudioClip\n+                    content = (SoundClip) file.toURL().getContent();\n+                    \/\/ We need to generate OOM because the stream in SoundClip\n","filename":"test\/jdk\/javax\/sound\/sampled\/Clip\/AudioContentHandlers.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.applet.AudioClip;\n@@ -32,0 +31,1 @@\n+import javax.sound.SoundClip;\n@@ -69,1 +69,1 @@\n-        AudioClip clip = (AudioClip) file.toURL().getContent();\n+        SoundClip clip = SoundClip.createSoundClip(file);\n@@ -83,1 +83,1 @@\n-        AudioClip clip = (AudioClip) file.toURL().getContent();\n+        SoundClip clip = SoundClip.createSoundClip(file);\n","filename":"test\/jdk\/javax\/sound\/sampled\/Clip\/AutoCloseTimeCheck.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-import java.applet.AudioClip;\n+import javax.sound.SoundClip;\n@@ -73,1 +73,1 @@\n-        AudioClip clip = (AudioClip) file.toURL().getContent();\n+        SoundClip clip = SoundClip.createSoundClip(file);\n","filename":"test\/jdk\/javax\/sound\/sampled\/Clip\/DataPusherThreadCheck.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import javax.swing.JApplet;\n-import java.awt.HeadlessException;\n-\n-\/*\n- * @test\n- * @summary Check that JApplet constructor throws HeadlessException in headless mode\n- * @run main\/othervm -Djava.awt.headless=true HeadlessJApplet\n- *\/\n-\n-public class HeadlessJApplet {\n-    public static void main(String args[]) {\n-        boolean exceptions = false;\n-        try {\n-            new JApplet();\n-        } catch (HeadlessException e) {\n-            exceptions = true;\n-        }\n-        if (!exceptions)\n-            throw new RuntimeException(\"HeadlessException did not occur when expected\");\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/Headless\/HeadlessJApplet.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304031 8338406 8338546\n+ * @bug 8304031 8338406 8338546 8361909\n@@ -61,0 +61,7 @@\n+    @Test\n+    void testNulls() {\n+        var cpb = ConstantPoolBuilder.of();\n+        assertThrows(NullPointerException.class, () -> cpb.loadableConstantEntry(null));\n+        assertThrows(NullPointerException.class, () -> cpb.constantValueEntry(null));\n+    }\n+\n","filename":"test\/jdk\/jdk\/classfile\/ConstantDescSymbolsTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @bug 8361908\n@@ -31,0 +32,1 @@\n+import java.lang.classfile.instruction.ExceptionCatch;\n@@ -35,0 +37,1 @@\n+import java.util.Optional;\n@@ -44,0 +47,2 @@\n+import static java.lang.constant.ConstantDescs.*;\n+\n@@ -74,0 +79,15 @@\n+    @Test \/\/ JDK-8361908\n+    void testFilterMixedExceptionCatch() {\n+        var cc = ClassFile.of(ClassFile.DeadLabelsOption.DROP_DEAD_LABELS);\n+        var code = cc.parse(cc.build(CD_Void, clb ->\n+                clb.withMethodBody(\"m\", MTD_void, 0, cob -> {\n+                    cob.return_();\n+                    var l = cob.newBoundLabel();\n+                    cob.pop().return_();\n+                    cob.exceptionCatch(cob.startLabel(), l, l, Optional.empty());\n+                    cob.exceptionCatch(cob.newLabel(), l, l, CD_Exception);\n+                }))).methods().get(0).code().get();\n+        assertEquals(1, code.exceptionHandlers().size(), () -> code.exceptionHandlers().toString());\n+        assertEquals(Optional.empty(), code.exceptionHandlers().getFirst().catchType());\n+    }\n+\n","filename":"test\/jdk\/jdk\/classfile\/FilterDeadLabelsTest.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8341277\n+ * @bug 8341277 8361102\n@@ -35,2 +35,1 @@\n-import java.lang.constant.ClassDesc;\n-import java.lang.reflect.Parameter;\n+import java.util.Collections;\n@@ -42,0 +41,1 @@\n+import helpers.TestUtil;\n@@ -45,1 +45,0 @@\n-import static java.lang.classfile.ClassFile.ACC_STATIC;\n@@ -47,0 +46,1 @@\n+import static helpers.TestConstants.*;\n@@ -53,0 +53,53 @@\n+    @Test\n+    void testOpcodeInCodeBuilder() {\n+        TestUtil.runCodeHandler(cob -> {\n+            var mref = cob.constantPool().methodRefEntry(CD_System, \"exit\", MTD_INT_VOID);\n+            var fref = cob.constantPool().fieldRefEntry(CD_System, \"out\", CD_PrintStream);\n+            var label = cob.newLabel();\n+\n+            \/\/ Sanity\n+            cob.iconst_0();\n+            assertDoesNotThrow(() -> cob.invoke(INVOKESTATIC, mref));\n+            assertDoesNotThrow(() -> cob.fieldAccess(GETSTATIC, fref));\n+            cob.pop();\n+            assertDoesNotThrow(() -> cob.branch(GOTO, label));\n+\n+            \/\/ Opcode NPE\n+            assertThrows(NullPointerException.class, () -> cob.invoke(null, mref));\n+            assertThrows(NullPointerException.class, () -> cob.fieldAccess(null, fref));\n+            assertThrows(NullPointerException.class, () -> cob.branch(null, label));\n+\n+            \/\/ Opcode IAE\n+            assertThrows(IllegalArgumentException.class, () -> cob.invoke(IFNE, mref));\n+            assertThrows(IllegalArgumentException.class, () -> cob.fieldAccess(JSR, fref));\n+            assertThrows(IllegalArgumentException.class, () -> cob.branch(CHECKCAST, label));\n+\n+            \/\/ Wrap up\n+            cob.labelBinding(label);\n+            cob.return_();\n+        });\n+    }\n+\n+    @Test\n+    void testLongJump() {\n+        TestUtil.runCodeHandler(cob -> {\n+            assertThrows(NullPointerException.class, () -> cob.goto_w(null));\n+            \/\/ Ensures nothing redundant is written in case of failure\n+            cob.return_();\n+        });\n+    }\n+\n+    @Test\n+    void testSwitch() {\n+        TestUtil.runCodeHandler(cob -> {\n+            assertThrows(NullPointerException.class, () -> cob.tableswitch(-1, 1, cob.startLabel(), null));\n+            assertThrows(NullPointerException.class, () -> cob.lookupswitch(cob.startLabel(), null));\n+            assertThrows(NullPointerException.class, () -> cob.tableswitch(-1, 1, cob.startLabel(), Collections.singletonList(null)));\n+            assertThrows(NullPointerException.class, () -> cob.lookupswitch(cob.startLabel(), Collections.singletonList(null)));\n+            assertThrows(NullPointerException.class, () -> cob.tableswitch(-1, 1, null, List.of()));\n+            assertThrows(NullPointerException.class, () -> cob.lookupswitch(null, List.of()));\n+            \/\/ Ensures nothing redundant is written in case of failure\n+            cob.return_();\n+        });\n+    }\n+\n@@ -66,0 +119,8 @@\n+\n+        TestUtil.runCodeHandler(cob -> {\n+            assertThrows(IllegalArgumentException.class, () -> cob.sipush((int) Short.MIN_VALUE - 1));\n+            assertThrows(IllegalArgumentException.class, () -> cob.sipush((int) Short.MAX_VALUE + 1));\n+            assertThrows(IllegalArgumentException.class, () -> cob.bipush((int) Byte.MIN_VALUE - 1));\n+            assertThrows(IllegalArgumentException.class, () -> cob.bipush((int) Byte.MAX_VALUE + 1));\n+            cob.return_();\n+        });\n@@ -166,1 +227,0 @@\n-        \/\/ Can fail with AssertionError instead of IAE\n@@ -168,2 +228,2 @@\n-            action.accept(cob);\n-            fail(\"Bad slot access did not fail fast: \"  + value);\n+            assertThrows(IllegalArgumentException.class, () -> action.accept(cob));\n+            cob.return_();\n@@ -171,15 +231,5 @@\n-        var cf = ClassFile.of();\n-        CodeTransform noopCodeTransform = CodeBuilder::with;\n-        \/\/ Direct builders\n-        assertThrows(IllegalArgumentException.class, () -> cf.build(ClassDesc.of(\"Test\"), clb -> clb\n-                .withMethodBody(\"test\", MTD_void, ACC_STATIC, checkedAction)));\n-        \/\/ Chained builders\n-        assertThrows(IllegalArgumentException.class, () -> cf.build(ClassDesc.of(\"Test\"), clb -> clb\n-                .withMethodBody(\"test\", MTD_void, ACC_STATIC, cob -> cob\n-                        .transforming(CodeTransform.ACCEPT_ALL, checkedAction))));\n-        var classTemplate = cf.build(ClassDesc.of(\"Test\"), clb -> clb\n-                .withMethodBody(\"test\", MTD_void, ACC_STATIC, CodeBuilder::return_));\n-        \/\/ Indirect builders\n-        assertThrows(IllegalArgumentException.class, () -> cf.transformClass(cf.parse(classTemplate),\n-                ClassTransform.transformingMethodBodies(CodeTransform.endHandler(checkedAction)\n-                        .andThen(noopCodeTransform))));\n+        try {\n+            TestUtil.runCodeHandler(checkedAction);\n+        } catch (Throwable _) {\n+            System.out.printf(\"Erroneous value %d%n\", value);\n+        }\n@@ -203,1 +253,4 @@\n-            ensureFailFast(i, cob -> cob.iinc(0, i));\n+            TestUtil.runCodeHandler(cob -> {\n+                assertThrows(IllegalArgumentException.class, () -> cob.iinc(0, i));\n+                cob.return_();\n+            });\n@@ -218,0 +271,9 @@\n+\n+        TestUtil.runCodeHandler(cob -> {\n+            assertThrows(IllegalArgumentException.class, () -> cob.multianewarray(ce, 0));\n+            assertThrows(IllegalArgumentException.class, () -> cob.multianewarray(ce, 0x100));\n+            assertThrows(IllegalArgumentException.class, () -> cob.multianewarray(ce, -1));\n+            assertThrows(IllegalArgumentException.class, () -> cob.multianewarray(ce, Integer.MIN_VALUE));\n+            assertThrows(IllegalArgumentException.class, () -> cob.multianewarray(ce, Integer.MAX_VALUE));\n+            cob.return_();\n+        });\n","filename":"test\/jdk\/jdk\/classfile\/InstructionValidationTest.java","additions":85,"deletions":23,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -5,1 +5,2 @@\n-    java.base\/jdk.internal.classfile.impl.verifier\n\\ No newline at end of file\n+    java.base\/jdk.internal.classfile.impl.verifier\n+lib.dirs = helpers\n","filename":"test\/jdk\/jdk\/classfile\/TEST.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,5 @@\n+\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.CodeBuilder;\n+import java.lang.classfile.CodeTransform;\n@@ -30,1 +35,1 @@\n-import java.io.FileOutputStream;\n+import java.lang.constant.ClassDesc;\n@@ -32,0 +37,1 @@\n+import java.util.function.Consumer;\n@@ -33,1 +39,2 @@\n-public class TestUtil {\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -35,3 +42,1 @@\n-    public static void assertEmpty(Collection<?> col) {\n-        if (!col.isEmpty()) throw new AssertionError(col);\n-    }\n+public final class TestUtil {\n@@ -39,8 +44,15 @@\n-    public static void writeClass(byte[] bytes, String fn) {\n-        try {\n-            FileOutputStream out = new FileOutputStream(fn);\n-            out.write(bytes);\n-            out.close();\n-        } catch (Exception ex) {\n-            throw new InternalError(ex);\n-        }\n+    \/\/\/ Run a code handler in different builders.\n+    public static void runCodeHandler(Consumer<CodeBuilder> handler) {\n+        ClassFile cf = ClassFile.of();\n+        \/\/ Direct builders\n+        cf.build(ClassDesc.of(\"Test\"), clb -> clb.withMethodBody(\"test\", MTD_void, ACC_STATIC, handler));\n+        \/\/ Chained builders\n+        cf.build(ClassDesc.of(\"Test\"), clb -> clb\n+                .withMethodBody(\"test\", MTD_void, ACC_STATIC, cob -> cob\n+                        .transforming(CodeTransform.ACCEPT_ALL, handler)));\n+        \/\/ Indirect builders\n+        var classTemplate = cf.build(ClassDesc.of(\"Test\"), clb -> clb\n+                .withMethodBody(\"test\", MTD_void, ACC_STATIC, CodeBuilder::return_));\n+        cf.transformClass(cf.parse(classTemplate),\n+                ClassTransform.transformingMethodBodies(CodeTransform.endHandler(handler)\n+                        .andThen(CodeBuilder::with)));\n@@ -49,0 +61,3 @@\n+    public static void assertEmpty(Collection<?> col) {\n+        if (!col.isEmpty()) throw new AssertionError(col);\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/TestUtil.java","additions":29,"deletions":14,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8329817 8334432 8339076 8341260\n+ * @bug 8329817 8334432 8339076 8341260 8362207\n@@ -819,0 +819,5 @@\n+                \/\/ Arguments where using float fma or uniform float\n+                \/\/ arithmetic gives the wrong result\n+                {0x1.08p7f, 0x1.04p7f, 0x1.0p-24f,\n+                 0x1.0c4p14f},\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/BasicFloat16ArithTests.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1019,0 +1065,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1031,0 +1092,6 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1067,0 +1134,16 @@\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocProvider() {\n+        return BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3423,0 +3506,45 @@\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocByte128VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb, IntFunction<byte[]> fc) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Byte128VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocByte128VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                                     IntFunction<byte[]> fc, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Byte128VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1019,0 +1065,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1031,0 +1092,6 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1067,0 +1134,16 @@\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocProvider() {\n+        return BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3423,0 +3506,45 @@\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocByte256VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb, IntFunction<byte[]> fc) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Byte256VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocByte256VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                                     IntFunction<byte[]> fc, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Byte256VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1019,0 +1065,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1031,0 +1092,6 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1067,0 +1134,16 @@\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocProvider() {\n+        return BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3423,0 +3506,45 @@\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocByte512VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb, IntFunction<byte[]> fc) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Byte512VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocByte512VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                                     IntFunction<byte[]> fc, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Byte512VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1019,0 +1065,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1031,0 +1092,6 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1067,0 +1134,16 @@\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocProvider() {\n+        return BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3423,0 +3506,45 @@\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocByte64VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb, IntFunction<byte[]> fc) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Byte64VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocByte64VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                                     IntFunction<byte[]> fc, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Byte64VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -413,0 +413,46 @@\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(byte[] rl, byte[] rr, byte[] a, byte[] b, byte[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1024,0 +1070,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1036,0 +1097,6 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1072,0 +1139,16 @@\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocProvider() {\n+        return BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] byteSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> BYTE_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3428,0 +3511,45 @@\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocByteMaxVectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb, IntFunction<byte[]> fc) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, ByteMaxVectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"byteSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocByteMaxVectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                                     IntFunction<byte[]> fc, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        byte[] rl = fr.apply(SPECIES.length());\n+        byte[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                ByteVector cv = ByteVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, ByteMaxVectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -431,0 +431,46 @@\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(double[] rl, double[] rr, double[] a, double[] b, double[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -426,0 +426,46 @@\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -429,0 +429,46 @@\n+    }\n+\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(float[] rl, float[] rr, float[] a, float[] b, float[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocProvider() {\n+        return INT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> INT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3467,0 +3550,45 @@\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocInt128VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb, IntFunction<int[]> fc) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Int128VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocInt128VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                                     IntFunction<int[]> fc, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Int128VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocProvider() {\n+        return INT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> INT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3467,0 +3550,45 @@\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocInt256VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb, IntFunction<int[]> fc) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Int256VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocInt256VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                                     IntFunction<int[]> fc, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Int256VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocProvider() {\n+        return INT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> INT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3467,0 +3550,45 @@\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocInt512VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb, IntFunction<int[]> fc) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Int512VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocInt512VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                                     IntFunction<int[]> fc, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Int512VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocProvider() {\n+        return INT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> INT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3467,0 +3550,45 @@\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocInt64VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb, IntFunction<int[]> fc) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Int64VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocInt64VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                                     IntFunction<int[]> fc, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Int64VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -413,0 +413,46 @@\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(int[] rl, int[] rr, int[] a, int[] b, int[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1014,0 +1060,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1026,0 +1087,6 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1062,0 +1129,16 @@\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocProvider() {\n+        return INT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] intSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> INT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3472,0 +3555,45 @@\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocIntMaxVectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb, IntFunction<int[]> fc) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, IntMaxVectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"intSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocIntMaxVectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                                     IntFunction<int[]> fc, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        int[] rl = fr.apply(SPECIES.length());\n+        int[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                IntVector cv = IntVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, IntMaxVectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -365,0 +365,46 @@\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -999,0 +1045,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1011,0 +1072,6 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1047,0 +1114,16 @@\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocProvider() {\n+        return LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3489,0 +3572,45 @@\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocLong128VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb, IntFunction<long[]> fc) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Long128VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocLong128VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                                     IntFunction<long[]> fc, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Long128VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -365,0 +365,46 @@\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -999,0 +1045,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1011,0 +1072,6 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1047,0 +1114,16 @@\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocProvider() {\n+        return LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3489,0 +3572,45 @@\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocLong256VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb, IntFunction<long[]> fc) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Long256VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocLong256VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                                     IntFunction<long[]> fc, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Long256VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -365,0 +365,46 @@\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -999,0 +1045,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1011,0 +1072,6 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1047,0 +1114,16 @@\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocProvider() {\n+        return LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3489,0 +3572,45 @@\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocLong512VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb, IntFunction<long[]> fc) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Long512VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocLong512VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                                     IntFunction<long[]> fc, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Long512VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -365,0 +365,46 @@\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -999,0 +1045,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1011,0 +1072,6 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1047,0 +1114,16 @@\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocProvider() {\n+        return LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3489,0 +3572,45 @@\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocLong64VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb, IntFunction<long[]> fc) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Long64VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocLong64VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                                     IntFunction<long[]> fc, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Long64VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -370,0 +370,46 @@\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(long[] rl, long[] rr, long[] a, long[] b, long[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1004,0 +1050,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1016,0 +1077,6 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1052,0 +1119,16 @@\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocProvider() {\n+        return LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] longSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> LONG_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3494,0 +3577,45 @@\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocLongMaxVectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb, IntFunction<long[]> fc) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, LongMaxVectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"longSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocLongMaxVectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                                     IntFunction<long[]> fc, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        long[] rl = fr.apply(SPECIES.length());\n+        long[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                LongVector cv = LongVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, LongMaxVectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocProvider() {\n+        return SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3414,0 +3497,45 @@\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocShort128VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb, IntFunction<short[]> fc) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Short128VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocShort128VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                                     IntFunction<short[]> fc, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Short128VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocProvider() {\n+        return SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3414,0 +3497,45 @@\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocShort256VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb, IntFunction<short[]> fc) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Short256VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocShort256VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                                     IntFunction<short[]> fc, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Short256VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocProvider() {\n+        return SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3414,0 +3497,45 @@\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocShort512VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb, IntFunction<short[]> fc) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Short512VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocShort512VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                                     IntFunction<short[]> fc, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Short512VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -408,0 +408,46 @@\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1009,0 +1055,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1021,0 +1082,6 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1057,0 +1124,16 @@\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocProvider() {\n+        return SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3414,0 +3497,45 @@\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocShort64VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb, IntFunction<short[]> fc) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, Short64VectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocShort64VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                                     IntFunction<short[]> fc, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, Short64VectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -413,0 +413,46 @@\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative(short[] rl, short[] rr, short[] a, short[] b, short[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1014,0 +1060,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1026,0 +1087,6 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1062,0 +1129,16 @@\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocProvider() {\n+        return SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shortSaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> SHORT_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n@@ -3419,0 +3502,45 @@\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocProvider\")\n+    static void SUADDAssocShortMaxVectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb, IntFunction<short[]> fc) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, ShortMaxVectorTests::SUADD);\n+    }\n+\n+    @Test(dataProvider = \"shortSaturatingBinaryOpAssocMaskProvider\")\n+    static void SUADDAssocShortMaxVectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                                     IntFunction<short[]> fc, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        short[] rl = fr.apply(SPECIES.length());\n+        short[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                ShortVector cv = ShortVector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n+\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, ShortMaxVectorTests::SUADD);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+saturating_binary_assocative=\"SaturatingBinary-op-associative\"\n+saturating_binary_assocative_masked=\"SaturatingBinary-Masked-op-associative\"\n@@ -329,0 +331,6 @@\n+function gen_saturating_binary_op_associative {\n+  echo \"Generating saturating binary associative op $1 ($2)...\"\n+  gen_op_tmpl $saturating_binary_assocative \"$@\"\n+  gen_op_tmpl $saturating_binary_assocative_masked \"$@\"\n+}\n+\n@@ -490,0 +498,1 @@\n+gen_saturating_binary_op_associative \"SUADD\" \"VectorMath.addSaturatingUnsigned(a, b)\" \"BITWISE\"\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,18 @@\n+        $type$[] a = fa.apply(SPECIES.length());\n+        $type$[] b = fb.apply(SPECIES.length());\n+        $type$[] c = fc.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        $type$[] rl = fr.apply(SPECIES.length());\n+        $type$[] rr = fr.apply(SPECIES.length());\n+\n+        VectorMask<$Wideboxtype$> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n+                $abstractvectortype$ bv = $abstractvectortype$.fromArray(SPECIES, b, i);\n+                $abstractvectortype$ cv = $abstractvectortype$.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv, vmask).lanewise(VectorOperators.SUADD, cv, vmask).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv, vmask), vmask).intoArray(rr, i);\n+            }\n+        }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-SaturatingBinary-Masked-op-associative.template","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+        $type$[] a = fa.apply(SPECIES.length());\n+        $type$[] b = fb.apply(SPECIES.length());\n+        $type$[] c = fc.apply(SPECIES.length());\n+        $type$[] rl = fr.apply(SPECIES.length());\n+        $type$[] rr = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                $Type$Vector av = $Type$Vector.fromArray(SPECIES, a, i);\n+                $Type$Vector bv = $Type$Vector.fromArray(SPECIES, b, i);\n+                $Type$Vector cv = $Type$Vector.fromArray(SPECIES, c, i);\n+                av.lanewise(VectorOperators.SUADD, bv).lanewise(VectorOperators.SUADD, cv).intoArray(rl, i);\n+                av.lanewise(VectorOperators.SUADD, bv.lanewise(VectorOperators.SUADD, cv)).intoArray(rr, i);\n+            }\n+        }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-SaturatingBinary-op-associative.template","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,7 @@\n+\n+    @Test(dataProvider = \"$type$SaturatingBinaryOpAssocMaskProvider\")\n+    static void [[TEST]]Assoc$vectorteststype$Masked(IntFunction<$type$[]> fa, IntFunction<$type$[]> fb,\n+                                                     IntFunction<$type$[]> fc, IntFunction<boolean[]> fm) {\n+[[KERNEL]]\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, mask, $vectorteststype$::[[TEST]]);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-SaturatingBinary-Masked-op-associative.template","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+    @Test(dataProvider = \"$type$SaturatingBinaryOpAssocProvider\")\n+    static void [[TEST]]Assoc$vectorteststype$(IntFunction<$type$[]> fa, IntFunction<$type$[]> fb, IntFunction<$type$[]> fc) {\n+[[KERNEL]]\n+        assertArraysEqualsAssociative(rl, rr, a, b, c, $vectorteststype$::[[TEST]]);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-SaturatingBinary-op-associative.template","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -505,0 +505,46 @@\n+    static void assertArraysEqualsAssociative($type$[] rl, $type$[] rr, $type$[] a, $type$[] b, $type$[] c, FBinOp f) {\n+        int i = 0;\n+        try {\n+            for (; i < a.length; i++) {\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i]), c[i]), \"left associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i])), \"right associative test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i]);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n+   static void assertArraysEqualsAssociative($type$[] rl, $type$[] rr, $type$[] a, $type$[] b, $type$[] c, boolean[] mask, FBinOp f) {\n+       assertArraysEqualsAssociative(rl, rr, a, b, c, mask, FBinMaskOp.lift(f));\n+   }\n+\n+    static void assertArraysEqualsAssociative($type$[] rl, $type$[] rr, $type$[] a, $type$[] b, $type$[] c, boolean[] mask, FBinMaskOp f) {\n+        int i = 0;\n+        boolean mask_bit = false;\n+        try {\n+            for (; i < a.length; i++) {\n+                mask_bit = mask[i % SPECIES.length()];\n+                \/\/Left associative\n+                Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit));\n+\n+                \/\/Right associative\n+                Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit));\n+\n+                \/\/Results equal sanity check\n+                Assert.assertEquals(rl[i], rr[i]);\n+            }\n+        } catch (AssertionError e) {\n+            Assert.assertEquals(rl[i], f.apply(f.apply(a[i], b[i], mask_bit), c[i], mask_bit), \"left associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rr[i], f.apply(a[i], f.apply(b[i], c[i], mask_bit), mask_bit), \"right associative masked test at index #\" + i + \", input1 = \" + a[i] + \", input2 = \" + b[i] + \", input3 = \" + c[i] + \", mask = \" + mask_bit);\n+            Assert.assertEquals(rl[i], rr[i], \"Result checks not equal at index #\" + i + \"leftRes = \" + rl[i] + \", rightRes = \" + rr[i]);\n+        }\n+    }\n+\n@@ -1281,0 +1327,15 @@\n+    static final List<IntFunction<$type$[]>> $TYPE$_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"$type$[$Boxtype$.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> ($type$)($Boxtype$.MAX_VALUE));\n+            }),\n+            withToString(\"$type$[$Boxtype$.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> ($type$)($Boxtype$.MAX_VALUE - 100));\n+            }),\n+            withToString(\"$type$[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> ($type$)(-1));\n+            })\n+    );\n+\n@@ -1295,0 +1356,6 @@\n+    static final List<List<IntFunction<$type$[]>>> $TYPE$_SATURATING_GENERATOR_TRIPLETS =\n+            Stream.of($TYPE$_GENERATORS.get(1))\n+                    .flatMap(fa -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n+\n@@ -1333,0 +1400,16 @@\n+    @DataProvider\n+    public Object[][] $type$SaturatingBinaryOpAssocProvider() {\n+        return $TYPE$_SATURATING_GENERATOR_TRIPLETS.stream().map(List::toArray).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] $type$SaturatingBinaryOpAssocMaskProvider() {\n+        return BOOLEAN_MASK_GENERATORS.stream().\n+                flatMap(fm -> $TYPE$_SATURATING_GENERATOR_TRIPLETS.stream().map(lfa -> {\n+                    return Stream.concat(lfa.stream(), Stream.of(fm)).toArray();\n+                })).\n+                toArray(Object[][]::new);\n+    }\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":83,"deletions":0,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-import static java.lang.Double.*;\n+import static java.lang.Double.doubleToRawLongBits;\n+import static java.lang.Double.longBitsToDouble;\n@@ -31,2 +32,0 @@\n-import static java.lang.StrictMath.scalb;\n-import static jdk.internal.math.MathUtils.flog10pow2;\n@@ -34,1 +33,1 @@\n-public class DoubleToDecimalChecker extends ToDecimalChecker {\n+public final class DoubleToDecimalChecker extends ToDecimalChecker {\n@@ -36,7 +35,2 @@\n-    private static final int P =\n-            numberOfTrailingZeros(doubleToRawLongBits(3)) + 2;\n-    private static final int W = (SIZE - 1) - (P - 1);\n-    private static final int Q_MIN = (-1 << (W - 1)) - P + 3;\n-    private static final int Q_MAX = (1 << (W - 1)) - P;\n-    private static final long C_MIN = 1L << (P - 1);\n-    private static final long C_MAX = (1L << P) - 1;\n+    private static final int P = numberOfTrailingZeros(doubleToRawLongBits(3)) + 2;\n+    private static final int W = w(P);\n@@ -44,3 +38,4 @@\n-    private static final int K_MIN = flog10pow2(Q_MIN);\n-    private static final int K_MAX = flog10pow2(Q_MAX);\n-    private static final int H = flog10pow2(P) + 2;\n+    private static final int Q_MIN = q_min(P);\n+    private static final int Q_MAX = q_max(P);\n+    private static final long C_MIN = c_min(P);\n+    private static final long C_MAX = c_max(P);\n@@ -48,3 +43,6 @@\n-    private static final double MIN_VALUE = scalb(1.0, Q_MIN);\n-    private static final double MIN_NORMAL = scalb((double) C_MIN, Q_MIN);\n-    private static final double MAX_VALUE = scalb((double) C_MAX, Q_MAX);\n+    private static final int E_MIN = e_min(P);\n+    private static final int E_MAX = e_max(P);\n+    private static final int E_THR_Z = e_thr_z(P);\n+    private static final int E_THR_I = e_thr_i(P);\n+    private static final int K_MIN = k_min(P);\n+    private static final int K_MAX = k_max(P);\n@@ -52,2 +50,2 @@\n-    private static final int E_MIN = e(MIN_VALUE);\n-    private static final int E_MAX = e(MAX_VALUE);\n+    private static final int C_TINY = c_tiny(P);\n+    private static final int H = h(P);\n@@ -55,1 +53,3 @@\n-    private static final long C_TINY = cTiny(Q_MIN, K_MIN);\n+    private static final BigDecimal MIN_VALUE = min_value(P);\n+    private static final BigDecimal MIN_NORMAL = min_normal(P);\n+    private static final BigDecimal MAX_VALUE = max_value(P);\n@@ -63,1 +63,0 @@\n-\/\/        super(Double.toString(v));\n@@ -67,0 +66,10 @@\n+    @Override\n+    int eMin() {\n+        return E_MIN;\n+    }\n+\n+    @Override\n+    int eMax() {\n+        return E_MAX;\n+    }\n+\n@@ -89,1 +98,1 @@\n-        return parseDouble(s) == v;\n+        return Double.parseDouble(s) == v;\n@@ -94,11 +103,1 @@\n-        return toHexString(v) + \"D\";\n-    }\n-\n-    @Override\n-    int minExp() {\n-        return E_MIN;\n-    }\n-\n-    @Override\n-    int maxExp() {\n-        return E_MAX;\n+        return Double.toHexString(v) + \"D\";\n@@ -109,1 +108,1 @@\n-        return v == NEGATIVE_INFINITY;\n+        return v == Double.NEGATIVE_INFINITY;\n@@ -114,1 +113,1 @@\n-        return v == POSITIVE_INFINITY;\n+        return v == Double.POSITIVE_INFINITY;\n@@ -152,4 +151,4 @@\n-        testDec(NEGATIVE_INFINITY);\n-        testAround(-MAX_VALUE, Z);\n-        testAround(-MIN_NORMAL, Z);\n-        testAround(-MIN_VALUE, Z);\n+        testDec(Double.NEGATIVE_INFINITY);\n+        testAround(-Double.MAX_VALUE, Z);\n+        testAround(-Double.MIN_NORMAL, Z);\n+        testAround(-Double.MIN_VALUE, Z);\n@@ -158,5 +157,5 @@\n-        testAround(MIN_VALUE, Z);\n-        testAround(MIN_NORMAL, Z);\n-        testAround(MAX_VALUE, Z);\n-        testDec(POSITIVE_INFINITY);\n-        testDec(NaN);\n+        testAround(Double.MIN_VALUE, Z);\n+        testAround(Double.MIN_NORMAL, Z);\n+        testAround(Double.MAX_VALUE, Z);\n+        testDec(Double.POSITIVE_INFINITY);\n+        testDec(Double.NaN);\n@@ -179,1 +178,1 @@\n-            testDec(c * MIN_VALUE);\n+            testDec(c * Double.MIN_VALUE);\n@@ -189,1 +188,1 @@\n-            testAround(parseDouble(\"1e\" + e), Z);\n+            testAround(Double.parseDouble(\"1e\" + e), Z);\n@@ -198,1 +197,1 @@\n-        for (double v = MIN_VALUE; v <= MAX_VALUE; v *= 2) {\n+        for (double v = Double.MIN_VALUE; v <= Double.MAX_VALUE; v *= 2) {\n@@ -227,1 +226,1 @@\n-            testDec(parseDouble(dec));\n+            testDec(Double.parseDouble(dec));\n@@ -334,1 +333,1 @@\n-            testDec(scalb(PaxsonSignificands[i], PaxsonExponents[i]));\n+            testDec(StrictMath.scalb(PaxsonSignificands[i], PaxsonExponents[i]));\n@@ -444,1 +443,1 @@\n-            testAround(parseDouble((r.nextInt(9 * pow10) + pow10) + \"e\" + e), Z);\n+            testAround(Double.parseDouble((r.nextInt(9 * pow10) + pow10) + \"e\" + e), Z);\n@@ -450,5 +449,1 @@\n-        addOnFail((long) (double) C_MIN == C_MIN, \"C_MIN\");\n-        addOnFail((long) (double) C_MAX == C_MAX, \"C_MAX\");\n-        addOnFail(MIN_VALUE == Double.MIN_VALUE, \"MIN_VALUE\");\n-        addOnFail(MIN_NORMAL == Double.MIN_NORMAL, \"MIN_NORMAL\");\n-        addOnFail(MAX_VALUE == Double.MAX_VALUE, \"MAX_VALUE\");\n+        addOnFail(W == DoubleToDecimal.W, \"W\");\n@@ -458,0 +453,4 @@\n+        addOnFail(C_MIN == DoubleToDecimal.C_MIN, \"C_MIN\");\n+        addOnFail(C_MAX == DoubleToDecimal.C_MAX, \"C_MAX\");\n+        addOnFail((long) (double) C_MIN == C_MIN, \"C_MIN\");\n+        addOnFail((long) (double) C_MAX == C_MAX, \"C_MAX\");\n@@ -459,0 +458,4 @@\n+        addOnFail(E_MIN == DoubleToDecimal.E_MIN, \"E_MIN\");\n+        addOnFail(E_MAX == DoubleToDecimal.E_MAX, \"E_MAX\");\n+        addOnFail(E_THR_Z == DoubleToDecimal.E_THR_Z, \"E_THR_Z\");\n+        addOnFail(E_THR_I == DoubleToDecimal.E_THR_I, \"E_THR_I\");\n@@ -461,1 +464,0 @@\n-        addOnFail(H == DoubleToDecimal.H, \"H\");\n@@ -463,2 +465,0 @@\n-        addOnFail(E_MIN == DoubleToDecimal.E_MIN, \"E_MIN\");\n-        addOnFail(E_MAX == DoubleToDecimal.E_MAX, \"E_MAX\");\n@@ -466,0 +466,5 @@\n+        addOnFail(H == DoubleToDecimal.H, \"H\");\n+\n+        addOnFail(MIN_VALUE.compareTo(new BigDecimal(Double.MIN_VALUE)) == 0, \"MIN_VALUE\");\n+        addOnFail(MIN_NORMAL.compareTo(new BigDecimal(Double.MIN_NORMAL)) == 0, \"MIN_NORMAL\");\n+        addOnFail(MAX_VALUE.compareTo(new BigDecimal(Double.MAX_VALUE)) == 0, \"MAX_VALUE\");\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/java.base\/jdk\/internal\/math\/DoubleToDecimalChecker.java","additions":64,"deletions":59,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-import static java.lang.Float.*;\n+import static java.lang.Float.floatToRawIntBits;\n+import static java.lang.Float.intBitsToFloat;\n@@ -31,2 +32,0 @@\n-import static java.lang.StrictMath.scalb;\n-import static jdk.internal.math.MathUtils.flog10pow2;\n@@ -34,1 +33,1 @@\n-public class FloatToDecimalChecker extends ToDecimalChecker {\n+public final class FloatToDecimalChecker extends ToDecimalChecker {\n@@ -36,7 +35,2 @@\n-    private static final int P =\n-            numberOfTrailingZeros(floatToRawIntBits(3)) + 2;\n-    private static final int W = (SIZE - 1) - (P - 1);\n-    private static final int Q_MIN = (-1 << (W - 1)) - P + 3;\n-    private static final int Q_MAX = (1 << (W - 1)) - P;\n-    private static final int C_MIN = 1 << (P - 1);\n-    private static final int C_MAX = (1 << P) - 1;\n+    private static final int P = numberOfTrailingZeros(floatToRawIntBits(3)) + 2;\n+    private static final int W = w(P);\n@@ -44,3 +38,4 @@\n-    private static final int K_MIN = flog10pow2(Q_MIN);\n-    private static final int K_MAX = flog10pow2(Q_MAX);\n-    private static final int H = flog10pow2(P) + 2;\n+    private static final int Q_MIN = q_min(P);\n+    private static final int Q_MAX = q_max(P);\n+    private static final long C_MIN = c_min(P);\n+    private static final long C_MAX = c_max(P);\n@@ -48,3 +43,6 @@\n-    private static final float MIN_VALUE = scalb(1.0f, Q_MIN);\n-    private static final float MIN_NORMAL = scalb((float) C_MIN, Q_MIN);\n-    private static final float MAX_VALUE = scalb((float) C_MAX, Q_MAX);\n+    private static final int E_MIN = e_min(P);\n+    private static final int E_MAX = e_max(P);\n+    private static final int E_THR_Z = e_thr_z(P);\n+    private static final int E_THR_I = e_thr_i(P);\n+    private static final int K_MIN = k_min(P);\n+    private static final int K_MAX = k_max(P);\n@@ -52,2 +50,2 @@\n-    private static final int E_MIN = e(MIN_VALUE);\n-    private static final int E_MAX = e(MAX_VALUE);\n+    private static final int C_TINY = c_tiny(P);\n+    private static final int H = h(P);\n@@ -55,1 +53,3 @@\n-    private static final long C_TINY = cTiny(Q_MIN, K_MIN);\n+    private static final BigDecimal MIN_VALUE = min_value(P);\n+    private static final BigDecimal MIN_NORMAL = min_normal(P);\n+    private static final BigDecimal MAX_VALUE = max_value(P);\n@@ -63,1 +63,0 @@\n-\/\/        super(Float.toString(v));\n@@ -67,0 +66,10 @@\n+    @Override\n+    int eMin() {\n+        return E_MIN;\n+    }\n+\n+    @Override\n+    int eMax() {\n+        return E_MAX;\n+    }\n+\n@@ -89,1 +98,1 @@\n-        return parseFloat(s) == v;\n+        return Float.parseFloat(s) == v;\n@@ -94,11 +103,1 @@\n-        return toHexString(v) + \"F\";\n-    }\n-\n-    @Override\n-    int minExp() {\n-        return E_MIN;\n-    }\n-\n-    @Override\n-    int maxExp() {\n-        return E_MAX;\n+        return Float.toHexString(v) + \"F\";\n@@ -109,1 +108,1 @@\n-        return v == NEGATIVE_INFINITY;\n+        return v == Float.NEGATIVE_INFINITY;\n@@ -114,1 +113,1 @@\n-        return v == POSITIVE_INFINITY;\n+        return v == Float.POSITIVE_INFINITY;\n@@ -119,1 +118,1 @@\n-        return floatToIntBits(v) == 0x8000_0000;\n+        return floatToRawIntBits(v) == 0x8000_0000;\n@@ -124,1 +123,1 @@\n-        return floatToIntBits(v) == 0x0000_0000;\n+        return floatToRawIntBits(v) == 0x0000_0000;\n@@ -142,1 +141,1 @@\n-        int bits = floatToIntBits(v);\n+        int bits = floatToRawIntBits(v);\n@@ -152,4 +151,4 @@\n-        testDec(NEGATIVE_INFINITY);\n-        testAround(-MAX_VALUE, Z);\n-        testAround(-MIN_NORMAL, Z);\n-        testAround(-MIN_VALUE, Z);\n+        testDec(Float.NEGATIVE_INFINITY);\n+        testAround(-Float.MAX_VALUE, Z);\n+        testAround(-Float.MIN_NORMAL, Z);\n+        testAround(-Float.MIN_VALUE, Z);\n@@ -158,5 +157,5 @@\n-        testAround(MIN_VALUE, Z);\n-        testAround(MIN_NORMAL, Z);\n-        testAround(MAX_VALUE, Z);\n-        testDec(POSITIVE_INFINITY);\n-        testDec(NaN);\n+        testAround(Float.MIN_VALUE, Z);\n+        testAround(Float.MIN_NORMAL, Z);\n+        testAround(Float.MAX_VALUE, Z);\n+        testDec(Float.POSITIVE_INFINITY);\n+        testDec(Float.NaN);\n@@ -179,1 +178,1 @@\n-            testDec(c * MIN_VALUE);\n+            testDec(c * Float.MIN_VALUE);\n@@ -189,1 +188,1 @@\n-            testAround(parseFloat(\"1e\" + e), Z);\n+            testAround(Float.parseFloat(\"1e\" + e), Z);\n@@ -198,1 +197,1 @@\n-        for (float v = MIN_VALUE; v <= MAX_VALUE; v *= 2) {\n+        for (float v = Float.MIN_VALUE; v <= Float.MAX_VALUE; v *= 2) {\n@@ -221,1 +220,1 @@\n-            testDec(parseFloat(dec));\n+            testDec(Float.parseFloat(dec));\n@@ -288,1 +287,1 @@\n-            testDec(scalb(PaxsonSignificands[i], PaxsonExponents[i]));\n+            testDec(StrictMath.scalb(PaxsonSignificands[i], PaxsonExponents[i]));\n@@ -369,1 +368,1 @@\n-            testAround(parseFloat((r.nextInt(9 * pow10) + pow10) + \"e\" + e), Z);\n+            testAround(Float.parseFloat((r.nextInt(9 * pow10) + pow10) + \"e\" + e), Z);\n@@ -373,1 +372,0 @@\n-\n@@ -376,5 +374,1 @@\n-        addOnFail((int) (float) C_MIN == C_MIN, \"C_MIN\");\n-        addOnFail((int) (float) C_MAX == C_MAX, \"C_MAX\");\n-        addOnFail(MIN_VALUE == Float.MIN_VALUE, \"MIN_VALUE\");\n-        addOnFail(MIN_NORMAL == Float.MIN_NORMAL, \"MIN_NORMAL\");\n-        addOnFail(MAX_VALUE == Float.MAX_VALUE, \"MAX_VALUE\");\n+        addOnFail(W == FloatToDecimal.W, \"W\");\n@@ -384,0 +378,4 @@\n+        addOnFail(C_MIN == FloatToDecimal.C_MIN, \"C_MIN\");\n+        addOnFail(C_MAX == FloatToDecimal.C_MAX, \"C_MAX\");\n+        addOnFail((int) (float) C_MIN == C_MIN, \"C_MIN\");\n+        addOnFail((int) (float) C_MAX == C_MAX, \"C_MAX\");\n@@ -385,0 +383,4 @@\n+        addOnFail(E_MIN == FloatToDecimal.E_MIN, \"E_MIN\");\n+        addOnFail(E_MAX == FloatToDecimal.E_MAX, \"E_MAX\");\n+        addOnFail(E_THR_Z == FloatToDecimal.E_THR_Z, \"E_THR_Z\");\n+        addOnFail(E_THR_I == FloatToDecimal.E_THR_I, \"E_THR_I\");\n@@ -387,1 +389,0 @@\n-        addOnFail(H == FloatToDecimal.H, \"H\");\n@@ -389,2 +390,0 @@\n-        addOnFail(E_MIN == FloatToDecimal.E_MIN, \"E_MIN\");\n-        addOnFail(E_MAX == FloatToDecimal.E_MAX, \"E_MAX\");\n@@ -392,0 +391,5 @@\n+        addOnFail(H == FloatToDecimal.H, \"H\");\n+\n+        addOnFail(MIN_VALUE.compareTo(new BigDecimal(Float.MIN_VALUE)) == 0, \"MIN_VALUE\");\n+        addOnFail(MIN_NORMAL.compareTo(new BigDecimal(Float.MIN_NORMAL)) == 0, \"MIN_NORMAL\");\n+        addOnFail(MAX_VALUE.compareTo(new BigDecimal(Float.MAX_VALUE)) == 0, \"MAX_VALUE\");\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/java.base\/jdk\/internal\/math\/FloatToDecimalChecker.java","additions":67,"deletions":63,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.math.BigDecimal;\n@@ -27,0 +28,1 @@\n+import java.math.RoundingMode;\n@@ -28,3 +30,0 @@\n-import static java.lang.Double.*;\n-import static java.lang.Long.numberOfTrailingZeros;\n-import static java.lang.StrictMath.scalb;\n@@ -32,0 +31,3 @@\n+import static jdk.internal.math.DoubleToDecimal.*;\n+import static jdk.internal.math.DoubleToDecimal.Q_MAX;\n+import static jdk.internal.math.DoubleToDecimal.Q_MIN;\n@@ -34,1 +36,1 @@\n-public class MathUtilsChecker extends BasicChecker {\n+public final class MathUtilsChecker extends BasicChecker {\n@@ -36,10 +38,1 @@\n-    private static final BigInteger THREE = valueOf(3);\n-\n-    \/\/ binary constants\n-    private static final int P =\n-            numberOfTrailingZeros(doubleToRawLongBits(3)) + 2;\n-    private static final int W = (SIZE - 1) - (P - 1);\n-    private static final int Q_MIN = (-1 << W - 1) - P + 3;\n-    private static final int Q_MAX = (1 << W - 1) - P;\n-    private static final long C_MIN = 1L << P - 1;\n-    private static final long C_MAX = (1L << P) - 1;\n+    private static final BigDecimal THREE_QUARTER = new BigDecimal(\"0.75\");\n@@ -48,3 +41,5 @@\n-    private static final int K_MIN = flog10pow2(Q_MIN);\n-    private static final int K_MAX = flog10pow2(Q_MAX);\n-    private static final int H = flog10pow2(P) + 2;\n+    private static final int N = n();\n+    private static final int GE_MIN = ge_min();\n+    private static final int GE_MAX = ge_max();\n+\n+    private static final int MARGIN = 10;\n@@ -52,2 +47,1 @@\n-    private static String gReason(int k) {\n-        return \"g(\" + k + \") is incorrect\";\n+    private MathUtilsChecker() {\n@@ -56,20 +50,5 @@\n-    \/*\n-    Let\n-        10^(-k) = beta 2^r\n-    for the unique integer r and real beta meeting\n-        2^125 <= beta < 2^126\n-    Further, let g1 = g1(k), g0 = g0(k) and g = g1 2^63 + g0,\n-    where g1 and g0 are as in MathUtils\n-    Check that:\n-        2^62 <= g1 < 2^63,\n-        0 <= g0 < 2^63,\n-        g - 1 <= beta < g,    (that is, g = floor(beta) + 1)\n-    The last predicate, after multiplying by 2^r, is equivalent to\n-        (g - 1) 2^r <= 10^(-k) < g 2^r\n-    This is the predicate that will be checked in various forms.\n-     *\/\n-    private static void testG(int k) {\n-        long g1 = g1(k);\n-        long g0 = g0(k);\n-        \/\/ 2^62 <= g1 < 2^63, 0 <= g0 < 2^63\n-        addOnFail((g1 >>> (Long.SIZE - 2)) == 0b01 && g0 >= 0, gReason(k));\n+    static BigDecimal pow2(int q) {\n+        return q >= 0\n+                ? new BigDecimal(ONE.shiftLeft(q))\n+                : BigDecimal.ONE.divide(new BigDecimal(ONE.shiftLeft(-q)));\n+    }\n@@ -77,3 +56,3 @@\n-        BigInteger g = valueOf(g1).shiftLeft(63).or(valueOf(g0));\n-        \/\/ double check that 2^125 <= g < 2^126\n-        addOnFail(g.signum() > 0 && g.bitLength() == 126, gReason(k));\n+    static BigDecimal pow10(int e) {\n+        return BigDecimal.valueOf(1L, -e);\n+    }\n@@ -81,2 +60,3 @@\n-        \/\/ see javadoc of MathUtils.g1(int)\n-        int r = flog2pow10(-k) - 125;\n+    static BigInteger floor(BigDecimal v) {\n+        return v.setScale(0, RoundingMode.FLOOR).unscaledValue();\n+    }\n@@ -84,16 +64,3 @@\n-        \/*\n-        The predicate\n-            (g - 1) 2^r <= 10^(-k) < g 2^r\n-        is equivalent to\n-            g - 1 <= 10^(-k) 2^(-r) < g\n-        When\n-            k <= 0 & r < 0\n-        all numerical subexpressions are integer-valued. This is the same as\n-            g - 1 = 10^(-k) 2^(-r)\n-         *\/\n-        if (k <= 0 && r < 0) {\n-            addOnFail(\n-                    g.subtract(ONE).compareTo(TEN.pow(-k).shiftLeft(-r)) == 0,\n-                    gReason(k));\n-            return;\n-        }\n+    static BigInteger ceil(BigDecimal v) {\n+        return v.setScale(0, RoundingMode.CEILING).unscaledValue();\n+    }\n@@ -101,0 +68,2 @@\n+    \/* floor(log2(v)) *\/\n+    static int flog2(BigDecimal v) {\n@@ -102,7 +71,7 @@\n-        The predicate\n-            (g - 1) 2^r <= 10^(-k) < g 2^r\n-        is equivalent to\n-            g 10^k - 10^k <= 2^(-r) < g 10^k\n-        When\n-            k > 0 & r < 0\n-        all numerical subexpressions are integer-valued.\n+         * Let v = f 10^e.\n+         * Then log2(v) = log2(f) + e \/ log10(2).\n+         *\n+         * The initial flog2 is an estimate of l = floor(log2(v)), that is,\n+         * 2^l <= v < 2^(l+1).\n+         * Given the initial estimate flog2, search l meeting the above\n+         * inequalities.\n@@ -110,9 +79,6 @@\n-        if (k > 0 && r < 0) {\n-            BigInteger pow5 = TEN.pow(k);\n-            BigInteger mhs = ONE.shiftLeft(-r);\n-            BigInteger rhs = g.multiply(pow5);\n-            addOnFail(rhs.subtract(pow5).compareTo(mhs) <= 0\n-                            && mhs.compareTo(rhs) < 0,\n-                    gReason(k));\n-            return;\n-        }\n+        int flog2 = (v.unscaledValue().bitLength() - 1)\n+                + (int) Math.floor(-v.scale() \/ Math.log10(2));\n+        for (; pow2(flog2).compareTo(v) <= 0; ++flog2);  \/\/ empty body\n+        for (; v.compareTo(pow2(flog2)) < 0; --flog2);  \/\/ empty body\n+        return flog2;\n+    }\n@@ -120,15 +86,4 @@\n-        \/*\n-        Finally, when\n-            k <= 0 & r >= 0\n-        the predicate\n-            (g - 1) 2^r <= 10^(-k) < g 2^r\n-        can be used straightforwardly as all numerical subexpressions are\n-        already integer-valued.\n-         *\/\n-        if (k <= 0) {\n-            BigInteger mhs = TEN.pow(-k);\n-            addOnFail(g.subtract(ONE).shiftLeft(r).compareTo(mhs) <= 0 &&\n-                            mhs.compareTo(g.shiftLeft(r)) < 0,\n-                    gReason(k));\n-            return;\n-        }\n+    \/* floor(log10(v)) *\/\n+    static int flog10(BigDecimal v) {\n+        return v.precision() - v.scale() - 1;\n+    }\n@@ -136,9 +91,3 @@\n-        \/*\n-        For combinatorial reasons, the only remaining case is\n-            k > 0 & r >= 0\n-        which, however, cannot arise. Indeed, the predicate\n-            (g - 1) 2^r <= 10^(-k) < g 2^r\n-        has a positive integer left-hand side and a middle side < 1,\n-        which cannot hold.\n-         *\/\n-        addOnFail(false, \"unexpected case for g(\" + k + \")\");\n+    \/* ceil(log10(v)) *\/\n+    static int clog10(BigDecimal v) {\n+        return flog10(v.subtract(v.ulp())) + 1;\n@@ -147,7 +96,3 @@\n-    \/*\n-    Verifies the soundness of the values returned by g1() and g0().\n-     *\/\n-    private static void testG() {\n-        for (int k = MathUtils.K_MIN; k <= MathUtils.K_MAX; ++k) {\n-            testG(k);\n-        }\n+    \/* floor(log10(2^q)) *\/\n+    static int flog10pow2(int q) {\n+        return flog10(pow2(q));\n@@ -156,2 +101,2 @@\n-    private static String flog10threeQuartersPow2Reason(int e) {\n-        return \"flog10threeQuartersPow2(\" + e + \") is incorrect\";\n+    private static int flog10threeQuartersPow2(int q) {\n+        return flog10(THREE_QUARTER.multiply(pow2(q)));\n@@ -160,22 +105,3 @@\n-    \/*\n-    Let\n-        k = floor(log10(3\/4 2^e))\n-    The method verifies that\n-        k = flog10threeQuartersPow2(e),    Q_MIN <= e <= Q_MAX\n-    This range covers all binary exponents of doubles and floats.\n-\n-    The first equation above is equivalent to\n-        10^k <= 3 2^(e-2) < 10^(k+1)\n-    Equality never holds. Henceforth, the predicate to check is\n-        10^k < 3 2^(e-2) < 10^(k+1)\n-    This will be transformed in various ways for checking purposes.\n-\n-    For integer n > 0, let further\n-        b = len2(n)\n-    denote its length in bits. This means exactly the same as\n-        2^(b-1) <= n < 2^b\n-     *\/\n-    private static void testFlog10threeQuartersPow2() {\n-        \/\/ First check the case e = 1\n-        addOnFail(flog10threeQuartersPow2(1) == 0,\n-                flog10threeQuartersPow2Reason(1));\n+    private static int flog2pow10(int e) {\n+        return flog2(pow10(e));\n+    }\n@@ -183,41 +109,3 @@\n-        \/*\n-        Now check the range Q_MIN <= e <= 0.\n-        By rewriting, the predicate to check is equivalent to\n-            3 10^(-k-1) < 2^(2-e) < 3 10^(-k)\n-        As e <= 0, it follows that 2^(2-e) >= 4 and the right inequality\n-        implies k < 0, so the powers of 10 are integers.\n-\n-        The left inequality is equivalent to\n-            len2(3 10^(-k-1)) <= 2 - e\n-        and the right inequality to\n-            2 - e < len2(3 10^(-k))\n-        The original predicate is therefore equivalent to\n-            len2(3 10^(-k-1)) <= 2 - e < len2(3 10^(-k))\n-\n-        Starting with e = 0 and decrementing until the lower bound, the code\n-        keeps track of the two powers of 10 to avoid recomputing them.\n-        This is easy because at each iteration k changes at most by 1. A simple\n-        multiplication by 10 computes the next power of 10 when needed.\n-         *\/\n-        int e = 0;\n-        int k0 = flog10threeQuartersPow2(e);\n-        addOnFail(k0 < 0, flog10threeQuartersPow2Reason(e));\n-        BigInteger l = THREE.multiply(TEN.pow(-k0 - 1));\n-        BigInteger u = l.multiply(TEN);\n-        for (;;) {\n-            addOnFail(l.bitLength() <= 2 - e & 2 - e < u.bitLength(),\n-                    flog10threeQuartersPow2Reason(e));\n-            --e;\n-            if (e < Q_MIN) {\n-                break;\n-            }\n-            int kp = flog10threeQuartersPow2(e);\n-            addOnFail(kp <= k0, flog10threeQuartersPow2Reason(e));\n-            if (kp < k0) {\n-                \/\/ k changes at most by 1 at each iteration, hence:\n-                addOnFail(k0 - kp == 1, flog10threeQuartersPow2Reason(e));\n-                k0 = kp;\n-                l = u;\n-                u = u.multiply(TEN);\n-            }\n-        }\n+    private static int n() {\n+        return flog10pow2(Long.SIZE);\n+    }\n@@ -225,44 +113,2 @@\n-        \/*\n-        Finally, check the range 2 <= e <= Q_MAX.\n-        In predicate\n-            10^k < 3 2^(e-2) < 10^(k+1)\n-        the right inequality shows that k >= 0 as soon as e >= 2.\n-        It is equivalent to\n-            10^k \/ 3 < 2^(e-2) < 10^(k+1) \/ 3\n-        Both the powers of 10 and the powers of 2 are integers.\n-        The left inequality is therefore equivalent to\n-            floor(10^k \/ 3) < 2^(e-2)\n-        and thus to\n-            len2(floor(10^k \/ 3)) <= e - 2\n-        while the right inequality is equivalent to\n-            2^(e-2) <= floor(10^(k+1) \/ 3)\n-        and hence to\n-            e - 2 < len2(floor(10^(k+1) \/ 3))\n-        These are summarized as\n-            len2(floor(10^k \/ 3)) <= e - 2 < len2(floor(10^(k+1) \/ 3))\n-         *\/\n-        e = 2;\n-        k0 = flog10threeQuartersPow2(e);\n-        addOnFail(k0 >= 0, flog10threeQuartersPow2Reason(e));\n-        BigInteger l10 = TEN.pow(k0);\n-        BigInteger u10 = l10.multiply(TEN);\n-        l = l10.divide(THREE);\n-        u = u10.divide(THREE);\n-        for (;;) {\n-            addOnFail(l.bitLength() <= e - 2 & e - 2 < u.bitLength(),\n-                    flog10threeQuartersPow2Reason(e));\n-            ++e;\n-            if (e > Q_MAX) {\n-                break;\n-            }\n-            int kp = flog10threeQuartersPow2(e);\n-            addOnFail(kp >= k0, flog10threeQuartersPow2Reason(e));\n-            if (kp > k0) {\n-                \/\/ k changes at most by 1 at each iteration, hence:\n-                addOnFail(kp - k0 == 1, flog10threeQuartersPow2Reason(e));\n-                k0 = kp;\n-                u10 = u10.multiply(TEN);\n-                l = u;\n-                u = u10.divide(THREE);\n-            }\n-        }\n+    private static int ge_max() {\n+        return Integer.max(-K_MIN, E_THR_I - 2);\n@@ -271,2 +117,2 @@\n-    private static String flog10pow2Reason(int e) {\n-        return \"flog10pow2(\" + e + \") is incorrect\";\n+    private static int ge_min() {\n+        return Integer.min(-K_MAX, E_THR_Z - (N - 1));\n@@ -275,23 +121,3 @@\n-    \/*\n-    Let\n-        k = floor(log10(2^e))\n-    The method verifies that\n-        k = flog10pow2(e),    Q_MIN <= e <= Q_MAX\n-    This range covers all binary exponents of doubles and floats.\n-\n-    The first equation above is equivalent to\n-        10^k <= 2^e < 10^(k+1)\n-    Equality holds iff e = k = 0.\n-    Henceforth, the predicates to check are equivalent to\n-        k = 0,    if e = 0\n-        10^k < 2^e < 10^(k+1),    otherwise\n-    The latter will be transformed in various ways for checking purposes.\n-\n-    For integer n > 0, let further\n-        b = len2(n)\n-    denote its length in bits. This means exactly the same as\n-        2^(b-1) <= n < 2^b\n-     *\/\n-    private static void testFlog10pow2() {\n-        \/\/ First check the case e = 0\n-        addOnFail(flog10pow2(0) == 0, flog10pow2Reason(0));\n+    private static int r(int e) {\n+        return flog2pow10(e) - 125;\n+    }\n@@ -299,41 +125,3 @@\n-        \/*\n-        Now check the range F * Q_MIN <= e < 0.\n-        By inverting all quantities, the predicate to check is equivalent to\n-            10^(-k-1) < 2^(-e) < 10^(-k)\n-        As e < 0, it follows that 2^(-e) >= 2 and the right inequality\n-        implies k < 0.\n-        The left inequality means exactly the same as\n-            len2(10^(-k-1)) <= -e\n-        Similarly, the right inequality is equivalent to\n-            -e < len2(10^(-k))\n-        The original predicate is therefore equivalent to\n-            len2(10^(-k-1)) <= -e < len2(10^(-k))\n-        The powers of 10 are integers because k < 0.\n-\n-        Starting with e = -1 and decrementing towards the lower bound, the code\n-        keeps track of the two powers of 10 to avoid recomputing them.\n-        This is easy because at each iteration k changes at most by 1. A simple\n-        multiplication by 10 computes the next power of 10 when needed.\n-         *\/\n-        int e = -1;\n-        int k = flog10pow2(e);\n-        addOnFail(k < 0, flog10pow2Reason(e));\n-        BigInteger l = TEN.pow(-k - 1);\n-        BigInteger u = l.multiply(TEN);\n-        for (;;) {\n-            addOnFail(l.bitLength() <= -e & -e < u.bitLength(),\n-                    flog10pow2Reason(e));\n-            --e;\n-            if (e < Q_MIN) {\n-                break;\n-            }\n-            int kp = flog10pow2(e);\n-            addOnFail(kp <= k, flog10pow2Reason(e));\n-            if (kp < k) {\n-                \/\/ k changes at most by 1 at each iteration, hence:\n-                addOnFail(k - kp == 1, flog10pow2Reason(e));\n-                k = kp;\n-                l = u;\n-                u = u.multiply(TEN);\n-            }\n-        }\n+    private static BigInteger g(int e) {\n+        return floor(pow10(e).multiply(pow2(-r(e)))).add(ONE);\n+    }\n@@ -341,35 +129,2 @@\n-        \/*\n-        Finally, in a similar vein, check the range 0 <= e <= Q_MAX.\n-        In predicate\n-            10^k < 2^e < 10^(k+1)\n-        the right inequality shows that k >= 0.\n-        The left inequality means the same as\n-            len2(10^k) <= e\n-        and the right inequality holds iff\n-            e < len2(10^(k+1))\n-        The original predicate is thus equivalent to\n-            len2(10^k) <= e < len2(10^(k+1))\n-        As k >= 0, the powers of 10 are integers.\n-         *\/\n-        e = 1;\n-        k = flog10pow2(e);\n-        addOnFail(k >= 0, flog10pow2Reason(e));\n-        l = TEN.pow(k);\n-        u = l.multiply(TEN);\n-        for (;;) {\n-            addOnFail(l.bitLength() <= e & e < u.bitLength(),\n-                    flog10pow2Reason(e));\n-            ++e;\n-            if (e > Q_MAX) {\n-                break;\n-            }\n-            int kp = flog10pow2(e);\n-            addOnFail(kp >= k, flog10pow2Reason(e));\n-            if (kp > k) {\n-                \/\/ k changes at most by 1 at each iteration, hence:\n-                addOnFail(kp - k == 1, flog10pow2Reason(e));\n-                k = kp;\n-                l = u;\n-                u = u.multiply(TEN);\n-            }\n-        }\n+    private static String gReason(int e) {\n+        return \"g(\" + e + \") is incorrect\";\n@@ -378,2 +133,11 @@\n-    private static String flog2pow10Reason(int e) {\n-        return \"flog2pow10(\" + e + \") is incorrect\";\n+    private static void testG(int e) {\n+        long g1 = g1(e);\n+        long g0 = g0(e);\n+        \/\/ 2^62 <= g1 < 2^63, 0 < g0 < 2^63\n+        addOnFail((g1 >>> -2) == 0b01 && g0 > 0, gReason(e));\n+\n+        BigInteger g = valueOf(g1).shiftLeft(63).or(valueOf(g0));\n+        \/\/ double check that 2^125 <= g < 2^126\n+        addOnFail(g.signum() > 0 && g.bitLength() == 126, gReason(e));\n+\n+        addOnFail(g(e).compareTo(g) == 0, gReason(e));\n@@ -382,23 +146,5 @@\n-    \/*\n-    Let\n-        k = floor(log2(10^e))\n-    The method verifies that\n-        k = flog2pow10(e),    -K_MAX <= e <= -K_MIN\n-    This range covers all decimal exponents of doubles and floats.\n-\n-    The first equation above is equivalent to\n-        2^k <= 10^e < 2^(k+1)\n-    Equality holds iff e = 0, implying k = 0.\n-    Henceforth, the equivalent predicates to check are\n-        k = 0,    if e = 0\n-        2^k < 10^e < 2^(k+1),    otherwise\n-    The latter will be transformed in various ways for checking purposes.\n-\n-    For integer n > 0, let further\n-        b = len2(n)\n-    denote its length in bits. This means exactly the same as\n-        2^(b-1) <= n < 2^b\n-    *\/\n-    private static void testFlog2pow10() {\n-        \/\/ First check the case e = 0\n-        addOnFail(flog2pow10(0) == 0, flog2pow10Reason(0));\n+    private static void testG() {\n+        for (int e = GE_MIN; e <= GE_MAX; ++e) {\n+            testG(e);\n+        }\n+    }\n@@ -406,22 +152,8 @@\n-        \/*\n-        Now check the range K_MIN <= e < 0.\n-        By inverting all quantities, the predicate to check is equivalent to\n-            2^(-k-1) < 10^(-e) < 2^(-k)\n-        As e < 0, this leads to 10^(-e) >= 10 and the right inequality implies\n-        k <= -4.\n-        The above means the same as\n-            len2(10^(-e)) = -k\n-        The powers of 10 are integer values since e < 0.\n-         *\/\n-        int e = -1;\n-        int k0 = flog2pow10(e);\n-        addOnFail(k0 <= -4, flog2pow10Reason(e));\n-        BigInteger l = TEN;\n-        for (;;) {\n-            addOnFail(l.bitLength() == -k0, flog2pow10Reason(e));\n-            --e;\n-            if (e < -K_MAX) {\n-                break;\n-            }\n-            k0 = flog2pow10(e);\n-            l = l.multiply(TEN);\n+    private static String flog10threeQuartersPow2Reason(int q) {\n+        return \"flog10threeQuartersPow2(\" + q + \") is incorrect\";\n+    }\n+\n+    private static void testFlog10threeQuartersPow2() {\n+        for (int q = Q_MIN - MARGIN; q <= Q_MAX + MARGIN; ++q) {\n+            addOnFail(flog10threeQuartersPow2(q) == MathUtils.flog10threeQuartersPow2(q),\n+                    flog10threeQuartersPow2Reason(q));\n@@ -429,0 +161,1 @@\n+    }\n@@ -430,22 +163,8 @@\n-        \/*\n-        Finally, check the range 0 < e <= K_MAX.\n-        From the predicate\n-            2^k < 10^e < 2^(k+1)\n-        as e > 0, it follows that 10^e >= 10 and the right inequality implies\n-        k >= 3.\n-        The above means the same as\n-            len2(10^e) = k + 1\n-        The powers of 10 are all integer valued, as e > 0.\n-         *\/\n-        e = 1;\n-        k0 = flog2pow10(e);\n-        addOnFail(k0 >= 3, flog2pow10Reason(e));\n-        l = TEN;\n-        for (;;) {\n-            addOnFail(l.bitLength() == k0 + 1, flog2pow10Reason(e));\n-            ++e;\n-            if (e > -K_MIN) {\n-                break;\n-            }\n-            k0 = flog2pow10(e);\n-            l = l.multiply(TEN);\n+    private static String flog10pow2Reason(int q) {\n+        return \"flog10pow2(\" + q + \") is incorrect\";\n+    }\n+\n+    private static void testFlog10pow2() {\n+        for (int q = Q_MIN - MARGIN; q <= Q_MAX + MARGIN; ++q) {\n+            addOnFail(flog10pow2(q) == MathUtils.flog10pow2(q),\n+                    flog10pow2Reason(q));\n@@ -455,6 +174,9 @@\n-    private static void testBinaryConstants() {\n-        addOnFail((long) (double) C_MIN == C_MIN, \"C_MIN\");\n-        addOnFail((long) (double) C_MAX == C_MAX, \"C_MAX\");\n-        addOnFail(scalb(1.0, Q_MIN) == MIN_VALUE, \"MIN_VALUE\");\n-        addOnFail(scalb((double) C_MIN, Q_MIN) == MIN_NORMAL, \"MIN_NORMAL\");\n-        addOnFail(scalb((double) C_MAX, Q_MAX) == MAX_VALUE, \"MAX_VALUE\");\n+    private static String flog2pow10Reason(int e) {\n+        return \"flog2pow10(\" + e + \") is incorrect\";\n+    }\n+\n+    private static void testFlog2pow10() {\n+        for (int e = -K_MAX - MARGIN; e <= -K_MIN + MARGIN; ++e) {\n+            addOnFail(flog2pow10(e) == MathUtils.flog2pow10(e),\n+                    flog2pow10Reason(e));\n+        }\n@@ -464,3 +186,2 @@\n-        addOnFail(K_MIN == MathUtils.K_MIN, \"K_MIN\");\n-        addOnFail(K_MAX == MathUtils.K_MAX, \"K_MAX\");\n-        addOnFail(H == MathUtils.H, \"H\");\n+        addOnFail(GE_MIN == MathUtils.GE_MIN, \"GE_MIN\");\n+        addOnFail(GE_MAX == MathUtils.GE_MAX, \"GE_MAX\");\n@@ -474,4 +195,8 @@\n-        int e = 0;\n-        long pow = 1;\n-        for (; e <= H; e += 1, pow *= 10) {\n-            addOnFail(pow == pow10(e), pow10Reason(e));\n+        addOnFail(N == MathUtils.N, \"N\");\n+        try {\n+            Math.unsignedPowExact(10L, N + 1);  \/\/ expected to throw\n+            addOnFail(false, \"N\");\n+        } catch (RuntimeException _) {\n+        }\n+        for (int e = 0; e <= N; ++e) {\n+            addOnFail(Math.unsignedPowExact(10L, e) == MathUtils.pow10(e), pow10Reason(e));\n@@ -482,1 +207,0 @@\n-        testBinaryConstants();\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/java.base\/jdk\/internal\/math\/MathUtilsChecker.java","additions":125,"deletions":401,"binary":false,"changes":526,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.math.BigInteger;\n@@ -31,1 +30,1 @@\n-import static java.math.BigInteger.*;\n+import static jdk.internal.math.MathUtilsChecker.*;\n@@ -55,26 +54,0 @@\n-    \/*\n-     * Returns e be such that 10^(e-1) <= v < 10^e\n-     *\/\n-    static int e(double v) {\n-        \/* floor(log10(v)) + 1 is a first good approximation of e *\/\n-        int e = (int) Math.floor(Math.log10(v)) + 1;\n-\n-        \/* Full precision search for e *\/\n-        BigDecimal vp = new BigDecimal(v);\n-        while (new BigDecimal(ONE, -(e - 1)).compareTo(vp) > 0) {\n-            e -= 1;\n-        }\n-        while (vp.compareTo(new BigDecimal(ONE, -e)) >= 0) {\n-            e += 1;\n-        }\n-        return e;\n-    }\n-\n-    static long cTiny(int qMin, int kMin) {\n-        BigInteger[] qr = ONE.shiftLeft(-qMin)\n-                .divideAndRemainder(TEN.pow(-(kMin + 1)));\n-        BigInteger cTiny = qr[1].signum() > 0 ? qr[0].add(ONE) : qr[0];\n-        addOnFail(cTiny.bitLength() < Long.SIZE, \"C_TINY\");\n-        return cTiny.longValue();\n-    }\n-\n@@ -257,1 +230,1 @@\n-        if (minExp() > q + l || q + l > maxExp()) {\n+        if (eMin() > q + l || q + l > eMax()) {\n@@ -345,0 +318,85 @@\n+    static int size(int p) {\n+        return 1 << -Integer.numberOfLeadingZeros(p);\n+    }\n+\n+    static int w(int p) {\n+        return (size(p) - 1) - (p - 1);\n+    }\n+\n+    static int q_min(int p) {\n+        return (-1 << (w(p) - 1)) - p + 3;\n+    }\n+\n+    static int q_max(int p) {\n+        return (1 << (w(p) - 1)) - p;\n+    }\n+\n+    static long c_min(int p) {\n+        return 1L << (p - 1);\n+    }\n+\n+    static long c_max(int p) {\n+        return (1L << p) - 1;\n+    }\n+\n+    \/* max{e : 10^(e-1) <= v *\/\n+    static int e(BigDecimal v) {\n+        return flog10(v) + 1;\n+    }\n+\n+    static int e_min(int p) {\n+        return e(min_value(p));\n+    }\n+\n+    static int e_max(int p) {\n+        return e(max_value(p));\n+    }\n+\n+    static int e_thr_z(int p) {\n+        BigDecimal THR_Z = pow2(q_min(p) - 1);\n+        return flog10(THR_Z);\n+    }\n+\n+    static int e_thr_i(int p) {\n+        BigDecimal THR_I = BigDecimal.valueOf(2 * c_max(p) + 1)\n+                .multiply(pow2(q_max(p) - 1));\n+        return clog10(THR_I) + 1;\n+    }\n+\n+    static int k_min(int p) {\n+        return flog10pow2(q_min(p));\n+    }\n+\n+    static int k_max(int p) {\n+        return flog10pow2(q_max(p));\n+    }\n+\n+    \/* C_TINY = ceil(2^(-Q_MIN) 10^(K_MIN+1)) *\/\n+    static int c_tiny(int p) {\n+        return ceil(pow2(-q_min(p))\n+                .multiply(pow10(k_min(p) + 1)))\n+                .intValueExact();\n+    }\n+\n+    static int h(int p) {\n+        return flog10pow2(p) + 2;\n+    }\n+\n+    static BigDecimal min_value(int p) {\n+        return pow2(q_min(p));\n+    }\n+\n+    static BigDecimal min_normal(int p) {\n+        return BigDecimal.valueOf(c_min(p))\n+                .multiply(pow2(q_min(p)));\n+    }\n+\n+    static BigDecimal max_value(int p) {\n+        return BigDecimal.valueOf(c_max(p))\n+                .multiply(pow2(q_max(p)));\n+    }\n+\n+    abstract int eMin();\n+\n+    abstract int eMax();\n+\n@@ -357,4 +415,0 @@\n-    abstract int minExp();\n-\n-    abstract int maxExp();\n-\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/java.base\/jdk\/internal\/math\/ToDecimalChecker.java","additions":88,"deletions":34,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-    static String sampleEvent = EventNames.CPUTimeSample;\n-\n@@ -46,4 +44,4 @@\n-        run(EventNames.ExecutionSample);\n-        run(EventNames.CPUTimeSample);\n-        run(EventNames.ExecutionSample);\n-        run(EventNames.CPUTimeSample);\n+        run(EventNames.CPUTimeSample, \"throttle\", \"1000\/s\");\n+        run(EventNames.ExecutionSample, \"period\", \"1100ms\");\n+        run(EventNames.CPUTimeSample, \"throttle\", \"1100ms\");\n+        run(EventNames.ExecutionSample, \"period\", \"1000ms\");\n@@ -52,1 +50,1 @@\n-    private static void run(String eventType) {\n+    private static void run(String eventType, String attribute, String value) {\n@@ -56,2 +54,2 @@\n-            rs.enable(sampleEvent).with(\"throttle\", \"1000\/s\");\n-            rs.onEvent(sampleEvent, e -> {\n+            rs.enable(eventType).with(attribute, value);\n+            rs.onEvent(eventType, e -> {\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeAndExecutionSample.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,2 @@\n+    public static Path CASEFOLDING =\n+        UCD_DIR.resolve(\"CaseFolding.txt\");\n","filename":"test\/jdk\/lib\/testlibrary\/java\/lang\/UCDFiles.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,166 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.imageio.IIOImage;\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageTypeSpecifier;\n+import javax.imageio.ImageWriter;\n+import javax.imageio.ImageWriteParam;\n+import javax.imageio.metadata.IIOMetadata;\n+import javax.imageio.metadata.IIOMetadataNode;\n+import javax.imageio.stream.ImageOutputStream;\n+import java.awt.AlphaComposite;\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.IndexColorModel;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URL;\n+\n+\/**\n+ * This constructs sample gif files used to test different combinations\n+ * of gif frame disposal methods and transparent pixel indices.\n+ *\/\n+public class GifBuilder {\n+\n+    \/**\n+     * Different disposal methods for gif frames. These names exactly\n+     * correspond to the String identifier ImageIO uses.\n+     *\/\n+    public enum Disposal {none, doNotDispose, restoreToBackgroundColor,\n+        restoreToPrevious};\n+\n+\n+    \/**\n+     * @param disposal the frame disposal method\n+     * @param isFirstTableIndexTransparent if true then the transparent pixel\n+     *                                     is set to 0. If false then the\n+     *                                     transparent pixel is set to the\n+     *                                     last index.\n+     *\/\n+    public record FrameDescription(Disposal disposal, boolean\n+            isFirstTableIndexTransparent) {}\n+\n+    \/**\n+     * This creates a sample gif image based on a series of FrameDescriptions,\n+     * and the calls {@link GifComparison#run(URL)}\n+     *\/\n+    public static void test(FrameDescription... frameDescriptions)\n+            throws Throwable {\n+        File file = createTestFile(frameDescriptions);\n+        try {\n+            GifComparison.run(file.toURI().toURL());\n+        } finally {\n+            file.delete();\n+        }\n+    }\n+\n+    private static File createTestFile(FrameDescription... frameDescriptions)\n+            throws IOException {\n+        Color[] colors = new Color[] {\n+                Color.red,\n+                Color.yellow,\n+                Color.green,\n+                Color.cyan\n+        };\n+        File file = File.createTempFile(\"GifBuilder\", \".gif\");\n+        ImageOutputStream ios = ImageIO.createImageOutputStream(file);\n+        ImageWriter gifWriter = ImageIO.getImageWritersByFormatName(\"GIF\").\n+                next();\n+        gifWriter.setOutput(ios);\n+        ImageWriteParam wparam = gifWriter.getDefaultWriteParam();\n+        IIOMetadata streamMetadata = gifWriter.\n+                getDefaultStreamMetadata(wparam);\n+        gifWriter.prepareWriteSequence(streamMetadata);\n+\n+        IndexColorModel icm = createIndexColorModel(colors, colors.length - 1);\n+\n+        ImageTypeSpecifier s = ImageTypeSpecifier.createFromBufferedImageType(\n+                BufferedImage.TYPE_BYTE_INDEXED);\n+        IIOMetadata metadata = gifWriter.getDefaultImageMetadata(s, wparam);\n+        String metaFormatName = metadata.getNativeMetadataFormatName();\n+\n+        for (FrameDescription frameDescription : frameDescriptions) {\n+\n+            \/\/ prepare the image:\n+            int width = 100 + 50 * (icm.getMapSize() - 2);\n+            BufferedImage bi = new BufferedImage(width, 100,\n+                    BufferedImage.TYPE_BYTE_INDEXED, icm);\n+            Graphics2D g = bi.createGraphics();\n+            g.setComposite(AlphaComposite.Clear);\n+            g.fillRect(0, 0, bi.getWidth(), bi.getHeight());\n+            g.setComposite(AlphaComposite.SrcOver);\n+            int x = 0;\n+            for (int a = 0; a < icm.getMapSize() - 1; a++) {\n+                if (a != icm.getTransparentPixel()) {\n+                    Color color = new Color(icm.getRGB(a));\n+                    g.setColor(color);\n+                    g.fillOval(x, 0, 100, 100);\n+                    x += 50;\n+                }\n+            }\n+            g.dispose();\n+\n+            \/\/ wrap attributes for gifWriter:\n+            int transparentPixel = frameDescription.isFirstTableIndexTransparent\n+                    ? 0 : icm.getMapSize() - 1;\n+            IIOMetadata frameMetadata = gifWriter.getDefaultImageMetadata(\n+                    ImageTypeSpecifier.createFromRenderedImage(bi), wparam);\n+            IIOMetadataNode root = new IIOMetadataNode(metaFormatName);\n+            IIOMetadataNode gce = new IIOMetadataNode(\n+                    \"GraphicControlExtension\");\n+            gce.setAttribute(\"disposalMethod\",\n+                    frameDescription.disposal.name());\n+            gce.setAttribute(\"userInputFlag\", \"FALSE\");\n+            gce.setAttribute(\"transparentColorFlag\", \"TRUE\");\n+            gce.setAttribute(\"delayTime\", \"0\");\n+            gce.setAttribute(\"transparentColorIndex\",\n+                    Integer.toString(transparentPixel));\n+            root.appendChild(gce);\n+            frameMetadata.mergeTree(metaFormatName, root);\n+            IIOImage img = new IIOImage(bi,  null, frameMetadata);\n+            gifWriter.writeToSequence(img, wparam);\n+        }\n+        gifWriter.endWriteSequence();\n+        ios.flush();\n+        ios.close();\n+\n+        return file;\n+    }\n+\n+    private static IndexColorModel createIndexColorModel(Color[] colors,\n+                                                 int transparentIndex) {\n+        byte[] r = new byte[colors.length];\n+        byte[] g = new byte[colors.length];\n+        byte[] b = new byte[colors.length];\n+        for (int a = 0; a < colors.length; a++) {\n+            r[a] = (byte) colors[a].getRed();\n+            g[a] = (byte) colors[a].getGreen();\n+            b[a] = (byte) colors[a].getBlue();\n+        }\n+        int bits = (int)(Math.log(colors.length) \/ Math.log(2) + .5);\n+        return new IndexColorModel(bits, colors.length, r, g, b,\n+                transparentIndex);\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/image\/gif\/GifBuilder.java","additions":166,"deletions":0,"binary":false,"changes":166,"status":"added"},{"patch":"@@ -0,0 +1,406 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageReader;\n+import javax.imageio.metadata.IIOMetadata;\n+import javax.imageio.metadata.IIOMetadataNode;\n+import java.awt.AlphaComposite;\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Toolkit;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.awt.image.ImageConsumer;\n+import java.awt.image.IndexColorModel;\n+import java.net.URL;\n+import java.util.Hashtable;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.concurrent.Semaphore;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+\/**\n+ * This compares the last frame of ImageIO's rendering of a gif with the\n+ * ToolkitImage's rendering.\n+ * <p>\n+ * This is intended to serve as a helper class for more specific test cases.\n+ *\/\n+public class GifComparison {\n+\n+    \/**\n+     * This inspects the last frame of a gif and throws an Error \/ Exception\n+     * if ImageIO and ToolkitImage produce different BufferedImage renderings.\n+     *\n+     * @param srcURL the URL of the image to inspect\n+     *\n+     * @return the last frame encoded as a TYPE_INT_ARGB image.\n+     *         <p>\n+     *         Unit tests may further inspect this image to make sure certain\n+     *         conditions are met.\n+     *\/\n+    public static BufferedImage run(URL srcURL) throws Throwable {\n+        System.out.println(\"Comparing ImageIO vs ToolkitImage rendering of \" +\n+                srcURL);\n+        ImageIOModel ioModel = new ImageIOModel(srcURL);\n+        AWTModel awtModel = new AWTModel(srcURL);\n+\n+        BufferedImage lastImage = null;\n+\n+        int a = ioModel.frames.size() - 1;\n+        BufferedImage ioImg = ioModel.getFrame(a);\n+        BufferedImage awtImage = awtModel.getFrame(a);\n+\n+        lastImage = awtImage;\n+\n+        if (!(ioImg.getWidth() == awtImage.getWidth() &&\n+                ioImg.getHeight() == awtImage.getHeight()))\n+            throw new Error(\"These images are not the same size: \" +\n+                    ioImg.getWidth() + \"x\" + ioImg.getHeight() + \" vs \" +\n+                    awtImage.getWidth() + \"x\" + awtImage.getHeight());\n+\n+        for (int y = 0; y < ioImg.getHeight(); y++) {\n+            for (int x = 0; x < ioImg.getWidth(); x++) {\n+                int argb1 = ioImg.getRGB(x, y);\n+                int argb2 = awtImage.getRGB(x, y);\n+\n+                int alpha1 = (argb1 & 0xff000000) >> 24;\n+                int alpha2 = (argb2 & 0xff000000) >> 24;\n+                if (alpha1 == 0 && alpha2 == 0) {\n+                    continue;\n+                } else if (alpha1 == 0 || alpha2 == 0) {\n+                    throw new Error(\"pixels at (\" + x + \", \" + y +\n+                            \") have different opacities: \" +\n+                            Integer.toUnsignedString(argb1, 16) + \" vs \" +\n+                            Integer.toUnsignedString(argb2, 16));\n+                }\n+                int rgb1 = argb1 & 0xffffff;\n+                int rgb2 = argb2 & 0xffffff;\n+                if (rgb1 != rgb2) {\n+                    throw new Error(\"pixels at (\" + x + \", \" + y +\n+                            \") have different opaque RGB values: \" +\n+                            Integer.toUnsignedString(rgb1, 16) + \" vs \" +\n+                            Integer.toUnsignedString(rgb2, 16));\n+                }\n+            }\n+        }\n+        System.out.println(\"Passed\");\n+        return lastImage;\n+    }\n+}\n+\n+\/**\n+ * This identifies frames of a GIF image using ImageIO classes.\n+ *\/\n+class ImageIOModel {\n+\n+    record Frame(int x, int y, int w, int h, String disposalMethod,\n+                 int transparentColorIndex) {}\n+\n+    private final URL url;\n+    private int width, height;\n+\n+    final List<Frame> frames = new LinkedList<>();\n+    private Color backgroundColor;\n+\n+    ImageIOModel(URL url) throws Exception {\n+        this.url = url;\n+\n+        ImageReader reader = ImageIO.getImageReadersByFormatName(\"gif\").next();\n+        try {\n+            initialize(reader);\n+        } finally {\n+            reader.dispose();\n+        }\n+    }\n+\n+    private void initialize(ImageReader reader) throws Exception {\n+        reader.setInput(ImageIO.createImageInputStream(url.openStream()));\n+        IIOMetadata metadata = reader.getStreamMetadata();\n+        IIOMetadataNode globalRoot = (IIOMetadataNode) metadata.getAsTree(\n+                metadata.getNativeMetadataFormatName());\n+\n+        NodeList globalScreenDescriptor = globalRoot.getElementsByTagName(\n+                \"LogicalScreenDescriptor\");\n+        if (globalScreenDescriptor.getLength() > 0) {\n+            IIOMetadataNode screenDescriptor = (IIOMetadataNode)\n+                    globalScreenDescriptor.item(0);\n+\n+            if (screenDescriptor != null) {\n+                width = Integer.parseInt(\n+                        screenDescriptor.getAttribute(\"logicalScreenWidth\"));\n+                height = Integer.parseInt(\n+                        screenDescriptor.getAttribute(\"logicalScreenHeight\"));\n+            }\n+        }\n+\n+        NodeList globalColorTable = globalRoot.getElementsByTagName(\n+                \"GlobalColorTable\");\n+        if (globalColorTable.getLength() > 0) {\n+            IIOMetadataNode colorTable = (IIOMetadataNode)\n+                    globalColorTable.item(0);\n+\n+            if (colorTable != null) {\n+                String bgIndex = colorTable.getAttribute(\n+                        \"backgroundColorIndex\");\n+                IIOMetadataNode colorEntry = (IIOMetadataNode)\n+                        colorTable.getFirstChild();\n+                while (colorEntry != null) {\n+                    if (colorEntry.getAttribute(\"index\").equals(bgIndex)) {\n+                        int red = Integer.parseInt(colorEntry.getAttribute(\n+                                \"red\"));\n+                        int green = Integer.parseInt(colorEntry.getAttribute(\n+                                \"green\"));\n+                        int blue = Integer.parseInt(colorEntry.getAttribute(\n+                                \"blue\"));\n+\n+                        backgroundColor = new Color(red, green, blue);\n+                        break;\n+                    }\n+\n+                    colorEntry = (IIOMetadataNode) colorEntry.getNextSibling();\n+                }\n+            }\n+        }\n+\n+        int frameCount = reader.getNumImages(true);\n+\n+        for (int frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n+            IIOMetadataNode root = (IIOMetadataNode) reader.\n+                    getImageMetadata(frameIndex).\n+                    getAsTree(\"javax_imageio_gif_image_1.0\");\n+            IIOMetadataNode gce = (IIOMetadataNode) root.\n+                    getElementsByTagName(\"GraphicControlExtension\").item(0);\n+            NodeList children = root.getChildNodes();\n+            int transparentColorIndex = -1;\n+            if (\"TRUE\".equalsIgnoreCase(gce.getAttribute(\n+                    \"transparentColorFlag\"))) {\n+                transparentColorIndex = Integer.parseInt(gce.getAttribute(\n+                        \"transparentColorIndex\"));\n+            }\n+\n+            String disposalMethodStr = gce.getAttribute(\"disposalMethod\");\n+\n+            int frameX = 0;\n+            int frameY = 0;\n+            int frameWidth = width;\n+            int frameHeight = height;\n+\n+            for (int nodeIndex = 0; nodeIndex < children.getLength();\n+                 nodeIndex++) {\n+                Node nodeItem = children.item(nodeIndex);\n+\n+                if (nodeItem.getNodeName().equals(\"ImageDescriptor\")) {\n+                    NamedNodeMap map = nodeItem.getAttributes();\n+\n+                    frameX = Integer.parseInt(map.getNamedItem(\n+                            \"imageLeftPosition\").getNodeValue());\n+                    frameY = Integer.parseInt(map.getNamedItem(\n+                            \"imageTopPosition\").getNodeValue());\n+                    frameWidth = Integer.parseInt(map.getNamedItem(\n+                            \"imageWidth\").getNodeValue());\n+                    frameHeight = Integer.parseInt(map.getNamedItem(\n+                            \"imageHeight\").getNodeValue());\n+                    width = Math.max(width, frameX + frameWidth);\n+                    height = Math.max(height, frameY + frameHeight);\n+                }\n+            }\n+\n+            frames.add(new Frame(frameX, frameY, frameWidth, frameHeight,\n+                    disposalMethodStr, transparentColorIndex));\n+        }\n+    }\n+\n+    public BufferedImage getFrame(int frameIndex) throws Exception {\n+        ImageReader reader = ImageIO.getImageReadersByFormatName(\"gif\").next();\n+        reader.setInput(ImageIO.createImageInputStream(url.openStream()));\n+        try {\n+            BufferedImage image = new BufferedImage(width, height,\n+                    BufferedImage.TYPE_INT_ARGB);\n+            BufferedImage previousImage = null;\n+\n+            for (int a = 0; a <= frameIndex; a++) {\n+                Frame f = frames.get(a);\n+                if (Objects.equals(f.disposalMethod, \"restoreToPrevious\")) {\n+                    if (previousImage == null) {\n+                        previousImage = new BufferedImage(image.getWidth(),\n+                                image.getHeight(),\n+                                BufferedImage.TYPE_INT_ARGB);\n+                    }\n+                }\n+\n+                if (previousImage != null) {\n+                    Graphics2D g = previousImage.createGraphics();\n+                    g.setComposite(AlphaComposite.Clear);\n+                    g.fillRect(0, 0, image.getWidth(), image.getHeight());\n+                    g.setComposite(AlphaComposite.SrcOver);\n+                    g.drawImage(image, 0, 0, null);\n+                    g.dispose();\n+                }\n+\n+                BufferedImage frame = reader.read(a);\n+                Graphics2D g = image.createGraphics();\n+                g.drawImage(frame, f.x, f.y, null);\n+                g.dispose();\n+                IndexColorModel icm = (IndexColorModel) frame.getColorModel();\n+\n+                if (a != frameIndex) {\n+                    switch (f.disposalMethod) {\n+                        case \"restoreToBackgroundColor\" -> {\n+                            g = image.createGraphics();\n+                            int t = icm.getTransparentPixel();\n+                            if (t >= 0 && t == f.transparentColorIndex) {\n+                                g.setComposite(AlphaComposite.Clear);\n+                                g.fillRect(f.x, f.y, f.w, f.h);\n+                            } else {\n+                                g.setColor(backgroundColor);\n+                                g.fillRect(f.x, f.y, f.w, f.h);\n+                            }\n+                            g.dispose();\n+                        }\n+                        case \"restoreToPrevious\" -> {\n+                            g = image.createGraphics();\n+                            g.setComposite(AlphaComposite.Clear);\n+                            g.fillRect(f.x, f.y, f.w, f.h);\n+                            g.setComposite(AlphaComposite.SrcOver);\n+                            g.drawImage(previousImage, f.x, f.y,\n+                                    f.x + f.w, f.y + f.h,\n+                                    f.x, f.y,\n+                                    f.x + f.w, f.y + f.h, null);\n+                            g.dispose();\n+                        }\n+                    }\n+                }\n+            }\n+\n+            return image;\n+        } finally {\n+            reader.dispose();\n+        }\n+    }\n+}\n+\n+\n+\/**\n+ * This identifies frames of a GIF image using ToolkitImage \/ ImageProducer.\n+ *\/\n+class AWTModel {\n+    private final URL url;\n+\n+    AWTModel(URL url) {\n+        this.url = url;\n+    }\n+\n+    public BufferedImage getFrame(int frameIndex) {\n+        \/\/ Unfortunately the AWT gif decoder calls Thread.sleep if the frame\n+        \/\/ delay is non-zero. So this method may take a long time to render a\n+        \/\/ frame simply because the decoder is calling Thread.sleep constantly.\n+\n+        Image image = Toolkit.getDefaultToolkit().createImage(url);\n+\n+        AtomicReference<BufferedImage> returnValue = new AtomicReference<>();\n+        Semaphore semaphore = new Semaphore(1);\n+        semaphore.acquireUninterruptibly();\n+        image.getSource().startProduction(new ImageConsumer() {\n+            BufferedImage bi;\n+            int frameCtr = 0;\n+\n+            @Override\n+            public void setDimensions(int width, int height) {\n+                bi = new BufferedImage(width, height,\n+                        BufferedImage.TYPE_INT_ARGB);\n+            }\n+\n+            @Override\n+            public void setProperties(Hashtable<?, ?> props) {}\n+\n+            @Override\n+            public void setColorModel(ColorModel model) {}\n+\n+            @Override\n+            public void setHints(int hintflags) {}\n+\n+            @Override\n+            public void setPixels(int x, int y, int w, int h,\n+                                  ColorModel model, byte[] pixels, int off,\n+                                  int scansize) {\n+                try {\n+                    final int yMax = y + h;\n+                    final int xMax = x + w;\n+\n+                    IndexColorModel icm = (IndexColorModel) model;\n+                    int[] colorModelRGBs = new int[icm.getMapSize()];\n+                    icm.getRGBs(colorModelRGBs);\n+                    int[] argbRow = new int[bi.getWidth()];\n+\n+                    for (int y_ = y; y_ < yMax; y_++) {\n+                        int i = y_ * scansize + off;\n+                        for (int x_ = x; x_ < xMax; x_++, i++) {\n+                            int pixel = pixels[i] & 0xff;\n+                            argbRow[x_ - x] = colorModelRGBs[pixel];\n+                        }\n+                        bi.getRaster().setDataElements(x, y_, w, 1, argbRow);\n+                    }\n+                } catch (RuntimeException e) {\n+                    \/\/ we don't expect this to happen, but if something goes\n+                    \/\/ wrong nobody else will print our stacktrace for us:\n+                    e.printStackTrace();\n+                    throw e;\n+                }\n+            }\n+\n+            @Override\n+            public void setPixels(int x, int y, int w, int h,\n+                                  ColorModel model, int[] pixels, int off,\n+                                  int scansize) {}\n+\n+            @Override\n+            public void imageComplete(int status) {\n+                try {\n+                    frameCtr++;\n+                    if (frameCtr == frameIndex + 1) {\n+                        returnValue.set(bi);\n+                        semaphore.release();\n+                        \/\/ if we don't detach this consumer the producer will\n+                        \/\/ loop forever\n+                        image.getSource().removeConsumer(this);\n+                        image.flush();\n+                    }\n+                } catch(Exception e) {\n+                    e.printStackTrace();\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        });\n+\n+        semaphore.acquireUninterruptibly();\n+\n+        return returnValue.get();\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/image\/gif\/GifComparison.java","additions":406,"deletions":0,"binary":false,"changes":406,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8356137\n+ * @summary This test verifies a non-zero transparent pixel in gifs works when\n+ * the disposal method changes from 2 to 1\n+ *\/\n+\n+public class GifEmptyBackgroundTest {\n+    public static void main(String[] args) throws Throwable {\n+        GifBuilder.test(\n+                new GifBuilder.FrameDescription(\n+                        GifBuilder.Disposal.restoreToBackgroundColor, false),\n+                new GifBuilder.FrameDescription(\n+                        GifBuilder.Disposal.doNotDispose, false),\n+                new GifBuilder.FrameDescription(\n+                        GifBuilder.Disposal.doNotDispose, false) );\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/image\/gif\/GifEmptyBackgroundTest.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -136,8 +136,14 @@\n-    @Parameter({\"IMAGE\", \"GOOD_SIGNING_KEY_USER_NAME\"})\n-    @Parameter({\"MAC_DMG\", \"GOOD_SIGNING_KEY_USER_NAME\"})\n-    @Parameter({\"MAC_PKG\", \"GOOD_SIGNING_KEY_USER_NAME_PKG\", \"GOOD_SIGNING_KEY_USER_NAME\"})\n-\n-    @Parameter({\"IMAGE\", \"GOOD_CODESIGN_SIGN_IDENTITY\"})\n-    @Parameter({\"MAC_PKG\", \"GOOD_CODESIGN_SIGN_IDENTITY\", \"GOOD_PKG_SIGN_IDENTITY\"})\n-    @Parameter({\"MAC_PKG\", \"GOOD_PKG_SIGN_IDENTITY\"})\n-    public static void testMultipleCertificates(PackageType type, SignOption... options) {\n+    \/\/ Case \"--mac-signing-key-user-name\": jpackage selects first certificate\n+    \/\/ found with warning message. Certificate hash is pass to \"codesign\" in this\n+    \/\/ case.\n+    @Parameter({\"IMAGE\", \"0\", \"GOOD_SIGNING_KEY_USER_NAME\"})\n+    @Parameter({\"MAC_DMG\", \"0\", \"GOOD_SIGNING_KEY_USER_NAME\"})\n+    @Parameter({\"MAC_PKG\", \"0\", \"GOOD_SIGNING_KEY_USER_NAME_PKG\", \"GOOD_SIGNING_KEY_USER_NAME\"})\n+\n+    \/\/ Case \"--mac-app-image-sign-identity\": sign identity will be pass to\n+    \/\/ \"codesign\" and \"codesign\" should fail due to multiple certificates with\n+    \/\/ same common name found.\n+    @Parameter({\"IMAGE\", \"1\", \"GOOD_CODESIGN_SIGN_IDENTITY\"})\n+    @Parameter({\"MAC_PKG\", \"1\", \"GOOD_CODESIGN_SIGN_IDENTITY\", \"GOOD_PKG_SIGN_IDENTITY\"})\n+    @Parameter({\"MAC_PKG\", \"1\", \"GOOD_PKG_SIGN_IDENTITY\"})\n+    public static void testMultipleCertificates(PackageType type, int jpackageExitCode, SignOption... options) {\n@@ -157,1 +163,1 @@\n-            }).execute(1);\n+            }).execute(jpackageExitCode);\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacSignTest.java","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -82,2 +82,1 @@\n-                inputSink.write(snippet.getKey() + \"\\n\");\n-                inputSink.close(); \/\/ Does not work: inputSink.write(\"\\u0004\"); \/\/ CTRL + D\n+                inputSink.write(snippet.getKey() + \"\\n\" + CTRL_D);\n@@ -88,0 +87,13 @@\n+\n+    public void testUserInputWithCtrlDAndMultipleSnippets() throws Exception {\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(\"IO.readln()\\n\" + CTRL_D);\n+            waitOutput(out, patternQuote(\"==> null\"));\n+            inputSink.write(\"IO.readln()\\nAB\\n\");\n+            waitOutput(out, patternQuote(\"==> \\\"AB\\\"\"));\n+            inputSink.write(\"System.in.read()\\n\" + CTRL_D);\n+            waitOutput(out, patternQuote(\"==> -1\"));\n+            inputSink.write(\"System.in.read()\\nA\\n\");\n+            waitOutput(out, patternQuote(\"==> 65\"));\n+        }, false);\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/InputUITest.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    protected static final String CTRL_D = \"\\u0004\";\n","filename":"test\/langtools\/jdk\/jshell\/UITesting.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8361499\n+ * @summary intersection type cast causes javac crash with -Xjcov\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.comp\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.tree\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ * @build toolbox.ToolBox toolbox.JavacTask NoTypeIntersectionASTAfterTransTypesTest\n+ * @run main NoTypeIntersectionASTAfterTransTypesTest\n+ *\/\n+\n+import java.util.List;\n+import com.sun.source.util.JavacTask;\n+import com.sun.tools.javac.api.JavacTool;\n+import com.sun.tools.javac.comp.TransTypes;\n+import com.sun.tools.javac.tree.JCTree;\n+import com.sun.tools.javac.tree.JCTree.JCTypeIntersection;\n+import com.sun.tools.javac.util.Context;\n+import com.sun.tools.javac.util.Context.Factory;\n+\n+import toolbox.ToolBox;\n+\n+public class NoTypeIntersectionASTAfterTransTypesTest {\n+    public static void main(String... args) {\n+        new NoTypeIntersectionASTAfterTransTypesTest().run();\n+    }\n+\n+    void run() {\n+        String code =\n+                \"\"\"\n+                class Test {\n+                    interface I {}\n+                    void test() {\n+                        Runnable r1 = (Runnable & I)() -> {};\n+                        Runnable r2 = (I & Runnable)() -> {};\n+                    }\n+                }\n+                \"\"\";\n+        Context ctx = new Context();\n+        MyTransTypes.preRegister(ctx);\n+        JavacTask task = JavacTool.create().getTask(null, null, null, null, null, List.of(new ToolBox.JavaSource(code)), ctx);\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n+    }\n+\n+    static class MyTransTypes extends TransTypes {\n+        public static void preRegister(Context ctx) {\n+            ctx.put(transTypesKey, new Factory<TransTypes>() {\n+                @Override\n+                public TransTypes make(Context c) {\n+                    return new MyTransTypes(c);\n+                }\n+            });\n+        }\n+        public MyTransTypes(Context context) {\n+            super(context);\n+        }\n+        @Override\n+        public void visitTypeIntersection(JCTypeIntersection tree) {\n+            super.visitTypeIntersection(tree);\n+            \/\/ after the invocation to the method in the super class the JCTypeIntersection should have been lowered\n+            if (result instanceof JCTypeIntersection) {\n+                throw new AssertionError(\"there are unexpected type intersection ASTs\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/NoTypeIntersectionASTAfterTransTypesTest.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8357472\n+ * @summary NPE in Types.containsType for type variable used as a qualifier\n+ * @compile T8357472.java\n+ *\/\n+\n+class T8357472 {\n+    class A<T> {\n+        protected class B<V> {}\n+\n+        public static <T, M extends A<T>> void f(Object g) {\n+            @SuppressWarnings(\"unchecked\")\n+            M.B<?> mapping = (M.B<?>) g;\n+            M.B<?>[] mapping2 = new M.B[1];\n+            mapping2[0] = mapping;\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8357472.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,281 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8357653\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.jdeps\/com.sun.tools.javap\n+ * @summary Inner classes of type parameters emitted as raw types in signatures\n+ * @build toolbox.ToolBox toolbox.JavapTask\n+ * @run main T8357653\n+ *\/\n+import toolbox.*;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Gatherers;\n+import java.util.stream.Stream;\n+\n+public class T8357653 extends TestRunner {\n+    private ToolBox tb;\n+\n+    public static void main(String... args) throws Exception {\n+        new T8357653().runTests();\n+    }\n+\n+    T8357653() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    public void runTests() throws Exception {\n+        runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void testCompilation(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+            \"\"\"\n+            package test;\n+            public class Test {\n+                static abstract class Getters<X> {\n+                  abstract class Getter {\n+                      abstract X get();\n+                  }\n+                }\n+\n+                static class Usage1<T, G extends Getters<T>> {\n+                  public T test(G.Getter getter) {\n+                      return getter.get();\n+                  }\n+                }\n+\n+                static class Usage2<T, U extends Getters<T>, G extends U> {\n+                  public T test(G.Getter getter) {\n+                      return getter.get();\n+                  }\n+                }\n+\n+                static class Usage3<T, U extends T, G extends Getters<T>> {\n+                  public T test(G.Getter getter) {\n+                      return getter.get();\n+                  }\n+                }\n+\n+                class G2<K> extends Getters<K> {}\n+                static class Usage4<M, L extends G2<M>> {\n+                  M test(L.Getter getter) {\n+                      return getter.get();\n+                  }\n+                }\n+            }\n+            \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        {\n+            new JavacTask(tb)\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.SUCCESS)\n+                    .writeAll();\n+        }\n+    }\n+\n+    @Test\n+    public void testCompilationArray(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                package test;\n+                public class Test {\n+                    static abstract class Getters<X> {\n+                      abstract class Getter {\n+                          abstract X get();\n+                      }\n+                    }\n+\n+                    static class Usage1<T, G extends Getters<T>> {\n+                      public T test(G.Getter[] getter) {\n+                          return getter[0].get();\n+                      }\n+                    }\n+\n+                    static class Usage2<T, U extends Getters<T>, G extends U> {\n+                      public T test(G.Getter[] getter) {\n+                          return getter[0].get();\n+                      }\n+                    }\n+\n+                    static class Usage3<T, U extends T, G extends Getters<T>> {\n+                      public T test(G.Getter[] getter) {\n+                          return getter[0].get();\n+                      }\n+                    }\n+\n+                    class G2<K> extends Getters<K> {}\n+                    static class Usage4<M, L extends G2<M>> {\n+                      M test(L.Getter[] getter) {\n+                          return getter[0].get();\n+                      }\n+                    }\n+                }\n+                \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        {\n+            new JavacTask(tb)\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.SUCCESS)\n+                    .writeAll();\n+        }\n+    }\n+\n+    @Test\n+    public void testErasureViaJavap(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                package test;\n+                public class Test {\n+                    static abstract class Getters<X> {\n+                      abstract class Getter {\n+                          abstract X get();\n+                      }\n+                    }\n+\n+                    static class Usage1<T, G extends Getters<T>> {\n+                      public T test(G.Getter getter) {\n+                          return getter.get();\n+                      }\n+                    }\n+                }\n+                \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        {\n+            new JavacTask(tb)\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.SUCCESS)\n+                    .writeAll();\n+\n+            String javapOut = new JavapTask(tb)\n+                    .options(\"-v\")\n+                    .classpath(classes.toString())\n+                    .classes(\"test.Test$Usage1\")\n+                    .run()\n+                    .getOutput(Task.OutputKind.DIRECT);\n+\n+            if (!javapOut.contains(\"Signature: #21                          \/\/ <T:Ljava\/lang\/Object;G:Ltest\/Test$Getters<TT;>;>Ljava\/lang\/Object;\"))\n+                throw new AssertionError(\"Wrongly erased generated signature:\\n\" + javapOut);\n+        }\n+    }\n+\n+    @Test\n+    public void testGenericsViaReflection(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                package test;\n+                import java.lang.reflect.*;\n+                import java.util.Arrays;\n+\n+                public class Test {\n+                    public static void main(String[] args) throws Throwable {\n+                        new test.Test().test();\n+                    }\n+\n+                    public void test() throws Throwable  {\n+                        var m = getClass().getDeclaredMethod(\"getOwner\", Test.Base.Handler.class);\n+                        System.out.println(m);\n+                        System.out.println(Arrays.toString(m.getGenericParameterTypes()));\n+                        System.out.println(m.getGenericReturnType());\n+                    }\n+\n+                     <S extends Base<S>> S getOwner(S.Handler handler) {\n+                        return handler.owner();\n+                     }\n+\n+                     abstract class Base<S extends Base<S>> {\n+                        class Handler {\n+                            @SuppressWarnings(\"unchecked\")\n+                            S owner() {\n+                                return (S) Base.this;\n+                            }\n+                        }\n+                     }\n+                }\n+                \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        {\n+            new JavacTask(tb)\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.SUCCESS)\n+                    .writeAll();\n+\n+            var out = new JavaTask(tb)\n+                    .classpath(classes.toString())\n+                    .className(\"test.Test\")\n+                    .run()\n+                    .writeAll()\n+                    .getOutput(Task.OutputKind.STDOUT);\n+\n+            var expectedOut = \"\"\"\n+                test.Test$Base test.Test.getOwner(test.Test$Base$Handler)\n+                [test.Test$Base<S>$Handler]\n+                S\n+                \"\"\";\n+\n+            containsOrdered(out, expectedOut, \"Wrongly erased generated signature:\\n\");\n+        }\n+    }\n+\n+    private static void containsOrdered(String expected, String actual, String message) {\n+        List<String> expectedLines = expected.lines().map(s -> s.strip()).toList();\n+        Stream<String> actualLines = actual.lines().map(s -> s.strip());\n+\n+        if (!actualLines.gather(Gatherers.windowSliding(expectedLines.size())).anyMatch(window -> window.equals(expectedLines)))\n+            throw new AssertionError(message + actual);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8357653.java","additions":281,"deletions":0,"binary":false,"changes":281,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8357653\n+ * @summary Inner classes of type parameters emitted as raw types in signatures\n+ * @compile T8357653b.java\n+ *\/\n+\n+class T8357653b {\n+    class A<T> {\n+        class B<W> {\n+            public T rett() { return null; }\n+        }\n+    }\n+\n+    class C extends A<String> {\n+        static class D {\n+            {\n+                B<?> b = null;\n+                String s = b.rett();\n+\n+                B<?>[] b2 = new B[1];\n+                String s2 = b2[0].rett();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8357653b.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -44,0 +44,4 @@\n+import javax.tools.Diagnostic;\n+import javax.tools.Diagnostic.Kind;\n+import javax.tools.DiagnosticListener;\n+import javax.tools.JavaFileObject;\n@@ -51,0 +55,1 @@\n+import java.util.Locale;\n@@ -113,6 +118,0 @@\n-        List<String> expected =\n-                expectDiagnostic\n-                        ? List.of(\n-                                \"Test.java:1:43: compiler.warn.sun.proprietary: sun.misc.Unsafe\",\n-                                \"1 warning\")\n-                        : List.of(\"\");\n@@ -124,11 +123,23 @@\n-        List<String> log =\n-                new JavacTask(tb)\n-                        .fileManager(fm)\n-                        .options(allOptions)\n-                        .outdir(classes)\n-                        .files(tb.findJavaFiles(src))\n-                        .run(Expect.SUCCESS)\n-                        .writeAll()\n-                        .getOutputLines(Task.OutputKind.DIRECT);\n-        if (!log.equals(expected)) {\n-            throw new AssertionError(\"expected: \" + expected + \"\\nactual: \" + log + \"\\n\");\n+        new JavacTask(tb)\n+                .fileManager(fm)\n+                .options(allOptions)\n+                .diagnosticListener(d -> sunAPIWarningChecker(d, expectDiagnostic))\n+                .outdir(classes)\n+                .files(tb.findJavaFiles(src))\n+                .run(Expect.SUCCESS)\n+                .writeAll();\n+    }\n+\n+    void sunAPIWarningChecker(Diagnostic<?> diag, boolean expectDiagnostic) {\n+        if (!expectDiagnostic) {\n+            throw new AssertionError(\"Unexpected diagnostic: \" + diag.getMessage(Locale.getDefault()));\n+        } else {\n+            if (diag.getKind() != Kind.WARNING) {\n+                throw new AssertionError(\"Bad diagnostic kind. Expected \" + Kind.WARNING + \", found: \" + diag.getKind() + \"\\n\");\n+            }\n+            if (!diag.getCode().equals(\"compiler.warn.sun.proprietary\")) {\n+                throw new AssertionError(\"Bad diagnostic code. Expected \\\"compiler.warn.sun.proprietary\\\", found: \" + diag.getCode() + \"\\n\");\n+            }\n+            if (diag.getLineNumber() != 1 || diag.getColumnNumber() != 43) {\n+                throw new AssertionError(\"Bad diagnostic position. Expected 1:43, found: \" + diag.getLineNumber() + \":\" + diag.getColumnNumber() + \"\\n\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/options\/system\/SystemSunProprietary.java","additions":28,"deletions":17,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import javax.tools.DiagnosticListener;\n@@ -65,0 +66,1 @@\n+    private DiagnosticListener<? super JavaFileObject> diagnosticListener;\n@@ -288,0 +290,8 @@\n+    \/**\n+     * Sets the diagnostic listener to be used.\n+     *\/\n+    public JavacTask diagnosticListener(DiagnosticListener<? super JavaFileObject> diagnosticListener) {\n+        this.diagnosticListener = diagnosticListener;\n+        return this;\n+    }\n+\n@@ -409,1 +419,1 @@\n-                    null,  \/\/ diagnostic listener; should optionally collect diags\n+                    diagnosticListener,  \/\/ diagnostic listener; should optionally collect diags\n","filename":"test\/langtools\/tools\/lib\/toolbox\/JavacTask.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,1079 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.jdk.internal.jrtfs;\n+\n+import jdk.internal.jimage.ImageReader;\n+import jdk.internal.jimage.ImageReader.Node;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Level;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.io.IOException;\n+import java.nio.ByteOrder;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n+\n+\/\/\/ Benchmarks for ImageReader. See individual benchmarks for details on what they\n+\/\/\/ measure, and their potential applicability for real world conclusions.\n+@BenchmarkMode(Mode.AverageTime)\n+@Warmup(iterations = 5, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 5, timeUnit = TimeUnit.MILLISECONDS)\n+@State(Scope.Benchmark)\n+@OutputTimeUnit(TimeUnit.MILLISECONDS)\n+@Fork(value = 1, jvmArgs = {\"--add-exports\", \"java.base\/jdk.internal.jimage=ALL-UNNAMED\"})\n+public class ImageReaderBenchmark {\n+\n+    private static final Path SYSTEM_IMAGE_FILE = Path.of(System.getProperty(\"java.home\"), \"lib\", \"modules\");\n+    static {\n+        if (!Files.exists(SYSTEM_IMAGE_FILE)) {\n+            throw new IllegalStateException(\"Cannot locate jimage file for benchmark: \" + SYSTEM_IMAGE_FILE);\n+        }\n+    }\n+\n+    \/\/\/ NOT annotated with `@State` since it needs to potentially be used as a\n+    \/\/\/ per-benchmark or a per-iteration state object. The subclasses provide\n+    \/\/\/ any lifetime annotations that are needed.\n+    static class BaseState {\n+        protected Path copiedImageFile;\n+        protected ByteOrder byteOrder;\n+        long count = 0;\n+\n+        public void setUp() throws IOException {\n+            copiedImageFile = Files.createTempFile(\"copied_jimage\", \"\");\n+            byteOrder = ByteOrder.nativeOrder();\n+            Files.copy(SYSTEM_IMAGE_FILE, copiedImageFile, REPLACE_EXISTING);\n+        }\n+\n+        public void tearDown() throws IOException {\n+            Files.deleteIfExists(copiedImageFile);\n+            System.err.println(\"Result: \" + count);\n+        }\n+    }\n+\n+    @State(Scope.Benchmark)\n+    public static class WarmStartWithImageReader extends BaseState {\n+        ImageReader reader;\n+\n+        @Setup(Level.Trial)\n+        public void setUp() throws IOException {\n+            super.setUp();\n+            reader = ImageReader.open(copiedImageFile, byteOrder);\n+        }\n+\n+        @TearDown(Level.Trial)\n+        public void tearDown() throws IOException {\n+            super.tearDown();\n+        }\n+    }\n+\n+    @State(Scope.Benchmark)\n+    public static class ColdStart extends BaseState {\n+        @Setup(Level.Iteration)\n+        public void setUp() throws IOException {\n+            super.setUp();\n+        }\n+\n+        @TearDown(Level.Iteration)\n+        public void tearDown() throws IOException {\n+            super.tearDown();\n+        }\n+    }\n+\n+    @State(Scope.Benchmark)\n+    public static class ColdStartWithImageReader extends BaseState {\n+        ImageReader reader;\n+\n+        @Setup(Level.Iteration)\n+        public void setup() throws IOException {\n+            super.setUp();\n+            reader = ImageReader.open(copiedImageFile, byteOrder);\n+        }\n+\n+        @TearDown(Level.Iteration)\n+        public void tearDown() throws IOException {\n+            reader.close();\n+            super.tearDown();\n+        }\n+    }\n+\n+    \/\/\/ Benchmarks counting of all nodes in the system image *after* they have all\n+    \/\/\/ been visited at least once. Image nodes should be cached after first use,\n+    \/\/\/ so this benchmark should be fast and very stable.\n+    @Benchmark\n+    @BenchmarkMode(Mode.AverageTime)\n+    public void warmCache_CountAllNodes(WarmStartWithImageReader state) throws IOException {\n+        state.count = countAllNodes(state.reader, state.reader.findNode(\"\/\"));\n+    }\n+\n+    \/\/\/ Benchmarks counting of all nodes in the system image from a \"cold start\". This\n+    \/\/\/ visits all nodes in depth-first order and counts them.\n+    \/\/\/\n+    \/\/\/ This benchmark is not representative of any typical usage pattern, but can be\n+    \/\/\/ used for comparisons between versions of `ImageReader`.\n+    @Benchmark\n+    @BenchmarkMode(Mode.SingleShotTime)\n+    public void coldStart_InitAndCount(ColdStart state) throws IOException {\n+        try (var reader = ImageReader.open(state.copiedImageFile, state.byteOrder)) {\n+            state.count = countAllNodes(reader, reader.findNode(\"\/\"));\n+        }\n+    }\n+\n+    \/\/\/ As above, but includes the time to initialize the `ImageReader`.\n+    @Benchmark\n+    @BenchmarkMode(Mode.SingleShotTime)\n+    public void coldStart_CountOnly(ColdStartWithImageReader state) throws IOException {\n+        state.count = countAllNodes(state.reader, state.reader.findNode(\"\/\"));\n+    }\n+\n+    \/\/\/ Benchmarks the time taken to load the byte array contents of classes\n+    \/\/\/ representative of those loaded by javac to for the simplest `HelloWorld`\n+    \/\/\/ program.\n+    \/\/\/\n+    \/\/\/ This benchmark is somewhat representative of the cost of class loading\n+    \/\/\/ during javac startup. It is useful for comparisons between versions of\n+    \/\/\/ `ImageReader`, but also to estimate a lower bound for any reduction or\n+    \/\/\/ increase in the real-world startup time of javac.\n+    @Benchmark\n+    @BenchmarkMode(Mode.SingleShotTime)\n+    public void coldStart_LoadJavacInitClasses(Blackhole bh, ColdStart state) throws IOException {\n+        int errors = 0;\n+        try (var reader = ImageReader.open(state.copiedImageFile, state.byteOrder)) {\n+            for (String path : INIT_CLASSES) {\n+                \/\/ Path determination isn't perfect so there can be a few \"misses\" in here.\n+                \/\/ Report the count of bad paths as the \"result\", which should be < 20 or so.\n+                Node node = reader.findNode(path);\n+                if (node != null) {\n+                    bh.consume(reader.getResource(node));\n+                } else {\n+                    errors += 1;\n+                }\n+            }\n+        }\n+        state.count = INIT_CLASSES.size();\n+        \/\/ Allow up to 2% missing classes before complaining.\n+        if ((100 * errors) \/ INIT_CLASSES.size() >= 2) {\n+            reportMissingClassesAndFail(state, errors);\n+        }\n+    }\n+\n+    static long countAllNodes(ImageReader reader, Node node) {\n+        long count = 1;\n+        if (node.isDirectory()) {\n+            count += node.getChildren().stream().mapToLong(n -> {\n+                try {\n+                    return countAllNodes(reader, reader.findNode(n.getName()));\n+                } catch (IOException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }).sum();\n+        }\n+        return count;\n+    }\n+\n+    \/\/ Run if the INIT_CLASSES list below is sufficiently out-of-date.\n+    \/\/ DO NOT run this before the benchmark, as it will cache all the nodes!\n+    private static void reportMissingClassesAndFail(ColdStart state, int errors) throws IOException {\n+        List<String> missing = new ArrayList<>(errors);\n+        try (var reader = ImageReader.open(state.copiedImageFile, state.byteOrder)) {\n+            for (String path : INIT_CLASSES) {\n+                if (reader.findNode(path) == null) {\n+                    missing.add(path);\n+                }\n+            }\n+        }\n+        throw new IllegalStateException(\n+                String.format(\n+                        \"Too many missing classes (%d of %d) in the hardcoded benchmark list.\\n\" +\n+                                \"Please regenerate it according to instructions in the source code.\\n\" +\n+                                \"Missing classes:\\n\\t%s\",\n+                        errors, INIT_CLASSES.size(), String.join(\"\\n\\t\", missing)));\n+    }\n+\n+    \/\/ Note: This list is inherently a little fragile and may end up being more\n+    \/\/ trouble than it's worth to maintain. If it turns out that it needs to be\n+    \/\/ regenerated often when this benchmark is run, then a new approach should\n+    \/\/ be considered, such as:\n+    \/\/ * Limit the list of classes to non-internal ones.\n+    \/\/ * Calculate the list dynamically based on the running JVM.\n+    \/\/\n+    \/\/ Created by running \"java -verbose:class\", throwing away anonymous inner\n+    \/\/ classes and anything without a reliable name, and grouping by the stated\n+    \/\/ source. It's not perfect, but it's representative.\n+    \/\/\n+    \/\/ <jdk_root>\/bin\/java -verbose:class HelloWorld 2>&1 \\\n+    \/\/   | fgrep '[class,load]' | cut -d' ' -f2 \\\n+    \/\/   | tr '.' '\/' \\\n+    \/\/   | egrep -v '\\$[0-9$]' \\\n+    \/\/   | fgrep -v 'HelloWorld' \\\n+    \/\/   | fgrep -v '\/META-INF\/preview\/' \\\n+    \/\/   | while read f ; do echo \"${f}.class\" ; done \\\n+    \/\/   > initclasses.txt\n+    \/\/\n+    \/\/ Output:\n+    \/\/    java\/lang\/Object.class\n+    \/\/    java\/io\/Serializable.class\n+    \/\/    ...\n+    \/\/\n+    \/\/ jimage list <jdk_root>\/images\/jdk\/lib\/modules \\\n+    \/\/     | awk '\/^Module: *\/ { MOD=$2 }; \/^    *\/ { print \"\/modules\/\"MOD\"\/\"$1 }' \\\n+    \/\/     > fullpaths.txt\n+    \/\/\n+    \/\/ Output:\n+    \/\/     ...\n+    \/\/     \/modules\/java.base\/java\/lang\/Object.class\n+    \/\/     \/modules\/java.base\/java\/lang\/OutOfMemoryError.class\n+    \/\/     ...\n+    \/\/\n+    \/\/ while read c ; do grep \"\/$c\" fullpaths.txt ; done < initclasses.txt \\\n+    \/\/     | while read c ; do printf '    \"%s\",\\n' \"$c\" ; done \\\n+    \/\/     > initpaths.txt\n+    \/\/\n+    \/\/ Output:\n+    private static final Set<String> INIT_CLASSES = Set.of(\n+            \"\/modules\/java.base\/java\/lang\/Object.class\",\n+            \"\/modules\/java.base\/java\/io\/Serializable.class\",\n+            \"\/modules\/java.base\/java\/lang\/Comparable.class\",\n+            \"\/modules\/java.base\/java\/lang\/CharSequence.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/Constable.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/ConstantDesc.class\",\n+            \"\/modules\/java.base\/java\/lang\/String.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/AnnotatedElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/GenericDeclaration.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Type.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/TypeDescriptor.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/TypeDescriptor$OfField.class\",\n+            \"\/modules\/java.base\/java\/lang\/Class.class\",\n+            \"\/modules\/java.base\/java\/lang\/Cloneable.class\",\n+            \"\/modules\/java.base\/java\/lang\/ClassLoader.class\",\n+            \"\/modules\/java.base\/java\/lang\/System.class\",\n+            \"\/modules\/java.base\/java\/lang\/Throwable.class\",\n+            \"\/modules\/java.base\/java\/lang\/Error.class\",\n+            \"\/modules\/java.base\/java\/lang\/Exception.class\",\n+            \"\/modules\/java.base\/java\/lang\/RuntimeException.class\",\n+            \"\/modules\/java.base\/java\/security\/ProtectionDomain.class\",\n+            \"\/modules\/java.base\/java\/security\/SecureClassLoader.class\",\n+            \"\/modules\/java.base\/java\/lang\/ReflectiveOperationException.class\",\n+            \"\/modules\/java.base\/java\/lang\/ClassNotFoundException.class\",\n+            \"\/modules\/java.base\/java\/lang\/Record.class\",\n+            \"\/modules\/java.base\/java\/lang\/LinkageError.class\",\n+            \"\/modules\/java.base\/java\/lang\/NoClassDefFoundError.class\",\n+            \"\/modules\/java.base\/java\/lang\/ClassCastException.class\",\n+            \"\/modules\/java.base\/java\/lang\/ArrayStoreException.class\",\n+            \"\/modules\/java.base\/java\/lang\/VirtualMachineError.class\",\n+            \"\/modules\/java.base\/java\/lang\/InternalError.class\",\n+            \"\/modules\/java.base\/java\/lang\/OutOfMemoryError.class\",\n+            \"\/modules\/java.base\/java\/lang\/StackOverflowError.class\",\n+            \"\/modules\/java.base\/java\/lang\/IllegalMonitorStateException.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/Reference.class\",\n+            \"\/modules\/java.base\/java\/lang\/IllegalCallerException.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/SoftReference.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/WeakReference.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/FinalReference.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/PhantomReference.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/Finalizer.class\",\n+            \"\/modules\/java.base\/java\/lang\/Runnable.class\",\n+            \"\/modules\/java.base\/java\/lang\/Thread.class\",\n+            \"\/modules\/java.base\/java\/lang\/Thread$FieldHolder.class\",\n+            \"\/modules\/java.base\/java\/lang\/Thread$Constants.class\",\n+            \"\/modules\/java.base\/java\/lang\/Thread$UncaughtExceptionHandler.class\",\n+            \"\/modules\/java.base\/java\/lang\/ThreadGroup.class\",\n+            \"\/modules\/java.base\/java\/lang\/BaseVirtualThread.class\",\n+            \"\/modules\/java.base\/java\/lang\/VirtualThread.class\",\n+            \"\/modules\/java.base\/java\/lang\/ThreadBuilders$BoundVirtualThread.class\",\n+            \"\/modules\/java.base\/java\/util\/Map.class\",\n+            \"\/modules\/java.base\/java\/util\/Dictionary.class\",\n+            \"\/modules\/java.base\/java\/util\/Hashtable.class\",\n+            \"\/modules\/java.base\/java\/util\/Properties.class\",\n+            \"\/modules\/java.base\/java\/lang\/Module.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/AccessibleObject.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Member.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Field.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Parameter.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Executable.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Method.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Constructor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/ContinuationScope.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/Continuation.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/StackChunk.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/MethodAccessor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/MethodAccessorImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/ConstantPool.class\",\n+            \"\/modules\/java.base\/java\/lang\/annotation\/Annotation.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/CallerSensitive.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/ConstructorAccessor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/ConstructorAccessorImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/DirectConstructorHandleAccessor$NativeAccessor.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DirectMethodHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MemberName.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/ResolvedMethodName.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandleNatives.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaForm.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/TypeDescriptor$OfMethod.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodType.class\",\n+            \"\/modules\/java.base\/java\/lang\/BootstrapMethodError.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/CallSite.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/foreign\/abi\/ABIDescriptor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/foreign\/abi\/VMStorage.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/foreign\/abi\/UpcallLinker$CallRegs.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/ConstantCallSite.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MutableCallSite.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VolatileCallSite.class\",\n+            \"\/modules\/java.base\/java\/lang\/AssertionStatusDirectives.class\",\n+            \"\/modules\/java.base\/java\/lang\/Appendable.class\",\n+            \"\/modules\/java.base\/java\/lang\/AbstractStringBuilder.class\",\n+            \"\/modules\/java.base\/java\/lang\/StringBuffer.class\",\n+            \"\/modules\/java.base\/java\/lang\/StringBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/UnsafeConstants.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/Unsafe.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/Modules.class\",\n+            \"\/modules\/java.base\/java\/lang\/AutoCloseable.class\",\n+            \"\/modules\/java.base\/java\/io\/Closeable.class\",\n+            \"\/modules\/java.base\/java\/io\/InputStream.class\",\n+            \"\/modules\/java.base\/java\/io\/ByteArrayInputStream.class\",\n+            \"\/modules\/java.base\/java\/net\/URL.class\",\n+            \"\/modules\/java.base\/java\/lang\/Enum.class\",\n+            \"\/modules\/java.base\/java\/util\/jar\/Manifest.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/BuiltinClassLoader.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ClassLoaders.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ClassLoaders$AppClassLoader.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ClassLoaders$PlatformClassLoader.class\",\n+            \"\/modules\/java.base\/java\/security\/CodeSource.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentMap.class\",\n+            \"\/modules\/java.base\/java\/util\/AbstractMap.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap.class\",\n+            \"\/modules\/java.base\/java\/lang\/Iterable.class\",\n+            \"\/modules\/java.base\/java\/util\/Collection.class\",\n+            \"\/modules\/java.base\/java\/util\/SequencedCollection.class\",\n+            \"\/modules\/java.base\/java\/util\/List.class\",\n+            \"\/modules\/java.base\/java\/util\/RandomAccess.class\",\n+            \"\/modules\/java.base\/java\/util\/AbstractCollection.class\",\n+            \"\/modules\/java.base\/java\/util\/AbstractList.class\",\n+            \"\/modules\/java.base\/java\/util\/ArrayList.class\",\n+            \"\/modules\/java.base\/java\/lang\/StackTraceElement.class\",\n+            \"\/modules\/java.base\/java\/nio\/Buffer.class\",\n+            \"\/modules\/java.base\/java\/lang\/StackWalker.class\",\n+            \"\/modules\/java.base\/java\/lang\/StackStreamFactory$AbstractStackWalker.class\",\n+            \"\/modules\/java.base\/java\/lang\/StackWalker$StackFrame.class\",\n+            \"\/modules\/java.base\/java\/lang\/ClassFrameInfo.class\",\n+            \"\/modules\/java.base\/java\/lang\/StackFrameInfo.class\",\n+            \"\/modules\/java.base\/java\/lang\/LiveStackFrame.class\",\n+            \"\/modules\/java.base\/java\/lang\/LiveStackFrameInfo.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/AbstractOwnableSynchronizer.class\",\n+            \"\/modules\/java.base\/java\/lang\/Boolean.class\",\n+            \"\/modules\/java.base\/java\/lang\/Character.class\",\n+            \"\/modules\/java.base\/java\/lang\/Number.class\",\n+            \"\/modules\/java.base\/java\/lang\/Float.class\",\n+            \"\/modules\/java.base\/java\/lang\/Double.class\",\n+            \"\/modules\/java.base\/java\/lang\/Byte.class\",\n+            \"\/modules\/java.base\/java\/lang\/Short.class\",\n+            \"\/modules\/java.base\/java\/lang\/Integer.class\",\n+            \"\/modules\/java.base\/java\/lang\/Long.class\",\n+            \"\/modules\/java.base\/java\/lang\/Void.class\",\n+            \"\/modules\/java.base\/java\/util\/Iterator.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/RecordComponent.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/vector\/VectorSupport.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/vector\/VectorSupport$Vector.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/vector\/VectorSupport$VectorMask.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/FillerObject.class\",\n+            \"\/modules\/java.base\/java\/lang\/NullPointerException.class\",\n+            \"\/modules\/java.base\/java\/lang\/ArithmeticException.class\",\n+            \"\/modules\/java.base\/java\/lang\/IndexOutOfBoundsException.class\",\n+            \"\/modules\/java.base\/java\/lang\/ArrayIndexOutOfBoundsException.class\",\n+            \"\/modules\/java.base\/java\/io\/ObjectStreamField.class\",\n+            \"\/modules\/java.base\/java\/util\/Comparator.class\",\n+            \"\/modules\/java.base\/java\/lang\/String$CaseInsensitiveComparator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/VM.class\",\n+            \"\/modules\/java.base\/java\/lang\/Module$ArchivedData.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/CDS.class\",\n+            \"\/modules\/java.base\/java\/util\/Set.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$AbstractImmutableCollection.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$AbstractImmutableSet.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$Set12.class\",\n+            \"\/modules\/java.base\/java\/util\/Objects.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$AbstractImmutableList.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$ListN.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$SetN.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$AbstractImmutableMap.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$MapN.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaLangReflectAccess.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/ReflectAccess.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/SharedSecrets.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/ReflectionFactory.class\",\n+            \"\/modules\/java.base\/java\/io\/ObjectStreamClass.class\",\n+            \"\/modules\/java.base\/java\/lang\/Math.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/ReflectionFactory$Config.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaLangRefAccess.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/ReferenceQueue.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/ReferenceQueue$Null.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/ReferenceQueue$Lock.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaLangAccess.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/SystemProps.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/SystemProps$Raw.class\",\n+            \"\/modules\/java.base\/java\/nio\/charset\/Charset.class\",\n+            \"\/modules\/java.base\/java\/nio\/charset\/spi\/CharsetProvider.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/StandardCharsets.class\",\n+            \"\/modules\/java.base\/java\/lang\/StringLatin1.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/HistoricallyNamedCharset.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/Unicode.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_8.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap.class\",\n+            \"\/modules\/java.base\/java\/lang\/StrictMath.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ArraysSupport.class\",\n+            \"\/modules\/java.base\/java\/util\/Map$Entry.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$Node.class\",\n+            \"\/modules\/java.base\/java\/util\/LinkedHashMap$Entry.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$TreeNode.class\",\n+            \"\/modules\/java.base\/java\/lang\/StringConcatHelper.class\",\n+            \"\/modules\/java.base\/java\/lang\/VersionProps.class\",\n+            \"\/modules\/java.base\/java\/lang\/Runtime.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/Lock.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantLock.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$Segment.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$CounterCell.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$Node.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/LockSupport.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$ReservationNode.class\",\n+            \"\/modules\/java.base\/java\/util\/AbstractSet.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$EntrySet.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$HashIterator.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$EntryIterator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/StaticProperty.class\",\n+            \"\/modules\/java.base\/java\/io\/FileInputStream.class\",\n+            \"\/modules\/java.base\/java\/lang\/System$In.class\",\n+            \"\/modules\/java.base\/java\/io\/FileDescriptor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaIOFileDescriptorAccess.class\",\n+            \"\/modules\/java.base\/java\/io\/Flushable.class\",\n+            \"\/modules\/java.base\/java\/io\/OutputStream.class\",\n+            \"\/modules\/java.base\/java\/io\/FileOutputStream.class\",\n+            \"\/modules\/java.base\/java\/lang\/System$Out.class\",\n+            \"\/modules\/java.base\/java\/io\/FilterInputStream.class\",\n+            \"\/modules\/java.base\/java\/io\/BufferedInputStream.class\",\n+            \"\/modules\/java.base\/java\/io\/FilterOutputStream.class\",\n+            \"\/modules\/java.base\/java\/io\/PrintStream.class\",\n+            \"\/modules\/java.base\/java\/io\/BufferedOutputStream.class\",\n+            \"\/modules\/java.base\/java\/io\/Writer.class\",\n+            \"\/modules\/java.base\/java\/io\/OutputStreamWriter.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/StreamEncoder.class\",\n+            \"\/modules\/java.base\/java\/nio\/charset\/CharsetEncoder.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_8$Encoder.class\",\n+            \"\/modules\/java.base\/java\/nio\/charset\/CodingErrorAction.class\",\n+            \"\/modules\/java.base\/java\/util\/Arrays.class\",\n+            \"\/modules\/java.base\/java\/nio\/ByteBuffer.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/ScopedMemoryAccess.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/Function.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/Preconditions.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/BiFunction.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaNioAccess.class\",\n+            \"\/modules\/java.base\/java\/nio\/HeapByteBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/ByteOrder.class\",\n+            \"\/modules\/java.base\/java\/io\/BufferedWriter.class\",\n+            \"\/modules\/java.base\/java\/lang\/Terminator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/Signal$Handler.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/Signal.class\",\n+            \"\/modules\/java.base\/java\/util\/Hashtable$Entry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/Signal$NativeHandler.class\",\n+            \"\/modules\/java.base\/java\/lang\/Integer$IntegerCache.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/OSEnvironment.class\",\n+            \"\/modules\/java.base\/java\/lang\/Thread$State.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/Reference$ReferenceHandler.class\",\n+            \"\/modules\/java.base\/java\/lang\/Thread$ThreadIdentifiers.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/Finalizer$FinalizerThread.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/Cleaner.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$EmptySet.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$EmptyList.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$EmptyMap.class\",\n+            \"\/modules\/java.base\/java\/lang\/IllegalArgumentException.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandleStatics.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/ClassFileFormatVersion.class\",\n+            \"\/modules\/java.base\/java\/lang\/CharacterData.class\",\n+            \"\/modules\/java.base\/java\/lang\/CharacterDataLatin1.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ClassFileDumper.class\",\n+            \"\/modules\/java.base\/java\/util\/HexFormat.class\",\n+            \"\/modules\/java.base\/java\/lang\/Character$CharacterCache.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/atomic\/AtomicInteger.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleBootstrap.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandles.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MemberName$Factory.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/Reflection.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandles$Lookup.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$MapN$MapNIterator.class\",\n+            \"\/modules\/java.base\/java\/util\/KeyValueHolder.class\",\n+            \"\/modules\/java.base\/sun\/invoke\/util\/VerifyAccess.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Modifier.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaLangModuleAccess.class\",\n+            \"\/modules\/java.base\/java\/io\/File.class\",\n+            \"\/modules\/java.base\/java\/io\/DefaultFileSystem.class\",\n+            \"\/modules\/java.base\/java\/io\/FileSystem.class\",\n+            \"\/modules\/java.base\/java\/io\/UnixFileSystem.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/DecimalDigits.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModulePatcher.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleBootstrap$IllegalNativeAccess.class\",\n+            \"\/modules\/java.base\/java\/util\/HashSet.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleLoaderMap.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleLoaderMap$Modules.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleBootstrap$Counters.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ArchivedBootLayer.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ArchivedModuleGraph.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/SystemModuleFinders.class\",\n+            \"\/modules\/java.base\/java\/net\/URI.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaNetUriAccess.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/SystemModulesMap.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/SystemModules.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ExplodedSystemModules.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/Watchable.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/Path.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/FileSystems.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/DefaultFileSystemProvider.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/spi\/FileSystemProvider.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/AbstractFileSystemProvider.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileSystemProvider.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/LinuxFileSystemProvider.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/OpenOption.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/StandardOpenOption.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/FileSystem.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileSystem.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/LinuxFileSystem.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixPath.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/Util.class\",\n+            \"\/modules\/java.base\/java\/lang\/StringCoding.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixNativeDispatcher.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/BootLoader.class\",\n+            \"\/modules\/java.base\/java\/lang\/Module$EnableNativeAccess.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/NativeLibraries.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ClassLoaderHelper.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$CollectionView.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$KeySetView.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/NativeLibraries$LibraryPaths.class\",\n+            \"\/modules\/java.base\/java\/io\/File$PathStatus.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/NativeLibraries$CountedLock.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantLock$Sync.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantLock$NonfairSync.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/NativeLibraries$NativeLibraryContext.class\",\n+            \"\/modules\/java.base\/java\/util\/Queue.class\",\n+            \"\/modules\/java.base\/java\/util\/Deque.class\",\n+            \"\/modules\/java.base\/java\/util\/ArrayDeque.class\",\n+            \"\/modules\/java.base\/java\/util\/ArrayDeque$DeqIterator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/NativeLibrary.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/NativeLibraries$NativeLibraryImpl.class\",\n+            \"\/modules\/java.base\/java\/security\/cert\/Certificate.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$ValuesView.class\",\n+            \"\/modules\/java.base\/java\/util\/Enumeration.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$Traverser.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$BaseIterator.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ConcurrentHashMap$ValueIterator.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/BasicFileAttributes.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/PosixFileAttributes.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileAttributes.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileStoreAttributes.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixMountEntry.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/CopyOption.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/LinkOption.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/Files.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/NativeBuffers.class\",\n+            \"\/modules\/java.base\/java\/lang\/ThreadLocal.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/CarrierThreadLocal.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/TerminatingThreadLocal.class\",\n+            \"\/modules\/java.base\/java\/lang\/ThreadLocal$ThreadLocalMap.class\",\n+            \"\/modules\/java.base\/java\/lang\/ThreadLocal$ThreadLocalMap$Entry.class\",\n+            \"\/modules\/java.base\/java\/util\/IdentityHashMap.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$SetFromMap.class\",\n+            \"\/modules\/java.base\/java\/util\/IdentityHashMap$KeySet.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/NativeBuffer.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/CleanerFactory.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/ThreadFactory.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/Cleaner.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/CleanerImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/CleanerImpl$CleanableList.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/CleanerImpl$CleanableList$Node.class\",\n+            \"\/modules\/java.base\/java\/lang\/ref\/Cleaner$Cleanable.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/PhantomCleanable.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/CleanerImpl$CleanerCleanable.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/InnocuousThread.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/NativeBuffer$Deallocator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/ref\/CleanerImpl$PhantomCleanableRef.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleFinder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModulePath.class\",\n+            \"\/modules\/java.base\/java\/util\/jar\/Attributes$Name.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/Array.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/perf\/PerfCounter.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/perf\/Perf.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/DirectBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/MappedByteBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/DirectByteBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/Bits.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/atomic\/AtomicLong.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/VM$BufferPool.class\",\n+            \"\/modules\/java.base\/java\/nio\/LongBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/DirectLongBufferU.class\",\n+            \"\/modules\/java.base\/java\/util\/zip\/ZipConstants.class\",\n+            \"\/modules\/java.base\/java\/util\/zip\/ZipFile.class\",\n+            \"\/modules\/java.base\/java\/util\/jar\/JarFile.class\",\n+            \"\/modules\/java.base\/java\/util\/BitSet.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaUtilZipFileAccess.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaUtilJarAccess.class\",\n+            \"\/modules\/java.base\/java\/util\/jar\/JavaUtilJarAccessImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/Runtime$Version.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$List12.class\",\n+            \"\/modules\/java.base\/java\/util\/Optional.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/DosFileAttributes.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/AttributeView.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/FileAttributeView.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/BasicFileAttributeView.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/DosFileAttributeView.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileAttributeViews.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/DynamicFileAttributeView.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/AbstractBasicFileAttributeView.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileAttributeViews$Basic.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileAttributes$UnixAsBasicFileAttributes.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/DirectoryStream$Filter.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/Files$AcceptAllFilter.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/DirectoryStream.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/SecureDirectoryStream.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixSecureDirectoryStream.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixDirectoryStream.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReadWriteLock.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock$Sync.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock$FairSync.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock$ReadLock.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock$WriteLock.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixDirectoryStream$UnixDirectoryIterator.class\",\n+            \"\/modules\/java.base\/java\/nio\/file\/attribute\/FileAttribute.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixFileModeAttribute.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixChannelFactory.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixChannelFactory$Flags.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$EmptyIterator.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/Channel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/ReadableByteChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/WritableByteChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/ByteChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/SeekableByteChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/GatheringByteChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/ScatteringByteChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/InterruptibleChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/spi\/AbstractInterruptibleChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/FileChannel.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/FileChannelImpl.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/NativeDispatcher.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/FileDispatcher.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/UnixFileDispatcherImpl.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/FileDispatcherImpl.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/IOUtil.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/Interruptible.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/NativeThreadSet.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/FileChannelImpl$Closer.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/Channels.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/Streams.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/SelChImpl.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/NetworkChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/SelectableChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/spi\/AbstractSelectableChannel.class\",\n+            \"\/modules\/java.base\/java\/nio\/channels\/SocketChannel.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/SocketChannelImpl.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/ChannelInputStream.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaMetafactory.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/Supplier.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ReferencedKeySet.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ReferencedKeyMap.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ReferenceKey.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/StrongReferenceKey.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodTypeForm.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/WeakReferenceKey.class\",\n+            \"\/modules\/java.base\/sun\/invoke\/util\/Wrapper.class\",\n+            \"\/modules\/java.base\/sun\/invoke\/util\/Wrapper$Format.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/ConstantDescs.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/ClassDesc.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/constant\/ClassOrInterfaceDescImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/constant\/ArrayClassDescImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/constant\/ConstantUtils.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/DirectMethodHandleDesc$Kind.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/MethodTypeDesc.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/constant\/MethodTypeDescImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/MethodHandleDesc.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/DirectMethodHandleDesc.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/constant\/DirectMethodHandleDescImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/DynamicConstantDesc.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/constant\/PrimitiveClassDescImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/constant\/DynamicConstantDesc$AnonymousDynamicConstantDesc.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaForm$NamedFunction.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DirectMethodHandle$Holder.class\",\n+            \"\/modules\/java.base\/sun\/invoke\/util\/ValueConversions.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandleImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/Invokers.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaForm$Kind.class\",\n+            \"\/modules\/java.base\/java\/lang\/NoSuchMethodException.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaForm$BasicType.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/TypeKind.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaForm$Name.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaForm$Holder.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/InvokerBytecodeGenerator.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/AnnotationElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Annotation.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/ConstantPool.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/ConstantPoolBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/TemporaryConstantPool.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/PoolEntry.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/AnnotationConstantValueEntry.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/Utf8Entry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$Utf8EntryImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$Utf8EntryImpl$State.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AnnotationImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassFileElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Attribute.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/MethodElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/FieldElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/attribute\/RuntimeVisibleAnnotationsAttribute.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/Util$Writable.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractElement.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/UnboundAttribute.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/UnboundAttribute$UnboundRuntimeVisibleAnnotationsAttribute.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Attributes.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/AttributeMapper.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractAttributeMapper.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractAttributeMapper$RuntimeVisibleAnnotationsMapper.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/AttributeMapper$AttributeStability.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandleImpl$Intrinsic.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/SplitConstantPool.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/BootstrapMethodEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/BootstrapMethodEntryImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/EntryMap.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/Util.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/LoadableConstantEntry.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/ClassEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$AbstractRefEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$AbstractNamedEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$ClassEntryImpl.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/Consumer.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassFile.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/ClassFileImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassFileBuilder.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractDirectBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/DirectClassBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AttributeHolder.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Superclass.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/SuperclassImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/attribute\/SourceFileAttribute.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/UnboundAttribute$UnboundSourceFileAttribute.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractAttributeMapper$SourceFileMapper.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/BoundAttribute.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/MethodBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/MethodInfo.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/TerminalMethodBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/DirectMethodBuilder.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/NameAndTypeEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$AbstractRefsEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$NameAndTypeEntryImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/MemberRefEntry.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/FieldRefEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$AbstractMemberRefEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$FieldRefEntryImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/InvokerBytecodeGenerator$ClassData.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/CodeBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/LabelContext.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/TerminalCodeBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/CodeElement.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/PseudoInstruction.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/instruction\/CharacterRange.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/instruction\/LocalVariable.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/instruction\/LocalVariableType.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder$DeferredLabel.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/BufWriter.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/BufWriterImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Label.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/instruction\/LabelTarget.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/LabelImpl.class\",\n+            \"\/modules\/java.base\/sun\/invoke\/util\/VerifyType.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Opcode.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Opcode$Kind.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/MethodRefEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$MethodRefEntryImpl.class\",\n+            \"\/modules\/java.base\/sun\/invoke\/empty\/Empty.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/BytecodeHelpers.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/UnboundAttribute$AdHocAttribute.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractAttributeMapper$CodeMapper.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/FieldBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/TerminalFieldBuilder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/DirectFieldBuilder.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/CustomAttribute.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AnnotationReader.class\",\n+            \"\/modules\/java.base\/java\/util\/ListIterator.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$ListItr.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/StackMapGenerator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/StackMapGenerator$Frame.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/StackMapGenerator$Type.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/RawBytecodeHelper.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/RawBytecodeHelper$CodeRange.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassHierarchyResolver.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl$ClassLoadingClassHierarchyResolver.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl$CachedClassHierarchyResolver.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassHierarchyResolver$ClassHierarchyInfo.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl$ClassHierarchyInfoImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/ClassReader.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/ClassReaderImpl.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ModifiedUtf.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandles$Lookup$ClassDefiner.class\",\n+            \"\/modules\/java.base\/java\/lang\/IncompatibleClassChangeError.class\",\n+            \"\/modules\/java.base\/java\/lang\/NoSuchMethodError.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/BootstrapMethodInvoker.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/AbstractValidatingLambdaMetafactory.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/InnerClassLambdaMetafactory.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/MethodHandleInfo.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/InfoFromMemberName.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$Access.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaUtilCollectionAccess.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/Interfaces.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/InterfacesImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/TypeConvertingMethodAdapter.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DirectMethodHandle$Constructor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaLangInvokeAccess.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandle$AccessMode.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandle$AccessType.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/Invokers$Holder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo.class\",\n+            \"\/modules\/java.base\/java\/io\/DataInput.class\",\n+            \"\/modules\/java.base\/java\/io\/DataInputStream.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo$CountingDataInput.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/NativeThread.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/Blocker.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/Util.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/Util$BufferCache.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ch\/IOStatus.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/util\/ByteArray.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandles.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsShorts$ByteArrayViewVarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsShorts$ArrayHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleGuards.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarForm.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsChars$ByteArrayViewVarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsChars$ArrayHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsInts$ByteArrayViewVarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsInts$ArrayHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsFloats$ByteArrayViewVarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsFloats$ArrayHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsLongs$ArrayHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsDoubles$ByteArrayViewVarHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandleByteArrayAsDoubles$ArrayHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/VarHandle$AccessDescriptor.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo$ConstantPool.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo$ConstantPool$Entry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo$ConstantPool$IndexEntry.class\",\n+            \"\/modules\/java.base\/java\/nio\/charset\/StandardCharsets.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/US_ASCII.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/ISO_8859_1.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_16BE.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_16LE.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_16.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_32BE.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_32LE.class\",\n+            \"\/modules\/java.base\/sun\/nio\/cs\/UTF_32.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo$ConstantPool$ValueEntry.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Builder.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Modifier.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/AccessFlag.class\",\n+            \"\/modules\/java.base\/java\/lang\/reflect\/AccessFlag$Location.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Requires$Modifier.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Requires.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$KeySet.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$KeyIterator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/Checks.class\",\n+            \"\/modules\/java.base\/java\/util\/ArrayList$Itr.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Provides.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$UnmodifiableCollection.class\",\n+            \"\/modules\/java.base\/java\/util\/Collections$UnmodifiableSet.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$Values.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$ValueIterator.class\",\n+            \"\/modules\/java.base\/java\/util\/ImmutableCollections$SetN$SetNIterator.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleInfo$Attributes.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleReferences.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleReader.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixUriUtils.class\",\n+            \"\/modules\/java.base\/java\/net\/URI$Parser.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleReference.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleReferenceImpl.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Exports.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ModuleDescriptor$Opens.class\",\n+            \"\/modules\/java.base\/sun\/nio\/fs\/UnixException.class\",\n+            \"\/modules\/java.base\/java\/io\/IOException.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ArchivedClassLoaders.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ClassLoaders$BootClassLoader.class\",\n+            \"\/modules\/java.base\/java\/lang\/ClassLoader$ParallelLoaders.class\",\n+            \"\/modules\/java.base\/java\/util\/WeakHashMap.class\",\n+            \"\/modules\/java.base\/java\/util\/WeakHashMap$Entry.class\",\n+            \"\/modules\/java.base\/java\/util\/WeakHashMap$KeySet.class\",\n+            \"\/modules\/java.base\/java\/security\/Principal.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/URLClassPath.class\",\n+            \"\/modules\/java.base\/java\/net\/URLStreamHandlerFactory.class\",\n+            \"\/modules\/java.base\/java\/net\/URL$DefaultFactory.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/access\/JavaNetURLAccess.class\",\n+            \"\/modules\/java.base\/sun\/net\/www\/ParseUtil.class\",\n+            \"\/modules\/java.base\/java\/net\/URLStreamHandler.class\",\n+            \"\/modules\/java.base\/sun\/net\/www\/protocol\/file\/Handler.class\",\n+            \"\/modules\/java.base\/sun\/net\/util\/IPAddressUtil.class\",\n+            \"\/modules\/java.base\/sun\/net\/util\/IPAddressUtil$MASKS.class\",\n+            \"\/modules\/java.base\/sun\/net\/www\/protocol\/jar\/Handler.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ServicesCatalog.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/AbstractClassLoaderValue.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/ClassLoaderValue.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/BuiltinClassLoader$LoadedModule.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/DefaultRoots.class\",\n+            \"\/modules\/java.base\/java\/util\/Spliterator.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$HashMapSpliterator.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$ValueSpliterator.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/StreamSupport.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/BaseStream.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Stream.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/PipelineHelper.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/AbstractPipeline.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReferencePipeline.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReferencePipeline$Head.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/StreamOpFlag.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/StreamOpFlag$Type.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/StreamOpFlag$MaskBuilder.class\",\n+            \"\/modules\/java.base\/java\/util\/EnumMap.class\",\n+            \"\/modules\/java.base\/java\/lang\/Class$ReflectionData.class\",\n+            \"\/modules\/java.base\/java\/lang\/Class$Atomic.class\",\n+            \"\/modules\/java.base\/java\/lang\/PublicMethods$MethodList.class\",\n+            \"\/modules\/java.base\/java\/lang\/PublicMethods$Key.class\",\n+            \"\/modules\/java.base\/sun\/reflect\/annotation\/AnnotationParser.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/MethodHandleAccessorFactory$LazyStaticHolder.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/BoundMethodHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/ClassSpecializer.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/BoundMethodHandle$Specializer.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/annotation\/Stable.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/ClassSpecializer$SpeciesData.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/BoundMethodHandle$SpeciesData.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/ClassSpecializer$Factory.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/BoundMethodHandle$Specializer$Factory.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/SimpleMethodHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/NoSuchFieldException.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/BoundMethodHandle$Species_L.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DirectMethodHandle$Accessor.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DelegatingMethodHandle.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DelegatingMethodHandle$Holder.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaFormEditor.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaFormEditor$TransformKey.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaFormBuffer.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/LambdaFormEditor$Transform.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Collectors.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Collector$Characteristics.class\",\n+            \"\/modules\/java.base\/java\/util\/EnumSet.class\",\n+            \"\/modules\/java.base\/java\/util\/RegularEnumSet.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Collector.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Collectors$CollectorImpl.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/BiConsumer.class\",\n+            \"\/modules\/java.base\/java\/lang\/invoke\/DirectMethodHandle$Interface.class\",\n+            \"\/modules\/java.base\/java\/lang\/classfile\/constantpool\/InterfaceMethodRefEntry.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry$InterfaceMethodRefEntryImpl.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/BinaryOperator.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReduceOps.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/TerminalOp.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReduceOps$ReduceOp.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/StreamShape.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Sink.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/TerminalSink.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReduceOps$AccumulatingSink.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReduceOps$Box.class\",\n+            \"\/modules\/java.base\/java\/util\/HashMap$KeySpliterator.class\",\n+            \"\/modules\/java.base\/java\/util\/function\/Predicate.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/ReferencePipeline$StatelessOp.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/Sink$ChainedReference.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleResolution.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/FindOps.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/FindOps$FindSink.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/FindOps$FindSink$OfRef.class\",\n+            \"\/modules\/java.base\/java\/util\/stream\/FindOps$FindOp.class\",\n+            \"\/modules\/java.base\/java\/util\/Spliterators.class\",\n+            \"\/modules\/java.base\/java\/util\/Spliterators$IteratorSpliterator.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/Configuration.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/Resolver.class\",\n+            \"\/modules\/java.base\/java\/lang\/ModuleLayer.class\",\n+            \"\/modules\/java.base\/java\/util\/SequencedSet.class\",\n+            \"\/modules\/java.base\/java\/util\/LinkedHashSet.class\",\n+            \"\/modules\/java.base\/java\/util\/SequencedMap.class\",\n+            \"\/modules\/java.base\/java\/util\/LinkedHashMap.class\",\n+            \"\/modules\/java.base\/java\/lang\/module\/ResolvedModule.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleLoaderMap$Mapper.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/AbstractClassLoaderValue$Memoizer.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ServicesCatalog$ServiceProvider.class\",\n+            \"\/modules\/java.base\/java\/util\/concurrent\/CopyOnWriteArrayList.class\",\n+            \"\/modules\/java.base\/java\/lang\/ModuleLayer$Controller.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/module\/ModuleBootstrap$SafeModuleFinder.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/ContinuationSupport.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/vm\/Continuation$Pinned.class\",\n+            \"\/modules\/java.base\/sun\/launcher\/LauncherHelper.class\",\n+            \"\/modules\/java.base\/sun\/net\/util\/URLUtil.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/URLClassPath$Loader.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/URLClassPath$FileLoader.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/loader\/Resource.class\",\n+            \"\/modules\/java.base\/java\/io\/FileCleanable.class\",\n+            \"\/modules\/java.base\/sun\/nio\/ByteBuffered.class\",\n+            \"\/modules\/java.base\/java\/security\/SecureClassLoader$CodeSourceKey.class\",\n+            \"\/modules\/java.base\/java\/security\/PermissionCollection.class\",\n+            \"\/modules\/java.base\/java\/security\/Permissions.class\",\n+            \"\/modules\/java.base\/java\/lang\/NamedPackage.class\",\n+            \"\/modules\/java.base\/jdk\/internal\/misc\/MethodFinder.class\",\n+            \"\/modules\/java.base\/java\/lang\/Readable.class\",\n+            \"\/modules\/java.base\/java\/nio\/CharBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/HeapCharBuffer.class\",\n+            \"\/modules\/java.base\/java\/nio\/charset\/CoderResult.class\",\n+            \"\/modules\/java.base\/java\/util\/IdentityHashMap$IdentityHashMapIterator.class\",\n+            \"\/modules\/java.base\/java\/util\/IdentityHashMap$KeyIterator.class\",\n+            \"\/modules\/java.base\/java\/lang\/Shutdown.class\",\n+            \"\/modules\/java.base\/java\/lang\/Shutdown$Lock.class\");\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/internal\/jrtfs\/ImageReaderBenchmark.java","additions":1079,"deletions":0,"binary":false,"changes":1079,"status":"added"}]}