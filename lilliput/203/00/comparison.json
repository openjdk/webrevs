{"files":[{"patch":"@@ -1761,2 +1761,3 @@\n-  \/\/ Reduce class space size if it would not fit into the Klass encoding range\n-  constexpr size_t max_encoding_range_size = 4 * G;\n+  \/\/ Reduce class space size if it would not fit into the maximum possible Klass encoding range. That\n+  \/\/ range is defined by the narrowKlass size.\n+  const size_t max_encoding_range_size = CompressedKlassPointers::max_klass_range_size();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3771,0 +3771,3 @@\n+  if (UseCompactObjectHeaders && FLAG_IS_DEFAULT(CompressedClassSpaceSize)) {\n+    FLAG_SET_DEFAULT(CompressedClassSpaceSize, 512 * M);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1404,1 +1404,1 @@\n-  product(size_t, CompressedClassSpaceSize, 128*M,                          \\\n+  product(size_t, CompressedClassSpaceSize, 1*G,                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    String compressedClassSpaceSizeArg = \"-XX:CompressedClassSpaceSize=\" + 2 * getCompressedClassSpaceSize();\n+    String compressedClassSpaceSizeArg = \"-XX:CompressedClassSpaceSize=\" + getCompressedClassSpaceSize() \/ 2;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsErgoTools.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}