{"files":[{"patch":"@@ -656,0 +656,2 @@\n+    const size_t res_align = reserve_alignment();\n+\n@@ -665,0 +667,3 @@\n+    assert(max_encoding_range >= res_align,\n+           \"Encoding range (%zu) must cover at least a full root chunk (%zu)\",\n+           max_encoding_range, res_align);\n@@ -669,9 +674,2 @@\n-    \/\/  root chunk.\n-    adjusted_ccs_size = align_down(adjusted_ccs_size, reserve_alignment());\n-    if (adjusted_ccs_size < reserve_alignment()) {\n-      stringStream ss;\n-      ss.print(\"Class space size (adjusted) (%zu) smaller \"\n-               \"than metaspace reserve granularity (%zu)\",\n-               adjusted_ccs_size, reserve_alignment());\n-      vm_exit_during_initialization(ss.base());\n-    }\n+    \/\/  root chunk. But impose a miminum size of 1 root chunk (16MB).\n+    adjusted_ccs_size = MAX2(align_down(adjusted_ccs_size, res_align), res_align);\n@@ -680,1 +678,1 @@\n-    if (CompressedClassSpaceSize > adjusted_ccs_size) {\n+    if (CompressedClassSpaceSize != adjusted_ccs_size) {\n@@ -682,1 +680,1 @@\n-                \"%zu bytes down to %zu bytes\", CompressedClassSpaceSize, adjusted_ccs_size\n+                \"%zu bytes to %zu bytes\", CompressedClassSpaceSize, adjusted_ccs_size\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"}]}