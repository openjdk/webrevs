{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-HSDIS_TOOLCHAIN := TOOLCHAIN_DEFAULT\n+HSDIS_LINK_TYPE := C\n@@ -62,0 +62,1 @@\n+  HSDIS_LINK_TYPE := C++\n@@ -63,1 +64,0 @@\n-  HSDIS_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n@@ -94,8 +94,5 @@\n-    $(eval $(call DefineNativeToolchain, TOOLCHAIN_MINGW, \\\n-        CC := $(MINGW_BASE)-gcc, \\\n-        LD := $(MINGW_BASE)-ld, \\\n-        OBJCOPY := $(MINGW_BASE)-objcopy, \\\n-        RC := $(RC), \\\n-        SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-        SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-    ))\n+    BUILD_HSDIS_CC := $(MINGW_BASE)-gcc\n+    BUILD_HSDIS_LD := $(MINGW_BASE)-ld\n+    BUILD_HSDIS_OBJCOPY := $(MINGW_BASE)-objcopy\n+    BUILD_HSDIS_SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT)\n+    BUILD_HSDIS_SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT)\n@@ -125,0 +122,1 @@\n+    OPENJDK_TARGET_OS_TYPE := unix\n@@ -126,1 +124,0 @@\n-    LD_OUT_OPTION := -o$(SPACE)\n@@ -134,1 +131,0 @@\n-    HSDIS_TOOLCHAIN := TOOLCHAIN_MINGW\n@@ -147,0 +143,1 @@\n+    LINK_TYPE := $(HSDIS_LINK_TYPE), \\\n@@ -149,1 +146,0 @@\n-    TOOLCHAIN := $(HSDIS_TOOLCHAIN), \\\n","filename":"make\/Hsdis.gmk","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -430,2 +430,3 @@\n-        # If running with a COMPARE_BUILD patch, reverse-apply it\n-\t$(if $(COMPARE_BUILD_PATCH), cd $(topdir) && $(PATCH) -R -p1 < $(COMPARE_BUILD_PATCH))\n+        # If running with a COMPARE_BUILD patch, reverse-apply it, but continue\n+        # even if that fails (can happen with removed files).\n+\t$(if $(COMPARE_BUILD_PATCH), cd $(topdir) && $(PATCH) -R -p1 < $(COMPARE_BUILD_PATCH) || true)\n","filename":"make\/InitSupport.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+LIB := @BUILD_LIB@\n","filename":"make\/autoconf\/buildjdk-spec.gmk.template","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-    SET_SHARED_LIBRARY_MAPFILE='-Wl,-version-script=[$]1'\n@@ -52,1 +51,0 @@\n-      SET_SHARED_LIBRARY_MAPFILE='-Wl,-exported_symbols_list,[$]1'\n@@ -60,1 +58,0 @@\n-      SET_SHARED_LIBRARY_MAPFILE=''\n@@ -67,1 +64,0 @@\n-      SET_SHARED_LIBRARY_MAPFILE='-Wl,-version-script=[$]1'\n@@ -83,1 +79,0 @@\n-    SET_SHARED_LIBRARY_MAPFILE=''\n@@ -90,1 +85,0 @@\n-    SET_SHARED_LIBRARY_MAPFILE='-def:[$]1'\n@@ -96,1 +90,0 @@\n-  AC_SUBST(SET_SHARED_LIBRARY_MAPFILE)\n@@ -125,0 +118,5 @@\n+\n+            # Add debug prefix map for OUTPUTDIR to handle the scenario when\n+            # it is not located within WORKSPACE_ROOT\n+            outputdir_slash=\"${OUTPUTDIR%\/}\/\"\n+            DEBUG_PREFIX_CFLAGS=\"$DEBUG_PREFIX_CFLAGS -fdebug-prefix-map=${outputdir_slash}=\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-    BASIC_LDFLAGS=\"-nologo -opt:ref\"\n+    BASIC_LDFLAGS=\"-opt:ref\"\n","filename":"make\/autoconf\/flags-ldflags.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,0 @@\n-  elif test \"x$OPENJDK_TARGET_OS\" = xwindows; then\n-    # lib.exe is used as AR to create static libraries.\n-    ARFLAGS=\"-nologo -NODEFAULTLIB:MSVCRT\"\n@@ -46,0 +43,12 @@\n+AC_DEFUN([FLAGS_SETUP_LIBFLAGS],\n+[\n+  # LIB is used to create static libraries on Windows\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows; then\n+    LIBFLAGS=\"-nodefaultlib:msvcrt\"\n+  else\n+    LIBFLAGS=\"\"\n+  fi\n+\n+  AC_SUBST(LIBFLAGS)\n+])\n+\n","filename":"make\/autoconf\/flags-other.m4","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -367,2 +367,0 @@\n-    LD_OUT_OPTION=-out:\n-    AR_OUT_OPTION=-out:\n@@ -373,8 +371,0 @@\n-    # When linking, how to specify the output\n-    LD_OUT_OPTION='-o$(SPACE)'\n-    # When archiving, how to specify the destination static archive.\n-    if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n-      AR_OUT_OPTION='-r -cs$(SPACE)'\n-    else\n-      AR_OUT_OPTION='-rcs$(SPACE)'\n-    fi\n@@ -383,2 +373,0 @@\n-  AC_SUBST(LD_OUT_OPTION)\n-  AC_SUBST(AR_OUT_OPTION)\n@@ -426,0 +414,1 @@\n+  FLAGS_SETUP_LIBFLAGS\n","filename":"make\/autoconf\/flags.m4","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -501,2 +501,0 @@\n-LD_OUT_OPTION := @LD_OUT_OPTION@\n-AR_OUT_OPTION := @AR_OUT_OPTION@\n@@ -607,1 +605,0 @@\n-# AR is used to create a static library (is ar in unix, lib.exe in windows)\n@@ -610,1 +607,2 @@\n-\n+LIB := @LIB@\n+LIBFLAGS := @LIBFLAGS@\n@@ -622,4 +620,0 @@\n-# Options to linker to specify a mapfile.\n-# (Note absence of := assignment, because we do not want to evaluate the macro body here)\n-SET_SHARED_LIBRARY_MAPFILE = @SET_SHARED_LIBRARY_MAPFILE@\n-\n","filename":"make\/autoconf\/spec.gmk.template","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -735,1 +735,1 @@\n-  # Setup the archiver (AR)\n+  # Setup tools for creating static libraries (AR\/LIB)\n@@ -738,2 +738,1 @@\n-    # The corresponding ar tool is lib.exe (used to create static libraries)\n-    UTIL_LOOKUP_TOOLCHAIN_PROGS(AR, lib)\n+    UTIL_LOOKUP_TOOLCHAIN_PROGS(LIB, lib)\n","filename":"make\/autoconf\/toolchain.m4","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+include native\/LinkMicrosoft.gmk\n@@ -44,1 +45,0 @@\n-include native\/ToolchainDefinitions.gmk\n@@ -57,1 +57,2 @@\n-#   TOOLCHAIN Name of toolchain setup to use. Defaults to TOOLCHAIN_DEFAULT.\n+#   TARGET_TYPE The type to target, BUILD or TARGET. Defaults to TARGET.\n+#   LINK_TYPE The language to use for the linker, C or C++. Defaults to C.\n@@ -75,1 +76,2 @@\n-#   ARFLAGS the archiver flags to be used\n+#   ARFLAGS the archiver flags to be used on unix platforms\n+#   LIBFLAGS the flags for the lib tool used on windows\n@@ -90,5 +92,12 @@\n-#   MAPFILE mapfile\n-#   USE_MAPFILE_FOR_SYMBOLS if true and this is a STATIC_BUILD, just copy the\n-#       mapfile for the output symbols file\n-#   CC the compiler to use, default is $(CC)\n-#   LD the linker to use, default is $(LD)\n+#   CC the C compiler to use\n+#   CXX the C++ compiler to use\n+#   LD the Linker to use\n+#   AR the static linker to use\n+#   LIB the Windows lib tool to use for creating static libraries\n+#   AS the assembler to use\n+#   MT the Windows MT tool to use\n+#   RC the Windows RC tool to use\n+#   OBJCOPY the objcopy tool for debug symbol handling\n+#   STRIP the tool to use for stripping debug symbols\n+#   SYSROOT_CFLAGS the compiler flags for using the specific sysroot\n+#   SYSROOT_LDFLAGS the linker flags for using the specific sysroot\n@@ -201,1 +210,3 @@\n-  $$(eval $$(call SetupLinking,$1))\n+  ifneq ($(TOOLCHAIN_TYPE), microsoft)\n+    $$(eval $$(call SetupLinking,$1))\n+  endif\n@@ -206,1 +217,5 @@\n-  $$(eval $$(call CreateLinkedResult,$1))\n+  ifneq ($(TOOLCHAIN_TYPE), microsoft)\n+    $$(eval $$(call CreateLinkedResult,$1))\n+  else\n+    $$(eval $$(call CreateLinkedResultMicrosoft,$1))\n+  endif\n@@ -287,0 +302,38 @@\n+################################################################################\n+# Setup the toolchain variables\n+define SetupToolchain\n+  ifeq ($$($1_TARGET_TYPE), BUILD)\n+    $$(call SetIfEmpty, $1_CC, $(BUILD_CC))\n+    $$(call SetIfEmpty, $1_CXX, $(BUILD_CXX))\n+    $$(call SetIfEmpty, $1_AR, $(BUILD_AR))\n+    $$(call SetIfEmpty, $1_LIB, $(BUILD_LIB))\n+    $$(call SetIfEmpty, $1_AS, $(BUILD_AS))\n+    $$(call SetIfEmpty, $1_OBJCOPY, $(BUILD_OBJCOPY))\n+    $$(call SetIfEmpty, $1_STRIP, $(BUILD_STRIP))\n+    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $(BUILD_SYSROOT_CFLAGS))\n+    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $(BUILD_SYSROOT_LDFLAGS))\n+    ifeq ($$($1_LINK_TYPE), C++)\n+      $$(call SetIfEmpty, $1_LD, $(BUILD_LDCXX))\n+    else\n+      $$(call SetIfEmpty, $1_LD, $(BUILD_LD))\n+    endif\n+  else\n+    $$(call SetIfEmpty, $1_CC, $(CC))\n+    $$(call SetIfEmpty, $1_CXX, $(CXX))\n+    $$(call SetIfEmpty, $1_AR, $(AR))\n+    $$(call SetIfEmpty, $1_LIB, $(LIB))\n+    $$(call SetIfEmpty, $1_AS, $(AS))\n+    $$(call SetIfEmpty, $1_MT, $(MT))\n+    $$(call SetIfEmpty, $1_RC, $(RC))\n+    $$(call SetIfEmpty, $1_OBJCOPY, $(OBJCOPY))\n+    $$(call SetIfEmpty, $1_STRIP, $(STRIP))\n+    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $(SYSROOT_CFLAGS))\n+    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $(SYSROOT_LDFLAGS))\n+    ifeq ($$($1_LINK_TYPE), C++)\n+      $$(call SetIfEmpty, $1_LD, $(LDCXX))\n+    else\n+      $$(call SetIfEmpty, $1_LD, $(LD))\n+    endif\n+  endif\n+endef\n+\n","filename":"make\/common\/NativeCompilation.gmk","additions":63,"deletions":10,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,0 +106,1 @@\n+        LINK_TYPE := $(if $$(filter %.cpp, $$(file)), C++, C), \\\n@@ -116,1 +117,0 @@\n-        TOOLCHAIN := $(if $$(filter %.cpp, $$(file)), TOOLCHAIN_LINK_CXX, TOOLCHAIN_DEFAULT), \\\n","filename":"make\/common\/TestFilesCompilation.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-\n@@ -52,8 +51,0 @@\n-  ifneq ($(DISABLE_MAPFILES), true)\n-    $1_REAL_MAPFILE := $$($1_MAPFILE)\n-  endif\n-\n-  ifneq ($$($1_REAL_MAPFILE), )\n-    $1_EXTRA_LDFLAGS += $(call SET_SHARED_LIBRARY_MAPFILE,$$($1_REAL_MAPFILE))\n-  endif\n-\n@@ -65,5 +56,4 @@\n-    ifneq ($$($1_STRIP), )\n-      # Default to using the global STRIPFLAGS. Allow for overriding with an empty value\n-      $1_STRIPFLAGS ?= $(STRIPFLAGS)\n-      $1_STRIP_CMD := $$($1_STRIP) $$($1_STRIPFLAGS) $$($1_TARGET)\n-    endif\n+    # Default to using the global STRIPFLAGS. Allow for overriding with an\n+    # empty value\n+    $1_STRIPFLAGS ?= $(STRIPFLAGS)\n+    $1_STRIP_CMD := $$($1_STRIP) $$($1_STRIPFLAGS) $$($1_TARGET)\n@@ -84,1 +74,1 @@\n-  # Include partial linking when building the static library with clang on linux.\n+  # Include partial linking when building the static library with clang on linux\n@@ -99,8 +89,1 @@\n-  # Generating a static library, ie object file archive.\n-  ifeq ($(STATIC_BUILD), true)\n-    ifeq ($$($1_USE_MAPFILE_FOR_SYMBOLS), true)\n-      STATIC_MAPFILE_DEP := $$($1_MAPFILE)\n-    endif\n-  endif\n-\n-  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_VARDEPS_FILE) $$(STATIC_MAPFILE_DEP)\n+  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_VARDEPS_FILE)\n@@ -131,1 +114,1 @@\n-\t        $(LD_OUT_OPTION)$$($1_TARGET_RELOCATABLE) \\\n+\t        -o $$($1_TARGET_RELOCATABLE) \\\n@@ -136,2 +119,2 @@\n-\t    $$($1_AR) $$(ARFLAGS) $$($1_ARFLAGS) $(AR_OUT_OPTION)$$($1_TARGET) $$($1_AR_OBJ_ARG) \\\n-\t        $$($1_RES))\n+\t    $$($1_AR) $$(ARFLAGS) $$($1_ARFLAGS) -r -cs $$($1_TARGET) \\\n+\t        $$($1_AR_OBJ_ARG) $$($1_RES))\n@@ -139,22 +122,5 @@\n-          ifeq ($$($1_USE_MAPFILE_FOR_SYMBOLS), true)\n-\t    $(CP) $$($1_MAPFILE) $$(@D)\/$$(basename $$(@F)).symbols\n-          else\n-            # get the exported symbols from mapfiles and if there\n-            # is no mapfile, get them from the archive\n-\t    $(RM) $$(@D)\/$$(basename $$(@F)).symbols; \\\n-\t    if [ ! -z $$($1_MAPFILE) -a -e $$($1_MAPFILE) ]; then \\\n-\t      $(ECHO) \"Getting symbols from mapfile $$($1_MAPFILE)\"; \\\n-\t      $(AWK) '\/global:\/','\/local:\/' $$($1_MAPFILE) | \\\n-\t\t  $(SED) -e 's\/#.*\/\/;s\/global:\/\/;s\/local:\/\/;s\/\\;\/\/;s\/^[ \t]*\/_\/;\/^_$$$$\/d' | \\\n-\t\t  $(EGREP) -v \"JNI_OnLoad|JNI_OnUnload|Agent_OnLoad|Agent_OnUnload|Agent_OnAttach\" > \\\n-\t\t  $$(@D)\/$$(basename $$(@F)).symbols || true; \\\n-\t      $(NM) $(NMFLAGS) $$($1_TARGET) | $(GREP)  \" T \" | \\\n-\t\t  $(EGREP) \"JNI_OnLoad|JNI_OnUnload|Agent_OnLoad|Agent_OnUnload|Agent_OnAttach\" | \\\n-\t\t  $(CUT) -d ' ' -f 3 >>  $$(@D)\/$$(basename $$(@F)).symbols || true;\\\n-\t    else \\\n-\t      $(ECHO) \"Getting symbols from nm\"; \\\n-\t      $(NM) $(NMFLAGS) -m $$($1_TARGET) | $(GREP)  \"__TEXT\" | \\\n-\t\t  $(EGREP) -v \"non-external|private extern|__TEXT,__eh_frame\" | \\\n-\t\t  $(SED) -e  's\/.* \/\/' > $$(@D)\/$$(basename $$(@F)).symbols; \\\n-\t    fi\n-          endif\n+\t  $(RM) $$(@D)\/$$(basename $$(@F)).symbols; \\\n+\t  $(ECHO) \"Getting symbols from nm\"; \\\n+\t  $(NM) $(NMFLAGS) -m $$($1_TARGET) | $(GREP)  \"__TEXT\" | \\\n+\t      $(EGREP) -v \"non-external|private extern|__TEXT,__eh_frame\" | \\\n+\t      $(SED) -e  's\/.* \/\/' > $$(@D)\/$$(basename $$(@F)).symbols\n@@ -177,28 +143,3 @@\n-  ifeq ($(call isTargetOs, windows), true)\n-    ifeq ($$($1_EMBED_MANIFEST), true)\n-      $1_EXTRA_LDFLAGS += -manifest:embed\n-    endif\n-\n-    $1_IMPORT_LIBRARY := $$($1_OBJECT_DIR)\/$$($1_NAME).lib\n-    $1_EXTRA_LDFLAGS += \"-implib:$$($1_IMPORT_LIBRARY)\"\n-    ifeq ($$($1_TYPE), LIBRARY)\n-      # To properly trigger downstream dependants of the import library, just as\n-      # for debug files, we must have a recipe in the rule. To avoid rerunning\n-      # the recipe every time have it touch the target. If an import library\n-      # file is deleted by something external, explicitly delete the target to\n-      # trigger a rebuild of both.\n-      ifneq ($$(wildcard $$($1_IMPORT_LIBRARY)), $$($1_IMPORT_LIBRARY))\n-        $$(call LogDebug, Deleting $$($1_BASENAME) because import library is missing)\n-        $$(shell $(RM) $$($1_TARGET))\n-      endif\n-      $$($1_IMPORT_LIBRARY): $$($1_TARGET)\n-\t$(TOUCH) $$@\n-\n-      $1 += $$($1_IMPORT_LIBRARY)\n-    endif\n-  endif\n-\n-  $1_VARDEPS := $$($1_LD) $$($1_SYSROOT_LDFLAGS) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) \\\n-      $$($1_LIBS) $$($1_EXTRA_LIBS) $$($1_MT) \\\n-      $$($1_CREATE_DEBUGINFO_CMDS) $$($1_MANIFEST_VERSION) \\\n-      $$($1_STRIP_CMD) $$($1_CREATE_DEBUGLINK_CMDS)\n+  $1_VARDEPS := $$($1_LD) $$($1_SYSROOT_LDFLAGS) $$($1_LDFLAGS) \\\n+      $$($1_EXTRA_LDFLAGS) $$($1_LIBS) $$($1_EXTRA_LIBS) \\\n+      $$($1_CREATE_DEBUGINFO_CMDS) $$($1_STRIP_CMD) $$($1_CREATE_DEBUGLINK_CMDS)\n@@ -208,2 +149,1 @@\n-  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_MANIFEST) \\\n-      $$($1_REAL_MAPFILE) $$($1_VARDEPS_FILE)\n+  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_VARDEPS_FILE)\n@@ -219,2 +159,0 @@\n-        # Keep as much as possible on one execution line for best performance\n-        # on Windows\n@@ -223,28 +161,8 @@\n-        ifeq ($(call isTargetOs, windows), true)\n-\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n-\t      $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$($1_SYSROOT_LDFLAGS) \\\n-\t          $(LD_OUT_OPTION)$$($1_TARGET) $$($1_LD_OBJ_ARG) $$($1_RES) \\\n-\t          $$($1_LIBS) $$($1_EXTRA_LIBS)) \\\n-\t      | $(GREP) -v \"^   Creating library .*\\.lib and object .*\\.exp\" || \\\n-\t          test \"$$$$?\" = \"1\" ; \\\n-\t  $$($1_CREATE_DEBUGINFO_CMDS)\n-\t  $$($1_STRIP_CMD)\n-\t  $$($1_CREATE_DEBUGLINK_CMDS)\n-          ifeq ($(call isBuildOsEnv, windows.wsl2), true)\n-\t    $$(CHMOD) +x $$($1_TARGET)\n-          endif\n-        else\n-\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n-\t      $$(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n-\t      $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$($1_SYSROOT_LDFLAGS) \\\n-\t          $(LD_OUT_OPTION)$$($1_TARGET) $$($1_LD_OBJ_ARG) $$($1_RES) \\\n-\t          $$($1_LIBS) $$($1_EXTRA_LIBS)) ; \\\n-\t  $$($1_CREATE_DEBUGINFO_CMDS)\n-\t  $$($1_STRIP_CMD)\n-\t  $$($1_CREATE_DEBUGLINK_CMDS)\n-        endif\n-        ifeq ($(call isTargetOs, windows), true)\n-          ifneq ($$($1_MANIFEST), )\n-\t    $$($1_MT) -nologo -manifest $$($1_MANIFEST) -identity:\"$$($1_NAME).exe, version=$$($1_MANIFEST_VERSION)\" -outputresource:$$@;#1\n-          endif\n-        endif\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t    $$(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n+\t    $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) \\\n+\t        $$($1_SYSROOT_LDFLAGS) -o $$($1_TARGET) $$($1_LD_OBJ_ARG) \\\n+\t        $$($1_LIBS) $$($1_EXTRA_LIBS))\n+\t$$($1_CREATE_DEBUGINFO_CMDS)\n+\t$$($1_STRIP_CMD)\n+\t$$($1_CREATE_DEBUGLINK_CMDS)\n@@ -256,2 +174,3 @@\n-\t  $(CODESIGN) -f -s \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp --options runtime \\\n-\t      --entitlements $$(call GetEntitlementsFile, $$@) $$@\n+\t  $(CODESIGN) -f -s \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp \\\n+\t      --options runtime --entitlements \\\n+\t      $$(call GetEntitlementsFile, $$@) $$@\n@@ -260,1 +179,2 @@\n-\t  $(CODESIGN) -f -s - --entitlements $$(call GetEntitlementsFile, $$@) $$@\n+\t  $(CODESIGN) -f -s - --entitlements \\\n+\t      $$(call GetEntitlementsFile, $$@) $$@\n","filename":"make\/common\/native\/Link.gmk","additions":31,"deletions":111,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to linking a native binary;\n+# creating either a dynamic library, a static library or an executable.\n+\n+################################################################################\n+define CreateLinkedResultMicrosoft\n+  ifeq ($$($1_TYPE), STATIC_LIBRARY)\n+    $$(eval $$(call CreateStaticLibraryMicrosoft,$1))\n+  else\n+    $$(eval $$(call CreateDynamicLibraryOrExecutableMicrosoft,$1))\n+  endif\n+endef\n+\n+################################################################################\n+define CreateStaticLibraryMicrosoft\n+  $1_VARDEPS := $$($1_LIB) $$(LIBFLAGS) $$($1_LIBFLAGS) $$($1_LIBS) \\\n+      $$($1_EXTRA_LIBS)\n+  $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, \\\n+      $$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).vardeps)\n+\n+  $$($1_TARGET): $$($1_ALL_OBJS) $$($1_RES) $$($1_VARDEPS_FILE)\n+        ifneq ($$($1_OBJ_FILE_LIST), )\n+\t  $$(eval $$(call ListPathsSafely, $1_ALL_OBJS, $$($1_OBJ_FILE_LIST)))\n+        endif\n+\t$$(call LogInfo, Building static library $$($1_BASENAME))\n+\t$$(call MakeDir, $$($1_OUTPUT_DIR) $$($1_SYMBOLS_DIR))\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t    $$($1_LIB) -nologo $$(LIBFLAGS) $$($1_LIBFLAGS) -out:$$($1_TARGET) \\\n+\t        $$($1_LD_OBJ_ARG) $$($1_RES))\n+endef\n+\n+################################################################################\n+define CreateDynamicLibraryOrExecutableMicrosoft\n+  ifeq ($$($1_EMBED_MANIFEST), true)\n+    $1_EXTRA_LDFLAGS += -manifest:embed\n+  endif\n+\n+  $1_IMPORT_LIBRARY := $$($1_OBJECT_DIR)\/$$($1_NAME).lib\n+  $1_EXTRA_LDFLAGS += \"-implib:$$($1_IMPORT_LIBRARY)\"\n+\n+  ifeq ($$($1_TYPE), LIBRARY)\n+    # To properly trigger downstream dependants of the import library, just as\n+    # for debug files, we must have a recipe in the rule. To avoid rerunning\n+    # the recipe every time have it touch the target. If an import library\n+    # file is deleted by something external, explicitly delete the target to\n+    # trigger a rebuild of both.\n+    ifneq ($$(wildcard $$($1_IMPORT_LIBRARY)), $$($1_IMPORT_LIBRARY))\n+      $$(call LogDebug, Deleting $$($1_BASENAME) because import library is missing)\n+      $$(shell $(RM) $$($1_TARGET))\n+    endif\n+    $$($1_IMPORT_LIBRARY): $$($1_TARGET)\n+\t$(TOUCH) $$@\n+\n+    $1 += $$($1_IMPORT_LIBRARY)\n+  endif\n+\n+  $1_VARDEPS := $$($1_LD) $$($1_SYSROOT_LDFLAGS) $$($1_LDFLAGS) \\\n+      $$($1_EXTRA_LDFLAGS) $$($1_LIBS) $$($1_EXTRA_LIBS) $$($1_MT) \\\n+      $$($1_MANIFEST_VERSION)\n+\n+  $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, \\\n+      $$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).vardeps)\n+\n+  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_MANIFEST) \\\n+      $$($1_VARDEPS_FILE)\n+\n+  $$($1_TARGET): $$($1_TARGET_DEPS)\n+        ifneq ($$($1_OBJ_FILE_LIST), )\n+\t  $$(eval $$(call ListPathsSafely, $1_ALL_OBJS, $$($1_OBJ_FILE_LIST)))\n+        endif\n+\t$$(call LogInfo, Linking $$($1_BASENAME))\n+\t$$(call MakeDir, $$($1_OUTPUT_DIR) $$($1_SYMBOLS_DIR))\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t    $$($1_LD) -nologo $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) \\\n+\t        $$($1_SYSROOT_LDFLAGS) -out:$$($1_TARGET) $$($1_LD_OBJ_ARG) \\\n+\t        $$($1_RES) $$($1_LIBS) $$($1_EXTRA_LIBS)) \\\n+\t    | $(GREP) -v \"^   Creating library .*\\.lib and object .*\\.exp\" || \\\n+\t        test \"$$$$?\" = \"1\"\n+        ifeq ($(call isBuildOsEnv, windows.wsl2), true)\n+\t  $$(CHMOD) +x $$($1_TARGET)\n+        endif\n+        ifneq ($$($1_MANIFEST), )\n+\t  $$($1_MT) -nologo -manifest $$($1_MANIFEST) \\\n+\t      -identity:\"$$($1_NAME).exe, version=$$($1_MANIFEST_VERSION)\" \\\n+\t      -outputresource:$$@;#1\n+        endif\n+endef\n","filename":"make\/common\/native\/LinkMicrosoft.gmk","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -1,125 +0,0 @@\n-#\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-################################################################################\n-# This file contains functionality related to setting up our toolchain\n-# definition variables.\n-\n-################################################################################\n-# Define a native toolchain configuration that can be used by\n-# SetupNativeCompilation calls\n-#\n-# Parameter 1 is the name of the toolchain definition\n-#\n-# Remaining parameters are named arguments:\n-#   EXTENDS - Optional parent definition to get defaults from\n-#   CC - The C compiler\n-#   CXX - The C++ compiler\n-#   LD - The Linker\n-#   AR - Static linker\n-#   AS - Assembler\n-#   MT - Windows MT tool\n-#   RC - Windows RC tool\n-#   OBJCOPY - The objcopy tool for debug symbol handling\n-#   STRIP - The tool to use for stripping debug symbols\n-#   SYSROOT_CFLAGS - Compiler flags for using the specific sysroot\n-#   SYSROOT_LDFLAGS - Linker flags for using the specific sysroot\n-DefineNativeToolchain = $(NamedParamsMacroTemplate)\n-define DefineNativeToolchainBody\n-  # If extending another definition, get default values from that,\n-  # otherwise, nothing more needs to be done as variable assignments\n-  # already happened in NamedParamsMacroTemplate.\n-  ifneq ($$($1_EXTENDS), )\n-    $$(call SetIfEmpty, $1_CC, $$($$($1_EXTENDS)_CC))\n-    $$(call SetIfEmpty, $1_CXX, $$($$($1_EXTENDS)_CXX))\n-    $$(call SetIfEmpty, $1_LD, $$($$($1_EXTENDS)_LD))\n-    $$(call SetIfEmpty, $1_AR, $$($$($1_EXTENDS)_AR))\n-    $$(call SetIfEmpty, $1_AS, $$($$($1_EXTENDS)_AS))\n-    $$(call SetIfEmpty, $1_MT, $$($$($1_EXTENDS)_MT))\n-    $$(call SetIfEmpty, $1_RC, $$($$($1_EXTENDS)_RC))\n-    $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_EXTENDS)_OBJCOPY))\n-    $$(call SetIfEmpty, $1_STRIP, $$($$($1_EXTENDS)_STRIP))\n-    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_EXTENDS)_SYSROOT_CFLAGS))\n-    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_EXTENDS)_SYSROOT_LDFLAGS))\n-  endif\n-endef\n-\n-# Create a default toolchain with the main compiler and linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_DEFAULT, \\\n-    CC := $(CC), \\\n-    CXX := $(CXX), \\\n-    LD := $(LD), \\\n-    AR := $(AR), \\\n-    AS := $(AS), \\\n-    MT := $(MT), \\\n-    RC := $(RC), \\\n-    OBJCOPY := $(OBJCOPY), \\\n-    STRIP := $(STRIP), \\\n-    SYSROOT_CFLAGS := $(SYSROOT_CFLAGS), \\\n-    SYSROOT_LDFLAGS := $(SYSROOT_LDFLAGS), \\\n-))\n-\n-# Create a toolchain where linking is done with the C++ linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_LINK_CXX, \\\n-    EXTENDS := TOOLCHAIN_DEFAULT, \\\n-    LD := $(LDCXX), \\\n-))\n-\n-# Create a toolchain with the BUILD compiler, used for build tools that\n-# are to be run during the build.\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD, \\\n-    CC := $(BUILD_CC), \\\n-    CXX := $(BUILD_CXX), \\\n-    LD := $(BUILD_LD), \\\n-    AR := $(BUILD_AR), \\\n-    AS := $(BUILD_AS), \\\n-    OBJCOPY := $(BUILD_OBJCOPY), \\\n-    STRIP := $(BUILD_STRIP), \\\n-    SYSROOT_CFLAGS := $(BUILD_SYSROOT_CFLAGS), \\\n-    SYSROOT_LDFLAGS := $(BUILD_SYSROOT_LDFLAGS), \\\n-))\n-\n-# BUILD toolchain with the C++ linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD_LINK_CXX, \\\n-    EXTENDS := TOOLCHAIN_BUILD, \\\n-    LD := $(BUILD_LDCXX), \\\n-))\n-\n-################################################################################\n-# Setup the toolchain to be used\n-define SetupToolchain\n-  $$(call SetIfEmpty, $1_TOOLCHAIN, TOOLCHAIN_DEFAULT)\n-  $$(call SetIfEmpty, $1_CC, $$($$($1_TOOLCHAIN)_CC))\n-  $$(call SetIfEmpty, $1_CXX, $$($$($1_TOOLCHAIN)_CXX))\n-  $$(call SetIfEmpty, $1_LD, $$($$($1_TOOLCHAIN)_LD))\n-  $$(call SetIfEmpty, $1_AR, $$($$($1_TOOLCHAIN)_AR))\n-  $$(call SetIfEmpty, $1_AS, $$($$($1_TOOLCHAIN)_AS))\n-  $$(call SetIfEmpty, $1_MT, $$($$($1_TOOLCHAIN)_MT))\n-  $$(call SetIfEmpty, $1_RC, $$($$($1_TOOLCHAIN)_RC))\n-  $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_TOOLCHAIN)_OBJCOPY))\n-  $$(call SetIfEmpty, $1_STRIP, $$($$($1_TOOLCHAIN)_STRIP))\n-  $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_CFLAGS))\n-  $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_LDFLAGS))\n-endef\n","filename":"make\/common\/native\/ToolchainDefinitions.gmk","additions":0,"deletions":125,"binary":false,"changes":125,"status":"deleted"},{"patch":"@@ -1,26 +0,0 @@\n-#\n-# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_handle_aix_signal\n-numa_error\n-numa_warn\n","filename":"make\/data\/hotspot-symbols\/symbols-aix","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -1,26 +0,0 @@\n-#\n-# Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_AccessVMBooleanFlag\n-JVM_AccessVMIntFlag\n-JVM_VMBreakPoint\n","filename":"make\/data\/hotspot-symbols\/symbols-aix-debug","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -1,27 +0,0 @@\n-#\n-# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_handle_linux_signal\n-JVM_IsUseContainerSupport\n-numa_error\n-numa_warn\n","filename":"make\/data\/hotspot-symbols\/symbols-linux","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -1,24 +0,0 @@\n-#\n-# Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_handle_bsd_signal\n","filename":"make\/data\/hotspot-symbols\/symbols-macosx","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -1,35 +0,0 @@\n-#\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-AsyncGetCallTrace\n-jio_fprintf\n-jio_printf\n-jio_snprintf\n-jio_vfprintf\n-jio_vsnprintf\n-JNI_CreateJavaVM\n-JNI_GetCreatedJavaVMs\n-JNI_GetDefaultJavaVMInitArgs\n-JVM_IsForeignLinkerSupported\n-JVM_FindClassFromBootLoader\n-JVM_InitAgentProperties\n","filename":"make\/data\/hotspot-symbols\/symbols-shared","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -1,233 +0,0 @@\n-#\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_ActiveProcessorCount\n-JVM_AreNestMates\n-JVM_ArrayCopy\n-JVM_AssertionStatusDirectives\n-JVM_BeforeHalt\n-JVM_CallStackWalk\n-JVM_Clone\n-JVM_ConstantPoolGetClassAt\n-JVM_ConstantPoolGetClassAtIfLoaded\n-JVM_ConstantPoolGetClassRefIndexAt\n-JVM_ConstantPoolGetDoubleAt\n-JVM_ConstantPoolGetFieldAt\n-JVM_ConstantPoolGetFieldAtIfLoaded\n-JVM_ConstantPoolGetFloatAt\n-JVM_ConstantPoolGetIntAt\n-JVM_ConstantPoolGetLongAt\n-JVM_ConstantPoolGetMemberRefInfoAt\n-JVM_ConstantPoolGetMethodAt\n-JVM_ConstantPoolGetMethodAtIfLoaded\n-JVM_ConstantPoolGetNameAndTypeRefIndexAt\n-JVM_ConstantPoolGetNameAndTypeRefInfoAt\n-JVM_ConstantPoolGetSize\n-JVM_ConstantPoolGetStringAt\n-JVM_ConstantPoolGetTagAt\n-JVM_ConstantPoolGetUTF8At\n-JVM_CurrentCarrierThread\n-JVM_CurrentThread\n-JVM_SetCurrentThread\n-JVM_CurrentTimeMillis\n-JVM_DefineClass\n-JVM_DefineClassWithSource\n-JVM_DesiredAssertionStatus\n-JVM_DumpAllStacks\n-JVM_DumpClassListToFile\n-JVM_DumpDynamicArchive\n-JVM_DumpThreads\n-JVM_ExpandStackFrameInfo\n-JVM_FillInStackTrace\n-JVM_FindClassFromCaller\n-JVM_FindClassFromClass\n-JVM_FindLibraryEntry\n-JVM_FindLoadedClass\n-JVM_FindPrimitiveClass\n-JVM_FindSignal\n-JVM_FreeMemory\n-JVM_GC\n-JVM_GetAllThreads\n-JVM_GetAndClearReferencePendingList\n-JVM_GetArrayElement\n-JVM_GetArrayLength\n-JVM_GetCallerClass\n-JVM_GetClassAccessFlags\n-JVM_GetClassAnnotations\n-JVM_GetClassConstantPool\n-JVM_GetClassContext\n-JVM_GetClassCPEntriesCount\n-JVM_GetClassCPTypes\n-JVM_GetClassDeclaredConstructors\n-JVM_GetClassDeclaredFields\n-JVM_GetClassDeclaredMethods\n-JVM_GetClassFieldsCount\n-JVM_GetClassFileVersion\n-JVM_GetClassInterfaces\n-JVM_GetClassMethodsCount\n-JVM_GetClassModifiers\n-JVM_GetClassNameUTF\n-JVM_GetClassSignature\n-JVM_GetClassSigners\n-JVM_GetClassTypeAnnotations\n-JVM_GetCPClassNameUTF\n-JVM_GetCPFieldClassNameUTF\n-JVM_GetCPFieldModifiers\n-JVM_GetCPFieldNameUTF\n-JVM_GetCPFieldSignatureUTF\n-JVM_GetCPMethodClassNameUTF\n-JVM_GetCPMethodModifiers\n-JVM_GetCPMethodNameUTF\n-JVM_GetCPMethodSignatureUTF\n-JVM_GetDeclaredClasses\n-JVM_GetDeclaringClass\n-JVM_GetEnclosingMethodInfo\n-JVM_GetExtendedNPEMessage\n-JVM_GetFieldIxModifiers\n-JVM_GetFieldTypeAnnotations\n-JVM_GetInheritedAccessControlContext\n-JVM_GetManagement\n-JVM_GetMethodIxArgsSize\n-JVM_GetMethodIxByteCode\n-JVM_GetMethodIxByteCodeLength\n-JVM_GetMethodIxExceptionIndexes\n-JVM_GetMethodIxExceptionsCount\n-JVM_GetMethodIxExceptionTableEntry\n-JVM_GetMethodIxExceptionTableLength\n-JVM_GetMethodIxLocalsCount\n-JVM_GetMethodIxMaxStack\n-JVM_GetMethodIxModifiers\n-JVM_GetMethodIxNameUTF\n-JVM_GetMethodIxSignatureUTF\n-JVM_GetMethodParameters\n-JVM_GetMethodTypeAnnotations\n-JVM_GetNanoTimeAdjustment\n-JVM_GetNestHost\n-JVM_GetNestMembers\n-JVM_GetNextThreadIdOffset\n-JVM_GetPermittedSubclasses\n-JVM_GetPrimitiveArrayElement\n-JVM_GetProperties\n-JVM_GetProtectionDomain\n-JVM_GetRandomSeedForDumping\n-JVM_GetRecordComponents\n-JVM_GetSimpleBinaryName\n-JVM_GetStackAccessControlContext\n-JVM_GetSystemPackage\n-JVM_GetSystemPackages\n-JVM_GetTemporaryDirectory\n-JVM_GetVmArguments\n-JVM_Halt\n-JVM_HasReferencePendingList\n-JVM_HoldsLock\n-JVM_GetStackTrace\n-JVM_IHashCode\n-JVM_InitClassName\n-JVM_InitStackTraceElement\n-JVM_InitStackTraceElementArray\n-JVM_InitializeFromArchive\n-JVM_InternString\n-JVM_Interrupt\n-JVM_InvokeMethod\n-JVM_IsArrayClass\n-JVM_IsCDSDumpingEnabled\n-JVM_IsConstructorIx\n-JVM_IsDumpingClassList\n-JVM_IsFinalizationEnabled\n-JVM_IsHiddenClass\n-JVM_IsInterface\n-JVM_IsPreviewEnabled\n-JVM_IsContinuationsSupported\n-JVM_IsPrimitiveClass\n-JVM_IsRecord\n-JVM_IsSameClassPackage\n-JVM_IsSharingEnabled\n-JVM_IsSupportedJNIVersion\n-JVM_IsVMGeneratedMethodIx\n-JVM_LatestUserDefinedLoader\n-JVM_LoadZipLibrary\n-JVM_LoadLibrary\n-JVM_LookupDefineClass\n-JVM_LookupLambdaProxyClassFromArchive\n-JVM_LogLambdaFormInvoker\n-JVM_MaxMemory\n-JVM_MaxObjectInspectionAge\n-JVM_MonitorNotify\n-JVM_MonitorNotifyAll\n-JVM_MonitorWait\n-JVM_MoreStackWalk\n-JVM_NanoTime\n-JVM_NativePath\n-JVM_NewArray\n-JVM_NewInstanceFromConstructor\n-JVM_NewMultiArray\n-JVM_PhantomReferenceRefersTo\n-JVM_PrintWarningAtDynamicAgentLoad\n-JVM_RaiseSignal\n-JVM_RawMonitorCreate\n-JVM_RawMonitorDestroy\n-JVM_RawMonitorEnter\n-JVM_RawMonitorExit\n-JVM_ReferenceClear\n-JVM_ReferenceRefersTo\n-JVM_RegisterContinuationMethods\n-JVM_RegisterLambdaProxyClassForArchiving\n-JVM_RegisterSignal\n-JVM_ReleaseUTF\n-JVM_ReportFinalizationComplete\n-JVM_SetArrayElement\n-JVM_SetClassSigners\n-JVM_SetNativeThreadName\n-JVM_SetPrimitiveArrayElement\n-JVM_SetStackWalkContinuation\n-JVM_SetThreadPriority\n-JVM_SleepNanos\n-JVM_StartThread\n-JVM_TotalMemory\n-JVM_UnloadLibrary\n-JVM_WaitForReferencePendingList\n-JVM_Yield\n-\n-# Module related API's\n-JVM_AddModuleExports\n-JVM_AddModuleExportsToAll\n-JVM_AddModuleExportsToAllUnnamed\n-JVM_AddReadsModule\n-JVM_DefineArchivedModules\n-JVM_DefineModule\n-JVM_SetBootLoaderUnnamedModule\n-\n-# Virtual thread notifications for JVMTI\n-JVM_VirtualThreadStart\n-JVM_VirtualThreadEnd\n-JVM_VirtualThreadMount\n-JVM_VirtualThreadUnmount\n-JVM_VirtualThreadHideFrames\n-JVM_VirtualThreadDisableSuspend\n-\n-# Scoped values\n-JVM_EnsureMaterializedForStackWalk_func\n-JVM_FindScopedValueBindings\n-JVM_ScopedValueCache\n-JVM_SetScopedValueCache\n-#\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":0,"deletions":233,"binary":false,"changes":233,"status":"deleted"},{"patch":"@@ -0,0 +1,11 @@\n+SUNWprivate_1.1 {\n+  global:\n+    *;\n+\n+  local:\n+    __bss_start;\n+    _edata;\n+    _end;\n+    _fini;\n+    _init;\n+};\n","filename":"make\/data\/hotspot-symbols\/version-script.txt","additions":11,"deletions":0,"binary":false,"changes":11,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-    ADLC_LDFLAGS += -nologo\n@@ -75,1 +74,2 @@\n-      TOOLCHAIN := TOOLCHAIN_BUILD_LINK_CXX, \\\n+      TARGET_TYPE := BUILD, \\\n+      LINK_TYPE := C++, \\\n","filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n@@ -78,14 +78,0 @@\n-\n-ifeq ($(call isTargetOs, windows), true)\n-  GTEST_JVM_MAPFILE := $(JVM_MAPFILE)\n-else\n-  GTEST_JVM_MAPFILE := $(JVM_OUTPUTDIR)\/gtest\/mapfile\n-\n-  $(JVM_OUTPUTDIR)\/gtest\/symbols: $(JVM_OUTPUTDIR)\/symbols\n-\t$(call MakeDir, $(@D))\n-\t( $(CAT) $< ; echo \"runUnitTests\" ) > $@\n-\n-  $(GTEST_JVM_MAPFILE): $(JVM_OUTPUTDIR)\/gtest\/symbols\n-\t$(call create-mapfile)\n-endif\n-\n@@ -96,1 +82,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n@@ -126,2 +112,0 @@\n-    MAPFILE := $(GTEST_JVM_MAPFILE), \\\n-    USE_MAPFILE_FOR_SYMBOLS := true, \\\n@@ -137,0 +121,5 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  $(BUILD_GTEST_LIBJVM_TARGET): $(WIN_EXPORT_FILE)\n+endif\n+\n+\n@@ -142,1 +131,0 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n@@ -145,0 +133,1 @@\n+    LINK_TYPE := C++, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":9,"deletions":20,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-JVM_MAPFILE := $(JVM_OUTPUTDIR)\/mapfile\n@@ -149,0 +148,16 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  ifeq ($(STATIC_LIBS), true)\n+    WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/static-win-exports.def\n+  else\n+    WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/win-exports.def\n+  endif\n+\n+  JVM_LDFLAGS += -def:$(WIN_EXPORT_FILE)\n+endif\n+\n+ifeq ($(call isTargetOs, linux), true)\n+  HOTSPOT_VERSION_SCRIPT := $(TOPDIR)\/make\/data\/hotspot-symbols\/version-script.txt\n+\n+  JVM_LDFLAGS += -Wl,--exclude-libs,ALL -Wl,-version-script=$(HOTSPOT_VERSION_SCRIPT)\n+endif\n+\n@@ -154,1 +169,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n@@ -172,0 +187,1 @@\n+    DISABLED_WARNINGS_gcc_shenandoahLock.cpp := stringop-overflow, \\\n@@ -197,2 +213,0 @@\n-    MAPFILE := $(JVM_MAPFILE), \\\n-    USE_MAPFILE_FOR_SYMBOLS := true, \\\n@@ -207,0 +221,36 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  # The following lines create a list of vftable symbols to be filtered out of\n+  # the symbol file. Removing this line causes the linker to complain about too\n+  # many (> 64K) symbols, so the _guess_ is that this line is here to keep down\n+  # the number of exported symbols below that limit.\n+  #\n+  # Some usages of C++ lambdas require the vftable symbol of classes that use\n+  # the lambda type as a template parameter. The usage of those classes won't\n+  # link if their vftable symbols are removed. That's why there's an exception\n+  # for vftable symbols containing the string 'lambda'.\n+  #\n+  # A very simple example of a lambda usage that fails if the lambda vftable\n+  # symbols are missing in the symbol file:\n+  #\n+  # #include <functional>\n+  # std::function<void()> f = [](){}\n+  FILTER_SYMBOLS_AWK_SCRIPT := \\\n+      '{ \\\n+        if ($$7 ~ \/\\?\\?_7.*@@6B@\/ && $$7 !~ \/type_info\/ && $$7 !~ \/lambda\/) print \"  \" $$7; \\\n+      }'\n+\n+  # A more correct solution would be to send BUILD_LIBJVM_ALL_OBJS instead of\n+  # cd && *.obj, but this will result in very long command lines, which could be\n+  # problematic.\n+  $(WIN_EXPORT_FILE): $(BUILD_LIBJVM_ALL_OBJS)\n+\t$(call LogInfo, Generating list of symbols to export from object files)\n+\t$(call MakeDir, $(@D))\n+\t$(ECHO) \"EXPORTS\" > $@.tmp\n+\t$(CD) $(BUILD_LIBJVM_OBJECT_DIR) && \\\n+\t    $(DUMPBIN) -symbols *$(OBJ_SUFFIX) | $(AWK) $(FILTER_SYMBOLS_AWK_SCRIPT) | $(SORT) -u >> $@.tmp\n+\t$(RM) $@\n+\t$(MV) $@.tmp $@\n+\n+  $(BUILD_LIBJVM_TARGET): $(WIN_EXPORT_FILE)\n+endif\n+\n@@ -211,1 +261,1 @@\n-$(ABSTRACT_VM_VERSION_OBJ): $(filter-out $(ABSTRACT_VM_VERSION_OBJ) $(JVM_MAPFILE), \\\n+$(ABSTRACT_VM_VERSION_OBJ): $(filter-out $(ABSTRACT_VM_VERSION_OBJ), \\\n@@ -239,5 +289,0 @@\n-# Include mapfile generation. It relies on BUILD_LIBJVM_ALL_OBJS which is only\n-# defined after the above call to BUILD_LIBJVM. Mapfile will be generated\n-# after all object files are built, but before the jvm library is linked.\n-include lib\/JvmMapfile.gmk\n-\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":56,"deletions":11,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -1,176 +0,0 @@\n-#\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-$(eval $(call IncludeCustomExtension, hotspot\/lib\/JvmMapfile.gmk))\n-\n-################################################################################\n-# Combine a list of static symbols\n-\n-ifeq ($(call And, $(call isTargetOs, windows) $(call isTargetCpu, x86_64)), false)\n-  # On Windows x86_64, we should not have any symbols at all, since that\n-  # results in duplicate warnings from the linker (JDK-8043491).\n-  SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-shared\n-endif\n-\n-ifeq ($(call isTargetOsType, unix), true)\n-  SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-unix\n-endif\n-\n-ifneq ($(wildcard $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)), )\n-  SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)\n-endif\n-\n-ifneq ($(findstring debug, $(DEBUG_LEVEL)), )\n-  ifneq ($(wildcard $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)-debug), )\n-    SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)-debug\n-  endif\n-endif\n-\n-################################################################################\n-# Create a dynamic list of symbols from the built object files. This is highly\n-# platform dependent.\n-\n-ifeq ($(call isTargetOs, linux), true)\n-  DUMP_SYMBOLS_CMD := $(NM) $(NMFLAGS) --defined-only *$(OBJ_SUFFIX)\n-  ifneq ($(FILTER_SYMBOLS_PATTERN), )\n-    FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)|\n-  endif\n-  FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)^_ZTV|^gHotSpotVM|^UseSharedSpaces$$\n-  FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)|^_ZN9Arguments17SharedArchivePathE$$\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if ($$3 ~ \/$(FILTER_SYMBOLS_PATTERN)\/) print $$3; \\\n-      }'\n-\n-else ifeq ($(call isTargetOs, macosx), true)\n-  # nm on macosx prints out \"warning: nm: no name list\" to stderr for\n-  # files without symbols. Hide this, even at the expense of hiding real errors.\n-  DUMP_SYMBOLS_CMD := $(NM) $(NMFLAGS) -Uj *$(OBJ_SUFFIX) 2> \/dev\/null\n-  ifneq ($(FILTER_SYMBOLS_PATTERN), )\n-    FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)|\n-  endif\n-  FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)^_ZTV|^gHotSpotVM\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if ($$3 ~ \/$(FILTER_SYMBOLS_PATTERN)\/) print $$3; \\\n-      }'\n-\n-# NOTE: The script is from the old build. It is broken and finds no symbols.\n-# The script below might be what was intended, but it fails to link with tons\n-# of 'cannot export hidden symbol vtable for X'.\n-#  '{ if ($$1 ~ \/^__ZTV\/ || $$1 ~ \/^_gHotSpotVM\/) print substr($$1, 2) }'\n-else ifeq ($(call isTargetOs, aix), true)\n-  # NOTE: The old build had the solution below. This should to be fixed in\n-  # configure instead.\n-\n-  # On AIX we have to prevent that we pick up the 'nm' version from the GNU binutils\n-  # which may be installed under \/opt\/freeware\/bin. So better use an absolute path here!\n-  # NM=\/usr\/bin\/nm\n-\n-  DUMP_SYMBOLS_CMD := $(NM) $(NMFLAGS) -B -C *$(OBJ_SUFFIX)\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if (($$2=\"d\" || $$2=\"D\") && ($$3 ~ \/^__vft\/ || $$3 ~ \/^gHotSpotVM\/)) print $$3; \\\n-        if ($$3 ~ \/^UseSharedSpaces$$\/) print $$3; \\\n-        if ($$3 ~ \/^SharedArchivePath__9Arguments$$\/) print $$3; \\\n-       }'\n-\n-else ifeq ($(call isTargetOs, windows), true)\n-  DUMP_SYMBOLS_CMD := $(DUMPBIN) -symbols *$(OBJ_SUFFIX)\n-\n-  # The following lines create a list of vftable symbols to be filtered out of\n-  # the mapfile. Removing this line causes the linker to complain about too many\n-  # (> 64K) symbols, so the _guess_ is that this line is here to keep down the\n-  # number of exported symbols below that limit.\n-  #\n-  # Some usages of C++ lambdas require the vftable symbol of classes that use\n-  # the lambda type as a template parameter. The usage of those classes won't\n-  # link if their vftable symbols are removed. That's why there's an exception\n-  # for vftable symbols containing the string 'lambda'.\n-  #\n-  # A very simple example of a lambda usage that fails if the lambda vftable\n-  # symbols are missing in the mapfile:\n-  #\n-  # #include <functional>\n-  # std::function<void()> f = [](){}\n-\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if ($$7 ~ \/\\?\\?_7.*@@6B@\/ && $$7 !~ \/type_info\/ && $$7 !~ \/lambda\/) print $$7; \\\n-      }'\n-\n-else\n-  $(error Unknown target OS $(OPENJDK_TARGET_OS) in JvmMapfile.gmk)\n-endif\n-\n-# A more correct solution would be to send BUILD_LIBJVM_ALL_OBJS instead of\n-# cd && *.o, but this will result in very long command lines, which is\n-# problematic on some platforms.\n-$(JVM_OUTPUTDIR)\/symbols-objects: $(BUILD_LIBJVM_ALL_OBJS)\n-\t$(call LogInfo, Generating symbol list from object files)\n-\t$(CD) $(JVM_OUTPUTDIR)\/objs && \\\n-\t  $(DUMP_SYMBOLS_CMD) | $(AWK) $(FILTER_SYMBOLS_AWK_SCRIPT) | $(SORT) -u > $@\n-\n-SYMBOLS_SRC += $(JVM_OUTPUTDIR)\/symbols-objects\n-\n-################################################################################\n-# Now concatenate all symbol lists into a single file and remove comments.\n-\n-$(JVM_OUTPUTDIR)\/symbols: $(SYMBOLS_SRC)\n-\t$(SED) -e '\/^#\/d' $^ > $@\n-\n-################################################################################\n-# Finally convert the symbol list into a platform-specific mapfile\n-\n-ifeq ($(call isTargetOs, macosx), true)\n-  # On macosx, we need to add a leading underscore\n-  define create-mapfile-work\n-\t  $(AWK) '{ if ($$0 ~ \".\") { print \"  _\" $$0 } }'  < $^ > $@.tmp\n-  endef\n-else ifeq ($(call isTargetOs, windows), true)\n-  # On windows, add an 'EXPORTS' header\n-  define create-mapfile-work\n-\t  $(ECHO) \"EXPORTS\" > $@.tmp\n-\t  $(AWK) '{ if ($$0 ~ \".\") { print \"  \" $$0 } }'  < $^ >> $@.tmp\n-  endef\n-else\n-  # Assume standard linker script\n-  define create-mapfile-work\n-\t  $(PRINTF) \"SUNWprivate_1.1 { \\n  global: \\n\" > $@.tmp\n-\t  $(AWK) '{ if ($$0 ~ \".\") { print \"    \" $$0 \";\" } }' < $^ >> $@.tmp\n-\t  $(PRINTF) \"  local: \\n    *; \\n }; \\n\" >> $@.tmp\n-  endef\n-endif\n-\n-define create-mapfile\n-\t$(call LogInfo, Creating mapfile)\n-\t$(call MakeDir, $(@D))\n-\t$(call create-mapfile-work)\n-\t$(RM) $@\n-\t$(MV) $@.tmp $@\n-endef\n-\n-$(JVM_MAPFILE): $(JVM_OUTPUTDIR)\/symbols\n-\t$(call create-mapfile)\n","filename":"make\/hotspot\/lib\/JvmMapfile.gmk","additions":0,"deletions":176,"binary":false,"changes":176,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,1 +245,1 @@\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      LINK_TYPE := C++, \\\n","filename":"make\/modules\/java.base\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,1 @@\n+  LIBJSOUND_LINK_TYPE := C\n@@ -55,1 +56,1 @@\n-    LIBJSOUND_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+    LIBJSOUND_LINK_TYPE := C++\n@@ -60,1 +61,1 @@\n-      TOOLCHAIN := $(LIBJSOUND_TOOLCHAIN), \\\n+      LINK_TYPE := $(LIBJSOUND_LINK_TYPE), \\\n","filename":"make\/modules\/java.desktop\/Lib.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -565,0 +565,1 @@\n+    LINK_TYPE := C++, \\\n@@ -567,1 +568,0 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-SA_TOOLCHAIN := $(TOOLCHAIN_DEFAULT)\n+SA_LINK_TYPE := C\n@@ -50,1 +50,1 @@\n-  SA_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+  SA_LINK_TYPE := C++\n@@ -57,1 +57,1 @@\n-    TOOLCHAIN := $(SA_TOOLCHAIN), \\\n+    LINK_TYPE := $(SA_LINK_TYPE), \\\n","filename":"make\/modules\/jdk.hotspot.agent\/Lib.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      LINK_TYPE := C++, \\\n","filename":"make\/modules\/jdk.internal.le\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-  JPACKAGE_APPLAUNCHER_TOOLCHAIN := TOOLCHAIN_DEFAULT\n+  JPACKAGE_APPLAUNCHER_LINK_TYPE := C\n@@ -41,1 +41,1 @@\n-  JPACKAGE_APPLAUNCHER_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+  JPACKAGE_APPLAUNCHER_LINK_TYPE := C++\n@@ -62,0 +62,1 @@\n+    LINK_TYPE := $(JPACKAGE_APPLAUNCHER_LINK_TYPE), \\\n@@ -66,1 +67,0 @@\n-    TOOLCHAIN := $(JPACKAGE_APPLAUNCHER_TOOLCHAIN), \\\n@@ -106,1 +106,1 @@\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      LINK_TYPE := C++, \\\n@@ -180,0 +180,1 @@\n+      LINK_TYPE := $(BUILD_JPACKAGE_APPLAUNCHEREXE_LINK_TYPE), \\\n@@ -183,1 +184,0 @@\n-      TOOLCHAIN := $(BUILD_JPACKAGE_APPLAUNCHEREXE_TOOLCHAIN), \\\n","filename":"make\/modules\/jdk.jpackage\/Lib.gmk","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,4 +121,0 @@\n-\n-  JNIEXPORT void das1(uintptr_t insn) {\n-    das(insn, 1);\n-  }\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -196,0 +196,6 @@\n+    int base_offset = arrayOopDesc::length_offset_in_bytes() + BytesPerInt;\n+    if (!is_aligned(base_offset, BytesPerWord)) {\n+      assert(is_aligned(base_offset, BytesPerInt), \"must be 4-byte aligned\");\n+      \/\/ Clear gap\/first 4 bytes following the length field.\n+      strw(zr, Address(obj, base_offset));\n+    }\n@@ -295,11 +301,3 @@\n-  \/\/ Clear leading 4 bytes, if necessary.\n-  \/\/ TODO: This could perhaps go into initialize_body() and also clear the leading 4 bytes\n-  \/\/ for non-array objects, thereby replacing the klass-gap clearing code in initialize_header().\n-  int base_offset = base_offset_in_bytes;\n-  if (!is_aligned(base_offset, BytesPerWord)) {\n-    assert(is_aligned(base_offset, BytesPerInt), \"must be 4-byte aligned\");\n-    strw(zr, Address(obj, base_offset));\n-    base_offset += BytesPerInt;\n-  }\n-  assert(is_aligned(base_offset, BytesPerWord), \"must be word-aligned\");\n-\n+  \/\/ Align-up to word boundary, because we clear the 4 bytes potentially\n+  \/\/ following the length field in initialize_header().\n+  int base_offset = align_up(base_offset_in_bytes, BytesPerWord);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-  void allocate_array(Register obj, Register len, Register t, Register t2, int header_size, int f, Register klass, Label& slow_case);\n+  void allocate_array(Register obj, Register len, Register t, Register t2, int base_offset_in_bytes, int f, Register klass, Label& slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,0 +248,2 @@\n+  __ push_cont_fastpath(rthread);\n+\n@@ -251,0 +253,2 @@\n+  __ pop_cont_fastpath(rthread);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -33,1 +34,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/cpu\/arm\/gc\/g1\/g1BarrierSetAssembler_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2301,1 +2301,1 @@\n-                      arrayOopDesc::header_size(op->type()),\n+                      arrayOopDesc::base_offset_in_bytes(op->type()),\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -313,1 +313,1 @@\n-  int      hdr_size,                   \/\/ object header size in words\n+  int      base_offset_in_bytes,       \/\/ elements offset in bytes\n@@ -345,1 +345,1 @@\n-  addi(arr_size, arr_len_in_bytes, hdr_size * wordSize + MinObjAlignmentInBytesMask); \/\/ Add space for header & alignment.\n+  addi(arr_size, arr_len_in_bytes, base_offset_in_bytes + MinObjAlignmentInBytesMask); \/\/ Add space for header & alignment.\n@@ -355,2 +355,12 @@\n-  addi(base, obj, hdr_size * wordSize);               \/\/ compute address of first element\n-  addi(index, arr_size, -(hdr_size * wordSize));      \/\/ compute index = number of bytes to clear\n+  addi(base, obj, base_offset_in_bytes);               \/\/ compute address of first element\n+  addi(index, arr_size, -(base_offset_in_bytes));      \/\/ compute index = number of bytes to clear\n+\n+  \/\/ Zero first 4 bytes, if start offset is not word aligned.\n+  if (!is_aligned(base_offset_in_bytes, BytesPerWord)) {\n+    assert(is_aligned(base_offset_in_bytes, BytesPerInt), \"must be 4-byte aligned\");\n+    li(t1, 0);\n+    stw(t1, 0, base);\n+    addi(base, base, BytesPerInt);\n+    \/\/ Note: initialize_body will align index down, no need to correct it here.\n+  }\n+\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-    int      hdr_size,                 \/\/ object header size in words\n+    int      base_offset_in_bytes,     \/\/ elements offset in bytes\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -35,1 +36,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-define_pd_global(intx,  CodeEntryAlignment,    128);\n+define_pd_global(intx,  CodeEntryAlignment,    64);\n","filename":"src\/hotspot\/cpu\/ppc\/globals_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,0 +246,2 @@\n+  __ push_cont_fastpath();\n+\n@@ -250,0 +252,2 @@\n+  __ pop_cont_fastpath();\n+\n","filename":"src\/hotspot\/cpu\/ppc\/upcallLinker_ppc.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1023,1 +1023,1 @@\n-                      arrayOopDesc::header_size(op->type()),\n+                      arrayOopDesc::base_offset_in_bytes(op->type()),\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -283,1 +283,1 @@\n-void C1_MacroAssembler::allocate_array(Register obj, Register len, Register tmp1, Register tmp2, int header_size, int f, Register klass, Label& slow_case) {\n+void C1_MacroAssembler::allocate_array(Register obj, Register len, Register tmp1, Register tmp2, int base_offset_in_bytes, int f, Register klass, Label& slow_case) {\n@@ -295,1 +295,1 @@\n-  mv(arr_size, (int32_t)header_size * BytesPerWord + MinObjAlignmentInBytesMask);\n+  mv(arr_size, (int32_t)base_offset_in_bytes + MinObjAlignmentInBytesMask);\n@@ -303,0 +303,11 @@\n+  \/\/ Clear leading 4 bytes, if necessary.\n+  \/\/ TODO: This could perhaps go into initialize_body() and also clear the leading 4 bytes\n+  \/\/ for non-array objects, thereby replacing the klass-gap clearing code in initialize_header().\n+  int base_offset = base_offset_in_bytes;\n+  if (!is_aligned(base_offset, BytesPerWord)) {\n+    assert(is_aligned(base_offset, BytesPerInt), \"must be 4-byte aligned\");\n+    sw(zr, Address(obj, base_offset));\n+    base_offset += BytesPerInt;\n+  }\n+  assert(is_aligned(base_offset, BytesPerWord), \"must be word-aligned\");\n+\n@@ -305,1 +316,1 @@\n-  initialize_body(obj, arr_size, header_size * BytesPerWord, len_zero);\n+  initialize_body(obj, arr_size, base_offset, len_zero);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-  void allocate_array(Register obj, Register len, Register tmp1, Register tmp2, int header_size, int f, Register klass, Label& slow_case);\n+  void allocate_array(Register obj, Register len, Register tmp1, Register tmp2, int base_offset_in_bytes, int f, Register klass, Label& slow_case);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -33,1 +34,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4812,0 +4812,342 @@\n+\n+  \/\/ ------------------------ SHA-1 intrinsic ------------------------\n+\n+  \/\/ K't =\n+  \/\/    5a827999, 0  <= t <= 19\n+  \/\/    6ed9eba1, 20 <= t <= 39\n+  \/\/    8f1bbcdc, 40 <= t <= 59\n+  \/\/    ca62c1d6, 60 <= t <= 79\n+  void sha1_prepare_k(Register cur_k, int round) {\n+    assert(round >= 0 && round < 80, \"must be\");\n+\n+    static const int64_t ks[] = {0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6};\n+    if ((round % 20) == 0) {\n+      __ mv(cur_k, ks[round\/20]);\n+    }\n+  }\n+\n+  \/\/ W't =\n+  \/\/    M't,                                      0 <=  t <= 15\n+  \/\/    ROTL'1(W't-3 ^ W't-8 ^ W't-14 ^ W't-16),  16 <= t <= 79\n+  void sha1_prepare_w(Register cur_w, Register ws[], Register buf, int round) {\n+    assert(round >= 0 && round < 80, \"must be\");\n+\n+    if (round < 16) {\n+      \/\/ in the first 16 rounds, in ws[], every register contains 2 W't, e.g.\n+      \/\/   in ws[0], high part contains W't-0, low part contains W't-1,\n+      \/\/   in ws[1], high part contains W't-2, low part contains W't-3,\n+      \/\/   ...\n+      \/\/   in ws[7], high part contains W't-14, low part contains W't-15.\n+\n+      if ((round % 2) == 0) {\n+        __ ld(ws[round\/2], Address(buf, (round\/2) * 8));\n+        \/\/ reverse bytes, as SHA-1 is defined in big-endian.\n+        __ revb(ws[round\/2], ws[round\/2]);\n+        __ srli(cur_w, ws[round\/2], 32);\n+      } else {\n+        __ mv(cur_w, ws[round\/2]);\n+      }\n+\n+      return;\n+    }\n+\n+    if ((round % 2) == 0) {\n+      int idx = 16;\n+      \/\/ W't = ROTL'1(W't-3 ^ W't-8 ^ W't-14 ^ W't-16),  16 <= t <= 79\n+      __ srli(t1, ws[(idx-8)\/2], 32);\n+      __ xorr(t0, ws[(idx-3)\/2], t1);\n+\n+      __ srli(t1, ws[(idx-14)\/2], 32);\n+      __ srli(cur_w, ws[(idx-16)\/2], 32);\n+      __ xorr(cur_w, cur_w, t1);\n+\n+      __ xorr(cur_w, cur_w, t0);\n+      __ rolw_imm(cur_w, cur_w, 1, t0);\n+\n+      \/\/ copy the cur_w value to ws[8].\n+      \/\/ now, valid w't values are at:\n+      \/\/  w0:       ws[0]'s lower 32 bits\n+      \/\/  w1 ~ w14: ws[1] ~ ws[7]\n+      \/\/  w15:      ws[8]'s higher 32 bits\n+      __ slli(ws[idx\/2], cur_w, 32);\n+\n+      return;\n+    }\n+\n+    int idx = 17;\n+    \/\/ W't = ROTL'1(W't-3 ^ W't-8 ^ W't-14 ^ W't-16),  16 <= t <= 79\n+    __ srli(t1, ws[(idx-3)\/2], 32);\n+    __ xorr(t0, t1, ws[(idx-8)\/2]);\n+\n+    __ xorr(cur_w, ws[(idx-16)\/2], ws[(idx-14)\/2]);\n+\n+    __ xorr(cur_w, cur_w, t0);\n+    __ rolw_imm(cur_w, cur_w, 1, t0);\n+\n+    \/\/ copy the cur_w value to ws[8]\n+    __ zero_extend(cur_w, cur_w, 32);\n+    __ orr(ws[idx\/2], ws[idx\/2], cur_w);\n+\n+    \/\/ shift the w't registers, so they start from ws[0] again.\n+    \/\/ now, valid w't values are at:\n+    \/\/  w0 ~ w15: ws[0] ~ ws[7]\n+    Register ws_0 = ws[0];\n+    for (int i = 0; i < 16\/2; i++) {\n+      ws[i] = ws[i+1];\n+    }\n+    ws[8] = ws_0;\n+  }\n+\n+  \/\/ f't(x, y, z) =\n+  \/\/    Ch(x, y, z)     = (x & y) ^ (~x & z)            , 0  <= t <= 19\n+  \/\/    Parity(x, y, z) = x ^ y ^ z                     , 20 <= t <= 39\n+  \/\/    Maj(x, y, z)    = (x & y) ^ (x & z) ^ (y & z)   , 40 <= t <= 59\n+  \/\/    Parity(x, y, z) = x ^ y ^ z                     , 60 <= t <= 79\n+  void sha1_f(Register dst, Register x, Register y, Register z, int round) {\n+    assert(round >= 0 && round < 80, \"must be\");\n+    assert_different_registers(dst, x, y, z, t0, t1);\n+\n+    if (round < 20) {\n+      \/\/ (x & y) ^ (~x & z)\n+      __ andr(t0, x, y);\n+      __ andn(dst, z, x);\n+      __ xorr(dst, dst, t0);\n+    } else if (round >= 40 && round < 60) {\n+      \/\/ (x & y) ^ (x & z) ^ (y & z)\n+      __ andr(t0, x, y);\n+      __ andr(t1, x, z);\n+      __ andr(dst, y, z);\n+      __ xorr(dst, dst, t0);\n+      __ xorr(dst, dst, t1);\n+    } else {\n+      \/\/ x ^ y ^ z\n+      __ xorr(dst, x, y);\n+      __ xorr(dst, dst, z);\n+    }\n+  }\n+\n+  \/\/ T = ROTL'5(a) + f't(b, c, d) + e + K't + W't\n+  \/\/ e = d\n+  \/\/ d = c\n+  \/\/ c = ROTL'30(b)\n+  \/\/ b = a\n+  \/\/ a = T\n+  void sha1_process_round(Register a, Register b, Register c, Register d, Register e,\n+                          Register cur_k, Register cur_w, Register tmp, int round) {\n+    assert(round >= 0 && round < 80, \"must be\");\n+    assert_different_registers(a, b, c, d, e, cur_w, cur_k, tmp, t0);\n+\n+    \/\/ T = ROTL'5(a) + f't(b, c, d) + e + K't + W't\n+\n+    \/\/ cur_w will be recalculated at the beginning of each round,\n+    \/\/ so, we can reuse it as a temp register here.\n+    Register tmp2 = cur_w;\n+\n+    \/\/ reuse e as a temporary register, as we will mv new value into it later\n+    Register tmp3 = e;\n+    __ add(tmp2, cur_k, tmp2);\n+    __ add(tmp3, tmp3, tmp2);\n+    __ rolw_imm(tmp2, a, 5, t0);\n+\n+    sha1_f(tmp, b, c, d, round);\n+\n+    __ add(tmp2, tmp2, tmp);\n+    __ add(tmp2, tmp2, tmp3);\n+\n+    \/\/ e = d\n+    \/\/ d = c\n+    \/\/ c = ROTL'30(b)\n+    \/\/ b = a\n+    \/\/ a = T\n+    __ mv(e, d);\n+    __ mv(d, c);\n+\n+    __ rolw_imm(c, b, 30);\n+    __ mv(b, a);\n+    __ mv(a, tmp2);\n+  }\n+\n+  \/\/ H(i)0 = a + H(i-1)0\n+  \/\/ H(i)1 = b + H(i-1)1\n+  \/\/ H(i)2 = c + H(i-1)2\n+  \/\/ H(i)3 = d + H(i-1)3\n+  \/\/ H(i)4 = e + H(i-1)4\n+  void sha1_calculate_im_hash(Register a, Register b, Register c, Register d, Register e,\n+                              Register prev_ab, Register prev_cd, Register prev_e) {\n+    assert_different_registers(a, b, c, d, e, prev_ab, prev_cd, prev_e);\n+\n+    __ add(a, a, prev_ab);\n+    __ srli(prev_ab, prev_ab, 32);\n+    __ add(b, b, prev_ab);\n+\n+    __ add(c, c, prev_cd);\n+    __ srli(prev_cd, prev_cd, 32);\n+    __ add(d, d, prev_cd);\n+\n+    __ add(e, e, prev_e);\n+  }\n+\n+  void sha1_preserve_prev_abcde(Register a, Register b, Register c, Register d, Register e,\n+                                Register prev_ab, Register prev_cd, Register prev_e) {\n+    assert_different_registers(a, b, c, d, e, prev_ab, prev_cd, prev_e, t0);\n+\n+    __ slli(t0, b, 32);\n+    __ zero_extend(prev_ab, a, 32);\n+    __ orr(prev_ab, prev_ab, t0);\n+\n+    __ slli(t0, d, 32);\n+    __ zero_extend(prev_cd, c, 32);\n+    __ orr(prev_cd, prev_cd, t0);\n+\n+    __ mv(prev_e, e);\n+  }\n+\n+  \/\/ Intrinsic for:\n+  \/\/   void sun.security.provider.SHA.implCompress0(byte[] buf, int ofs)\n+  \/\/   void sun.security.provider.DigestBase.implCompressMultiBlock0(byte[] b, int ofs, int limit)\n+  \/\/\n+  \/\/ Arguments:\n+  \/\/\n+  \/\/ Inputs:\n+  \/\/   c_rarg0: byte[]  src array + offset\n+  \/\/   c_rarg1: int[]   SHA.state\n+  \/\/   - - - - - - below are only for implCompressMultiBlock0 - - - - - -\n+  \/\/   c_rarg2: int     offset\n+  \/\/   c_rarg3: int     limit\n+  \/\/\n+  \/\/ Outputs:\n+  \/\/   - - - - - - below are only for implCompressMultiBlock0 - - - - - -\n+  \/\/   c_rarg0: int offset, when (multi_block == true)\n+  \/\/\n+  address generate_sha1_implCompress(bool multi_block, const char *name) {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", name);\n+\n+    address start = __ pc();\n+    __ enter();\n+\n+    RegSet saved_regs = RegSet::range(x18, x27);\n+    if (multi_block) {\n+      \/\/ use x9 as src below.\n+      saved_regs += RegSet::of(x9);\n+    }\n+    __ push_reg(saved_regs, sp);\n+\n+    \/\/ c_rarg0 - c_rarg3: x10 - x13\n+    Register buf    = c_rarg0;\n+    Register state  = c_rarg1;\n+    Register offset = c_rarg2;\n+    Register limit  = c_rarg3;\n+    \/\/ use src to contain the original start point of the array.\n+    Register src    = x9;\n+\n+    if (multi_block) {\n+      __ sub(limit, limit, offset);\n+      __ add(limit, limit, buf);\n+      __ sub(src, buf, offset);\n+    }\n+\n+    \/\/ [args-reg]:  x14 - x17\n+    \/\/ [temp-reg]:  x28 - x31\n+    \/\/ [saved-reg]: x18 - x27\n+\n+    \/\/ h0\/1\/2\/3\/4\n+    const Register a = x14, b = x15, c = x16, d = x17, e = x28;\n+    \/\/ w0, w1, ... w15\n+    \/\/ put two adjecent w's in one register:\n+    \/\/    one at high word part, another at low word part\n+    \/\/ at different round (even or odd), w't value reside in different items in ws[].\n+    \/\/ w0 ~ w15, either reside in\n+    \/\/    ws[0] ~ ws[7], where\n+    \/\/      w0 at higher 32 bits of ws[0],\n+    \/\/      w1 at lower 32 bits of ws[0],\n+    \/\/      ...\n+    \/\/      w14 at higher 32 bits of ws[7],\n+    \/\/      w15 at lower 32 bits of ws[7].\n+    \/\/ or, reside in\n+    \/\/    w0:       ws[0]'s lower 32 bits\n+    \/\/    w1 ~ w14: ws[1] ~ ws[7]\n+    \/\/    w15:      ws[8]'s higher 32 bits\n+    Register ws[9] = {x29, x30, x31, x18,\n+                      x19, x20, x21, x22,\n+                      x23}; \/\/ auxiliary register for calculating w's value\n+    \/\/ current k't's value\n+    const Register cur_k = x24;\n+    \/\/ current w't's value\n+    const Register cur_w = x25;\n+    \/\/ values of a, b, c, d, e in the previous round\n+    const Register prev_ab = x26, prev_cd = x27;\n+    const Register prev_e = offset; \/\/ reuse offset\/c_rarg2\n+\n+    \/\/ load 5 words state into a, b, c, d, e.\n+    \/\/\n+    \/\/ To minimize the number of memory operations, we apply following\n+    \/\/ optimization: read the states (a\/b\/c\/d) of 4-byte values in pairs,\n+    \/\/ with a single ld, and split them into 2 registers.\n+    \/\/\n+    \/\/ And, as the core algorithm of SHA-1 works on 32-bits words, so\n+    \/\/ in the following code, it does not care about the content of\n+    \/\/ higher 32-bits in a\/b\/c\/d\/e. Based on this observation,\n+    \/\/ we can apply further optimization, which is to just ignore the\n+    \/\/ higher 32-bits in a\/c\/e, rather than set the higher\n+    \/\/ 32-bits of a\/c\/e to zero explicitly with extra instructions.\n+    __ ld(a, Address(state, 0));\n+    __ srli(b, a, 32);\n+    __ ld(c, Address(state, 8));\n+    __ srli(d, c, 32);\n+    __ lw(e, Address(state, 16));\n+\n+    Label L_sha1_loop;\n+    if (multi_block) {\n+      __ BIND(L_sha1_loop);\n+    }\n+\n+    sha1_preserve_prev_abcde(a, b, c, d, e, prev_ab, prev_cd, prev_e);\n+\n+    for (int round = 0; round < 80; round++) {\n+      \/\/ prepare K't value\n+      sha1_prepare_k(cur_k, round);\n+\n+      \/\/ prepare W't value\n+      sha1_prepare_w(cur_w, ws, buf, round);\n+\n+      \/\/ one round process\n+      sha1_process_round(a, b, c, d, e, cur_k, cur_w, t2, round);\n+    }\n+\n+    \/\/ compute the intermediate hash value\n+    sha1_calculate_im_hash(a, b, c, d, e, prev_ab, prev_cd, prev_e);\n+\n+    if (multi_block) {\n+      int64_t block_bytes = 16 * 4;\n+      __ addi(buf, buf, block_bytes);\n+\n+      __ bge(limit, buf, L_sha1_loop, true);\n+    }\n+\n+    \/\/ store back the state.\n+    __ zero_extend(a, a, 32);\n+    __ slli(b, b, 32);\n+    __ orr(a, a, b);\n+    __ sd(a, Address(state, 0));\n+    __ zero_extend(c, c, 32);\n+    __ slli(d, d, 32);\n+    __ orr(c, c, d);\n+    __ sd(c, Address(state, 8));\n+    __ sw(e, Address(state, 16));\n+\n+    \/\/ return offset\n+    if (multi_block) {\n+      __ sub(c_rarg0, buf, src);\n+    }\n+\n+    __ pop_reg(saved_regs, sp);\n+\n+    __ leave();\n+    __ ret();\n+\n+    return (address) start;\n+  }\n+\n+\n+\n@@ -5276,0 +5618,5 @@\n+    if (UseSHA1Intrinsics) {\n+      StubRoutines::_sha1_implCompress     = generate_sha1_implCompress(false, \"sha1_implCompress\");\n+      StubRoutines::_sha1_implCompressMB   = generate_sha1_implCompress(true, \"sha1_implCompressMB\");\n+    }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":347,"deletions":0,"binary":false,"changes":347,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  _compiler_stubs_code_size     = 15000 ZGC_ONLY(+5000),\n+  _compiler_stubs_code_size     = 25000 ZGC_ONLY(+5000),\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -270,0 +270,2 @@\n+  __ push_cont_fastpath(xthread);\n+\n@@ -273,0 +275,2 @@\n+  __ pop_cont_fastpath(xthread);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/upcallLinker_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -152,10 +152,0 @@\n-  if (UseSHA1Intrinsics) {\n-    warning(\"Intrinsics for SHA-1 crypto hash functions not available on this CPU.\");\n-    FLAG_SET_DEFAULT(UseSHA1Intrinsics, false);\n-  }\n-\n-  if (UseSHA3Intrinsics) {\n-    warning(\"Intrinsics for SHA3-224, SHA3-256, SHA3-384 and SHA3-512 crypto hash functions not available on this CPU.\");\n-    FLAG_SET_DEFAULT(UseSHA3Intrinsics, false);\n-  }\n-\n@@ -263,4 +253,0 @@\n-  if (UseZvkn && !UseRVV) {\n-    FLAG_SET_DEFAULT(UseZvkn, false);\n-    warning(\"Cannot enable Zvkn on cpu without RVV support.\");\n-  }\n@@ -268,0 +254,1 @@\n+  \/\/ ChaCha20\n@@ -279,4 +266,2 @@\n-  if (!UseZvkn && UseSHA) {\n-    warning(\"SHA instructions are not available on this CPU\");\n-    FLAG_SET_DEFAULT(UseSHA, false);\n-  } else if (UseZvkn && FLAG_IS_DEFAULT(UseSHA)) {\n+  \/\/ SHA's\n+  if (FLAG_IS_DEFAULT(UseSHA)) {\n@@ -286,1 +271,35 @@\n-  if (!UseSHA) {\n+  \/\/ SHA-1, no RVV required though.\n+  if (UseSHA) {\n+    if (FLAG_IS_DEFAULT(UseSHA1Intrinsics)) {\n+      FLAG_SET_DEFAULT(UseSHA1Intrinsics, true);\n+    }\n+  } else if (UseSHA1Intrinsics) {\n+    warning(\"Intrinsics for SHA-1 crypto hash functions not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseSHA1Intrinsics, false);\n+  }\n+\n+  \/\/ UseZvkn (depends on RVV) and SHA-2.\n+  if (UseZvkn && !UseRVV) {\n+    FLAG_SET_DEFAULT(UseZvkn, false);\n+    warning(\"Cannot enable Zvkn on cpu without RVV support.\");\n+  }\n+  \/\/ SHA-2, depends on Zvkn.\n+  if (UseSHA) {\n+    if (UseZvkn) {\n+      if (FLAG_IS_DEFAULT(UseSHA256Intrinsics)) {\n+        FLAG_SET_DEFAULT(UseSHA256Intrinsics, true);\n+      }\n+      if (FLAG_IS_DEFAULT(UseSHA512Intrinsics)) {\n+        FLAG_SET_DEFAULT(UseSHA512Intrinsics, true);\n+      }\n+    } else {\n+      if (UseSHA256Intrinsics) {\n+        warning(\"Intrinsics for SHA-224 and SHA-256 crypto hash functions not available on this CPU, UseZvkn needed.\");\n+        FLAG_SET_DEFAULT(UseSHA256Intrinsics, false);\n+      }\n+      if (UseSHA512Intrinsics) {\n+        warning(\"Intrinsics for SHA-384 and SHA-512 crypto hash functions not available on this CPU, UseZvkn needed.\");\n+        FLAG_SET_DEFAULT(UseSHA512Intrinsics, false);\n+      }\n+    }\n+  } else {\n@@ -288,1 +307,1 @@\n-      warning(\"Intrinsics for SHA-224 and SHA-256 crypto hash functions not available on this CPU, UseZvkn needed.\");\n+      warning(\"Intrinsics for SHA-224 and SHA-256 crypto hash functions not available on this CPU, as UseSHA disabled.\");\n@@ -292,1 +311,1 @@\n-      warning(\"Intrinsics for SHA-384 and SHA-512 crypto hash functions not available on this CPU, UseZvkn needed.\");\n+      warning(\"Intrinsics for SHA-384 and SHA-512 crypto hash functions not available on this CPU, as UseSHA disabled.\");\n@@ -295,7 +314,11 @@\n-  } else {\n-    if (FLAG_IS_DEFAULT(UseSHA256Intrinsics)) {\n-       FLAG_SET_DEFAULT(UseSHA256Intrinsics, true);\n-    }\n-    if (FLAG_IS_DEFAULT(UseSHA512Intrinsics)) {\n-      FLAG_SET_DEFAULT(UseSHA512Intrinsics, true);\n-    }\n+  }\n+\n+  \/\/ SHA-3\n+  if (UseSHA3Intrinsics) {\n+    warning(\"Intrinsics for SHA3-224, SHA3-256, SHA3-384 and SHA3-512 crypto hash functions not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseSHA3Intrinsics, false);\n+  }\n+\n+  \/\/ UseSHA\n+  if (!(UseSHA1Intrinsics || UseSHA256Intrinsics || UseSHA3Intrinsics || UseSHA512Intrinsics)) {\n+    FLAG_SET_DEFAULT(UseSHA, false);\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":51,"deletions":28,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -2385,1 +2385,1 @@\n-                      arrayOopDesc::header_size(op->type()),\n+                      arrayOopDesc::base_offset_in_bytes(op->type()),\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -274,1 +274,1 @@\n-  int      hdr_size,                   \/\/ object header size in words\n+  int      base_offset_in_bytes,       \/\/ elements offset in bytes\n@@ -300,2 +300,2 @@\n-  add2reg(arr_size, hdr_size * wordSize + MinObjAlignmentInBytesMask); \/\/ Add space for header & alignment.\n-  z_nill(arr_size, (~MinObjAlignmentInBytesMask) & 0xffff);            \/\/ Align array size.\n+  add2reg(arr_size, base_offset_in_bytes + MinObjAlignmentInBytesMask); \/\/ Add space for header & alignment.\n+  z_nill(arr_size, (~MinObjAlignmentInBytesMask) & 0xffff);             \/\/ Align array size.\n@@ -311,1 +311,1 @@\n-  z_aghi(arr_size, -(hdr_size * BytesPerWord));\n+  z_aghi(arr_size, -base_offset_in_bytes);\n@@ -313,1 +313,1 @@\n-  z_la(object_fields, hdr_size * BytesPerWord, obj);\n+  z_la(object_fields, base_offset_in_bytes, obj);\n","filename":"src\/hotspot\/cpu\/s390\/c1_MacroAssembler_s390.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-    int      hdr_size,                 \/\/ object header size in words\n+    int      base_offset_in_bytes,     \/\/ elements offset in bytes\n","filename":"src\/hotspot\/cpu\/s390\/c1_MacroAssembler_s390.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -36,1 +37,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/cpu\/s390\/gc\/g1\/g1BarrierSetAssembler_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,0 +192,9 @@\n+#ifdef _LP64\n+    int base_offset = arrayOopDesc::length_offset_in_bytes() + BytesPerInt;\n+    if (!is_aligned(base_offset, BytesPerWord)) {\n+      assert(is_aligned(base_offset, BytesPerInt), \"must be 4-byte aligned\");\n+      \/\/ Clear gap\/first 4 bytes following the length field.\n+      xorl(t1, t1);\n+      movl(Address(obj, base_offset), t1);\n+    }\n+#endif\n@@ -290,1 +299,1 @@\n-  movptr(arr_size, (int32_t)base_offset_in_bytes + MinObjAlignmentInBytesMask);\n+  movptr(arr_size, base_offset_in_bytes + MinObjAlignmentInBytesMask);\n@@ -298,13 +307,0 @@\n-  \/\/ Clear leading 4 bytes, if necessary.\n-  \/\/ TODO: This could perhaps go into initialize_body() and also clear the leading 4 bytes\n-  \/\/ for non-array objects, thereby replacing the klass-gap clearing code in initialize_header().\n-  int base_offset = base_offset_in_bytes;\n-#ifdef _LP64\n-  if (!is_aligned(base_offset, BytesPerWord)) {\n-    assert(is_aligned(base_offset, BytesPerInt), \"must be 4-byte aligned\");\n-    movl(Address(obj, base_offset), 0);\n-    base_offset += BytesPerInt;\n-  }\n-#endif\n-  assert(is_aligned(base_offset, BytesPerWord), \"must be word aligned\");\n-\n@@ -313,0 +309,3 @@\n+  \/\/ Align-up to word boundary, because we clear the 4 bytes potentially\n+  \/\/ following the length field in initialize_header().\n+  int base_offset = align_up(base_offset_in_bytes, BytesPerWord);\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-  void allocate_array(Register obj, Register len, Register t, Register t2, int header_size, Address::ScaleFactor f, Register klass, Label& slow_case);\n+  void allocate_array(Register obj, Register len, Register t, Register t2, int base_offset_in_bytes, Address::ScaleFactor f, Register klass, Label& slow_case);\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -303,0 +303,2 @@\n+  __ push_cont_fastpath();\n+\n@@ -305,0 +307,2 @@\n+  __ pop_cont_fastpath();\n+\n","filename":"src\/hotspot\/cpu\/x86\/upcallLinker_x86_64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4478,1 +4478,1 @@\n-  predicate(UseAVX > 0 && !SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && !VLoopReductions::is_reduction(n));\n@@ -4489,1 +4489,1 @@\n-  predicate(UseAVX > 0 && SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && VLoopReductions::is_reduction(n));\n@@ -4503,1 +4503,1 @@\n-  predicate(UseAVX > 0 && !SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && !VLoopReductions::is_reduction(n));\n@@ -4514,1 +4514,1 @@\n-  predicate(UseAVX > 0 && SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && VLoopReductions::is_reduction(n));\n@@ -4528,1 +4528,1 @@\n-  predicate(UseAVX > 0 && !SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && !VLoopReductions::is_reduction(n));\n@@ -4539,1 +4539,1 @@\n-  predicate(UseAVX > 0 && SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && VLoopReductions::is_reduction(n));\n@@ -4553,1 +4553,1 @@\n-  predicate(UseAVX > 0 && !SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && !VLoopReductions::is_reduction(n));\n@@ -4564,1 +4564,1 @@\n-  predicate(UseAVX > 0 && SuperWord::is_reduction(n));\n+  predicate(UseAVX > 0 && VLoopReductions::is_reduction(n));\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1130,1 +1130,1 @@\n-void *os::dll_load(const char *filename, char *ebuf, int ebuflen) {\n+static void* dll_load_library(const char *filename, char *ebuf, int ebuflen) {\n@@ -1133,1 +1133,0 @@\n-\n@@ -1181,0 +1180,20 @@\n+\/\/ Load library named <filename>\n+\/\/ If filename matches <name>.so, and loading fails, repeat with <name>.a.\n+void *os::dll_load(const char *filename, char *ebuf, int ebuflen) {\n+  void* result = nullptr;\n+  char* const file_path = strdup(filename);\n+  char* const pointer_to_dot = strrchr(file_path, '.');\n+  const char old_extension[] = \".so\";\n+  const char new_extension[] = \".a\";\n+  STATIC_ASSERT(sizeof(old_extension) >= sizeof(new_extension));\n+  \/\/ First try to load the existing file.\n+  result = dll_load_library(filename, ebuf, ebuflen);\n+  \/\/ If the load fails,we try to reload by changing the extension to .a for .so files only.\n+  \/\/ Shared object in .so format dont have braces, hence they get removed for archives with members.\n+  if (result == nullptr && pointer_to_dot != nullptr && strcmp(pointer_to_dot, old_extension) == 0) {\n+    snprintf(pointer_to_dot, sizeof(old_extension), \"%s\", new_extension);\n+    result = dll_load_library(file_path, ebuf, ebuflen);\n+  }\n+  FREE_C_HEAP_ARRAY(char, file_path);\n+  return result;\n+}\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -31,0 +31,5 @@\n+#ifdef __APPLE__\n+        .private_extern CFUNC(_Copy_conjoint_words)\n+        .private_extern CFUNC(_Copy_disjoint_words)\n+#endif\n+\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/copy_bsd_aarch64.S","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,9 @@\n+#ifdef __APPLE__\n+    .private_extern SYMBOL(SafeFetchN_impl)\n+    .private_extern SYMBOL(_SafeFetchN_fault)\n+    .private_extern SYMBOL(_SafeFetchN_continuation)\n+    .private_extern SYMBOL(SafeFetch32_impl)\n+    .private_extern SYMBOL(_SafeFetch32_fault)\n+    .private_extern SYMBOL(_SafeFetch32_continuation)\n+#endif\n+\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/safefetch_bsd_aarch64.S","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+        .globl SYMBOL(SpinPause)\n@@ -53,0 +54,14 @@\n+#ifdef __APPLE__\n+        .private_extern SYMBOL(fixcw)\n+        .private_extern SYMBOL(SpinPause)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_bytes)\n+        .private_extern SYMBOL(_Copy_conjoint_jshorts_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jshorts)\n+        .private_extern SYMBOL(_Copy_conjoint_jints_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jints)\n+        .private_extern SYMBOL(_Copy_conjoint_jlongs_atomic)\n+        .private_extern SYMBOL(_mmx_Copy_arrayof_conjoint_jshorts)\n+        .private_extern SYMBOL(_Atomic_cmpxchg_long)\n+        .private_extern SYMBOL(_Atomic_move_long)\n+#endif\n+\n@@ -65,1 +80,0 @@\n-        .globl  SYMBOL(SpinPause)\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_32.S","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-# \n-# Copyright (c) 2004, 2013, Oracle and\/or its affiliates. All rights reserved.\n+#\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,5 +34,6 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n-\t\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n+\n+        .globl SYMBOL(SpinPause)\n@@ -40,1 +41,1 @@\n-\t.globl SYMBOL(_Copy_arrayof_conjoint_jshorts)\n+        .globl SYMBOL(_Copy_arrayof_conjoint_jshorts)\n@@ -47,1 +48,12 @@\n-\t.text\n+#ifdef __APPLE__\n+        .private_extern SYMBOL(SpinPause)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_bytes)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jshorts)\n+        .private_extern SYMBOL(_Copy_conjoint_jshorts_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jints)\n+        .private_extern SYMBOL(_Copy_conjoint_jints_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jlongs)\n+        .private_extern SYMBOL(_Copy_conjoint_jlongs_atomic)\n+#endif\n+\n+        .text\n@@ -49,1 +61,0 @@\n-        .globl SYMBOL(SpinPause)\n@@ -66,1 +77,1 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_bytes,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_bytes,@function)\n@@ -74,1 +85,1 @@\n-        jbe      acb_CopyLeft \n+        jbe      acb_CopyLeft\n@@ -168,2 +179,2 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_jshorts,@function)\n-\tELF_TYPE(_Copy_conjoint_jshorts_atomic,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_jshorts,@function)\n+        ELF_TYPE(_Copy_conjoint_jshorts_atomic,@function)\n@@ -178,1 +189,1 @@\n-        jbe      acs_CopyLeft \n+        jbe      acs_CopyLeft\n@@ -258,2 +269,2 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_jints,@function)\n-\tELF_TYPE(_Copy_conjoint_jints_atomic,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_jints,@function)\n+        ELF_TYPE(_Copy_conjoint_jints_atomic,@function)\n@@ -268,1 +279,1 @@\n-        jbe      aci_CopyLeft \n+        jbe      aci_CopyLeft\n@@ -337,2 +348,2 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_jlongs,@function)\n-\tELF_TYPE(_Copy_conjoint_jlongs_atomic,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_jlongs,@function)\n+        ELF_TYPE(_Copy_conjoint_jlongs_atomic,@function)\n@@ -345,1 +356,1 @@\n-        jbe      acl_CopyLeft \n+        jbe      acl_CopyLeft\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_64.S","additions":32,"deletions":21,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,9 @@\n+#ifdef __APPLE__\n+    .private_extern SYMBOL(SafeFetch32_impl)\n+    .private_extern SYMBOL(SafeFetchN_impl)\n+    .private_extern SYMBOL(_SafeFetch32_fault)\n+    .private_extern SYMBOL(_SafeFetchN_fault)\n+    .private_extern SYMBOL(_SafeFetch32_continuation)\n+    .private_extern SYMBOL(_SafeFetchN_continuation)\n+#endif\n+\n@@ -47,1 +56,1 @@\n-\tELF_TYPE(SafeFetch32_impl,@function)\n+    ELF_TYPE(SafeFetch32_impl,@function)\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/safefetch_bsd_x86_64.S","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+        .hidden aarch64_atomic_fetch_add_8_default_impl\n@@ -43,0 +44,1 @@\n+        .hidden aarch64_atomic_fetch_add_4_default_impl\n@@ -59,0 +61,1 @@\n+        .hidden aarch64_atomic_fetch_add_8_relaxed_default_impl\n@@ -74,0 +77,1 @@\n+        .hidden aarch64_atomic_fetch_add_4_relaxed_default_impl\n@@ -89,0 +93,1 @@\n+        .hidden aarch64_atomic_xchg_4_default_impl\n@@ -104,0 +109,1 @@\n+        .hidden aarch64_atomic_xchg_8_default_impl\n@@ -119,0 +125,1 @@\n+        .hidden aarch64_atomic_cmpxchg_1_default_impl\n@@ -139,0 +146,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_default_impl\n@@ -158,0 +166,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_default_impl\n@@ -177,0 +186,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_release_default_impl\n@@ -194,0 +204,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_release_default_impl\n@@ -211,0 +222,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_seq_cst_default_impl\n@@ -228,0 +240,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_seq_cst_default_impl\n@@ -245,0 +258,1 @@\n+.hidden aarch64_atomic_cmpxchg_1_relaxed_default_impl\n@@ -263,0 +277,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_relaxed_default_impl\n@@ -280,0 +295,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_relaxed_default_impl\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/atomic_linux_aarch64.S","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+        .hidden _Copy_conjoint_words\n+        .hidden _Copy_disjoint_words\n+\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/copy_linux_aarch64.S","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/safefetch_linux_aarch64.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,2 +28,3 @@\n-\t.global\t_ZN10JavaThread25aarch64_get_thread_helperEv\n-\t.type\t_ZN10JavaThread25aarch64_get_thread_helperEv, %function\n+        .global\t_ZN10JavaThread25aarch64_get_thread_helperEv\n+        .hidden\t_ZN10JavaThread25aarch64_get_thread_helperEv\n+        .type\t_ZN10JavaThread25aarch64_get_thread_helperEv, %function\n@@ -32,13 +33,13 @@\n-\thint #0x19      \/\/ paciasp\n-\tstp x29, x30, [sp, -16]!\n-\tadrp x0, :tlsdesc:_ZN6Thread12_thr_currentE\n-\tldr x1, [x0, #:tlsdesc_lo12:_ZN6Thread12_thr_currentE]\n-\tadd x0, x0, :tlsdesc_lo12:_ZN6Thread12_thr_currentE\n-\t.tlsdesccall _ZN6Thread12_thr_currentE\n-\tblr x1\n-\tmrs x1, tpidr_el0\n-\tadd x0, x1, x0\n-\tldr x0, [x0]\n-\tldp x29, x30, [sp], 16\n-\thint #0x1d      \/\/ autiasp\n-\tret\n+        hint #0x19      \/\/ paciasp\n+        stp x29, x30, [sp, -16]!\n+        adrp x0, :tlsdesc:_ZN6Thread12_thr_currentE\n+        ldr x1, [x0, #:tlsdesc_lo12:_ZN6Thread12_thr_currentE]\n+        add x0, x0, :tlsdesc_lo12:_ZN6Thread12_thr_currentE\n+        .tlsdesccall _ZN6Thread12_thr_currentE\n+        blr x1\n+        mrs x1, tpidr_el0\n+        add x0, x1, x0\n+        ldr x0, [x0]\n+        ldp x29, x30, [sp], 16\n+        hint #0x1d      \/\/ autiasp\n+        ret\n@@ -46,1 +47,1 @@\n-\t.size _ZN10JavaThread25aarch64_get_thread_helperEv, .-_ZN10JavaThread25aarch64_get_thread_helperEv\n+        .size _ZN10JavaThread25aarch64_get_thread_helperEv, .-_ZN10JavaThread25aarch64_get_thread_helperEv\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,4 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n@@ -31,2 +31,3 @@\n-        .globl _Copy_conjoint_bytes\n-\t.type _Copy_conjoint_bytes, %function\n+        .globl  SpinPause\n+        .hidden  SpinPause\n+        .type SpinPause, %function\n@@ -34,5 +35,8 @@\n-\t.type _Copy_arrayof_conjoint_bytes, %function\n-\t.globl _Copy_disjoint_words\n-\t.type _Copy_disjoint_words, %function\n-\t.globl _Copy_conjoint_words\n-\t.type _Copy_conjoint_words, %function\n+        .hidden _Copy_arrayof_conjoint_bytes\n+        .type _Copy_arrayof_conjoint_bytes, %function\n+        .globl _Copy_disjoint_words\n+        .hidden _Copy_disjoint_words\n+        .type _Copy_disjoint_words, %function\n+        .globl _Copy_conjoint_words\n+        .hidden _Copy_conjoint_words\n+        .type _Copy_conjoint_words, %function\n@@ -40,3 +44,5 @@\n-\t.type _Copy_conjoint_jshorts_atomic, %function\n-\t.globl _Copy_arrayof_conjoint_jshorts\n-\t.type _Copy_arrayof_conjoint_jshorts, %function\n+        .hidden _Copy_conjoint_jshorts_atomic\n+        .type _Copy_conjoint_jshorts_atomic, %function\n+        .globl _Copy_arrayof_conjoint_jshorts\n+        .hidden _Copy_arrayof_conjoint_jshorts\n+        .type _Copy_arrayof_conjoint_jshorts, %function\n@@ -44,1 +50,2 @@\n-\t.type _Copy_conjoint_jints_atomic, %function\n+        .hidden _Copy_conjoint_jints_atomic\n+        .type _Copy_conjoint_jints_atomic, %function\n@@ -46,5 +53,8 @@\n-\t.type _Copy_arrayof_conjoint_jints, %function\n-\t.globl _Copy_conjoint_jlongs_atomic\n-\t.type _Copy_conjoint_jlongs_atomic, %function\n-\t.globl _Copy_arrayof_conjoint_jlongs\n-\t.type _Copy_arrayof_conjoint_jlongs, %function\n+        .hidden _Copy_arrayof_conjoint_jints\n+        .type _Copy_arrayof_conjoint_jints, %function\n+        .globl _Copy_conjoint_jlongs_atomic\n+        .hidden _Copy_conjoint_jlongs_atomic\n+        .type _Copy_conjoint_jlongs_atomic, %function\n+        .globl _Copy_arrayof_conjoint_jlongs\n+        .hidden _Copy_arrayof_conjoint_jlongs\n+        .type _Copy_arrayof_conjoint_jlongs, %function\n@@ -55,3 +65,1 @@\n-\t.text\n-        .globl  SpinPause\n-        .type SpinPause, %function\n+        .text\n@@ -73,1 +81,1 @@\n- \n+\n@@ -84,1 +92,1 @@\n-\tblt\tdw_f2b_loop_32_finish\n+        blt\tdw_f2b_loop_32_finish\n@@ -87,1 +95,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -94,1 +102,1 @@\n-\tblt\tdisjoint_words_small\n+        blt\tdisjoint_words_small\n@@ -119,2 +127,2 @@\n-\tcmp\tr2, #0\n-\tbeq\tconjoint_words_finish\n+        cmp\tr2, #0\n+        beq\tconjoint_words_finish\n@@ -132,1 +140,1 @@\n-\tblt\tcw_f2b_loop_32_finish\n+        blt\tcw_f2b_loop_32_finish\n@@ -135,1 +143,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -142,1 +150,1 @@\n-\tblt\tconjoint_words_small\n+        blt\tconjoint_words_small\n@@ -157,1 +165,1 @@\n-\t# Src and dest overlap, copy in a descending order\n+        # Src and dest overlap, copy in a descending order\n@@ -165,1 +173,1 @@\n-\tblt\tcw_b2f_loop_32_finish\n+        blt\tcw_b2f_loop_32_finish\n@@ -168,1 +176,1 @@\n-\tpld     [from, #-32]\n+        pld     [from, #-32]\n@@ -175,1 +183,1 @@\n-\tblt\tcw_b2f_copy_small\n+        blt\tcw_b2f_copy_small\n@@ -199,2 +207,2 @@\n-\tcmp\tr2, #0\n-\tbeq\tconjoint_shorts_finish\t\n+        cmp\tr2, #0\n+        beq\tconjoint_shorts_finish\n@@ -213,1 +221,1 @@\n-\t# Aligned source address\n+        # Aligned source address\n@@ -217,1 +225,1 @@\n-\tblt\tcs_f2b_loop_32_finish\n+        blt\tcs_f2b_loop_32_finish\n@@ -247,1 +255,1 @@\n-\t# Destination not aligned\n+        # Destination not aligned\n@@ -254,1 +262,1 @@\n-\t# Check to see if source is not aligned ether\n+        # Check to see if source is not aligned ether\n@@ -262,1 +270,1 @@\n-\t# Load 2 first bytes to r7 and make src ptr word aligned\n+        # Load 2 first bytes to r7 and make src ptr word aligned\n@@ -266,1 +274,1 @@\n-\t# Destination aligned, source not\n+        # Destination aligned, source not\n@@ -309,1 +317,1 @@\n-\t# Src and dest overlap, copy in a descending order\n+        # Src and dest overlap, copy in a descending order\n@@ -322,1 +330,1 @@\n-\tblt\tcs_b2f_loop_32_finish\n+        blt\tcs_b2f_loop_32_finish\n@@ -362,1 +370,1 @@\n-\t# Destination not aligned\n+        # Destination not aligned\n@@ -367,1 +375,1 @@\n-\t# Check source alignment as well\n+        # Check source alignment as well\n@@ -371,1 +379,1 @@\n-\t# Source not aligned\n+        # Source not aligned\n@@ -396,1 +404,1 @@\n-\tcmp     r2, #10\n+        cmp     r2, #10\n@@ -405,1 +413,1 @@\n-\t.align 3\n+        .align 3\n@@ -429,1 +437,1 @@\n-\t\n+\n@@ -437,2 +445,2 @@\n-\tcmp\tr2, #0\n-\tbeq\tconjoint_longs_finish\n+        cmp\tr2, #0\n+        beq\tconjoint_longs_finish\n@@ -450,1 +458,1 @@\n-\tblt\tcl_f2b_loop_32_finish\n+        blt\tcl_f2b_loop_32_finish\n@@ -453,1 +461,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -461,2 +469,2 @@\n-\tblt\tcl_f2b_copy_8\n-\tbgt\tcl_f2b_copy_24\n+        blt\tcl_f2b_copy_8\n+        bgt\tcl_f2b_copy_24\n@@ -465,1 +473,1 @@\n-\tb\tconjoint_longs_finish\n+        b\tconjoint_longs_finish\n@@ -471,1 +479,1 @@\n-\tldmia   from!, {r3 - r8}\n+        ldmia   from!, {r3 - r8}\n@@ -475,1 +483,1 @@\n-\t# Src and dest overlap, copy in a descending order\n+        # Src and dest overlap, copy in a descending order\n@@ -483,1 +491,1 @@\n-\tblt\tcl_b2f_loop_32_finish\n+        blt\tcl_b2f_loop_32_finish\n@@ -486,1 +494,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -493,2 +501,2 @@\n-\tblt\tcl_b2f_copy_8\n-\tbgt\tcl_b2f_copy_24\n+        blt\tcl_b2f_copy_8\n+        bgt\tcl_b2f_copy_24\n@@ -499,1 +507,1 @@\n-\tldmdb   from!, {r3 - r4}\n+        ldmdb   from!, {r3 - r4}\n@@ -503,1 +511,1 @@\n-\tldmdb   from!, {r3 - r8}\n+        ldmdb   from!, {r3 - r8}\n@@ -509,2 +517,0 @@\n-\n-\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/linux_arm_32.S","additions":76,"deletions":70,"binary":false,"changes":146,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,5 @@\n+\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/safefetch_linux_arm.S","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/safefetch_linux_ppc.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/safefetch_linux_riscv.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/safefetch_linux_s390.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+        .globl  SpinPause\n@@ -26,4 +27,4 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n@@ -33,1 +34,1 @@\n-\t.globl _Copy_arrayof_conjoint_jshorts\n+        .globl _Copy_arrayof_conjoint_jshorts\n@@ -36,2 +37,2 @@\n-\t.globl _Copy_conjoint_jlongs_atomic\n-\t.globl _mmx_Copy_arrayof_conjoint_jshorts\n+        .globl _Copy_conjoint_jlongs_atomic\n+        .globl _mmx_Copy_arrayof_conjoint_jshorts\n@@ -42,1 +43,1 @@\n-\t.text\n+        .hidden  SpinPause\n@@ -44,2 +45,14 @@\n-        .globl  SpinPause\n-\t.type   SpinPause,@function\n+        .hidden _Copy_arrayof_conjoint_bytes\n+        .hidden _Copy_conjoint_jshorts_atomic\n+        .hidden _Copy_arrayof_conjoint_jshorts\n+        .hidden _Copy_conjoint_jints_atomic\n+        .hidden _Copy_arrayof_conjoint_jints\n+        .hidden _Copy_conjoint_jlongs_atomic\n+        .hidden _mmx_Copy_arrayof_conjoint_jshorts\n+\n+        .hidden _Atomic_cmpxchg_long\n+        .hidden _Atomic_move_long\n+\n+        .text\n+\n+        .type   SpinPause,@function\n@@ -58,1 +71,1 @@\n-\t.type    _Copy_arrayof_conjoint_bytes,@function\n+        .type    _Copy_arrayof_conjoint_bytes,@function\n@@ -118,1 +131,1 @@\n-\t.space 8\n+        .space 8\n@@ -134,1 +147,1 @@\n-\tsubl     $1,%esi\n+        subl     $1,%esi\n@@ -146,1 +159,1 @@\n-\t.type    _Copy_conjoint_jshorts_atomic,@function\n+        .type    _Copy_conjoint_jshorts_atomic,@function\n@@ -233,1 +246,1 @@\n-\t.type    _Copy_arrayof_conjoint_jshorts,@function\n+        .type    _Copy_arrayof_conjoint_jshorts,@function\n@@ -310,2 +323,2 @@\n-\t.type    _Copy_conjoint_jints_atomic,@function\n-\t.type    _Copy_arrayof_conjoint_jints,@function\n+        .type    _Copy_conjoint_jints_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jints,@function\n@@ -387,1 +400,1 @@\n-\t.type    _Copy_conjoint_jlongs_atomic,@function\n+        .type    _Copy_conjoint_jlongs_atomic,@function\n@@ -416,1 +429,1 @@\n-\t.type    _mmx_Copy_arrayof_conjoint_jshorts,@function\n+        .type    _mmx_Copy_arrayof_conjoint_jshorts,@function\n@@ -468,2 +481,2 @@\n-\ttestl    %ecx,%ecx\n-\tja       1b\n+        testl    %ecx,%ecx\n+        ja       1b\n@@ -514,1 +527,1 @@\n-\t.type    _Atomic_cmpxchg_long,@function\n+        .type    _Atomic_cmpxchg_long,@function\n@@ -533,1 +546,1 @@\n-\t.type    _Atomic_move_long,@function\n+        .type    _Atomic_move_long,@function\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_32.S","additions":37,"deletions":24,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-# \n-# Copyright (c) 2004, 2013, Oracle and\/or its affiliates. All rights reserved.\n+#\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+        .globl SpinPause\n@@ -26,5 +27,5 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n-\t\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n+\n@@ -32,1 +33,1 @@\n-\t.globl _Copy_arrayof_conjoint_jshorts\n+        .globl _Copy_arrayof_conjoint_jshorts\n@@ -39,1 +40,11 @@\n-\t.text\n+        .hidden SpinPause\n+\n+        .hidden _Copy_arrayof_conjoint_bytes\n+        .hidden _Copy_arrayof_conjoint_jshorts\n+        .hidden _Copy_conjoint_jshorts_atomic\n+        .hidden _Copy_arrayof_conjoint_jints\n+        .hidden _Copy_conjoint_jints_atomic\n+        .hidden _Copy_arrayof_conjoint_jlongs\n+        .hidden _Copy_conjoint_jlongs_atomic\n+\n+        .text\n@@ -41,1 +52,0 @@\n-        .globl SpinPause\n@@ -58,1 +68,1 @@\n-\t.type    _Copy_arrayof_conjoint_bytes,@function\n+        .type    _Copy_arrayof_conjoint_bytes,@function\n@@ -66,1 +76,1 @@\n-        jbe      acb_CopyLeft \n+        jbe      acb_CopyLeft\n@@ -160,2 +170,2 @@\n-\t.type    _Copy_arrayof_conjoint_jshorts,@function\n-\t.type    _Copy_conjoint_jshorts_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jshorts,@function\n+        .type    _Copy_conjoint_jshorts_atomic,@function\n@@ -170,1 +180,1 @@\n-        jbe      acs_CopyLeft \n+        jbe      acs_CopyLeft\n@@ -250,2 +260,2 @@\n-\t.type    _Copy_arrayof_conjoint_jints,@function\n-\t.type    _Copy_conjoint_jints_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jints,@function\n+        .type    _Copy_conjoint_jints_atomic,@function\n@@ -260,1 +270,1 @@\n-        jbe      aci_CopyLeft \n+        jbe      aci_CopyLeft\n@@ -329,2 +339,2 @@\n-\t.type    _Copy_arrayof_conjoint_jlongs,@function\n-\t.type    _Copy_conjoint_jlongs_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jlongs,@function\n+        .type    _Copy_conjoint_jlongs_atomic,@function\n@@ -337,1 +347,1 @@\n-        jbe      acl_CopyLeft \n+        jbe      acl_CopyLeft\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_64.S","additions":31,"deletions":21,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,5 @@\n-\t.text\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n+    .text\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_32.S","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,8 @@\n-\t.text\n+    .hidden SafeFetch32_impl\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetch32_continuation\n+    .hidden _SafeFetchN_continuation\n+\n+    .text\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_64.S","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#include <unordered_set>\n@@ -687,0 +688,92 @@\n+class MarkUsageFormClosure : public FormClosure {\n+private:\n+  ArchDesc* _ad;\n+  std::unordered_set<Form*> *_visited;\n+\n+public:\n+  MarkUsageFormClosure(ArchDesc* ad, std::unordered_set<Form*> *visit_map) {\n+    _ad = ad;\n+    _visited = visit_map;\n+  }\n+  virtual ~MarkUsageFormClosure() = default;\n+\n+  virtual void do_form(Form *form) {\n+    if (_visited->find(form) == _visited->end()) {\n+      _visited->insert(form);\n+      form->forms_do(this);\n+    }\n+  }\n+\n+  virtual void do_form_by_name(const char* name) {\n+    const Form* form = _ad->globalNames()[name];\n+    if (form) {\n+      do_form(const_cast<Form*>(form));\n+      return;\n+    }\n+    RegisterForm* regs = _ad->get_registers();\n+    if (regs->getRegClass(name)) {\n+      do_form(regs->getRegClass(name));\n+      return;\n+    }\n+  }\n+};\n+\n+\/\/ check unused operands\n+bool ArchDesc::check_usage() {\n+  std::unordered_set<Form*> visited;\n+  MarkUsageFormClosure callback(this, &visited);\n+  _instructions.reset();\n+  \/\/ iterate all instruction to mark used form\n+  InstructForm* instr;\n+  for ( ; (instr = (InstructForm*)_instructions.iter()) != nullptr; ) {\n+    callback.do_form(instr);\n+  }\n+\n+  \/\/ these forms are coded in OperandForm::is_user_name_for_sReg\n+  \/\/ it may happen no instruction use these operands, like stackSlotP in aarch64,\n+  \/\/ but we can not desclare they are useless.\n+  callback.do_form_by_name(\"stackSlotI\");\n+  callback.do_form_by_name(\"stackSlotP\");\n+  callback.do_form_by_name(\"stackSlotD\");\n+  callback.do_form_by_name(\"stackSlotF\");\n+  callback.do_form_by_name(\"stackSlotL\");\n+\n+  \/\/ sReg* are initial created by adlc in ArchDesc::initBaseOpTypes()\n+  \/\/ In ARM, no definition or usage in adfile, but they are reported as unused\n+  callback.do_form_by_name(\"sRegI\");\n+  callback.do_form_by_name(\"sRegP\");\n+  callback.do_form_by_name(\"sRegD\");\n+  callback.do_form_by_name(\"sRegF\");\n+  callback.do_form_by_name(\"sRegL\");\n+\n+  \/\/ special generic vector operands only used in Matcher::pd_specialize_generic_vector_operand\n+#if defined(AARCH64)\n+  callback.do_form_by_name(\"vecA\");\n+  callback.do_form_by_name(\"vecD\");\n+  callback.do_form_by_name(\"vecX\");\n+#elif defined(AMD64)\n+  callback.do_form_by_name(\"vecS\");\n+  callback.do_form_by_name(\"vecD\");\n+  callback.do_form_by_name(\"vecX\");\n+  callback.do_form_by_name(\"vecY\");\n+  callback.do_form_by_name(\"vecZ\");\n+  callback.do_form_by_name(\"legVecS\");\n+  callback.do_form_by_name(\"legVecD\");\n+  callback.do_form_by_name(\"legVecX\");\n+  callback.do_form_by_name(\"legVecY\");\n+  callback.do_form_by_name(\"legVecZ\");\n+#endif\n+\n+  int cnt = 0;\n+  _operands.reset();\n+  OperandForm* operand;\n+  for ( ; (operand = (OperandForm*)_operands.iter()) != nullptr; ) {\n+    if(visited.find(operand) == visited.end() && !operand->ideal_only()) {\n+      fprintf(stderr, \"\\nWarning: unused operand (%s)\", operand->_ident);\n+      cnt++;\n+    }\n+  }\n+  if (cnt) fprintf(stderr, \"\\n-------Warning: total %d unused operands\\n\", cnt);\n+\n+  return true;\n+}\n","filename":"src\/hotspot\/share\/adlc\/archDesc.cpp","additions":94,"deletions":1,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -229,0 +229,1 @@\n+  bool check_usage();\n","filename":"src\/hotspot\/share\/adlc\/archDesc.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,0 +365,9 @@\n+void FormDict::forms_do(FormClosure* f) {;\n+  DictI iter(&_form);\n+  for( ; iter.test(); ++iter ) {\n+    Form* form = (Form*) iter._value;\n+    assert(form != nullptr, \"sanity\");\n+    f->do_form(form);\n+  }\n+}\n+\n@@ -377,0 +386,8 @@\n+\n+void FormClosure::do_form(Form* form) {\n+  assert(false, \"should not reach here\");\n+}\n+\n+void FormClosure::do_form_by_name(const char* name) {\n+  assert(false, \"should not reach here\");\n+}\n","filename":"src\/hotspot\/share\/adlc\/forms.cpp","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,1 @@\n+class FormClosure;\n@@ -117,0 +118,2 @@\n+  \/\/ iterate child forms recursively\n+  void forms_do(FormClosure *f);\n@@ -166,0 +169,3 @@\n+  \/\/ iterate child forms recursively\n+  virtual void forms_do (FormClosure* f) { return; }\n+\n@@ -258,0 +264,10 @@\n+class FormClosure {\n+public:\n+    FormClosure() = default;\n+    virtual ~FormClosure() = default;\n+\n+    virtual void do_form(Form* form);\n+    virtual void do_form_by_name(const char* name);\n+};\n+\n+\n","filename":"src\/hotspot\/share\/adlc\/forms.hpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,0 +201,14 @@\n+void RegisterForm::forms_do(FormClosure *f) {\n+  const char *name = nullptr;\n+  if (_current_ac) f->do_form(_current_ac);\n+  for(_rdefs.reset(); (name = _rdefs.iter()) != nullptr;) {\n+    f->do_form((RegDef*)_regDef[name]);\n+  }\n+  for (_rclasses.reset(); (name = _rclasses.iter()) != nullptr;) {\n+    f->do_form((RegClass*)_regClass[name]);\n+  }\n+  for (_aclasses.reset(); (name = _aclasses.iter()) != nullptr;) {\n+    f->do_form((AllocClass*)_allocClass[name]);\n+  }\n+}\n+\n@@ -325,0 +339,7 @@\n+void RegClass::forms_do(FormClosure *f) {\n+  const char *name = nullptr;\n+  for( _regDefs.reset(); (name = _regDefs.iter()) != nullptr; ) {\n+    f->do_form((RegDef*)_regDef[name]);\n+  }\n+}\n+\n@@ -439,0 +460,8 @@\n+void AllocClass::forms_do(FormClosure* f) {\n+  const char *name;\n+  for(_regDefs.reset(); (name = _regDefs.iter()) != nullptr;) {\n+    f->do_form((RegDef*)_regDef[name]);\n+  }\n+  return;\n+}\n+\n@@ -709,0 +738,9 @@\n+void Peephole::forms_do(FormClosure *f) {\n+  if (_predicate) f->do_form(_predicate);\n+  if (_match) f->do_form(_match);\n+  if (_procedure) f->do_form(_procedure);\n+  if (_constraint) f->do_form(_constraint);\n+  if (_replace) f->do_form(_replace);\n+  return;\n+}\n+\n","filename":"src\/hotspot\/share\/adlc\/formsopt.cpp","additions":39,"deletions":1,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,0 +126,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -202,0 +203,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -308,0 +310,5 @@\n+\n+  virtual void forms_do(FormClosure* f) {\n+    if (_rclasses[0]) f->do_form(_rclasses[0]);\n+    if (_rclasses[1]) f->do_form(_rclasses[1]);\n+  }\n@@ -328,0 +335,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -571,0 +579,1 @@\n+  virtual void forms_do(FormClosure* f);\n","filename":"src\/hotspot\/share\/adlc\/formsopt.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1501,0 +1501,18 @@\n+void InstructForm::forms_do(FormClosure *f) {\n+  if (_cisc_spill_alternate) f->do_form(_cisc_spill_alternate);\n+  if (_short_branch_form) f->do_form(_short_branch_form);\n+  _localNames.forms_do(f);\n+  if (_matrule) f->do_form(_matrule);\n+  if (_opcode) f->do_form(_opcode);\n+  if (_insencode) f->do_form(_insencode);\n+  if (_constant) f->do_form(_constant);\n+  if (_attribs) f->do_form(_attribs);\n+  if (_predicate) f->do_form(_predicate);\n+  _effects.forms_do(f);\n+  if (_exprule) f->do_form(_exprule);\n+  if (_rewrule) f->do_form(_rewrule);\n+  if (_format) f->do_form(_format);\n+  if (_peephole) f->do_form(_peephole);\n+  assert(_components.count() == 0, \"skip components\");\n+}\n+\n@@ -1618,0 +1636,8 @@\n+\n+void EncodeForm::forms_do(FormClosure* f) {\n+  const char *name;\n+  for (_eclasses.reset(); (name = _eclasses.iter()) != nullptr;) {\n+    f->do_form((EncClass*)_encClass[name]);\n+  }\n+}\n+\n@@ -1708,0 +1734,9 @@\n+void EncClass::forms_do(FormClosure *f) {\n+  _parameter_type.reset();\n+  const char *type = _parameter_type.iter();\n+  for ( ; type != nullptr ; type = _parameter_type.iter() ) {\n+    f->do_form_by_name(type);\n+  }\n+  _localNames.forms_do(f);\n+}\n+\n@@ -1838,0 +1873,9 @@\n+void InsEncode::forms_do(FormClosure *f) {\n+  _encoding.reset();\n+  NameAndList *encoding = (NameAndList*)_encoding.iter();\n+  for( ; encoding != nullptr; encoding = (NameAndList*)_encoding.iter() ) {\n+    \/\/ just check name, other operands will be checked as instruction parameters\n+    f->do_form_by_name(encoding->name());\n+  }\n+}\n+\n@@ -1971,0 +2015,13 @@\n+void ExpandRule::forms_do(FormClosure *f) {\n+  NameAndList *expand_instr = nullptr;\n+  \/\/ Iterate over the instructions 'node' expands into\n+  for(reset_instructions(); (expand_instr = iter_instructions()) != nullptr; ) {\n+    f->do_form_by_name(expand_instr->name());\n+  }\n+  _newopers.reset();\n+  const char* oper = _newopers.iter();\n+  for(; oper != nullptr; oper = _newopers.iter()) {\n+    f->do_form_by_name(oper);\n+  }\n+}\n+\n@@ -1987,0 +2044,6 @@\n+void RewriteRule::forms_do(FormClosure *f) {\n+  if (_condition) f->do_form(_condition);\n+  if (_instrs) f->do_form(_instrs);\n+  if (_opers) f->do_form(_opers);\n+}\n+\n@@ -2069,0 +2132,7 @@\n+void OpClassForm::forms_do(FormClosure* f) {\n+  const char *name;\n+  for(_oplst.reset(); (name = _oplst.iter()) != nullptr;) {\n+    f->do_form_by_name(name);\n+  }\n+}\n+\n@@ -2694,0 +2764,16 @@\n+void OperandForm::forms_do(FormClosure* f) {\n+  if (_matrule)    f->do_form(_matrule);\n+  if (_interface)  f->do_form(_interface);\n+  if (_attribs)    f->do_form(_attribs);\n+  if (_predicate)  f->do_form(_predicate);\n+  if (_constraint) f->do_form(_constraint);\n+  if (_construct)  f->do_form(_construct);\n+  if (_format)     f->do_form(_format);\n+  _localNames.forms_do(f);\n+  const char* opclass = nullptr;\n+  for ( _classes.reset(); (opclass = _classes.iter()) != nullptr; ) {\n+    f->do_form_by_name(opclass);\n+  }\n+  assert(_components.count() == 0, \"skip _compnets\");\n+}\n+\n@@ -2715,0 +2801,4 @@\n+void Constraint::forms_do(FormClosure *f) {\n+  f->do_form_by_name(_arg);\n+}\n+\n@@ -3542,0 +3632,6 @@\n+void MatchNode::forms_do(FormClosure *f) {\n+  f->do_form_by_name(_name);\n+  if (_lChild) f->do_form(_lChild);\n+  if (_rChild) f->do_form(_rChild);\n+}\n+\n@@ -3611,0 +3707,1 @@\n+\n@@ -4337,0 +4434,12 @@\n+void MatchRule::forms_do(FormClosure* f) {\n+  \/\/ keep sync with MatchNode::forms_do\n+  f->do_form_by_name(_name);\n+  if (_lChild) f->do_form(_lChild);\n+  if (_rChild) f->do_form(_rChild);\n+\n+  \/\/ handle next rule\n+  if (_next) {\n+    f->do_form(_next);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":109,"deletions":0,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -313,0 +313,1 @@\n+  virtual void forms_do(FormClosure *f);\n@@ -336,0 +337,1 @@\n+  virtual void forms_do(FormClosure *f);\n@@ -380,0 +382,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -471,0 +474,1 @@\n+  virtual void forms_do(FormClosure *f);\n@@ -518,0 +522,1 @@\n+  virtual void forms_do(FormClosure *f);\n@@ -557,0 +562,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -587,0 +593,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -714,0 +721,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -732,0 +740,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -1017,0 +1026,1 @@\n+  virtual void forms_do(FormClosure* f);\n@@ -1078,0 +1088,1 @@\n+  virtual void forms_do(FormClosure* f);\n","filename":"src\/hotspot\/share\/adlc\/formssel.hpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -189,0 +189,3 @@\n+  \/\/ Check defined operands are used\n+  AD.check_usage();\n+\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -309,10 +309,8 @@\n-\n-static int sort_pairs(BlockPair** a, BlockPair** b) {\n-  if ((*a)->from() == (*b)->from()) {\n-    return (*a)->to()->block_id() - (*b)->to()->block_id();\n-  } else {\n-    return (*a)->from()->block_id() - (*b)->from()->block_id();\n-  }\n-}\n-\n-\n+\/\/ The functionality of this class is to insert a new block between\n+\/\/ the 'from' and 'to' block of a critical edge.\n+\/\/ It first collects the block pairs, and then processes them.\n+\/\/\n+\/\/ Some instructions may introduce more than one edge between two blocks.\n+\/\/ By checking if the current 'to' block sets critical_edge_split_flag\n+\/\/ (all new blocks set this flag) we can avoid repeated processing.\n+\/\/ This is why BlockPair contains the index rather than the original 'to' block.\n@@ -321,1 +319,0 @@\n-  IR*       _ir;\n@@ -324,1 +321,4 @@\n-  CriticalEdgeFinder(IR* ir): _ir(ir) {}\n+  CriticalEdgeFinder(IR* ir) {\n+    ir->iterate_preorder(this);\n+  }\n+\n@@ -332,1 +332,1 @@\n-          blocks.append(new BlockPair(bb, sux));\n+          blocks.append(new BlockPair(bb, i));\n@@ -339,2 +339,0 @@\n-    BlockPair* last_pair = nullptr;\n-    blocks.sort(sort_pairs);\n@@ -343,1 +341,0 @@\n-      if (last_pair != nullptr && pair->is_same(last_pair)) continue;\n@@ -345,1 +342,6 @@\n-      BlockBegin* to = pair->to();\n+      int index = pair->index();\n+      BlockBegin* to = from->end()->sux_at(index);\n+      if (to->is_set(BlockBegin::critical_edge_split_flag)) {\n+        \/\/ inserted\n+        continue;\n+      }\n@@ -353,1 +355,0 @@\n-      last_pair = pair;\n@@ -360,2 +361,0 @@\n-\n-  iterate_preorder(&cef);\n","filename":"src\/hotspot\/share\/c1\/c1_IR.cpp","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -589,0 +589,2 @@\n+  assert(!sux->is_set(critical_edge_split_flag), \"sanity check\");\n+\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2426,1 +2426,1 @@\n-  BlockBegin* _to;\n+  int _index; \/\/ sux index of 'to' block\n@@ -2428,1 +2428,1 @@\n-  BlockPair(BlockBegin* from, BlockBegin* to): _from(from), _to(to) {}\n+  BlockPair(BlockBegin* from, int index): _from(from), _index(index) {}\n@@ -2430,5 +2430,1 @@\n-  BlockBegin* to() const   { return _to;   }\n-  bool is_same(BlockBegin* from, BlockBegin* to) const { return  _from == from && _to == to; }\n-  bool is_same(BlockPair* p) const { return  _from == p->from() && _to == p->to(); }\n-  void set_to(BlockBegin* b)   { _to = b; }\n-  void set_from(BlockBegin* b) { _from = b; }\n+  int index() const        { return _index; }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1336,0 +1336,3 @@\n+    \/\/ NMT: fix up the space tags\n+    MemTracker::record_virtual_memory_type(archive_space_rs.base(), mtClassShared);\n+    MemTracker::record_virtual_memory_type(class_space_rs.base(), mtClass);\n@@ -1365,1 +1368,1 @@\n-                                                     ccs_begin_offset);\n+                                                     ccs_begin_offset, mtClassShared, mtClass);\n@@ -1372,3 +1375,0 @@\n-  \/\/ NMT: fix up the space tags\n-  MemTracker::record_virtual_memory_type(archive_space_rs.base(), mtClassShared);\n-  MemTracker::record_virtual_memory_type(class_space_rs.base(), mtClass);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. and\/or its affiliates.\n@@ -45,0 +45,5 @@\n+int CompilationFailureInfo::current_compile_id_or_0() {\n+  ciEnv* env = ciEnv::current();\n+  return (env != nullptr) ? env->compile_id() : 0;\n+}\n+\n@@ -49,1 +54,1 @@\n-  _compile_id(ciEnv::current()->task()->compile_id())\n+  _compile_id(current_compile_id_or_0())\n","filename":"src\/hotspot\/share\/compiler\/compilationFailureInfo.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. and\/or its affiliates.\n@@ -43,0 +43,1 @@\n+  static int current_compile_id_or_0();\n","filename":"src\/hotspot\/share\/compiler\/compilationFailureInfo.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/c1\/g1BarrierSetC1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionType.hpp\"\n@@ -33,3 +36,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegionType.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,0 +32,3 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionBounds.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n@@ -33,3 +36,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionBounds.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -33,1 +34,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CodeBlobClosure.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CodeRootSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,3 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n@@ -74,3 +77,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -48,2 +50,0 @@\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n@@ -37,4 +41,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionManager.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -33,3 +36,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,4 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n@@ -43,4 +47,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n@@ -155,1 +155,2 @@\n-      if (!expand()) {\n+      size_t desired_capacity = bucket_size(bucket) * 2;\n+      if (!try_expand_to(desired_capacity)) {\n@@ -199,1 +200,1 @@\n-bool G1CMMarkStack::ChunkAllocator::expand() {\n+bool G1CMMarkStack::ChunkAllocator::try_expand_to(size_t desired_capacity) {\n@@ -204,0 +205,1 @@\n+\n@@ -205,2 +207,1 @@\n-  \/\/ Double capacity if possible.\n-  size_t new_capacity = MIN2(old_capacity * 2, _max_capacity);\n+  desired_capacity = MIN2(desired_capacity, _max_capacity);\n@@ -208,1 +209,1 @@\n-  if (reserve(new_capacity)) {\n+  if (reserve(desired_capacity)) {\n@@ -210,1 +211,1 @@\n-                  old_capacity, new_capacity);\n+                  old_capacity, desired_capacity);\n@@ -216,0 +217,5 @@\n+bool G1CMMarkStack::ChunkAllocator::try_expand() {\n+  size_t new_capacity = _capacity * 2;\n+  return try_expand_to(new_capacity);\n+}\n+\n@@ -237,0 +243,3 @@\n+  \/\/ Allocate all buckets associated with indexes between the current capacity (_capacity)\n+  \/\/ and the new capacity (new_capacity). This step ensures that there are no gaps in the\n+  \/\/ array and that the capacity accurately reflects the reserved memory.\n@@ -264,1 +273,1 @@\n-  _chunk_allocator.expand();\n+  _chunk_allocator.try_expand();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n@@ -148,1 +148,1 @@\n-    \/\/ Illustration of the Growable Array data structure.\n+    \/\/ Illustration of the growable array data structure.\n@@ -177,1 +177,1 @@\n-              _min_capacity * ( 1ULL << (bucket -1));\n+              _min_capacity * ( 1ULL << (bucket - 1));\n@@ -228,1 +228,3 @@\n-    bool expand();\n+    \/\/ Expand the mark stack doubling its size.\n+    bool try_expand();\n+    bool try_expand_to(size_t desired_capacity);\n@@ -562,1 +564,1 @@\n-  inline HeapWord* top_at_rebuild_start(uint region) const;\n+  inline HeapWord* top_at_rebuild_start(HeapRegion* r) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -37,2 +39,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegion.hpp\"\n@@ -187,3 +187,2 @@\n-inline HeapWord* G1ConcurrentMark::top_at_rebuild_start(uint region) const {\n-  assert(region < _g1h->max_reserved_regions(), \"Tried to access TARS for region %u out of bounds\", region);\n-  return _top_at_rebuild_starts[region];\n+inline HeapWord* G1ConcurrentMark::top_at_rebuild_start(HeapRegion* r) const {\n+  return _top_at_rebuild_starts[r->hrm_index()];\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkObjArrayProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.inline.hpp\"\n@@ -32,2 +34,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionManager.inline.hpp\"\n@@ -108,1 +108,1 @@\n-      return _cm->top_at_rebuild_start(hr->hrm_index()) != nullptr;\n+      return _cm->top_at_rebuild_start(hr) != nullptr;\n@@ -232,1 +232,1 @@\n-                             HR_FORMAT_PARAMS(hr), p2i(pb), p2i(_cm->top_at_rebuild_start(hr->hrm_index())), p2i(hr->top_at_mark_start()));\n+                             HR_FORMAT_PARAMS(hr), p2i(pb), p2i(_cm->top_at_rebuild_start(hr)), p2i(hr->top_at_mark_start()));\n@@ -249,1 +249,1 @@\n-      if (scan_from_pb_to_tars(hr, pb, _cm->top_at_rebuild_start(hr->hrm_index()))) {\n+      if (scan_from_pb_to_tars(hr, pb, _cm->top_at_rebuild_start(hr))) {\n@@ -275,1 +275,1 @@\n-                              HR_FORMAT_PARAMS(hr), p2i(pb), p2i(_cm->top_at_rebuild_start(hr->hrm_index())));\n+                              HR_FORMAT_PARAMS(hr), p2i(pb), p2i(_cm->top_at_rebuild_start(hr)));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -32,2 +34,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThreadsNeeded.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -36,1 +37,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1DirtyCardQueue.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EdenRegions.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailureRegions.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -320,0 +320,7 @@\n+  {\n+    GCTraceTime(Debug, gc, phases) debug(\"Phase 1: Flush Mark Stats Cache\", scope()->timer());\n+    for (uint i = 0; i < workers(); i++) {\n+      marker(i)->flush_mark_stats_cache();\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-  marker->flush_mark_stats_cache();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarkTask.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarkTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"gc\/g1\/g1FullCollector.inline.hpp\"\n@@ -33,0 +32,1 @@\n+#include \"gc\/g1\/g1FullCollector.inline.hpp\"\n@@ -34,1 +34,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n@@ -36,0 +35,1 @@\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n@@ -36,0 +35,1 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCResetMetadataTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,5 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionBounds.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionTracer.hpp\"\n@@ -35,5 +40,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionBounds.inline.hpp\"\n-#include \"gc\/g1\/heapRegionManager.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegionTracer.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGION_HPP\n-#define SHARE_GC_G1_HEAPREGION_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGION_HPP\n+#define SHARE_GC_G1_G1HEAPREGION_HPP\n@@ -29,0 +29,1 @@\n+#include \"gc\/g1\/g1HeapRegionTracer.hpp\"\n@@ -30,0 +31,1 @@\n+#include \"gc\/g1\/g1HeapRegionType.hpp\"\n@@ -31,2 +33,0 @@\n-#include \"gc\/g1\/heapRegionTracer.hpp\"\n-#include \"gc\/g1\/heapRegionType.hpp\"\n@@ -625,1 +625,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGION_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGION_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGION_INLINE_HPP\n-#define SHARE_GC_G1_HEAPREGION_INLINE_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGION_INLINE_HPP\n+#define SHARE_GC_G1_G1HEAPREGION_INLINE_HPP\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -562,1 +562,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGION_INLINE_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGION_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","status":"renamed"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionAttr.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONBOUNDS_HPP\n-#define SHARE_GC_G1_HEAPREGIONBOUNDS_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONBOUNDS_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONBOUNDS_HPP\n@@ -58,1 +58,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONBOUNDS_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONBOUNDS_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionBounds.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionBounds.hpp","status":"renamed"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_G1_G1HEAPREGIONBOUNDS_INLINE_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONBOUNDS_INLINE_HPP\n+\n+#include \"gc\/g1\/g1HeapRegionBounds.hpp\"\n+\n+size_t HeapRegionBounds::min_size() {\n+  return MIN_REGION_SIZE;\n+}\n+\n+size_t HeapRegionBounds::max_ergonomics_size() {\n+  return MAX_ERGONOMICS_SIZE;\n+}\n+\n+size_t HeapRegionBounds::max_size() {\n+  return MAX_REGION_SIZE;\n+}\n+\n+size_t HeapRegionBounds::target_number() {\n+  return TARGET_REGION_NUMBER;\n+}\n+\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONBOUNDS_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionBounds.inline.hpp","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionEventSender.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n@@ -31,3 +34,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionManager.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONMANAGER_HPP\n-#define SHARE_GC_G1_HEAPREGIONMANAGER_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONMANAGER_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONMANAGER_HPP\n@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n@@ -329,1 +329,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONMANAGER_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONMANAGER_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.hpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONMANAGER_INLINE_HPP\n-#define SHARE_GC_G1_HEAPREGIONMANAGER_INLINE_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONMANAGER_INLINE_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONMANAGER_INLINE_HPP\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n@@ -31,2 +31,2 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n@@ -86,1 +86,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONMANAGER_INLINE_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONMANAGER_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.inline.hpp","status":"renamed"},{"patch":"@@ -32,2 +32,2 @@\n-#include \"gc\/g1\/heapRegionManager.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionRemSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONREMSET_HPP\n-#define SHARE_GC_G1_HEAPREGIONREMSET_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONREMSET_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONREMSET_HPP\n@@ -188,1 +188,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONREMSET_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONREMSET_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionRemSet.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.hpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_VM_GC_G1_HEAPREGIONREMSET_INLINE_HPP\n-#define SHARE_VM_GC_G1_HEAPREGIONREMSET_INLINE_HPP\n+#ifndef SHARE_VM_GC_G1_G1HEAPREGIONREMSET_INLINE_HPP\n+#define SHARE_VM_GC_G1_G1HEAPREGIONREMSET_INLINE_HPP\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n@@ -147,1 +147,1 @@\n-#endif \/\/ SHARE_VM_GC_G1_HEAPREGIONREMSET_INLINE_HPP\n+#endif \/\/ SHARE_VM_GC_G1_G1HEAPREGIONREMSET_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionRemSet.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.inline.hpp","status":"renamed"},{"patch":"@@ -27,0 +27,2 @@\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.inline.hpp\"\n@@ -28,2 +30,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionSet.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONSET_HPP\n-#define SHARE_GC_G1_HEAPREGIONSET_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONSET_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONSET_HPP\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -274,1 +274,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONSET_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONSET_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionSet.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionSet.hpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONSET_INLINE_HPP\n-#define SHARE_GC_G1_HEAPREGIONSET_INLINE_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONSET_INLINE_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONSET_INLINE_HPP\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -274,1 +274,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONSET_INLINE_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONSET_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionSet.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionSet.inline.hpp","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/g1\/heapRegionTracer.hpp\"\n+#include \"gc\/g1\/g1HeapRegionTracer.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionTracer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionTracer.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONTRACER_HPP\n-#define SHARE_GC_G1_HEAPREGIONTRACER_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONTRACER_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONTRACER_HPP\n@@ -41,1 +41,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONTRACER_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONTRACER_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionTracer.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionTracer.hpp","status":"renamed"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"gc\/g1\/heapRegionType.hpp\"\n+#include \"gc\/g1\/g1HeapRegionType.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionType.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionType.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_HEAPREGIONTYPE_HPP\n-#define SHARE_GC_G1_HEAPREGIONTYPE_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONTYPE_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONTYPE_HPP\n@@ -170,1 +170,1 @@\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONTYPE_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONTYPE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionType.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/hotspot\/share\/gc\/g1\/heapRegionType.hpp","status":"renamed"},{"patch":"@@ -30,0 +30,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n@@ -34,2 +36,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MemoryPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArenaFreeMemoryTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArenaFreeMemoryTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1NUMA.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OldGenAllocationTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -34,2 +36,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -42,2 +44,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionPinCache.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionsOnNodes.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,3 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -43,3 +46,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionManager.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"gc\/g1\/g1OopClosures.hpp\"\n@@ -31,0 +30,2 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1OopClosures.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -34,2 +36,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetSummary.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -28,2 +30,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetTrackingPolicy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionType.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionType.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetTrackingPolicy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n@@ -39,1 +40,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RootProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -30,1 +31,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SATBMarkQueueSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SurvRateGroup.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -27,1 +28,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SurvivorRegions.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n@@ -41,2 +43,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGenSizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_G1_HEAPREGIONBOUNDS_INLINE_HPP\n-#define SHARE_GC_G1_HEAPREGIONBOUNDS_INLINE_HPP\n-\n-#include \"gc\/g1\/heapRegionBounds.hpp\"\n-\n-size_t HeapRegionBounds::min_size() {\n-  return MIN_REGION_SIZE;\n-}\n-\n-size_t HeapRegionBounds::max_ergonomics_size() {\n-  return MAX_ERGONOMICS_SIZE;\n-}\n-\n-size_t HeapRegionBounds::max_size() {\n-  return MAX_REGION_SIZE;\n-}\n-\n-size_t HeapRegionBounds::target_number() {\n-  return TARGET_REGION_NUMBER;\n-}\n-\n-#endif \/\/ SHARE_GC_G1_HEAPREGIONBOUNDS_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionBounds.inline.hpp","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/g1\/heapRegionBounds.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionBounds.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/jvmFlagConstraintsG1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/vmStructs_g1.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+  _marking_stats_cache = nullptr;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -114,1 +114,29 @@\n- public:\n+  \/\/ To collect per-region live-words in a worker local cache in order to\n+  \/\/ reduce threads contention.\n+  class MarkingStatsCache : public CHeapObj<mtGC> {\n+    constexpr static size_t num_entries = 1024;\n+    static_assert(is_power_of_2(num_entries), \"inv\");\n+    static_assert(num_entries > 0, \"inv\");\n+\n+    constexpr static size_t entry_mask = num_entries - 1;\n+\n+    struct CacheEntry {\n+      size_t region_id;\n+      size_t live_words;\n+    };\n+\n+    CacheEntry entries[num_entries] = {};\n+\n+    inline void push(size_t region_id, size_t live_words);\n+\n+  public:\n+    inline void push(oop obj, size_t live_words);\n+\n+    inline void evict(size_t index);\n+\n+    inline void evict_all();\n+  };\n+\n+  MarkingStatsCache* _marking_stats_cache;\n+\n+public:\n@@ -201,0 +229,4 @@\n+  inline void create_marking_stats_cache();\n+\n+  inline void flush_and_destroy_marking_stats_cache();\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.hpp","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -110,0 +110,2 @@\n+      assert(_marking_stats_cache != nullptr, \"inv\");\n+      _marking_stats_cache->push(obj, obj->size());\n@@ -177,0 +179,69 @@\n+inline void ParCompactionManager::MarkingStatsCache::push(size_t region_id, size_t live_words) {\n+  size_t index = (region_id & entry_mask);\n+  if (entries[index].region_id == region_id) {\n+    \/\/ Hit\n+    entries[index].live_words += live_words;\n+    return;\n+  }\n+  \/\/ Miss\n+  if (entries[index].live_words != 0) {\n+    evict(index);\n+  }\n+  entries[index].region_id = region_id;\n+  entries[index].live_words = live_words;\n+}\n+\n+inline void ParCompactionManager::MarkingStatsCache::push(oop obj, size_t live_words) {\n+  ParallelCompactData& data = PSParallelCompact::summary_data();\n+  const size_t region_size = ParallelCompactData::RegionSize;\n+\n+  HeapWord* addr = cast_from_oop<HeapWord*>(obj);\n+  const size_t start_region_id = data.addr_to_region_idx(addr);\n+  const size_t end_region_id = data.addr_to_region_idx(addr + live_words - 1);\n+  if (start_region_id == end_region_id) {\n+    \/\/ Completely inside this region\n+    push(start_region_id, live_words);\n+    return;\n+  }\n+\n+  \/\/ First region\n+  push(start_region_id, region_size - data.region_offset(addr));\n+\n+  \/\/ Middle regions; bypass cache\n+  for (size_t i = start_region_id + 1; i < end_region_id; ++i) {\n+    data.region(i)->set_partial_obj_size(region_size);\n+    data.region(i)->set_partial_obj_addr(addr);\n+  }\n+\n+  \/\/ Last region; bypass cache\n+  const size_t end_offset = data.region_offset(addr + live_words - 1);\n+  data.region(end_region_id)->set_partial_obj_size(end_offset + 1);\n+  data.region(end_region_id)->set_partial_obj_addr(addr);\n+}\n+\n+inline void ParCompactionManager::MarkingStatsCache::evict(size_t index) {\n+  ParallelCompactData& data = PSParallelCompact::summary_data();\n+  \/\/ flush to global data\n+  data.region(entries[index].region_id)->add_live_obj(entries[index].live_words);\n+}\n+\n+inline void ParCompactionManager::MarkingStatsCache::evict_all() {\n+  for (size_t i = 0; i < num_entries; ++i) {\n+    if (entries[i].live_words != 0) {\n+      evict(i);\n+      entries[i].live_words = 0;\n+    }\n+  }\n+}\n+\n+inline void ParCompactionManager::create_marking_stats_cache() {\n+  assert(_marking_stats_cache == nullptr, \"precondition\");\n+  _marking_stats_cache = new MarkingStatsCache();\n+}\n+\n+inline void ParCompactionManager::flush_and_destroy_marking_stats_cache() {\n+  _marking_stats_cache->evict_all();\n+  delete _marking_stats_cache;\n+  _marking_stats_cache = nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":71,"deletions":0,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -1972,0 +1972,1 @@\n+    cm->create_marking_stats_cache();\n@@ -2020,0 +2021,7 @@\n+static void flush_marking_stats_cache(const uint num_workers) {\n+  for (uint i = 0; i < num_workers; ++i) {\n+    ParCompactionManager* cm = ParCompactionManager::gc_thread_compaction_manager(i);\n+    cm->flush_and_destroy_marking_stats_cache();\n+  }\n+}\n+\n@@ -2049,0 +2057,6 @@\n+  {\n+    GCTraceTime(Debug, gc, phases) tm(\"Flush Marking Stats\", &_gc_timer);\n+\n+    flush_marking_stats_cache(active_gc_threads);\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -103,1 +103,0 @@\n-    _summary_data.add_obj(obj, obj_size);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,3 +49,0 @@\n-class WorkerTask;\n-class AdaptiveSizePolicy;\n-class BarrierSet;\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -216,2 +216,2 @@\n-          \"Maximum size of marking stack\")                                  \\\n-          range(1, (INT_MAX - 1))                                          \\\n+          \"Maximum size of marking stack in bytes.\")                        \\\n+          range(1, (INT_MAX - 1))                                           \\\n@@ -220,1 +220,1 @@\n-          \"Size of marking stack\")                                          \\\n+          \"Size of marking stack in bytes.\")                                \\\n@@ -222,1 +222,1 @@\n-          range(1, (INT_MAX - 1))                                          \\\n+          range(1, (INT_MAX - 1))                                           \\\n@@ -348,4 +348,0 @@\n-  develop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1,             \\\n-          \"Resize the virtual spaces of the young or old generations\")      \\\n-          range(-1, 1)                                                      \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,1 +43,3 @@\n-ContiguousSpace::ContiguousSpace(): Space(),\n+ContiguousSpace::ContiguousSpace():\n+  _bottom(nullptr),\n+  _end(nullptr),\n@@ -78,3 +80,0 @@\n-void ContiguousSpace::set_top_for_allocations(HeapWord* v) {\n-  mangler()->set_top_for_allocations(v);\n-}\n@@ -103,15 +102,1 @@\n-\n-void Space::print_short() const { print_short_on(tty); }\n-\n-void Space::print_short_on(outputStream* st) const {\n-  st->print(\" space \" SIZE_FORMAT \"K, %3d%% used\", capacity() \/ K,\n-              (int) ((double) used() * 100 \/ capacity()));\n-}\n-\n-void Space::print() const { print_on(tty); }\n-\n-void Space::print_on(outputStream* st) const {\n-  print_short_on(st);\n-  st->print_cr(\" [\" PTR_FORMAT \", \" PTR_FORMAT \")\",\n-                p2i(bottom()), p2i(end()));\n-}\n+void ContiguousSpace::print() const { print_on(tty); }\n@@ -120,10 +105,3 @@\n-  print_short_on(st);\n-  st->print_cr(\" [\" PTR_FORMAT \", \" PTR_FORMAT \", \" PTR_FORMAT \")\",\n-                p2i(bottom()), p2i(top()), p2i(end()));\n-}\n-\n-#if INCLUDE_SERIALGC\n-void TenuredSpace::print_on(outputStream* st) const {\n-  print_short_on(st);\n-  st->print_cr(\" [\" PTR_FORMAT \", \" PTR_FORMAT \", \" PTR_FORMAT \")\",\n-              p2i(bottom()), p2i(top()), p2i(end()));\n+  st->print_cr(\" space %zuK, %3d%% used [\" PTR_FORMAT \", \" PTR_FORMAT \", \" PTR_FORMAT \")\",\n+               capacity() \/ K, (int) ((double) used() * 100 \/ capacity()),\n+               p2i(bottom()), p2i(top()), p2i(end()));\n@@ -131,1 +109,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":7,"deletions":30,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-class Space;\n@@ -54,0 +53,1 @@\n+class GenSpaceMangler;\n@@ -55,4 +55,2 @@\n-\/\/ A Space describes a heap area. Class Space is an abstract\n-\/\/ base class.\n-\/\/\n-\/\/ Space supports allocation, size computation and GC support is provided.\n+\/\/ A space in which the free area is contiguous.  It therefore supports\n+\/\/ faster allocation, and compaction.\n@@ -63,2 +61,1 @@\n-\n-class Space: public CHeapObj<mtGC> {\n+class ContiguousSpace: public CHeapObj<mtGC> {\n@@ -66,1 +63,2 @@\n- protected:\n+\n+private:\n@@ -73,2 +71,15 @@\n-  Space():\n-    _bottom(nullptr), _end(nullptr) { }\n+  ContiguousSpace* _next_compaction_space;\n+\n+  HeapWord* _top;\n+  \/\/ A helper for mangling the unused area of the space in debug builds.\n+  GenSpaceMangler* _mangler;\n+\n+  GenSpaceMangler* mangler() { return _mangler; }\n+\n+  \/\/ Allocation helpers (return null if full).\n+  inline HeapWord* allocate_impl(size_t word_size);\n+  inline HeapWord* par_allocate_impl(size_t word_size);\n+\n+public:\n+  ContiguousSpace();\n+  ~ContiguousSpace();\n@@ -76,1 +87,0 @@\n- public:\n@@ -85,4 +95,0 @@\n-  \/\/ Returns a subregion of the space containing only the allocated objects in\n-  \/\/ the space.\n-  virtual MemRegion used_region() const = 0;\n-\n@@ -101,7 +107,0 @@\n-  \/\/ For detecting GC bugs.  Should only be called at GC boundaries, since\n-  \/\/ some unused space may be used as scratch space during GC's.\n-  \/\/ We also call this when expanding a space to satisfy an allocation\n-  \/\/ request. See bug #4668531\n-  virtual void mangle_unused_area() = 0;\n-  virtual void mangle_unused_area_complete() = 0;\n-\n@@ -126,16 +125,3 @@\n-  size_t capacity()     const { return byte_size(bottom(), end()); }\n-  virtual size_t used() const = 0;\n-  virtual size_t free() const = 0;\n-\n-  \/\/ If \"p\" is in the space, returns the address of the start of the\n-  \/\/ \"block\" that contains \"p\".  We say \"block\" instead of \"object\" since\n-  \/\/ some heaps may not pack objects densely; a chunk may either be an\n-  \/\/ object or a non-object.  If \"p\" is not in the space, return null.\n-  virtual HeapWord* block_start_const(const void* p) const = 0;\n-\n-  \/\/ Allocation (return null if full).  Assumes the caller has established\n-  \/\/ mutually exclusive access to the space.\n-  virtual HeapWord* allocate(size_t word_size) = 0;\n-\n-  \/\/ Allocation (return null if full).  Enforces mutual exclusion internally.\n-  virtual HeapWord* par_allocate(size_t word_size) = 0;\n+  size_t capacity() const { return byte_size(bottom(), end()); }\n+  size_t used()     const { return byte_size(bottom(), top()); }\n+  size_t free()     const { return byte_size(top(),    end()); }\n@@ -144,29 +130,1 @@\n-  virtual void print_on(outputStream* st) const;\n-  void print_short() const;\n-  void print_short_on(outputStream* st) const;\n-};\n-\n-class GenSpaceMangler;\n-\n-\/\/ A space in which the free area is contiguous.  It therefore supports\n-\/\/ faster allocation, and compaction.\n-class ContiguousSpace: public Space {\n-  friend class VMStructs;\n-\n-private:\n-  ContiguousSpace* _next_compaction_space;\n-\n-protected:\n-  HeapWord* _top;\n-  \/\/ A helper for mangling the unused area of the space in debug builds.\n-  GenSpaceMangler* _mangler;\n-\n-  GenSpaceMangler* mangler() { return _mangler; }\n-\n-  \/\/ Allocation helpers (return null if full).\n-  inline HeapWord* allocate_impl(size_t word_size);\n-  inline HeapWord* par_allocate_impl(size_t word_size);\n-\n- public:\n-  ContiguousSpace();\n-  ~ContiguousSpace();\n+  void print_on(outputStream* st) const;\n@@ -209,5 +167,0 @@\n-  \/\/ In debug mode mangle (write it with a particular bit\n-  \/\/ pattern) the unused part of a space.\n-\n-  \/\/ Used to save the address in a space for later use during mangling.\n-  void set_top_for_allocations(HeapWord* v) PRODUCT_RETURN;\n@@ -217,0 +170,4 @@\n+  \/\/ For detecting GC bugs.  Should only be called at GC boundaries, since\n+  \/\/ some unused space may be used as scratch space during GC's.\n+  \/\/ We also call this when expanding a space to satisfy an allocation\n+  \/\/ request. See bug #4668531\n@@ -219,1 +176,1 @@\n-  void mangle_unused_area() override PRODUCT_RETURN;\n+  void mangle_unused_area() PRODUCT_RETURN;\n@@ -221,1 +178,1 @@\n-  void mangle_unused_area_complete() override PRODUCT_RETURN;\n+  void mangle_unused_area_complete() PRODUCT_RETURN;\n@@ -229,7 +186,1 @@\n-  \/\/ Size computations: sizes in bytes.\n-  size_t used() const override   { return byte_size(bottom(), top()); }\n-  size_t free() const override   { return byte_size(top(),    end()); }\n-\n-  \/\/ In a contiguous space we have a more obvious bound on what parts\n-  \/\/ contain objects.\n-  MemRegion used_region() const override { return MemRegion(bottom(), top()); }\n+  MemRegion used_region() const { return MemRegion(bottom(), top()); }\n@@ -237,3 +188,5 @@\n-  \/\/ Allocation (return null if full)\n-  HeapWord* allocate(size_t word_size) override;\n-  HeapWord* par_allocate(size_t word_size) override;\n+  \/\/ Allocation (return null if full).  Assumes the caller has established\n+  \/\/ mutually exclusive access to the space.\n+  virtual HeapWord* allocate(size_t word_size);\n+  \/\/ Allocation (return null if full).  Enforces mutual exclusion internally.\n+  virtual HeapWord* par_allocate(size_t word_size);\n@@ -254,2 +207,5 @@\n-  \/\/ Very inefficient implementation.\n-  HeapWord* block_start_const(const void* p) const override;\n+  \/\/ If \"p\" is in the space, returns the address of the start of the\n+  \/\/ \"block\" that contains \"p\".  We say \"block\" instead of \"object\" since\n+  \/\/ some heaps may not pack objects densely; a chunk may either be an\n+  \/\/ object or a non-object.  If \"p\" is not in the space, return null.\n+  virtual HeapWord* block_start_const(const void* p) const;\n@@ -260,2 +216,0 @@\n-  void print_on(outputStream* st) const override;\n-\n@@ -290,2 +244,0 @@\n-\n-  void print_on(outputStream* st) const override;\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":42,"deletions":90,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -101,0 +101,2 @@\n+  nonstatic_field(ContiguousSpace,             _bottom,                                       HeapWord*)                             \\\n+  nonstatic_field(ContiguousSpace,             _end,                                          HeapWord*)                             \\\n@@ -105,4 +107,1 @@\n-  nonstatic_field(MemRegion,                   _word_size,                                    size_t)                                \\\n-                                                                                                                                     \\\n-  nonstatic_field(Space,                       _bottom,                                       HeapWord*)                             \\\n-  nonstatic_field(Space,                       _end,                                          HeapWord*)\n+  nonstatic_field(MemRegion,                   _word_size,                                    size_t)\n@@ -138,2 +137,1 @@\n-  declare_toplevel_type(Space)                                            \\\n-           declare_type(ContiguousSpace,             Space)               \\\n+  declare_toplevel_type(ContiguousSpace)                                  \\\n@@ -167,1 +165,0 @@\n-  declare_toplevel_type(Space*)                                           \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1737,0 +1737,15 @@\n+bool ShenandoahBarrierC2Support::merge_point_safe(Node* region) {\n+  for (DUIterator_Fast imax, i = region->fast_outs(imax); i < imax; i++) {\n+    Node* n = region->fast_out(i);\n+    if (n->is_LoadStore()) {\n+      \/\/ Splitting a LoadStore node through phi, causes it to lose its SCMemProj: the split if code doesn't have support\n+      \/\/ for a LoadStore at the region the if is split through because that's not expected to happen (LoadStore nodes\n+      \/\/ should be between barrier nodes). It does however happen with Shenandoah though because barriers can get\n+      \/\/ expanded around a LoadStore node.\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n+\n@@ -1741,1 +1756,1 @@\n-    if (phase->can_split_if(n_ctrl)) {\n+    if (phase->can_split_if(n_ctrl) && merge_point_safe(n_ctrl)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  static bool merge_point_safe(Node* region);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -241,1 +241,0 @@\n-  }\n@@ -243,4 +242,1 @@\n-  {\n-    \/\/ Epilogue\n-    _preserved_marks->restore(heap->workers());\n-    _preserved_marks->reclaim();\n+    phase5_epilog();\n@@ -287,0 +283,2 @@\n+\n+  bool is_thread_safe() { return true; }\n@@ -296,1 +294,1 @@\n-  heap->heap_region_iterate(&cl);\n+  heap->parallel_heap_region_iterate(&cl);\n@@ -336,1 +334,1 @@\n-  void finish_region() {\n+  void finish() {\n@@ -356,1 +354,1 @@\n-      finish_region();\n+      finish();\n@@ -408,1 +406,1 @@\n-  void work(uint worker_id) {\n+  void work(uint worker_id) override {\n@@ -417,14 +415,9 @@\n-  template <bool ALT_FWD>\n-  void work_impl(uint worker_id) {\n-    ShenandoahParallelWorkerSession worker_session(worker_id);\n-    ShenandoahHeapRegionSet* slice = _worker_slices[worker_id];\n-    ShenandoahHeapRegionSetIterator it(slice);\n-    ShenandoahHeapRegion* from_region = it.next();\n-    \/\/ No work?\n-    if (from_region == nullptr) {\n-       return;\n-    }\n-\n-    \/\/ Sliding compaction. Walk all regions in the slice, and compact them.\n-    \/\/ Remember empty regions and reuse them as needed.\n-    ResourceMark rm;\n+  template<bool ALT_FWD>\n+  void work_impl(uint worker_id);\n+\n+  template<typename ClosureType>\n+  void prepare_for_compaction(ClosureType& cl,\n+                              GrowableArray<ShenandoahHeapRegion*>& empty_regions,\n+                              ShenandoahHeapRegionSetIterator& it,\n+                              ShenandoahHeapRegion* from_region);\n+};\n@@ -432,1 +425,10 @@\n-    GrowableArray<ShenandoahHeapRegion*> empty_regions((int)_heap->num_regions());\n+template<bool ALT_FWD>\n+void ShenandoahPrepareForCompactionTask::work_impl(uint worker_id) {\n+  ShenandoahParallelWorkerSession worker_session(worker_id);\n+  ShenandoahHeapRegionSet* slice = _worker_slices[worker_id];\n+  ShenandoahHeapRegionSetIterator it(slice);\n+  ShenandoahHeapRegion* from_region = it.next();\n+  \/\/ No work?\n+  if (from_region == nullptr) {\n+    return;\n+  }\n@@ -434,1 +436,3 @@\n-    ShenandoahPrepareForCompactionObjectClosure<ALT_FWD> cl(_preserved_marks->get(worker_id), empty_regions, from_region);\n+  \/\/ Sliding compaction. Walk all regions in the slice, and compact them.\n+  \/\/ Remember empty regions and reuse them as needed.\n+  ResourceMark rm;\n@@ -436,2 +440,1 @@\n-    while (from_region != nullptr) {\n-      assert(is_candidate_region(from_region), \"Sanity\");\n+  GrowableArray<ShenandoahHeapRegion*> empty_regions((int)_heap->num_regions());\n@@ -439,4 +442,3 @@\n-      cl.set_from_region(from_region);\n-      if (from_region->has_live()) {\n-        _heap->marked_object_iterate(from_region, &cl);\n-      }\n+  ShenandoahPrepareForCompactionObjectClosure<ALT_FWD> cl(_preserved_marks->get(worker_id), empty_regions, from_region);\n+  prepare_for_compaction(cl, empty_regions, it, from_region);\n+}\n@@ -444,5 +446,10 @@\n-      \/\/ Compacted the region to somewhere else? From-region is empty then.\n-      if (!cl.is_compact_same_region()) {\n-        empty_regions.append(from_region);\n-      }\n-      from_region = it.next();\n+template<typename ClosureType>\n+void ShenandoahPrepareForCompactionTask::prepare_for_compaction(ClosureType& cl,\n+                                                                GrowableArray<ShenandoahHeapRegion*>& empty_regions,\n+                                                                ShenandoahHeapRegionSetIterator& it,\n+                                                                ShenandoahHeapRegion* from_region) {\n+  while (from_region != nullptr) {\n+    assert(is_candidate_region(from_region), \"Sanity\");\n+    cl.set_from_region(from_region);\n+    if (from_region->has_live()) {\n+      _heap->marked_object_iterate(from_region, &cl);\n@@ -450,1 +457,0 @@\n-    cl.finish_region();\n@@ -452,4 +458,3 @@\n-    \/\/ Mark all remaining regions as empty\n-    for (int pos = cl.empty_regions_pos(); pos < empty_regions.length(); ++pos) {\n-      ShenandoahHeapRegion* r = empty_regions.at(pos);\n-      r->set_new_top(r->bottom());\n+    \/\/ Compacted the region to somewhere else? From-region is empty then.\n+    if (!cl.is_compact_same_region()) {\n+      empty_regions.append(from_region);\n@@ -457,0 +462,1 @@\n+    from_region = it.next();\n@@ -458,1 +464,1 @@\n-};\n+  cl.finish();\n@@ -460,1 +466,8 @@\n-template <bool ALT_FWD>\n+  \/\/ Mark all remaining regions as empty\n+  for (int pos = cl.empty_regions_pos(); pos < empty_regions.length(); ++pos) {\n+    ShenandoahHeapRegion* r = empty_regions.at(pos);\n+    r->set_new_top(r->bottom());\n+  }\n+}\n+\n+template<bool ALT_FWD>\n@@ -1013,1 +1026,1 @@\n-  \/\/ sliding costs. We may consider doing this in parallel in future.\n+  \/\/ sliding costs. We may consider doing this in parallel in the future.\n@@ -1127,0 +1140,5 @@\n+}\n+\n+void ShenandoahFullGC::phase5_epilog() {\n+  GCTraceTime(Info, gc, phases) time(\"Phase 5: Full GC epilog\", _gc_timer);\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n@@ -1139,1 +1157,0 @@\n-\n@@ -1146,0 +1163,1 @@\n+    heap->clear_cancelled_gc();\n@@ -1148,1 +1166,2 @@\n-  heap->clear_cancelled_gc();\n+  _preserved_marks->restore(heap->workers());\n+  _preserved_marks->reclaim();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":65,"deletions":46,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+  void phase5_epilog();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/x\/xObjArrayAllocator.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-JVM_ENTRY_NO_ENV(void, jfr_emit_old_object_samples(JNIEnv* env, jclass jvm, jlong cutoff_ticks, jboolean emit_all, jboolean skip_bfs))\n+NO_TRANSITION(void, jfr_emit_old_object_samples(JNIEnv* env, jclass jvm, jlong cutoff_ticks, jboolean emit_all, jboolean skip_bfs))\n@@ -354,1 +354,1 @@\n-JVM_END\n+NO_TRANSITION_END\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-  DEBUG_ONLY(JfrJavaSupport::check_java_thread_in_vm(JavaThread::current()));\n+  DEBUG_ONLY(JfrJavaSupport::check_java_thread_in_native(JavaThread::current()));\n@@ -701,0 +701,2 @@\n+  \/\/ Take the rotation lock before the transition.\n+  ThreadInVMfromNative transition(JavaThread::current());\n@@ -703,1 +705,0 @@\n-\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderService.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-  JNIEXPORT result_type JNICALL c2v_ ## name signature { \\\n+  result_type JNICALL c2v_ ## name signature {           \\\n@@ -196,1 +196,1 @@\n-  JNIEXPORT result_type JNICALL c2v_ ## name signature { \\\n+  result_type JNICALL c2v_ ## name signature {           \\\n@@ -212,1 +212,1 @@\n-  JNIEXPORT result_type JNICALL c2v_ ## name signature { \\\n+  result_type JNICALL c2v_ ## name signature {           \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n@@ -1026,8 +1026,0 @@\n-extern \"C\" {\n-JNIEXPORT VMStructEntry* jvmciHotSpotVMStructs = JVMCIVMStructs::localHotSpotVMStructs;\n-JNIEXPORT VMTypeEntry* jvmciHotSpotVMTypes = JVMCIVMStructs::localHotSpotVMTypes;\n-JNIEXPORT VMIntConstantEntry* jvmciHotSpotVMIntConstants = JVMCIVMStructs::localHotSpotVMIntConstants;\n-JNIEXPORT VMLongConstantEntry* jvmciHotSpotVMLongConstants = JVMCIVMStructs::localHotSpotVMLongConstants;\n-JNIEXPORT VMAddressEntry* jvmciHotSpotVMAddresses = JVMCIVMStructs::localHotSpotVMAddresses;\n-}\n-\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -57,4 +57,0 @@\n-  MemRegion(MetaWord* start, MetaWord* end) :\n-    _start((HeapWord*)start), _word_size(pointer_delta(end, start)) {\n-    assert(end >= start, \"incorrect constructor arguments\");\n-  }\n","filename":"src\/hotspot\/share\/memory\/memRegion.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-  static inline void record_virtual_memory_split_reserved(void* addr, size_t size, size_t split) {\n+  static inline void record_virtual_memory_split_reserved(void* addr, size_t size, size_t split, MEMFLAGS flag, MEMFLAGS split_flag) {\n@@ -183,1 +183,1 @@\n-      VirtualMemoryTracker::split_reserved_region((address)addr, size, split);\n+      VirtualMemoryTracker::split_reserved_region((address)addr, size, split, flag, split_flag);\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -563,1 +563,1 @@\n-bool VirtualMemoryTracker::split_reserved_region(address addr, size_t size, size_t split) {\n+bool VirtualMemoryTracker::split_reserved_region(address addr, size_t size, size_t split, MEMFLAGS flag, MEMFLAGS split_flag) {\n@@ -579,2 +579,2 @@\n-  add_reserved_region(addr, split, original_stack, original_flags);\n-  add_reserved_region(addr + split, size - split, original_stack, original_flags);\n+  add_reserved_region(addr, split, original_stack, flag);\n+  add_reserved_region(addr + split, size - split, original_stack, split_flag);\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -393,1 +393,1 @@\n-  static bool split_reserved_region(address addr, size_t size, size_t split);\n+  static bool split_reserved_region(address addr, size_t size, size_t split, MEMFLAGS flag, MEMFLAGS split_flag);\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,6 @@\n+#if defined(TARGET_COMPILER_gcc)\n+#define HIDDEN __attribute__ ((visibility (\"hidden\")))\n+#else\n+#define HIDDEN\n+#endif\n+\n@@ -61,1 +67,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -66,1 +72,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -71,1 +77,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -76,1 +82,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -81,1 +87,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -86,1 +92,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -91,1 +97,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -96,1 +102,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -101,1 +107,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -108,1 +114,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -115,1 +121,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -122,1 +128,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -129,1 +135,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -136,1 +142,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -141,1 +147,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -146,1 +152,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -151,1 +157,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -156,1 +162,1 @@\n-  template<>\n+  template<> HIDDEN\n","filename":"src\/hotspot\/share\/oops\/accessBackend.cpp","additions":25,"deletions":19,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,3 +56,1 @@\n-  \/\/ Check whether an element of an arrayOop with the given type must be\n-  \/\/ aligned 0 mod 8.  The arrayOop itself must be aligned at least this\n-  \/\/ strongly.\n+  \/\/ Given a type, return true if elements of that type must be aligned to 64-bit.\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/oops\/objArrayOop.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,0 @@\n-  } else if (*((juint*)this) == badMetaWordVal) {\n-    st->print_cr(\"BAD META WORD\");\n@@ -61,2 +59,0 @@\n-  } else if (*((juint*)this) == badMetaWordVal) {\n-    st->print_cr(\"BAD META WORD\");\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -414,2 +414,0 @@\n-  } else if (*((juint*)this) == badMetaWordVal) {\n-    st->print_cr(\"BAD META WORD\");\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,4 @@\n-  DecoratorSet decorators = C2_READ_ACCESS | C2_CONTROL_DEPENDENT_LOAD | IN_HEAP | C2_ARRAY_COPY;\n+  \/\/ Pin the load: if this is an array load, it's going to be dependent on a condition that's not a range check for that\n+  \/\/ access. If that condition is replaced by an identical dominating one, then an unpinned load would risk floating\n+  \/\/ above runtime checks that guarantee it is within bounds.\n+  DecoratorSet decorators = C2_READ_ACCESS | C2_CONTROL_DEPENDENT_LOAD | IN_HEAP | C2_ARRAY_COPY | C2_UNKNOWN_CONTROL_LOAD;\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2011,1 +2011,1 @@\n-    if (cgr != nullptr && cgr->not_global_escape(obj_node())) {\n+    if (cgr != nullptr && cgr->can_eliminate_lock(this)) {\n@@ -2174,0 +2174,1 @@\n+        box->set_nested();\n@@ -2207,1 +2208,1 @@\n-    if (cgr != nullptr && cgr->not_global_escape(obj_node())) {\n+    if (cgr != nullptr && cgr->can_eliminate_lock(this)) {\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -424,0 +424,3 @@\n+\n+  static IfNode* make_with_same_profile(IfNode* if_node_profile, Node* ctrl, BoolNode* bol);\n+\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+#include \"opto\/locknode.hpp\"\n@@ -4874,0 +4875,2 @@\n+    AbstractLockNode* alock = locks.at(0);\n+    BoxLockNode* box = alock->box_node()->as_BoxLock();\n@@ -4878,0 +4881,13 @@\n+      BoxLockNode* this_box = lock->box_node()->as_BoxLock();\n+      if (this_box != box) {\n+        \/\/ Locking regions (BoxLock) could be Unbalanced here:\n+        \/\/  - its coarsened locks were eliminated in earlier\n+        \/\/    macro nodes elimination followed by loop unroll\n+        \/\/ Preserve Unbalanced status in such cases.\n+        if (!this_box->is_unbalanced()) {\n+          this_box->set_coarsened();\n+        }\n+        if (!box->is_unbalanced()) {\n+          box->set_coarsened();\n+        }\n+      }\n@@ -4955,0 +4971,32 @@\n+\/\/ Mark locking regions (identified by BoxLockNode) as unbalanced if\n+\/\/ locks coarsening optimization removed Lock\/Unlock nodes from them.\n+\/\/ Such regions become unbalanced because coarsening only removes part\n+\/\/ of Lock\/Unlock nodes in region. As result we can't execute other\n+\/\/ locks elimination optimizations which assume all code paths have\n+\/\/ corresponding pair of Lock\/Unlock nodes - they are balanced.\n+void Compile::mark_unbalanced_boxes() const {\n+  int count = coarsened_count();\n+  for (int i = 0; i < count; i++) {\n+    Node_List* locks_list = _coarsened_locks.at(i);\n+    uint size = locks_list->size();\n+    if (size > 0) {\n+      AbstractLockNode* alock = locks_list->at(0)->as_AbstractLock();\n+      BoxLockNode* box = alock->box_node()->as_BoxLock();\n+      if (alock->is_coarsened()) {\n+        \/\/ coarsened_locks_consistent(), which is called before this method, verifies\n+        \/\/ that the rest of Lock\/Unlock nodes on locks_list are also coarsened.\n+        assert(!box->is_eliminated(), \"regions with coarsened locks should not be marked as eliminated\");\n+        for (uint j = 1; j < size; j++) {\n+          assert(locks_list->at(j)->as_AbstractLock()->is_coarsened(), \"only coarsened locks are expected here\");\n+          BoxLockNode* this_box = locks_list->at(j)->as_AbstractLock()->box_node()->as_BoxLock();\n+          if (box != this_box) {\n+            assert(!this_box->is_eliminated(), \"regions with coarsened locks should not be marked as eliminated\");\n+            box->set_unbalanced();\n+            this_box->set_unbalanced();\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":48,"deletions":0,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -783,0 +783,1 @@\n+  void mark_unbalanced_boxes() const;\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"opto\/locknode.hpp\"\n@@ -2550,1 +2551,1 @@\n-          if (not_global_escape(alock->obj_node())) {\n+          if (can_eliminate_lock(alock)) {\n@@ -2883,0 +2884,15 @@\n+\/\/ Return true if locked object does not escape globally\n+\/\/ and locked code region (identified by BoxLockNode) is balanced:\n+\/\/ all compiled code paths have corresponding Lock\/Unlock pairs.\n+bool ConnectionGraph::can_eliminate_lock(AbstractLockNode* alock) {\n+  BoxLockNode* box = alock->box_node()->as_BoxLock();\n+  if (!box->is_unbalanced() && not_global_escape(alock->obj_node())) {\n+    if (EliminateNestedLocks) {\n+      \/\/ We can mark whole locking region as Local only when only\n+      \/\/ one object is used for locking.\n+      box->set_local();\n+    }\n+    return true;\n+  }\n+  return false;\n+}\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -115,0 +115,1 @@\n+class  AbstractLockNode;\n@@ -633,0 +634,2 @@\n+  bool can_eliminate_lock(AbstractLockNode* alock);\n+\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -457,0 +457,16 @@\n+IfNode* IfNode::make_with_same_profile(IfNode* if_node_profile, Node* ctrl, BoolNode* bol) {\n+  \/\/ Assert here that we only try to create a clone from an If node with the same profiling if that actually makes sense.\n+  \/\/ Some If node subtypes should not be cloned in this way. In theory, we should not clone BaseCountedLoopEndNodes.\n+  \/\/ But they can end up being used as normal If nodes when peeling a loop - they serve as zero-trip guard.\n+  \/\/ Allow them as well.\n+  assert(if_node_profile->Opcode() == Op_If || if_node_profile->is_RangeCheck()\n+         || if_node_profile->is_BaseCountedLoopEnd(), \"should not clone other nodes\");\n+  if (if_node_profile->is_RangeCheck()) {\n+    \/\/ RangeCheck nodes could be further optimized.\n+    return new RangeCheckNode(ctrl, bol, if_node_profile->_prob, if_node_profile->_fcnt);\n+  } else {\n+    \/\/ Not a RangeCheckNode? Fall back to IfNode.\n+    return new IfNode(ctrl, bol, if_node_profile->_prob, if_node_profile->_fcnt);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                                       _slot(slot), _is_eliminated(false) {\n+                                       _slot(slot), _kind(BoxLockNode::Regular) {\n@@ -54,1 +54,0 @@\n-\/\/-----------------------------hash--------------------------------------------\n@@ -56,1 +55,1 @@\n-  if (EliminateNestedLocks)\n+  if (EliminateNestedLocks) {\n@@ -58,1 +57,2 @@\n-  return Node::hash() + _slot + (_is_eliminated ? Compile::current()->fixed_slots() : 0);\n+  }\n+  return Node::hash() + _slot + (is_eliminated() ? Compile::current()->fixed_slots() : 0);\n@@ -61,1 +61,0 @@\n-\/\/------------------------------cmp--------------------------------------------\n@@ -63,1 +62,1 @@\n-  if (EliminateNestedLocks)\n+  if (EliminateNestedLocks) {\n@@ -65,0 +64,1 @@\n+  }\n@@ -66,1 +66,30 @@\n-  return bn._slot == _slot && bn._is_eliminated == _is_eliminated;\n+  return (bn._slot == _slot) && (bn.is_eliminated() == is_eliminated());\n+}\n+\n+Node* BoxLockNode::Identity(PhaseGVN* phase) {\n+  if (!EliminateNestedLocks && !this->is_eliminated()) {\n+    Node* n = phase->hash_find(this);\n+    if (n == nullptr || n == this) {\n+      return this;\n+    }\n+    BoxLockNode* old_box = n->as_BoxLock();\n+    \/\/ Set corresponding status (_kind) when commoning BoxLock nodes.\n+    if (this->_kind != old_box->_kind) {\n+      if (this->is_unbalanced()) {\n+        old_box->set_unbalanced();\n+      }\n+      if (!old_box->is_unbalanced()) {\n+        \/\/ Only Regular or Coarsened status should be here:\n+        \/\/ Nested and Local are set only when EliminateNestedLocks is on.\n+        if (old_box->is_regular()) {\n+          assert(this->is_coarsened(),\"unexpected kind: %s\", _kind_name[(int)this->_kind]);\n+          old_box->set_coarsened();\n+        } else {\n+          assert(this->is_regular(),\"unexpected kind: %s\", _kind_name[(int)this->_kind]);\n+          assert(old_box->is_coarsened(),\"unexpected kind: %s\", _kind_name[(int)old_box->_kind]);\n+        }\n+      }\n+    }\n+    return old_box;\n+  }\n+  return this;\n@@ -93,0 +122,3 @@\n+  if (is_unbalanced()) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/opto\/locknode.cpp","additions":39,"deletions":7,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+private:\n@@ -38,1 +39,28 @@\n-  bool _is_eliminated; \/\/ Associated locks were safely eliminated\n+  enum {\n+    Regular = 0,       \/\/ Normal locking region\n+    Local,             \/\/ EA found that local not escaping object is used for locking\n+    Nested,            \/\/ This region is inside other region which use the same object\n+    Coarsened,         \/\/ Some lock\/unlock in region were marked as coarsened\n+    Unbalanced,        \/\/ This region become unbalanced after coarsened lock\/unlock were eliminated\n+                       \/\/ or it is locking region from OSR when locking is done in Interpreter\n+    Eliminated         \/\/ All lock\/unlock in region were eliminated\n+  } _kind;\n+\n+#ifdef ASSERT\n+  const char* _kind_name[6] = {\n+   \"Regular\",\n+   \"Local\",\n+   \"Nested\",\n+   \"Coarsened\",\n+   \"Unbalanced\",\n+   \"Eliminated\"\n+  };\n+#endif\n+\n+  \/\/ Allowed transitions of _kind:\n+  \/\/   Regular -> Local, Nested, Coarsened\n+  \/\/   Local   -> Eliminated\n+  \/\/   Nested  -> Eliminated\n+  \/\/   Coarsened -> Local, Nested, Unbalanced\n+  \/\/ EA and nested lock elimination can overwrite Coarsened kind.\n+  \/\/ Also allow transition to the same kind.\n@@ -52,0 +80,1 @@\n+  virtual Node* Identity(PhaseGVN* phase);\n@@ -60,3 +89,32 @@\n-  bool is_eliminated() const { return _is_eliminated; }\n-  \/\/ mark lock as eliminated.\n-  void set_eliminated()      { _is_eliminated = true; }\n+  bool is_regular()    const { return _kind == Regular; }\n+  bool is_local()      const { return _kind == Local; }\n+  bool is_nested()     const { return _kind == Nested; }\n+  bool is_coarsened()  const { return _kind == Coarsened; }\n+  bool is_eliminated() const { return _kind == Eliminated; }\n+  bool is_unbalanced() const { return _kind == Unbalanced; }\n+\n+  void set_local()      {\n+    assert((_kind == Regular || _kind == Local || _kind == Coarsened),\n+           \"incorrect kind for Local transitioni: %s\", _kind_name[(int)_kind]);\n+    _kind = Local;\n+  }\n+  void set_nested()     {\n+    assert((_kind == Regular || _kind == Nested || _kind == Coarsened),\n+           \"incorrect kind for Nested transition: %s\", _kind_name[(int)_kind]);\n+    _kind = Nested;\n+  }\n+  void set_coarsened()  {\n+    assert((_kind == Regular || _kind == Coarsened),\n+           \"incorrect kind for Coarsened transition: %s\", _kind_name[(int)_kind]);\n+    _kind = Coarsened;\n+  }\n+  void set_eliminated() {\n+    assert((_kind == Local || _kind == Nested),\n+           \"incorrect kind for Eliminated transition: %s\", _kind_name[(int)_kind]);\n+    _kind = Eliminated;\n+  }\n+  void set_unbalanced() {\n+    assert((_kind == Coarsened || _kind == Unbalanced),\n+           \"incorrect kind for Unbalanced transition: %s\", _kind_name[(int)_kind]);\n+    _kind = Unbalanced;\n+  }\n","filename":"src\/hotspot\/share\/opto\/locknode.hpp","additions":63,"deletions":5,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+#include \"opto\/castnode.hpp\"\n+#include \"opto\/cfgnode.hpp\"\n@@ -34,1 +36,11 @@\n-\/\/================= Loop Unswitching =====================\n+\/\/ Loop Unswitching is a loop optimization to move an invariant, non-loop-exiting test in the loop body before the loop.\n+\/\/ Such a test is either always true or always false in all loop iterations and could therefore only be executed once.\n+\/\/ To achieve that, we duplicate the loop and change the original and cloned loop as follows:\n+\/\/ - Original loop -> true-path-loop:\n+\/\/        The true-path of the invariant, non-loop-exiting test in the original loop\n+\/\/        is kept while the false-path is killed. We call this unswitched loop version\n+\/\/        the true-path-loop.\n+\/\/ - Cloned loop -> false-path-loop:\n+\/\/        The false-path of the invariant, non-loop-exiting test in the cloned loop\n+\/\/        is kept while the true-path is killed. We call this unswitched loop version\n+\/\/        the false-path loop.\n@@ -36,16 +48,4 @@\n-\/\/ orig:                       transformed:\n-\/\/                               if (invariant-test) then\n-\/\/  predicates                     predicates\n-\/\/  loop                           loop\n-\/\/    stmt1                          stmt1\n-\/\/    if (invariant-test) then       stmt2\n-\/\/      stmt2                        stmt4\n-\/\/    else                         endloop\n-\/\/      stmt3                    else\n-\/\/    endif                        predicates [clone]\n-\/\/    stmt4                        loop [clone]\n-\/\/  endloop                          stmt1 [clone]\n-\/\/                                   stmt3\n-\/\/                                   stmt4 [clone]\n-\/\/                                 endloop\n-\/\/                               endif\n+\/\/ The invariant, non-loop-exiting test can now be moved before both loops (to only execute it once) and turned into a\n+\/\/ loop selector If node to select at runtime which unswitched loop version should be executed.\n+\/\/ - Loop selector true?  Execute the true-path-loop.\n+\/\/ - Loop selector false? Execute the false-path-loop.\n@@ -53,6 +53,40 @@\n-\/\/ Note: the \"else\" clause may be empty\n-\n-\/\/------------------------------policy_unswitching-----------------------------\n-\/\/ Return TRUE or FALSE if the loop should be unswitched\n-\/\/ (ie. clone loop with an invariant test that does not exit the loop)\n-bool IdealLoopTree::policy_unswitching( PhaseIdealLoop *phase ) const {\n+\/\/ Note that even though an invariant test that exits the loop could also be optimized with Loop Unswitching, it is more\n+\/\/ efficient to simply peel the loop which achieves the same result in a simpler manner (also see policy_peeling()).\n+\/\/\n+\/\/ The following graphs summarizes the Loop Unswitching optimization.\n+\/\/ We start with the original loop:\n+\/\/\n+\/\/                       [Predicates]\n+\/\/                            |\n+\/\/                       Original Loop\n+\/\/                         stmt1\n+\/\/                         if (invariant-test)\n+\/\/                           if-path\n+\/\/                         else\n+\/\/                           else-path\n+\/\/                         stmt2\n+\/\/                       Endloop\n+\/\/\n+\/\/\n+\/\/ which is unswitched into a true-path-loop and a false-path-loop together with a loop selector:\n+\/\/\n+\/\/\n+\/\/            [Initialized Assertion Predicates]\n+\/\/                            |\n+\/\/                 loop selector If (invariant-test)\n+\/\/                    \/                   \\\n+\/\/                true?                  false?\n+\/\/                \/                         \\\n+\/\/    [Cloned Parse Predicates]         [Cloned Parse Predicates]\n+\/\/    [Cloned Template                  [Cloned Template\n+\/\/     Assertion Predicates]             Assertion Predicates]\n+\/\/          |                                  |\n+\/\/    True-Path-Loop                    False-Path-Loop\n+\/\/      cloned stmt1                      cloned stmt1\n+\/\/      cloned if-path                    cloned else-path\n+\/\/      cloned stmt2                      cloned stmt2\n+\/\/    Endloop                           Endloop\n+\n+\n+\/\/ Return true if the loop should be unswitched or false otherwise.\n+bool IdealLoopTree::policy_unswitching(PhaseIdealLoop* phase) const {\n@@ -78,1 +112,1 @@\n-  if (phase->find_unswitching_candidate(this) == nullptr) {\n+  if (phase->find_unswitch_candidate(this) == nullptr) {\n@@ -86,7 +120,5 @@\n-\/\/------------------------------find_unswitching_candidate-----------------------------\n-\/\/ Find candidate \"if\" for unswitching\n-IfNode* PhaseIdealLoop::find_unswitching_candidate(const IdealLoopTree *loop) const {\n-\n-  \/\/ Find first invariant test that doesn't exit the loop\n-  LoopNode *head = loop->_head->as_Loop();\n-  IfNode* unswitch_iff = nullptr;\n+\/\/ Find an invariant test in the loop body that does not exit the loop. If multiple tests are found, we pick the first\n+\/\/ one in the loop body. Return the \"unswitch candidate\" If to apply Loop Unswitching on.\n+IfNode* PhaseIdealLoop::find_unswitch_candidate(const IdealLoopTree* loop) const {\n+  LoopNode* head = loop->_head->as_Loop();\n+  IfNode* unswitch_candidate = nullptr;\n@@ -105,1 +137,2 @@\n-              unswitch_iff = iff;\n+              assert(iff->Opcode() == Op_If || iff->is_RangeCheck() || iff->is_BaseCountedLoopEnd(), \"valid ifs\");\n+              unswitch_candidate = iff;\n@@ -113,1 +146,1 @@\n-  return unswitch_iff;\n+  return unswitch_candidate;\n@@ -116,8 +149,32 @@\n-\/\/------------------------------do_unswitching-----------------------------\n-\/\/ Clone loop with an invariant test (that does not exit) and\n-\/\/ insert a clone of the test that selects which version to\n-\/\/ execute.\n-void PhaseIdealLoop::do_unswitching(IdealLoopTree *loop, Node_List &old_new) {\n-  LoopNode* head = loop->_head->as_Loop();\n-  if (has_control_dependencies_from_predicates(head)) {\n-    return;\n+\/\/ This class creates an If node (i.e. loop selector) that selects if the true-path-loop or the false-path-loop should be\n+\/\/ executed at runtime. This is done by finding an invariant and non-loop-exiting unswitch candidate If node (guaranteed\n+\/\/ to exist at this point) to perform Loop Unswitching on.\n+class UnswitchedLoopSelector : public StackObj {\n+  PhaseIdealLoop* const _phase;\n+  IdealLoopTree* const _outer_loop;\n+  Node* const _original_loop_entry;\n+  IfNode* const _unswitch_candidate;\n+  IfNode* const _selector;\n+  IfTrueNode* const _true_path_loop_proj;\n+  IfFalseNode* const _false_path_loop_proj;\n+\n+  enum PathToLoop { TRUE_PATH, FALSE_PATH };\n+\n+ public:\n+  UnswitchedLoopSelector(IdealLoopTree* loop)\n+      : _phase(loop->_phase),\n+        _outer_loop(loop->skip_strip_mined()->_parent),\n+        _original_loop_entry(loop->_head->as_Loop()->skip_strip_mined()->in(LoopNode::EntryControl)),\n+        _unswitch_candidate(find_unswitch_candidate(loop)),\n+        _selector(create_selector_if()),\n+        _true_path_loop_proj(create_proj_to_loop(TRUE_PATH)->as_IfTrue()),\n+        _false_path_loop_proj(create_proj_to_loop(FALSE_PATH)->as_IfFalse()) {\n+  }\n+  NONCOPYABLE(UnswitchedLoopSelector);\n+\n+ private:\n+  IfNode* find_unswitch_candidate(IdealLoopTree* loop) {\n+    IfNode* unswitch_candidate = _phase->find_unswitch_candidate(loop);\n+    assert(unswitch_candidate != nullptr, \"guaranteed to exist by policy_unswitching\");\n+    assert(_phase->is_member(loop, unswitch_candidate), \"must be inside original loop\");\n+    return unswitch_candidate;\n@@ -126,3 +183,9 @@\n-  \/\/ Find first invariant test that doesn't exit the loop\n-  IfNode* unswitch_iff = find_unswitching_candidate((const IdealLoopTree *)loop);\n-  assert(unswitch_iff != nullptr, \"should be at least one\");\n+  IfNode* create_selector_if() const {\n+    const uint dom_depth = _phase->dom_depth(_original_loop_entry);\n+    _phase->igvn().rehash_node_delayed(_original_loop_entry);\n+    BoolNode* unswitch_candidate_bool = _unswitch_candidate->in(1)->as_Bool();\n+    IfNode* selector_if = IfNode::make_with_same_profile(_unswitch_candidate, _original_loop_entry,\n+                                                         unswitch_candidate_bool);\n+    _phase->register_node(selector_if, _outer_loop, _original_loop_entry, dom_depth);\n+    return selector_if;\n+  }\n@@ -130,4 +193,10 @@\n-#ifndef PRODUCT\n-  if (TraceLoopOpts) {\n-    tty->print(\"Unswitch   %d \", head->unswitch_count()+1);\n-    loop->dump_head();\n+  IfProjNode* create_proj_to_loop(const PathToLoop path_to_loop) {\n+    const uint dom_depth = _phase->dom_depth(_original_loop_entry);\n+    IfProjNode* proj_to_loop;\n+    if (path_to_loop == TRUE_PATH) {\n+      proj_to_loop = new IfTrueNode(_selector);\n+    } else {\n+      proj_to_loop = new IfFalseNode(_selector);\n+    }\n+    _phase->register_node(proj_to_loop, _outer_loop, _selector, dom_depth);\n+    return proj_to_loop;\n@@ -135,1 +204,0 @@\n-#endif\n@@ -137,1 +205,4 @@\n-  C->print_method(PHASE_BEFORE_LOOP_UNSWITCHING, 4, head);\n+ public:\n+  IfNode* unswitch_candidate() const {\n+    return _unswitch_candidate;\n+  }\n@@ -139,3 +210,2 @@\n-  \/\/ Need to revert back to normal loop\n-  if (head->is_CountedLoop() && !head->as_CountedLoop()->is_normal_loop()) {\n-    head->as_CountedLoop()->set_normal_loop();\n+  IfNode* selector() const {\n+    return _selector;\n@@ -144,3 +214,3 @@\n-  IfNode* invar_iff = create_slow_version_of_loop(loop, old_new, unswitch_iff, CloneIncludesStripMined);\n-  ProjNode* proj_true = invar_iff->proj_out(1);\n-  verify_fast_loop(head, proj_true);\n+  IfTrueNode* true_path_loop_proj() const {\n+    return _true_path_loop_proj;\n+  }\n@@ -148,5 +218,27 @@\n-  \/\/ Increment unswitch count\n-  LoopNode* head_clone = old_new[head->_idx]->as_Loop();\n-  int nct = head->unswitch_count() + 1;\n-  head->set_unswitch_count(nct);\n-  head_clone->set_unswitch_count(nct);\n+  IfFalseNode* false_path_loop_proj() const {\n+    return _false_path_loop_proj;\n+  }\n+};\n+\n+\/\/ Class to unswitch the original loop and create Predicates at the new unswitched loop versions. The newly cloned loop\n+\/\/ becomes the false-path-loop while original loop becomes the true-path-loop.\n+class OriginalLoop : public StackObj {\n+  LoopNode* const _loop_head; \/\/ OuterStripMinedLoopNode if loop strip mined, else just the loop head.\n+  IdealLoopTree* const _loop;\n+  Node_List& _old_new;\n+  PhaseIdealLoop* const _phase;\n+\n+ public:\n+  OriginalLoop(IdealLoopTree* loop, Node_List& old_new)\n+      : _loop_head(loop->_head->as_Loop()->skip_strip_mined()),\n+        _loop(loop),\n+        _old_new(old_new),\n+        _phase(loop->_phase) {}\n+  NONCOPYABLE(OriginalLoop);\n+\n+ private:\n+  void fix_loop_entries(IfProjNode* true_path_loop_entry, IfProjNode* false_path_loop_entry) {\n+    _phase->replace_loop_entry(_loop_head, true_path_loop_entry);\n+    LoopNode* false_path_loop_strip_mined_head = old_to_new(_loop_head)->as_Loop();\n+    _phase->replace_loop_entry(false_path_loop_strip_mined_head, false_path_loop_entry);\n+  }\n@@ -154,2 +246,3 @@\n-  \/\/ Hoist invariant casts out of each loop to the appropriate\n-  \/\/ control projection.\n+  Node* old_to_new(const Node* old) const {\n+    return _old_new[old->_idx];\n+  }\n@@ -157,21 +250,13 @@\n-  Node_List worklist;\n-  for (DUIterator_Fast imax, i = unswitch_iff->fast_outs(imax); i < imax; i++) {\n-    ProjNode* proj= unswitch_iff->fast_out(i)->as_Proj();\n-    \/\/ Copy to a worklist for easier manipulation\n-    for (DUIterator_Fast jmax, j = proj->fast_outs(jmax); j < jmax; j++) {\n-      Node* use = proj->fast_out(j);\n-      if (use->Opcode() == Op_CheckCastPP && loop->is_invariant(use->in(1))) {\n-        worklist.push(use);\n-      }\n-    }\n-    ProjNode* invar_proj = invar_iff->proj_out(proj->_con)->as_Proj();\n-    while (worklist.size() > 0) {\n-      Node* use = worklist.pop();\n-      Node* nuse = use->clone();\n-      nuse->set_req(0, invar_proj);\n-      _igvn.replace_input_of(use, 1, nuse);\n-      register_new_node(nuse, invar_proj);\n-      \/\/ Same for the clone\n-      Node* use_clone = old_new[use->_idx];\n-      _igvn.replace_input_of(use_clone, 1, nuse);\n-    }\n+#ifdef ASSERT\n+  void verify_unswitched_loop_versions(LoopNode* true_path_loop_head,\n+                                       const UnswitchedLoopSelector& unswitched_loop_selector) const {\n+    verify_unswitched_loop_version(true_path_loop_head, unswitched_loop_selector.true_path_loop_proj());\n+    verify_unswitched_loop_version(old_to_new(true_path_loop_head)->as_Loop(),\n+                                   unswitched_loop_selector.false_path_loop_proj());\n+  }\n+\n+  static void verify_unswitched_loop_version(LoopNode* loop_head, IfProjNode* loop_selector_if_proj) {\n+    Node* entry = loop_head->skip_strip_mined()->in(LoopNode::EntryControl);\n+    const Predicates predicates(entry);\n+    \/\/ When skipping all predicates, we should end up at 'loop_selector_if_proj'.\n+    assert(loop_selector_if_proj == predicates.entry(), \"should end up at loop selector If\");\n@@ -179,0 +264,1 @@\n+#endif \/\/ ASSERT\n@@ -180,3 +266,12 @@\n-  \/\/ Hardwire the control paths in the loops into if(true) and if(false)\n-  _igvn.rehash_node_delayed(unswitch_iff);\n-  dominated_by(proj_true->as_IfProj(), unswitch_iff);\n+  \/\/ Remove the unswitch candidate If nodes in both unswitched loop versions which are now dominated by the loop selector\n+  \/\/ If node. Keep the true-path-path in the true-path-loop and the false-path-path in the false-path-loop by setting\n+  \/\/ the bool input accordingly. The unswitch candidate If nodes are folded in the next IGVN round.\n+  void remove_unswitch_candidate_from_loops(const UnswitchedLoopSelector& unswitched_loop_selector) {\n+    IfNode* unswitching_candidate = unswitched_loop_selector.unswitch_candidate();\n+    _phase->igvn().rehash_node_delayed(unswitching_candidate);\n+    _phase->dominated_by(unswitched_loop_selector.true_path_loop_proj(), unswitching_candidate);\n+\n+    IfNode* unswitching_candidate_clone = _old_new[unswitching_candidate->_idx]->as_If();\n+    _phase->igvn().rehash_node_delayed(unswitching_candidate_clone);\n+    _phase->dominated_by(unswitched_loop_selector.false_path_loop_proj(), unswitching_candidate_clone);\n+  }\n@@ -184,4 +279,6 @@\n-  IfNode* unswitch_iff_clone = old_new[unswitch_iff->_idx]->as_If();\n-  _igvn.rehash_node_delayed(unswitch_iff_clone);\n-  ProjNode* proj_false = invar_iff->proj_out(0);\n-  dominated_by(proj_false->as_IfProj(), unswitch_iff_clone);\n+ public:\n+  \/\/ Unswitch the original loop on the invariant loop selector by creating a true-path-loop and a false-path-loop.\n+  \/\/ Remove the unswitch candidate If from both unswitched loop versions which are now covered by the loop selector If.\n+  void unswitch(const UnswitchedLoopSelector& unswitched_loop_selector) {\n+    _phase->clone_loop(_loop, _old_new, _phase->dom_depth(_loop_head),\n+                       PhaseIdealLoop::CloneIncludesStripMined, unswitched_loop_selector.selector());\n@@ -189,6 +286,14 @@\n-  \/\/ Reoptimize loops\n-  loop->record_for_igvn();\n-  for(int i = loop->_body.size() - 1; i >= 0 ; i--) {\n-    Node *n = loop->_body[i];\n-    Node *n_clone = old_new[n->_idx];\n-    _igvn._worklist.push(n_clone);\n+    \/\/ At this point, the selector If projections are the corresponding loop entries.\n+    \/\/ clone_parse_and_assertion_predicates_to_unswitched_loop() could clone additional predicates after the selector\n+    \/\/ If projections. The loop entries are updated accordingly.\n+    IfProjNode* true_path_loop_entry = unswitched_loop_selector.true_path_loop_proj();\n+    IfProjNode* false_path_loop_entry = unswitched_loop_selector.false_path_loop_proj();\n+    _phase->clone_parse_and_assertion_predicates_to_unswitched_loop(_loop, _old_new,\n+                                                                    true_path_loop_entry, false_path_loop_entry);\n+\n+    fix_loop_entries(true_path_loop_entry, false_path_loop_entry);\n+\n+    DEBUG_ONLY(verify_unswitched_loop_versions(_loop->_head->as_Loop(), unswitched_loop_selector);)\n+\n+    _phase->recompute_dom_depth();\n+    remove_unswitch_candidate_from_loops(unswitched_loop_selector);\n@@ -196,0 +301,1 @@\n+};\n@@ -197,5 +303,8 @@\n-#ifndef PRODUCT\n-  if (TraceLoopUnswitching) {\n-    tty->print_cr(\"Loop unswitching orig: %d @ %d  new: %d @ %d\",\n-                  head->_idx,                unswitch_iff->_idx,\n-                  old_new[head->_idx]->_idx, unswitch_iff_clone->_idx);\n+\/\/ See comments below file header for more information about Loop Unswitching.\n+void PhaseIdealLoop::do_unswitching(IdealLoopTree* loop, Node_List& old_new) {\n+  assert(LoopUnswitching, \"LoopUnswitching must be enabled\");\n+\n+  LoopNode* original_head = loop->_head->as_Loop();\n+  if (has_control_dependencies_from_predicates(original_head)) {\n+    NOT_PRODUCT(trace_loop_unswitching_impossible(original_head);)\n+    return;\n@@ -203,1 +312,0 @@\n-#endif\n@@ -205,1 +313,8 @@\n-  C->print_method(PHASE_AFTER_LOOP_UNSWITCHING, 4, head_clone);\n+  NOT_PRODUCT(trace_loop_unswitching_count(loop, original_head);)\n+  C->print_method(PHASE_BEFORE_LOOP_UNSWITCHING, 4, original_head);\n+\n+  revert_to_normal_loop(original_head);\n+\n+  const UnswitchedLoopSelector unswitched_loop_selector(loop);\n+  OriginalLoop original_loop(loop, old_new);\n+  original_loop.unswitch(unswitched_loop_selector);\n@@ -207,0 +322,8 @@\n+  hoist_invariant_check_casts(loop, old_new, unswitched_loop_selector);\n+  add_unswitched_loop_version_bodies_to_igvn(loop, old_new);\n+\n+  LoopNode* new_head = old_new[original_head->_idx]->as_Loop();\n+  increment_unswitch_counts(original_head, new_head);\n+\n+  NOT_PRODUCT(trace_loop_unswitching_result(unswitched_loop_selector, original_head, new_head);)\n+  C->print_method(PHASE_AFTER_LOOP_UNSWITCHING, 4, new_head);\n@@ -210,1 +333,1 @@\n-bool PhaseIdealLoop::has_control_dependencies_from_predicates(LoopNode* head) const {\n+bool PhaseIdealLoop::has_control_dependencies_from_predicates(LoopNode* head) {\n@@ -212,1 +335,1 @@\n-  Predicates predicates(entry);\n+  const Predicates predicates(entry);\n@@ -225,46 +348,6 @@\n-\/\/-------------------------create_slow_version_of_loop------------------------\n-\/\/ Create a slow version of the loop by cloning the loop\n-\/\/ and inserting an if to select fast-slow versions.\n-\/\/ Return the inserted if.\n-IfNode* PhaseIdealLoop::create_slow_version_of_loop(IdealLoopTree *loop,\n-                                                      Node_List &old_new,\n-                                                      IfNode* unswitch_iff,\n-                                                      CloneLoopMode mode) {\n-  LoopNode* head  = loop->_head->as_Loop();\n-  Node*     entry = head->skip_strip_mined()->in(LoopNode::EntryControl);\n-  _igvn.rehash_node_delayed(entry);\n-  IdealLoopTree* outer_loop = loop->_parent;\n-\n-  head->verify_strip_mined(1);\n-\n-  \/\/ Add test to new \"if\" outside of loop\n-  Node *bol   = unswitch_iff->in(1)->as_Bool();\n-  IfNode* iff = (unswitch_iff->Opcode() == Op_RangeCheck) ? new RangeCheckNode(entry, bol, unswitch_iff->_prob, unswitch_iff->_fcnt) :\n-    new IfNode(entry, bol, unswitch_iff->_prob, unswitch_iff->_fcnt);\n-  register_node(iff, outer_loop, entry, dom_depth(entry));\n-  IfProjNode* iffast = new IfTrueNode(iff);\n-  register_node(iffast, outer_loop, iff, dom_depth(iff));\n-  IfProjNode* ifslow = new IfFalseNode(iff);\n-  register_node(ifslow, outer_loop, iff, dom_depth(iff));\n-\n-  \/\/ Clone the loop body.  The clone becomes the slow loop.  The\n-  \/\/ original pre-header will (illegally) have 3 control users\n-  \/\/ (old & new loops & new if).\n-  clone_loop(loop, old_new, dom_depth(head->skip_strip_mined()), mode, iff);\n-  assert(old_new[head->_idx]->is_Loop(), \"\" );\n-\n-  \/\/ Fast (true) and Slow (false) control\n-  IfProjNode* iffast_pred = iffast;\n-  IfProjNode* ifslow_pred = ifslow;\n-  clone_parse_and_assertion_predicates_to_unswitched_loop(loop, old_new, iffast_pred, ifslow_pred);\n-\n-  Node* l = head->skip_strip_mined();\n-  _igvn.replace_input_of(l, LoopNode::EntryControl, iffast_pred);\n-  set_idom(l, iffast_pred, dom_depth(l));\n-  LoopNode* slow_l = old_new[head->_idx]->as_Loop()->skip_strip_mined();\n-  _igvn.replace_input_of(slow_l, LoopNode::EntryControl, ifslow_pred);\n-  set_idom(slow_l, ifslow_pred, dom_depth(l));\n-\n-  recompute_dom_depth();\n-\n-  return iff;\n+#ifndef PRODUCT\n+void PhaseIdealLoop::trace_loop_unswitching_impossible(const LoopNode* original_head) {\n+  if (TraceLoopUnswitching) {\n+    tty->print_cr(\"Loop Unswitching \\\"%d %s\\\" not possible due to control dependencies\",\n+                  original_head->_idx, original_head->Name());\n+  }\n@@ -273,14 +356,4 @@\n-#ifdef ASSERT\n-void PhaseIdealLoop::verify_fast_loop(LoopNode* head, const ProjNode* proj_true) const {\n-  assert(proj_true->is_IfTrue(), \"must be true projection\");\n-  Node* entry = head->skip_strip_mined()->in(LoopNode::EntryControl);\n-  Predicates predicates(entry);\n-  if (!predicates.has_any()) {\n-    \/\/ No Parse Predicate.\n-    Node* uniqc = proj_true->unique_ctrl_out();\n-    assert((uniqc == head && !head->is_strip_mined()) || (uniqc == head->in(LoopNode::EntryControl)\n-                                                          && head->is_strip_mined()), \"must hold by construction if no predicates\");\n-  } else {\n-    \/\/ There is at least one Parse Predicate. When skipping all predicates\/predicate blocks, we should end up\n-    \/\/ at 'proj_true'.\n-    assert(proj_true == predicates.entry(), \"must hold by construction if at least one Parse Predicate\");\n+void PhaseIdealLoop::trace_loop_unswitching_count(IdealLoopTree* loop, LoopNode* original_head) {\n+  if (TraceLoopOpts) {\n+    tty->print(\"Unswitch   %d \", original_head->unswitch_count() + 1);\n+    loop->dump_head();\n@@ -289,1 +362,69 @@\n-#endif \/\/ ASSERT\n+\n+void PhaseIdealLoop::trace_loop_unswitching_result(const UnswitchedLoopSelector& unswitched_loop_selector,\n+                                                   const LoopNode* original_head, const LoopNode* new_head) {\n+  if (TraceLoopUnswitching) {\n+    IfNode* unswitch_candidate = unswitched_loop_selector.unswitch_candidate();\n+    IfNode* loop_selector = unswitched_loop_selector.selector();\n+    tty->print_cr(\"Loop Unswitching:\");\n+    tty->print_cr(\"- Unswitch-Candidate-If: %d %s\", unswitch_candidate->_idx, unswitch_candidate->Name());\n+    tty->print_cr(\"- Loop-Selector-If: %d %s\", loop_selector->_idx, loop_selector->Name());\n+    tty->print_cr(\"- True-Path-Loop (=Orig): %d %s\", original_head->_idx, original_head->Name());\n+    tty->print_cr(\"- False-Path-Loop (=Clone): %d %s\", new_head->_idx, new_head->Name());\n+  }\n+}\n+#endif\n+\n+\/\/ When unswitching a counted loop, we need to convert it back to a normal loop since it's not a proper pre, main or,\n+\/\/ post loop anymore after loop unswitching.\n+void PhaseIdealLoop::revert_to_normal_loop(const LoopNode* loop_head) {\n+  CountedLoopNode* cl = loop_head->isa_CountedLoop();\n+  if (cl != nullptr && !cl->is_normal_loop()) {\n+    cl->set_normal_loop();\n+  }\n+}\n+\n+\/\/ Hoist invariant CheckCastPPNodes out of each unswitched loop version to the appropriate loop selector If projection.\n+void PhaseIdealLoop::hoist_invariant_check_casts(const IdealLoopTree* loop, const Node_List& old_new,\n+                                                 const UnswitchedLoopSelector& unswitched_loop_selector) {\n+  IfNode* unswitch_candidate = unswitched_loop_selector.unswitch_candidate();\n+  IfNode* loop_selector = unswitched_loop_selector.selector();\n+  ResourceMark rm;\n+  GrowableArray<CheckCastPPNode*> loop_invariant_check_casts;\n+  for (DUIterator_Fast imax, i = unswitch_candidate->fast_outs(imax); i < imax; i++) {\n+    IfProjNode* proj = unswitch_candidate->fast_out(i)->as_IfProj();\n+    \/\/ Copy to a worklist for easier manipulation\n+    for (DUIterator_Fast jmax, j = proj->fast_outs(jmax); j < jmax; j++) {\n+      CheckCastPPNode* check_cast = proj->fast_out(j)->isa_CheckCastPP();\n+      if (check_cast != nullptr && loop->is_invariant(check_cast->in(1))) {\n+        loop_invariant_check_casts.push(check_cast);\n+      }\n+    }\n+    IfProjNode* loop_selector_if_proj = loop_selector->proj_out(proj->_con)->as_IfProj();\n+    while (loop_invariant_check_casts.length() > 0) {\n+      CheckCastPPNode* cast = loop_invariant_check_casts.pop();\n+      Node* cast_clone = cast->clone();\n+      cast_clone->set_req(0, loop_selector_if_proj);\n+      _igvn.replace_input_of(cast, 1, cast_clone);\n+      register_new_node(cast_clone, loop_selector_if_proj);\n+      \/\/ Same for the clone\n+      Node* use_clone = old_new[cast->_idx];\n+      _igvn.replace_input_of(use_clone, 1, cast_clone);\n+    }\n+  }\n+}\n+\n+\/\/ Enable more optimizations possibilities in the next IGVN round.\n+void PhaseIdealLoop::add_unswitched_loop_version_bodies_to_igvn(IdealLoopTree* loop, const Node_List& old_new) {\n+  loop->record_for_igvn();\n+  for(int i = loop->_body.size() - 1; i >= 0 ; i--) {\n+    Node* n = loop->_body[i];\n+    Node* n_clone = old_new[n->_idx];\n+    _igvn._worklist.push(n_clone);\n+  }\n+}\n+\n+void PhaseIdealLoop::increment_unswitch_counts(LoopNode* original_head, LoopNode* new_head) {\n+  const int unswitch_count = original_head->unswitch_count() + 1;\n+  original_head->set_unswitch_count(unswitch_count);\n+  new_head->set_unswitch_count(unswitch_count);\n+}\n","filename":"src\/hotspot\/share\/opto\/loopUnswitch.cpp","additions":308,"deletions":167,"binary":false,"changes":475,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+class UnswitchedLoopSelector;\n@@ -773,0 +774,6 @@\n+  \/\/ Return the parent's IdealLoopTree for a strip mined loop which is the outer strip mined loop.\n+  \/\/ In all other cases, return this.\n+  IdealLoopTree* skip_strip_mined() {\n+    return _head->as_Loop()->is_strip_mined() ? _parent : this;\n+  }\n+\n@@ -1352,0 +1359,5 @@\n+  void replace_loop_entry(LoopNode* loop_head, Node* new_entry) {\n+    _igvn.replace_input_of(loop_head, LoopNode::EntryControl, new_entry);\n+    set_idom(loop_head, new_entry, dom_depth(new_entry));\n+  }\n+\n@@ -1391,2 +1403,0 @@\n-  bool has_control_dependencies_from_predicates(LoopNode* head) const;\n-  void verify_fast_loop(LoopNode* head, const ProjNode* proj_true) const NOT_DEBUG_RETURN;\n@@ -1407,8 +1417,0 @@\n-  \/\/ Create a slow version of the loop by cloning the loop\n-  \/\/ and inserting an if to select fast-slow versions.\n-  \/\/ Return the inserted if.\n-  IfNode* create_slow_version_of_loop(IdealLoopTree *loop,\n-                                        Node_List &old_new,\n-                                        IfNode* unswitch_iff,\n-                                        CloneLoopMode mode);\n-\n@@ -1418,1 +1420,19 @@\n-  void do_unswitching (IdealLoopTree *loop, Node_List &old_new);\n+  void do_unswitching(IdealLoopTree* loop, Node_List& old_new);\n+\n+  IfNode* find_unswitch_candidate(const IdealLoopTree* loop) const;\n+\n+ private:\n+  static bool has_control_dependencies_from_predicates(LoopNode* head);\n+  static void revert_to_normal_loop(const LoopNode* loop_head);\n+\n+  void hoist_invariant_check_casts(const IdealLoopTree* loop, const Node_List& old_new,\n+                                   const UnswitchedLoopSelector& unswitched_loop_selector);\n+  void add_unswitched_loop_version_bodies_to_igvn(IdealLoopTree* loop, const Node_List& old_new);\n+  static void increment_unswitch_counts(LoopNode* original_head, LoopNode* new_head);\n+  void remove_unswitch_candidate_from_loops(const Node_List& old_new, const UnswitchedLoopSelector& unswitched_loop_selector);\n+#ifndef PRODUCT\n+  static void trace_loop_unswitching_count(IdealLoopTree* loop, LoopNode* original_head);\n+  static void trace_loop_unswitching_impossible(const LoopNode* original_head);\n+  static void trace_loop_unswitching_result(const UnswitchedLoopSelector& unswitched_loop_selector,\n+                                            const LoopNode* original_head, const LoopNode* new_head);\n+#endif\n@@ -1420,2 +1440,1 @@\n-  \/\/ Find candidate \"if\" for unswitching\n-  IfNode* find_unswitching_candidate(const IdealLoopTree *loop) const;\n+ public:\n@@ -1628,0 +1647,1 @@\n+ public:\n@@ -1631,0 +1651,1 @@\n+ private:\n@@ -1747,0 +1768,2 @@\n+\n+  void pin_array_access_nodes_dependent_on(Node* ctrl);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":36,"deletions":13,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -574,2 +574,2 @@\n-  \/\/ but not if I2 is a constant.\n-  if (n_op == Op_AddP) {\n+  \/\/ but not if I2 is a constant. Skip for irreducible loops.\n+  if (n_op == Op_AddP && n_loop->_head->is_Loop()) {\n@@ -1493,1 +1493,10 @@\n-          dominated_by(prevdom->as_IfProj(), n->as_If());\n+          \/\/ Split if: pin array accesses that are control dependent on a range check and moved to a regular if,\n+          \/\/ to prevent an array load from floating above its range check. There are three cases:\n+          \/\/ 1. Move from RangeCheck \"a\" to RangeCheck \"b\": don't need to pin. If we ever remove b, then we pin\n+          \/\/    all its array accesses at that point.\n+          \/\/ 2. We move from RangeCheck \"a\" to regular if \"b\": need to pin. If we ever remove b, then its array\n+          \/\/    accesses would start to float, since we don't pin at that point.\n+          \/\/ 3. If we move from regular if: don't pin. All array accesses are already assumed to be pinned.\n+          bool pin_array_access_nodes =  n->Opcode() == Op_RangeCheck &&\n+                                         prevdom->in(0)->Opcode() != Op_RangeCheck;\n+          dominated_by(prevdom->as_IfProj(), n->as_If(), false, pin_array_access_nodes);\n@@ -1667,1 +1676,14 @@\n-        _igvn.replace_input_of(n, 0, place_outside_loop(n_ctrl, loop_ctrl));\n+        Node* maybe_pinned_n = n;\n+        Node* outside_ctrl = place_outside_loop(n_ctrl, loop_ctrl);\n+        if (n->depends_only_on_test()) {\n+          Node* pinned_clone = n->pin_array_access_node();\n+          if (pinned_clone != nullptr) {\n+            \/\/ Pin array access nodes: if this is an array load, it's going to be dependent on a condition that's not a\n+            \/\/ range check for that access. If that condition is replaced by an identical dominating one, then an\n+            \/\/ unpinned load would risk floating above its range check.\n+            register_new_node(pinned_clone, n_ctrl);\n+            maybe_pinned_n = pinned_clone;\n+            _igvn.replace_node(n, pinned_clone);\n+          }\n+        }\n+        _igvn.replace_input_of(maybe_pinned_n, 0, outside_ctrl);\n@@ -1681,1 +1703,10 @@\n-          Node* x = n->clone(); \/\/ Clone computation\n+          Node* x = nullptr;\n+          if (n->depends_only_on_test()) {\n+            \/\/ Pin array access nodes: if this is an array load, it's going to be dependent on a condition that's not a\n+            \/\/ range check for that access. If that condition is replaced by an identical dominating one, then an\n+            \/\/ unpinned load would risk floating above its range check.\n+            x = n->pin_array_access_node();\n+          }\n+          if (x == nullptr) {\n+            x = n->clone();\n+          }\n@@ -2231,0 +2262,14 @@\n+      if (idx == 0 &&\n+          use->depends_only_on_test()) {\n+        Node* pinned_clone = use->pin_array_access_node();\n+        if (pinned_clone != nullptr) {\n+          \/\/ Pin array access nodes: control is updated here to a region. If, after some transformations, only one path\n+          \/\/ into the region is left, an array load could become dependent on a condition that's not a range check for\n+          \/\/ that access. If that condition is replaced by an identical dominating one, then an unpinned load would risk\n+          \/\/ floating above its range check.\n+          pinned_clone->set_req(0, phi);\n+          register_new_node(pinned_clone, get_ctrl(use));\n+          _igvn.replace_node(use, pinned_clone);\n+          continue;\n+        }\n+      }\n@@ -2870,2 +2915,1 @@\n-  IfNode* new_if = (opcode == Op_If) ? new IfNode(proj2, bol, iff->_prob, iff->_fcnt):\n-    new RangeCheckNode(proj2, bol, iff->_prob, iff->_fcnt);\n+  IfNode* new_if = IfNode::make_with_same_profile(iff, proj2, bol);\n@@ -3866,0 +3910,13 @@\n+      if (n_clone->depends_only_on_test()) {\n+        \/\/ Pin array access nodes: control is updated here to the loop head. If, after some transformations, the\n+        \/\/ backedge is removed, an array load could become dependent on a condition that's not a range check for that\n+        \/\/ access. If that condition is replaced by an identical dominating one, then an unpinned load would risk\n+        \/\/ floating above its range check.\n+        Node* pinned_clone = n_clone->pin_array_access_node();\n+        if (pinned_clone != nullptr) {\n+          register_new_node(pinned_clone, get_ctrl(n_clone));\n+          old_new.map(n->_idx, pinned_clone);\n+          _igvn.replace_node(n_clone, pinned_clone);\n+          n_clone = pinned_clone;\n+        }\n+      }\n@@ -4196,1 +4253,2 @@\n-  fix_data_uses(wq, loop, ControlAroundStripMined, head->is_strip_mined() ? loop->_parent : loop, new_counter, old_new, worklist, split_if_set, split_bool_set, split_cex_set);\n+  fix_data_uses(wq, loop, ControlAroundStripMined, loop->skip_strip_mined(), new_counter, old_new, worklist,\n+                split_if_set, split_bool_set, split_cex_set);\n@@ -4235,1 +4293,6 @@\n-  SuperWord sw(vloop, vshared);\n+  const VLoopAnalyzer vloop_analyzer(vloop, vshared);\n+  if (!vloop_analyzer.success()) {\n+    return AutoVectorizeStatus::TriedAndFailed;\n+  }\n+\n+  SuperWord sw(vloop_analyzer);\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":73,"deletions":10,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -1948,2 +1948,3 @@\n-void PhaseMacroExpand::mark_eliminated_box(Node* oldbox, Node* obj) {\n-  if (oldbox->as_BoxLock()->is_eliminated()) {\n+void PhaseMacroExpand::mark_eliminated_box(Node* box, Node* obj) {\n+  BoxLockNode* oldbox = box->as_BoxLock();\n+  if (oldbox->is_eliminated()) {\n@@ -1952,0 +1953,1 @@\n+  assert(!oldbox->is_unbalanced(), \"this should not be called for unbalanced region\");\n@@ -1959,0 +1961,1 @@\n+    oldbox->set_local();      \/\/ This verifies correct state of BoxLock\n@@ -1960,1 +1963,1 @@\n-    oldbox->as_BoxLock()->set_eliminated(); \/\/ This changes box's hash value\n+    oldbox->set_eliminated(); \/\/ This changes box's hash value\n@@ -1987,0 +1990,1 @@\n+  newbox->set_local(); \/\/ This verifies correct state of BoxLock\n@@ -2042,0 +2046,3 @@\n+  if (alock->box_node()->as_BoxLock()->is_unbalanced()) {\n+    return; \/\/ Can't do any more elimination for this locking region\n+  }\n@@ -2358,0 +2365,5 @@\n+  } else {\n+    \/\/ After coarsened locks are eliminated locking regions\n+    \/\/ become unbalanced. We should not execute any more\n+    \/\/ locks elimination optimizations on them.\n+    C->mark_unbalanced_boxes();\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3425,0 +3425,1 @@\n+          assert(!trailing_load_store(), \"load store node can't be eliminated\");\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -730,0 +730,8 @@\n+  if (iff->Opcode() == Op_RangeCheck) {\n+    \/\/ Pin array access nodes: control is updated here to a region. If, after some transformations, only one path\n+    \/\/ into the region is left, an array load could become dependent on a condition that's not a range check for\n+    \/\/ that access. If that condition is replaced by an identical dominating one, then an unpinned load would risk\n+    \/\/ floating above its range check.\n+    pin_array_access_nodes_dependent_on(new_true);\n+    pin_array_access_nodes_dependent_on(new_false);\n+  }\n@@ -740,0 +748,15 @@\n+\n+void PhaseIdealLoop::pin_array_access_nodes_dependent_on(Node* ctrl) {\n+  for (DUIterator i = ctrl->outs(); ctrl->has_out(i); i++) {\n+    Node* use = ctrl->out(i);\n+    if (!use->depends_only_on_test()) {\n+      continue;\n+    }\n+    Node* pinned_clone = use->pin_array_access_node();\n+    if (pinned_clone != nullptr) {\n+      register_new_node(pinned_clone, get_ctrl(use));\n+      _igvn.replace_node(use, pinned_clone);\n+      --i;\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -41,2 +41,3 @@\n-SuperWord::SuperWord(const VLoop &vloop, VSharedData &vshared) :\n-  _vloop(vloop),\n+SuperWord::SuperWord(const VLoopAnalyzer &vloop_analyzer) :\n+  _vloop_analyzer(vloop_analyzer),\n+  _vloop(vloop_analyzer.vloop()),\n@@ -45,5 +46,1 @@\n-  _bb_idx(vshared.node_idx_to_loop_body_idx()),             \/\/ node idx to index in bb\n-  _block(arena(), vloop.estimated_body_length(), 0, nullptr), \/\/ nodes in current block\n-  _mem_slice_head(arena(), 8,  0, nullptr),                 \/\/ memory slice heads\n-  _mem_slice_tail(arena(), 8,  0, nullptr),                 \/\/ memory slice tails\n-  _node_info(arena(), vloop.estimated_body_length(), 0, SWNodeInfo::initial), \/\/ info needed per node\n+  _node_info(arena(), _vloop.estimated_body_length(), 0, SWNodeInfo::initial), \/\/ info needed per node\n@@ -53,2 +50,0 @@\n-  _nlist(arena(), vloop.estimated_body_length(), 0, nullptr), \/\/ scratch list of nodes\n-  _loop_reductions(arena()),                                \/\/ reduction nodes in the current loop\n@@ -258,1 +253,1 @@\n-bool SuperWord::is_reduction(const Node* n) {\n+bool VLoopReductions::is_reduction(const Node* n) {\n@@ -272,1 +267,1 @@\n-bool SuperWord::is_reduction_operator(const Node* n) {\n+bool VLoopReductions::is_reduction_operator(const Node* n) {\n@@ -277,1 +272,1 @@\n-bool SuperWord::in_reduction_cycle(const Node* n, uint input) {\n+bool VLoopReductions::in_reduction_cycle(const Node* n, uint input) {\n@@ -294,1 +289,1 @@\n-Node* SuperWord::original_input(const Node* n, uint i) {\n+Node* VLoopReductions::original_input(const Node* n, uint i) {\n@@ -306,3 +301,3 @@\n-void SuperWord::mark_reductions() {\n-\n-  _loop_reductions.clear();\n+void VLoopReductions::mark_reductions() {\n+  assert(_loop_reductions.is_empty(), \"must not yet be computed\");\n+  CountedLoopNode* cl = _vloop.cl();\n@@ -312,2 +307,2 @@\n-  for (DUIterator_Fast imax, i = cl()->fast_outs(imax); i < imax; i++) {\n-    const Node* phi = cl()->fast_out(i);\n+  for (DUIterator_Fast imax, i = cl->fast_outs(imax); i < imax; i++) {\n+    const Node* phi = cl->fast_out(i);\n@@ -320,1 +315,1 @@\n-    if (phi == iv()) {\n+    if (phi == _vloop.iv()) {\n@@ -344,2 +339,3 @@\n-          first, input, lpt()->_body.size(),\n-          [&](const Node* n) { return n->Opcode() == first->Opcode() && in_bb(n); },\n+          first, input, _vloop.lpt()->_body.size(),\n+          [&](const Node* n) { return n->Opcode() == first->Opcode() &&\n+                                      _vloop.in_bb(n); },\n@@ -364,1 +360,1 @@\n-        if (!in_bb(u)) {\n+        if (!_vloop.in_bb(u)) {\n@@ -402,10 +398,0 @@\n-  \/\/ Skip any loop that has not been assigned max unroll by analysis\n-  if (SuperWordLoopUnrollAnalysis && vloop().cl()->slp_max_unroll() == 0) {\n-#ifndef PRODUCT\n-    if (is_trace_superword_any()) {\n-      tty->print_cr(\"\\nSuperWord::transform_loop failed: slp max unroll analysis was not already done\");\n-    }\n-#endif\n-    return false;\n-  }\n-\n@@ -466,29 +452,0 @@\n-  if (SuperWordReductions) {\n-    mark_reductions();\n-  }\n-\n-  \/\/ Find memory slices\n-  find_memory_slices();\n-\n-  if (!is_marked_reduction_loop() &&\n-      _mem_slice_head.is_empty()) {\n-#ifndef PRODUCT\n-    if (is_trace_superword_any()) {\n-      tty->print_cr(\"\\nNo reductions or memory slices found, abort SuperWord.\");\n-      tty->cr();\n-    }\n-#endif\n-    return false;\n-  }\n-\n-  \/\/ Ready the block\n-  if (!construct_bb()) {\n-#ifndef PRODUCT\n-    if (is_trace_superword_any()) {\n-      tty->print_cr(\"\\nSuperWord::construct_bb failed: abort SuperWord\");\n-      tty->cr();\n-    }\n-#endif\n-    return false;\n-  }\n-\n@@ -504,3 +461,0 @@\n-  \/\/ Compute vector element types\n-  compute_vector_element_type();\n-\n@@ -549,2 +503,2 @@\n-  for (int i = 0; i < _block.length(); i++) {\n-    Node* n = _block.at(i);\n+  for (int i = 0; i < body().length(); i++) {\n+    Node* n = body().at(i);\n@@ -583,1 +537,1 @@\n-    VPointer align_to_ref_p(mem_ref, vloop());\n+    VPointer align_to_ref_p(mem_ref, _vloop);\n@@ -589,1 +543,1 @@\n-        VPointer p2(s, vloop());\n+        VPointer p2(s, _vloop);\n@@ -648,1 +602,1 @@\n-    VPointer p1(s1, vloop());\n+    VPointer p1(s1, _vloop);\n@@ -652,1 +606,1 @@\n-        VPointer p2(s2, vloop());\n+        VPointer p2(s2, _vloop);\n@@ -673,1 +627,1 @@\n-      VPointer p(s, vloop());\n+      VPointer p(s, _vloop);\n@@ -696,1 +650,1 @@\n-        VPointer p(s, vloop());\n+        VPointer p(s, _vloop);\n@@ -769,1 +723,1 @@\n-  VPointer align_to_ref_p(mem_ref, vloop());\n+  VPointer align_to_ref_p(mem_ref, _vloop);\n@@ -807,2 +761,2 @@\n-  for (int i = 0; i < _block.length(); i++ ) {\n-    Node *n = _block.at(i);\n+  for (int i = 0; i < body().length(); i++ ) {\n+    Node* n = body().at(i);\n@@ -814,0 +768,6 @@\n+  const GrowableArray<PhiNode*>& mem_slice_head = _vloop_analyzer.memory_slices().heads();\n+  const GrowableArray<MemNode*>& mem_slice_tail = _vloop_analyzer.memory_slices().tails();\n+\n+  ResourceMark rm;\n+  GrowableArray<Node*> slice_nodes;\n+\n@@ -815,3 +775,3 @@\n-  for (int i = 0; i < _mem_slice_head.length(); i++) {\n-    Node* n      = _mem_slice_head.at(i);\n-    Node* n_tail = _mem_slice_tail.at(i);\n+  for (int i = 0; i < mem_slice_head.length(); i++) {\n+    PhiNode* head = mem_slice_head.at(i);\n+    MemNode* tail = mem_slice_tail.at(i);\n@@ -820,1 +780,1 @@\n-    mem_slice_preds(n_tail, n, _nlist);\n+    _vloop_analyzer.memory_slices().get_slice_in_reverse_order(head, tail, slice_nodes);\n@@ -823,1 +783,1 @@\n-    DepMem* slice = _dg.dep(n);\n+    DepMem* slice = _dg.dep(head);\n@@ -831,2 +791,2 @@\n-    for (int j = _nlist.length() - 1; j >= 0 ; j--) {\n-      Node* s1 = _nlist.at(j);\n+    for (int j = slice_nodes.length() - 1; j >= 0 ; j--) {\n+      Node* s1 = slice_nodes.at(j);\n@@ -838,1 +798,1 @@\n-      VPointer p1(s1->as_Mem(), vloop());\n+      VPointer p1(s1->as_Mem(), _vloop);\n@@ -841,1 +801,1 @@\n-        Node* s2 = _nlist.at(k);\n+        Node* s2 = slice_nodes.at(k);\n@@ -844,1 +804,1 @@\n-        VPointer p2(s2->as_Mem(), vloop());\n+        VPointer p2(s2->as_Mem(), _vloop);\n@@ -860,3 +820,3 @@\n-      tty->print_cr(\"\\nDependence graph for slice: %d\", n->_idx);\n-      for (int q = 0; q < _nlist.length(); q++) {\n-        _dg.print(_nlist.at(q));\n+      tty->print_cr(\"\\nDependence graph for slice: %d\", head->_idx);\n+      for (int q = 0; q < slice_nodes.length(); q++) {\n+        _dg.print(slice_nodes.at(q));\n@@ -868,1 +828,1 @@\n-    _nlist.clear();\n+    slice_nodes.clear();\n@@ -872,3 +832,4 @@\n-void SuperWord::find_memory_slices() {\n-  assert(_mem_slice_head.length() == 0, \"mem_slice_head is empty\");\n-  assert(_mem_slice_tail.length() == 0, \"mem_slice_tail is empty\");\n+void VLoopMemorySlices::find_memory_slices() {\n+  assert(_heads.is_empty(), \"not yet computed\");\n+  assert(_tails.is_empty(), \"not yet computed\");\n+  CountedLoopNode* cl = _vloop.cl();\n@@ -877,3 +838,3 @@\n-  for (DUIterator_Fast imax, i = cl()->fast_outs(imax); i < imax; i++) {\n-    PhiNode* phi = cl()->fast_out(i)->isa_Phi();\n-    if (phi != nullptr && in_bb(phi) && phi->is_memory_phi()) {\n+  for (DUIterator_Fast imax, i = cl->fast_outs(imax); i < imax; i++) {\n+    PhiNode* phi = cl->fast_out(i)->isa_Phi();\n+    if (phi != nullptr && _vloop.in_bb(phi) && phi->is_memory_phi()) {\n@@ -882,2 +843,2 @@\n-        _mem_slice_head.push(phi);\n-        _mem_slice_tail.push(phi_tail->as_Mem());\n+        _heads.push(phi);\n+        _tails.push(phi_tail->as_Mem());\n@@ -888,1 +849,1 @@\n-  NOT_PRODUCT( if (is_trace_superword_memory_slices()) { print_memory_slices(); } )\n+  NOT_PRODUCT( if (_vloop.is_trace_memory_slices()) { print(); } )\n@@ -892,6 +853,6 @@\n-void SuperWord::print_memory_slices() {\n-  tty->print_cr(\"\\nSuperWord::print_memory_slices: %s\",\n-                _mem_slice_head.length() > 0 ? \"\" : \"NONE\");\n-  for (int m = 0; m < _mem_slice_head.length(); m++) {\n-    tty->print(\"%6d \", m);  _mem_slice_head.at(m)->dump();\n-    tty->print(\"       \");  _mem_slice_tail.at(m)->dump();\n+void VLoopMemorySlices::print() const {\n+  tty->print_cr(\"\\nVLoopMemorySlices::print: %s\",\n+                heads().length() > 0 ? \"\" : \"NONE\");\n+  for (int m = 0; m < heads().length(); m++) {\n+    tty->print(\"%6d \", m);  heads().at(m)->dump();\n+    tty->print(\"       \");  tails().at(m)->dump();\n@@ -902,5 +863,4 @@\n-\/\/---------------------------mem_slice_preds---------------------------\n-\/\/ Return a memory slice (node list) in predecessor order starting at \"start\"\n-void SuperWord::mem_slice_preds(Node* start, Node* stop, GrowableArray<Node*> &preds) {\n-  assert(preds.length() == 0, \"start empty\");\n-  Node* n = start;\n+\/\/ Get all memory nodes of a slice, in reverse order\n+void VLoopMemorySlices::get_slice_in_reverse_order(PhiNode* head, MemNode* tail, GrowableArray<Node*> &slice) const {\n+  assert(slice.is_empty(), \"start empty\");\n+  Node* n = tail;\n@@ -909,1 +869,1 @@\n-    assert(in_bb(n), \"must be in block\");\n+    assert(_vloop.in_bb(n), \"must be in block\");\n@@ -913,2 +873,2 @@\n-        if (in_bb(out)) {\n-          preds.push(out);\n+        if (_vloop.in_bb(out)) {\n+          slice.push(out);\n@@ -918,1 +878,1 @@\n-        if (out->is_MergeMem() && !in_bb(out)) {\n+        if (out->is_MergeMem() && !_vloop.in_bb(out)) {\n@@ -921,1 +881,1 @@\n-        } else if (out->is_memory_phi() && !in_bb(out)) {\n+        } else if (out->is_memory_phi() && !_vloop.in_bb(out)) {\n@@ -931,2 +891,2 @@\n-    if (n == stop) break;\n-    preds.push(n);\n+    if (n == head) { break; }\n+    slice.push(n);\n@@ -939,5 +899,5 @@\n-  if (is_trace_superword_memory_slices()) {\n-    tty->print_cr(\"\\nSuperWord::mem_slice_preds:\");\n-    stop->dump();\n-    for (int j = preds.length() - 1; j >= 0 ; j--) {\n-      preds.at(j)->dump();\n+  if (_vloop.is_trace_memory_slices()) {\n+    tty->print_cr(\"\\nVLoopMemorySlices::get_slice_in_reverse_order:\");\n+    head->dump();\n+    for (int j = slice.length() - 1; j >= 0 ; j--) {\n+      slice.at(j)->dump();\n@@ -1014,2 +974,2 @@\n-  VPointer p1(s1->as_Mem(), vloop());\n-  VPointer p2(s2->as_Mem(), vloop());\n+  VPointer p1(s1->as_Mem(), _vloop);\n+  VPointer p2(s2->as_Mem(), _vloop);\n@@ -1137,15 +1097,9 @@\n-\/\/------------------------------reduction---------------------------\n-\/\/ Is there a data path between s1 and s2 and the nodes reductions?\n-bool SuperWord::reduction(Node* s1, Node* s2) {\n-  bool retValue = false;\n-  int d1 = depth(s1);\n-  int d2 = depth(s2);\n-  if (d2 > d1) {\n-    if (is_marked_reduction(s1) && is_marked_reduction(s2)) {\n-      \/\/ This is an ordered set, so s1 should define s2\n-      for (DUIterator_Fast imax, i = s1->fast_outs(imax); i < imax; i++) {\n-        Node* t1 = s1->fast_out(i);\n-        if (t1 == s2) {\n-          \/\/ both nodes are reductions and connected\n-          retValue = true;\n-        }\n+bool VLoopReductions::is_marked_reduction_pair(Node* s1, Node* s2) const {\n+  if (is_marked_reduction(s1) &&\n+      is_marked_reduction(s2)) {\n+    \/\/ This is an ordered set, so s1 should define s2\n+    for (DUIterator_Fast imax, i = s1->fast_outs(imax); i < imax; i++) {\n+      Node* t1 = s1->fast_out(i);\n+      if (t1 == s2) {\n+        \/\/ both nodes are reductions and connected\n+        return true;\n@@ -1155,2 +1109,1 @@\n-\n-  return retValue;\n+  return false;\n@@ -1169,7 +1122,0 @@\n-\/\/------------------------------data_size---------------------------\n-int SuperWord::data_size(Node* s) {\n-  int bsize = type2aelembytes(velt_basic_type(s));\n-  assert(bsize != 0, \"valid size\");\n-  return bsize;\n-}\n-\n@@ -1660,2 +1606,2 @@\n-  VPointer mem_ref_p(mem_ref, vloop());\n-  const CountedLoopEndNode* pre_end = vloop().pre_loop_end();\n+  VPointer mem_ref_p(mem_ref, _vloop);\n+  const CountedLoopEndNode* pre_end = _vloop.pre_loop_end();\n@@ -1926,1 +1872,1 @@\n-      \/\/ Unmark reduction if no parent pack or if not enough work\n+      \/\/ No parent pack or not enough work\n@@ -1928,1 +1874,0 @@\n-      _loop_reductions.remove(p0->_idx);\n@@ -2031,2 +1976,2 @@\n-  for (int i = 0; i < _block.length(); i++) {\n-    Node* n = _block.at(i);\n+  for (int i = 0; i < body().length(); i++) {\n+    Node* n = body().at(i);\n@@ -2115,3 +2060,3 @@\n-    const GrowableArray<Node_List*> &packset = _slp->packset();\n-    const GrowableArray<Node*> &block = _slp->block();\n-    const DepGraph &dg = _slp->dg();\n+    const GrowableArray<Node_List*>& packset = _slp->packset();\n+    const GrowableArray<Node*>& body = _slp->body();\n+    const DepGraph& dg = _slp->dg();\n@@ -2132,2 +2077,2 @@\n-    for (int i = 0; i < block.length(); i++) {\n-      Node* n = block.at(i);\n+    for (int i = 0; i < body.length(); i++) {\n+      Node* n = body.at(i);\n@@ -2160,1 +2105,1 @@\n-          \/\/ Only add edges once, and only for mapped nodes (in block)\n+          \/\/ Only add edges once, and only for mapped nodes (in body)\n@@ -2170,2 +2115,2 @@\n-    for (int i = 0; i < block.length(); i++) {\n-      Node* n = block.at(i);\n+    for (int i = 0; i < body.length(); i++) {\n+      Node* n = body.at(i);\n@@ -2179,1 +2124,1 @@\n-        \/\/ Only add edges for mapped nodes (in block)\n+        \/\/ Only add edges for mapped nodes (in body)\n@@ -2240,1 +2185,1 @@\n-    const GrowableArray<Node*> &block = _slp->block();\n+    const GrowableArray<Node*> &body = _slp->body();\n@@ -2253,2 +2198,2 @@\n-        for (int i = 0; i < block.length(); i++) {\n-          Node* n = block.at(i);\n+        for (int i = 0; i < body.length(); i++) {\n+          Node* n = body.at(i);\n@@ -2332,0 +2277,2 @@\n+  const GrowableArray<PhiNode*>& mem_slice_head = _vloop_analyzer.memory_slices().heads();\n+\n@@ -2333,2 +2280,2 @@\n-  for (int i = 0; i < _mem_slice_head.length(); i++) {\n-    Node* phi  = _mem_slice_head.at(i);\n+  for (int i = 0; i < mem_slice_head.length(); i++) {\n+    Node* phi  = mem_slice_head.at(i);\n@@ -2369,2 +2316,2 @@\n-  for (int i = 0; i < _mem_slice_head.length(); i++) {\n-    Node* phi  = _mem_slice_head.at(i);\n+  for (int i = 0; i < mem_slice_head.length(); i++) {\n+    Node* phi  = mem_slice_head.at(i);\n@@ -2432,2 +2379,2 @@\n-  for (int i = 0; i < _block.length(); i++) {\n-    Node* n = _block.at(i);\n+  for (int i = 0; i < body().length(); i++) {\n+    Node* n = body().at(i);\n@@ -2451,1 +2398,1 @@\n-          VPointer p_store(mem->as_Mem(), vloop());\n+          VPointer p_store(mem->as_Mem(), _vloop);\n@@ -2705,1 +2652,0 @@\n-      _block.at_put(i, vn);\n@@ -2722,1 +2668,1 @@\n-  }\/\/for (int i = 0; i < _block.length(); i++)\n+  }\/\/for (int i = 0; i < body().length(); i++)\n@@ -2986,4 +2932,3 @@\n-\/\/------------------------------construct_bb---------------------------\n-\/\/ Construct reverse postorder list of block members\n-bool SuperWord::construct_bb() {\n-  assert(_block.length() == 0,          \"block is empty\");\n+\/\/ Return nullptr if success, else failure message\n+VStatus VLoopBody::construct() {\n+  assert(_body.is_empty(), \"body is empty\");\n@@ -2995,3 +2940,3 @@\n-  int block_count = 0;\n-  for (uint i = 0; i < lpt()->_body.size(); i++) {\n-    Node* n = lpt()->_body.at(i);\n+  int body_count = 0;\n+  for (uint i = 0; i < _vloop.lpt()->_body.size(); i++) {\n+    Node* n = _vloop.lpt()->_body.at(i);\n@@ -2999,2 +2944,2 @@\n-    if (in_bb(n)) {\n-      block_count++;\n+    if (_vloop.in_bb(n)) {\n+      body_count++;\n@@ -3007,2 +2952,2 @@\n-        if (is_trace_superword_any()) {\n-          tty->print_cr(\"SuperWord::construct_bb: fails because of unhandled node:\");\n+        if (_vloop.is_trace_body()) {\n+          tty->print_cr(\"VLoopBody::construct: fails because of unhandled node:\");\n@@ -3012,1 +2957,1 @@\n-        return false;\n+        return VStatus::make_failure(VLoopBody::FAILURE_NODE_NOT_ALLOWED);\n@@ -3020,1 +2965,1 @@\n-          if (def != nullptr && in_bb(def)) {\n+          if (def != nullptr && _vloop.in_bb(def)) {\n@@ -3031,1 +2976,1 @@\n-  \/\/ Create a reverse-post-order list of nodes in block\n+  \/\/ Create a reverse-post-order list of nodes in body\n@@ -3037,2 +2982,2 @@\n-  visited.set(bb_idx(cl()));\n-  stack.push(cl());\n+  visited.set(bb_idx(_vloop.cl()));\n+  stack.push(_vloop.cl());\n@@ -3041,1 +2986,1 @@\n-  int rpo_idx = block_count - 1;\n+  int rpo_idx = body_count - 1;\n@@ -3051,1 +2996,1 @@\n-        if (in_bb(use) && !visited.test(bb_idx(use)) &&\n+        if (_vloop.in_bb(use) && !visited.test(bb_idx(use)) &&\n@@ -3053,1 +2998,1 @@\n-            (!use->is_Phi() || n == cl())) {\n+            (!use->is_Phi() || n == _vloop.cl())) {\n@@ -3061,1 +3006,1 @@\n-        _block.at_put_grow(rpo_idx, n);\n+        _body.at_put_grow(rpo_idx, n);\n@@ -3071,3 +3016,3 @@\n-  \/\/ Create real map of block indices for nodes\n-  for (int j = 0; j < _block.length(); j++) {\n-    Node* n = _block.at(j);\n+  \/\/ Create real map of body indices for nodes\n+  for (int j = 0; j < _body.length(); j++) {\n+    Node* n = _body.at(j);\n@@ -3078,2 +3023,2 @@\n-  if (is_trace_superword_info()) {\n-    print_bb();\n+  if (_vloop.is_trace_body()) {\n+    print();\n@@ -3083,2 +3028,2 @@\n-  assert(rpo_idx == -1 && block_count == _block.length(), \"all block members found\");\n-  return true;\n+  assert(rpo_idx == -1 && body_count == _body.length(), \"all body members found\");\n+  return VStatus::make_success();\n@@ -3089,1 +3034,1 @@\n-  Node* last = _block.at(_block.length() - 1);\n+  Node* last = body().at(body().length() - 1);\n@@ -3101,2 +3046,2 @@\n-    for (int i = 0; i < _block.length(); i++) {\n-      Node* n = _block.at(i);\n+    for (int i = 0; i < body().length(); i++) {\n+      Node* n = body().at(i);\n@@ -3177,8 +3122,1 @@\n-\/\/-------------------------compute_vector_element_type-----------------------\n-\/\/ Compute necessary vector element type for expressions\n-\/\/ This propagates backwards a narrower integer type when the\n-\/\/ upper bits of the value are not needed.\n-\/\/ Example:  char a,b,c;  a = b + c;\n-\/\/ Normally the type of the add is integer, but for packed character\n-\/\/ operations the type of the add needs to be char.\n-void SuperWord::compute_vector_element_type() {\n+void VLoopTypes::compute_vector_element_type() {\n@@ -3186,2 +3124,2 @@\n-  if (is_trace_superword_vector_element_type()) {\n-    tty->print_cr(\"\\ncompute_velt_type:\");\n+  if (_vloop.is_trace_vector_element_type()) {\n+    tty->print_cr(\"\\nVLoopTypes::compute_vector_element_type:\");\n@@ -3191,0 +3129,6 @@\n+  const GrowableArray<Node*>& body = _body.body();\n+\n+  assert(_velt_type.is_empty(), \"must not yet be computed\");\n+  \/\/ reserve space\n+  _velt_type.at_put_grow(body.length()-1, nullptr);\n+\n@@ -3192,2 +3136,2 @@\n-  for (int i = 0; i < _block.length(); i++) {\n-    Node* n = _block.at(i);\n+  for (int i = 0; i < body.length(); i++) {\n+    Node* n = body.at(i);\n@@ -3199,2 +3143,2 @@\n-  for (int i = _block.length() - 1; i >= 0; i--) {\n-    Node* n = _block.at(i);\n+  for (int i = body.length() - 1; i >= 0; i--) {\n+    Node* n = body.at(i);\n@@ -3210,1 +3154,3 @@\n-        if (!in->is_Mem() && in_bb(in) && velt_type(in)->basic_type() == T_INT &&\n+        if (!in->is_Mem() &&\n+            _vloop.in_bb(in) &&\n+            velt_type(in)->basic_type() == T_INT &&\n@@ -3215,1 +3161,1 @@\n-            if (!in_bb(use) || !same_velt_type(use, n)) {\n+            if (!_vloop.in_bb(use) || !same_velt_type(use, n)) {\n@@ -3232,1 +3178,3 @@\n-              if (load->is_Load() && in_bb(load) && (velt_type(load)->basic_type() == T_INT)) {\n+              if (load->is_Load() &&\n+                  _vloop.in_bb(load) &&\n+                  (velt_type(load)->basic_type() == T_INT)) {\n@@ -3248,2 +3196,2 @@\n-  for (int i = 0; i < _block.length(); i++) {\n-    Node* n = _block.at(i);\n+  for (int i = 0; i < body.length(); i++) {\n+    Node* n = body.at(i);\n@@ -3256,2 +3204,3 @@\n-      assert(in_bb(nn->in(1)) || in_bb(nn->in(2)), \"one of the inputs must be in the loop too\");\n-      if (in_bb(nn->in(1))) {\n+      assert(_vloop.in_bb(nn->in(1)) || _vloop.in_bb(nn->in(2)),\n+             \"one of the inputs must be in the loop, too\");\n+      if (_vloop.in_bb(nn->in(1))) {\n@@ -3265,3 +3214,3 @@\n-  if (is_trace_superword_vector_element_type()) {\n-    for (int i = 0; i < _block.length(); i++) {\n-      Node* n = _block.at(i);\n+  if (_vloop.is_trace_vector_element_type()) {\n+    for (int i = 0; i < body.length(); i++) {\n+      Node* n = body.at(i);\n@@ -3284,1 +3233,1 @@\n-  VPointer p(s, vloop());\n+  VPointer p(s, _vloop);\n@@ -3306,1 +3255,0 @@\n-\/\/---------------------------container_type---------------------------\n@@ -3308,1 +3256,1 @@\n-const Type* SuperWord::container_type(Node* n) {\n+const Type* VLoopTypes::container_type(Node* n) const {\n@@ -3325,1 +3273,1 @@\n-  const Type* t = igvn().type(n);\n+  const Type* t = _vloop.phase()->igvn().type(n);\n@@ -3334,12 +3282,3 @@\n-bool SuperWord::same_velt_type(Node* n1, Node* n2) {\n-  const Type* vt1 = velt_type(n1);\n-  const Type* vt2 = velt_type(n2);\n-  if (vt1->basic_type() == T_INT && vt2->basic_type() == T_INT) {\n-    \/\/ Compare vectors element sizes for integer types.\n-    return data_size(n1) == data_size(n2);\n-  }\n-  return vt1 == vt2;\n-}\n-\n-bool SuperWord::same_memory_slice(MemNode* best_align_to_mem_ref, MemNode* mem_ref) const {\n-  return phase()->C->get_alias_index(mem_ref->adr_type()) == phase()->C->get_alias_index(best_align_to_mem_ref->adr_type());\n+bool VLoopMemorySlices::same_memory_slice(MemNode* m1, MemNode* m2) const {\n+  return _vloop.phase()->C->get_alias_index(m1->adr_type()) ==\n+         _vloop.phase()->C->get_alias_index(m2->adr_type());\n@@ -3428,1 +3367,1 @@\n-  Opaque1Node* pre_opaq = vloop().pre_loop_end()->limit()->as_Opaque1();\n+  Opaque1Node* pre_opaq = _vloop.pre_loop_end()->limit()->as_Opaque1();\n@@ -3434,1 +3373,1 @@\n-  Node* pre_ctrl = vloop().pre_loop_head()->in(LoopNode::EntryControl);\n+  Node* pre_ctrl = _vloop.pre_loop_head()->in(LoopNode::EntryControl);\n@@ -3440,1 +3379,1 @@\n-  VPointer align_to_ref_p(align_to_ref, vloop());\n+  VPointer align_to_ref_p(align_to_ref, _vloop);\n@@ -3766,2 +3705,0 @@\n-\/\/------------------------------print_bb---------------------------\n-void SuperWord::print_bb() {\n@@ -3769,0 +3706,1 @@\n+void VLoopBody::print() const {\n@@ -3770,2 +3708,2 @@\n-  for (int i = 0; i < _block.length(); i++) {\n-    Node* n = _block.at(i);\n+  for (int i = 0; i < body().length(); i++) {\n+    Node* n = body().at(i);\n@@ -3773,1 +3711,1 @@\n-    if (n) {\n+    if (n != nullptr) {\n@@ -3777,1 +3715,0 @@\n-#endif\n@@ -3779,0 +3716,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":191,"deletions":253,"binary":false,"changes":444,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"utilities\/pair.hpp\"\n@@ -191,1 +190,0 @@\n-  const Type* _velt_type; \/\/ vector element type\n@@ -194,1 +192,1 @@\n-  SWNodeInfo() : _alignment(-1), _depth(0), _velt_type(nullptr), _my_pack(nullptr) {}\n+  SWNodeInfo() : _alignment(-1), _depth(0), _my_pack(nullptr) {}\n@@ -202,1 +200,2 @@\n-  const VLoop& _vloop;\n+  const VLoopAnalyzer& _vloop_analyzer;\n+  const VLoop&         _vloop;\n@@ -212,5 +211,0 @@\n-  GrowableArray<int> &_bb_idx;           \/\/ Map from Node _idx to index within block\n-\n-  GrowableArray<Node*> _block;           \/\/ Nodes in current block\n-  GrowableArray<PhiNode*> _mem_slice_head; \/\/ Memory slice head nodes\n-  GrowableArray<MemNode*> _mem_slice_tail; \/\/ Memory slice tail nodes\n@@ -223,3 +217,0 @@\n-  \/\/ Scratch pads\n-  GrowableArray<Node*> _nlist; \/\/ List of nodes\n-\n@@ -227,1 +218,1 @@\n-  SuperWord(const VLoop &vloop, VSharedData &vshared);\n+  SuperWord(const VLoopAnalyzer &vloop_analyzer);\n@@ -236,6 +227,5 @@\n-  const VLoop& vloop()        const { return _vloop; }\n-  PhaseIdealLoop* phase()     const { return vloop().phase(); }\n-  PhaseIterGVN& igvn()        const { return vloop().phase()->igvn(); }\n-  IdealLoopTree* lpt()        const { return vloop().lpt(); }\n-  CountedLoopNode* cl()       const { return vloop().cl(); }\n-  PhiNode* iv()               const { return vloop().iv(); }\n+  PhaseIdealLoop* phase()     const { return _vloop.phase(); }\n+  PhaseIterGVN& igvn()        const { return _vloop.phase()->igvn(); }\n+  IdealLoopTree* lpt()        const { return _vloop.lpt(); }\n+  CountedLoopNode* cl()       const { return _vloop.cl(); }\n+  PhiNode* iv()               const { return _vloop.iv(); }\n@@ -243,1 +233,1 @@\n-  bool in_bb(const Node* n)   const { return vloop().in_bb(n); }\n+  bool in_bb(const Node* n)   const { return _vloop.in_bb(n); }\n@@ -245,5 +235,3 @@\n-#ifndef PRODUCT\n-  \/\/ TraceAutoVectorization and TraceSuperWord\n-  bool is_trace_superword_vector_element_type() const {\n-    \/\/ Too verbose for TraceSuperWord\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_TYPES);\n+  \/\/ VLoopReductions Accessors\n+  bool is_marked_reduction(const Node* n) const {\n+    return _vloop_analyzer.reductions().is_marked_reduction(n);\n@@ -252,3 +240,2 @@\n-  bool is_trace_superword_alignment() const {\n-    \/\/ Too verbose for TraceSuperWord\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT);\n+  bool reduction(Node* n1, Node* n2) const {\n+    return _vloop_analyzer.reductions().is_marked_reduction_pair(n1, n2);\n@@ -257,3 +244,44 @@\n-  bool is_trace_superword_memory_slices() const {\n-    return TraceSuperWord ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_MEMORY_SLICES);\n+  \/\/ VLoopMemorySlices Accessors\n+  bool same_memory_slice(MemNode* n1, MemNode* n2) const {\n+    return _vloop_analyzer.memory_slices().same_memory_slice(n1, n2);\n+  }\n+\n+  \/\/ VLoopBody Accessors\n+  const GrowableArray<Node*>& body() const {\n+    return _vloop_analyzer.body().body();\n+  }\n+\n+  int bb_idx(const Node* n) const     {\n+    return _vloop_analyzer.body().bb_idx(n);\n+  }\n+\n+  \/\/ VLoopTypes Accessors\n+  const Type* velt_type(Node* n) const {\n+    return _vloop_analyzer.types().velt_type(n);\n+  }\n+\n+  BasicType velt_basic_type(Node* n) const {\n+    return _vloop_analyzer.types().velt_basic_type(n);\n+  }\n+\n+  bool same_velt_type(Node* n1, Node* n2) const {\n+    return _vloop_analyzer.types().same_velt_type(n1, n2);\n+  }\n+\n+  int data_size(Node* n) const {\n+    return _vloop_analyzer.types().data_size(n);\n+  }\n+\n+  int vector_width(Node* n) const {\n+    return _vloop_analyzer.types().vector_width(n);\n+  }\n+\n+  int vector_width_in_bytes(const Node* n) const {\n+    return _vloop_analyzer.types().vector_width_in_bytes(n);\n+  }\n+\n+#ifndef PRODUCT\n+  \/\/ TraceAutoVectorization and TraceSuperWord\n+  bool is_trace_superword_alignment() const {\n+    \/\/ Too verbose for TraceSuperWord\n+    return _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT);\n@@ -264,1 +292,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH);\n@@ -269,1 +297,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS);\n@@ -274,1 +302,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS);\n@@ -279,1 +307,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET);\n@@ -284,1 +312,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO);\n@@ -289,1 +317,1 @@\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n+    return _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n@@ -295,9 +323,7 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_TYPES) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_MEMORY_SLICES) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n@@ -307,1 +333,1 @@\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::ALIGN_VECTOR) ||\n+    return _vloop.vtrace().is_trace(TraceAutoVectorizationTag::ALIGN_VECTOR) ||\n@@ -315,1 +341,0 @@\n-  const GrowableArray<Node*>&      block()   const { return _block; }\n@@ -318,1 +343,0 @@\n-  VectorSet      _loop_reductions; \/\/ Reduction nodes in the current loop\n@@ -327,8 +351,0 @@\n-  int vector_width(const Node* n) const {\n-    BasicType bt = velt_basic_type(n);\n-    return MIN2(ABS(iv_stride()), Matcher::max_vector_size(bt));\n-  }\n-  int vector_width_in_bytes(const Node* n) const {\n-    BasicType bt = velt_basic_type(n);\n-    return vector_width(n)*type2aelembytes(bt);\n-  }\n@@ -339,6 +355,0 @@\n-  \/\/ block accessors\n- public:\n-  int  bb_idx(const Node* n) const { assert(in_bb(n), \"must be\"); return _bb_idx.at(n->_idx); }\n- private:\n-  void set_bb_idx(Node* n, int i)  { _bb_idx.at_put_grow(n->_idx, i); }\n-\n@@ -359,7 +369,0 @@\n-  \/\/ vector element type\n-  const Type* velt_type(const Node* n) const { return _node_info.adr_at(bb_idx(n))->_velt_type; }\n-  BasicType velt_basic_type(const Node* n) const { return velt_type(n)->array_element_basic_type(); }\n-  void set_velt_type(Node* n, const Type* t) { int i = bb_idx(n); grow_node_info(i); _node_info.adr_at(i)->_velt_type = t; }\n-  bool same_velt_type(Node* n1, Node* n2);\n-  bool same_memory_slice(MemNode* best_align_to_mem_ref, MemNode* mem_ref) const;\n-\n@@ -379,44 +382,0 @@\n-  \/\/ methods\n-\n-  typedef const Pair<const Node*, int> PathEnd;\n-\n-  \/\/ Search for a path P = (n_1, n_2, ..., n_k) such that:\n-  \/\/ - original_input(n_i, input) = n_i+1 for all 1 <= i < k,\n-  \/\/ - path(n) for all n in P,\n-  \/\/ - k <= max, and\n-  \/\/ - there exists a node e such that original_input(n_k, input) = e and end(e).\n-  \/\/ Return <e, k>, if P is found, or <nullptr, -1> otherwise.\n-  \/\/ Note that original_input(n, i) has the same behavior as n->in(i) except\n-  \/\/ that it commutes the inputs of binary nodes whose edges have been swapped.\n-  template <typename NodePredicate1, typename NodePredicate2>\n-  static PathEnd find_in_path(const Node *n1, uint input, int max,\n-                              NodePredicate1 path, NodePredicate2 end) {\n-    const PathEnd no_path(nullptr, -1);\n-    const Node* current = n1;\n-    int k = 0;\n-    for (int i = 0; i <= max; i++) {\n-      if (current == nullptr) {\n-        return no_path;\n-      }\n-      if (end(current)) {\n-        return PathEnd(current, k);\n-      }\n-      if (!path(current)) {\n-        return no_path;\n-      }\n-      current = original_input(current, input);\n-      k++;\n-    }\n-    return no_path;\n-  }\n-\n-public:\n-  \/\/ Whether n is a reduction operator and part of a reduction cycle.\n-  \/\/ This function can be used for individual queries outside the SLP analysis,\n-  \/\/ e.g. to inform matching in target-specific code. Otherwise, the\n-  \/\/ almost-equivalent but faster SuperWord::mark_reductions() is preferable.\n-  static bool is_reduction(const Node* n);\n-  \/\/ Whether n is marked as a reduction node.\n-  bool is_marked_reduction(Node* n) { return _loop_reductions.test(n->_idx); }\n-  \/\/ Whether the current loop has any reduction node.\n-  bool is_marked_reduction_loop() { return !_loop_reductions.is_empty(); }\n@@ -424,14 +383,0 @@\n-  \/\/ Whether n is a standard reduction operator.\n-  static bool is_reduction_operator(const Node* n);\n-  \/\/ Whether n is part of a reduction cycle via the 'input' edge index. To bound\n-  \/\/ the search, constrain the size of reduction cycles to LoopMaxUnroll.\n-  static bool in_reduction_cycle(const Node* n, uint input);\n-  \/\/ Reference to the i'th input node of n, commuting the inputs of binary nodes\n-  \/\/ whose edges have been swapped. Assumes n is a commutative operation.\n-  static Node* original_input(const Node* n, uint i);\n-  \/\/ Find and mark reductions in a loop. Running mark_reductions() is similar to\n-  \/\/ querying is_reduction(n) for every n in the SuperWord loop, but stricter in\n-  \/\/ that it assumes counted loops and requires that reduction nodes are not\n-  \/\/ used within the loop except by their reduction cycle predecessors.\n-  void mark_reductions();\n-  \/\/ Extract the superword level parallelism\n@@ -448,6 +393,0 @@\n-  \/\/ Analyze the memory slices\n-  void find_memory_slices();\n-  NOT_PRODUCT( void print_memory_slices(); )\n-  \/\/ Return a memory slice (node list) in predecessor order starting at \"start\"\n-  void mem_slice_preds(Node* start, Node* stop, GrowableArray<Node*> &preds);\n-\n@@ -469,2 +408,0 @@\n-  \/\/ Is there a data path between s1 and s2 and both are reductions?\n-  bool reduction(Node* s1, Node* s2);\n@@ -472,1 +409,0 @@\n-  int data_size(Node* s);\n@@ -532,2 +468,0 @@\n-  \/\/ Construct reverse postorder list of block members\n-  bool construct_bb();\n@@ -542,2 +476,0 @@\n-  \/\/ Compute necessary vector element type for expressions\n-  void compute_vector_element_type();\n@@ -551,2 +483,0 @@\n-  \/\/ Smallest type containing range of values\n-  const Type* container_type(Node* n);\n@@ -561,1 +491,0 @@\n-  void print_bb();\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":73,"deletions":144,"binary":false,"changes":217,"status":"modified"},{"patch":"@@ -34,1 +34,4 @@\n-  flags(SW_TYPES,             \"Trace SuperWord::compute_vector_element_type\") \\\n+  flags(LOOP_ANALYZER,        \"Trace VLoopAnalyzer::setup_submodules\") \\\n+  flags(MEMORY_SLICES,        \"Trace VLoopMemorySlices\") \\\n+  flags(BODY,                 \"Trace VLoopBody\") \\\n+  flags(TYPES,                \"Trace VLoopTypes\") \\\n@@ -36,1 +39,0 @@\n-  flags(SW_MEMORY_SLICES,     \"Trace SuperWord memory slices\") \\\n@@ -115,1 +117,0 @@\n-        _tags.at_put(SW_TYPES, set_bit);\n@@ -117,1 +118,0 @@\n-        _tags.at_put(SW_MEMORY_SLICES, set_bit);\n@@ -125,1 +125,0 @@\n-        _tags.at_put(SW_MEMORY_SLICES, set_bit);\n","filename":"src\/hotspot\/share\/opto\/traceAutoVectorizationTag.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -5181,1 +5181,0 @@\n-        int array_base = arrayOopDesc::base_offset_in_bytes(basic_elem_type);\n@@ -5183,1 +5182,1 @@\n-        st->print(\"[%d]\", (_offset - array_base)\/elem_size);\n+        st->print(\"[%d]\", (_offset - header_size)\/elem_size);\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,6 +43,2 @@\n-  const char* return_state = check_preconditions_helper();\n-  assert(return_state != nullptr, \"must have return state\");\n-  if (return_state == VLoop::SUCCESS) {\n-    return true; \/\/ success\n-  }\n-\n+  VStatus status = check_preconditions_helper();\n+  if (!status.is_success()) {\n@@ -50,3 +46,3 @@\n-  if (is_trace_preconditions()) {\n-    tty->print_cr(\"VLoop::check_preconditions: failed: %s\", return_state);\n-  }\n+    if (is_trace_preconditions()) {\n+      tty->print_cr(\"VLoop::check_preconditions: failed: %s\", status.failure_reason());\n+    }\n@@ -54,1 +50,3 @@\n-  return false; \/\/ failure\n+    return false; \/\/ failure\n+  }\n+  return true; \/\/ success\n@@ -57,1 +55,1 @@\n-const char* VLoop::check_preconditions_helper() {\n+VStatus VLoop::check_preconditions_helper() {\n@@ -61,1 +59,1 @@\n-    return VLoop::FAILURE_VECTOR_WIDTH;\n+    return VStatus::make_failure(VLoop::FAILURE_VECTOR_WIDTH);\n@@ -66,1 +64,1 @@\n-    return VLoop::FAILURE_VALID_COUNTED_LOOP;\n+    return VStatus::make_failure(VLoop::FAILURE_VALID_COUNTED_LOOP);\n@@ -72,1 +70,1 @@\n-    return VLoop::FAILURE_ALREADY_VECTORIZED;\n+    return VStatus::make_failure(VLoop::FAILURE_ALREADY_VECTORIZED);\n@@ -76,1 +74,1 @@\n-    return VLoop::FAILURE_UNROLL_ONLY;\n+    return VStatus::make_failure(VLoop::FAILURE_UNROLL_ONLY);\n@@ -92,1 +90,1 @@\n-    return VLoop::FAILURE_CONTROL_FLOW;\n+    return VStatus::make_failure(VLoop::FAILURE_CONTROL_FLOW);\n@@ -97,1 +95,1 @@\n-    return VLoop::FAILURE_BACKEDGE;\n+    return VStatus::make_failure(VLoop::FAILURE_BACKEDGE);\n@@ -105,1 +103,1 @@\n-      return VLoop::FAILURE_PRE_LOOP_LIMIT;\n+      return VStatus::make_failure(VLoop::FAILURE_PRE_LOOP_LIMIT);\n@@ -109,1 +107,1 @@\n-      return VLoop::FAILURE_PRE_LOOP_LIMIT;\n+      return VStatus::make_failure(VLoop::FAILURE_PRE_LOOP_LIMIT);\n@@ -114,1 +112,53 @@\n-  return VLoop::SUCCESS;\n+  return VStatus::make_success();\n+}\n+\n+\/\/ Return true iff all submodules are loaded successfully\n+bool VLoopAnalyzer::setup_submodules() {\n+#ifndef PRODUCT\n+  if (_vloop.is_trace_loop_analyzer()) {\n+    tty->print_cr(\"\\nVLoopAnalyzer::setup_submodules\");\n+    _vloop.lpt()->dump_head();\n+    _vloop.cl()->dump();\n+  }\n+#endif\n+\n+  VStatus status = setup_submodules_helper();\n+  if (!status.is_success()) {\n+#ifndef PRODUCT\n+    if (_vloop.is_trace_loop_analyzer()) {\n+      tty->print_cr(\"\\nVLoopAnalyze::setup_submodules: failed: %s\", status.failure_reason());\n+    }\n+#endif\n+    return false; \/\/ failed\n+  }\n+  return true; \/\/ success\n+}\n+\n+VStatus VLoopAnalyzer::setup_submodules_helper() {\n+  \/\/ Skip any loop that has not been assigned max unroll by analysis.\n+  if (SuperWordLoopUnrollAnalysis && _vloop.cl()->slp_max_unroll() == 0) {\n+    return VStatus::make_failure(VLoopAnalyzer::FAILURE_NO_MAX_UNROLL);\n+  }\n+\n+  if (SuperWordReductions) {\n+    _reductions.mark_reductions();\n+  }\n+\n+  _memory_slices.find_memory_slices();\n+\n+  \/\/ If there is no memory slice detected, it means there is no store.\n+  \/\/ If there is no reduction and no store, then we give up, because\n+  \/\/ vectorization is not possible anyway (given current limitations).\n+  if (!_reductions.is_marked_reduction_loop() &&\n+      _memory_slices.heads().is_empty()) {\n+    return VStatus::make_failure(VLoopAnalyzer::FAILURE_NO_REDUCTION_OR_STORE);\n+  }\n+\n+  VStatus body_status = _body.construct();\n+  if (!body_status.is_success()) {\n+    return body_status;\n+  }\n+\n+  _types.compute_vector_element_type();\n+\n+  return VStatus::make_success();\n@@ -237,1 +287,1 @@\n-      return phase()->is_dominator(n_c, vloop().pre_loop_head());\n+      return phase()->is_dominator(n_c, _vloop.pre_loop_head());\n","filename":"src\/hotspot\/share\/opto\/vectorization.cpp","additions":71,"deletions":21,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"utilities\/pair.hpp\"\n@@ -35,0 +36,22 @@\n+class VStatus : public StackObj {\n+private:\n+  const char* _failure_reason;\n+\n+  VStatus(const char* failure_reason) : _failure_reason(failure_reason) {}\n+\n+public:\n+  static VStatus make_success() { return VStatus(nullptr); }\n+\n+  static VStatus make_failure(const char* failure_reason) {\n+    assert(failure_reason != nullptr, \"must have reason\");\n+    return VStatus(failure_reason);\n+  }\n+\n+  bool is_success() const { return _failure_reason == nullptr; }\n+\n+  const char* failure_reason() const {\n+    assert(!is_success(), \"only failures have reason\");\n+    return _failure_reason;\n+  }\n+};\n+\n@@ -64,1 +87,0 @@\n-  static constexpr char const* SUCCESS                    = \"success\";\n@@ -111,1 +133,17 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::PRECONDITIONS);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::PRECONDITIONS);\n+  }\n+\n+  bool is_trace_loop_analyzer() const {\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::LOOP_ANALYZER);\n+  }\n+\n+  bool is_trace_memory_slices() const {\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::MEMORY_SLICES);\n+  }\n+\n+  bool is_trace_body() const {\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::BODY);\n+  }\n+\n+  bool is_trace_vector_element_type() const {\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::TYPES);\n@@ -115,1 +153,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::POINTER_ANALYSIS);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::POINTER_ANALYSIS);\n@@ -131,1 +169,1 @@\n-  const char* check_preconditions_helper();\n+  VStatus check_preconditions_helper();\n@@ -169,0 +207,286 @@\n+\/\/ Submodule of VLoopAnalyzer.\n+\/\/ Identify and mark all reductions in the loop.\n+class VLoopReductions : public StackObj {\n+private:\n+  typedef const Pair<const Node*, int> PathEnd;\n+\n+  const VLoop& _vloop;\n+  VectorSet _loop_reductions;\n+\n+public:\n+  VLoopReductions(Arena* arena, const VLoop& vloop) :\n+    _vloop(vloop),\n+    _loop_reductions(arena){};\n+\n+  NONCOPYABLE(VLoopReductions);\n+\n+private:\n+  \/\/ Search for a path P = (n_1, n_2, ..., n_k) such that:\n+  \/\/ - original_input(n_i, input) = n_i+1 for all 1 <= i < k,\n+  \/\/ - path(n) for all n in P,\n+  \/\/ - k <= max, and\n+  \/\/ - there exists a node e such that original_input(n_k, input) = e and end(e).\n+  \/\/ Return <e, k>, if P is found, or <nullptr, -1> otherwise.\n+  \/\/ Note that original_input(n, i) has the same behavior as n->in(i) except\n+  \/\/ that it commutes the inputs of binary nodes whose edges have been swapped.\n+  template <typename NodePredicate1, typename NodePredicate2>\n+  static PathEnd find_in_path(const Node* n1, uint input, int max,\n+                              NodePredicate1 path, NodePredicate2 end) {\n+    const PathEnd no_path(nullptr, -1);\n+    const Node* current = n1;\n+    int k = 0;\n+    for (int i = 0; i <= max; i++) {\n+      if (current == nullptr) {\n+        return no_path;\n+      }\n+      if (end(current)) {\n+        return PathEnd(current, k);\n+      }\n+      if (!path(current)) {\n+        return no_path;\n+      }\n+      current = original_input(current, input);\n+      k++;\n+    }\n+    return no_path;\n+  }\n+\n+public:\n+  \/\/ Find and mark reductions in a loop. Running mark_reductions() is similar to\n+  \/\/ querying is_reduction(n) for every node in the loop, but stricter in\n+  \/\/ that it assumes counted loops and requires that reduction nodes are not\n+  \/\/ used within the loop except by their reduction cycle predecessors.\n+  void mark_reductions();\n+\n+  \/\/ Whether n is a reduction operator and part of a reduction cycle.\n+  \/\/ This function can be used for individual queries outside auto-vectorization,\n+  \/\/ e.g. to inform matching in target-specific code. Otherwise, the\n+  \/\/ almost-equivalent but faster mark_reductions() is preferable.\n+  static bool is_reduction(const Node* n);\n+\n+  \/\/ Whether n is marked as a reduction node.\n+  bool is_marked_reduction(const Node* n) const { return _loop_reductions.test(n->_idx); }\n+\n+  bool is_marked_reduction_loop() const { return !_loop_reductions.is_empty(); }\n+\n+  \/\/ Are s1 and s2 reductions with a data path between them?\n+  bool is_marked_reduction_pair(Node* s1, Node* s2) const;\n+\n+private:\n+  \/\/ Whether n is a standard reduction operator.\n+  static bool is_reduction_operator(const Node* n);\n+\n+  \/\/ Whether n is part of a reduction cycle via the 'input' edge index. To bound\n+  \/\/ the search, constrain the size of reduction cycles to LoopMaxUnroll.\n+  static bool in_reduction_cycle(const Node* n, uint input);\n+\n+  \/\/ Reference to the i'th input node of n, commuting the inputs of binary nodes\n+  \/\/ whose edges have been swapped. Assumes n is a commutative operation.\n+  static Node* original_input(const Node* n, uint i);\n+};\n+\n+\/\/ Submodule of VLoopAnalyzer.\n+\/\/ Find the memory slices in the loop.\n+class VLoopMemorySlices : public StackObj {\n+private:\n+  const VLoop& _vloop;\n+\n+  GrowableArray<PhiNode*> _heads;\n+  GrowableArray<MemNode*> _tails;\n+\n+public:\n+  VLoopMemorySlices(Arena* arena, const VLoop& vloop) :\n+    _vloop(vloop),\n+    _heads(arena, 8, 0, nullptr),\n+    _tails(arena, 8, 0, nullptr) {};\n+  NONCOPYABLE(VLoopMemorySlices);\n+\n+  void find_memory_slices();\n+\n+  const GrowableArray<PhiNode*>& heads() const { return _heads; }\n+  const GrowableArray<MemNode*>& tails() const { return _tails; }\n+\n+  \/\/ Get all memory nodes of a slice, in reverse order\n+  void get_slice_in_reverse_order(PhiNode* head, MemNode* tail, GrowableArray<Node*>& slice) const;\n+\n+  bool same_memory_slice(MemNode* m1, MemNode* m2) const;\n+\n+#ifndef PRODUCT\n+  void print() const;\n+#endif\n+};\n+\n+\/\/ Submodule of VLoopAnalyzer.\n+\/\/ Finds all nodes in the body, and creates a mapping node->_idx to a body_idx.\n+\/\/ This mapping is used so that subsequent datastructures sizes only grow with\n+\/\/ the body size, and not the number of all nodes in the compilation.\n+class VLoopBody : public StackObj {\n+private:\n+  static constexpr char const* FAILURE_NODE_NOT_ALLOWED = \"encontered unhandled node\";\n+\n+  const VLoop& _vloop;\n+\n+  \/\/ Mapping body_idx -> Node*\n+  GrowableArray<Node*> _body;\n+\n+  \/\/ Mapping node->_idx -> body_idx\n+  \/\/ Can be very large, and thus lives in VSharedData\n+  GrowableArray<int>& _body_idx;\n+\n+public:\n+  VLoopBody(Arena* arena, const VLoop& vloop, VSharedData& vshared) :\n+    _vloop(vloop),\n+    _body(arena, vloop.estimated_body_length(), 0, nullptr),\n+    _body_idx(vshared.node_idx_to_loop_body_idx()) {}\n+\n+  NONCOPYABLE(VLoopBody);\n+\n+  VStatus construct();\n+  const GrowableArray<Node*>& body() const { return _body; }\n+  NOT_PRODUCT( void print() const; )\n+\n+  int bb_idx(const Node* n) const {\n+    assert(_vloop.in_bb(n), \"must be in basic block\");\n+    return _body_idx.at(n->_idx);\n+  }\n+\n+private:\n+  void set_bb_idx(Node* n, int i) {\n+    _body_idx.at_put_grow(n->_idx, i);\n+  }\n+};\n+\n+\/\/ Submodule of VLoopAnalyzer.\n+\/\/ Compute the vector element type for every node in the loop body.\n+\/\/ We need to do this to be able to vectorize the narrower integer\n+\/\/ types (byte, char, short). In the C2 IR, their operations are\n+\/\/ done with full int type with 4 byte precision (e.g. AddI, MulI).\n+\/\/ Example:  char a,b,c;  a = (char)(b + c);\n+\/\/ However, if we can prove the the upper bits are only truncated,\n+\/\/ and the lower bits for the narrower type computed correctly, we\n+\/\/ can compute the operations in the narrower type directly (e.g we\n+\/\/ perform the AddI or MulI with 1 or 2 bytes). This allows us to\n+\/\/ fit more operations in a vector, and can remove the otherwise\n+\/\/ required conversion (int <-> narrower type).\n+\/\/ We compute the types backwards (use-to-def): If all use nodes\n+\/\/ only require the lower bits, then the def node can do the operation\n+\/\/ with only the lower bits, and we propagate the narrower type to it.\n+class VLoopTypes : public StackObj {\n+private:\n+  const VLoop&     _vloop;\n+  const VLoopBody& _body;\n+\n+  \/\/ bb_idx -> vector element type\n+  GrowableArray<const Type*> _velt_type;\n+\n+public:\n+  VLoopTypes(Arena* arena,\n+             const VLoop& vloop,\n+             const VLoopBody& body) :\n+    _vloop(vloop),\n+    _body(body),\n+    _velt_type(arena, vloop.estimated_body_length(), 0, nullptr) {}\n+  NONCOPYABLE(VLoopTypes);\n+\n+  void compute_vector_element_type();\n+  NOT_PRODUCT( void print() const; )\n+\n+  const Type* velt_type(const Node* n) const {\n+    assert(_vloop.in_bb(n), \"only call on nodes in loop\");\n+    const Type* t = _velt_type.at(_body.bb_idx(n));\n+    assert(t != nullptr, \"must have type\");\n+    return t;\n+  }\n+\n+  BasicType velt_basic_type(const Node* n) const {\n+    return velt_type(n)->array_element_basic_type();\n+  }\n+\n+  int data_size(Node* s) const {\n+    int bsize = type2aelembytes(velt_basic_type(s));\n+    assert(bsize != 0, \"valid size\");\n+    return bsize;\n+  }\n+\n+  bool same_velt_type(Node* n1, Node* n2) const {\n+    const Type* vt1 = velt_type(n1);\n+    const Type* vt2 = velt_type(n2);\n+    if (vt1->basic_type() == T_INT && vt2->basic_type() == T_INT) {\n+      \/\/ Compare vectors element sizes for integer types.\n+      return data_size(n1) == data_size(n2);\n+    }\n+    return vt1 == vt2;\n+  }\n+\n+  int vector_width(const Node* n) const {\n+    BasicType bt = velt_basic_type(n);\n+    return MIN2(ABS(_vloop.iv_stride()), Matcher::max_vector_size(bt));\n+  }\n+\n+  int vector_width_in_bytes(const Node* n) const {\n+    BasicType bt = velt_basic_type(n);\n+    return vector_width(n) * type2aelembytes(bt);\n+  }\n+\n+private:\n+  void set_velt_type(Node* n, const Type* t) {\n+    assert(t != nullptr, \"cannot set nullptr\");\n+    assert(_vloop.in_bb(n), \"only call on nodes in loop\");\n+    _velt_type.at_put(_body.bb_idx(n), t);\n+  }\n+\n+  \/\/ Smallest type containing range of values\n+  const Type* container_type(Node* n) const;\n+};\n+\n+\/\/ Analyze the loop in preparation for auto-vectorization. This class is\n+\/\/ deliberately structured into many submodules, which are as independent\n+\/\/ as possible, though some submodules do require other submodules.\n+class VLoopAnalyzer : StackObj {\n+private:\n+  static constexpr char const* FAILURE_NO_MAX_UNROLL         = \"slp max unroll analysis required\";\n+  static constexpr char const* FAILURE_NO_REDUCTION_OR_STORE = \"no reduction and no store in loop\";\n+\n+  const VLoop&         _vloop;\n+\n+  \/\/ Arena for all submodules\n+  Arena                _arena;\n+\n+  \/\/ If all submodules are setup successfully, we set this flag at the\n+  \/\/ end of the constructor\n+  bool                 _success;\n+\n+  \/\/ Submodules\n+  VLoopReductions      _reductions;\n+  VLoopMemorySlices    _memory_slices;\n+  VLoopBody            _body;\n+  VLoopTypes           _types;\n+\n+public:\n+  VLoopAnalyzer(const VLoop& vloop, VSharedData& vshared) :\n+    _vloop(vloop),\n+    _arena(mtCompiler),\n+    _success(false),\n+    _reductions      (&_arena, vloop),\n+    _memory_slices   (&_arena, vloop),\n+    _body            (&_arena, vloop, vshared),\n+    _types           (&_arena, vloop, _body)\n+  {\n+    _success = setup_submodules();\n+  }\n+  NONCOPYABLE(VLoopAnalyzer);\n+\n+  bool success() const { return _success; }\n+\n+  \/\/ Read-only accessors for submodules\n+  const VLoop& vloop()                           const { return _vloop; }\n+  const VLoopReductions& reductions()            const { return _reductions; }\n+  const VLoopMemorySlices& memory_slices()       const { return _memory_slices; }\n+  const VLoopBody& body()                        const { return _body; }\n+  const VLoopTypes& types()                      const { return _types; }\n+\n+private:\n+  bool setup_submodules();\n+  VStatus setup_submodules_helper();\n+};\n+\n@@ -193,4 +517,3 @@\n-  const VLoop&    vloop() const { return _vloop; }\n-  PhaseIdealLoop* phase() const { return vloop().phase(); }\n-  IdealLoopTree*  lpt() const   { return vloop().lpt(); }\n-  PhiNode*        iv() const    { return vloop().iv(); }\n+  PhaseIdealLoop* phase() const { return _vloop.phase(); }\n+  IdealLoopTree*  lpt() const   { return _vloop.lpt(); }\n+  PhiNode*        iv() const    { return _vloop.iv(); }\n@@ -269,1 +592,1 @@\n-      VPointer p_mem(mem, vloop());\n+      VPointer p_mem(mem, _vloop);\n","filename":"src\/hotspot\/share\/opto\/vectorization.hpp","additions":332,"deletions":9,"binary":false,"changes":341,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,1 @@\n-void JvmtiAgentList::add(const char* name, char* options, bool absolute_path) {\n+void JvmtiAgentList::add(const char* name, const char* options, bool absolute_path) {\n@@ -131,1 +131,1 @@\n-void JvmtiAgentList::add_xrun(const char* name, char* options, bool absolute_path) {\n+void JvmtiAgentList::add_xrun(const char* name, const char* options, bool absolute_path) {\n@@ -201,4 +201,2 @@\n-jint JvmtiAgentList::load_agent(const char* agent_name, const char* absParam,\n-                           const char* options, outputStream* st) {\n-  \/\/ The abs parameter should be \"true\" or \"false\"\n-  const bool is_absolute_path = (absParam != nullptr) && (strcmp(absParam, \"true\") == 0);\n+void JvmtiAgentList::load_agent(const char* agent_name, bool is_absolute_path,\n+                                const char* options, outputStream* st) {\n@@ -211,2 +209,0 @@\n-  \/\/ Agent_OnAttach executed so completion status is JNI_OK\n-  return JNI_OK;\n","filename":"src\/hotspot\/share\/prims\/jvmtiAgentList.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n- public:\n@@ -70,2 +69,4 @@\n-  static void add(const char* name, char* options, bool absolute_path) NOT_JVMTI_RETURN;\n-  static void add_xrun(const char* name, char* options, bool absolute_path) NOT_JVMTI_RETURN;\n+\n+ public:\n+  static void add(const char* name, const char* options, bool absolute_path) NOT_JVMTI_RETURN;\n+  static void add_xrun(const char* name, const char* options, bool absolute_path) NOT_JVMTI_RETURN;\n@@ -74,2 +75,2 @@\n-  static jint load_agent(const char* agent, const char* absParam,\n-                         const char* options, outputStream* st) NOT_JVMTI_RETURN_(0);\n+  static void load_agent(const char* agent, bool is_absolute_path,\n+                         const char* options, outputStream* st) NOT_JVMTI_RETURN;\n","filename":"src\/hotspot\/share\/prims\/jvmtiAgentList.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -547,1 +547,5 @@\n-      log_debug(stackwalk)(\"advanced past %s\", stream.method()->external_name());\n+      \/\/ It is not always safe to dig out the name of the last frame\n+      \/\/ here, i.e. stream.method()->external_name(), since it may\n+      \/\/ have been reclaimed by HandleMark::pop_and_restore() together\n+      \/\/ with the rest of the previous batch.\n+      log_debug(stackwalk)(\"advanced past last frame decoded in the previous batch\");\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,2 +109,2 @@\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n-#include \"gc\/g1\/heapRegionRemSet.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionManager.hpp\"\n+#include \"gc\/g1\/g1HeapRegionRemSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -393,1 +393,1 @@\n-  bool interpreted_native_or_deoptimized_on_stack();\n+  bool check_valid_fast_path();\n@@ -1517,1 +1517,4 @@\n-bool FreezeBase::interpreted_native_or_deoptimized_on_stack() {\n+\/\/ There are no interpreted frames if we're not called from the interpreter and we haven't ancountered an i2c\n+\/\/ adapter or called Deoptimization::unpack_frames. As for native frames, upcalls from JNI also go through the\n+\/\/ interpreter (see JavaCalls::call_helper), while the UpcallLinker explicitly sets cont_fastpath.\n+bool FreezeBase::check_valid_fast_path() {\n@@ -1525,2 +1528,2 @@\n-    if (f.is_interpreted_frame() || f.is_native_frame() || f.is_deoptimized_frame()) {\n-      return true;\n+    if (!f.is_compiled_frame() || f.is_deoptimized_frame()) {\n+      return false;\n@@ -1529,1 +1532,1 @@\n-  return false;\n+  return true;\n@@ -1591,5 +1594,1 @@\n-  \/\/ There are no interpreted frames if we're not called from the interpreter and we haven't ancountered an i2c\n-  \/\/ adapter or called Deoptimization::unpack_frames. Calls from native frames also go through the interpreter\n-  \/\/ (see JavaCalls::call_helper).\n-  assert(!current->cont_fastpath()\n-         || (current->cont_fastpath_thread_state() && !freeze.interpreted_native_or_deoptimized_on_stack()), \"\");\n+  assert(!current->cont_fastpath() || freeze.check_valid_fast_path(), \"\");\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -138,1 +138,6 @@\n-  return JvmtiAgentList::load_agent(agent, absParam, options, out);\n+  \/\/ The abs parameter should be \"true\" or \"false\".\n+  const bool is_absolute_path = (absParam != nullptr) && (strcmp(absParam, \"true\") == 0);\n+  JvmtiAgentList::load_agent(agent, is_absolute_path, options, out);\n+\n+  \/\/ Agent_OnAttach result or error message is written to 'out'.\n+  return JNI_OK;\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-      JvmtiAgentList::load_agent(\"instrument\", \"false\", _libpath.value(), output());\n+      JvmtiAgentList::load_agent(\"instrument\", false, _libpath.value(), output());\n@@ -328,1 +328,1 @@\n-      JvmtiAgentList::load_agent(\"instrument\", \"false\", opt, output());\n+      JvmtiAgentList::load_agent(\"instrument\", false, opt, output());\n@@ -333,1 +333,1 @@\n-    JvmtiAgentList::load_agent(_libpath.value(), \"true\", _option.value(), output());\n+    JvmtiAgentList::load_agent(_libpath.value(), true, _option.value(), output());\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1043,1 +1043,0 @@\n-const juint    badMetaWordVal     = 0xBAADFADE;             \/\/ value used to zap metadata heap after GC\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -492,0 +492,4 @@\n+#ifdef LINUX\n+  st->print_cr(\"#   This process has exceeded the maximum number of memory mappings (check below\");\n+  st->print_cr(\"#     for `\/proc\/sys\/vm\/max_map_count` and `Total number of mappings`)\");\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -574,1 +574,1 @@\n-    public static final String readUTF(DataInput in) throws IOException {\n+    public static String readUTF(DataInput in) throws IOException {\n@@ -576,2 +576,2 @@\n-        byte[] bytearr = null;\n-        char[] chararr = null;\n+        byte[] bytearr;\n+        char[] chararr;\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataInputStream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -45,0 +46,1 @@\n+import jdk.internal.access.JavaLangAccess;\n@@ -2998,0 +3000,2 @@\n+        \/** access to internal methods to count ASCII and inflate latin1\/ASCII bytes to char *\/\n+        private static final JavaLangAccess JLA = SharedSecrets.getJavaLangAccess();\n@@ -3674,0 +3678,4 @@\n+            if (!blkmode) {\n+                end = pos = 0;\n+            }\n+\n@@ -3676,0 +3684,20 @@\n+                \/\/ Scan for leading ASCII chars\n+                int avail = end - pos;\n+                int ascii = JLA.countPositives(buf, pos, Math.min(avail, (int)utflen));\n+                if (ascii == utflen) {\n+                    \/\/ Complete match, consume the buf[pos ... pos + ascii] range and return.\n+                    \/\/ Modified UTF-8 and ISO-8859-1 are both ASCII-compatible encodings bytes\n+                    \/\/ thus we can treat the range as ISO-8859-1 and avoid a redundant scan\n+                    \/\/ in the String constructor\n+                    String utf = new String(buf, pos, ascii, StandardCharsets.ISO_8859_1);\n+                    pos += ascii;\n+                    return utf;\n+                }\n+                \/\/ Avoid allocating a StringBuilder if there's enough data in buf and\n+                \/\/ cbuf is large enough\n+                if (avail >= utflen && utflen <= CHAR_BUF_SIZE) {\n+                    JLA.inflateBytesToChars(buf, pos, cbuf, 0, ascii);\n+                    pos += ascii;\n+                    int cbufPos = readUTFSpan(ascii, utflen - ascii);\n+                    return new String(cbuf, 0, cbufPos);\n+                }\n@@ -3683,4 +3711,0 @@\n-            if (!blkmode) {\n-                end = pos = 0;\n-            }\n-\n@@ -3690,1 +3714,5 @@\n-                    utflen -= readUTFSpan(sbuf, utflen);\n+                    int cbufPos = readUTFSpan(0, utflen);\n+                    \/\/ pos has advanced: adjust utflen by the difference in\n+                    \/\/ available bytes\n+                    utflen -= avail - (end - pos);\n+                    sbuf.append(cbuf, 0, cbufPos);\n@@ -3712,3 +3740,3 @@\n-         * (starting at offset pos and ending at or before offset end),\n-         * consuming no more than utflen bytes.  Appends read characters to\n-         * sbuf.  Returns the number of bytes consumed.\n+         * (starting at offset pos), consuming no more than utflen bytes.\n+         * Appends read characters to cbuf. Returns the current position\n+         * in cbuf.\n@@ -3716,1 +3744,1 @@\n-        private long readUTFSpan(StringBuilder sbuf, long utflen)\n+        private int readUTFSpan(int cpos, long utflen)\n@@ -3719,1 +3747,0 @@\n-            int cpos = 0;\n@@ -3723,1 +3750,1 @@\n-            int stop = pos + ((utflen > avail) ? avail - 2 : (int) utflen);\n+            int stop = start + ((utflen > avail) ? avail - 2 : (int) utflen);\n@@ -3768,3 +3795,1 @@\n-\n-            sbuf.append(cbuf, 0, cpos);\n-            return pos - start;\n+            return cpos;\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":39,"deletions":14,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,1 +215,1 @@\n-     * <p>The computed result must be within 1 ulp of the exact result.\n+     * <p>The computed result must be within 1.25 ulps of the exact result.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Math.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.util.ArrayList;\n@@ -45,0 +46,1 @@\n+import java.util.Objects;\n@@ -241,0 +243,1 @@\n+        Objects.requireNonNull(newPattern, \"newPattern must not be null\");\n@@ -252,10 +255,7 @@\n-        StringBuilder[] segments = new StringBuilder[2];\n-        for (int i = 0; i < segments.length; ++i) {\n-            segments[i] = new StringBuilder();\n-        }\n-        double[] newChoiceLimits = new double[30];\n-        String[] newChoiceFormats = new String[30];\n-        int count = 0;\n-        int part = 0; \/\/ 0 denotes limit, 1 denotes format\n-        double startValue = 0;\n-        double oldStartValue = Double.NaN;\n+        \/\/ Set up components\n+        ArrayList<Double> limits = new ArrayList<>();\n+        ArrayList<String> formats = new ArrayList<>();\n+        StringBuilder[] segments = new StringBuilder[]{new StringBuilder(),\n+                new StringBuilder()};\n+        int part = 0; \/\/ 0 denotes LIMIT. 1 denotes FORMAT.\n+        double limit = 0;\n@@ -263,0 +263,2 @@\n+\n+        \/\/ Parse the string, alternating the value of part\n@@ -265,3 +267,50 @@\n-            if (ch=='\\'') {\n-                \/\/ Check for \"''\" indicating a literal quote\n-                if ((i+1)<newPattern.length() && newPattern.charAt(i+1)==ch) {\n+            switch (ch) {\n+                case '\\'':\n+                    \/\/ Check for \"''\" indicating a literal quote\n+                    if ((i + 1) < newPattern.length() && newPattern.charAt(i + 1) == ch) {\n+                        segments[part].append(ch);\n+                        ++i;\n+                    } else {\n+                        inQuote = !inQuote;\n+                    }\n+                    break;\n+                case '<', '#', '\\u2264':\n+                    if (inQuote || part == 1) {\n+                        \/\/ Don't interpret relational symbols if parsing the format\n+                        segments[part].append(ch);\n+                    } else {\n+                        \/\/ Build the numerical value of the limit\n+                        \/\/ and switch to parsing format\n+                        if (segments[0].isEmpty()) {\n+                            throw new IllegalArgumentException(\"Each interval must\" +\n+                                    \" contain a number before a format\");\n+                        }\n+                        limit = stringToNum(segments[0].toString());\n+                        if (ch == '<' && Double.isFinite(limit)) {\n+                            limit = nextDouble(limit);\n+                        }\n+                        if (!limits.isEmpty() && limit <= limits.getLast()) {\n+                            throw new IllegalArgumentException(\"Incorrect order \" +\n+                                    \"of intervals, must be in ascending order\");\n+                        }\n+                        segments[0].setLength(0);\n+                        part = 1;\n+                    }\n+                    break;\n+                case '|':\n+                    if (inQuote) {\n+                        segments[part].append(ch);\n+                    } else {\n+                        if (part != 1) {\n+                            \/\/ Discard incorrect portion and finish building cFmt\n+                            break;\n+                        }\n+                        \/\/ Insert an entry into the format and limit arrays\n+                        \/\/ and switch to parsing limit\n+                        limits.add(limit);\n+                        formats.add(segments[1].toString());\n+                        segments[1].setLength(0);\n+                        part = 0;\n+                    }\n+                    break;\n+                default:\n@@ -269,47 +318,0 @@\n-                    ++i;\n-                } else {\n-                    inQuote = !inQuote;\n-                }\n-            } else if (inQuote) {\n-                segments[part].append(ch);\n-            } else if (part == 0 && (ch == '<' || ch == '#' || ch == '\\u2264')) {\n-                \/\/ Only consider relational symbols if parsing the limit segment (part == 0).\n-                \/\/ Don't treat a relational symbol as syntactically significant\n-                \/\/ when parsing Format segment (part == 1)\n-                if (segments[0].length() == 0) {\n-                    throw new IllegalArgumentException(\"Each interval must\"\n-                            + \" contain a number before a format\");\n-                }\n-\n-                String tempBuffer = segments[0].toString();\n-                if (tempBuffer.equals(\"\\u221E\")) {\n-                    startValue = Double.POSITIVE_INFINITY;\n-                } else if (tempBuffer.equals(\"-\\u221E\")) {\n-                    startValue = Double.NEGATIVE_INFINITY;\n-                } else {\n-                    startValue = Double.parseDouble(tempBuffer);\n-                }\n-\n-                if (ch == '<' && startValue != Double.POSITIVE_INFINITY &&\n-                        startValue != Double.NEGATIVE_INFINITY) {\n-                    startValue = nextDouble(startValue);\n-                }\n-                if (startValue <= oldStartValue) {\n-                    throw new IllegalArgumentException(\"Incorrect order of\"\n-                            + \" intervals, must be in ascending order\");\n-                }\n-                segments[0].setLength(0);\n-                part = 1;\n-            } else if (ch == '|') {\n-                if (count == newChoiceLimits.length) {\n-                    newChoiceLimits = doubleArraySize(newChoiceLimits);\n-                    newChoiceFormats = doubleArraySize(newChoiceFormats);\n-                }\n-                newChoiceLimits[count] = startValue;\n-                newChoiceFormats[count] = segments[1].toString();\n-                ++count;\n-                oldStartValue = startValue;\n-                segments[1].setLength(0);\n-                part = 0;\n-            } else {\n-                segments[part].append(ch);\n@@ -318,1 +320,2 @@\n-        \/\/ clean up last one\n+\n+        \/\/ clean up last one (SubPattern without trailing '|')\n@@ -320,7 +323,2 @@\n-            if (count == newChoiceLimits.length) {\n-                newChoiceLimits = doubleArraySize(newChoiceLimits);\n-                newChoiceFormats = doubleArraySize(newChoiceFormats);\n-            }\n-            newChoiceLimits[count] = startValue;\n-            newChoiceFormats[count] = segments[1].toString();\n-            ++count;\n+            limits.add(limit);\n+            formats.add(segments[1].toString());\n@@ -328,4 +326,15 @@\n-        choiceLimits = new double[count];\n-        System.arraycopy(newChoiceLimits, 0, choiceLimits, 0, count);\n-        choiceFormats = new String[count];\n-        System.arraycopy(newChoiceFormats, 0, choiceFormats, 0, count);\n+        choiceLimits = limits.stream().mapToDouble(d -> d).toArray();\n+        choiceFormats = formats.toArray(new String[0]);\n+    }\n+\n+    \/**\n+     * Converts a string value to its double representation; this is used\n+     * to create the limit segment while applying a pattern.\n+     * Handles \"\\u221E\", as specified by the pattern syntax.\n+     *\/\n+    private static double stringToNum(String str) {\n+        return switch (str) {\n+            case \"\\u221E\" -> Double.POSITIVE_INFINITY;\n+            case \"-\\u221E\" -> Double.NEGATIVE_INFINITY;\n+            default -> Double.parseDouble(str);\n+        };\n@@ -405,0 +414,1 @@\n+        Objects.requireNonNull(newPattern, \"newPattern must not be null\");\n@@ -577,0 +587,18 @@\n+    \/**\n+     * Finds the least double greater than {@code d} (if {@code positive} is\n+     * {@code true}), or the greatest double less than {@code d} (if\n+     * {@code positive} is {@code false}).\n+     * If {@code NaN}, returns same value.\n+     *\n+     * @implNote This is equivalent to calling\n+     * {@code positive ? Math.nextUp(d) : Math.nextDown(d)}\n+     *\n+     * @param d        the reference value\n+     * @param positive {@code true} if the least double is desired;\n+     *                 {@code false} otherwise\n+     * @return the least or greater double value\n+     *\/\n+    public static double nextDouble (double d, boolean positive) {\n+        return positive ? Math.nextUp(d) : Math.nextDown(d);\n+    }\n+\n@@ -596,2 +624,1 @@\n-    public Object clone()\n-    {\n+    public Object clone() {\n@@ -688,33 +715,0 @@\n-\n-    \/**\n-     * Finds the least double greater than {@code d} (if {@code positive} is\n-     * {@code true}), or the greatest double less than {@code d} (if\n-     * {@code positive} is {@code false}).\n-     * If {@code NaN}, returns same value.\n-     *\n-     * @implNote This is equivalent to calling\n-     * {@code positive ? Math.nextUp(d) : Math.nextDown(d)}\n-     *\n-     * @param d        the reference value\n-     * @param positive {@code true} if the least double is desired;\n-     *                 {@code false} otherwise\n-     * @return the least or greater double value\n-     *\/\n-    public static double nextDouble (double d, boolean positive) {\n-        return positive ? Math.nextUp(d) : Math.nextDown(d);\n-    }\n-\n-    private static double[] doubleArraySize(double[] array) {\n-        int oldSize = array.length;\n-        double[] newArray = new double[oldSize * 2];\n-        System.arraycopy(array, 0, newArray, 0, oldSize);\n-        return newArray;\n-    }\n-\n-    private String[] doubleArraySize(String[] array) {\n-        int oldSize = array.length;\n-        String[] newArray = new String[oldSize * 2];\n-        System.arraycopy(array, 0, newArray, 0, oldSize);\n-        return newArray;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/text\/ChoiceFormat.java","additions":101,"deletions":107,"binary":false,"changes":208,"status":"modified"},{"patch":"@@ -485,0 +485,25 @@\n+    \/**\n+     * A DateFormat style.\n+     * {@code Style} is an enum which corresponds to the DateFormat style\n+     * constants. Use {@code getValue()} to retrieve the associated int style\n+     * value.\n+     *\/\n+    enum Style {\n+\n+        FULL(DateFormat.FULL),\n+        LONG(DateFormat.LONG),\n+        MEDIUM(DateFormat.MEDIUM),\n+        SHORT(DateFormat.SHORT),\n+        DEFAULT(DateFormat.MEDIUM);\n+\n+        private final int value;\n+\n+        Style(int value){\n+            this.value = value;\n+        }\n+\n+        int getValue() {\n+            return value;\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/text\/DateFormat.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import java.io.InvalidObjectException;\n@@ -43,0 +42,1 @@\n+import java.io.InvalidObjectException;\n@@ -44,1 +44,1 @@\n-import java.text.DecimalFormat;\n+import java.time.format.DateTimeFormatter;\n@@ -55,1 +55,1 @@\n- * messages in a language-neutral way. Use this to construct messages\n+ * messages in a language-neutral way. Use this class to construct messages\n@@ -85,2 +85,10 @@\n- * <i>FormatType: one of <\/i>\n- *         number date time choice\n+ * <i>FormatType:<\/i>\n+ *         number\n+ *         dtf_date\n+ *         dtf_time\n+ *         dtf_datetime\n+ *         <i>pre-defined DateTimeFormatter(s)<\/i>\n+ *         date\n+ *         time\n+ *         choice\n+ *         list\n@@ -96,0 +104,4 @@\n+ *         compact_short\n+ *         compact_long\n+ *         or\n+ *         unit\n@@ -99,39 +111,0 @@\n- * <p>Within a <i>String<\/i>, a pair of single quotes can be used to\n- * quote any arbitrary characters except single quotes. For example,\n- * pattern string <code>\"'{0}'\"<\/code> represents string\n- * <code>\"{0}\"<\/code>, not a <i>FormatElement<\/i>. A single quote itself\n- * must be represented by doubled single quotes {@code ''} throughout a\n- * <i>String<\/i>.  For example, pattern string <code>\"'{''}'\"<\/code> is\n- * interpreted as a sequence of <code>'{<\/code> (start of quoting and a\n- * left curly brace), {@code ''} (a single quote), and\n- * <code>}'<\/code> (a right curly brace and end of quoting),\n- * <em>not<\/em> <code>'{'<\/code> and <code>'}'<\/code> (quoted left and\n- * right curly braces): representing string <code>\"{'}\"<\/code>,\n- * <em>not<\/em> <code>\"{}\"<\/code>.\n- *\n- * <p>A <i>SubformatPattern<\/i> is interpreted by its corresponding\n- * subformat, and subformat-dependent pattern rules apply. For example,\n- * pattern string <code>\"{1,number,<u>$'#',##<\/u>}\"<\/code>\n- * (<i>SubformatPattern<\/i> with underline) will produce a number format\n- * with the pound-sign quoted, with a result such as: {@code\n- * \"$#31,45\"}. Refer to each {@code Format} subclass documentation for\n- * details.\n- *\n- * <p>Any unmatched quote is treated as closed at the end of the given\n- * pattern. For example, pattern string {@code \"'{0}\"} is treated as\n- * pattern {@code \"'{0}'\"}.\n- *\n- * <p>Any curly braces within an unquoted pattern must be balanced. For\n- * example, <code>\"ab {0} de\"<\/code> and <code>\"ab '}' de\"<\/code> are\n- * valid patterns, but <code>\"ab {0'}' de\"<\/code>, <code>\"ab } de\"<\/code>\n- * and <code>\"''{''\"<\/code> are not.\n- *\n- * <dl><dt><b>Warning:<\/b><dd>The rules for using quotes within message\n- * format patterns unfortunately have shown to be somewhat confusing.\n- * In particular, it isn't always obvious to localizers whether single\n- * quotes need to be doubled or not. Make sure to inform localizers about\n- * the rules, and tell them (for example, by using comments in resource\n- * bundle source files) which strings will be processed by {@code MessageFormat}.\n- * Note that localizers may need to use single quotes in translated\n- * strings where the original version doesn't have them.\n- * <\/dl>\n@@ -146,2 +119,3 @@\n- * table shows how the values map to {@code Format} instances. Combinations not\n- * shown in the table are illegal. A <i>SubformatPattern<\/i> must\n+ * table shows how the values map to {@code Format} instances. These values\n+ * are case-insensitive when passed to {@link #applyPattern(String)}. Combinations\n+ * not shown in the table are illegal. A <i>SubformatPattern<\/i> must\n@@ -164,1 +138,1 @@\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=5>{@code number}\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=7>{@code number}\n@@ -177,0 +151,34 @@\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code compact_short}\n+ *       <td>{@link NumberFormat#getCompactNumberInstance(Locale, NumberFormat.Style)\n+ *       NumberFormat.getCompactNumberInstance}{@code (getLocale(),} {@link NumberFormat.Style#SHORT})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code compact_long}\n+ *       <td>{@link NumberFormat#getCompactNumberInstance(Locale, NumberFormat.Style)\n+ *       NumberFormat.getCompactNumberInstance}{@code (getLocale(),} {@link NumberFormat.Style#LONG})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@code new} {@link DecimalFormat#DecimalFormat(String,DecimalFormatSymbols)\n+ *       DecimalFormat}{@code (subformatPattern,} {@link DecimalFormatSymbols#getInstance(Locale)\n+ *       DecimalFormatSymbols.getInstance}{@code (getLocale()))}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_date}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n+ *    <tr>\n@@ -178,1 +186,70 @@\n- *       <td>{@code new} {@link DecimalFormat#DecimalFormat(String,DecimalFormatSymbols) DecimalFormat}{@code (subformatPattern,} {@link DecimalFormatSymbols#getInstance(Locale) DecimalFormatSymbols.getInstance}{@code (getLocale()))}\n+ *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)\n+ *       DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_time}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)   DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_datetime}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)\n+ *       DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=1>{@code pre-defined DateTimeFormatter(s)}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>The {@code pre-defined DateTimeFormatter(s)} are used as a {@code FormatType} :\n+ *       {@link DateTimeFormatter#BASIC_ISO_DATE BASIC_ISO_DATE},\n+ *       {@link DateTimeFormatter#ISO_LOCAL_DATE ISO_LOCAL_DATE},\n+ *       {@link DateTimeFormatter#ISO_OFFSET_DATE ISO_OFFSET_DATE},\n+ *       {@link DateTimeFormatter#ISO_DATE ISO_DATE},\n+ *       {@link DateTimeFormatter#ISO_LOCAL_TIME ISO_LOCAL_TIME},\n+ *       {@link DateTimeFormatter#ISO_OFFSET_TIME ISO_OFFSET_TIME},\n+ *       {@link DateTimeFormatter#ISO_TIME ISO_TIME},\n+ *       {@link DateTimeFormatter#ISO_LOCAL_DATE_TIME ISO_LOCAL_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_OFFSET_DATE_TIME ISO_OFFSET_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_ZONED_DATE_TIME ISO_ZONED_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_DATE_TIME ISO_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_ORDINAL_DATE ISO_ORDINAL_DATE},\n+ *       {@link DateTimeFormatter#ISO_WEEK_DATE ISO_WEEK_DATE},\n+ *       {@link DateTimeFormatter#ISO_INSTANT ISO_INSTANT},\n+ *       {@link DateTimeFormatter#RFC_1123_DATE_TIME RFC_1123_DATE_TIME}\n@@ -182,1 +259,2 @@\n- *       <td>{@link DateFormat#getDateInstance(int,Locale) DateFormat.getDateInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getDateInstance(int,Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n@@ -185,1 +263,2 @@\n- *       <td>{@link DateFormat#getDateInstance(int,Locale) DateFormat.getDateInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getDateInstance(int,Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n@@ -188,1 +267,2 @@\n- *       <td>{@link DateFormat#getDateInstance(int,Locale) DateFormat.getDateInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getDateInstance(int,Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#MEDIUM}{@code , getLocale())}\n@@ -191,1 +271,2 @@\n- *       <td>{@link DateFormat#getDateInstance(int,Locale) DateFormat.getDateInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getDateInstance(int,Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n@@ -194,1 +275,2 @@\n- *       <td>{@link DateFormat#getDateInstance(int,Locale) DateFormat.getDateInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getDateInstance(int,Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n@@ -197,1 +279,2 @@\n- *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String,Locale) SimpleDateFormat}{@code (subformatPattern, getLocale())}\n+ *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String,Locale)\n+ *       SimpleDateFormat}{@code (subformatPattern, getLocale())}\n@@ -201,1 +284,2 @@\n- *       <td>{@link DateFormat#getTimeInstance(int,Locale) DateFormat.getTimeInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getTimeInstance(int,Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n@@ -204,1 +288,2 @@\n- *       <td>{@link DateFormat#getTimeInstance(int,Locale) DateFormat.getTimeInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getTimeInstance(int,Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n@@ -207,1 +292,2 @@\n- *       <td>{@link DateFormat#getTimeInstance(int,Locale) DateFormat.getTimeInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getTimeInstance(int,Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#MEDIUM}{@code , getLocale())}\n@@ -210,1 +296,2 @@\n- *       <td>{@link DateFormat#getTimeInstance(int,Locale) DateFormat.getTimeInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getTimeInstance(int,Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n@@ -213,1 +300,2 @@\n- *       <td>{@link DateFormat#getTimeInstance(int,Locale) DateFormat.getTimeInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n+ *       <td>{@link DateFormat#getTimeInstance(int,Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n@@ -216,1 +304,2 @@\n- *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String,Locale) SimpleDateFormat}{@code (subformatPattern, getLocale())}\n+ *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String,Locale)\n+ *       SimpleDateFormat}{@code (subformatPattern, getLocale())}\n@@ -221,0 +310,13 @@\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=3>{@code list}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n+ *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#STANDARD}, {@link ListFormat.Style#FULL})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code or}\n+ *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n+ *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#OR}, {@link ListFormat.Style#FULL})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code unit}\n+ *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n+ *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#UNIT}, {@link ListFormat.Style#FULL}}\n@@ -224,1 +326,43 @@\n- * <h3>Usage Information<\/h3>\n+ * <h3>Quoting Rules in Patterns<\/h3>\n+ *\n+ * <p>Within a <i>String<\/i>, a pair of single quotes can be used to\n+ * quote any arbitrary characters except single quotes. For example,\n+ * pattern string <code>\"'{0}'\"<\/code> represents string\n+ * <code>\"{0}\"<\/code>, not a <i>FormatElement<\/i>. A single quote itself\n+ * must be represented by doubled single quotes {@code ''} throughout a\n+ * <i>String<\/i>.  For example, pattern string <code>\"'{''}'\"<\/code> is\n+ * interpreted as a sequence of <code>'{<\/code> (start of quoting and a\n+ * left curly brace), {@code ''} (a single quote), and\n+ * <code>}'<\/code> (a right curly brace and end of quoting),\n+ * <em>not<\/em> <code>'{'<\/code> and <code>'}'<\/code> (quoted left and\n+ * right curly braces): representing string <code>\"{'}\"<\/code>,\n+ * <em>not<\/em> <code>\"{}\"<\/code>.\n+ *\n+ * <p>A <i>SubformatPattern<\/i> is interpreted by its corresponding\n+ * subformat, and subformat-dependent pattern rules apply. For example,\n+ * pattern string <code>\"{1,number,<u>$'#',##<\/u>}\"<\/code>\n+ * (<i>SubformatPattern<\/i> with underline) will produce a number format\n+ * with the pound-sign quoted, with a result such as: {@code\n+ * \"$#31,45\"}. Refer to each {@code Format} subclass documentation for\n+ * details.\n+ *\n+ * <p>Any unmatched quote is treated as closed at the end of the given\n+ * pattern. For example, pattern string {@code \"'{0}\"} is treated as\n+ * pattern {@code \"'{0}'\"}.\n+ *\n+ * <p>Any curly braces within an unquoted pattern must be balanced. For\n+ * example, <code>\"ab {0} de\"<\/code> and <code>\"ab '}' de\"<\/code> are\n+ * valid patterns, but <code>\"ab {0'}' de\"<\/code>, <code>\"ab } de\"<\/code>\n+ * and <code>\"''{''\"<\/code> are not.\n+ *\n+ * <dl><dt><b>Warning:<\/b><dd>The rules for using quotes within message\n+ * format patterns unfortunately have shown to be somewhat confusing.\n+ * In particular, it isn't always obvious to localizers whether single\n+ * quotes need to be doubled or not. Make sure to inform localizers about\n+ * the rules, and tell them (for example, by using comments in resource\n+ * bundle source files) which strings will be processed by {@code MessageFormat}.\n+ * Note that localizers may need to use single quotes in translated\n+ * strings where the original version doesn't have them.\n+ * <\/dl>\n+ *\n+ * <h2>Usage Information<\/h2>\n@@ -227,4 +371,4 @@\n- * Here are some examples of usage.\n- * In real internationalized programs, the message format pattern and other\n- * static strings will, of course, be obtained from resource bundles.\n- * Other parameters will be dynamically determined at runtime.\n+ * The following example demonstrates a general usage of {@code MessageFormat}.\n+ * In internationalized programs, the message format pattern and other\n+ * static strings will likely be obtained from resource bundles.\n+ *\n@@ -232,2 +376,0 @@\n- * The first example uses the static method {@code MessageFormat.format},\n- * which internally creates a {@code MessageFormat} for one-time use:\n@@ -237,1 +379,0 @@\n- *\n@@ -240,1 +381,1 @@\n- *     planet, new Date(), event);\n+ *     planet, new GregorianCalendar(2053, Calendar.JULY, 3, 12, 30).getTime(), event);\n@@ -242,4 +383,0 @@\n- * The output is:\n- * <blockquote><pre>\n- * At 12:30 PM on Jul 3, 2053, there was a disturbance in the Force on planet 7.\n- * <\/pre><\/blockquote>\n@@ -247,14 +384,1 @@\n- * <p>\n- * The following example creates a {@code MessageFormat} instance that\n- * can be used repeatedly:\n- * {@snippet lang=java :\n- * int fileCount = 1273;\n- * String diskName = \"MyDisk\";\n- * Object[] testArgs = {Long.valueOf(fileCount), diskName};\n- *\n- * MessageFormat form = new MessageFormat(\n- *     \"The disk \\\"{1}\\\" contains {0} file(s).\");\n- *\n- * System.out.println(form.format(testArgs));\n- * }\n- * The output with different values for {@code fileCount}:\n+ * {@code result} returns the following:\n@@ -262,3 +386,1 @@\n- * The disk \"MyDisk\" contains 0 file(s).\n- * The disk \"MyDisk\" contains 1 file(s).\n- * The disk \"MyDisk\" contains 1,273 file(s).\n+ * At 12:30:00 PM on Jul 3, 2053, there was a disturbance in the Force on planet 7.\n@@ -271,7 +393,3 @@\n- * MessageFormat msgFmt = new MessageFormat(\"The disk \\\"{0}\\\" contains {1}.\");\n- * double[] fileLimits = {0,1,2};\n- * String[] filePart = {\"no files\",\"one file\",\"{1,number} files\"};\n- * ChoiceFormat fileChoices = new ChoiceFormat(fileLimits, filePart);\n- * msgFmt.setFormatByArgumentIndex(1, fileChoices);\n- * Object[] args = {\"MyDisk\", 1273};\n- * System.out.println(msgFmt.format(args));\n+ * MessageFormat msgFmt = new MessageFormat(\"The disk \\\"{0}\\\" contains {1,choice,0#no files|1#one file|1< {1,number,integer} files}.\");\n+ * Object[] args = {\"MyDisk\", fileCount};\n+ * String result = msgFmt.format(args);\n@@ -279,1 +397,2 @@\n- * The output with different values for {@code fileCount}:\n+ *\n+ * {@code result} with different values for {@code fileCount}, returns the following:\n@@ -287,9 +406,0 @@\n- * You can create the {@code ChoiceFormat} programmatically, as in the\n- * above example, or by using a pattern. See {@link ChoiceFormat}\n- * for more information.\n- * {@snippet lang=java :\n- * msgFmt.applyPattern(\n- *    \"There {0,choice,0#are no files|1#is one file|1<are {1,number,integer} files}.\");\n- * }\n- *\n- * <p>\n@@ -307,0 +417,29 @@\n+ *\n+ * <h2>Formatting Date and Time<\/h2>\n+ *\n+ * MessageFormat provides patterns that support the date\/time formatters in the\n+ * {@link java.time.format} and {@link java.text} packages. Consider the following three examples,\n+ * with a date of 11\/16\/2023:\n+ *\n+ * <p>1) a <i>date<\/i> {@code FormatType} with a <i>full<\/i> {@code FormatStyle},\n+ * {@snippet lang=java :\n+ * Object[] arg = {new GregorianCalendar(2023, Calendar.NOVEMBER, 16).getTime()};\n+ * var fmt = new MessageFormat(\"The date was {0,date,full}\");\n+ * fmt.format(arg); \/\/ returns \"The date was Thursday, November 16, 2023\"\n+ * }\n+ *\n+ * <p>2) a <i>dtf_date<\/i> {@code FormatType} with a <i>full<\/i> {@code FormatStyle},\n+ * {@snippet lang=java :\n+ * Object[] arg = {LocalDate.of(2023, 11, 16)};\n+ * var fmt = new MessageFormat(\"The date was {0,dtf_date,full}\");\n+ * fmt.format(arg); \/\/ returns \"The date was Thursday, November 16, 2023\"\n+ * }\n+ *\n+ * <p>3) an <i>ISO_LOCAL_DATE<\/i> {@code FormatType},\n+ * {@snippet lang=java :\n+ * Object[] arg = {LocalDate.of(2023, 11, 16)};\n+ * var fmt = new MessageFormat(\"The date was {0,ISO_LOCAL_DATE}\");\n+ * fmt.format(arg); \/\/ returns \"The date was 2023-11-16\"\n+ * }\n+ *\n+ * <h3>Parsing<\/h3>\n@@ -346,0 +485,1 @@\n+ * @see          DateTimeFormatter\n@@ -516,1 +656,1 @@\n-                                makeFormat(i, formatNumber, segments);\n+                                setFormatFromPattern(i, formatNumber, segments);\n@@ -552,1 +692,3 @@\n-     * Returns a pattern representing the current state of the message format.\n+     * {@return a String pattern adhering to the {@link ##patterns patterns section} that\n+     * represents the current state of this {@code MessageFormat}}\n+     *\n@@ -559,3 +701,3 @@\n-     * is semantically equivalent to this instance.\n-     *\n-     * @return a pattern representing the current state of the message format\n+     * is semantically equivalent to this instance. If a subformat cannot be\n+     * converted to a String pattern, the {@code FormatType} and {@code FormatStyle}\n+     * will be omitted from the {@code FormatElement}.\n@@ -570,40 +712,49 @@\n-            result.append('{').append(argumentNumbers[i]);\n-            Format fmt = formats[i];\n-            String subformatPattern = null;\n-            if (fmt == null) {\n-                \/\/ do nothing, string format\n-            } else if (fmt instanceof NumberFormat) {\n-                if (fmt.equals(NumberFormat.getInstance(locale))) {\n-                    result.append(\",number\");\n-                } else if (fmt.equals(NumberFormat.getCurrencyInstance(locale))) {\n-                    result.append(\",number,currency\");\n-                } else if (fmt.equals(NumberFormat.getPercentInstance(locale))) {\n-                    result.append(\",number,percent\");\n-                } else if (fmt.equals(NumberFormat.getIntegerInstance(locale))) {\n-                    result.append(\",number,integer\");\n-                } else {\n-                    if (fmt instanceof DecimalFormat dfmt) {\n-                        result.append(\",number\");\n-                        subformatPattern = dfmt.toPattern();\n-                    } else if (fmt instanceof ChoiceFormat cfmt) {\n-                        result.append(\",choice\");\n-                        subformatPattern = cfmt.toPattern();\n-                    } else {\n-                        \/\/ UNKNOWN\n-                    }\n-                }\n-            } else if (fmt instanceof DateFormat) {\n-                int index;\n-                for (index = MODIFIER_DEFAULT; index < DATE_TIME_MODIFIERS.length; index++) {\n-                    DateFormat df = DateFormat.getDateInstance(DATE_TIME_MODIFIERS[index],\n-                                                               locale);\n-                    if (fmt.equals(df)) {\n-                        result.append(\",date\");\n-                        break;\n-                    }\n-                    df = DateFormat.getTimeInstance(DATE_TIME_MODIFIERS[index],\n-                                                    locale);\n-                    if (fmt.equals(df)) {\n-                        result.append(\",time\");\n-                        break;\n-                    }\n+            result.append('{')\n+                    .append(argumentNumbers[i])\n+                    .append(patternFromFormat(formats[i]))\n+                    .append('}');\n+        }\n+        copyAndFixQuotes(pattern, lastOffset, pattern.length(), result);\n+        return result.toString();\n+    }\n+\n+    \/**\n+     * This method converts a Format into a {@code FormatType} and {@code\n+     * FormatStyle}, if applicable. For each Format, this method will\n+     * first check against the pre-defined styles established in the\n+     * {@link ##patterns patterns section}. Any \"default\"\/\"medium\" styles\n+     * are omitted according to the specification.\n+     * If a Format does not match to a pre-defined style, it will provide the\n+     * {@code SubformatPattern}, if the Format class can provide one. The\n+     * following subformats do not provide a {@code SubformatPattern}:\n+     * CompactNumberFormat, ListFormat, and DateTimeFormatter (ClassicFormat).\n+     *\n+     * <p>In addition, since DateTimeFormatter and ClassicFormat do not implement {@code equals()},\n+     * there is not a means to compare {@code fmt} to a ClassicFormat for equality,\n+     * and thus we don't have enough info to represent it as a pattern since there is no way to check\n+     * if {@code fmt} is equal to some, (for example, \"long\" style) pre-defined ClassicFormat.\n+     * Even if ClassicFormat implemented equals(), it is a wrapper class for\n+     * DateTimeFormatter, which would require DTF to implement equals() as well to effectively\n+     * compare the two ClassicFormats.\n+     *\/\n+    private String patternFromFormat(Format fmt) {\n+        if (fmt instanceof NumberFormat nFmt) {\n+            \/\/ Check nFmt factory instances\n+            String nStyle = NumberFormat.matchToStyle(nFmt, locale);\n+            if (nStyle != null) {\n+                return \",number\" + (nStyle.isEmpty() ? nStyle : \",\" + nStyle);\n+            }\n+            \/\/ Check SubformatPattern\n+            if (fmt instanceof DecimalFormat dFmt) {\n+                \/\/ Quote eligible mFmt pattern characters: '{' and '}'\n+                \/\/ Here, and in other subformatPattern instances\n+                return \",number,\" + copyAndQuoteBraces(dFmt.toPattern());\n+            } else if (fmt instanceof ChoiceFormat cFmt) {\n+                return \",choice,\" + copyAndQuoteBraces(cFmt.toPattern());\n+            }\n+        } else if (fmt instanceof DateFormat) {\n+            \/\/ Check dFmt factory instances\n+            for (DateFormat.Style style : DateFormat.Style.values()) {\n+                if (fmt.equals(DateFormat.getDateInstance(style.getValue(), locale))) {\n+                    return \",date\" + ((style.getValue() != DateFormat.DEFAULT)\n+                            ? \",\" + style.name().toLowerCase(Locale.ROOT) : \"\");\n@@ -611,9 +762,3 @@\n-                if (index >= DATE_TIME_MODIFIERS.length) {\n-                    if (fmt instanceof SimpleDateFormat sdfmt) {\n-                        result.append(\",date\");\n-                        subformatPattern = sdfmt.toPattern();\n-                    } else {\n-                        \/\/ UNKNOWN\n-                    }\n-                } else if (index != MODIFIER_DEFAULT) {\n-                    result.append(',').append(DATE_TIME_MODIFIER_KEYWORDS[index]);\n+                if (fmt.equals(DateFormat.getTimeInstance(style.getValue(), locale))) {\n+                    return \",time\" + ((style.getValue() != DateFormat.DEFAULT)\n+                            ? \",\" + style.name().toLowerCase(Locale.ROOT) : \"\");\n@@ -621,2 +766,0 @@\n-            } else {\n-                \/\/result.append(\", unknown\");\n@@ -624,7 +767,11 @@\n-            if (subformatPattern != null) {\n-                result.append(',');\n-\n-                \/\/ The subformat pattern comes already quoted, but only for those characters that are\n-                \/\/ special to the subformat. Therefore, we may need to quote additional characters.\n-                \/\/ The ones we care about at the MessageFormat level are '{' and '}'.\n-                copyAndQuoteBraces(subformatPattern, result);\n+            \/\/ Check SubformatPattern\n+            if (fmt instanceof SimpleDateFormat sdFmt) {\n+                return \",date,\" + copyAndQuoteBraces(sdFmt.toPattern());\n+            }\n+        } else if (fmt instanceof ListFormat) {\n+            \/\/ Check lFmt factory instances\n+            for (ListFormat.Type type : ListFormat.Type.values()) {\n+                if (fmt.equals(ListFormat.getInstance(locale, type, ListFormat.Style.FULL))) {\n+                    return \",list\" + ((type != ListFormat.Type.STANDARD)\n+                            ? \",\" + type.name().toLowerCase(Locale.ROOT) : \"\");\n+                }\n@@ -632,1 +779,0 @@\n-            result.append('}');\n@@ -634,2 +780,3 @@\n-        copyAndFixQuotes(pattern, lastOffset, pattern.length(), result);\n-        return result.toString();\n+        \/\/ By here, this is an instanceof Format that is unknown to MessageFormat.\n+        \/\/ Since it is unknown, nothing can be done.\n+        return \"\";\n@@ -697,3 +844,2 @@\n-        for (int i = 0; i < runsToCopy; i++) {\n-            formats[i] = newFormats[i];\n-        }\n+        if (runsToCopy >= 0)\n+            System.arraycopy(newFormats, 0, formats, 0, runsToCopy);\n@@ -1066,1 +1212,1 @@\n-                    if (!strValue.equals(\"{\"+argumentNumbers[i]+\"}\"))\n+                    if (!strValue.equals(\"{\" + argumentNumbers[i] + \"}\"))\n@@ -1453,59 +1599,15 @@\n-    private static final int SEG_RAW      = 0;\n-    private static final int SEG_INDEX    = 1;\n-    private static final int SEG_TYPE     = 2;\n-    private static final int SEG_MODIFIER = 3; \/\/ modifier or subformat\n-\n-    \/\/ Indices for type keywords\n-    private static final int TYPE_NULL    = 0;\n-    private static final int TYPE_NUMBER  = 1;\n-    private static final int TYPE_DATE    = 2;\n-    private static final int TYPE_TIME    = 3;\n-    private static final int TYPE_CHOICE  = 4;\n-\n-    private static final String[] TYPE_KEYWORDS = {\n-        \"\",\n-        \"number\",\n-        \"date\",\n-        \"time\",\n-        \"choice\"\n-    };\n-\n-    \/\/ Indices for number modifiers\n-    private static final int MODIFIER_DEFAULT  = 0; \/\/ common in number and date-time\n-    private static final int MODIFIER_CURRENCY = 1;\n-    private static final int MODIFIER_PERCENT  = 2;\n-    private static final int MODIFIER_INTEGER  = 3;\n-\n-    private static final String[] NUMBER_MODIFIER_KEYWORDS = {\n-        \"\",\n-        \"currency\",\n-        \"percent\",\n-        \"integer\"\n-    };\n-\n-    \/\/ Indices for date-time modifiers\n-    private static final int MODIFIER_SHORT   = 1;\n-    private static final int MODIFIER_MEDIUM  = 2;\n-    private static final int MODIFIER_LONG    = 3;\n-    private static final int MODIFIER_FULL    = 4;\n-\n-    private static final String[] DATE_TIME_MODIFIER_KEYWORDS = {\n-        \"\",\n-        \"short\",\n-        \"medium\",\n-        \"long\",\n-        \"full\"\n-    };\n-\n-    \/\/ Date-time style values corresponding to the date-time modifiers.\n-    private static final int[] DATE_TIME_MODIFIERS = {\n-        DateFormat.DEFAULT,\n-        DateFormat.SHORT,\n-        DateFormat.MEDIUM,\n-        DateFormat.LONG,\n-        DateFormat.FULL,\n-    };\n-\n-    private void makeFormat(int position, int offsetNumber,\n-                            StringBuilder[] textSegments)\n-    {\n+    private static final int SEG_RAW      = 0; \/\/ String in MessageFormatPattern\n+    private static final int SEG_INDEX    = 1; \/\/ ArgumentIndex\n+    private static final int SEG_TYPE     = 2; \/\/ FormatType\n+    private static final int SEG_MODIFIER = 3; \/\/ FormatStyle\n+\n+    \/**\n+     * This method sets a Format in the {@code formats} array for the\n+     * corresponding {@code argumentNumber} based on the pattern supplied.\n+     * If the pattern supplied does not contain a {@code FormatType}, null\n+     * is stored in the {@code formats} array.\n+     *\/\n+    private void setFormatFromPattern(int position, int offsetNumber,\n+                            StringBuilder[] textSegments) {\n+\n+        \/\/ Convert any null values in textSegments to empty string\n@@ -1544,0 +1646,1 @@\n+\n@@ -1549,2 +1652,1 @@\n-        \/\/ now get the format\n-        Format newFormat = null;\n+        \/\/ Only search for corresponding type\/style if type is not empty\n@@ -1552,67 +1654,4 @@\n-            int type = findKeyword(segments[SEG_TYPE], TYPE_KEYWORDS);\n-            switch (type) {\n-            case TYPE_NULL:\n-                \/\/ Type \"\" is allowed. e.g., \"{0,}\", \"{0,,}\", and \"{0,,#}\"\n-                \/\/ are treated as \"{0}\".\n-                break;\n-\n-            case TYPE_NUMBER:\n-                switch (findKeyword(segments[SEG_MODIFIER], NUMBER_MODIFIER_KEYWORDS)) {\n-                case MODIFIER_DEFAULT:\n-                    newFormat = NumberFormat.getInstance(locale);\n-                    break;\n-                case MODIFIER_CURRENCY:\n-                    newFormat = NumberFormat.getCurrencyInstance(locale);\n-                    break;\n-                case MODIFIER_PERCENT:\n-                    newFormat = NumberFormat.getPercentInstance(locale);\n-                    break;\n-                case MODIFIER_INTEGER:\n-                    newFormat = NumberFormat.getIntegerInstance(locale);\n-                    break;\n-                default: \/\/ DecimalFormat pattern\n-                    try {\n-                        newFormat = new DecimalFormat(segments[SEG_MODIFIER],\n-                                                      DecimalFormatSymbols.getInstance(locale));\n-                    } catch (IllegalArgumentException e) {\n-                        maxOffset = oldMaxOffset;\n-                        throw e;\n-                    }\n-                    break;\n-                }\n-                break;\n-\n-            case TYPE_DATE:\n-            case TYPE_TIME:\n-                int mod = findKeyword(segments[SEG_MODIFIER], DATE_TIME_MODIFIER_KEYWORDS);\n-                if (mod >= 0 && mod < DATE_TIME_MODIFIER_KEYWORDS.length) {\n-                    if (type == TYPE_DATE) {\n-                        newFormat = DateFormat.getDateInstance(DATE_TIME_MODIFIERS[mod],\n-                                                               locale);\n-                    } else {\n-                        newFormat = DateFormat.getTimeInstance(DATE_TIME_MODIFIERS[mod],\n-                                                               locale);\n-                    }\n-                } else {\n-                    \/\/ SimpleDateFormat pattern\n-                    try {\n-                        newFormat = new SimpleDateFormat(segments[SEG_MODIFIER], locale);\n-                    } catch (IllegalArgumentException e) {\n-                        maxOffset = oldMaxOffset;\n-                        throw e;\n-                    }\n-                }\n-                break;\n-\n-            case TYPE_CHOICE:\n-                try {\n-                    \/\/ ChoiceFormat pattern\n-                    newFormat = new ChoiceFormat(segments[SEG_MODIFIER]);\n-                } catch (Exception e) {\n-                    maxOffset = oldMaxOffset;\n-                    throw new IllegalArgumentException(\"Choice Pattern incorrect: \"\n-                                                       + segments[SEG_MODIFIER], e);\n-                }\n-                break;\n-\n-            default:\n+            try {\n+                formats[offsetNumber] = formatFromPattern(segments[SEG_TYPE], segments[SEG_MODIFIER]);\n+            } catch (Exception e) {\n+                \/\/ Catch to reset maxOffset\n@@ -1620,2 +1659,1 @@\n-                throw new IllegalArgumentException(\"unknown format type: \" +\n-                                                   segments[SEG_TYPE]);\n+                throw e;\n@@ -1623,0 +1661,4 @@\n+        } else {\n+            \/\/ Type \"\" is allowed. e.g., \"{0,}\", \"{0,,}\", and \"{0,,#}\"\n+            \/\/ are treated as \"{0}\".\n+            formats[offsetNumber] = null;\n@@ -1624,1 +1666,0 @@\n-        formats[offsetNumber] = newFormat;\n@@ -1627,4 +1668,29 @@\n-    private static int findKeyword(String s, String[] list) {\n-        for (int i = 0; i < list.length; ++i) {\n-            if (s.equals(list[i]))\n-                return i;\n+    \/**\n+     * This method converts a {@code FormatType} and {@code FormatStyle} to a\n+     * {@code Format} value. The String parameters are converted\n+     * to their corresponding enum values FormatType and FormatStyle which are used\n+     * to return a {@code Format}. See the patterns section in the class\n+     * description for further detail on a MessageFormat pattern.\n+     *\n+     * @param type the {@code FormatType} in {@code FormatElement}\n+     * @param style the {@code FormatStyle} in {@code FormatElement}\n+     * @return a Format that corresponds to the corresponding {@code formatType}\n+     *         and {@code formatStyle}\n+     * @throws IllegalArgumentException if a Format cannot be produced from the\n+     *         type and style provided\n+     *\/\n+    private Format formatFromPattern(String type, String style) {\n+        \/\/ Get the type, if it's valid\n+        FormatType fType;\n+        try {\n+            fType = FormatType.valueOf(type.trim().toUpperCase(Locale.ROOT));\n+        } catch (IllegalArgumentException iae) {\n+            \/\/ Invalid type throws exception\n+            throw new IllegalArgumentException(\"unknown format type: \" + type);\n+        }\n+        \/\/ Get the style if recognized, otherwise treat style as a SubformatPattern\n+        FormatStyle fStyle;\n+        try {\n+            fStyle = FormatStyle.fromString(style);\n+        } catch (IllegalArgumentException iae) {\n+            fStyle = FormatStyle.SUBFORMATPATTERN;\n@@ -1632,0 +1698,104 @@\n+        return switch (fType) {\n+            case NUMBER -> switch (fStyle) {\n+                case DEFAULT -> NumberFormat.getInstance(locale);\n+                case CURRENCY ->\n+                        NumberFormat.getCurrencyInstance(locale);\n+                case PERCENT ->\n+                        NumberFormat.getPercentInstance(locale);\n+                case INTEGER ->\n+                        NumberFormat.getIntegerInstance(locale);\n+                case COMPACT_SHORT ->\n+                        NumberFormat.getCompactNumberInstance(locale, NumberFormat.Style.SHORT);\n+                case COMPACT_LONG ->\n+                        NumberFormat.getCompactNumberInstance(locale, NumberFormat.Style.LONG);\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            case DATE -> switch (fStyle) {\n+                case DEFAULT ->\n+                        DateFormat.getDateInstance(DateFormat.DEFAULT, locale);\n+                case SHORT ->\n+                        DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+                case MEDIUM ->\n+                        DateFormat.getDateInstance(DateFormat.MEDIUM, locale);\n+                case LONG ->\n+                        DateFormat.getDateInstance(DateFormat.LONG, locale);\n+                case FULL ->\n+                        DateFormat.getDateInstance(DateFormat.FULL, locale);\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            case TIME -> switch (fStyle) {\n+                case DEFAULT ->\n+                        DateFormat.getTimeInstance(DateFormat.DEFAULT, locale);\n+                case SHORT ->\n+                        DateFormat.getTimeInstance(DateFormat.SHORT, locale);\n+                case MEDIUM ->\n+                        DateFormat.getTimeInstance(DateFormat.MEDIUM, locale);\n+                case LONG ->\n+                        DateFormat.getTimeInstance(DateFormat.LONG, locale);\n+                case FULL ->\n+                        DateFormat.getTimeInstance(DateFormat.FULL, locale);\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            case DTF_DATE -> switch (fStyle) {\n+                case DEFAULT, MEDIUM ->\n+                        DateTimeFormatter.ofLocalizedDate(java.time.format.FormatStyle.MEDIUM).withLocale(locale).toFormat();\n+                case SHORT ->\n+                        DateTimeFormatter.ofLocalizedDate(java.time.format.FormatStyle.SHORT).withLocale(locale).toFormat();\n+                case LONG ->\n+                        DateTimeFormatter.ofLocalizedDate(java.time.format.FormatStyle.LONG).withLocale(locale).toFormat();\n+                case FULL ->\n+                        DateTimeFormatter.ofLocalizedDate(java.time.format.FormatStyle.FULL).withLocale(locale).toFormat();\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            case DTF_TIME -> switch (fStyle) {\n+                case DEFAULT, MEDIUM ->\n+                        DateTimeFormatter.ofLocalizedTime(java.time.format.FormatStyle.MEDIUM).withLocale(locale).toFormat();\n+                case SHORT ->\n+                        DateTimeFormatter.ofLocalizedTime(java.time.format.FormatStyle.SHORT).withLocale(locale).toFormat();\n+                case LONG ->\n+                        DateTimeFormatter.ofLocalizedTime(java.time.format.FormatStyle.LONG).withLocale(locale).toFormat();\n+                case FULL ->\n+                        DateTimeFormatter.ofLocalizedTime(java.time.format.FormatStyle.FULL).withLocale(locale).toFormat();\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            case DTF_DATETIME -> switch (fStyle) {\n+                case DEFAULT, MEDIUM ->\n+                        DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle.MEDIUM).withLocale(locale).toFormat();\n+                case SHORT ->\n+                        DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle.SHORT).withLocale(locale).toFormat();\n+                case LONG ->\n+                        DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle.LONG).withLocale(locale).toFormat();\n+                case FULL ->\n+                        DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle.FULL).withLocale(locale).toFormat();\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            case CHOICE -> formatFromSubformatPattern(fType, style);\n+            case LIST -> switch (fStyle) {\n+                case DEFAULT ->\n+                        ListFormat.getInstance(locale, ListFormat.Type.STANDARD, ListFormat.Style.FULL);\n+                case OR ->\n+                        ListFormat.getInstance(locale, ListFormat.Type.OR, ListFormat.Style.FULL);\n+                case UNIT ->\n+                        ListFormat.getInstance(locale, ListFormat.Type.UNIT, ListFormat.Style.FULL);\n+                \/\/ ListFormat does not provide a String pattern method\/constructor\n+                default -> formatFromSubformatPattern(fType, style);\n+            };\n+            \/\/ The DateTimeFormatter constants are only given as a type\n+            \/\/ Regardless of style, return the corresponding DTF constant\n+            case BASIC_ISO_DATE -> DateTimeFormatter.BASIC_ISO_DATE.toFormat();\n+            case ISO_LOCAL_DATE -> DateTimeFormatter.ISO_LOCAL_DATE.toFormat();\n+            case ISO_OFFSET_DATE -> DateTimeFormatter.ISO_OFFSET_DATE.toFormat();\n+            case ISO_DATE -> DateTimeFormatter.ISO_DATE.toFormat();\n+            case ISO_LOCAL_TIME -> DateTimeFormatter.ISO_LOCAL_TIME.toFormat();\n+            case ISO_OFFSET_TIME -> DateTimeFormatter.ISO_OFFSET_TIME.toFormat();\n+            case ISO_TIME -> DateTimeFormatter.ISO_TIME.toFormat();\n+            case ISO_LOCAL_DATE_TIME -> DateTimeFormatter.ISO_LOCAL_DATE_TIME.toFormat();\n+            case ISO_OFFSET_DATE_TIME -> DateTimeFormatter.ISO_OFFSET_DATE_TIME.toFormat();\n+            case ISO_ZONED_DATE_TIME -> DateTimeFormatter.ISO_ZONED_DATE_TIME.toFormat();\n+            case ISO_DATE_TIME -> DateTimeFormatter.ISO_DATE_TIME.toFormat();\n+            case ISO_ORDINAL_DATE -> DateTimeFormatter.ISO_ORDINAL_DATE.toFormat();\n+            case ISO_WEEK_DATE -> DateTimeFormatter.ISO_WEEK_DATE.toFormat();\n+            case ISO_INSTANT -> DateTimeFormatter.ISO_INSTANT.toFormat();\n+            case RFC_1123_DATE_TIME -> DateTimeFormatter.RFC_1123_DATE_TIME.toFormat();\n+        };\n+    }\n@@ -1633,6 +1803,40 @@\n-        \/\/ Try trimmed lowercase.\n-        String ls = s.trim().toLowerCase(Locale.ROOT);\n-        if (ls != s) {\n-            for (int i = 0; i < list.length; ++i) {\n-                if (ls.equals(list[i]))\n-                    return i;\n+    \/**\n+     * This method will attempt to return a subformat produced with the provided\n+     * SubformatPattern applied. If the subformat does not support SubformatPatterns\n+     * or the SubformatPattern is illegal to the subformat, an IllegalArgumentException\n+     * is thrown. To adhere to the specification, this method ensures if an underlying\n+     * exception is thrown, it is rethrown as an IllegalArgumentException unless\n+     * the underlying exception is itself an IAE, or an NPE.\n+     *\n+     * @param fType the enum type of the subformat\n+     * @param pattern the SubformatPattern to be applied\n+     * @return a Format that corresponds to the corresponding {@code fType}\n+     *         and {@code pattern}\n+     * @throws IllegalArgumentException if a Format cannot be produced from the\n+     *         type and SubformatPattern provided\n+     *\/\n+    private Format formatFromSubformatPattern(FormatType fType, String pattern) {\n+        \/\/ Modified for neater exception value if needed\n+        String type = fType.name().charAt(0) + fType.name().substring(1).toLowerCase(Locale.ROOT);\n+        try {\n+            return switch (fType) {\n+                case NUMBER -> new DecimalFormat(pattern, DecimalFormatSymbols.getInstance(locale));\n+                case DATE, TIME -> new SimpleDateFormat(pattern, locale);\n+                case DTF_DATE, DTF_TIME, DTF_DATETIME ->\n+                        DateTimeFormatter.ofPattern(pattern).toFormat();\n+                case CHOICE -> new ChoiceFormat(pattern);\n+                \/\/ These classe(s) do not support String patterns\n+                default -> throw new IllegalArgumentException(String.format(\n+                            \"Unexpected modifier for %s: %s\", type, pattern));\n+            };\n+        } catch (Exception e) {\n+            \/\/ getClass check over separate catch block to not catch the IAE subclasses\n+            \/\/ For example, ChoiceFormat can throw a NumberFormatException\n+            if (e.getClass() == IllegalArgumentException.class\n+                    || e.getClass() == NullPointerException.class) {\n+                \/\/ If IAE no need to wrap with another IAE\n+                \/\/ If NPE, it should be thrown as is (as specified)\n+                throw e;\n+            } else {\n+                throw new IllegalArgumentException(String.format(\n+                        \"%s pattern incorrect: %s\", type, pattern), e);\n@@ -1641,1 +1845,0 @@\n-        return -1;\n@@ -1671,2 +1874,4 @@\n-    \/\/ Copy the text, but add quotes around any quotables that aren't already quoted\n-    private static void copyAndQuoteBraces(String source, StringBuilder target) {\n+    \/\/ The subformat pattern comes already quoted, but only for those characters that are\n+    \/\/ special to the subformat. Therefore, we may need to quote additional characters.\n+    \/\/ The ones we care about at the MessageFormat level are '{' and '}'.\n+    private static String copyAndQuoteBraces(String source) {\n@@ -1679,0 +1884,1 @@\n+        StringBuilder quotedSource = new StringBuilder();\n@@ -1697,2 +1903,1 @@\n-            target.append(source);\n-            return;\n+            return source;\n@@ -1706,1 +1911,1 @@\n-                target.append(ch);          \/\/ doubling works whether quoted or not\n+                quotedSource.append(ch);          \/\/ doubling works whether quoted or not\n@@ -1708,1 +1913,1 @@\n-                target.append('\\'');\n+                quotedSource.append('\\'');\n@@ -1711,1 +1916,1 @@\n-            target.append(ch);\n+            quotedSource.append(ch);\n@@ -1714,1 +1919,71 @@\n-            target.append('\\'');\n+            quotedSource.append('\\'');\n+        }\n+\n+        return quotedSource.toString();\n+    }\n+\n+    \/\/ Corresponding to the FormatType pattern\n+    private enum FormatType {\n+        NUMBER,\n+        DATE,\n+        TIME,\n+        DTF_DATE,\n+        DTF_TIME,\n+        DTF_DATETIME,\n+        CHOICE,\n+        LIST,\n+\n+        \/\/ Pre-defined DateTimeFormatter types\n+        BASIC_ISO_DATE,\n+        ISO_LOCAL_DATE,\n+        ISO_OFFSET_DATE ,\n+        ISO_DATE,\n+        ISO_LOCAL_TIME,\n+        ISO_OFFSET_TIME,\n+        ISO_TIME,\n+        ISO_LOCAL_DATE_TIME,\n+        ISO_OFFSET_DATE_TIME,\n+        ISO_ZONED_DATE_TIME,\n+        ISO_DATE_TIME,\n+        ISO_ORDINAL_DATE,\n+        ISO_WEEK_DATE,\n+        ISO_INSTANT,\n+        RFC_1123_DATE_TIME;\n+    }\n+\n+    \/\/ Corresponding to the FormatStyle pattern\n+    private enum FormatStyle {\n+        DEFAULT(\"\"),\n+        SHORT(\"short\"),\n+        MEDIUM(\"medium\"),\n+        LONG(\"long\"),\n+        FULL(\"full\"),\n+        INTEGER(\"integer\"),\n+        CURRENCY(\"currency\"),\n+        PERCENT(\"percent\"),\n+        COMPACT_SHORT(\"compact_short\"),\n+        COMPACT_LONG(\"compact_long\"),\n+        OR(\"or\"),\n+        UNIT(\"unit\"),\n+        SUBFORMATPATTERN(null);\n+\n+        private final String text;\n+\n+        \/\/ Differs from FormatType in that the text String is\n+        \/\/ not guaranteed to match the Enum name, thus a text field is used\n+        FormatStyle(String text) {\n+            this.text = text;\n+        }\n+\n+        \/\/ This method returns a FormatStyle (excluding SUBFORMATPATTERN)\n+        \/\/ that matches the passed String. If no FormatStyle is found,\n+        \/\/ an IllegalArgumentException is thrown\n+        private static FormatStyle fromString(String text) {\n+            for (FormatStyle style : values()) {\n+                \/\/ Also check trimmed case-insensitive for historical reasons\n+                if (style != FormatStyle.SUBFORMATPATTERN &&\n+                        text.trim().compareToIgnoreCase(style.text) == 0) {\n+                    return style;\n+                }\n+            }\n+            throw new IllegalArgumentException();\n","filename":"src\/java.base\/share\/classes\/java\/text\/MessageFormat.java","additions":602,"deletions":327,"binary":false,"changes":929,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -680,0 +680,27 @@\n+    \/**\n+     * This method compares the passed NumberFormat to a number of pre-defined\n+     * style NumberFormat instances, (created with the passed locale). Returns a\n+     * matching FormatStyle string if found, otherwise null.\n+     * This method is used by MessageFormat to provide string pattens for NumberFormat\n+     * Subformats. Any future pre-defined NumberFormat styles should be added to this method.\n+     *\/\n+    static String matchToStyle(NumberFormat fmt, Locale locale) {\n+        if (fmt.equals(NumberFormat.getInstance(locale))) {\n+            return \"\";\n+        } else if (fmt.equals(NumberFormat.getCurrencyInstance(locale))) {\n+            return \"currency\";\n+        } else if (fmt.equals(NumberFormat.getPercentInstance(locale))) {\n+            return \"percent\";\n+        } else if (fmt.equals(NumberFormat.getIntegerInstance(locale))) {\n+            return \"integer\";\n+        } else if (fmt.equals(NumberFormat.getCompactNumberInstance(locale,\n+                NumberFormat.Style.SHORT))) {\n+            return \"compact_short\";\n+        } else if (fmt.equals(NumberFormat.getCompactNumberInstance(locale,\n+                NumberFormat.Style.LONG))) {\n+            return \"compact_long\";\n+        } else {\n+            return null;\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/text\/NumberFormat.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-     * @param input the input array\n+     * @param coll the input collection\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1130,0 +1130,1 @@\n+\n@@ -1132,0 +1133,3 @@\n+                else\n+                    first.nextWaiter = null; \/\/ GC assistance\n+\n@@ -1137,0 +1141,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1509,0 +1509,1 @@\n+\n@@ -1511,0 +1512,3 @@\n+                else\n+                    first.nextWaiter = null; \/\/ GC assistance\n+\n@@ -1516,0 +1520,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -829,1 +829,1 @@\n-     * zip file entry.\n+     * ZIP file entry.\n@@ -837,1 +837,1 @@\n-     * @param ze the zip file entry\n+     * @param ze the ZIP file entry\n@@ -839,1 +839,1 @@\n-     *         zip file entry or null if the zip file entry does not exist\n+     *         ZIP file entry or null if the ZIP file entry does not exist\n@@ -841,1 +841,1 @@\n-     * @throws ZipException if a zip file format error has occurred\n+     * @throws ZipException if a ZIP file format error has occurred\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarFile.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -215,1 +215,3 @@\n-        writeInt(def.getTotalIn(), buf, offset + 4); \/\/ Number of uncompr. bytes\n+        \/\/ RFC 1952: Size of the original (uncompressed) input data modulo 2^32\n+        int iSize = (int) def.getBytesRead();\n+        writeInt(iSize, buf, offset + 4);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/GZIPOutputStream.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * Utility class for zipfile name and comment decoding and encoding\n+ * Utility class for ZIP file entry name and comment decoding and encoding\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -233,1 +233,1 @@\n-     * End of central directory (END) header zip file comment length field offset.\n+     * End of central directory (END) header ZIP file comment length field offset.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipConstants.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-     * Creates a new zip entry with the specified name.\n+     * Creates a new ZIP entry with the specified name.\n@@ -114,2 +114,2 @@\n-     * Creates a new zip entry with fields taken from the specified\n-     * zip entry.\n+     * Creates a new ZIP entry with fields taken from the specified\n+     * ZIP entry.\n@@ -118,1 +118,1 @@\n-     *         A zip Entry object\n+     *         A ZIP Entry object\n@@ -153,1 +153,1 @@\n-     * be stored into the {@code date and time fields} of the zip file\n+     * be stored into the {@code date and time fields} of the ZIP file\n@@ -186,1 +186,1 @@\n-     * date and time fields} of the zip file entry. The\n+     * date and time fields} of the ZIP file entry. The\n@@ -209,1 +209,1 @@\n-     * be stored into the {@code date and time fields} of the zip file\n+     * be stored into the {@code date and time fields} of the ZIP file\n@@ -213,1 +213,1 @@\n-     * zip file entry's extended timestamp fields in {@code optional\n+     * ZIP file entry's extended timestamp fields in {@code optional\n@@ -288,1 +288,1 @@\n-     * zip file entry's {@code date and time fields} in {@code standard\n+     * ZIP file entry's {@code date and time fields} in {@code standard\n@@ -294,1 +294,1 @@\n-     * @return This zip entry\n+     * @return This ZIP entry\n@@ -340,1 +340,1 @@\n-     * @return This zip entry\n+     * @return This ZIP entry\n@@ -376,1 +376,1 @@\n-     * @return This zip entry\n+     * @return This ZIP entry\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipEntry.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * Signals that a Zip exception of some sort has occurred.\n+ * Signals that a ZIP exception of some sort has occurred.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n- * This class is used to read entries from a zip file.\n+ * This class is used to read entries from a ZIP file.\n@@ -98,1 +98,1 @@\n-    private final String filePath;     \/\/ zip file path\n+    private final String filePath;     \/\/ ZIP file path\n@@ -102,1 +102,1 @@\n-    \/\/ The \"resource\" used by this zip file that needs to be\n+    \/\/ The \"resource\" used by this ZIP file that needs to be\n@@ -106,1 +106,1 @@\n-    \/\/ c) the \"native\" source of this zip file.\n+    \/\/ c) the \"native\" source of this ZIP file.\n@@ -113,1 +113,1 @@\n-     * Mode flag to open a zip file for reading.\n+     * Mode flag to open a ZIP file for reading.\n@@ -118,1 +118,1 @@\n-     * Mode flag to open a zip file and mark it for deletion.  The file will be\n+     * Mode flag to open a ZIP file and mark it for deletion.  The file will be\n@@ -134,1 +134,1 @@\n-     * Opens a zip file for reading.\n+     * Opens a ZIP file for reading.\n@@ -143,1 +143,1 @@\n-     * @param name the name of the zip file\n+     * @param name the name of the ZIP file\n@@ -261,1 +261,1 @@\n-     * Opens a zip file for reading.\n+     * Opens a ZIP file for reading.\n@@ -267,1 +267,1 @@\n-     * @param name the name of the zip file\n+     * @param name the name of the ZIP file\n@@ -311,1 +311,3 @@\n-     * Returns the zip file comment, or null if none.\n+     * Returns the ZIP file comment. If a comment does not exist or an error is\n+     * encountered decoding the comment using the charset specified\n+     * when opening the ZIP file, then {@code null} is returned.\n@@ -313,1 +315,1 @@\n-     * @return the comment string for the zip file, or null if none\n+     * @return the comment string for the ZIP file, or null if none\n@@ -315,1 +317,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -325,1 +327,7 @@\n-            return res.zsrc.zc.toString(res.zsrc.comment);\n+            \/\/ If there is a problem decoding the byte array which represents\n+            \/\/ the ZIP file comment, return null;\n+            try {\n+                return res.zsrc.zc.toString(res.zsrc.comment);\n+            } catch (IllegalArgumentException iae) {\n+                return null;\n+            }\n@@ -330,1 +338,1 @@\n-     * Returns the zip file entry for the specified name, or null\n+     * Returns the ZIP file entry for the specified name, or null\n@@ -334,2 +342,2 @@\n-     * @return the zip file entry, or null if not found\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @return the ZIP file entry, or null if not found\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -352,1 +360,1 @@\n-     * zip file entry.\n+     * ZIP file entry.\n@@ -363,1 +371,1 @@\n-     * @param entry the zip file entry\n+     * @param entry the ZIP file entry\n@@ -365,2 +373,2 @@\n-     * zip file entry or null if the zip file entry does not exist\n-     * within the zip file.\n+     * ZIP file entry or null if the ZIP file entry does not exist\n+     * within the ZIP file.\n@@ -369,1 +377,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -548,1 +556,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -600,1 +608,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -619,1 +627,1 @@\n-     * Returns an ordered {@code Stream} over the zip file entry names.\n+     * Returns an ordered {@code Stream} over the ZIP file entry names.\n@@ -624,2 +632,2 @@\n-     * @return an ordered {@code Stream} of entry names in this zip file\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @return an ordered {@code Stream} of entry names in this ZIP file\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -637,1 +645,1 @@\n-     * Returns an ordered {@code Stream} over the zip file entries.\n+     * Returns an ordered {@code Stream} over the ZIP file entries.\n@@ -642,2 +650,2 @@\n-     * @return an ordered {@code Stream} of entries in this zip file\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @return an ordered {@code Stream} of entries in this ZIP file\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -712,1 +720,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -812,1 +820,1 @@\n-            \/\/ Release zip src\n+            \/\/ Release ZIP src\n@@ -847,1 +855,1 @@\n-            \/\/ and release zip source\n+            \/\/ and release ZIP source\n@@ -873,1 +881,1 @@\n-     * (possibly compressed) zip file entry.\n+     * (possibly compressed) ZIP file entry.\n@@ -886,1 +894,1 @@\n-            \/\/ zip64\n+            \/\/ ZIP64\n@@ -933,1 +941,1 @@\n-         * The Zip file spec explicitly allows the LOC extra data size to\n+         * The ZIP file spec explicitly allows the LOC extra data size to\n@@ -1181,1 +1189,1 @@\n-        private final @Stable ZipCoder zc;   \/\/ zip coder used to decode\/encode\n+        private final @Stable ZipCoder zc;   \/\/ ZIP coder used to decode\/encode\n@@ -1185,1 +1193,1 @@\n-        private RandomAccessFile zfile;      \/\/ zfile of the underlying zip file\n+        private RandomAccessFile zfile;      \/\/ zfile of the underlying ZIP file\n@@ -1188,1 +1196,1 @@\n-        private byte[] comment;              \/\/ zip file comment\n+        private byte[] comment;              \/\/ ZIP file comment\n@@ -1194,1 +1202,1 @@\n-        private final boolean startsWithLoc; \/\/ true, if zip file starts with LOCSIG (usually true)\n+        private final boolean startsWithLoc; \/\/ true, if ZIP file starts with LOCSIG (usually true)\n@@ -1449,1 +1457,1 @@\n-         * A class representing a key to a zip file. A key is based\n+         * A class representing a key to a ZIP file. A key is based\n@@ -1452,1 +1460,1 @@\n-         * file's last modified time to allow for cases where a zip\n+         * file's last modified time to allow for cases where a ZIP\n@@ -1674,1 +1682,1 @@\n-                        \/\/ must check for a zip64 end record; it is always permitted to be present\n+                        \/\/ must check for a ZIP64 end record; it is always permitted to be present\n@@ -1703,1 +1711,1 @@\n-                        } catch (IOException x) {}    \/\/ no zip64 loc\/end\n+                        } catch (IOException x) {}    \/\/ no ZIP64 loc\/end\n@@ -1711,1 +1719,1 @@\n-        \/\/ Reads zip file central directory.\n+        \/\/ Reads ZIP file central directory.\n@@ -1728,1 +1736,1 @@\n-                \/\/ account that there may be a stub prefixed to the zip file.\n+                \/\/ account that there may be a stub prefixed to the ZIP file.\n@@ -1771,1 +1779,1 @@\n-                    \/\/ This will only happen if the zip file has an incorrect\n+                    \/\/ This will only happen if the ZIP file has an incorrect\n@@ -1844,1 +1852,1 @@\n-         * Returns the {@code pos} of the zip cen entry corresponding to the\n+         * Returns the {@code pos} of the ZIP cen entry corresponding to the\n@@ -2032,1 +2040,1 @@\n-         * Will not throw, even if the zip file is corrupt.\n+         * Will not throw, even if the ZIP file is corrupt.\n@@ -2034,1 +2042,1 @@\n-         * @param cen copy of the bytes in a zip file's central directory\n+         * @param cen copy of the bytes in a ZIP file's central directory\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":59,"deletions":51,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n- * The LOC header contains metadata about the Zip file entry. {@code ZipInputStream}\n+ * The LOC header contains metadata about the ZIP file entry. {@code ZipInputStream}\n@@ -518,3 +518,10 @@\n-        ZipEntry e = createZipEntry(((flag & USE_UTF8) != 0)\n-                                    ? ZipCoder.toStringUTF8(b, len)\n-                                    : zc.toString(b, len));\n+        String entryName;\n+        try {\n+            entryName = ((flag & USE_UTF8) != 0) ?\n+                    ZipCoder.toStringUTF8(b, len)\n+                    : zc.toString(b, len);\n+        } catch (Exception ex) {\n+            throw (ZipException) new ZipException(\n+                    \"invalid LOC header (bad entry name)\").initCause(ex);\n+        }\n+        ZipEntry e = createZipEntry(entryName);\n@@ -575,1 +582,1 @@\n-     * From the zip spec http:\/\/www.pkware.com\/documents\/casestudies\/APPNOTE.TXT\n+     * From the ZIP spec http:\/\/www.pkware.com\/documents\/casestudies\/APPNOTE.TXT\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -52,4 +52,4 @@\n-     * Whether to use ZIP64 for zip files with more than 64k entries.\n-     * Until ZIP64 support in zip implementations is ubiquitous, this\n-     * system property allows the creation of zip files which can be\n-     * read by legacy zip implementations which tolerate \"incorrect\"\n+     * Whether to use ZIP64 for ZIP files with more than 64k entries.\n+     * Until ZIP64 support in ZIP implementations is ubiquitous, this\n+     * system property allows the creation of ZIP files which can be\n+     * read by legacy ZIP implementations which tolerate \"incorrect\"\n@@ -236,1 +236,1 @@\n-            \/\/ we can't know the compression level of the source zip file\/stream.\n+            \/\/ we can't know the compression level of the source ZIP file\/stream.\n@@ -737,1 +737,1 @@\n-        if (comment != null) {            \/\/ zip file comment\n+        if (comment != null) {            \/\/ ZIP file comment\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipOutputStream.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-    static final int  ENDCOM(byte[] b) { return SH(b, 20);}  \/\/ size of zip file comment\n+    static final int  ENDCOM(byte[] b) { return SH(b, 20);}  \/\/ size of ZIP file comment\n@@ -290,1 +290,1 @@\n-     * Loads zip native library, if not already loaded\n+     * Loads ZIP native library, if not already loaded\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- *         <a href=\"https:\/\/support.pkware.com\/home\/pkzip\/developer-tools\/appnote\">\n+ *         <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">\n@@ -47,1 +47,1 @@\n- *         <a href=\"https:\/\/support.pkware.com\/home\/pkzip\/developer-tools\/appnote\">\n+ *         <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/package-info.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import sun.nio.cs.UTF_8;\n+\n@@ -101,3 +103,1 @@\n-        \/\/ NOTE: can not use str.getBytes(\"UTF-8\") here because of\n-        \/\/ bootstrapping issues with the character set converters.\n-        byte[] bytes = UTF8.encode(str);\n+        byte[] bytes = str.getBytes(UTF_8.INSTANCE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ClassFileAssembler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.reflect;\n-\n-\/** It is necessary to use a \"bootstrap\" UTF-8 encoder for encoding\n-    constant pool entries because the character set converters rely on\n-    Class.newInstance(). *\/\n-\n-class UTF8 {\n-    \/\/ This encoder is not quite correct.  It does not handle surrogate pairs.\n-    static byte[] encode(String str) {\n-        int len = str.length();\n-        byte[] res = new byte[utf8Length(str)];\n-        int utf8Idx = 0;\n-        try {\n-            for (int i = 0; i < len; i++) {\n-                int c = str.charAt(i) & 0xFFFF;\n-                if (c >= 0x0001 && c <= 0x007F) {\n-                    res[utf8Idx++] = (byte) c;\n-                } else if (c == 0x0000 ||\n-                           (c >= 0x0080 && c <= 0x07FF)) {\n-                    res[utf8Idx++] = (byte) (0xC0 + (c >> 6));\n-                    res[utf8Idx++] = (byte) (0x80 + (c & 0x3F));\n-                } else {\n-                    res[utf8Idx++] = (byte) (0xE0 + (c >> 12));\n-                    res[utf8Idx++] = (byte) (0x80 + ((c >> 6) & 0x3F));\n-                    res[utf8Idx++] = (byte) (0x80 + (c & 0x3F));\n-                }\n-            }\n-        } catch (ArrayIndexOutOfBoundsException e) {\n-            throw new InternalError\n-                (\"Bug in sun.reflect bootstrap UTF-8 encoder\", e);\n-        }\n-        return res;\n-    }\n-\n-    private static int utf8Length(String str) {\n-        int len = str.length();\n-        int utf8Len = 0;\n-        for (int i = 0; i < len; i++) {\n-            int c = str.charAt(i) & 0xFFFF;\n-            if (c >= 0x0001 && c <= 0x007F) {\n-                utf8Len += 1;\n-            } else if (c == 0x0000 ||\n-                       (c >= 0x0080 && c <= 0x07FF)) {\n-                utf8Len += 2;\n-            } else {\n-                utf8Len += 3;\n-            }\n-        }\n-        return utf8Len;\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UTF8.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,1 @@\n-            return new SSLException(reason, cause);\n+            return new SSLException(\"(\" + description + \") \" + reason, cause);\n@@ -128,1 +128,1 @@\n-            return new SSLProtocolException(reason, cause);\n+            return new SSLProtocolException(\"(\" + description + \") \" + reason, cause);\n@@ -130,1 +130,1 @@\n-            return new SSLHandshakeException(reason, cause);\n+            return new SSLHandshakeException(\"(\" + description + \") \" + reason, cause);\n@@ -132,1 +132,1 @@\n-            return new SSLException(reason, cause);\n+            return new SSLException(\"(\" + description + \") \" + reason, cause);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Alert.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-                    throw shc.conContext.fatal(Alert.BAD_CERTIFICATE,\n+                    throw shc.conContext.fatal(Alert.HANDSHAKE_FAILURE,\n@@ -1165,1 +1165,1 @@\n-                    throw shc.conContext.fatal(Alert.BAD_CERTIFICATE,\n+                    throw shc.conContext.fatal(Alert.CERTIFICATE_REQUIRED,\n@@ -1189,1 +1189,1 @@\n-                throw chc.conContext.fatal(Alert.BAD_CERTIFICATE,\n+                throw chc.conContext.fatal(Alert.DECODE_ERROR,\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -300,0 +300,3 @@\n+            if (keyAlgorithm.endsWith(\"INP1363FORMAT\")) {\n+                keyAlgorithm = keyAlgorithm.substring(0, keyAlgorithm.length() - 13);\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureUtil.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-int\n+static int\n@@ -53,1 +53,1 @@\n-int\n+static int\n@@ -68,1 +68,1 @@\n-int\n+static int\n@@ -106,1 +106,1 @@\n-int\n+static int\n@@ -212,1 +212,1 @@\n-void\n+static void\n@@ -235,1 +235,1 @@\n-void\n+static void\n@@ -259,1 +259,1 @@\n-void\n+static void\n","filename":"src\/java.base\/unix\/native\/libjava\/childproc.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -131,1 +131,0 @@\n-int restartableDup2(int fd_from, int fd_to);\n@@ -133,3 +132,0 @@\n-int isAsciiDigit(char c);\n-int closeDescriptors(void);\n-int moveDescriptor(int fd_from, int fd_to);\n@@ -140,9 +136,0 @@\n-void execve_as_traditional_shell_script(const char *file,\n-                                        const char *argv[],\n-                                        const char *const envp[]);\n-void execve_with_shell_fallback(int mode, const char *file,\n-                                const char *argv[],\n-                                const char *const envp[]);\n-void JDK_execvpe(int mode, const char *file,\n-                 const char *argv[],\n-                 const char *const envp[]);\n","filename":"src\/java.base\/unix\/native\/libjava\/childproc.h","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,1 +199,4 @@\n-  cb = malloc(sizeof(struct gss_channel_bindings_struct));\n+  \/\/ initialize cb as zeroes to avoid uninitialized pointer being\n+  \/\/ freed when deleteGSSCB is called at cleanup.\n+  cb = calloc(1, sizeof(struct gss_channel_bindings_struct));\n+\n@@ -219,3 +222,0 @@\n-  \/\/ addresses needs to be initialized to empty\n-  memset(&cb->initiator_address, 0, sizeof(cb->initiator_address));\n-  memset(&cb->acceptor_address, 0, sizeof(cb->acceptor_address));\n","filename":"src\/java.security.jgss\/share\/native\/libj2gss\/GSSLibStub.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,7 +99,8 @@\n-        InputStream in = execute(\"load\",\n-                                 agentLibrary,\n-                                 isAbsolute ? \"true\" : \"false\",\n-                                 options);\n-        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {\n-            String result = reader.readLine();\n-            if (result == null) {\n+        String errorMsg = \"Failed to load agent library\";\n+        try {\n+            InputStream in = execute(\"load\",\n+                                     agentLibrary,\n+                                     isAbsolute ? \"true\" : \"false\",\n+                                     options);\n+            String result = readErrorMessage(in);\n+            if (result.isEmpty()) {\n@@ -113,1 +114,4 @@\n-                throw new AgentLoadException(result);\n+                if (!result.isEmpty()) {\n+                    errorMsg += \": \" + result;\n+                }\n+                throw new AgentLoadException(errorMsg);\n@@ -115,0 +119,4 @@\n+        } catch (AttachOperationFailedException ex) {\n+            \/\/ execute() throws AttachOperationFailedException if attach agent reported error.\n+            \/\/ Convert it to AgentLoadException.\n+            throw new AgentLoadException(errorMsg + \": \" + ex.getMessage());\n@@ -367,0 +375,3 @@\n+            if (message.length() > 0) {\n+                message.append(' ');\n+            }\n@@ -402,13 +413,2 @@\n-            \/\/ Special-case the \"load\" command so that the right exception is\n-            \/\/ thrown.\n-            if (cmd.equals(\"load\")) {\n-                String msg = \"Failed to load agent library\";\n-                if (!message.isEmpty()) {\n-                    msg += \": \" + message;\n-                }\n-                throw new AgentLoadException(msg);\n-            } else {\n-                if (message.isEmpty()) {\n-                    message = \"Command failed in target VM\";\n-                }\n-                throw new AttachOperationFailedException(message);\n+            if (message.isEmpty()) {\n+                message = \"Command failed in target VM\";\n@@ -416,0 +416,1 @@\n+            throw new AttachOperationFailedException(message);\n","filename":"src\/jdk.attach\/share\/classes\/sun\/tools\/attach\/HotSpotVirtualMachine.java","additions":23,"deletions":22,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -818,0 +818,1 @@\n+            boolean genericPatternsExpanded = false;\n@@ -827,1 +828,0 @@\n-                    patterns = updatedPatterns;\n@@ -831,0 +831,13 @@\n+                    if (!repeat && !genericPatternsExpanded) {\n+                        \/\/there may be situation like:\n+                        \/\/class B extends S1, S2\n+                        \/\/patterns: R(S1, B), R(S2, S2)\n+                        \/\/this should be joined to R(B, S2),\n+                        \/\/but hashing in reduceNestedPatterns will not allow that\n+                        \/\/attempt to once expand all types to their transitive permitted types,\n+                        \/\/on all depth of nesting:\n+                        updatedPatterns = expandGenericPatterns(updatedPatterns);\n+                        genericPatternsExpanded = true;\n+                        repeat = !updatedPatterns.equals(patterns);\n+                    }\n+                    patterns = updatedPatterns;\n@@ -1133,0 +1146,34 @@\n+        private Set<PatternDescription> expandGenericPatterns(Set<PatternDescription> patterns) {\n+            var newPatterns = new HashSet<PatternDescription>(patterns);\n+            boolean modified;\n+            do {\n+                modified = false;\n+                for (PatternDescription pd : patterns) {\n+                    if (pd instanceof RecordPattern rpOne) {\n+                        for (int i = 0; i < rpOne.nested.length; i++) {\n+                            Set<PatternDescription> toExpand = Set.of(rpOne.nested[i]);\n+                            Set<PatternDescription> expanded = expandGenericPatterns(toExpand);\n+                            if (expanded != toExpand) {\n+                                expanded.removeAll(toExpand);\n+                                for (PatternDescription exp : expanded) {\n+                                    PatternDescription[] newNested = Arrays.copyOf(rpOne.nested, rpOne.nested.length);\n+                                    newNested[i] = exp;\n+                                    modified |= newPatterns.add(new RecordPattern(rpOne.recordType(), rpOne.fullComponentTypes(), newNested));\n+                                }\n+                            }\n+                        }\n+                    } else if (pd instanceof BindingPattern bp) {\n+                        Set<Symbol> permittedSymbols = allPermittedSubTypes((ClassSymbol) bp.type.tsym, cs -> true);\n+\n+                        if (!permittedSymbols.isEmpty()) {\n+                            for (Symbol permitted : permittedSymbols) {\n+                                \/\/TODO infer.instantiatePatternType(selectorType, csym); (?)\n+                                modified |= newPatterns.add(new BindingPattern(permitted.type));\n+                            }\n+                        }\n+                    }\n+                }\n+            } while (modified);\n+            return newPatterns;\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":48,"deletions":1,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -991,0 +991,1 @@\n+                       !currentNullable &&\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1535,1 +1535,6 @@\n-                    this.ref.removeNativeKey();\n+                    try {\n+                        this.ref.removeNativeKey();\n+                    } finally {\n+                        \/\/ prevent enqueuing SessionKeyRef until removeNativeKey is done\n+                        Reference.reachabilityFence(this);\n+                    }\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-  private static GenerationFactory genFactory;\n-\n@@ -64,2 +62,0 @@\n-\n-    genFactory = new GenerationFactory();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/SerialHeap.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,11 @@\n-public class ContiguousSpace extends Space implements LiveRegionsProvider {\n+\/** <P> A ContiguousSpace describes a heap area. <\/P>\n+\n+    <P> Invariant: bottom() and end() are on page_size boundaries and: <\/P>\n+\n+    <P> bottom() <= top() <= end() <\/P>\n+\n+    <P> top() is inclusive and end() is exclusive. <\/P> *\/\n+\n+public class ContiguousSpace extends VMObject implements LiveRegionsProvider {\n+  private static AddressField bottomField;\n+  private static AddressField endField;\n@@ -51,0 +61,2 @@\n+    bottomField = type.getAddressField(\"_bottom\");\n+    endField    = type.getAddressField(\"_end\");\n@@ -58,3 +70,3 @@\n-  public Address top() {\n-    return topField.getValue(addr);\n-  }\n+  public Address bottom() { return bottomField.getValue(addr); }\n+  public Address end()    { return endField.getValue(addr);    }\n+  public Address top()    { return topField.getValue(addr);    }\n@@ -62,3 +74,5 @@\n-  \/** In bytes *\/\n-  public long capacity() {\n-    return end().minus(bottom());\n+  \/** Support for iteration over heap -- not sure how this will\n+      interact with GC in reflective system, but necessary for the\n+      debugging mechanism *\/\n+  public OopHandle bottomAsOopHandle() {\n+    return bottomField.getOopHandle(addr);\n@@ -67,3 +81,5 @@\n-  \/** In bytes *\/\n-  public long used() {\n-    return top().minus(bottom());\n+  \/** Support for iteration over heap -- not sure how this will\n+      interact with GC in reflective system, but necessary for the\n+      debugging mechanism *\/\n+  public OopHandle nextOopHandle(OopHandle handle, long size) {\n+    return handle.addOffsetToAsOopHandle(size);\n@@ -72,4 +88,6 @@\n-  \/** In bytes *\/\n-  public long free() {\n-    return end().minus(top());\n-  }\n+  \/** Returned value is in bytes *\/\n+  public long capacity() { return end().minus(bottom()); }\n+  public long used()     { return top().minus(bottom()); }\n+  public long free()     { return end().minus(top());    }\n+\n+  public void print() { printOn(System.out); }\n@@ -98,1 +116,5 @@\n-    super.printOn(tty);\n+    tty.print(\" space capacity = \");\n+    tty.print(capacity());\n+    tty.print(\", \");\n+    tty.print((double) used() * 100.0\/ capacity());\n+    tty.print(\" used\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/ContiguousSpace.java","additions":37,"deletions":15,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -1,89 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import java.util.*;\n-\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.gc.serial.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-\/** Factory containing a VirtualConstructor suitable for instantiating\n-    wrapper objects for all types of generations *\/\n-\n-public class GenerationFactory {\n-  private static VirtualConstructor ctor;\n-\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static synchronized void initialize(TypeDataBase db) {\n-    ctor = new VirtualConstructor(db);\n-\n-    ctor.addMapping(\"DefNewGeneration\", DefNewGeneration.class);\n-    ctor.addMapping(\"TenuredGeneration\", TenuredGeneration.class);\n-  }\n-\n-  public static Generation newObject(Address addr) {\n-      try {\n-          return (Generation) ctor.instantiateWrapperFor(addr);\n-      } catch (WrongTypeException e) {\n-          return new Generation(addr) {\n-                  public String name() {\n-                      return \"unknown generation type\";\n-                  }\n-                  public void spaceIterate(SpaceClosure blk, boolean usedOnly) {\n-                  }\n-                  public void liveRegionsIterate(LiveRegionsClosure closure) {\n-                  }\n-                  public void printOn(java.io.PrintStream tty) {\n-                      tty.println(\"unknown subtype of Generation @ \" + getAddress() + \" (\" +\n-                                  virtualSpace().low() + \",\" + virtualSpace().high() + \")\");\n-                  }\n-                  public long used() {\n-                      return 0;\n-                  }\n-                  public long free() {\n-                      return 0;\n-                  }\n-                  public long capacity() {\n-                      return 0;\n-                  }\n-                  public long contiguousAvailable() {\n-                      return 0;\n-                  }\n-\n-              };\n-      }\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/GenerationFactory.java","additions":0,"deletions":89,"binary":false,"changes":89,"status":"deleted"},{"patch":"@@ -1,114 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import java.io.*;\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.memory.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-\/** <P> A Space describes a heap area. Class Space is an abstract base\n-    class. <\/P>\n-\n-    <P> Space supports allocation, size computation and GC support is\n-    provided. <\/P>\n-\n-    <P> Invariant: bottom() and end() are on page_size boundaries and: <\/P>\n-\n-    <P> bottom() <= top() <= end() <\/P>\n-\n-    <P> top() is inclusive and end() is exclusive. <\/P> *\/\n-\n-public abstract class Space extends VMObject {\n-  private static AddressField bottomField;\n-  private static AddressField endField;\n-\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static synchronized void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"Space\");\n-\n-    bottomField = type.getAddressField(\"_bottom\");\n-    endField    = type.getAddressField(\"_end\");\n-  }\n-\n-  public Space(Address addr) {\n-    super(addr);\n-  }\n-\n-  public Address   bottom()       { return bottomField.getValue(addr); }\n-  public Address   end()          { return endField.getValue(addr);    }\n-\n-  \/** Returns a subregion of the space containing all the objects in\n-      the space. *\/\n-  public MemRegion usedRegion() {\n-    return new MemRegion(bottom(), end());\n-  }\n-\n-  \/** Support for iteration over heap -- not sure how this will\n-      interact with GC in reflective system, but necessary for the\n-      debugging mechanism *\/\n-  public OopHandle bottomAsOopHandle() {\n-    return bottomField.getOopHandle(addr);\n-  }\n-\n-  \/** Support for iteration over heap -- not sure how this will\n-      interact with GC in reflective system, but necessary for the\n-      debugging mechanism *\/\n-  public OopHandle nextOopHandle(OopHandle handle, long size) {\n-    return handle.addOffsetToAsOopHandle(size);\n-  }\n-\n-  \/** Returned value is in bytes *\/\n-  public long capacity() { return end().minus(bottom()); }\n-  \/** Returned value is in bytes *\/\n-  public abstract long used();\n-  \/** Returned value is in bytes *\/\n-  public abstract long free();\n-\n-  \/** Testers *\/\n-  public boolean contains(Address p) {\n-    return (bottom().lessThanOrEqual(p) && end().greaterThan(p));\n-  }\n-\n-  public void print() { printOn(System.out); }\n-  public void printOn(PrintStream tty) {\n-    tty.print(\" space capacity = \");\n-    tty.print(capacity());\n-    tty.print(\", \");\n-    tty.print((double) used() * 100.0\/ capacity());\n-    tty.print(\" used\");\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/Space.java","additions":0,"deletions":114,"binary":false,"changes":114,"status":"deleted"},{"patch":"@@ -1,29 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-public interface SpaceClosure {\n-  public void doSpace(Space s);\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/SpaceClosure.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/Universe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-  \/\/ Check whether an element of a typeArrayOop with the given type must be\n-  \/\/ aligned 0 mod 8.  The typeArrayOop itself must be aligned at least this\n+  \/\/ Check whether an element of a arrayOop with the given type must be\n+  \/\/ aligned 0 mod 8.  The arrayOop itself must be aligned at least this\n@@ -76,8 +76,1 @@\n-    if (VM.getVM().isCompactObjectHeadersEnabled()) {\n-      headerSize = lengthOffsetInBytes() + VM.getVM().getIntSize();\n-    } else if (VM.getVM().isCompressedKlassPointersEnabled()) {\n-      headerSize = typeSize;\n-    } else {\n-      headerSize = VM.getVM().alignUp(typeSize + VM.getVM().getIntSize(),\n-                                      VM.getVM().getHeapWordSize());\n-    }\n+    headerSize = lengthOffsetInBytes() + VM.getVM().getIntSize();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Array.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -63,0 +63,3 @@\n+    final Map<PackageElement, List<Element>> pkgToSubclassTypeParameter;\n+    final Map<PackageElement, List<Element>> pkgToSubinterfaceTypeParameter;\n+    final Map<PackageElement, List<Element>> pkgToImplementsTypeParameter;\n@@ -108,0 +111,3 @@\n+        this.pkgToSubclassTypeParameter = pkgDivide(mapper.classToSubclassTypeParam);\n+        this.pkgToSubinterfaceTypeParameter = pkgDivide(mapper.classToSubinterfaceTypeParam);\n+        this.pkgToImplementsTypeParameter = pkgDivide(mapper.classToImplementsTypeParam);\n@@ -341,0 +347,9 @@\n+        classSubWriter.addUseInfo(pkgToSubclassTypeParameter.get(pkg),\n+                contents.getContent(\"doclet.ClassUse_SubclassTypeParameter\", classLink,\n+                pkgLink), content);\n+        classSubWriter.addUseInfo(pkgToSubinterfaceTypeParameter.get(pkg),\n+                contents.getContent(\"doclet.ClassUse_SubinterfaceTypeParameter\", classLink,\n+                pkgLink), content);\n+        classSubWriter.addUseInfo(pkgToImplementsTypeParameter.get(pkg),\n+                contents.getContent(\"doclet.ClassUse_ImplementsTypeParameter\", classLink,\n+                pkgLink), content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -483,2 +483,1 @@\n-                .put(HtmlAttr.AUTOCOMPLETE, \"off\")\n-                .put(HtmlAttr.AUTOCAPITALIZE, \"off\");\n+                .put(HtmlAttr.AUTOCOMPLETE, \"off\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -87,2 +87,1 @@\n-                                .put(HtmlAttr.AUTOCOMPLETE, \"off\")\n-                                .put(HtmlAttr.AUTOCAPITALIZE, \"off\"))\n+                                .put(HtmlAttr.AUTOCOMPLETE, \"off\"))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SearchWriter.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -98,2 +98,1 @@\n-                            .put(HtmlAttr.AUTOCOMPLETE, \"off\")\n-                            .put(HtmlAttr.AUTOCAPITALIZE, \"off\"))\n+                            .put(HtmlAttr.AUTOCOMPLETE, \"off\"))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableOfContents.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-    AUTOCAPITALIZE,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlAttr.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -249,0 +249,1 @@\n+        input.setAttribute(\"autocapitalize\", \"off\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js.template","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -247,0 +247,1 @@\n+    input.attr(\"autocapitalize\", \"off\");\n@@ -266,1 +267,1 @@\n-});\n\\ No newline at end of file\n+});\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search-page.js","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -429,0 +429,1 @@\n+    search.attr(\"autocapitalize\", \"off\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search.js.template","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -280,6 +280,8 @@\n-    Each documented package, class and interface has its own Use page.  This page describes what \\\n-    packages, classes, methods, constructors and fields use any part of the given class or \\\n-    package. Given a class or interface A, its Use page includes subclasses of A, fields declared \\\n-    as A, methods that return A, and methods and constructors with parameters of type A.  \\\n-    You can access this page by first going to the package, class or interface, then clicking on \\\n-    the USE link in the navigation bar.\n+    Each documented package, class or interface has its own Use page, which lists \\\n+    packages, classes, interfaces, methods, constructors and fields that use any \\\n+    part of that package, class or interface. Given a class or interface A, its \\\n+    Use page includes subclasses or subinterfaces of A, fields declared as A, \\\n+    methods that return A, methods and constructors with parameters of type A, \\\n+    and subclasses or subinterfaces with parameters of type A. You can access \\\n+    this page by first going to the package, class or interface, then clicking \\\n+    on the USE link in the navigation bar.\n@@ -383,0 +385,3 @@\n+doclet.ClassUse_SubclassTypeParameter=Subclasses with type arguments of type {0} in {1}\n+doclet.ClassUse_SubinterfaceTypeParameter=Subinterfaces with type arguments of type {0} in {1}\n+doclet.ClassUse_ImplementsTypeParameter=Classes in {1} that implement interfaces with type arguments of type {0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,16 @@\n-    public Map<TypeElement, List<TypeElement>> classToImplementingClass = new HashMap<>();\n+    public final Map<TypeElement, List<TypeElement>> classToImplementingClass = new HashMap<>();\n+\n+    \/**\n+     * Mapping of TypeElements to list of TypeElements which use them in superclass type parameters.\n+     *\/\n+    public final Map<TypeElement, List<TypeElement>> classToSubclassTypeParam = new HashMap<>();\n+\n+    \/**\n+     * Mapping of TypeElements to list of TypeElements which use them in superinterface type parameters.\n+     *\/\n+    public final Map<TypeElement, List<TypeElement>> classToSubinterfaceTypeParam = new HashMap<>();\n+\n+    \/**\n+     * Mapping of TypeElements to list of TypeElements which use them in implemented interface type parameters.\n+     *\/\n+    public final Map<TypeElement, List<TypeElement>> classToImplementsTypeParam = new HashMap<>();\n@@ -217,0 +232,12 @@\n+            mapTypeParameters(classToSubclassTypeParam, aClass.getSuperclass(), aClass);\n+\n+            if (utils.isInterface(aClass)) {\n+                for (var superinterface : aClass.getInterfaces()) {\n+                    mapTypeParameters(classToSubinterfaceTypeParam, superinterface, aClass);\n+                }\n+            } else {\n+                for (var superinterface : aClass.getInterfaces()) {\n+                    mapTypeParameters(classToImplementsTypeParam, superinterface, aClass);\n+                }\n+            }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassUseMapper.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-int\n+static int\n@@ -118,1 +118,1 @@\n-void\n+static void\n","filename":"src\/jdk.jdwp.agent\/unix\/native\/libjdwp\/exec_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -204,3 +204,3 @@\n-                 begin           (Optional) Specify the time from which recording data will be included\n-                                 in the dump file. The format is specified as local time.\n-                                 (STRING, no default value)\n+                 begin            (Optional) Specify the time from which recording data will be\n+                                  included in the dump file. The format is specified as local time.\n+                                  (STRING, no default value)\n@@ -208,3 +208,3 @@\n-                 end             (Optional) Specify the time to which recording data will be included\n-                                 in the dump file. The format is specified as local time.\n-                                 (STRING, no default value)\n+                 end              (Optional) Specify the time to which recording data will be included\n+                                  in the dump file. The format is specified as local time.\n+                                  (STRING, no default value)\n@@ -212,2 +212,2 @@\n-                                 Note: For both begin and end, the time must be in a format that can\n-                                 be read by any of these methods:\n+                                  Note: For both begin and end, the time must be in a format that can\n+                                  be read by any of these methods:\n@@ -215,3 +215,3 @@\n-                                  java.time.LocalTime::parse(String),\n-                                  java.time.LocalDateTime::parse(String)\n-                                  java.time.Instant::parse(String)\n+                                   java.time.LocalTime::parse(String),\n+                                   java.time.LocalDateTime::parse(String)\n+                                   java.time.Instant::parse(String)\n@@ -219,2 +219,2 @@\n-                                 For example, \"13:20:15\", \"2020-03-17T09:00:00\" or\n-                                 \"2020-03-17T09:00:00Z\".\n+                                  For example, \"13:20:15\", \"2020-03-17T09:00:00\" or\n+                                  \"2020-03-17T09:00:00Z\".\n@@ -222,2 +222,2 @@\n-                                 Note: begin and end times correspond to the timestamps found within\n-                                 the recorded information in the flight recording data.\n+                                  Note: begin and end times correspond to the timestamps found within\n+                                  the recorded information in the flight recording data.\n@@ -225,3 +225,3 @@\n-                                 Another option is to use a time relative to the current time that is\n-                                 specified by a negative integer followed by \"s\", \"m\" or \"h\".\n-                                 For example, \"-12h\", \"-15m\" or \"-30s\"\n+                                  Another option is to use a time relative to the current time that is\n+                                  specified by a negative integer followed by \"s\", \"m\" or \"h\".\n+                                  For example, \"-12h\", \"-15m\" or \"-30s\"\n@@ -229,5 +229,5 @@\n-                 filename        (Optional) Name of the file to which the flight recording data is\n-                                 dumped. If no filename is given, a filename is generated from the PID\n-                                 and the current date. The filename may also be a directory in which\n-                                 case, the filename is generated from the PID and the current date in\n-                                 the specified directory. (STRING, no default value)\n+                 filename         (Optional) Name of the file to which the flight recording data is\n+                                  dumped. If no filename is given, a filename is generated from the PID\n+                                  and the current date. The filename may also be a directory in which\n+                                  case, the filename is generated from the PID and the current date in\n+                                  the specified directory. (STRING, no default value)\n@@ -235,3 +235,3 @@\n-                                 Note: If a filename is given, '%%p' in the filename will be\n-                                 replaced by the PID, and '%%t' will be replaced by the time in\n-                                 'yyyy_MM_dd_HH_mm_ss' format.\n+                                  Note: If a filename is given, '%%p' in the filename will be\n+                                  replaced by the PID, and '%%t' will be replaced by the time in\n+                                  'yyyy_MM_dd_HH_mm_ss' format.\n@@ -239,3 +239,3 @@\n-                 maxage          (Optional) Length of time for dumping the flight recording data to a\n-                                 file. (INTEGER followed by 's' for seconds 'm' for minutes or 'h' for\n-                                 hours, no default value)\n+                 maxage           (Optional) Length of time for dumping the flight recording data to a\n+                                  file. (INTEGER followed by 's' for seconds 'm' for minutes or 'h' for\n+                                  hours, no default value)\n@@ -243,4 +243,4 @@\n-                 maxsize         (Optional) Maximum size for the amount of data to dump from a flight\n-                                 recording in bytes if one of the following suffixes is not used:\n-                                 'm' or 'M' for megabytes OR 'g' or 'G' for gigabytes.\n-                                 (STRING, no default value)\n+                 maxsize          (Optional) Maximum size for the amount of data to dump from a flight\n+                                  recording in bytes if one of the following suffixes is not used:\n+                                  'm' or 'M' for megabytes OR 'g' or 'G' for gigabytes.\n+                                  (STRING, no default value)\n@@ -248,2 +248,2 @@\n-                 name            (Optional) Name of the recording. If no name is given, data from all\n-                                 recordings is dumped. (STRING, no default value)\n+                 name             (Optional) Name of the recording. If no name is given, data from all\n+                                  recordings is dumped. (STRING, no default value)\n@@ -251,6 +251,6 @@\n-                 path-to-gc-root (Optional) Flag for saving the path to garbage collection (GC) roots\n-                                 at the time the recording data is dumped. The path information is\n-                                 useful for finding memory leaks but collecting it can cause the\n-                                 application to pause for a short period of time. Turn on this flag\n-                                 only when you have an application that you suspect has a memory\n-                                 leak. (BOOLEAN, false)\n+                 path-to-gc-roots (Optional) Flag for saving the path to garbage collection (GC) roots\n+                                  at the time the recording data is dumped. The path information is\n+                                  useful for finding memory leaks but collecting it can cause the\n+                                  application to pause for a short period of time. Turn on this flag\n+                                  only when you have an application that you suspect has a memory\n+                                  leak. (BOOLEAN, false)\n@@ -268,1 +268,1 @@\n-                $ jcmd <pid> JFR.dump fillename=leaks.jfr path-to-gc-root=true\n+                $ jcmd <pid> JFR.dump filename=leaks.jfr path-to-gc-roots=true\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdDump.java","additions":42,"deletions":42,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-        \/\/ 0123456789001234567890012345678900123456789001234567890012345678900123456789001234567890\n+            \/\/ 0123456789001234567890012345678900123456789001234567890012345678900123456789001234567890\n@@ -328,70 +328,70 @@\n-                 delay           (Optional) Length of time to wait before starting to record\n-                                 (INTEGER followed by 's' for seconds 'm' for minutes or h' for\n-                                 hours, 0s)\n-\n-                 disk            (Optional) Flag for also writing the data to disk while recording\n-                                 (BOOLEAN, true)\n-\n-                 dumponexit      (Optional) Flag for writing the recording to disk when the Java\n-                                 Virtual Machine (JVM) shuts down. If set to 'true' and no value\n-                                 is given for filename, the recording is written to a file in the\n-                                 directory where the process was started. The file name is a\n-                                 system-generated name that contains the process ID, the recording\n-                                 ID and the current time stamp. (For example:\n-                                 id-1-2021_09_14_09_00.jfr) (BOOLEAN, false)\n-\n-                 duration        (Optional) Length of time to record. Note that 0s means forever\n-                                 (INTEGER followed by 's' for seconds 'm' for minutes or 'h' for\n-                                 hours, 0s)\n-\n-                 filename        (Optional) Name of the file to which the flight recording data is\n-                                 written when the recording is stopped. If no filename is given, a\n-                                 filename is generated from the PID and the current date and is\n-                                 placed in the directory where the process was started. The\n-                                 filename may also be a directory in which case, the filename is\n-                                 generated from the PID and the current date in the specified\n-                                 directory. (STRING, no default value)\n-\n-                                 Note: If a filename is given, '%%p' in the filename will be\n-                                 replaced by the PID, and '%%t' will be replaced by the time in\n-                                 'yyyy_MM_dd_HH_mm_ss' format.\n-\n-                 maxage          (Optional) Maximum time to keep the recorded data on disk. This\n-                                 parameter is valid only when the disk parameter is set to true.\n-                                 Note 0s means forever. (INTEGER followed by 's' for seconds 'm'\n-                                 for minutes or 'h' for hours, 0s)\n-\n-                 maxsize         (Optional) Maximum size of the data to keep on disk in bytes if\n-                                 one of the following suffixes is not used: 'm' or 'M' for\n-                                 megabytes OR 'g' or 'G' for gigabytes. This parameter is valid\n-                                 only when the disk parameter is set to 'true'. The value must not\n-                                 be less than the value for the maxchunksize parameter set with\n-                                 the JFR.configure command. (STRING, 0 (no max size))\n-\n-                 name            (Optional) Name of the recording. If no name is provided, a name\n-                                 is generated. Make note of the generated name that is shown in\n-                                 the response to the command so that you can use it with other\n-                                 commands. (STRING, system-generated default name)\n-\n-                 path-to-gc-root (Optional) Flag for saving the path to garbage collection (GC)\n-                                 roots at the end of a recording. The path information is useful\n-                                 for finding memory leaks but collecting it is time consuming.\n-                                 Turn on this flag only when you have an application that you\n-                                 suspect has a memory leak. If the settings parameter is set to\n-                                 'profile', then the information collected includes the stack\n-                                 trace from where the potential leaking object was allocated.\n-                                 (BOOLEAN, false)\n-\n-                 settings        (Optional) Name of the settings file that identifies which events\n-                                 to record. To specify more than one file, use the settings\n-                                 parameter repeatedly. Include the path if the file is not in\n-                                 JAVA-HOME\/lib\/jfr. The following profiles are included with the\n-                                 JDK in the JAVA-HOME\/lib\/jfr directory: 'default.jfc': collects a\n-                                 predefined set of information with low overhead, so it has minimal\n-                                 impact on performance and can be used with recordings that run\n-                                 continuously; 'profile.jfc': Provides more data than the\n-                                 'default.jfc' profile, but with more overhead and impact on\n-                                 performance. Use this configuration for short periods of time\n-                                 when more information is needed. Use none to start a recording\n-                                 without a predefined configuration file. (STRING,\n-                                 JAVA-HOME\/lib\/jfr\/default.jfc)\n+                 delay            (Optional) Length of time to wait before starting to record\n+                                  (INTEGER followed by 's' for seconds 'm' for minutes or h' for\n+                                  hours, 0s)\n+\n+                 disk             (Optional) Flag for also writing the data to disk while recording\n+                                  (BOOLEAN, true)\n+\n+                 dumponexit       (Optional) Flag for writing the recording to disk when the Java\n+                                  Virtual Machine (JVM) shuts down. If set to 'true' and no value\n+                                  is given for filename, the recording is written to a file in the\n+                                  directory where the process was started. The file name is a\n+                                  system-generated name that contains the process ID, the recording\n+                                  ID and the current time stamp. (For example:\n+                                  id-1-2021_09_14_09_00.jfr) (BOOLEAN, false)\n+\n+                 duration         (Optional) Length of time to record. Note that 0s means forever\n+                                  (INTEGER followed by 's' for seconds 'm' for minutes or 'h' for\n+                                  hours, 0s)\n+\n+                 filename         (Optional) Name of the file to which the flight recording data is\n+                                  written when the recording is stopped. If no filename is given, a\n+                                  filename is generated from the PID and the current date and is\n+                                  placed in the directory where the process was started. The\n+                                  filename may also be a directory in which case, the filename is\n+                                  generated from the PID and the current date in the specified\n+                                  directory. (STRING, no default value)\n+\n+                                  Note: If a filename is given, '%%p' in the filename will be\n+                                  replaced by the PID, and '%%t' will be replaced by the time in\n+                                  'yyyy_MM_dd_HH_mm_ss' format.\n+\n+                 maxage           (Optional) Maximum time to keep the recorded data on disk. This\n+                                  parameter is valid only when the disk parameter is set to true.\n+                                  Note 0s means forever. (INTEGER followed by 's' for seconds 'm'\n+                                  for minutes or 'h' for hours, 0s)\n+\n+                 maxsize          (Optional) Maximum size of the data to keep on disk in bytes if\n+                                  one of the following suffixes is not used: 'm' or 'M' for\n+                                  megabytes OR 'g' or 'G' for gigabytes. This parameter is valid\n+                                  only when the disk parameter is set to 'true'. The value must not\n+                                  be less than the value for the maxchunksize parameter set with\n+                                  the JFR.configure command. (STRING, 0 (no max size))\n+\n+                 name             (Optional) Name of the recording. If no name is provided, a name\n+                                  is generated. Make note of the generated name that is shown in\n+                                  the response to the command so that you can use it with other\n+                                  commands. (STRING, system-generated default name)\n+\n+                 path-to-gc-roots (Optional) Flag for saving the path to garbage collection (GC)\n+                                  roots at the end of a recording. The path information is useful\n+                                  for finding memory leaks but collecting it is time consuming.\n+                                  Turn on this flag only when you have an application that you\n+                                  suspect has a memory leak. If the settings parameter is set to\n+                                  'profile', then the information collected includes the stack\n+                                  trace from where the potential leaking object was allocated.\n+                                  (BOOLEAN, false)\n+\n+                 settings         (Optional) Name of the settings file that identifies which events\n+                                  to record. To specify more than one file, use the settings\n+                                  parameter repeatedly. Include the path if the file is not in\n+                                  JAVA-HOME\/lib\/jfr. The following profiles are included with the\n+                                  JDK in the JAVA-HOME\/lib\/jfr directory: 'default.jfc': collects a\n+                                  predefined set of information with low overhead, so it has minimal\n+                                  impact on performance and can be used with recordings that run\n+                                  continuously; 'profile.jfc': Provides more data than the\n+                                  'default.jfc' profile, but with more overhead and impact on\n+                                  performance. Use this configuration for short periods of time\n+                                  when more information is needed. Use none to start a recording\n+                                  without a predefined configuration file. (STRING,\n+                                  JAVA-HOME\/lib\/jfr\/default.jfc)\n@@ -421,1 +421,1 @@\n-                $ jcmd <pid> JFR.start maxage=1h,maxsize=1000M\n+                $ jcmd <pid> JFR.start maxage=1h maxsize=1000M\n@@ -423,1 +423,1 @@\n-                $ jcmd <pid> JFR.start delay=5m,settings=my.jfc\n+                $ jcmd <pid> JFR.start delay=5m settings=my.jfc\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStart.java","additions":73,"deletions":73,"binary":false,"changes":146,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,0 +147,1 @@\n+            statsList.sort((u, v) -> u.name.compareTo(v.name));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Summary.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+ *\n+ * @since 1.7\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/AuthorizationDataEntry.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+ *\n+ * @since 1.7\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/ExtendedGSSContext.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+ *\n+ * @since 1.4\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/GSSUtil.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+ *\n+ * @since 1.7\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/InquireSecContextPermission.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+ *\n+ * @since 1.7\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/InquireType.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+ *\n+ * @since 1.4\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/package-info.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * Utility class for zipfile name and comment decoding and encoding\n+ * Utility class for ZIP file entry name and comment decoding and encoding\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipCoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n- * Provides the implementation of the Zip file system provider.\n- * The Zip file system provider treats the contents of a Zip or JAR file as a file system.\n+ * Provides the implementation of the ZIP file system provider.\n+ * The ZIP file system provider treats the contents of a ZIP or JAR file as a file system.\n@@ -39,1 +39,1 @@\n- * <h2>Accessing a Zip File System<\/h2>\n+ * <h2>Accessing a ZIP File System<\/h2>\n@@ -44,2 +44,2 @@\n- *   <li>Create a Zip file system<\/li>\n- *   <li>Open an existing file as a Zip file system<\/li>\n+ *   <li>Create a ZIP file system<\/li>\n+ *   <li>Open an existing file as a ZIP file system<\/li>\n@@ -48,1 +48,1 @@\n- * The Zip file system provider does not support opening an existing Zip file\n+ * The ZIP file system provider does not support opening an existing ZIP file\n@@ -51,1 +51,1 @@\n- * <h2>URI Scheme Used to Identify the Zip File System<\/h2>\n+ * <h2>URI Scheme Used to Identify the ZIP File System<\/h2>\n@@ -57,1 +57,1 @@\n- * A Zip file system supports a file attribute {@link FileAttributeView view}\n+ * A ZIP file system supports a file attribute {@link FileAttributeView view}\n@@ -79,2 +79,2 @@\n- * stored for entries in a Zip file. The value of the attribute is {@code null}\n- * for entries that do not have access permissions. Zip file systems do not\n+ * stored for entries in a ZIP file. The value of the attribute is {@code null}\n+ * for entries that do not have access permissions. ZIP file systems do not\n@@ -95,1 +95,1 @@\n- * <p> In addition to the \"{@code zip}\" view, a Zip file system optionally supports\n+ * <p> In addition to the \"{@code zip}\" view, a ZIP file system optionally supports\n@@ -100,1 +100,1 @@\n- * \"{@code posix}\" view is only supported when the Zip file system is created with\n+ * \"{@code posix}\" view is only supported when the ZIP file system is created with\n@@ -113,1 +113,1 @@\n- * not stored in the zip file. The \"{@code defaultOwner}\" and \"{@code defaultGroup}\"\n+ * not stored in the ZIP file. The \"{@code defaultOwner}\" and \"{@code defaultGroup}\"\n@@ -116,2 +116,2 @@\n- * defaults to the owner of the zip file, and the group owner defaults to the\n- * zip file's group owner (or the file owner on platforms that don't support a\n+ * defaults to the owner of the ZIP file, and the group owner defaults to the\n+ * ZIP file's group owner (or the file owner on platforms that don't support a\n@@ -122,1 +122,1 @@\n- * access permissions stored in the Zip file. The default set of permissions\n+ * access permissions stored in the ZIP file. The default set of permissions\n@@ -132,1 +132,1 @@\n- * <h2>Zip File System Properties<\/h2>\n+ * <h2>ZIP File System Properties<\/h2>\n@@ -139,1 +139,1 @@\n- *     a new Zip file system\n+ *     a new ZIP file system\n@@ -156,2 +156,2 @@\n- *       If the value is {@code true}, the Zip file system provider\n- *       creates a new Zip or JAR file if it does not exist.\n+ *       If the value is {@code true}, the ZIP file system provider\n+ *       creates a new ZIP or JAR file if it does not exist.\n@@ -166,1 +166,1 @@\n- *       names of the entries in the Zip or JAR file.\n+ *       names of the entries in the ZIP or JAR file.\n@@ -174,1 +174,1 @@\n- *       If the value is {@code true}, the Zip file system will support\n+ *       If the value is {@code true}, the ZIP file system will support\n@@ -184,1 +184,1 @@\n- *       Override the default owner for entries in the Zip file system.<br>\n+ *       Override the default owner for entries in the ZIP file system.<br>\n@@ -194,1 +194,1 @@\n- *       Override the default group for entries in the Zip file system.<br>\n+ *       Override the default group for entries in the ZIP file system.<br>\n@@ -204,1 +204,1 @@\n- *       Override the default Set of permissions for entries in the Zip file system.<br>\n+ *       Override the default Set of permissions for entries in the ZIP file system.<br>\n@@ -215,1 +215,1 @@\n- *       to the Zip file system.\n+ *       to the ZIP file system.\n@@ -218,2 +218,2 @@\n- *               If the value is {@code \"STORED\"}, the Zip file system provider will\n- *               not compress entries when writing to the Zip file system.\n+ *               If the value is {@code \"STORED\"}, the ZIP file system provider will\n+ *               not compress entries when writing to the ZIP file system.\n@@ -223,2 +223,2 @@\n- *               the Zip file system provider will use data compression when\n- *               writing entries to the Zip file system.\n+ *               the ZIP file system provider will use data compression when\n+ *               writing entries to the ZIP file system.\n@@ -273,1 +273,1 @@\n- * Construct a new Zip file system that is identified by a URI.  If the Zip file does not exist,\n+ * Construct a new ZIP file system that is identified by a URI.  If the ZIP file does not exist,\n@@ -284,1 +284,1 @@\n- * Construct a new Zip file system that is identified by specifying a path\n+ * Construct a new ZIP file system that is identified by specifying a path\n","filename":"src\/jdk.zipfs\/share\/classes\/module-info.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n@@ -29,2 +31,0 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n-#include \"gc\/g1\/heapRegionSet.hpp\"\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_freeRegionList.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/g1\/g1HeapRegionRemSet.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"gc\/g1\/heapRegionRemSet.hpp\"\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1CardSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/g1\/heapRegionBounds.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegionBounds.inline.hpp\"\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1CardSetContainers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/heapRegion.inline.hpp\"\n+#include \"gc\/g1\/g1HeapRegion.inline.hpp\"\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_heapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/gtest\/oops\/test_arrayOop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,0 +79,2 @@\n+compiler\/startup\/StartupOutput.java 8326615 generic-x64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8324969\n+ * @summary C2 incorrectly marks unbalanced (after coarsened locks were eliminated)\n+ *          nested locks for elimination.\n+ * @requires vm.compMode != \"Xint\"\n+ * @run main\/othervm -XX:-BackgroundCompilation TestCoarsenedAndNestedLocksElimination\n+ *\/\n+\n+public class TestCoarsenedAndNestedLocksElimination {\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 12000; ++i) {\n+            test1(-1);\n+            test2(-1);\n+        }\n+    }\n+\n+    static synchronized int methodA(int var) {\n+        return var;\n+    }\n+\n+    static synchronized int methodB(int var) {\n+        return var;\n+    }\n+\n+    static int varA = 0;\n+    static int varB = 0;\n+\n+    static void test1(int var) {\n+        synchronized (TestNestedLocksElimination.class) {\n+            for (int i2 = 0; i2 < 3; i2++) { \/\/ Fully unrolled\n+                 varA = methodA(i2);         \/\/ Nested synchronized methods also use\n+                 varB = i2 + methodB(var);   \/\/ TestNestedLocksElimination.class for lock\n+            }\n+        }\n+        TestNestedLocksElimination t = new TestNestedLocksElimination(); \/\/ Triggers EA\n+    }\n+\n+    static boolean test2(int var) {\n+        synchronized (TestNestedLocksElimination.class) {\n+            for (int i1 = 0; i1 < 100; i1++) {\n+                switch (42) {\n+                case 42:\n+                    short[] sArr = new short[256]; \/\/ Big enough to avoid scalarization checks\n+                case 50:\n+                    for (int i2 = 2; i2 < 8; i2 += 2) { \/\/ Fully unrolled\n+                        for (int i3 = 1;;) {\n+                            int var1 = methodA(i2);\n+                            int var2 = i2 + methodB(i3);\n+                            break;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return var > 0;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/locks\/TestCoarsenedAndNestedLocksElimination.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325746\n+ * @summary Test Loop Unswitching with BaseCountedLoopEnd nodes as unswitch candidate.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.loopopts.TestBaseCountedEndLoopUnswitchCandidate::test*\n+ *                   -Xcomp -XX:LoopMaxUnroll=0 -XX:-UseLoopPredicate -XX:-RangeCheckElimination\n+ *                   compiler.loopopts.TestBaseCountedEndLoopUnswitchCandidate\n+ * @run main compiler.loopopts.TestBaseCountedEndLoopUnswitchCandidate\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class TestBaseCountedEndLoopUnswitchCandidate {\n+    static int iFld;\n+    static long lFld;\n+    static A a = new A();\n+    static boolean flag;\n+\n+    public static void main(String[] k) {\n+        for (int i = 0; i < 10000; i++) {\n+            testLongCountedLoopEnd();\n+            testCountedLoopEnd();\n+        }\n+    }\n+\n+    public static void testLongCountedLoopEnd() {\n+        long limit = lFld;\n+        for (int i = 0; i < 100; i++) {\n+\n+            \/\/ After peeling & IGNV:\n+            \/\/      LongCountedEndLoop\n+            \/\/           \/      \\\n+            \/\/         True    False\n+            \/\/        \/ \\       \/\n+            \/\/  Store    Region\n+            \/\/\n+            \/\/ LongCountedEndLoop has both paths inside loop and is therefore selected as unswitch candidate If in\n+            \/\/ Loop Unswitching.\n+\n+            \/\/ Use stride > Integer.MAX_VALUE such that LongCountedLoopNode is not split further into loop nests.\n+            for (long j = 0; j < limit; j+=2147483648L) {\n+                a.i += 34; \/\/ NullCheck with trap on false path -> reason to peel\n+                if (j > 0) { \/\/ After peeling: j > 0 always true -> loop folded away\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void testCountedLoopEnd() {\n+        int limit = iFld;\n+        for (int i = 0; i < 100; i++) {\n+\n+            \/\/ After peeling & IGNV:\n+            \/\/        CountedLoopEnd\n+            \/\/           \/      \\\n+            \/\/         True    False\n+            \/\/        \/ \\       \/\n+            \/\/  Store    Region\n+            \/\/\n+            \/\/ CountedEndLoop has both paths inside loop and is therefore selected as unswitch candidate If in\n+            \/\/ Loop Unswitching.\n+\n+            for (int j = 0; j < limit; j++) {\n+                a.i += 34; \/\/ NullCheck with trap on false path -> reason to peel\n+                if (j > 0) { \/\/ After peeling: j > 0 always true -> loop folded away\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+class A {\n+    int i;\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestBaseCountedEndLoopUnswitchCandidate.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8326638\n+ * @summary Test handling of irreducible loops in PhaseIdealLoop::remix_address_expressions.\n+ * @run main\/othervm -XX:-TieredCompilation -Xbatch\n+ *                   -XX:CompileCommand=compileonly,TestRemixAddressExpressionsWithIrreducibleLoop::test\n+ *                   TestRemixAddressExpressionsWithIrreducibleLoop\n+ *\/\n+\n+public class TestRemixAddressExpressionsWithIrreducibleLoop {\n+\n+    public static void main(String[] args) {\n+        test(\"4\");\n+    }\n+\n+    public static void test(String arg) {\n+        for (int i = 0; i < 100_000; ++i) {\n+            int j = 0;\n+            while (true) {\n+                boolean tmp = \"1\\ufff0\".startsWith(arg, 2 - arg.length());\n+                if (j++ > 100)\n+                    break;\n+            }\n+        loop:\n+            while (i >= 100) {\n+                for (int i2 = 0; i2 < 1; i2 = 1)\n+                    if (j > 300)\n+                        break loop;\n+                j++;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRemixAddressExpressionsWithIrreducibleLoop.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,130 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8323274\n+ * @summary partial peeling loop can cause an array load to become dependent on a test other than its range check\n+ * @run main\/othervm -XX:-UseOnStackReplacement -XX:-TieredCompilation -XX:-BackgroundCompilation TestArrayAccessAboveRCAfterPartialPeeling\n+ *\/\n+\n+public class TestArrayAccessAboveRCAfterPartialPeeling {\n+    private static volatile int volatileField;\n+\n+    public static void main(String[] args) {\n+        int[] array = new int[100];\n+        for (int i = 0; i < 20_000; i++) {\n+            test(array, 2, true, 1);\n+            test(array, 2, false, 1);\n+            inlined(array, 2, 42, true, 42, 1, 1);\n+            inlined(array, 2, 42, false, 42, 1, 1);\n+        }\n+        try {\n+            test(array, 2, true, -1);\n+        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {\n+        }\n+    }\n+\n+    private static int test(int[] array, int k, boolean flag, int j) {\n+        int l;\n+        for (l = 1; l < 2; l *= 2) {\n+\n+        }\n+        int m;\n+        for (m = 0; m < 42; m += l) {\n+\n+        }\n+        int n;\n+        for (n = 0; n < 10; n += m\/42) {\n+\n+        }\n+        return inlined(array, k, l, flag, m, n\/10, j);\n+    }\n+\n+    private static int inlined(int[] array, int k, int l, boolean flag, int m, int n, int j) {\n+        if (array == null) {\n+        }\n+        int[] otherArray = new int[100];\n+        int i = 0;\n+        int v = 0;\n+        if (k == m) {\n+        }\n+\n+        if (flag) {\n+            v += array[j];\n+            v += otherArray[i];\n+\n+            for (; ; ) {\n+                synchronized (new Object()) {\n+                }\n+                if (j >= 100) {\n+                    break;\n+                }\n+                if (k == 42) {\n+                }\n+                v += array[j];\n+                v += otherArray[i];\n+                if (i >= n) {\n+                    otherArray[i] = v;\n+                }\n+                v += array[j];\n+                if (l == 2) {\n+                    break;\n+                }\n+                i++;\n+                j *= 2;\n+                volatileField = 42;\n+                k = 2;\n+                l = 42;\n+            }\n+        } else {\n+            v += array[j];\n+            v += otherArray[i];\n+\n+            for (; ; ) {\n+                synchronized (new Object()) {\n+                }\n+                if (j >= 100) {\n+                    break;\n+                }\n+                if (k == 42) {\n+                }\n+                v += array[j];\n+                v += otherArray[i];\n+                if (i >= n) {\n+                    otherArray[i] = v;\n+                }\n+                v += array[j];\n+                if (l == 2) {\n+                    break;\n+                }\n+                i++;\n+                j *= 2;\n+                volatileField = 42;\n+                k = 2;\n+                l = 42;\n+            }\n+        }\n+        return v;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCAfterPartialPeeling.java","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8323274\n+ * @summary sinking an array load out of loop can cause it to become dependent on a test other than its range check\n+ * @run main\/othervm -XX:-UseOnStackReplacement -XX:-TieredCompilation -XX:-BackgroundCompilation TestArrayAccessAboveRCAfterSinking\n+ *\/\n+\n+\n+import java.util.Arrays;\n+\n+public class TestArrayAccessAboveRCAfterSinking {\n+    public static void main(String[] args) {\n+        boolean[] allFalse = new boolean[100];\n+        boolean[] allTrue = new boolean[100];\n+        Arrays.fill(allTrue, true);\n+        int[] array = new int[100];\n+        for (int i = 0; i < 20_000; i++) {\n+            test1(allTrue, array, 0, true, 0);\n+            test1(allTrue, array, 0, false, 0);\n+            inlined1(allFalse, array, 2, 0);\n+            inlined1(allFalse, array, 42, 0);\n+            inlined1(allTrue, array, 2, 0);\n+            test2(allTrue, array, 0, true, 0);\n+            test2(allTrue, array, 0, false, 0);\n+            inlined2(allFalse, array, 2, 0);\n+            inlined2(allFalse, array, 42, 0);\n+            inlined2(allTrue, array, 2, 0);\n+        }\n+        try {\n+            test1(allTrue, array, -1, true, 0);\n+        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {\n+        }\n+        try {\n+            test2(allTrue, array, -1, true, 0);\n+        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {\n+        }\n+    }\n+\n+    private static int test1(boolean[] flags, int[] array, int k, boolean flag, int v) {\n+        if (flags == null) {\n+        }\n+        if (array == null) {\n+        }\n+        int j = 1;\n+        for (; j < 2; j *= 2) {\n+        }\n+        int i;\n+        for (i = 0; i < 10; i += j) {\n+\n+        }\n+        if (flags[i - 10]) {\n+            if (flag) {\n+                return inlined1(flags, array, j, k);\n+            } else {\n+                return inlined1(flags, array, j, k) + v;\n+            }\n+        }\n+        return 0;\n+    }\n+\n+    private static int inlined1(boolean[] flags, int[] array, int j, int k) {\n+        for (int i = 0; i < 100; i++) {\n+            final boolean flag = flags[i & (j - 3)];\n+            int v = array[i + k];\n+            if (flag) {\n+                return v;\n+            }\n+            if (j + (i & (j - 2)) == 2) {\n+                break;\n+            }\n+        }\n+        return 0;\n+    }\n+\n+    private static int test2(boolean[] flags, int[] array, int k, boolean flag, int v) {\n+        if (flags == null) {\n+        }\n+        if (array == null) {\n+        }\n+        int j = 1;\n+        for (; j < 2; j *= 2) {\n+        }\n+        int i;\n+        for (i = 0; i < 10; i += j) {\n+\n+        }\n+        if (flags[i - 10]) {\n+            if (flag) {\n+                return inlined2(flags, array, j, k);\n+            } else {\n+                return inlined2(flags, array, j, k) + v;\n+            }\n+        }\n+        return 0;\n+    }\n+\n+    private static int inlined2(boolean[] flags, int[] array, int j, int k) {\n+        for (int i = 0; i < 100; i++) {\n+            int v = array[i + k];\n+            if (flags[i & (j - 3)]) {\n+                return v;\n+            }\n+            if (j + (i & (j - 2)) == 2) {\n+                break;\n+            }\n+        }\n+        return 0;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCAfterSinking.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"},{"patch":"@@ -0,0 +1,161 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8323274\n+ * @summary split if can cause an array load to become dependent on a test other than its range check\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation TestArrayAccessAboveRCAfterSplitIf\n+ *\/\n+\n+public class TestArrayAccessAboveRCAfterSplitIf {\n+    private static volatile int volatileField;\n+\n+    public static void main(String[] args) {\n+        int[] array = new int[1000];\n+        for (int i = 0; i < 20_000; i++) {\n+            test1(array, array, 0, 2, true);\n+            inlined1(42, array, array, 0, 2, 10, true);\n+            inlined1(2, array, array, 0, 2, 10, true);\n+            inlined1(42, array, array, 0, 2, 10, false);\n+            inlined1(2, array, array, 0, 2, 10, false);\n+            test2(array, array, 0, 2, true);\n+            inlined2(42, array, array, 0, 2, 10, true);\n+            inlined2(2, array, array, 0, 2, 10, true);\n+            inlined2(42, array, array, 0, 2, 10, false);\n+            inlined2(2, array, array, 0, 2, 10, false);\n+        }\n+        try {\n+            test1(array, array, -1, 2, true);\n+        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {\n+        }\n+        try {\n+            test2(array, array, -1, 2, true);\n+        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {\n+        }\n+    }\n+\n+    private static int test1(int[] array1, int[] array2, int i, int l, boolean flag) {\n+        for (int j = 0; j < 10; j++) {\n+        }\n+        int k;\n+        for (k = 1; k < 2; k *= 2) {\n+\n+        }\n+        int m;\n+        for (m = 0; m < 10; m+=k) {\n+\n+        }\n+        return inlined1(k, array1, array2, i, l, m, flag);\n+    }\n+\n+    private static int inlined1(int k, int[] array1, int[] array2, int i, int l, int m, boolean flag) {\n+        int v;\n+        int[] array;\n+        if (array1 == null) {\n+        }\n+        if (l == 10) {\n+\n+        }\n+        if (flag) {\n+            if (k == 2) {\n+                v = array1[i];\n+                array = array1;\n+                if (l == m) {\n+                }\n+            } else {\n+                v = array2[i];\n+                array = array2;\n+            }\n+            v += array[i];\n+            v += array2[i];\n+        } else {\n+            if (k == 2) {\n+                v = array1[i];\n+                array = array1;\n+                if (l == m) {\n+                }\n+            } else {\n+                v = array2[i];\n+                array = array2;\n+            }\n+            v += array[i];\n+            v += array2[i];\n+        }\n+        return v;\n+    }\n+\n+    private static int test2(int[] array1, int[] array2, int i, int l, boolean flag) {\n+        for (int j = 0; j < 10; j++) {\n+        }\n+        int k;\n+        for (k = 1; k < 2; k *= 2) {\n+\n+        }\n+        int m;\n+        for (m = 0; m < 10; m+=k) {\n+\n+        }\n+        return inlined2(k, array1, array2, i, l, m, flag);\n+    }\n+\n+    private static int inlined2(int k, int[] array1, int[] array2, int i, int l, int m, boolean flag) {\n+        int v;\n+        int[] array;\n+        if (array1 == null) {\n+        }\n+        if (l == 10) {\n+\n+        }\n+        if (flag) {\n+            if (k == 2) {\n+                v = array1[i];\n+                array = array1;\n+                if (l == m) {\n+                }\n+            } else {\n+                v = array2[i];\n+                array = array2;\n+            }\n+            if (Integer.compareUnsigned(i, array.length) >= 0) {\n+            }\n+            v += array[i];\n+            v += array2[i];\n+        } else {\n+            if (k == 2) {\n+                v = array1[i];\n+                array = array1;\n+                if (l == m) {\n+                }\n+            } else {\n+                v = array2[i];\n+                array = array2;\n+            }\n+            if (Integer.compareUnsigned(i, array.length) >= 0) {\n+            }\n+            v += array[i];\n+            v += array2[i];\n+        }\n+        return v;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCAfterSplitIf.java","additions":161,"deletions":0,"binary":false,"changes":161,"status":"added"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8323274\n+ * @summary loop unswitching can cause an array load to become dependent on a test other than its range check\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=148059521 TestArrayAccessAboveRCAfterUnswitching\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM TestArrayAccessAboveRCAfterUnswitching\n+ *\/\n+\n+import java.util.Arrays;\n+\n+public class TestArrayAccessAboveRCAfterUnswitching {\n+    private static int field;\n+\n+    public static void main(String[] args) {\n+        int[] array = new int[1000];\n+        boolean[] allFalse = new boolean[1000];\n+        boolean[] allTrue = new boolean[1000];\n+        Arrays.fill(allTrue, true);\n+        for (int i = 0; i < 20_000; i++) {\n+            inlined(array, allFalse, 42, 2, 2, 0);\n+            inlined(array, allFalse, 2, 42, 2, 0);\n+            inlined(array, allFalse, 2, 2, 2, 0);\n+            inlined(array, allFalse, 2, 2, 42, 0);\n+            inlined(array, allTrue, 2, 2, 2, 0);\n+            test(array, allTrue, 0);\n+        }\n+        try {\n+            test(array, allTrue, -1);\n+        } catch (ArrayIndexOutOfBoundsException aioobe) {\n+        }\n+    }\n+\n+    private static int test(int[] array, boolean[] flags, int start) {\n+        if (flags == null) {\n+        }\n+        if (array == null) {\n+        }\n+        int j = 1;\n+        for (; j < 2; j *= 2) {\n+        }\n+        int k = 1;\n+        for (; k < 2; k *= 2) {\n+        }\n+        int l = 1;\n+        for (; l < 2; l *= 2) {\n+        }\n+        int i;\n+        for (i = 0; i < 10; i += l) {\n+\n+        }\n+        if (flags[i - 10]) {\n+            return inlined(array, flags, j, k, l, start);\n+        }\n+        return 0;\n+    }\n+\n+    private static int inlined(int[] array, boolean[] flags, int j, int k, int l, int start) {\n+        for (int i = 0; i < 100; i++) {\n+            final boolean flag = flags[i & (j - 3)];\n+            int v = array[(i + start) & (j - 3)];\n+            if (flag) {\n+                return v;\n+            }\n+            if (j != 2) {\n+                field = v;\n+            } else {\n+                if (k != 2) {\n+                    field = 42;\n+                } else {\n+                    if (l == 2) {\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+        return 0;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCAfterUnswitching.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8323274\n+ * @summary converting an array copy to a series of loads\/stores add loads that can float\n+ * @run main\/othervm -XX:-UseOnStackReplacement -XX:-TieredCompilation -XX:-BackgroundCompilation TestArrayAccessAboveRCForArrayCopyLoad\n+ *\/\n+\n+public class TestArrayAccessAboveRCForArrayCopyLoad {\n+    public static void main(String[] args) {\n+        int[] array = new int[10];\n+        for (int i = 0; i < 20_000; i++) {\n+            test(array, 0, array, 1, false);\n+            test(array, 0, array, 1, true);\n+        }\n+        try {\n+            test(array, -1, array, 0, true);\n+        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {\n+\n+        }\n+    }\n+\n+    private static void test(int[] src, int srcPos, int[] dst, int dstPos, boolean flag) {\n+        if (src == null) {\n+        }\n+        if (srcPos < dstPos) {\n+            if (flag) {\n+                System.arraycopy(src, srcPos, dst, dstPos, 2);\n+            } else {\n+                System.arraycopy(src, srcPos, dst, dstPos, 2);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCForArrayCopyLoad.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,9 @@\n+\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:InitialCodeCacheSize=1024K\", \"-XX:ReservedCodeCacheSize=1200k\", \"-version\");\n+        out = new OutputAnalyzer(pb.start());\n+        \/\/ The VM should not crash but will probably fail with a \"CodeCache is full. Compiler has been disabled.\" message\n+        out.stdoutShouldNotContain(\"# A fatal error\");\n+        exitCode = out.getExitValue();\n+        if (exitCode != 1 && exitCode != 0) {\n+            throw new Exception(\"VM crashed with exit code \" + exitCode);\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/StartupOutput.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -72,1 +72,2 @@\n-              new OrPredicate(new CPUSpecificPredicate(\"riscv64.*\", new String[] { \"sha1\" }, null),\n+              \/\/ SHA-1 intrinsic is implemented with scalar instructions on riscv64\n+              new OrPredicate(new CPUSpecificPredicate(\"riscv64.*\", null, null),\n","filename":"test\/hotspot\/jtreg\/compiler\/testlibrary\/sha\/predicate\/IntrinsicPredicates.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-            makePair(FSPEC128, ISPEC128),\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/TestCastMethods.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8325372\n+ * @summary fusion of heap stable test causes GetAndSet node to be removed\n+ * @requires vm.gc.Shenandoah\n+ * @modules java.base\/jdk.internal.misc:+open\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:-BackgroundCompilation TestUnsafeLoadStoreMergedHeapStableTests\n+ *\/\n+\n+import jdk.internal.misc.Unsafe;\n+\n+import java.lang.reflect.Field;\n+\n+public class TestUnsafeLoadStoreMergedHeapStableTests {\n+\n+    static final jdk.internal.misc.Unsafe UNSAFE = Unsafe.getUnsafe();\n+    static long F_OFFSET;\n+\n+    static class A {\n+        Object f;\n+    }\n+\n+    static {\n+        try {\n+            Field fField = A.class.getDeclaredField(\"f\");\n+            F_OFFSET = UNSAFE.objectFieldOffset(fField);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static Object testHelper(boolean flag, Object o, long offset, Object x) {\n+        if (flag) {\n+            return UNSAFE.getAndSetObject(o, offset, x);\n+        }\n+        return null;\n+    }\n+\n+    static Object field;\n+\n+\n+    static Object test1(boolean flag, Object o, long offset) {\n+        return testHelper(flag, null, offset, field);\n+    }\n+\n+    static Object test2(Object o, long offset) {\n+        return UNSAFE.getAndSetObject(o, offset, field);\n+    }\n+\n+    static public void main(String[] args) {\n+        A a = new A();\n+        for (int i = 0; i < 20_000; i++) {\n+            testHelper(true, a, F_OFFSET, null);\n+            test1(false, a, F_OFFSET);\n+            test2(a, F_OFFSET);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/TestUnsafeLoadStoreMergedHeapStableTests.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * This tests object array sizes by running gtests with different settings.\n+ *\/\n+\n+\/* @test id=with-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop -XX:+UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=with-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop -XX:-UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop -XX:+UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop -XX:-UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/ArrayTests.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * This tests object array sizes by running gtests with different settings.\n+ *\/\n+\n+\/* @test id=with-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=with-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n+\n+\/* @test id=with-coops-with-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n+\/* @test id=with-coops-no-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:+UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n+\/* @test id=no-coops-with-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:-UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n+\/* @test id=no-coops-no-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:-UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/ObjArrayTests.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,157 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test id=with-coops-no-ccp-no-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:-UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=with-coops-with-ccp-no-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @requires vm.opt.UseCompressedClassPointers != false\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:-UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=no-coops-no-ccp-no-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:-UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=no-coops-with-ccp-no-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @requires vm.opt.UseCompressedClassPointers != false\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:-UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=with-coops-no-ccp-with-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:+UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=with-coops-with-ccp-with-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @requires vm.opt.UseCompressedClassPointers != false\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:+UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=no-coops-no-ccp-with-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:+UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=no-coops-with-ccp-with-ucoh\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"64\"\n+ * @requires vm.opt.UseCompressedClassPointers != false\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UnlockExperimentalVMOptions -XX:+UseCompactObjectHeaders ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=32bit\n+ * @library \/test\/lib \/\n+ * @requires vm.bits == \"32\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI ArrayBaseOffsets\n+ *\/\n+\n+import jdk.internal.misc.Unsafe;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.RuntimeMXBean;\n+import java.util.List;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.Platform;\n+import jdk.test.whitebox.WhiteBox;\n+\n+public class ArrayBaseOffsets {\n+\n+    static final long INT_OFFSET;\n+    static final int  INT_ARRAY_OFFSET;\n+    static final int  LONG_ARRAY_OFFSET;\n+    static {\n+        WhiteBox WB = WhiteBox.getWhiteBox();\n+        if (!Platform.is64bit() || WB.getBooleanVMFlag(\"UseCompactObjectHeaders\")) {\n+            INT_OFFSET = 8;\n+            INT_ARRAY_OFFSET = 12;\n+            LONG_ARRAY_OFFSET = 16;\n+        } else if (WB.getBooleanVMFlag(\"UseCompressedClassPointers\")) {\n+            INT_OFFSET = 12;\n+            INT_ARRAY_OFFSET = 16;\n+            LONG_ARRAY_OFFSET = 16;\n+        } else {\n+            INT_OFFSET = 16;\n+            INT_ARRAY_OFFSET = 20;\n+            LONG_ARRAY_OFFSET = 24;\n+        }\n+    }\n+\n+    static public void main(String[] args) {\n+        Unsafe unsafe = Unsafe.getUnsafe();\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(boolean[].class), INT_ARRAY_OFFSET,  \"Misplaced boolean array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(byte[].class),    INT_ARRAY_OFFSET,  \"Misplaced byte    array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(char[].class),    INT_ARRAY_OFFSET,  \"Misplaced char    array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(short[].class),   INT_ARRAY_OFFSET,  \"Misplaced short   array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(int[].class),     INT_ARRAY_OFFSET,  \"Misplaced int     array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(long[].class),    LONG_ARRAY_OFFSET, \"Misplaced long    array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(float[].class),   INT_ARRAY_OFFSET,  \"Misplaced float   array base\");\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(double[].class),  LONG_ARRAY_OFFSET, \"Misplaced double  array base\");\n+        boolean narrowOops = System.getProperty(\"java.vm.compressedOopsMode\") != null ||\n+                             !Platform.is64bit();\n+        int expectedObjArrayOffset = narrowOops ? INT_ARRAY_OFFSET : LONG_ARRAY_OFFSET;\n+        Asserts.assertEquals(unsafe.arrayBaseOffset(Object[].class),  expectedObjArrayOffset, \"Misplaced object  array base\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/FieldLayout\/ArrayBaseOffsets.java","additions":157,"deletions":0,"binary":false,"changes":157,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+ * @library \/test\/lib\n@@ -37,0 +38,1 @@\n+ * @library \/test\/lib\n@@ -43,0 +45,4 @@\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -64,1 +70,25 @@\n-  public static void main(String[] args) {\n+  public static void main(String[] args) throws Exception {\n+    if (args.length == 0) {\n+      \/\/ Called from the driver process so exec a new JVM on Linux.\n+      if (Platform.isLinux()) {\n+        \/\/ On Linux this test sometimes hits the limit for the maximum number of memory mappings,\n+        \/\/ which leads to various other failure modes. Run this test with a limit on how many\n+        \/\/ threads the process is allowed to create, so we hit that limit first.\n+\n+        final String ULIMIT_CMD = \"ulimit -u 4096\";\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(ThreadCountLimit.class.getName());\n+        String javaCmd = ProcessTools.getCommandLine(pb);\n+        \/\/ Relaunch the test with args.length > 0, and the ulimit set\n+        ProcessTools.executeCommand(\"bash\", \"-c\", ULIMIT_CMD + \" && \" + javaCmd + \" dummy\")\n+                    .shouldHaveExitValue(0);\n+      } else {\n+        \/\/ Not Linux so run directly.\n+        test();\n+      }\n+    } else {\n+      \/\/ This is the exec'd process so run directly.\n+      test();\n+    }\n+  }\n+\n+  static void test() {\n@@ -68,1 +98,0 @@\n-    boolean reachedTimeLimit = false;\n@@ -70,2 +99,0 @@\n-    int countAtTimeLimit = -1;\n-    int countAtNativeOOM = -1;\n@@ -78,1 +105,1 @@\n-    int count = 1;\n+    int count = 0;\n@@ -89,2 +116,2 @@\n-          reachedTimeLimit = true;\n-          countAtTimeLimit = count;\n+          \/\/ Windows always gets here, but we also get here if\n+          \/\/ ulimit is set high enough.\n@@ -96,1 +123,1 @@\n-        \/\/ Linux, macOS path\n+        \/\/ Linux, macOS path if we hit ulimit\n@@ -98,1 +125,0 @@\n-        countAtNativeOOM = count;\n@@ -116,7 +142,6 @@\n-    if (reachedTimeLimit) {\n-       \/\/ Windows path or a system with very large ulimit\n-       System.out.println(\"INFO: reached the time limit \" + TIME_LIMIT_MS +\n-                          \" ms, with \" + countAtTimeLimit + \" threads created\");\n-    } else if (reachedNativeOOM) {\n-       System.out.println(\"INFO: reached this process thread count limit with \" +\n-                           countAtNativeOOM + \" threads created\");\n+    if (reachedNativeOOM) {\n+      System.out.println(\"INFO: reached this process thread count limit with \" +\n+                         count + \" threads created\");\n+    } else {\n+      System.out.println(\"INFO: reached the time limit \" + TIME_LIMIT_MS +\n+                         \" ms, with \" + count + \" threads created\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/ThreadCountLimit.java","additions":41,"deletions":16,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/DynamicCodeGenerated\/libDynamicCodeGenerated.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/FollowReferences\/FieldIndices\/libFieldIndicesTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetClassFields\/FilteredFields\/libFilteredFieldsTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetLocalVariable\/libGetSetLocalUnsuspended.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SuspendWithCurrentThread\/libSuspendWithCurrentThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Breakpoint\/breakpoint01\/libbreakpoint01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ClassLoad\/classload01\/libclassload01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ClassPrepare\/classprep01\/libclassprep01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Exception\/exception01\/libexception01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ExceptionCatch\/excatch01\/libexcatch01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc01\/libfieldacc01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc02\/libfieldacc02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc03\/libfieldacc03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc04\/libfieldacc04.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldModification\/fieldmod01\/libfieldmod01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldModification\/fieldmod02\/libfieldmod02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/framepop01\/libframepop01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/framepop02\/libframepop02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodEntry\/mentry01\/libmentry01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodEntry\/mentry02\/libmentry02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodExit\/mexit01\/libmexit01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodExit\/mexit02\/libmexit02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEnter\/mcontenter01\/libmcontenter01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEntered\/mcontentered01\/libmcontentered01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWait\/monitorwait01\/libmonitorwait01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWaited\/monitorwaited01\/libmonitorwaited01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind01\/libnativemethbind01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind02\/libnativemethbind02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind03\/libnativemethbind03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind04\/libnativemethbind04.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,1 @@\n- * Copyright (c) 200\n- * git 3, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep01\/libsinglestep01.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep02\/libsinglestep02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep03\/libsinglestep03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadEnd\/threadend01\/libthreadend01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadEnd\/threadend02\/libthreadend02.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadStart\/threadstart01\/libthreadstart01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadStart\/threadstart02\/libthreadstart02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadStart\/threadstart03\/libthreadstart03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/VMObjectAlloc\/vmobjalloc01\/libvmobjalloc01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/GetAllThreadsNullTest\/libGetAllThreadsNullTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/contmon03\/libcontmon03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/framecnt02\/libframecnt02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/framecnt03\/libframecnt03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/frameloc03\/libframeloc03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/getstacktr02\/libgetstacktr02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/getstacktr09\/libgetstacktr09.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/thrinfo02\/libthrinfo02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/thrstat04\/libthrstat04.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/StackTrace\/NotSuspended\/libGetStackTraceNotSuspendedStress.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/StackTrace\/Suspended\/libGetStackTraceSuspendedStress.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/ThreadLocalStorage\/SetGetThreadLocalStorageStressTest\/libSetGetThreadLocalStorageStress.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetAllThreads\/allthr01\/liballthr01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetCurrentContendedMonitor\/contmon01\/libcontmon01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetCurrentContendedMonitor\/contmon02\/libcontmon02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameCount\/framecnt01\/libframecnt01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameLocation\/frameloc01\/libframeloc01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameLocation\/frameloc02\/libframeloc02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/GetStackTraceAndRetransformTest\/libGetStackTraceAndRetransformTest.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/GetStackTraceCurrentThreadTest\/libGetStackTraceCurrentThreadTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr03\/libgetstacktr03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr04\/libgetstacktr04.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr05\/libgetstacktr05.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr06\/libgetstacktr06.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr07\/libgetstacktr07.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr08\/libgetstacktr08.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadInfo\/thrinfo01\/libthrinfo01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat01\/libthrstat01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat02\/libthrstat02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat03\/libthrstat03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat05\/libthrstat05.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThread\/resumethrd01\/libresumethrd01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThread\/resumethrd02\/libresumethrd02.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThreadList\/resumethrdlst01\/libresumethrdlst01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThreadList\/resumethrdlst02\/libresumethrdlst02.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThread\/suspendthrd01\/libsuspendthrd01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThread\/suspendthrd02\/libsuspendthrd02.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThreadList\/suspendthrdlst01\/libsuspendthrdlst01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThreadList\/suspendthrdlst02\/libsuspendthrdlst02.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/BoundVThreadTest\/libBoundVThreadTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/BreakpointInYieldTest\/libBreakpointInYieldTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContFramePopTest\/libContFramePopTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContStackDepthTest\/libContStackDepthTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContYieldBreakPointTest\/libContYieldBreakPointTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContinuationTest\/libContinuationTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-#include <jvmti_common.h>\n+#include <jvmti_common.hpp>\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/FollowReferences\/libVThreadStackRefTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ForceEarlyReturnTest\/libForceEarlyReturnTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetSetLocalTest\/libGetSetLocalTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-#include <jvmti_common.h>\n+#include <jvmti_common.hpp>\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetThreadStateMountedTest\/libGetThreadStateMountedTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/InterruptThreadTest\/libInterruptThreadTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/MethodExitTest\/libMethodExitTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/NullAsCurrentThreadTest\/libNullAsCurrentThreadTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PinnedTaskTest\/libPinnedTaskTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PopFrameTest\/libPopFrameTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/RawMonitorTest\/libRawMonitorTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SelfSuspendDisablerTest\/libSelfSuspendDisablerTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/StopThreadTest\/libStopThreadTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume1\/libSuspendResume1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume2\/libSuspendResume2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jvmti_common.h\"\n-#include \"jvmti_thread.h\"\n+#include \"jvmti_common.hpp\"\n+#include \"jvmti_thread.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResumeAll\/libSuspendResumeAll.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadListStackTracesTest\/libThreadListStackTracesTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadStateTest\/libThreadStateTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ToggleNotifyJvmtiTest\/libToggleNotifyJvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadEventTest\/libVThreadEventTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadMonitorTest\/libVThreadMonitorTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadNotifyFramePopTest\/libVThreadNotifyFramePopTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTLSTest\/libVThreadTLSTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTest\/libVThreadTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadUnsupportedTest\/libVThreadUnsupportedTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VirtualStackTraceTest\/libVirtualStackTraceTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VirtualThreadStartTest\/libVirtualThreadStartTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/libWaitNotifySuspendedVThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jvmti\/libJvmtiUtils.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine09\/agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AddCapabilities\/addcaps001\/addcaps001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AddCapabilities\/addcaps002\/addcaps002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AddCapabilities\/addcaps003\/addcaps003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload001\/agentonload001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload002\/agentonload002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload003\/agentonload003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,2 +25,2 @@\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnUnload\/agentonunload001\/agentonunload001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Allocate\/alloc001\/alloc001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002\/attach002Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/attach002aAgent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach008\/attach008Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach009\/attach009Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach012\/attach012Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach014\/attach014Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Agent01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Target.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach020\/attach020Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach021\/attach021Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach022\/attach022Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach037\/attach037Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach038\/attach038Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach039\/attach039Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach040\/attach040Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach041\/attach041Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach042\/attach042Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach046\/attach046Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach050\/attach050Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/sharedAgents\/simpleAgent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk001\/classfloadhk001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk002\/classfloadhk002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk003\/classfloadhk003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk004\/classfloadhk004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk005\/classfloadhk005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk006\/classfloadhk006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk007\/classfloadhk007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk008\/classfloadhk008.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk009\/classfloadhk009.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk001\/clrbrk001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk002\/clrbrk002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk005\/clrbrk005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\/clrfldw001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw002\/clrfldw002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\/clrfmodw001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw002\/clrfmodw002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CompiledMethodLoad\/compmethload001\/compmethload001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CompiledMethodUnload\/compmethunload001\/compmethunload001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CreateRawMonitor\/crrawmon001\/crrawmon001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CreateRawMonitor\/crrawmon002\/crrawmon002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,4 +30,4 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DataDumpRequest\/datadumpreq001\/datadumpreq001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Deallocate\/dealloc001\/dealloc001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon001\/drrawmon001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon003\/drrawmon003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon004\/drrawmon004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DisposeEnvironment\/disposeenv001\/disposeenv001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DisposeEnvironment\/disposeenv002\/disposeenv002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DynamicCodeGenerated\/dyncodgen001\/dyncodgen001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include <jvmti_tools.h>\n-#include \"JVMTITools.h\"\n-#include \"agent_common.h\"\n+#include <jvmti_tools.hpp>\n+#include \"JVMTITools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ForceEarlyReturn\/ForceEarlyReturn001\/ForceEarlyReturn001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ForceGarbageCollection\/forcegc001\/forcegc001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ForceGarbageCollection\/forcegc002\/forcegc002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,3 +30,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionFinish\/gcfinish001\/gcfinish001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,3 +30,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionStart\/gcstart001\/gcstart001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,3 +30,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionStart\/gcstart002\/gcstart002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GenerateEvents\/genevents001\/genevents001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetArgumentsSize\/argsize001\/argsize001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetArgumentsSize\/argsize002\/argsize002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetAvailableProcessors\/getavailproc001\/getavailproc001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetBytecodes\/bytecodes001\/bytecodes001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetBytecodes\/bytecodes002\/bytecodes002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetBytecodes\/bytecodes003\/bytecodes003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCapabilities\/getcaps001\/getcaps001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCapabilities\/getcaps002\/getcaps002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld005\/getclfld005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld006\/getclfld006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld007\/getclfld007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr001\/getclsldr001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr002\/getclsldr002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr003\/getclsldr003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoaderClasses\/clsldrclss001\/clsldrclss001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoaderClasses\/clsldrclss002\/clsldrclss002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassMethods\/getclmthd005\/getclmthd005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassMethods\/getclmthd006\/getclmthd006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassMethods\/getclmthd007\/getclmthd007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf004\/getclmdf004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf005\/getclmdf005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf006\/getclmdf006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf007\/getclmdf007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig004\/getclsig004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig005\/getclsig005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig006\/getclsig006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassStatus\/getclstat005\/getclstat005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassStatus\/getclstat006\/getclstat006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassStatus\/getclstat007\/getclstat007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTime\/curthrcputime001\/curthrcputime001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTimerInfo\/curthrtimerinfo001\/curthrtimerinfo001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"agent_common.h\"\n-#include <jvmti_tools.h>\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include <jvmti_tools.hpp>\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetEnv\/GetEnv001\/GetEnv001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetEnvironmentLocalStorage\/getenvstor001\/getenvstor001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetErrorName\/geterrname001\/geterrname001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,3 +25,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetErrorName\/geterrname002\/geterrname002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetExtensionEvents\/extevents001\/extevents001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetExtensionFunctions\/extfuncs001\/extfuncs001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldDeclaringClass\/getfldecl001\/getfldecl001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldDeclaringClass\/getfldecl002\/getfldecl002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldDeclaringClass\/getfldecl004\/getfldecl004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldModifiers\/getfldmdf003\/getfldmdf003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldModifiers\/getfldmdf004\/getfldmdf004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm003\/getfldnm003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm004\/getfldnm004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm005\/getfldnm005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetImplementedInterfaces\/getintrf005\/getintrf005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetImplementedInterfaces\/getintrf006\/getintrf006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetImplementedInterfaces\/getintrf007\/getintrf007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJLocationFormat\/getjlocfmt001\/getjlocfmt001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,3 +25,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJLocationFormat\/getjlocfmt002\/getjlocfmt002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJNIFunctionTable\/getjniftab001\/getjniftab001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJNIFunctionTable\/getjniftab002\/getjniftab002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab001\/linetab001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab002\/linetab002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab003\/linetab003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLoadedClasses\/loadedclss001\/loadedclss001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLoadedClasses\/loadedclss002\/loadedclss002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariable\/getlocal001\/getlocal001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariable\/getlocal002\/getlocal002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab001\/localtab001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab002\/localtab002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab003\/localtab003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab004\/localtab004.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab005\/localtab005.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMaxLocals\/maxloc001\/maxloc001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMaxLocals\/maxloc002\/maxloc002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls001\/declcls001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls002\/declcls002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls003\/declcls003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodLocation\/methloc001\/methloc001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodLocation\/methloc002\/methloc002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodModifiers\/methmod001\/methmod001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodModifiers\/methmod002\/methmod002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname001\/methname001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname002\/methname002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname003\/methname003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectHashCode\/objhashcode001\/objhashcode001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage001\/objmonusage001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage002\/objmonusage002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage003\/objmonusage003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage004\/objmonusage004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage005\/objmonusage005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage006\/objmonusage006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectSize\/objsize001\/objsize001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectsWithTags\/objwithtags001\/objwithtags001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetOwnedMonitorInfo\/ownmoninf001\/ownmoninf001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetOwnedMonitorInfo\/ownmoninf002\/ownmoninf002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetOwnedMonitorInfo\/ownmoninf003\/ownmoninf003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,3 +25,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPhase\/getphase001\/getphase001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,3 +25,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPhase\/getphase002\/getphase002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPotentialCapabilities\/getpotcaps001\/getpotcaps001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex001\/srcdebugex001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex002\/srcdebugex002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex003\/srcdebugex003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceFileName\/getsrcfn004\/getsrcfn004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceFileName\/getsrcfn005\/getsrcfn005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceFileName\/getsrcfn006\/getsrcfn006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperties\/getsysprops001\/getsysprops001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperties\/getsysprops002\/getsysprops002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperty\/getsysprop001\/getsysprop001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperty\/getsysprop002\/getsysprop002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTag\/gettag001\/gettag001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/thrcputime001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime002\/thrcputime002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTimerInfo\/thrtimerinfo001\/thrtimerinfo001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadGroupChildren\/getthrdgrpchld001\/getthrdgrpchld001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadGroupInfo\/thrgrpinfo001\/thrgrpinfo001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadGroupInfo\/thrgrpinfo002\/thrgrpinfo002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadLocalStorage\/getthrdstor001\/getthrdstor001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTime\/gettime001\/gettime001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTimerInfo\/timerinfo001\/timerinfo001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTopThreadGroups\/topthrgrp001\/topthrgrp001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTopThreadGroups\/topthrgrp002\/topthrgrp002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetVersionNumber\/getvern001\/getvern001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd001\/intrpthrd001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd002\/intrpthrd002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd003\/intrpthrd003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsArrayClass\/isarray004\/isarray004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsArrayClass\/isarray005\/isarray005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsFieldSynthetic\/isfldsin002\/isfldsin002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsFieldSynthetic\/isfldsin003\/isfldsin003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsInterface\/isintrf004\/isintrf004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsInterface\/isintrf005\/isintrf005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodNative\/isnative001\/isnative001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodNative\/isnative002\/isnative002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodObsolete\/isobsolete001\/isobsolete001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodSynthetic\/issynth001\/issynth001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodSynthetic\/issynth002\/issynth002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap001\/iterheap001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap002\/iterheap002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap003\/iterheap003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap004\/iterheap004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap005\/iterheap005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap006\/iterheap006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap007\/iterheap007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls001\/iterinstcls001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls002\/iterinstcls002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls003\/iterinstcls003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls004\/iterinstcls004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls005\/iterinstcls005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls006\/iterinstcls006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls007\/iterinstcls007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj001\/iterobjreachobj001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj002\/iterobjreachobj002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj003\/iterobjreachobj003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj004\/iterobjreachobj004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj005\/iterobjreachobj005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj001\/iterreachobj001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj002\/iterreachobj002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj003\/iterreachobj003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj004\/iterreachobj004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj005\/iterreachobj005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/abort\/Abort.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/callbacks\/Callbacks.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/concrete-klass-filter\/ConcreteKlassFilter.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/filter-tagged\/HeapFilter.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/non-concrete-klass-filter\/NonConcreteKlassFilter.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop001\/nframepop001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop002\/nframepop002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop003\/nframepop003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,4 +30,4 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ObjectFree\/objfree001\/objfree001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,4 +30,4 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ObjectFree\/objfree002\/objfree002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe001\/popframe001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe002\/popframe002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe003\/popframe003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_common.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe004\/popframe004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include <jvmti_tools.h>\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include <jvmti_tools.hpp>\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe005\/popframe005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe006\/popframe006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe007\/popframe007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe008\/popframe008.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe009\/popframe009.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe010\/popframe010.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe011\/popframe011.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter001\/rawmonenter001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter002\/rawmonenter002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter003\/rawmonenter003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter004\/rawmonenter004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit001\/rawmonexit001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit002\/rawmonexit002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit003\/rawmonexit003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit005\/rawmonexit005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy001\/rawmnntfy001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy002\/rawmnntfy002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy003\/rawmnntfy003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy004\/rawmnntfy004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall001\/rawmnntfyall001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall002\/rawmnntfyall002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall003\/rawmnntfyall003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall004\/rawmnntfyall004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait001\/rawmnwait001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait002\/rawmnwait002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait003\/rawmnwait003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait004\/rawmnwait004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait005\/rawmnwait005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/StressRedefine\/stressRedefine.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass001\/redefclass001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass002\/redefclass002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass003\/redefclass003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass004\/redefclass004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass005\/redefclass005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass006\/redefclass006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass008\/redefclass008.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass009\/redefclass009.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass010\/redefclass010.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass011\/redefclass011.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass012\/redefclass012.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass013\/redefclass013.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass014\/redefclass014.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass015\/redefclass015.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass016\/redefclass016.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass017\/redefclass017.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass018\/redefclass018.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass019\/redefclass019.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass020\/redefclass020.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass021\/redefclass021.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass022\/redefclass022.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass023\/redefclass023.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass024\/redefclass024.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass025\/redefclass025.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass026\/redefclass026.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n-#include \"jni_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass027\/redefclass027.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -31,1 +31,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n@@ -33,2 +33,2 @@\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass028\/redefclass028.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -31,1 +31,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n@@ -33,2 +33,2 @@\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass029\/redefclass029.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -31,1 +31,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n@@ -33,2 +33,2 @@\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass030\/redefclass030.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass031\/redefclass031.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RelinquishCapabilities\/relcaps001\/relcaps001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RelinquishCapabilities\/relcaps002\/relcaps002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResourceExhausted\/resexhausted.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThread\/resumethrd001\/resumethrd001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThread\/resumethrd002\/resumethrd002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThreadList\/resumethrdlst001\/resumethrdlst001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThreadList\/resumethrdlst002\/resumethrdlst002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include <jvmti_tools.h>\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include <jvmti_tools.hpp>\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform002\/retransform002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"agent_common.h\"\n-#include <jvmti_tools.h>\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include <jvmti_tools.hpp>\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform003\/retransform003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"agent_common.h\"\n-#include <jvmti_tools.h>\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include <jvmti_tools.hpp>\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform004\/retransform004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr001\/agentthr001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr002\/agentthr002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr003\/agentthr003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk002\/setbrk002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk003\/setbrk003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk005\/setbrk005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk007\/setbrk007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk008\/setbrk008.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEnvironmentLocalStorage\/setenvstor001\/setenvstor001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEnvironmentLocalStorage\/setenvstor002\/setenvstor002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEnvironmentLocalStorage\/setenvstor003\/setenvstor003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb001\/setevntcallb001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb002\/setevntcallb002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb003\/setevntcallb003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventNotificationMode\/setnotif001\/setnotif001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetExtensionEventCallback\/setextevent001\/setextevent001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\/setfldw001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw002\/setfldw002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw003\/setfldw003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw004\/setfldw004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw005\/setfldw005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw006\/setfldw006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\/setfmodw001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw002\/setfmodw002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw003\/setfmodw003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw004\/setfmodw004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw005\/setfmodw005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw006\/setfmodw006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab001\/setjniftab001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab002\/setjniftab002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/setlocal001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal002\/setlocal002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/setlocal003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/setlocal004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,4 +28,4 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetNativeMethodPrefix\/SetNativeMethodPrefix001\/SetNativeMethodPrefix001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,4 +28,4 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetNativeMethodPrefix\/SetNativeMethodPrefix002\/SetNativeMethodPrefix002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,4 +27,4 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetNativeMethodPrefix\/SetNativeMethodPrefix002\/SetNativeMethodPrefix002Main.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetSystemProperty\/setsysprop002\/setsysprop002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetSystemProperty\/setsysprop003\/setsysprop003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetTag\/settag001\/settag001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetThreadLocalStorage\/setthrdstor001\/setthrdstor001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetThreadLocalStorage\/setthrdstor002\/setthrdstor002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetThreadLocalStorage\/setthrdstor003\/setthrdstor003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetVerboseFlag\/setvrbflag001\/setvrbflag001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,3 +25,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetVerboseFlag\/setvrbflag002\/setvrbflag002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd006\/stopthrd006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd007\/stopthrd007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThread\/suspendthrd001\/suspendthrd001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThread\/suspendthrd002\/suspendthrd002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThread\/suspendthrd003\/suspendthrd003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThreadList\/suspendthrdlst001\/suspendthrdlst001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThreadList\/suspendthrdlst002\/suspendthrdlst002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/VMDeath\/vmdeath001\/vmdeath001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/VMInit\/vminit001\/vminit001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,4 +30,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP01\/ap01t001\/ap01t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP02\/ap02t001\/ap02t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP03\/ap03t001\/ap03t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t001\/ap04t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t002\/ap04t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t003\/ap04t003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP05\/ap05t001\/ap05t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP05\/ap05t002\/ap05t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP06\/ap06t001\/ap06t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP07\/ap07t001\/ap07t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP07\/ap07t002\/ap07t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,4 +29,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP09\/ap09t001\/ap09t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP10\/ap10t001\/ap10t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP11\/ap11t001\/ap11t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,4 +30,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP12\/ap12t001\/ap12t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI01\/bi01t001\/bi01t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI01\/bi01t002\/bi01t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI02\/bi02t001\/bi02t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI02\/bi02t002\/bi02t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI03\/bi03t001\/bi03t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI03\/bi03t002\/bi03t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI04\/bi04t002\/bi04t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t001\/cm01t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t002\/cm01t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t003\/cm01t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t004\/cm01t004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t005\/cm01t005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t006\/cm01t006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t007\/cm01t007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t008\/cm01t008.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t009\/cm01t009.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t010\/cm01t010.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t011\/cm01t011.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t012\/cm01t012.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t013\/cm01t013.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t014\/cm01t014.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t015\/cm01t015.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t016\/cm01t016.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t017\/cm01t017.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t018\/cm01t018.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t019\/cm01t019.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t020\/cm01t020.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t021\/cm01t021.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM02\/cm02t001\/cm02t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM03\/cm03t001\/cm03t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC01\/tc01t001\/tc01t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC02\/tc02t001\/tc02t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t001\/tc03t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t002\/tc03t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC04\/tc04t001\/tc04t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC05\/tc05t001\/tc05t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM01\/em01t001\/em01t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM01\/em01t002\/em01t002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t001\/em02t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t002\/em02t002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t003\/em02t003.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t004\/em02t004.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t005\/em02t005.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t006\/em02t006.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t007\/em02t007.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t008\/em02t008.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t009\/em02t009.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t010\/em02t010.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t011\/em02t011.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t012\/em02t012.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,4 +27,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM04\/em04t001\/em04t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM05\/em05t001\/em05t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM05\/em05t002\/em05t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM06\/em06t001\/em06t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,4 +26,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t001\/em07t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,4 +27,4 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t002\/em07t002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/extension\/EX03\/ex03t001\/ex03t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF01\/gf01t001\/gf01t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF04\/gf04t001\/gf04t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF06\/gf06t001\/gf06t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t001\/gf08t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t002\/gf08t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t003\/gf08t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS103\/hs103t002\/hs103t002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,2 +27,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS104\/hs104t001\/hs104t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,3 +27,3 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jni_tools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS104\/hs104t002\/hs104t002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t001\/hs201t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t002\/hs201t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -30,1 +30,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n@@ -32,2 +32,2 @@\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t003\/hs201t003.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,2 +27,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS202\/hs202t001\/hs202t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS202\/hs202t002\/hs202t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t001\/hs203t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t002\/hs203t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t003\/hs203t003.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jni_tools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t004\/hs203t004.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS204\/hs204t002\/hs204t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -29,3 +29,3 @@\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS204\/hs204t003\/hs204t003.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS204\/hs204t004\/hs204t004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -28,2 +28,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t001\/hs301t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -31,2 +31,2 @@\n-#include \"jvmti_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"jvmti_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t002\/hs301t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t003\/hs301t003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t004\/hs301t004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t005\/hs301t005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t001\/hs302t001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t002\/hs302t002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t003\/hs302t003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t004\/hs302t004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t005\/hs302t005.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t006\/hs302t006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t007\/hs302t007.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t008\/hs302t008.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t009\/hs302t009.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t010\/hs302t010.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t011\/hs302t011.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -27,1 +27,1 @@\n-#include \"jvmti_tools.h\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t012\/hs302t012.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"nsk_tools.h\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI01\/ji01t001\/ji01t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -31,1 +31,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t001\/ji03t001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t002\/ji03t002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t003\/ji03t003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t004\/ji03t004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI05\/ji05t001\/ji05t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -32,3 +32,3 @@\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI06\/ji06t001\/ji06t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA01\/ma01t001\/ma01t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA01\/ma01t001\/ma01t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA02\/ma02t001\/ma02t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA02\/ma02t001\/ma02t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA03\/ma03t001\/ma03t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA03\/ma03t001\/ma03t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t001\/ma04t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t001\/ma04t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t002\/ma04t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t002\/ma04t002a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t003\/ma04t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t003\/ma04t003a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA05\/ma05t001\/ma05t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA05\/ma05t001\/ma05t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA06\/ma06t001\/ma06t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA06\/ma06t001\/ma06t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA07\/ma07t001\/ma07t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA07\/ma07t001\/ma07t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA08\/ma08t001\/ma08t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA08\/ma08t001\/ma08t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t001\/ma10t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t001\/ma10t001a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t002\/ma10t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t002\/ma10t002a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t003\/ma10t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t003\/ma10t003a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t004\/ma10t004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t004\/ma10t004a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t005\/ma10t005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t005\/ma10t005a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t006\/ma10t006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t006\/ma10t006a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t007\/ma10t007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t007\/ma10t007a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t008\/ma10t008.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t008\/ma10t008a.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t001\/sp01t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t002\/sp01t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t003\/sp01t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t001\/sp02t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t002\/sp02t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t003\/sp02t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP03\/sp03t001\/sp03t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP03\/sp03t002\/sp03t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP04\/sp04t001\/sp04t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP04\/sp04t002\/sp04t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP05\/sp05t002\/sp05t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP05\/sp05t003\/sp05t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t001\/sp06t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t002\/sp06t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t003\/sp06t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP07\/sp07t001\/sp07t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP07\/sp07t002\/sp07t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref001\/followref001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref002\/followref002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref003\/followref003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref004\/followref004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,3 +25,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref005\/followref005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include \"agent_common.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref006\/followref006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretbase\/earlyretbase.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretfp\/earlyretfp.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretint\/earlyretint.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretlong\/earlyretlong.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretobj\/earlyretobj.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretstr\/earlyretstr.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretvoid\/earlyretvoid.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetAllStackTraces\/getallstktr001\/getallstktr001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetConstantPool\/getcpool001\/getcpool001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLineNumberTable\/linetab004\/linetab004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal003\/getlocal003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal004\/getlocal004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/IsSynthetic\/issynth001\/issynth001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/MethodBind\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/OnUnload\/JvmtiTest\/JvmtiTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/StackTrace\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/agentthr\/agentthr.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/clsldrclss00x\/clsldrclss00x.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/events\/redefineCFLH\/JvmtiTest\/JvmtiTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/extmech\/extmech.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/AddToBootstrapClassLoaderSearch\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/Dispose\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/ForceGarbageCollection\/gc\/gc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/environment\/JvmtiTest\/JvmtiTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/nosuspendMonitorInfo\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/nosuspendStackTrace\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/rawmonitor\/rawmonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/heapref\/heapref.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/refignore\/refignore.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-#include \"jni_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/setNullVMInit\/JvmtiTest\/JvmtiTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n@@ -40,1 +40,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/timers\/JvmtiTest\/JvmtiTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/StackTraceController.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/ThreadController.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/Deadlock.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/LockingThreads.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/RecursiveMonitoringThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,4 +37,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/JVMTIagent.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-#include <jni_tools.h>\n-#include <nsk_tools.h>\n-#include <aod.h>\n+#include <jni_tools.hpp>\n+#include <nsk_tools.hpp>\n+#include <aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/aod.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,2 +23,2 @@\n-#ifndef NSK_SHARE_AOD_H\n-#define NSK_SHARE_AOD_H\n+#ifndef NSK_SHARE_AOD_HPP\n+#define NSK_SHARE_AOD_HPP\n@@ -27,2 +27,2 @@\n-#include <jni_tools.h>\n-#include <nsk_tools.h>\n+#include <jni_tools.hpp>\n+#include <nsk_tools.hpp>\n@@ -79,1 +79,1 @@\n-#endif \/* END OF NSK_SHARE_AOD_H *\/\n+#endif \/* END OF NSK_SHARE_AOD_HPP *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/aod.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/aod.h","status":"renamed"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/BooleanArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ByteArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/CharArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/DoubleArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/FloatArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/IntArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/LongArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ShortArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/StringCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIGlobalRefLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNILocalRefLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIRefLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIWeakGlobalRefLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/MonitorEnterExecutor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/ExceptionCheckingJniEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/JNIreferences.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n-        jni_tools.h\n-        jni_tools.c\n+        jni_tools.hpp\n+        jni_tools.cpp\n@@ -37,1 +37,1 @@\n-jni_tools.h\n+jni_tools.hpp\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/README","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/jni_tools.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n@@ -37,1 +37,1 @@\n-#include \"jvmti_common.h\"\n+#include \"jvmti_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/jni_tools.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/jni_tools.h","status":"renamed"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/AddToBootstrapClassLoaderSearch\/bootclssearch_agent.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"agent_common.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/AddToSystemClassLoaderSearch\/systemclssearch_agent.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/Injector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-#include \"JVMTITools.h\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/JVMTITools.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef _NSK_SHARE_JVMTI_JVMTITOOLS_H_\n-#define _NSK_SHARE_JVMTI_JVMTITOOLS_H_\n-\n-#include \"jvmti.h\"\n-\n-#include \"jvmti_common.h\"\n-\n-#endif \/* _NSK_SHARE_JVMTI_JVMTITOOLS_H_ *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/JVMTITools.h","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef _NSK_SHARE_JVMTI_JVMTITOOLS_HPP_\n+#define _NSK_SHARE_JVMTI_JVMTITOOLS_HPP_\n+\n+#include \"jvmti.h\"\n+\n+#include \"jvmti_common.hpp\"\n+\n+#endif \/* _NSK_SHARE_JVMTI_JVMTITOOLS_HPP_ *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/JVMTITools.hpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -28,3 +28,3 @@\n-        jvmti_tools.h\n-        jvmti_tools.c\n-        agent_tools.c\n+        jvmti_tools.hpp\n+        jvmti_tools.cpp\n+        agent_tools.cpp\n@@ -33,2 +33,2 @@\n-        JVMTITools.h\n-        JVMTITools.c\n+        JVMTITools.hpp\n+        JVMTITools.cpp\n@@ -42,1 +42,1 @@\n-jvmti_tools.h\n+jvmti_tools.hpp\n@@ -138,1 +138,1 @@\n-JVMTITools.h\n+JVMTITools.hpp\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/README","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/agent_common\/agent_common.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"..\/jvmti_tools.h\"\n+#include \"..\/jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/agent_common\/agent_common.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/agent_common\/agent_common.h","status":"renamed"},{"patch":"@@ -28,2 +28,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/agent_tools.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include <aod.h>\n+#include <aod.hpp>\n@@ -28,1 +28,1 @@\n-#include <jvmti_tools.h>\n+#include <jvmti_tools.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/aod\/jvmti_aod.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/hotswap\/HotSwap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_FollowRefObjects.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,4 +36,4 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"jvmti_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"jvmti_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_tools.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,3 @@\n-#include \"nsk_tools.h\"\n-#include \"jni_tools.h\"\n-#include \"JVMTITools.h\"\n+#include \"nsk_tools.hpp\"\n+#include \"jni_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n@@ -84,1 +84,1 @@\n- * If something fails, complains an error and returns NULL.\n+ * If something fails, complains an error and returns null.\n@@ -105,1 +105,1 @@\n- * If something fails, complains an error and returns NULL.\n+ * If something fails, complains an error and returns null.\n@@ -111,1 +111,1 @@\n- * If something fails, complains an error and returns NULL.\n+ * If something fails, complains an error and returns null.\n@@ -117,1 +117,1 @@\n- * If something fails, complains an error and returns NULL.\n+ * If something fails, complains an error and returns null.\n@@ -173,1 +173,1 @@\n- * If no class found or something fails, complains an error and returns NULL.\n+ * If no class found or something fails, complains an error and returns null.\n@@ -180,1 +180,1 @@\n- * If no thread found or something fails, complains an error and returns NULL.\n+ * If no thread found or something fails, complains an error and returns null.\n@@ -226,1 +226,1 @@\n- * Enables or disables all events of given list for given thread or NULL.\n+ * Enables or disables all events of given list for given thread or null.\n@@ -261,2 +261,2 @@\n- * Returns value of given option name; or NULL if no such option found.\n- * If search name is NULL then complains an error and returns NULL.\n+ * Returns value of given option name; or null if no such option found.\n+ * If search name is null then complains an error and returns null.\n@@ -268,1 +268,1 @@\n- * If options is specified but has empty value then complains an error and returns NULL.\n+ * If options is specified but has empty value then complains an error and returns null.\n@@ -285,1 +285,1 @@\n- * If no such option then complains an error and returns NULL.\n+ * If no such option then complains an error and returns null.\n@@ -291,1 +291,1 @@\n- * If no such option then complains an error and returns NULL.\n+ * If no such option then complains an error and returns null.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_tools.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"previous_filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_tools.h","status":"renamed"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"agent_common.h\"\n+#include \"agent_common.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/unit\/Heap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/locks\/JNIMonitorLocker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/locks\/LockingThread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-        nsk_tools.h\n-        nsk_tools.c\n+        nsk_tools.hpp\n+        nsk_tools.cpp\n@@ -57,1 +57,1 @@\n-nsk_tools.h\n+nsk_tools.hpp\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/README","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_list.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_tools.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,1 +163,1 @@\n- * Returns str or \"<NULL>\" if str is NULL; useful for printing strings.\n+ * Returns str or \"<NULL>\" if str is null; useful for printing strings.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_tools.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_tools.h","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/nsk_strace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"nsk_tools.h\"\n+#include \"nsk_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace005.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/func\/jvmti\/share\/IndyRedefineClass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/func\/jvmti\/stepBreakPopReturn\/stepBreakPopReturn.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/jni\/nativeAndMH\/nativeAndMH.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,3 +28,3 @@\n-#include \"agent_common.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"agent_common.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/share\/mlvmJvmtiUtils.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,4 +28,4 @@\n-#include \"jni_tools.h\"\n-#include \"nsk_tools.h\"\n-#include \"JVMTITools.h\"\n-#include \"jvmti_tools.h\"\n+#include \"jni_tools.hpp\"\n+#include \"nsk_tools.hpp\"\n+#include \"JVMTITools.hpp\"\n+#include \"jvmti_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/runtime\/defmeth\/shared\/redefineClasses.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-#include \"jni_tools.h\"\n+#include \"jni_tools.hpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/share\/ProcessUtils.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -626,0 +626,1 @@\n+javax\/net\/ssl\/SSLSession\/CertMsgCheck.java                      8326705 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325530\n+ * @summary Test that failed VirtualMachine.loadAgentPath\/loadAgentLibrary reports detailed reason\n+ * @requires vm.jvmti\n+ * @modules jdk.attach\n+ * @library \/test\/lib\n+ * @run driver FailedLoadAgentTest\n+ *\/\n+\n+import java.nio.file.Path;\n+import com.sun.tools.attach.AgentLoadException;\n+import com.sun.tools.attach.VirtualMachine;\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.apps.LingeredApp;\n+\n+public class FailedLoadAgentTest {\n+    private static final String jvmtiAgentLib = \"FailedLoadAgentTestNotExists\";\n+    private static final String jvmtiAgentPath = getLibPath(jvmtiAgentLib);\n+\n+    private static String getLibPath(String libName) {\n+        String fullName = Platform.buildSharedLibraryName(libName);\n+        return Path.of(Utils.TEST_NATIVE_PATH, fullName).toAbsolutePath().toString();\n+    }\n+\n+    private interface TestAction {\n+        void test() throws Exception;\n+    }\n+\n+    private static void test(TestAction action) throws Exception {\n+        try {\n+            action.test();\n+            throw new RuntimeException(\"AgentLoadException not thrown\");\n+        } catch (AgentLoadException ex) {\n+            System.out.println(\"AgentLoadException thrown as expected:\");\n+            ex.printStackTrace(System.out);\n+            String msg = ex.getMessage();\n+            \/\/ Attach agent prints general \"<agent> was not loaded.\" message on error.\n+            \/\/ But additionally we expect detailed message with the reason.\n+            String parts[] = msg.split(\"was not loaded.\");\n+            if (parts.length < 2 || parts[1].isEmpty()) {\n+                throw new RuntimeException(\"AgentLoadException message is vague\");\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        LingeredApp theApp = null;\n+        try {\n+            theApp = new LingeredApp();\n+            LingeredApp.startApp(theApp, \"-XX:+EnableDynamicAgentLoading\");\n+\n+            VirtualMachine vm = VirtualMachine.attach(Long.toString(theApp.getPid()));\n+\n+            \/\/ absolute path\n+            test(() -> vm.loadAgentPath(jvmtiAgentPath));\n+            \/\/ relative path\n+            test(() -> vm.loadAgentLibrary(jvmtiAgentLib));\n+\n+        } finally {\n+            LingeredApp.stopApp(theApp);\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/FailedLoadAgentTest.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,164 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.PrintJob;\n+import java.awt.Toolkit;\n+import java.awt.image.BufferedImage;\n+import java.awt.print.PrinterJob;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+\n+\/*\n+ * @test\n+ * @bug 4242308 4255603\n+ * @key printer\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests printing of images\n+ * @run main\/manual ImageTest\n+ *\/\n+public final class ImageTest {\n+\n+    private static final class ImageFrame extends Frame {\n+        final Image img;\n+        PrintJob pjob;\n+\n+        private ImageFrame() {\n+            super(\"ImageFrame\");\n+            img = getToolkit().getImage(\"image.gif\");\n+        }\n+\n+        @Override\n+        public void paint(Graphics g) {\n+            int width = img.getWidth(this);\n+            int height = img.getHeight(this);\n+            if (pjob != null) {\n+                System.out.println(\"Size \" + pjob.getPageDimension());\n+                Dimension dim = pjob.getPageDimension();\n+                if (width > dim.width) {\n+                    width = dim.width - 30; \/\/ take care of paper margin\n+                }\n+                if (height > dim.height) {\n+                    height = dim.height - 30;\n+                }\n+            }\n+            g.drawImage(img, 10, 75, width, height, this);\n+        }\n+\n+        private void setPrintJob(PrintJob pj) {\n+            pjob = pj;\n+        }\n+\n+        @Override\n+        public boolean imageUpdate(Image img, int infoflags,\n+                                   int x, int y, int w, int h) {\n+            if ((infoflags & ALLBITS) != 0) {\n+                repaint();\n+                return false;\n+            }\n+            return true;\n+        }\n+    }\n+\n+    private static Frame init() {\n+        ImageFrame f = new ImageFrame();\n+        f.setLayout(new FlowLayout());\n+        Button b = new Button(\"Print\");\n+        b.addActionListener(e -> {\n+            PrintJob pj = Toolkit.getDefaultToolkit()\n+                    .getPrintJob(f, \"ImageTest\", null);\n+            if (pj != null) {\n+                f.setPrintJob(pj);\n+                Graphics pg = pj.getGraphics();\n+                f.paint(pg);\n+                pg.dispose();\n+                pj.end();\n+            }\n+        });\n+        f.add(b);\n+        f.setSize(700, 350);\n+\n+        return f;\n+    }\n+\n+    private static void createImage() throws IOException {\n+        final BufferedImage bufferedImage =\n+                new BufferedImage(600, 230, BufferedImage.TYPE_INT_RGB);\n+        Graphics2D g2d = bufferedImage.createGraphics();\n+\n+        g2d.setColor(new Color(0xE7E7E7));\n+        g2d.fillRect(0, 0, bufferedImage.getWidth(), bufferedImage.getHeight());\n+\n+        g2d.setColor(Color.YELLOW);\n+        g2d.fillRect(0, 6, 336, 40);\n+        g2d.setColor(Color.BLACK);\n+        g2d.drawString(\"Yellow rectangle\", 10, 30);\n+\n+        g2d.setColor(Color.CYAN);\n+        g2d.fillRect(132, 85, 141, 138);\n+        g2d.setColor(Color.BLACK);\n+        g2d.drawString(\"Cyan rectangle\", 142, 148);\n+\n+        g2d.setColor(Color.MAGENTA);\n+        g2d.fillRect(432, 85, 141, 138);\n+        g2d.setColor(Color.BLACK);\n+        g2d.drawString(\"Magenta rectangle\", 442, 148);\n+\n+        g2d.dispose();\n+\n+        ImageIO.write(bufferedImage, \"gif\", new File(\"image.gif\"));\n+    }\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+             Click the Print button on the Frame. Select a printer from the\n+             print dialog and click 'OK'. Verify that the image displayed\n+             in the Frame is correctly printed. Test printing in both Color\n+             and Monochrome.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        if (PrinterJob.lookupPrintServices().length == 0) {\n+            throw new RuntimeException(\"Printer not configured or available.\");\n+        }\n+\n+        createImage();\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 1)\n+                .columns(45)\n+                .testUI(ImageTest::init)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/PrintJob\/ImageTest\/ImageTest.java","additions":164,"deletions":0,"binary":false,"changes":164,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.awt.BorderLayout;\n@@ -42,2 +41,0 @@\n-import javax.swing.JButton;\n-import javax.swing.JFrame;\n@@ -45,1 +42,5 @@\n-import static javax.swing.SwingUtilities.invokeAndWait;\n+import javax.swing.BorderFactory;\n+import javax.swing.Box;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JOptionPane;\n@@ -49,7 +50,13 @@\n-    private static PrintLatinCJKTest testInstance = new PrintLatinCJKTest();\n-    private static JFrame frame;\n-    private static final String info = \"\"\"\n-            You need a printer for this test. If you have none, let\n-            the test pass. If there is a printer, press Print, send\n-            the output to the printer, and examine it. It should have\n-            text looking like this : \\u4e00\\u4e01\\u4e02\\u4e03\\u4e04English\n+    private static final String TEXT = \"\\u4e00\\u4e01\\u4e02\\u4e03\\u4e04English\";\n+\n+    private static final String INFO = \"\"\"\n+            Press Print, send the output to the printer and examine it.\n+            The printout should have text looking like this:\n+\n+            \"\"\"\n+            + TEXT + \"\"\"\n+\n+\n+            Press Pass if the text is printed correctly.\n+            If Japanese and English text overlap, press Fail.\n+\n@@ -61,13 +68,8 @@\n-    public static void showFrame() throws InterruptedException, InvocationTargetException {\n-        invokeAndWait( () -> {\n-            frame = new JFrame(\"Test Frame\");\n-            JButton b = new JButton(\"Print\");\n-            b.addActionListener((ae) -> {\n-                try {\n-                    PrinterJob job = PrinterJob.getPrinterJob();\n-                    job.setPrintable(testInstance);\n-                    if (job.printDialog()) {\n-                        job.print();\n-                    }\n-                } catch (PrinterException ex) {\n-                    ex.printStackTrace();\n+    private static JComponent createTestUI() {\n+        JButton b = new JButton(\"Print\");\n+        b.addActionListener((ae) -> {\n+            try {\n+                PrinterJob job = PrinterJob.getPrinterJob();\n+                job.setPrintable(new PrintLatinCJKTest());\n+                if (job.printDialog()) {\n+                    job.print();\n@@ -75,11 +77,7 @@\n-            });\n-            frame.getContentPane().add(b, BorderLayout.SOUTH);\n-            frame.pack();\n-\n-            \/\/ add the test frame to dispose\n-            PassFailJFrame.addTestWindow(frame);\n-\n-            \/\/ Arrange the test instruction frame and test frame side by side\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-            frame.setVisible(true);\n+            } catch (PrinterException ex) {\n+                ex.printStackTrace();\n+                String msg = \"PrinterException: \" + ex.getMessage();\n+                JOptionPane.showMessageDialog(b, msg, \"Error occurred\",\n+                                              JOptionPane.ERROR_MESSAGE);\n+                PassFailJFrame.forceFail(msg);\n+            }\n@@ -87,0 +85,7 @@\n+\n+        Box main = Box.createHorizontalBox();\n+        main.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n+        main.add(Box.createHorizontalGlue());\n+        main.add(b);\n+        main.add(Box.createHorizontalGlue());\n+        return main;\n@@ -96,2 +101,2 @@\n-        g.setFont(new Font(\"Dialog\", Font.PLAIN, 36));\n-        g.drawString(\"\\u4e00\\u4e01\\u4e02\\u4e03\\u4e04English\", 20, 100);\n+        g.setFont(new Font(Font.DIALOG, Font.PLAIN, 36));\n+        g.drawString(TEXT, 20, 100);\n@@ -102,9 +107,13 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n-                .title(\"Test Instructions Frame\")\n-                .instructions(info)\n-                .testTimeOut(10)\n-                .rows(10)\n-                .columns(45)\n-                .build();\n-        showFrame();\n-        passFailJFrame.awaitAndCheck();\n+        if (PrinterJob.lookupPrintServices().length == 0) {\n+            throw new RuntimeException(\"Printer not configured or available.\");\n+        }\n+\n+        PassFailJFrame.builder()\n+                      .title(\"Print Latin CJK Test\")\n+                      .instructions(INFO)\n+                      .testTimeOut(10)\n+                      .rows(12)\n+                      .columns(30)\n+                      .splitUI(PrintLatinCJKTest::createTestUI)\n+                      .build()\n+                      .awaitAndCheck();\n@@ -113,2 +122,0 @@\n-\n-\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintLatinCJKTest.java","additions":56,"deletions":49,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"testlib_threads.h\"\n+#include \"testlib_threads.hpp\"\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/org\/openjdk\/foreigntest\/unnamed\/libLinkerInvokerUnnamed.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"testlib_threads.h\"\n+#include \"testlib_threads.hpp\"\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/libLinkerInvokerModule.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-#include \"testlib_threads.h\"\n+#include \"testlib_threads.hpp\"\n","filename":"test\/jdk\/java\/foreign\/libAsyncInvokers.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"testlib_threads.h\"\n+#include \"testlib_threads.hpp\"\n","filename":"test\/jdk\/java\/foreign\/loaderLookup\/libLoaderLookupInvoker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-#include \"testlib_threads.h\"\n+#include \"testlib_threads.hpp\"\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libAsyncStackWalk.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import jdk.test.lib.thread.VThreadPinner;\n@@ -68,2 +69,3 @@\n-                synchronized (GetStackTraceALotWhenPinned.class) {\n-                    if (timed) {\n+                boolean b = timed;\n+                VThreadPinner.runPinned(() -> {\n+                    if (b) {\n@@ -74,1 +76,1 @@\n-                }\n+                });\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/GetStackTraceALotWhenPinned.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2024, Red Hat, Inc. All rights reserved.\n@@ -317,0 +317,3 @@\n+    static final boolean CCP = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+    static final int ARRAY_HEADER_SIZE = CCP ? 16 : (Platform.is64bit() ? 20 : 16);\n+\n@@ -410,1 +413,1 @@\n-        long expected = roundUp(4L*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(4L*SMALL_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -418,1 +421,1 @@\n-        long expected = roundUp(4L*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(4L*SMALL_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -427,1 +430,1 @@\n-        long expected = roundUp(4L*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(4L*SMALL_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -434,1 +437,1 @@\n-        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -442,1 +445,1 @@\n-        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -451,1 +454,1 @@\n-        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -459,1 +462,1 @@\n-        long expected = roundUp(4L*LARGE_INT_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(4L*LARGE_INT_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n@@ -467,1 +470,1 @@\n-        long expected = roundUp(REF_SIZE*LARGE_OBJ_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(REF_SIZE*LARGE_OBJ_ARRAY_SIZE + ARRAY_HEADER_SIZE, OBJ_ALIGN);\n","filename":"test\/jdk\/java\/lang\/instrument\/GetObjectSizeIntrinsicsTest.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        Path tmp = null;\n+        Path currentDir = null;\n@@ -75,1 +75,1 @@\n-            tmp = Files.createTempFile(\"this\", \"that\");\n+            currentDir = Files.createTempFile(Path.of(\".\"), \"this\", \"that\");\n@@ -77,1 +77,1 @@\n-                Files.getFileStore(tmp).supportsFileAttributeView(\"posix\");\n+                Files.getFileStore(currentDir).supportsFileAttributeView(\"posix\");\n@@ -81,1 +81,1 @@\n-            if (tmp != null) {\n+            if (currentDir != null) {\n@@ -83,1 +83,1 @@\n-                    Files.delete(tmp);\n+                    Files.delete(currentDir);\n@@ -145,0 +145,1 @@\n+        Path currentDir = Path.of(\".\");\n@@ -148,1 +149,1 @@\n-                    source = Files.createTempFile(\"file\", \"dat\");\n+                    source = Files.createTempFile(currentDir, \"file\", \"dat\");\n@@ -150,1 +151,1 @@\n-                    source = Files.createTempDirectory(\"dir\");\n+                    source = Files.createTempDirectory(currentDir, \"dir\");\n@@ -152,1 +153,1 @@\n-                    linkTarget = Files.createTempFile(\"link\", \"target\");\n+                    linkTarget = Files.createTempFile(currentDir, \"link\", \"target\");\n@@ -166,1 +167,1 @@\n-                target = Files.createTempFile(\"file\", \"target\");\n+                target = Files.createTempFile(currentDir, \"file\", \"target\");\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyMoveVariations.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 6285888 6801704\n+ * @bug 6285888 6801704 8325898\n@@ -34,2 +34,0 @@\n-import java.text.ChoiceFormat;\n-\n@@ -41,1 +39,2 @@\n-import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import java.text.ChoiceFormat;\n+\n@@ -100,0 +99,1 @@\n+                arguments(\"#\", ERR1), \/\/ Only relation\n@@ -130,0 +130,2 @@\n+                \/\/ Incomplete SubPattern (limit only) at end of Pattern\n+                arguments(\"1#bar|2\", \"1#bar\"),\n@@ -132,0 +134,6 @@\n+                \/\/ Incomplete SubPattern with trailing | at the end of the Pattern\n+                \/\/ Prior to 6801704, it created the broken \"0#foo|1#bar|1#\"\n+                \/\/ which caused formatting 1 to return an empty string\n+                arguments(\"0#foo|1#bar|baz|\", \"0#foo|1#bar\"),\n+                \/\/ Same as previous, with additional incomplete subPatterns\n+                arguments(\"0#foo|1#bar|baz|quux\", \"0#foo|1#bar\"),\n@@ -134,1 +142,2 @@\n-                \/\/ when attempting to format with them ---\n+                \/\/ when attempting to format with them as the incomplete patterns\n+                \/\/ are discarded, initializing the cFmt with empty limits and formats ---\n","filename":"test\/jdk\/java\/text\/Format\/ChoiceFormat\/PatternsTest.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8318761\n+ * @summary Test MessageFormatPattern ability to recognize and produce\n+ *          appropriate FormatType and FormatStyle for CompactNumberFormat.\n+ * @run junit CompactSubFormats\n+ *\/\n+\n+import java.text.CompactNumberFormat;\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.text.MessageFormat;\n+import java.text.NumberFormat;\n+import java.util.Locale;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class CompactSubFormats {\n+\n+    \/\/ Ensure the built-in FormatType and FormatStyles for cnFmt are as expected\n+    @Test\n+    public void applyPatternTest() {\n+        var mFmt = new MessageFormat(\n+                \"{0,number,compact_short}{1,number,compact_long}\");\n+        var compactShort = NumberFormat.getCompactNumberInstance(\n+                mFmt.getLocale(), NumberFormat.Style.SHORT);\n+        var compactLong = NumberFormat.getCompactNumberInstance(\n+                mFmt.getLocale(), NumberFormat.Style.LONG);\n+        assertEquals(mFmt.getFormatsByArgumentIndex()[0], compactShort);\n+        assertEquals(mFmt.getFormatsByArgumentIndex()[1], compactLong);\n+    }\n+\n+    \/\/ Ensure that only 'compact_short' and 'compact_long' are recognized as\n+    \/\/ compact number modifiers. All other compact_XX should be interpreted as\n+    \/\/ a subformatPattern for a DecimalFormat\n+    @Test\n+    public void recognizedCompactStylesTest() {\n+        \/\/ An exception won't be thrown since 'compact_regular' will be interpreted as a\n+        \/\/ subformatPattern.\n+        assertEquals(new DecimalFormat(\"compact_regular\"),\n+                new MessageFormat(\"{0,number,compact_regular}\").getFormatsByArgumentIndex()[0]);\n+    }\n+\n+    \/\/ SHORT and LONG CompactNumberFormats should produce correct patterns\n+    @Test\n+    public void toPatternTest() {\n+        var mFmt = new MessageFormat(\"{0}{1}\");\n+        mFmt.setFormatByArgumentIndex(0, NumberFormat.getCompactNumberInstance(\n+                mFmt.getLocale(), NumberFormat.Style.SHORT));\n+        mFmt.setFormatByArgumentIndex(1, NumberFormat.getCompactNumberInstance(\n+                mFmt.getLocale(), NumberFormat.Style.LONG));\n+        assertEquals(\"{0,number,compact_short}{1,number,compact_long}\", mFmt.toPattern());\n+    }\n+\n+    \/\/ A custom cnFmt cannot be recognized, thus does not produce any built-in pattern\n+    @Test\n+    public void badToPatternTest() {\n+        var mFmt = new MessageFormat(\"{0}\");\n+        \/\/ Non-recognizable compactNumberFormat\n+        mFmt.setFormatByArgumentIndex(0, new CompactNumberFormat(\"\",\n+                        DecimalFormatSymbols.getInstance(Locale.US), new String[]{\"\"}));\n+        \/\/ Default behavior of unrecognizable Formats is a FormatElement\n+        \/\/ in the form of { ArgumentIndex }\n+        assertEquals(\"{0}\", mFmt.toPattern());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/CompactSubFormats.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8318761\n+ * @summary Test MessageFormatPattern ability to recognize and produce the\n+ *          appropriate FormatType and FormatStyle for ListFormat. ListFormat's\n+ *          STANDARD, OR, and UNIT types are supported as built-in patterns for\n+ *          MessageFormat. All types use the FULL style.\n+ * @run junit ListSubFormats\n+ *\/\n+\n+import java.text.ListFormat;\n+import java.text.MessageFormat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+public class ListSubFormats {\n+\n+    \/\/ Recognize the 'list' FormatType as well as '', 'or', and\n+    \/\/ 'unit' associated FormatStyles\n+    @Test\n+    public void applyPatternTest() {\n+        var mFmt = new MessageFormat(\"{0,list}{1,list,or}{2,list,unit}\");\n+        var listStandard = ListFormat.getInstance(mFmt.getLocale(),\n+                ListFormat.Type.STANDARD, ListFormat.Style.FULL);\n+        var listOr = ListFormat.getInstance(mFmt.getLocale(),\n+                ListFormat.Type.OR, ListFormat.Style.FULL);\n+        var listUnit = ListFormat.getInstance(mFmt.getLocale(),\n+                ListFormat.Type.UNIT, ListFormat.Style.FULL);\n+        assertEquals(mFmt.getFormatsByArgumentIndex()[0], listStandard);\n+        assertEquals(mFmt.getFormatsByArgumentIndex()[1], listOr);\n+        assertEquals(mFmt.getFormatsByArgumentIndex()[2], listUnit);\n+    }\n+\n+    \/\/ Ensure incorrect FormatElement pattern throws IAE\n+    \/\/ java.text.ListFormat does not support String subformatPatterns\n+    @Test\n+    public void badApplyPatternTest() {\n+        \/\/ Wrong FormatStyle\n+        IllegalArgumentException exc = assertThrows(IllegalArgumentException.class, () ->\n+                new MessageFormat(\"{0,list,standard}\"));\n+        assertEquals(\"Unexpected modifier for List: standard\", exc.getMessage());\n+\n+        \/\/ Wrong FormatType\n+        exc = assertThrows(IllegalArgumentException.class, () ->\n+                new MessageFormat(\"{0,listt,or}\"));\n+        assertEquals(\"unknown format type: listt\", exc.getMessage());\n+\n+    }\n+\n+    \/\/ STANDARD, OR, UNIT ListFormats (with FULL style) should\n+    \/\/ produce correct patterns.\n+    @Test\n+    public void toPatternTest() {\n+        var mFmt = new MessageFormat(\"{0}{1}{2}\");\n+        mFmt.setFormatByArgumentIndex(0,\n+                ListFormat.getInstance(mFmt.getLocale(), ListFormat.Type.STANDARD, ListFormat.Style.FULL));\n+        mFmt.setFormatByArgumentIndex(1,\n+                ListFormat.getInstance(mFmt.getLocale(), ListFormat.Type.OR, ListFormat.Style.FULL));\n+        mFmt.setFormatByArgumentIndex(2,\n+                ListFormat.getInstance(mFmt.getLocale(), ListFormat.Type.UNIT, ListFormat.Style.FULL));\n+        assertEquals(\"{0,list}{1,list,or}{2,list,unit}\", mFmt.toPattern());\n+    }\n+\n+    \/\/ A custom ListFormat cannot be recognized, thus does not produce any built-in pattern\n+    @Test\n+    public void badToPatternTest() {\n+        var mFmt = new MessageFormat(\"{0}\");\n+        mFmt.setFormatByArgumentIndex(0,\n+                ListFormat.getInstance(mFmt.getLocale(), ListFormat.Type.UNIT, ListFormat.Style.NARROW));\n+        assertEquals(\"{0}\", mFmt.toPattern());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/ListSubFormats.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 6481179 8039165\n+ * @bug 6481179 8039165 8318761\n@@ -42,0 +42,9 @@\n+    \/\/ Any exception for a Subformat should be re-thrown as propagated as an IAE\n+    \/\/ to the MessageFormat\n+    @Test\n+    public void rethrowAsIAE() {\n+        \/\/ Same Subformat pattern for ChoiceFormat throws NumberFormatException\n+        assertThrows(IllegalArgumentException.class,\n+                () -> new MessageFormat(\"{0,choice,0foo#foo}\"));\n+    }\n+\n@@ -60,0 +69,3 @@\n+        \/\/ Same as above, but with Subformat pattern\n+        assertThrows(NullPointerException.class,\n+                () -> new MessageFormat(\"{0, date,dd}\", null));\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/MessageFormatExceptions.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,204 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8318761\n+ * @summary Test MessageFormatPattern ability to recognize the appropriate\n+ *          FormatType and FormatStyle for DateTimeFormatter(ClassicFormat).\n+ *          This includes the types dtf_time, dtf_date, dtf_datetime,\n+ *          and the DateTimeFormatter predefined formatters.\n+ * @run junit TemporalSubFormats\n+ *\/\n+\n+import java.text.Format;\n+import java.text.MessageFormat;\n+import java.time.Instant;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.OffsetDateTime;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.FormatStyle;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+public class TemporalSubFormats {\n+\n+    \/\/ Check that applying the built-in DateTimeFormatter types returns the\n+    \/\/ correct Format and formats properly. Patterns are case-insensitive\n+    @ParameterizedTest\n+    @MethodSource(\"preDefinedTypes\")\n+    public void preDefinedPatternsTest(String pattern, Format fmt) {\n+        var mFmt = new MessageFormat(\"quux{0,\"+pattern+\"}quux\");\n+        Object[] temporals = new Object[]{LocalDate.now(), LocalTime.now(),\n+                ZonedDateTime.now(), LocalDateTime.now(), OffsetDateTime.now(), Instant.now()};\n+        for (Object val : temporals) {\n+            \/\/ Wrap in Object array for MessageFormat\n+            Object[] wrappedVal = new Object[]{val};\n+\n+            try {\n+                String mFmtted = mFmt.format(wrappedVal);\n+                \/\/ If current format can support the time object. Check equality of result\n+                assertEquals(mFmtted, \"quux\"+fmt.format(val)+\"quux\");\n+            } catch (IllegalArgumentException ignored) {\n+                \/\/ Otherwise, ensure both throw IAE on unsupported field\n+                assertThrows(IllegalArgumentException.class, () -> fmt.format(val));\n+            }\n+        }\n+    }\n+\n+    \/\/ Provides String patterns and the associated (standalone) FormatType\n+    \/\/ Values should be case-insensitive\n+    private static Stream<Arguments> preDefinedTypes() {\n+        return Stream.of(\n+            Arguments.of(\"BASIC_ISO_DATE\", DateTimeFormatter.BASIC_ISO_DATE.toFormat()),\n+            Arguments.of(\"ISO_LOCAL_DATE\", DateTimeFormatter.ISO_LOCAL_DATE.toFormat()),\n+            Arguments.of(\"ISO_OFFSET_DATE\", DateTimeFormatter.ISO_OFFSET_DATE.toFormat()),\n+            Arguments.of(\"ISO_DATE\", DateTimeFormatter.ISO_DATE.toFormat()),\n+            Arguments.of(\"iso_local_time\", DateTimeFormatter.ISO_LOCAL_TIME.toFormat()),\n+            Arguments.of(\"ISO_OFFSET_TIME\", DateTimeFormatter.ISO_OFFSET_TIME.toFormat()),\n+            Arguments.of(\"iso_time\", DateTimeFormatter.ISO_TIME.toFormat()),\n+            Arguments.of(\"ISO_LOCAL_DATE_TIME\", DateTimeFormatter.ISO_LOCAL_DATE_TIME.toFormat()),\n+            Arguments.of(\"ISO_OFFSET_DATE_TIME\", DateTimeFormatter.ISO_OFFSET_DATE_TIME.toFormat()),\n+            Arguments.of(\"ISO_ZONED_DATE_TIME\", DateTimeFormatter.ISO_ZONED_DATE_TIME.toFormat()),\n+            Arguments.of(\"ISO_DATE_TIME\", DateTimeFormatter.ISO_DATE_TIME.toFormat()),\n+            Arguments.of(\"ISO_ORDINAL_DATE\", DateTimeFormatter.ISO_ORDINAL_DATE.toFormat()),\n+            Arguments.of(\"iso_week_date\", DateTimeFormatter.ISO_WEEK_DATE.toFormat()),\n+            Arguments.of(\"ISO_INSTANT\", DateTimeFormatter.ISO_INSTANT.toFormat()),\n+            Arguments.of(\"RFC_1123_DATE_TIME\", DateTimeFormatter.RFC_1123_DATE_TIME.toFormat())\n+        );\n+    }\n+\n+    \/\/ Check that the appropriate FormatType\/Style combo returns correct Format\n+    \/\/ Unlike the other pattern tests, the formatted output is used to check\n+    \/\/ equality, as DateTimeFormatter does not implement equals()\n+    @ParameterizedTest\n+    @MethodSource(\"styles\")\n+    public void applyPatternTest(String style, FormatStyle fStyle) {\n+        var time = ZonedDateTime.now();\n+        var date = LocalDate.now();\n+\n+        \/\/ Test dtf_date\n+        var dFmt = new MessageFormat(\"{0,dtf_date\"+style+\"}\");\n+        assertEquals(DateTimeFormatter.ofLocalizedDate(fStyle).withLocale(\n+                dFmt.getLocale()).toFormat().format(date),\n+                dFmt.getFormatsByArgumentIndex()[0].format(date));\n+\n+        \/\/ Test dtf_time\n+        var tFmt = new MessageFormat(\"{0,dtf_time\"+style+\"}\");\n+        assertEquals(DateTimeFormatter.ofLocalizedTime(fStyle).withLocale(\n+                tFmt.getLocale()).toFormat().format(time),\n+                tFmt.getFormatsByArgumentIndex()[0].format(time));\n+\n+        \/\/ Test dtf_datetime\n+        var dtFmt = new MessageFormat(\"{0,dtf_datetime\"+style+\"}\");\n+        assertEquals(DateTimeFormatter.ofLocalizedDateTime(fStyle).withLocale(\n+                        dtFmt.getLocale()).toFormat().format(time),\n+                dtFmt.getFormatsByArgumentIndex()[0].format(time));\n+    }\n+\n+    \/\/ Provides String patterns and the associated FormatStyle\n+    private static Stream<Arguments> styles() {\n+        return Stream.of(\n+                Arguments.of(\"\", FormatStyle.MEDIUM),\n+                Arguments.of(\",short\", FormatStyle.SHORT),\n+                Arguments.of(\",medium\", FormatStyle.MEDIUM),\n+                Arguments.of(\",long\", FormatStyle.LONG),\n+                Arguments.of(\",full\", FormatStyle.FULL)\n+        );\n+    }\n+\n+    \/\/ Test that a proper Format from a SubformatPattern can be reproduced\n+    @Test\n+    public void subformatPatternTest() {\n+        \/\/ SubformatPattern invokes the same method for both dtf_date,\n+        \/\/ dtf_time, and dtf_datetime\n+        var pattern = \"d MMM uuuu\";\n+        var date = LocalDate.now();\n+\n+        \/\/ Test dtf_date\n+        var dFmt = new MessageFormat(\"{0,dtf_date,\"+pattern+\"}\");\n+        assertEquals(DateTimeFormatter.ofPattern(pattern,dFmt.getLocale()).toFormat().format(date),\n+                dFmt.getFormatsByArgumentIndex()[0].format(date));\n+\n+        \/\/ Test dtf_time\n+        var tFmt = new MessageFormat(\"{0,dtf_time,\"+pattern+\"}\");\n+        assertEquals(DateTimeFormatter.ofPattern(pattern,tFmt.getLocale()).toFormat().format(date),\n+                tFmt.getFormatsByArgumentIndex()[0].format(date));\n+\n+        \/\/ Test dtf_datetime\n+        var dtFmt = new MessageFormat(\"{0,dtf_datetime,\"+pattern+\"}\");\n+        assertEquals(DateTimeFormatter.ofPattern(pattern,dtFmt.getLocale()).toFormat().format(date),\n+                dtFmt.getFormatsByArgumentIndex()[0].format(date));\n+    }\n+\n+    \/\/ Ensure that only the supported built-in FormatStyles or a\n+    \/\/ valid SubformatPattern are recognized\n+    @Test\n+    public void badApplyPatternTest() {\n+        \/\/ Not a supported FormatStyle: throws the underlying IAE from DTF\n+        \/\/ as it is interpreted as a subformatPattern\n+        IllegalArgumentException exc = assertThrows(IllegalArgumentException.class, () ->\n+                new MessageFormat(\"{0,dtf_date,longer}\"));\n+        assertEquals(\"Unknown pattern letter: l\", exc.getMessage());\n+\n+        \/\/ Not a legal SubformatPattern: throws the underlying IAE from DTF\n+        exc = assertThrows(IllegalArgumentException.class, () ->\n+                new MessageFormat(\"{0,dtf_date,VVV}\"));\n+        assertEquals(\"Pattern letter count must be 2: V\", exc.getMessage());\n+\n+        \/\/ Pre-defined ISO style does not exist and should be ignored\n+        assertDoesNotThrow(() -> new MessageFormat(\"{0,BASIC_ISO_DATE,foo}\"),\n+                \"Style on a pre-defined DTF should be ignored, instead of throwing an exception\");\n+    }\n+\n+    \/\/ DateTimeFormatters cannot be recognized when toPattern() is invoked\n+    \/\/ Default behavior of unrecognizable Formats is a FormatElement\n+    \/\/ in the form of { ArgumentIndex }\n+    @Test\n+    public void nonRecognizableToPatternTest() {\n+        \/\/ Check SubformatPattern\n+        var validPattern = \"yy\";\n+        var mFmt = new MessageFormat(\"{0}\");\n+        mFmt.setFormatByArgumentIndex(0, DateTimeFormatter.ofPattern(validPattern).toFormat());\n+        assertEquals(\"{0}\", mFmt.toPattern());\n+\n+        \/\/ Check pre-defined styles\n+        var dFmt = new MessageFormat(\"{0,dtf_date,long}\");\n+        assertEquals(\"{0}\", dFmt.toPattern());\n+        var tFmt = new MessageFormat(\"{0,dtf_time,long}\");\n+        assertEquals(\"{0}\", tFmt.toPattern());\n+        var dtFmt = new MessageFormat(\"{0,dtf_datetime,long}\");\n+        assertEquals(\"{0}\", dtFmt.toPattern());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/TemporalSubFormats.java","additions":204,"deletions":0,"binary":false,"changes":204,"status":"added"},{"patch":"@@ -606,1 +606,0 @@\n-            SystemTest.suite(),\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/JSR166TestCase.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,75 +0,0 @@\n-\/*\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * This file is available under and governed by the GNU General Public\n- * License version 2 only, as published by the Free Software Foundation.\n- * However, the following notice accompanied the original version of this\n- * file:\n- *\n- * Written by Doug Lea with assistance from members of JCP JSR-166\n- * Expert Group and released to the public domain, as explained at\n- * http:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/\n- * Other contributors include Andrew Wright, Jeffrey Hayes,\n- * Pat Fisher, Mike Judd.\n- *\/\n-\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n-public class SystemTest extends JSR166TestCase {\n-    public static void main(String[] args) {\n-        main(suite(), args);\n-    }\n-\n-    public static Test suite() {\n-        return new TestSuite(SystemTest.class);\n-    }\n-\n-    \/**\n-     * Worst case rounding for millisecs; set for 60 cycle millis clock.\n-     * This value might need to be changed on JVMs with coarser\n-     * System.currentTimeMillis clocks.\n-     *\/\n-    static final long MILLIS_ROUND = 17;\n-\n-    \/**\n-     * Nanos between readings of millis is no longer than millis (plus\n-     * possible rounding), and vice versa.\n-     * This shows only that nano timing not (much) worse than milli.\n-     *\/\n-    public void testNanoTime() throws InterruptedException {\n-        long m0 = System.currentTimeMillis();\n-        long n0 = System.nanoTime();\n-        Thread.sleep(1);\n-        long m1 = System.currentTimeMillis();\n-        long n1 = System.nanoTime();\n-        Thread.sleep(50);       \/\/ avoid possibly scaled SHORT_DELAY_MS\n-        long m2 = System.currentTimeMillis();\n-        long n2 = System.nanoTime();\n-        Thread.sleep(1);\n-        long m3 = System.currentTimeMillis();\n-        long n3 = System.nanoTime();\n-        assertTrue((n2 - n1) \/ 1_000_000 <= m3 - m0 + MILLIS_ROUND);\n-        assertTrue(m2 - m1 <= (n3 - n0) \/ 1_000_000 + MILLIS_ROUND);\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/SystemTest.java","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,5 @@\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n@@ -25,4 +30,1 @@\n-import org.testng.annotations.BeforeTest;\n-import org.testng.annotations.Test;\n-\n-import java.io.ByteArrayOutputStream;\n+import java.io.FileInputStream;\n@@ -33,1 +35,1 @@\n-import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n@@ -36,4 +38,3 @@\n-import java.util.zip.ZipEntry;\n-import java.util.zip.ZipException;\n-import java.util.zip.ZipFile;\n-import java.util.zip.ZipOutputStream;\n+import java.util.Formatter;\n+import java.util.stream.Stream;\n+import java.util.zip.*;\n@@ -41,2 +42,1 @@\n-import static org.testng.Assert.assertEquals;\n-import static org.testng.Assert.expectThrows;\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -46,3 +46,7 @@\n- * @summary Validate that opening ZIP files files with invalid UTF-8\n- * byte sequences in the name or comment fields fails with ZipException\n- * @run testng\/othervm InvalidBytesInEntryNameOrComment\n+ * @bug 8301873 8321156\n+ * @summary Validate that a ZipException is thrown when a ZIP file with\n+ * invalid UTF-8 byte sequences in the name or comment fields is opened via\n+ * ZipFile or traversed via ZipInputStream.\n+ * Also validate that ZipFile::getComment will return null with invalid UTF-8\n+ * byte sequences in the ZIP file comment\n+ * @run junit InvalidBytesInEntryNameOrComment\n@@ -51,8 +55,2 @@\n-\n-    \/\/ Offsets for navigating the CEN fields\n-    private static final int EOC_OFF = 6;   \/\/ Offset from EOF to find CEN offset\n-    private static final int CEN_HDR = 45;  \/\/ Size of a CEN header\n-    private static final int NLEN = 28;     \/\/ Name length\n-    private static final int ELEN = 30;     \/\/ Extra length\n-    private static final int CLEN = 32;     \/\/ Comment length\n-\n+    \/\/ Zip file that is created and used by the test\n+    public static final Path ZIP_FILE = Path.of(\"BadName.zip\");\n@@ -61,0 +59,3 @@\n+    \/\/ Expected error message when an invalid entry name or entry comment is\n+    \/\/ encountered when accessing a CEN Header\n+    private static final String CEN_BAD_ENTRY_NAME_OR_COMMENT = \"invalid CEN header (bad entry name or comment)\";\n@@ -62,5 +63,21 @@\n-    \/\/ Expected ZipException regex\n-    private static final String BAD_ENTRY_NAME_OR_COMMENT = \"invalid CEN header (bad entry name or comment)\";\n-\n-    \/\/ ZIP file with invalid name field\n-    private Path invalidName;\n+    \/\/ Expected error message when an invalid entry name is encountered when\n+    \/\/ accessing a LOC Header\n+    private static final String LOC_HEADER_BAD_ENTRY_NAME = \"invalid LOC header (bad entry name)\";\n+    \/\/ Zip file comment starting offset\n+    private static final int ZIP_FILE_COMMENT_OFFSET = 0x93;\n+    \/\/ CEN Header offset for the entry comment to be modified\n+    private static final int CEN_FILE_HEADER_FILE_COMMENT_STARTING_OFFSET = 0x6D;\n+    \/\/ CEN Header offset for the entry name to be modified\n+    private static final int CEN_FILE_HEADER_FILENAME_STARTING_OFFSET = 0x66;\n+    \/\/ LOC Header offset for the entry name to be modified\n+    private static final int LOC_FILE_HEADER_FILENAME_STARTING_OFFSET = 0x1e;\n+    \/\/ CEN Entry comment\n+    public static final String ENTRY_COMMENT = \"entryComment\";\n+    \/\/ Entry name to be modified\/validated\n+    public static final String ENTRY_NAME = \"entryName\";\n+    \/\/ Zip file comment to be modified\/validated\n+    public static final String ZIP_FILE_COMMENT = \"ZipFileComment\";\n+    \/\/ Buffer used to massage the byte array containing the Zip File\n+    private ByteBuffer buffer;\n+    \/\/ Array used to copy VALID_ZIP into prior to each test run\n+    private byte[] zipArray;\n@@ -68,10 +85,72 @@\n-    \/\/ ZIP file with invalid comment field\n-    private Path invalidComment;\n-\n-    @BeforeTest\n-    public void setup() throws IOException {\n-        \/\/ Create a ZIP file with valid name and comment fields\n-        byte[] templateZip = templateZIP();\n-\n-        \/\/ Create a ZIP with a CEN name field containing an invalid byte sequence\n-        invalidName = invalidName(\"invalid-name.zip\", templateZip);\n+    \/**\n+     * Byte array representing a valid Zip file prior modifying the CEN\/LOC\n+     * entry name, CEN entry comment or Zip file comment with an invalid\n+     * UTF-8 byte sequence.\n+     * See the createZipByteArray method which was used to create the original\n+     * Zip file\n+     * ----------------#1--------------------\n+     * [Central Directory Header]\n+     * 0x3a: Signature        : 0x02014b50\n+     * 0x3e: Created Zip Spec :       0x14 [2.0]\n+     * 0x3f: Created OS       :        0x0 [MS-DOS]\n+     * 0x40: VerMadeby        :       0x14 [0, 2.0]\n+     * 0x41: VerExtract       :       0x14 [2.0]\n+     * 0x42: Flag             :      0x808\n+     * 0x44: Method           :        0x8 [DEFLATED]\n+     * 0x46: Last Mod Time    : 0x58506664 [Fri Feb 16 12:51:08 EST 2024]\n+     * 0x4a: CRC              : 0xd202ef8d\n+     * 0x4e: Compressed Size  :        0x3\n+     * 0x52: Uncompressed Size:        0x1\n+     * 0x56: Name Length      :        0x9\n+     * 0x58: Extra Length     :        0x0\n+     * 0x5a: Comment Length   :        0xc\n+     * 0x5c: Disk Start       :        0x0\n+     * 0x5e: Attrs            :        0x0\n+     * 0x60: AttrsEx          :        0x0\n+     * 0x64: Loc Header Offset:        0x0\n+     * 0x68: File Name        :  entryName\n+     * 0x71: Comment          : [entryComment]\n+     * [Local File Header]\n+     * 0x0: Signature   :   0x04034b50\n+     * 0x4: Version     :         0x14    [2.0]\n+     * 0x6: Flag        :        0x808\n+     * 0x8: Method      :          0x8    [DEFLATED]\n+     * 0xa: LastMTime   :   0x58506664    [Fri Feb 16 12:51:08 EST 2024]\n+     * 0xe: CRC         :          0x0\n+     * 0x12: CSize       :          0x0\n+     * 0x16: Size        :          0x0\n+     * 0x1a: Name Length :          0x9    [entryName]\n+     * 0x1c: ExtraLength :          0x0\n+     * 0x1e: File Name   : [entryName]\n+     * [End Central Directory Header]\n+     * 0x7d: Signature   :   0x06054b50\n+     * 0x85: Disk Entries:          0x1\n+     * 0x87: Total Entries:         0x1\n+     * 0x89: CEN Size    :         0x43\n+     * 0x8d: Offset CEN  :         0x3a\n+     * 0x91: Comment Len :          0xe\n+     * 0x93: Comment     :   [ZipFileComment]\n+     *\/\n+    public static byte[] VALID_ZIP = {\n+            (byte) 0x50, (byte) 0x4b, (byte) 0x3, (byte) 0x4, (byte) 0x14, (byte) 0x0, (byte) 0x8, (byte) 0x8,\n+            (byte) 0x8, (byte) 0x0, (byte) 0x7d, (byte) 0x6f, (byte) 0x50, (byte) 0x58, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x9, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x65, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x72, (byte) 0x79, (byte) 0x4e, (byte) 0x61, (byte) 0x6d, (byte) 0x65, (byte) 0x63,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x50, (byte) 0x4b, (byte) 0x7, (byte) 0x8, (byte) 0x8d, (byte) 0xef,\n+            (byte) 0x2, (byte) 0xd2, (byte) 0x3, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x50, (byte) 0x4b, (byte) 0x1, (byte) 0x2, (byte) 0x14, (byte) 0x0,\n+            (byte) 0x14, (byte) 0x0, (byte) 0x8, (byte) 0x8, (byte) 0x8, (byte) 0x0, (byte) 0x7d, (byte) 0x6f,\n+            (byte) 0x50, (byte) 0x58, (byte) 0x8d, (byte) 0xef, (byte) 0x2, (byte) 0xd2, (byte) 0x3, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x9, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0xc, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x65, (byte) 0x6e, (byte) 0x74, (byte) 0x72, (byte) 0x79, (byte) 0x4e, (byte) 0x61, (byte) 0x6d,\n+            (byte) 0x65, (byte) 0x65, (byte) 0x6e, (byte) 0x74, (byte) 0x72, (byte) 0x79, (byte) 0x43, (byte) 0x6f,\n+            (byte) 0x6d, (byte) 0x6d, (byte) 0x65, (byte) 0x6e, (byte) 0x74, (byte) 0x50, (byte) 0x4b, (byte) 0x5,\n+            (byte) 0x6, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x1,\n+            (byte) 0x0, (byte) 0x43, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x3a, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0xe, (byte) 0x0, (byte) 0x5a, (byte) 0x69, (byte) 0x70, (byte) 0x46, (byte) 0x69,\n+            (byte) 0x6c, (byte) 0x65, (byte) 0x43, (byte) 0x6f, (byte) 0x6d, (byte) 0x6d, (byte) 0x65, (byte) 0x6e,\n+            (byte) 0x74,\n+    };\n@@ -79,2 +158,11 @@\n-        \/\/ Create a ZIP with a CEN comment field containing an invalid byte sequence\n-        invalidComment = invalidComment(\"invalid-comment.zip\", templateZip);\n+    \/**\n+     * Delete the Zip file if it exists prior to each run and create a copy\n+     * of the byte array representing a valid ZIP file to be used by each test run\n+     *\n+     * @throws IOException if an error occurs\n+     *\/\n+    @BeforeEach\n+    public void setupTest() throws IOException {\n+        Files.deleteIfExists(ZIP_FILE);\n+        zipArray = Arrays.copyOf(VALID_ZIP, VALID_ZIP.length);\n+        buffer = ByteBuffer.wrap(zipArray).order(ByteOrder.LITTLE_ENDIAN);\n@@ -84,3 +172,4 @@\n-     * Opening a ZipFile with an invalid UTF-8 byte sequence in\n-     * the name field of a CEN file header should throw a\n-     * ZipException with \"bad entry name or comment\"\n+     * The DataProvider of CEN offsets to modify with an invalid UTF-8 byte\n+     * sequence\n+     *\n+     * @return Arguments used in each test run\n@@ -88,6 +177,7 @@\n-    @Test\n-    public void shouldRejectInvalidName() throws IOException {\n-        ZipException ex = expectThrows(ZipException.class, () -> {\n-            new ZipFile(invalidName.toFile());\n-        });\n-        assertEquals(ex.getMessage(), BAD_ENTRY_NAME_OR_COMMENT);\n+    private static Stream<Arguments> CENCommentOffsets() {\n+        return Stream.of(\n+                \/\/ Entry's name starting offset\n+                Arguments.of(CEN_FILE_HEADER_FILENAME_STARTING_OFFSET),\n+                \/\/ Entry's comment starting offset\n+                Arguments.of(CEN_FILE_HEADER_FILE_COMMENT_STARTING_OFFSET)\n+        );\n@@ -97,3 +187,2 @@\n-     * Opening a ZipFile with an invalid UTF-8 byte sequence in\n-     * the comment field of a CEN file header should throw a\n-     * ZipException with \"bad entry name or comment\"\n+     * Validate that the original Zip file can be opened via ZipFile.\n+     * @throws IOException if an error occurs\n@@ -102,5 +191,6 @@\n-    public void shouldRejectInvalidComment() throws IOException {\n-        ZipException ex = expectThrows(ZipException.class, () -> {\n-            new ZipFile(invalidComment.toFile());\n-        });\n-        assertEquals(ex.getMessage(), BAD_ENTRY_NAME_OR_COMMENT);\n+    public void testValidEntryNameAndComment() throws IOException {\n+        Files.write(ZIP_FILE, zipArray);\n+        try (ZipFile zf = new ZipFile(ZIP_FILE.toFile())) {\n+            var comment = zf.getComment();\n+            assertEquals(ZIP_FILE_COMMENT, comment);\n+        }\n@@ -110,1 +200,3 @@\n-     * Make a valid ZIP file used as a template for invalid files\n+     * Validate that the original Zip file can be opened and traversed via\n+     * ZipinputStream::getNextEntry.\n+     * @throws IOException if an error occurs\n@@ -112,6 +204,8 @@\n-    private byte[] templateZIP() throws IOException {\n-        ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-        try (ZipOutputStream zo = new ZipOutputStream(bout)) {\n-            ZipEntry commentEntry = new ZipEntry(\"file\");\n-            commentEntry.setComment(\"Comment\");\n-            zo.putNextEntry(commentEntry);\n+    @Test\n+    public void traverseZipWithZipInputStreamTest() throws IOException {\n+        Files.write(ZIP_FILE, zipArray);\n+        try (ZipInputStream zis = new ZipInputStream(new FileInputStream(ZIP_FILE.toFile()))) {\n+            ZipEntry ze;\n+            while ((ze = zis.getNextEntry()) != null) {\n+                assertEquals(ENTRY_NAME, ze.getName());\n+            }\n@@ -119,1 +213,0 @@\n-        return bout.toByteArray();\n@@ -123,1 +216,6 @@\n-     * Make a ZIP with invalid bytes in the CEN name field\n+     * Validate that a ZipException is thrown when an entry name or entry comment\n+     * within a CEN file header contains an invalid UTF-8 byte sequence.\n+     *\n+     * @param offset the offset to the file name or file comment within the CEN\n+     *               file header\n+     * @throws IOException if an error occurs\n@@ -125,10 +223,11 @@\n-    private Path invalidName(String name, byte[] template) throws IOException {\n-        ByteBuffer buffer = copyTemplate(template);\n-        int off = cenStart(buffer);\n-        \/\/ Name field starts here\n-        int noff = off + CEN_HDR;\n-\n-        \/\/ Write invalid bytes\n-        buffer.put(noff, INVALID_UTF8_BYTE_SEQUENCE, 0, INVALID_UTF8_BYTE_SEQUENCE.length);\n-        return writeFile(name, buffer);\n-\n+    @ParameterizedTest\n+    @MethodSource(\"CENCommentOffsets\")\n+    public void testInValidEntryNameOrComment(int offset)\n+            throws IOException {\n+        createInvalidUTFEntryInZipFile(offset);\n+        Throwable ex = assertThrows(ZipException.class, () ->\n+                {\n+                    try (ZipFile zf = new ZipFile(ZIP_FILE.toFile())) {};\n+                }\n+        );\n+        assertEquals(CEN_BAD_ENTRY_NAME_OR_COMMENT, ex.getMessage());\n@@ -136,1 +235,0 @@\n-\n@@ -138,2 +236,3 @@\n-     * Make a copy of the ZIP template and wrap it in a little-endian\n-     * ByteBuffer\n+     * Validate that a null is returned from ZipFile::getComment when the\n+     * comment contains an invalid UTF-8 byte sequence.\n+     * @throws IOException if an error occurs\n@@ -141,3 +240,6 @@\n-    private ByteBuffer copyTemplate(byte[] template) {\n-        return ByteBuffer.wrap(Arrays.copyOf(template, template.length))\n-                .order(ByteOrder.LITTLE_ENDIAN);\n+    @Test\n+    public void testInValidZipFileComment() throws IOException {\n+        createInvalidUTFEntryInZipFile(ZIP_FILE_COMMENT_OFFSET);\n+        try (ZipFile zf = new ZipFile(ZIP_FILE.toFile())) {\n+            assertNull(zf.getComment());\n+        }\n@@ -147,1 +249,3 @@\n-     * Make a ZIP with invalid bytes in the CEN comment field\n+     * Validate that a ZipException is thrown when an entry name\n+     * within a LOC file header contains an invalid UTF-8 byte sequence.\n+     * @throws IOException if an error occurs\n@@ -149,13 +253,11 @@\n-    private Path invalidComment(String name, byte[] template) throws IOException {\n-        ByteBuffer buffer = copyTemplate(template);\n-        int off = cenStart(buffer);\n-        \/\/ Need to skip past the length of the name and extra fields\n-        int nlen = buffer.getShort(off + NLEN);\n-        int elen = buffer.getShort(off + ELEN);\n-\n-        \/\/ Comment field starts here\n-        int coff = off + CEN_HDR + nlen + elen;\n-\n-        \/\/ Write invalid bytes\n-        buffer.put(coff, INVALID_UTF8_BYTE_SEQUENCE, 0, INVALID_UTF8_BYTE_SEQUENCE.length);\n-        return writeFile(name, buffer);\n+    @Test\n+    public void invalidZipInputStreamTest() throws IOException {\n+        createInvalidUTFEntryInZipFile(LOC_FILE_HEADER_FILENAME_STARTING_OFFSET);\n+        Throwable ex = assertThrows(ZipException.class, () ->\n+                {\n+                    try (ZipInputStream zis =\n+                                 new ZipInputStream(new FileInputStream(ZIP_FILE.toFile()))) {\n+                        zis.getNextEntry();\n+                    };\n+                });\n+        assertEquals(LOC_HEADER_BAD_ENTRY_NAME, ex.getMessage());\n@@ -164,0 +266,12 @@\n+    \/**\n+     * Utility method which modifies a Zip file starting at the specified\n+     * offset to include an invalid UTF-8 byte sequence.\n+     *\n+     * @param offset starting offset within the Zip file to modify\n+     * @throws IOException if an error occurs\n+     *\/\n+    private void createInvalidUTFEntryInZipFile(int offset) throws IOException {\n+        buffer.put(offset, INVALID_UTF8_BYTE_SEQUENCE, 0,\n+                INVALID_UTF8_BYTE_SEQUENCE.length);\n+        Files.write(ZIP_FILE, zipArray);\n+    }\n@@ -166,4 +280,19 @@\n-     * Finds the offset of the start of the CEN directory\n-      *\/\n-    private int cenStart(ByteBuffer buffer) {\n-        return buffer.getInt(buffer.capacity() - EOC_OFF);\n+     * Utility method which creates the Zip file used by the tests and\n+     * converts Zip file to byte array declaration.\n+     *\n+     * @throws IOException if an error occurs\n+     *\/\n+    private void createZipByteArray() throws IOException {\n+        ZipOutputStream zos = new ZipOutputStream(\n+                new FileOutputStream(ZIP_FILE.toFile()));\n+        zos.setComment(ZIP_FILE_COMMENT);\n+        ZipEntry entry = new ZipEntry(ENTRY_NAME);\n+        entry.setComment(ENTRY_COMMENT);\n+        zos.putNextEntry(entry);\n+        zos.write(new byte[1]);\n+        zos.closeEntry();\n+        zos.close();\n+        \/\/ Now create the byte array entry declaration\n+        var fooJar = Files.readAllBytes(ZIP_FILE);\n+        var result = createByteArray(fooJar, \"VALID_ZIP\");\n+        System.out.println(result);\n@@ -173,1 +302,11 @@\n-     * Utility to write a ByteBuffer to disk\n+     * Utility method which takes a byte array and converts to byte array\n+     * declaration.  For example:\n+     * {@snippet :\n+     * var fooJar = Files.readAllBytes(Path.of(\"foo.jar\"));\n+     * var result = createByteArray(fooJar,\"FOOBYTES\");\n+     * System.out.println(result);\n+     * }\n+     *\n+     * @param bytes A byte array used to create a byte array declaration\n+     * @param name  Name to be used in the byte array declaration\n+     * @return The formatted byte array declaration\n@@ -175,5 +314,10 @@\n-    private Path writeFile(String name, ByteBuffer buffer) throws IOException {\n-        Path zip = Path.of(name);\n-        try (FileChannel ch = new FileOutputStream(zip.toFile()).getChannel()) {\n-            buffer.rewind();\n-            ch.write(buffer);\n+    public static String createByteArray(byte[] bytes, String name) {\n+        StringBuilder sb = new StringBuilder(bytes.length * 5);\n+        Formatter fmt = new Formatter(sb);\n+        fmt.format(\"    public static byte[] %s = {\", name);\n+        final int linelen = 8;\n+        for (int i = 0; i < bytes.length; i++) {\n+            if (i % linelen == 0) {\n+                fmt.format(\"%n        \");\n+            }\n+            fmt.format(\" (byte) 0x%x,\", bytes[i] & 0xff);\n@@ -181,1 +325,2 @@\n-        return zip;\n+        fmt.format(\"%n    };%n\");\n+        return sb.toString();\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/InvalidBytesInEntryNameOrComment.java","additions":252,"deletions":107,"binary":false,"changes":359,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/javax\/net\/ssl\/templates\n+ * @bug 8311644\n+ * @summary Verify CertificateMessage alerts are correct to the TLS specs\n+ * @run main\/othervm -Djdk.tls.client.protocols=TLSv1.2 CertMsgCheck handshake_failure\n+ * @run main\/othervm -Djdk.tls.client.protocols=TLSv1.3 CertMsgCheck certificate_required\n+ *\n+ *\/\n+\n+public class CertMsgCheck {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Start server\n+        TLSBase.Server server = new TLSBase.ServerBuilder().setClientAuth(true).\n+            build();\n+\n+        \/\/ Initial client session\n+        TLSBase.Client client1 = new TLSBase.Client(true, false);\n+        if (server.getSession(client1).getSessionContext() == null) {\n+            for (Exception e : server.getExceptionList()) {\n+                System.out.println(\"Looking at \" + e.getClass() + \" \" +\n+                    e.getMessage());\n+                if (e.getMessage().contains(args[0])) {\n+                    System.out.println(\"Found correct exception: \" + args[0] +\n+                    \" in \" + e.getMessage());\n+                    return;\n+                } else {\n+                    System.out.println(\"No \\\"\" + args[0] + \"\\\" found.\");\n+                }\n+            }\n+\n+            throw new Exception(\"Failed to find expected alert: \" + args[0]);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/CertMsgCheck.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.util.HexFormat;\n@@ -42,6 +43,1 @@\n-    static void toHex(byte[] id) {\n-        for (byte b : id) {\n-            System.out.printf(\"%02X \", b);\n-        }\n-        System.out.println();\n-    }\n+    static HexFormat hex = HexFormat.of();\n@@ -55,1 +51,1 @@\n-            throw new Exception(\"Context was null\");\n+            throw new Exception(\"Context was null.  Handshake failure.\");\n@@ -62,2 +58,1 @@\n-        System.out.print(\"id = \");\n-        toHex(id);\n+        System.out.println(\"id = \" + hex.formatHex(id));\n@@ -67,2 +62,1 @@\n-            System.out.print(\"id = \");\n-            toHex(id);\n+            System.out.println(\"id = \" + hex.formatHex(id));\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/CheckSessionContext.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,10 +24,2 @@\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.SSLServerSocket;\n-import javax.net.ssl.SSLServerSocketFactory;\n-import javax.net.ssl.SSLSession;\n-import javax.net.ssl.SSLSocket;\n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n-import java.io.OutputStreamWriter;\n-import java.io.PrintWriter;\n+import javax.net.ssl.*;\n+import java.io.*;\n@@ -35,0 +27,4 @@\n+import java.security.KeyStore;\n+import java.security.cert.PKIXBuilderParameters;\n+import java.security.cert.X509CertSelector;\n+import java.util.ArrayList;\n@@ -36,0 +32,1 @@\n+import java.util.List;\n@@ -70,2 +67,2 @@\n-                System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n-                        \"\/\" + keyStoreFile;\n+            System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n+                \"\/\" + keyStoreFile;\n@@ -73,2 +70,2 @@\n-                System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n-                        \"\/\" + trustStoreFile;\n+            System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n+                \"\/\" + trustStoreFile;\n@@ -82,11 +79,6 @@\n-    byte[] read(SSLSocket sock) {\n-        try {\n-            BufferedReader reader = new BufferedReader(\n-                    new InputStreamReader(sock.getInputStream()));\n-            String s = reader.readLine();\n-            System.err.println(\"(read) \" + name + \": \" + s);\n-            return s.getBytes();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n-        return null;\n+    byte[] read(SSLSocket sock) throws Exception {\n+        BufferedReader reader = new BufferedReader(\n+            new InputStreamReader(sock.getInputStream()));\n+        String s = reader.readLine();\n+        System.err.println(\"(read) \" + name + \": \" + s);\n+        return s.getBytes();\n@@ -96,9 +88,13 @@\n-    public void write(SSLSocket sock, byte[] data) {\n-        try {\n-            PrintWriter out = new PrintWriter(\n-                    new OutputStreamWriter(sock.getOutputStream()));\n-            out.println(new String(data));\n-            out.flush();\n-            System.err.println(\"(write)\" + name + \": \" + new String(data));\n-        } catch (Exception e) {\n-            e.printStackTrace();\n+    public void write(SSLSocket sock, byte[] data) throws Exception {\n+        PrintWriter out = new PrintWriter(\n+            new OutputStreamWriter(sock.getOutputStream()));\n+        out.println(new String(data));\n+        out.flush();\n+        System.err.println(\"(write)\" + name + \": \" + new String(data));\n+    }\n+\n+    private static KeyManager[] getKeyManager(boolean empty) throws Exception {\n+        FileInputStream fis = null;\n+        if (!empty) {\n+            fis = new FileInputStream(System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n+                \"\/\" + keyStoreFile);\n@@ -106,0 +102,36 @@\n+        \/\/ Load the keystore\n+        char[] pwd = passwd.toCharArray();\n+        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());\n+        ks.load(fis, pwd);\n+\n+        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"PKIX\");\n+        kmf.init(ks, pwd);\n+        return kmf.getKeyManagers();\n+    }\n+\n+    private static TrustManager[] getTrustManager(boolean empty) throws Exception {\n+        FileInputStream fis = null;\n+        if (!empty) {\n+            fis = new FileInputStream(System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n+                \"\/\" + trustStoreFile);\n+        }\n+        \/\/ Load the keystore\n+        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());\n+        ks.load(fis, passwd.toCharArray());\n+\n+        PKIXBuilderParameters pkixParams =\n+            new PKIXBuilderParameters(ks, new X509CertSelector());\n+\n+        \/\/ Explicitly set revocation based on the command-line\n+        \/\/ parameters, default false\n+        pkixParams.setRevocationEnabled(false);\n+\n+        \/\/ Register the PKIXParameters with the trust manager factory\n+        ManagerFactoryParameters trustParams =\n+            new CertPathTrustManagerParameters(pkixParams);\n+\n+        \/\/ Create the Trust Manager Factory using the PKIX variant\n+        \/\/ and initialize it with the parameters configured above\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"PKIX\");\n+        tmf.init(trustParams);\n+        return tmf.getTrustManagers();\n@@ -120,0 +152,1 @@\n+        List<Exception> exceptionList = new ArrayList<>();\n@@ -121,1 +154,1 @@\n-        Server() {\n+        Server(ServerBuilder builder) {\n@@ -125,1 +158,2 @@\n-                sslContext = SSLContext.getDefault();\n+                sslContext = SSLContext.getInstance(\"TLS\");\n+                sslContext.init(TLSBase.getKeyManager(builder.km), TLSBase.getTrustManager(builder.tm), null);\n@@ -128,0 +162,1 @@\n+                ssock.setNeedClientAuth(builder.clientauth);\n@@ -139,1 +174,1 @@\n-                                serverPort);\n+                            serverPort);\n@@ -146,0 +181,1 @@\n+                            exceptionList.add(e);\n@@ -156,0 +192,45 @@\n+        Server() {\n+            this(new ServerBuilder());\n+        }\n+\n+        \/**\n+         * @param km - true for an empty key manager\n+         * @param tm - true for an empty trust manager\n+         *\/\n+        Server(boolean km, boolean tm) {\n+            super();\n+            name = \"server\";\n+            try {\n+                sslContext = SSLContext.getInstance(\"TLS\");\n+                sslContext.init(TLSBase.getKeyManager(km), TLSBase.getTrustManager(tm), null);\n+                fac = sslContext.getServerSocketFactory();\n+                ssock = (SSLServerSocket) fac.createServerSocket(0);\n+                ssock.setNeedClientAuth(true);\n+                serverPort = ssock.getLocalPort();\n+            } catch (Exception e) {\n+                System.err.println(e.getMessage());\n+                e.printStackTrace();\n+            }\n+\n+                \/\/ Thread to allow multiple clients to connect\n+                t = new Thread(() -> {\n+                    try {\n+                        while (true) {\n+                            System.err.println(\"Server ready on port \" +\n+                                serverPort);\n+                            SSLSocket c = (SSLSocket)ssock.accept();\n+                            clientMap.put(c.getPort(), c);\n+                            try {\n+                                write(c, read(c));\n+                            } catch (Exception e) {\n+                                e.printStackTrace();\n+                            }\n+                        }\n+                    } catch (Exception ex) {\n+                        System.err.println(\"Server Down\");\n+                        ex.printStackTrace();\n+                    }\n+                });\n+                t.start();\n+            }\n+\n@@ -169,1 +250,1 @@\n-        byte[] read(Client client) {\n+        byte[] read(Client client) throws Exception {\n@@ -178,1 +259,1 @@\n-        void write(Client client, byte[] data) {\n+        void write(Client client, byte[] data) throws Exception {\n@@ -184,1 +265,1 @@\n-        boolean writeRead(Client client, String s) {\n+        boolean writeRead(Client client, String s) throws Exception{\n@@ -200,0 +281,4 @@\n+\n+        List<Exception> getExceptionList() {\n+            return exceptionList;\n+        }\n@@ -202,0 +287,22 @@\n+    static class ServerBuilder {\n+        boolean km = false, tm = false, clientauth = false;\n+\n+        ServerBuilder setKM(boolean b) {\n+            km = b;\n+            return this;\n+        }\n+\n+        ServerBuilder setTM(boolean b) {\n+            tm = b;\n+            return this;\n+        }\n+\n+        ServerBuilder setClientAuth(boolean b) {\n+            clientauth = b;\n+            return this;\n+        }\n+\n+        Server build() {\n+            return new Server(this);\n+        }\n+    }\n@@ -208,1 +315,1 @@\n-\n+        boolean km, tm;\n@@ -210,0 +317,8 @@\n+            this(false, false);\n+        }\n+\n+        \/**\n+         * @param km - true sets an empty key manager\n+         * @param tm - true sets an empty trust manager\n+         *\/\n+        Client(boolean km, boolean tm) {\n@@ -211,6 +326,2 @@\n-            try {\n-                sslContext = SSLContext.getDefault();\n-            } catch (Exception e) {\n-                System.err.println(e.getMessage());\n-                e.printStackTrace();\n-            }\n+            this.km = km;\n+            this.tm = tm;\n@@ -223,1 +334,2 @@\n-                sslContext = SSLContext.getDefault();\n+                sslContext = SSLContext.getInstance(\"TLS\");\n+                sslContext.init(TLSBase.getKeyManager(km), TLSBase.getTrustManager(tm), null);\n@@ -238,1 +350,1 @@\n-        byte[] read() {\n+        byte[] read() throws Exception {\n@@ -243,1 +355,1 @@\n-        void write(byte[] data) {\n+        void write(byte[] data) throws Exception {\n@@ -246,1 +358,1 @@\n-        void write(String s) {\n+        void write(String s) throws Exception {\n@@ -252,1 +364,1 @@\n-        boolean writeRead(Server server, String s) {\n+        boolean writeRead(Server server, String s) throws Exception {\n","filename":"test\/jdk\/javax\/net\/ssl\/templates\/TLSBase.java","additions":165,"deletions":53,"binary":false,"changes":218,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+ *     -XX:CompileOnly=jdk.jfr.event.compiler.TestCompilerCompile::dummyMethod,jdk.jfr.event.compiler.TestCompilerCompile::doTest\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCompilerCompile.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,290 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325506\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.util\n+ * @run main\/othervm Deterministic\n+ * @summary confirm the output of random calculations are determined\n+ *          by the SecureRandom parameters\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.security.SeededSecureRandom;\n+import sun.security.util.SignatureUtil;\n+\n+import javax.crypto.Cipher;\n+import javax.crypto.KEM;\n+import javax.crypto.KeyAgreement;\n+import javax.crypto.KeyGenerator;\n+import javax.crypto.spec.ChaCha20ParameterSpec;\n+import javax.crypto.spec.DHParameterSpec;\n+import javax.crypto.spec.GCMParameterSpec;\n+import javax.crypto.spec.IvParameterSpec;\n+import javax.crypto.spec.PBEParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.nio.charset.StandardCharsets;\n+import java.security.*;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.security.spec.DSAParameterSpec;\n+import java.security.spec.PSSParameterSpec;\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+public class Deterministic {\n+\n+    private static final long SEED = SeededSecureRandom.seed();\n+    private static int hash = 0;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        for (var p : Security.getProviders()) {\n+            var name = p.getName();\n+            if (name.equals(\"SunMSCAPI\") || name.startsWith(\"SunPKCS11\")) {\n+                System.out.println(\"Skipped native provider \" + name);\n+                continue;\n+            }\n+            for (var s : p.getServices()) {\n+                switch (s.getType()) {\n+                    case \"KeyPairGenerator\" -> testKeyPairGenerator(s);\n+                    case \"KeyGenerator\" -> testKeyGenerator(s);\n+                    case \"Signature\" -> testSignature(s);\n+                    case \"KEM\" -> testKEM(s);\n+                    case \"KeyAgreement\" -> testKeyAgreement(s);\n+                    case \"Cipher\" -> testCipher(s);\n+                    case \"AlgorithmParameterGenerator\" -> testAlgorithmParameterGenerator(s);\n+                }\n+            }\n+        }\n+        \/\/ Run twice and this value should be the same for the same SEED\n+        System.out.println(\"Final hash: \" + hash);\n+    }\n+\n+    static void testCipher(Provider.Service s) throws Exception {\n+        var alg = s.getAlgorithm();\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + alg);\n+        if (alg.contains(\"Wrap\") || alg.contains(\"KW\")) {\n+            System.out.println(\"    Ignored\");\n+            return;\n+        }\n+        Key key;\n+        AlgorithmParameterSpec spec;\n+        if (alg.startsWith(\"PBE\")) {\n+            key = new SecretKeySpec(\"isthisakey\".getBytes(StandardCharsets.UTF_8), \"PBE\");\n+            \/\/ Some cipher requires salt to be 8 byte long\n+            spec = new PBEParameterSpec(\"saltsalt\".getBytes(StandardCharsets.UTF_8), 100);\n+        } else {\n+            key = generateKey(alg.split(\"\/\")[0], s.getProvider());\n+            if (!alg.contains(\"\/\") || alg.contains(\"\/ECB\/\")) {\n+                spec = null;\n+            } else {\n+                if (alg.contains(\"\/GCM\/\")) {\n+                    spec = new GCMParameterSpec(128, new SeededSecureRandom(SEED + 1).generateSeed(16));\n+                } else if (alg.equals(\"ChaCha20\")) {\n+                    spec = new ChaCha20ParameterSpec(new SeededSecureRandom(SEED + 2).generateSeed(12), 128);\n+                } else if (alg.contains(\"ChaCha20\")) {\n+                    spec = new IvParameterSpec(new SeededSecureRandom(SEED + 3).generateSeed(12));\n+                } else {\n+                    spec = new IvParameterSpec(new SeededSecureRandom(SEED + 4).generateSeed(16));\n+                }\n+            }\n+        }\n+        var c = Cipher.getInstance(alg, s.getProvider());\n+        c.init(Cipher.ENCRYPT_MODE, key, spec, new SeededSecureRandom(SEED));\n+        \/\/ Some cipher requires plaintext to be 16 byte long\n+        var ct1 = c.doFinal(\"asimpleplaintext\".getBytes(StandardCharsets.UTF_8));\n+        \/\/ Some cipher requires IV to be different, so re-instantiate a cipher\n+        c = Cipher.getInstance(alg, s.getProvider());\n+        c.init(Cipher.ENCRYPT_MODE, key, spec, new SeededSecureRandom(SEED));\n+        var ct2 = c.doFinal(\"asimpleplaintext\".getBytes(StandardCharsets.UTF_8));\n+        Asserts.assertEqualsByteArray(ct1, ct2);\n+        hash = Objects.hash(hash, Arrays.hashCode(ct1));\n+        System.out.println(\"    Passed\");\n+    }\n+\n+    static void testAlgorithmParameterGenerator(Provider.Service s) throws Exception {\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + s.getAlgorithm());\n+        var apg = AlgorithmParameterGenerator.getInstance(s.getAlgorithm(), s.getProvider());\n+        apg.init(1024, new SeededSecureRandom(SEED));\n+        var p1 = apg.generateParameters().getParameterSpec(AlgorithmParameterSpec.class);\n+        apg.init(1024, new SeededSecureRandom(SEED));\n+        var p2 = apg.generateParameters().getParameterSpec(AlgorithmParameterSpec.class);\n+        if (p1 instanceof DSAParameterSpec d1 && p2 instanceof DSAParameterSpec d2) {\n+            Asserts.assertEQ(d1.getG(), d2.getG());\n+            Asserts.assertEQ(d1.getP(), d2.getP());\n+            Asserts.assertEQ(d1.getQ(), d2.getQ());\n+            hash = Objects.hash(hash, d1.getG(), d1.getP(), d1.getQ());\n+        } else if (p1 instanceof DHParameterSpec d1 && p2 instanceof DHParameterSpec d2){\n+            Asserts.assertEQ(d1.getG(), d2.getG());\n+            Asserts.assertEQ(d1.getP(), d2.getP());\n+            Asserts.assertEQ(d1.getL(), d2.getL());\n+            hash = Objects.hash(hash, d1.getG(), d1.getP(), d1.getL());\n+        } else {\n+            Asserts.assertEQ(p1, p2);\n+            hash = Objects.hash(hash, p1);\n+        }\n+        System.out.println(\"    Passed\");\n+    }\n+\n+    private static void testSignature(Provider.Service s) throws Exception {\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + s.getAlgorithm());\n+        String keyAlg = SignatureUtil.extractKeyAlgFromDwithE(s.getAlgorithm());\n+        if (keyAlg == null) {\n+            if (s.getAlgorithm().equals(\"HSS\/LMS\")) {\n+                \/\/ We don't support HSS\/LMS key generation and signing\n+                System.out.println(\"    Ignored: HSS\/LMS\");\n+                return;\n+            } else {\n+                keyAlg = s.getAlgorithm(); \/\/ EdDSA etc\n+            }\n+        }\n+        var sk = generateKeyPair(keyAlg, 0).getPrivate();\n+        var sig = Signature.getInstance(s.getAlgorithm(), s.getProvider());\n+        try {\n+            if (keyAlg.equals(\"RSASSA-PSS\")) {\n+                sig.setParameter(PSSParameterSpec.DEFAULT);\n+            }\n+            sig.initSign(sk, new SeededSecureRandom(SEED));\n+            sig.update(new byte[20]);\n+            var s1 = sig.sign();\n+            sig.initSign(sk, new SeededSecureRandom(SEED));\n+            sig.update(new byte[20]);\n+            var s2 = sig.sign();\n+            Asserts.assertEqualsByteArray(s1, s2);\n+            hash = Objects.hash(hash, Arrays.hashCode(s1));\n+            System.out.println(\"    Passed\");\n+        } catch (InvalidKeyException ike) {\n+            System.out.println(\"    Ignored: \" + ike.getMessage());\n+        }\n+    }\n+\n+    static void testKeyPairGenerator(Provider.Service s) throws Exception {\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + s.getAlgorithm());\n+        var kp1 = generateKeyPair(s.getAlgorithm(), 0);\n+        var kp2 = generateKeyPair(s.getAlgorithm(), 0);\n+        Asserts.assertEqualsByteArray(\n+                kp1.getPrivate().getEncoded(), kp2.getPrivate().getEncoded());\n+        Asserts.assertEqualsByteArray(\n+                kp1.getPublic().getEncoded(), kp2.getPublic().getEncoded());\n+        hash = Objects.hash(hash,\n+                Arrays.hashCode(kp1.getPrivate().getEncoded()),\n+                Arrays.hashCode(kp1.getPublic().getEncoded()));\n+        System.out.println(\"    Passed\");\n+    }\n+\n+    static KeyPair generateKeyPair(String alg, int offset) throws Exception {\n+        var g = KeyPairGenerator.getInstance(alg);\n+        var size = switch (g.getAlgorithm()) {\n+            case \"RSA\", \"RSASSA-PSS\", \"DSA\", \"DiffieHellman\" -> 1024;\n+            case \"EC\" -> 256;\n+            case \"EdDSA\", \"Ed25519\", \"XDH\", \"X25519\" -> 255;\n+            case \"Ed448\", \"X448\" -> 448;\n+            default -> throw new UnsupportedOperationException(alg);\n+        };\n+        g.initialize(size, new SeededSecureRandom(SEED + offset));\n+        return g.generateKeyPair();\n+    }\n+\n+    static void testKeyGenerator(Provider.Service s) throws Exception {\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + s.getAlgorithm());\n+        if (s.getAlgorithm().startsWith(\"SunTls\")) {\n+            System.out.println(\"    Ignored\");\n+            return;\n+        }\n+        var k1 = generateKey(s.getAlgorithm(), s.getProvider());\n+        var k2 = generateKey(s.getAlgorithm(), s.getProvider());\n+        Asserts.assertEqualsByteArray(k1.getEncoded(), k2.getEncoded());\n+        hash = Objects.hash(hash,\n+                Arrays.hashCode(k1.getEncoded()));\n+        System.out.println(\"    Passed\");\n+    }\n+\n+    static Key generateKey(String s, Provider p) throws Exception {\n+        if (s.startsWith(\"AES_\")) {\n+            var g = KeyGenerator.getInstance(\"AES\", p);\n+            g.init(Integer.parseInt(s.substring(4)), new SeededSecureRandom(SEED + 1));\n+            return g.generateKey();\n+        } if (s.startsWith(\"ChaCha\")) {\n+            var g = KeyGenerator.getInstance(\"ChaCha20\", p);\n+            g.init(new SeededSecureRandom(SEED + 2));\n+            return g.generateKey();\n+        } if (s.equals(\"RSA\")) {\n+            return generateKeyPair(\"RSA\", 3).getPublic();\n+        } else {\n+            var g = KeyGenerator.getInstance(s, p);\n+            g.init(new SeededSecureRandom(SEED + 4));\n+            return g.generateKey();\n+        }\n+    }\n+\n+    static void testKEM(Provider.Service s) throws Exception {\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + s.getAlgorithm());\n+        String keyAlg = getKeyAlgFromKEM(s.getAlgorithm());\n+        var kp = generateKeyPair(keyAlg, 10);\n+        var kem = KEM.getInstance(s.getAlgorithm(), s.getProvider());\n+        var e1 = kem.newEncapsulator(kp.getPublic(), null, new SeededSecureRandom(SEED));\n+        var enc1 = e1.encapsulate();\n+        var e2 = kem.newEncapsulator(kp.getPublic(), null, new SeededSecureRandom(SEED));\n+        var enc2 = e2.encapsulate();\n+        Asserts.assertEqualsByteArray(enc1.encapsulation(), enc2.encapsulation());\n+        Asserts.assertEqualsByteArray(enc1.key().getEncoded(), enc2.key().getEncoded());\n+        hash = Objects.hash(hash, Arrays.hashCode(enc1.encapsulation()),\n+                Arrays.hashCode(enc1.key().getEncoded()));\n+        System.out.println(\"    Passed\");\n+    }\n+\n+    static void testKeyAgreement(Provider.Service s) throws Exception {\n+        System.out.println(s.getProvider().getName()\n+                + \" \" + s.getType() + \".\" + s.getAlgorithm());\n+        String keyAlg = getKeyAlgFromKEM(s.getAlgorithm());\n+        var kpS = generateKeyPair(keyAlg, 11);\n+        var kpR = generateKeyPair(keyAlg, 12);\n+        var ka = KeyAgreement.getInstance(s.getAlgorithm(), s.getProvider());\n+        ka.init(kpS.getPrivate(), new SeededSecureRandom(SEED));\n+        ka.doPhase(kpR.getPublic(), true);\n+        var sc1 = ka.generateSecret();\n+        ka.init(kpS.getPrivate(), new SeededSecureRandom(SEED));\n+        ka.doPhase(kpR.getPublic(), true);\n+        var sc2 = ka.generateSecret();\n+\n+        Asserts.assertEqualsByteArray(sc1, sc2);\n+        hash = Objects.hash(hash, Arrays.hashCode(sc1));\n+        System.out.println(\"    Passed\");\n+    }\n+\n+    static String getKeyAlgFromKEM(String algorithm) {\n+        return switch (algorithm) {\n+            case \"DHKEM\" -> \"X25519\";\n+            case \"ECDH\" -> \"EC\";\n+            default -> algorithm;\n+        };\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/provider\/all\/Deterministic.java","additions":290,"deletions":0,"binary":false,"changes":290,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-            if (!expectedExMsg.equals(she.getMessage())) {\n+            if (!she.getMessage().endsWith(expectedExMsg)) {\n@@ -80,1 +80,1 @@\n-            if (!expectedExMsg.equals(she.getMessage())) {\n+            if (!she.getMessage().endsWith(expectedExMsg)) {\n","filename":"test\/jdk\/sun\/security\/ssl\/DHKeyExchange\/LegacyDHEKeyExchange.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (C) 2021, 2024 THL A29 Limited, a Tencent company. All rights reserved.\n@@ -125,1 +126,1 @@\n-            if (EXPECT_FAIL && e.getMessage().equals(\n+            if (EXPECT_FAIL && e.getMessage().endsWith(\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/SigAlgosExtTestWithTLS12.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +82,1 @@\n-            if (expectFail && e.getMessage().equals(\n+            if (expectFail && e.getMessage().endsWith(\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/SigAlgosExtTestWithTLS13.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-     * method to return true and allow any flags.\n+     * method to return true or false and allow or reject any flags.\n@@ -661,2 +661,3 @@\n-        if (System.getenv(\"TEST_VM_FLAGLESS\") != null) {\n-            return \"\" + result;\n+        String flagless = System.getenv(\"TEST_VM_FLAGLESS\");\n+        if (flagless != null) {\n+            return \"\" + \"true\".equalsIgnoreCase(flagless);\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+tools\/javac\/patterns\/Exhaustiveness.java \t\t\t\t\t8326616    generic-all    intermittently timeout\n","filename":"test\/langtools\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -437,1 +437,1 @@\n-                    earch in documentation\" autocomplete=\"off\" autocapitalize=\"off\">\n+                    earch in documentation\" autocomplete=\"off\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearch\/TestSearch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-                    earch in documentation\" autocomplete=\"off\" autocapitalize=\"off\">\n+                    earch in documentation\" autocomplete=\"off\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSpecTag\/TestSpecTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- *      8182765 8196202 8202626 8261976\n+ *      8182765 8196202 8202626 8261976 8323698\n@@ -29,1 +29,1 @@\n- * @library ..\/..\/lib\n+ * @library \/tools\/lib ..\/..\/lib\n@@ -36,0 +36,5 @@\n+import toolbox.ToolBox;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -44,0 +49,2 @@\n+    private final ToolBox tb = new ToolBox();\n+\n@@ -194,0 +201,79 @@\n+\n+    @Test\n+    public void testSuperclassAndInterfaceTypeArgument(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        Files.createDirectories(src);\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    public class One {}\n+                    \"\"\",\n+                \"\"\"\n+                    import java.util.*;\n+                    public class Two extends ArrayList<One> implements Comparator<One> {\n+                    }\n+                    \"\"\",\n+                \"\"\"\n+                    import java.util.*;\n+                    public interface Three extends Comparator<One> {\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\n+                \"-use\",\n+                \"-d\", base.resolve(\"out\").toString(),\n+                src.resolve(\"One.java\").toString(),\n+                src.resolve(\"Two.java\").toString(),\n+                src.resolve(\"Three.java\").toString()\n+        );\n+        checkExit(Exit.OK);\n+\n+        checkOrder(\"class-use\/One.html\",\n+                \"\"\"\n+                    <div class=\"caption\"><span>Subclasses with type arguments of \\\n+                    type <a href=\"..\/One.html\" title=\"class in Unnamed Package\">One<\/a> \\\n+                    in <a href=\"..\/package-summary.html\">Unnamed Package<\/a><\/span><\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"summary-table three-column-summary\">\n+                    <div class=\"table-header col-first\">Modifier and Type<\/div>\n+                    <div class=\"table-header col-second\">Class<\/div>\n+                    <div class=\"table-header col-last\">Description<\/div>\n+                    <div class=\"col-first even-row-color\"><code>class&nbsp;<\/code><\/div>\n+                    <div class=\"col-second even-row-color\"><code><a href=\"..\/Two.html\" class=\"type-name-link\" \\\n+                    title=\"class in Unnamed Package\">Two<\/a><\/code><\/div>\n+                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"caption\"><span>Subinterfaces with type arguments of \\\n+                    type <a href=\"..\/One.html\" title=\"class in Unnamed Package\">One<\/a> \\\n+                    in <a href=\"..\/package-summary.html\">Unnamed Package<\/a><\/span><\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"summary-table three-column-summary\">\n+                    <div class=\"table-header col-first\">Modifier and Type<\/div>\n+                    <div class=\"table-header col-second\">Interface<\/div>\n+                    <div class=\"table-header col-last\">Description<\/div>\n+                    <div class=\"col-first even-row-color\"><code>interface&nbsp;<\/code><\/div>\n+                    <div class=\"col-second even-row-color\"><code><a href=\"..\/Three.html\" class=\"type-name-link\" title=\"interface in Unnamed Package\">Three<\/a><\/code><\/div>\n+                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"caption\"><span>Classes in <a href=\"..\/package-summary.html\">\\\n+                    Unnamed Package<\/a> that implement interfaces with type arguments of type \\\n+                    <a href=\"..\/One.html\" title=\"class in Unnamed Package\">One<\/a><\/span><\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"summary-table three-column-summary\">\n+                    <div class=\"table-header col-first\">Modifier and Type<\/div>\n+                    <div class=\"table-header col-second\">Class<\/div>\n+                    <div class=\"table-header col-last\">Description<\/div>\n+                    <div class=\"col-first even-row-color\"><code>class&nbsp;<\/code><\/div>\n+                    <div class=\"col-second even-row-color\"><code><a href=\"..\/Two.html\" class=\"type-name-link\" \\\n+                    title=\"class in Unnamed Package\">Two<\/a><\/code><\/div>\n+                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                    <\/div>\n+                    \"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testUseOption\/TestUseOption.java","additions":89,"deletions":3,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8262891 8268871 8274363 8281100 8294670 8311038 8311815\n+ * @bug 8262891 8268871 8274363 8281100 8294670 8311038 8311815 8325215\n@@ -1995,0 +1995,80 @@\n+               }\n+               \"\"\");\n+    }\n+\n+    @Test \/\/JDK-8325215:\n+    public void testTooGenericPatternInRecord(Path base) throws Exception {\n+        doTest(base,\n+               new String[0],\n+               \"\"\"\n+               package test;\n+               public class Test {\n+                   sealed interface A permits T, U {}\n+                   sealed interface B permits V, W {}\n+\n+                   static final class T implements A { public T() {} }\n+                   static final class U implements A { public U() {} }\n+\n+                   static final class V implements B { public V() {} }\n+                   static final class W implements B { public W() {} }\n+\n+                   final static record R(A a, B b) { }\n+\n+                   static int r(R r) {\n+                      return switch (r) {\n+                          case R(A a, V b) -> 1; \/\/ Any A with specific B\n+                          case R(T a, B b) -> 2; \/\/ Specific A with any B\n+                          case R(U a, W b) -> 3; \/\/ Specific A with specific B\n+                      };\n+                   }\n+               }\n+               \"\"\");\n+        doTest(base,\n+               new String[0],\n+               \"\"\"\n+               package test;\n+               public class Test {\n+                   sealed interface A permits T, U {}\n+                   sealed interface B permits V, W {}\n+\n+                   static final class T implements A { public T() {} }\n+                   static final class U implements A { public U() {} }\n+\n+                   static final class V implements B { public V() {} }\n+                   static final class W implements B { public W() {} }\n+\n+                   final static record R(B b, A a) { }\n+\n+                   static int r(R r) {\n+                      return switch (r) {\n+                          case R(V b, A a) -> 1; \/\/ Any A with specific B\n+                          case R(B b, T a) -> 2; \/\/ Specific A with any B\n+                          case R(W b, U a) -> 3; \/\/ Specific A with specific B\n+                      };\n+                   }\n+               }\n+               \"\"\");\n+        doTest(base,\n+               new String[0],\n+               \"\"\"\n+               package test;\n+               public class Test {\n+                   sealed interface A permits T, U {}\n+                   sealed interface B permits V, W {}\n+\n+                   static final class T implements A { public T() {} }\n+                   static final class U implements A { public U() {} }\n+\n+                   static final class V implements B { public V() {} }\n+                   static final class W implements B { public W() {} }\n+\n+                   final static record X(B b) { }\n+                   final static record R(A a, X x) { }\n+\n+                   static int r(R r) {\n+                      return switch (r) {\n+                          case R(A a, X(V b)) -> 1; \/\/ Any A with specific B\n+                          case R(T a, X(B b)) -> 2; \/\/ Specific A with any B\n+                          case R(U a, X(W b)) -> 3; \/\/ Specific A with specific B\n+                      };\n+                   }\n","filename":"test\/langtools\/tools\/javac\/patterns\/Exhaustiveness.java","additions":81,"deletions":1,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8291769\n+ * @bug 8291769 8326129\n@@ -34,1 +34,1 @@\n- * @build toolbox.ToolBox toolbox.JavacTask\n+ * @build toolbox.ToolBox toolbox.JavacTask toolbox.JavaTask\n@@ -51,0 +51,1 @@\n+import java.io.File;\n@@ -59,0 +60,1 @@\n+import toolbox.JavaTask;\n@@ -191,0 +193,32 @@\n+    @Test \/\/JDK-8326129\n+    public void testRunWithNull(Path base) throws Exception {\n+        doRunTest(base,\n+                  new String[]{\"\"\"\n+                               package lib;\n+                               public record Box(Object o) {}\n+                               \"\"\"},\n+                  \"\"\"\n+                  import lib.*;\n+                  public class Test {\n+                      public static void main(String... args) {\n+                          System.err.println(new Test().test(new Box(null)));\n+                      }\n+                      private int test(Box b) {\n+                          return switch (b) {\n+                              case Box(Integer i) -> 0;\n+                              case Box(Object o) when check(o) -> 1;\n+                              case Box(Object o) -> 2;\n+                          };\n+                      }\n+                      private static int c;\n+                      private boolean check(Object o) {\n+                          System.err.println(\"check: \" + o);\n+                          if (c++ > 10) throw new IllegalStateException();\n+                          return o != null;\n+                      }\n+                  }\n+                  \"\"\",\n+                  \"check: null\",\n+                  \"2\");\n+    }\n+\n@@ -325,0 +359,47 @@\n+\n+    private void doRunTest(Path base, String[] libraryCode, String testCode,\n+                           String... expectedOutput) throws IOException {\n+        Path current = base.resolve(\".\");\n+        Path libClasses = current.resolve(\"libClasses\");\n+\n+        Files.createDirectories(libClasses);\n+\n+        if (libraryCode.length != 0) {\n+            Path libSrc = current.resolve(\"lib-src\");\n+\n+            for (String code : libraryCode) {\n+                tb.writeJavaFiles(libSrc, code);\n+            }\n+\n+            new JavacTask(tb)\n+                    .outdir(libClasses)\n+                    .files(tb.findJavaFiles(libSrc))\n+                    .run();\n+        }\n+\n+        Path src = current.resolve(\"src\");\n+        tb.writeJavaFiles(src, testCode);\n+\n+        Path classes = current.resolve(\"classes\");\n+\n+        Files.createDirectories(classes);\n+\n+        new JavacTask(tb)\n+            .options(\"-Xlint:-preview\",\n+                     \"--class-path\", libClasses.toString())\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run()\n+            .writeAll();\n+\n+        List<String> log = new JavaTask(tb)\n+            .classpath(libClasses.toString() + File.pathSeparatorChar + classes.toString())\n+            .classArgs(\"Test\")\n+            .run()\n+            .getOutputLines(Task.OutputKind.STDERR);\n+\n+        if (!List.of(expectedOutput).equals(log)) {\n+            throw new AssertionError(\"Expected: \" + expectedOutput +\n+                                     \"but got: \" + log);\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/patterns\/TranslationTest.java","additions":83,"deletions":2,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+import jdk.test.lib.Asserts;\n+\n@@ -25,0 +27,2 @@\n+import java.util.Arrays;\n+import java.util.HexFormat;\n@@ -52,0 +56,1 @@\n+        testEqualsByteArray();\n@@ -93,0 +98,20 @@\n+    private static void testEqualsByteArray() throws Exception {\n+        byte[] b1 = new byte[1];\n+        byte[] b11 = new byte[1];\n+        byte[] b2 = new byte[2];\n+\n+        expectPass(Assertion.EQBA, b1, b1);\n+        expectPass(Assertion.EQBA, b1, b11);\n+        expectPass(Assertion.EQBA, (byte[])null, (byte[])null);\n+        expectPass(Assertion.NEQBA, b1, b2);\n+        expectPass(Assertion.NEQBA, b1, (byte[])null);\n+        expectPass(Assertion.NEQBA, (byte[])null, b1);\n+\n+        expectFail(Assertion.EQBA, b1, b2);\n+        expectFail(Assertion.EQBA, (byte[])null, b1);\n+        expectFail(Assertion.EQBA, b1, (byte[])null);\n+        expectFail(Assertion.NEQBA, b1, b1);\n+        expectFail(Assertion.NEQBA, b1, b11);\n+        expectFail(Assertion.NEQBA, (byte[])null, (byte[])null);\n+    }\n+\n@@ -194,0 +219,37 @@\n+    private static void expectPass(Assertion assertion, byte[] b1, byte[] b2)\n+            throws Exception {\n+        if (assertion == Assertion.EQBA) {\n+            String msg = \"Expected \" + Assertion.asString(\"assertEqualsByteArray\",\n+                    Arrays.toString(b1), Arrays.toString(b2)) + \" to pass\";\n+            Asserts.assertEqualsByteArray(b1, b2, msg);\n+        } else {\n+            String msg = \"Expected \" + Assertion.asString(\"assertNotEqualsByteArray\",\n+                    Arrays.toString(b1), Arrays.toString(b2)) + \" to pass\";\n+            Asserts.assertNotEqualsByteArray(b1, b2, msg);\n+        }\n+    }\n+\n+    private static void expectFail(Assertion assertion, byte[] b1, byte[] b2)\n+            throws Exception {\n+        if (assertion == Assertion.EQBA) {\n+            try {\n+                Asserts.assertEqualsByteArray(b1, b2);\n+            } catch (RuntimeException e) {\n+                return;\n+            }\n+            throw new Exception(\"Expected \"\n+                    + Assertion.asString(\"assertEqualsByteArray\",\n+                    Arrays.toString(b1), Arrays.toString(b2))\n+                    + \" to throw a RuntimeException\");\n+        } else {\n+            try {\n+                Asserts.assertNotEqualsByteArray(b1, b2);\n+            } catch (RuntimeException e) {\n+                return;\n+            }\n+            throw new Exception(\"Expected \"\n+                    + Assertion.asString(\"assertNotEqualsByteArray\",\n+                    Arrays.toString(b1), Arrays.toString(b2))\n+                    + \" to throw a RuntimeException\");\n+        }\n+    }\n@@ -197,1 +259,1 @@\n-    LT, LTE, EQ, GTE, GT, NE, NULL, NOTNULL, FALSE, TRUE;\n+    LT, LTE, EQ, EQBA, NEQBA, GTE, GT, NE, NULL, NOTNULL, FALSE, TRUE;\n@@ -265,1 +327,1 @@\n-    private static String asString(String assertion, Object ... args) {\n+    public static String asString(String assertion, Object ... args) {\n","filename":"test\/lib-test\/jdk\/test\/lib\/AssertsTest.java","additions":65,"deletions":3,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.test.lib.security;\n+\n+import jdk.test.lib.Asserts;\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib\n+ * @run main\/othervm jdk.test.lib.security.SeededSecureRandomTest\n+ *\/\n+public class SeededSecureRandomTest {\n+\n+    private static final String PROP = \"secure.random.seed\";\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            System.clearProperty(PROP);\n+            Asserts.assertNE(get(), get()); \/\/ random seed (different)\n+            Asserts.assertEQ(get(1L), get(1L)); \/\/ same seed\n+            Asserts.assertEQ(get(10L), get(10L)); \/\/ same seed\n+            Asserts.assertNE(get(1L), get(10L)); \/\/ different seed\n+\n+            System.setProperty(PROP, \"10\");\n+            Asserts.assertEQ(get(), get()); \/\/ seed set by system property\n+            Asserts.assertNE(get(), get(1L)); \/\/ seed set not system property\n+            Asserts.assertEQ(get(), get(10L)); \/\/ seed set same as system property\n+            Asserts.assertEQ(get(1L), get(1L)); \/\/ same seed\n+            Asserts.assertEQ(get(10L), get(10L)); \/\/ same seed\n+            Asserts.assertNE(get(1L), get(10L)); \/\/ different seed\n+        } finally {\n+            System.clearProperty(PROP);\n+        }\n+    }\n+\n+    static int get() {\n+        return new SeededSecureRandom(SeededSecureRandom.seed()).nextInt();\n+    }\n+\n+    static int get(long seed) {\n+        return new SeededSecureRandom(seed).nextInt();\n+    }\n+}\n","filename":"test\/lib-test\/jdk\/test\/lib\/security\/SeededSecureRandomTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.util.Arrays;\n+import java.util.HexFormat;\n@@ -202,4 +204,1 @@\n-            msg = Objects.toString(msg, \"assertEquals\")\n-                    + \": expected \" + Objects.toString(lhs)\n-                    + \" to equal \" + Objects.toString(rhs);\n-            fail(msg);\n+            fail((msg == null ? \"assertEquals\" : msg) + \" expected: \" + lhs + \" but was: \" + rhs);\n@@ -237,0 +236,58 @@\n+    \/**\n+     * Asserts that {@code lhs} is the same byte array as {@code rhs}.\n+     *\n+     * @param lhs The left hand side of the comparison.\n+     * @param rhs The right hand side of the comparison.\n+     * @throws RuntimeException if the assertion is not true.\n+     * @see #assertEqualsByteArray(byte[], byte[], String)\n+     *\/\n+    public static void assertEqualsByteArray(byte[] lhs, byte[] rhs) {\n+        assertEqualsByteArray(lhs, rhs, null);\n+    }\n+\n+    \/**\n+     * Asserts that {@code lhs} is not the same byte array as {@code rhs}.\n+     *\n+     * @param lhs The left hand side of the comparison.\n+     * @param rhs The right hand side of the comparison.\n+     * @throws RuntimeException if the assertion is not true.\n+     * @see #assertNotEqualsByteArray(byte[], byte[], String)\n+     *\/\n+    public static void assertNotEqualsByteArray(byte[] lhs, byte[] rhs) {\n+        assertNotEqualsByteArray(lhs, rhs, null);\n+    }\n+\n+    \/**\n+     * Asserts that {@code lhs} is the same byte array as {@code rhs}.\n+     *\n+     * @param lhs The left hand side of the comparison.\n+     * @param rhs The right hand side of the comparison.\n+     * @param msg A description of the assumption; {@code null} for a default message.\n+     * @throws RuntimeException if the assertion is not true.\n+     *\/\n+    public static void assertEqualsByteArray(byte[] lhs, byte[] rhs, String msg) {\n+        if (!Arrays.equals(lhs, rhs)) {\n+            msg = Objects.toString(msg, \"assertEqualsByteArray\")\n+                    + \": expected \" + HexFormat.of().formatHex(lhs)\n+                    + \" to equal \" + HexFormat.of().formatHex(rhs);\n+            fail(msg);\n+        }\n+    }\n+\n+    \/**\n+     * Asserts that {@code lhs} is not the same byte array as {@code rhs}.\n+     *\n+     * @param lhs The left hand side of the comparison.\n+     * @param rhs The right hand side of the comparison.\n+     * @param msg A description of the assumption; {@code null} for a default message.\n+     * @throws RuntimeException if the assertion is not true.\n+     *\/\n+    public static void assertNotEqualsByteArray(byte[] lhs, byte[] rhs, String msg) {\n+        if (Arrays.equals(lhs, rhs)) {\n+            msg = Objects.toString(msg, \"assertNotEqualsByteArray\")\n+                    + \": expected \" + HexFormat.of().formatHex(lhs)\n+                    + \" to not equal \" + HexFormat.of().formatHex(rhs);\n+            fail(msg);\n+        }\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Asserts.java","additions":62,"deletions":5,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,2 @@\n-#ifndef JVMTI_COMMON_H\n-#define JVMTI_COMMON_H\n+#ifndef JVMTI_COMMON_HPP\n+#define JVMTI_COMMON_HPP\n@@ -63,2 +63,2 @@\n-static jvmtiExtensionFunction GetVirtualThread_func = NULL;\n-static jvmtiExtensionFunction GetCarrierThread_func = NULL;\n+static jvmtiExtensionFunction GetVirtualThread_func = nullptr;\n+static jvmtiExtensionFunction GetCarrierThread_func = nullptr;\n@@ -206,3 +206,3 @@\n-  jclass klass = NULL;\n-  char*  cname = NULL;\n-  char*  result = NULL;\n+  jclass klass = nullptr;\n+  char*  cname = nullptr;\n+  char*  result = nullptr;\n@@ -214,1 +214,1 @@\n-  err = jvmti->GetClassSignature(klass, &cname, NULL);\n+  err = jvmti->GetClassSignature(klass, &cname, nullptr);\n@@ -231,3 +231,3 @@\n-  char*  cname = NULL;\n-  char*  mname = NULL;\n-  char*  msign = NULL;\n+  char*  cname = nullptr;\n+  char*  mname = nullptr;\n+  char*  msign = nullptr;\n@@ -238,1 +238,1 @@\n-  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  err = jvmti->GetMethodName(method, &mname, &msign, nullptr);\n@@ -300,1 +300,1 @@\n-    return NULL; \/\/ VM or target thread completed its work\n+    return nullptr; \/\/ VM or target thread completed its work\n@@ -307,1 +307,1 @@\n-  if (tname == NULL) {\n+  if (tname == nullptr) {\n@@ -318,1 +318,1 @@\n-  char*  mname = NULL;\n+  char*  mname = nullptr;\n@@ -321,1 +321,1 @@\n-  err = jvmti->GetMethodName(method, &mname, NULL, NULL);\n+  err = jvmti->GetMethodName(method, &mname, nullptr, nullptr);\n@@ -329,1 +329,1 @@\n-  jclass *classes = NULL;\n+  jclass *classes = nullptr;\n@@ -338,1 +338,1 @@\n-    char* name = NULL;\n+    char* name = nullptr;\n@@ -341,1 +341,1 @@\n-    err = jvmti->GetClassSignature(klass, &name, NULL);\n+    err = jvmti->GetClassSignature(klass, &name, nullptr);\n@@ -350,1 +350,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -355,2 +355,2 @@\n-  jmethodID *methods = NULL;\n-  jmethodID method = NULL;\n+  jmethodID *methods = nullptr;\n+  jmethodID method = nullptr;\n@@ -365,1 +365,1 @@\n-    char* name = NULL;\n+    char* name = nullptr;\n@@ -369,1 +369,1 @@\n-    err = jvmti->GetMethodName(meth, &name, NULL, NULL);\n+    err = jvmti->GetMethodName(meth, &name, nullptr, nullptr);\n@@ -390,1 +390,1 @@\n-  jvmtiError err = jvmti->GetStackTrace(NULL, 0, MAX_FRAME_COUNT_PRINT_STACK_TRACE, frames, &count);\n+  jvmtiError err = jvmti->GetStackTrace(nullptr, 0, MAX_FRAME_COUNT_PRINT_STACK_TRACE, frames, &count);\n@@ -762,1 +762,1 @@\n-  jthread* threads = NULL;\n+  jthread* threads = nullptr;\n@@ -764,1 +764,1 @@\n-  jthread found_thread = NULL;\n+  jthread found_thread = nullptr;\n@@ -766,2 +766,2 @@\n-  if (name == NULL) {\n-    return NULL;\n+  if (name == nullptr) {\n+    return nullptr;\n@@ -774,1 +774,1 @@\n-    if (info.name != NULL && strcmp(name, info.name) == 0) {\n+    if (info.name != nullptr && strcmp(name, info.name) == 0) {\n@@ -796,1 +796,1 @@\n-  jvmtiExtensionFunctionInfo* extList = NULL;\n+  jvmtiExtensionFunctionInfo* extList = nullptr;\n@@ -802,1 +802,1 @@\n-    if (strstr(extList[i].id, (char*)fname) != NULL) {\n+    if (strstr(extList[i].id, (char*)fname) != nullptr) {\n@@ -806,1 +806,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -811,1 +811,1 @@\n-  if (GetVirtualThread_func == NULL) { \/\/ lazily initialize function pointer\n+  if (GetVirtualThread_func == nullptr) { \/\/ lazily initialize function pointer\n@@ -821,1 +821,1 @@\n-  if (GetCarrierThread_func == NULL) { \/\/ lazily initialize function pointer\n+  if (GetCarrierThread_func == nullptr) { \/\/ lazily initialize function pointer\n@@ -831,1 +831,1 @@\n-  jthread vthread = NULL;\n+  jthread vthread = nullptr;\n@@ -839,1 +839,1 @@\n-  jthread cthread = NULL;\n+  jthread cthread = nullptr;\n@@ -849,1 +849,1 @@\n-  jvmtiExtensionEventInfo* extList = NULL;\n+  jvmtiExtensionEventInfo* extList = nullptr;\n@@ -854,1 +854,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -857,1 +857,1 @@\n-    if (strstr(extList[i].id, (char*)ename) != NULL) {\n+    if (strstr(extList[i].id, (char*)ename) != nullptr) {\n@@ -861,1 +861,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -868,1 +868,1 @@\n-  if (info == NULL) {\n+  if (info == nullptr) {\n","filename":"test\/lib\/jdk\/test\/lib\/jvmti\/jvmti_common.hpp","additions":43,"deletions":43,"binary":false,"changes":86,"previous_filename":"test\/lib\/jdk\/test\/lib\/jvmti\/jvmti_common.h","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,2 @@\n-#ifndef JVMTI_THREAD_H\n-#define JVMTI_THREAD_H\n+#ifndef JVMTI_THREAD_HPP\n+#define JVMTI_THREAD_HPP\n@@ -58,2 +58,2 @@\n-static jvmtiEnv* agent_jvmti_env = NULL;\n-static JNIEnv* agent_jni_env = NULL;\n+static jvmtiEnv* agent_jvmti_env = nullptr;\n+static JNIEnv* agent_jni_env = nullptr;\n@@ -63,3 +63,3 @@\n-static jthread jvmti_agent_thread = NULL;\n-static jvmtiStartFunction agent_thread_proc = NULL;\n-static void* agent_thread_arg = NULL;\n+static jthread jvmti_agent_thread = nullptr;\n+static jvmtiStartFunction agent_thread_proc = nullptr;\n+static void* agent_thread_arg = nullptr;\n@@ -188,1 +188,1 @@\n-    jvmti_agent_thread = NULL;\n+    jvmti_agent_thread = nullptr;\n@@ -201,5 +201,5 @@\n-  jobject threadName = NULL;\n-  jclass threadClass = NULL;\n-  jmethodID threadCtor = NULL;\n-  jobject threadObject = NULL;\n-  jobject threadGlobalRef = NULL;\n+  jobject threadName = nullptr;\n+  jclass threadClass = nullptr;\n+  jmethodID threadCtor = nullptr;\n+  jobject threadObject = nullptr;\n+  jobject threadGlobalRef = nullptr;\n@@ -209,2 +209,2 @@\n-  if (threadClass == NULL) {\n-    return NULL;\n+  if (threadClass == nullptr) {\n+    return nullptr;\n@@ -214,2 +214,2 @@\n-  if (threadCtor == NULL) {\n-    return NULL;\n+  if (threadCtor == nullptr) {\n+    return nullptr;\n@@ -219,2 +219,2 @@\n-  if (threadName == NULL) {\n-    return NULL;\n+  if (threadName == nullptr) {\n+    return nullptr;\n@@ -224,2 +224,2 @@\n-  if (threadObject == NULL) {\n-    return NULL;\n+  if (threadObject == nullptr) {\n+    return nullptr;\n@@ -229,1 +229,1 @@\n-  if (threadGlobalRef == NULL) {\n+  if (threadGlobalRef == nullptr) {\n@@ -231,1 +231,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -239,1 +239,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -248,1 +248,1 @@\n-  if (thread == NULL) {\n+  if (thread == nullptr) {\n@@ -250,1 +250,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -268,1 +268,1 @@\n-    if (run_agent_thread(jni_env, jvmti_env) == NULL) {\n+    if (run_agent_thread(jni_env, jvmti_env) == nullptr) {\n","filename":"test\/lib\/jdk\/test\/lib\/jvmti\/jvmti_thread.hpp","additions":28,"deletions":28,"binary":false,"changes":56,"previous_filename":"test\/lib\/jdk\/test\/lib\/jvmti\/jvmti_thread.h","status":"renamed"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.test.lib.security;\n+\n+import java.security.SecureRandom;\n+import java.util.Random;\n+\n+\/**\n+ * A deterministic SecureRandom with a seed.\n+ * <p>\n+ * Users can provide the seed with the system property \"secure.random.seed\".\n+ * Otherwise, it's a random value. Usually, a test runs without this system\n+ * property and the random seed is printed out. When it fails, set the\n+ * system property to this recorded seed to reproduce the failure.\n+ *\/\n+public class SeededSecureRandom extends SecureRandom {\n+\n+    private final Random rnd;\n+\n+    public static long seed() {\n+        String value = System.getProperty(\"secure.random.seed\");\n+        long seed = value != null\n+                ? Long.parseLong(value)\n+                : new Random().nextLong();\n+        System.out.println(\"SeededSecureRandom: seed = \" + seed);\n+        return seed;\n+    }\n+\n+    public SeededSecureRandom(long seed) {\n+        rnd = new Random(seed);\n+    }\n+\n+    public static SeededSecureRandom one() {\n+        return new SeededSecureRandom(seed());\n+    }\n+\n+    @Override\n+    public void nextBytes(byte[] bytes) {\n+        rnd.nextBytes(bytes);\n+    }\n+\n+    @Override\n+    public byte[] generateSeed(int numBytes) {\n+        var out = new byte[numBytes];\n+        rnd.nextBytes(out);\n+        return out;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/security\/SeededSecureRandom.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef TEST_LIB_NATIVE_THREAD_H\n-#define TEST_LIB_NATIVE_THREAD_H\n-\n-\/\/ Header only library for using threads in tests\n-\n-#include <stdlib.h>\n-#include <stdio.h>\n-\n-#ifdef _WIN32\n-#include <windows.h>\n-#else\n-#include <unistd.h>\n-#include <pthread.h>\n-#endif\n-\n-extern \"C\" {\n-\n-typedef void(*PROCEDURE)(void*);\n-\n-struct Helper {\n-    PROCEDURE proc;\n-    void* context;\n-};\n-\n-static void fatal(const char* message, int code) {\n-    fputs(message, stderr);\n-    \/\/ exit the test with a non-zero exit code to avoid accidental false positives\n-    exit(code);\n-}\n-\n-\/\/ Adapt from the callback type the OS API expects to\n-\/\/ our OS-independent PROCEDURE type.\n-#ifdef _WIN32\n-DWORD WINAPI procedure(_In_ LPVOID ctxt) {\n-#else\n-void* procedure(void* ctxt) {\n-#endif\n-    Helper* helper = (Helper*)ctxt;\n-    helper->proc(helper->context);\n-    return 0;\n-}\n-\n-\/\/ Run 'proc' in a newly started thread, passing 'context' to it\n-\/\/ as an argument, and then join that thread.\n-void run_in_new_thread_and_join(PROCEDURE proc, void* context) {\n-    struct Helper helper;\n-    helper.proc = proc;\n-    helper.context = context;\n-#ifdef _WIN32\n-    HANDLE thread = CreateThread(NULL, 0, procedure, &helper, 0, NULL);\n-    if (thread == NULL) {\n-        fatal(\"failed to create thread\", GetLastError());\n-    }\n-    if (WaitForSingleObject(thread, INFINITE) != WAIT_OBJECT_0) {\n-        \/\/ Should be WAIT_FAILED, since this is not a mutex, and\n-        \/\/ we set no timeout.\n-        fatal(\"failed to join thread\", GetLastError());\n-    }\n-#else\n-    pthread_t thread;\n-    pthread_attr_t attr;\n-    pthread_attr_init(&attr);\n-    size_t stack_size = 0x100000;\n-    pthread_attr_setstacksize(&attr, stack_size);\n-    int result = pthread_create(&thread, &attr, procedure, &helper);\n-    if (result != 0) {\n-        fatal(\"failed to create thread\", result);\n-    }\n-    pthread_attr_destroy(&attr);\n-    result = pthread_join(thread, NULL);\n-    if (result != 0) {\n-        fatal(\"failed to join thread\", result);\n-    }\n-#endif\n-}\n-\n-}\n-\n-#endif \/\/ TEST_LIB_NATIVE_THREAD_H\n","filename":"test\/lib\/native\/testlib_threads.h","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef TEST_LIB_NATIVE_THREAD_HPP\n+#define TEST_LIB_NATIVE_THREAD_HPP\n+\n+\/\/ Header only library for using threads in tests\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+#ifdef _WIN32\n+#include <windows.h>\n+#else\n+#include <unistd.h>\n+#include <pthread.h>\n+#endif\n+\n+extern \"C\" {\n+\n+typedef void(*PROCEDURE)(void*);\n+\n+struct Helper {\n+    PROCEDURE proc;\n+    void* context;\n+};\n+\n+static void fatal(const char* message, int code) {\n+    fputs(message, stderr);\n+    \/\/ exit the test with a non-zero exit code to avoid accidental false positives\n+    exit(code);\n+}\n+\n+\/\/ Adapt from the callback type the OS API expects to\n+\/\/ our OS-independent PROCEDURE type.\n+#ifdef _WIN32\n+DWORD WINAPI procedure(_In_ LPVOID ctxt) {\n+#else\n+void* procedure(void* ctxt) {\n+#endif\n+    Helper* helper = (Helper*)ctxt;\n+    helper->proc(helper->context);\n+    return 0;\n+}\n+\n+\/\/ Run 'proc' in a newly started thread, passing 'context' to it\n+\/\/ as an argument, and then join that thread.\n+void run_in_new_thread_and_join(PROCEDURE proc, void* context) {\n+    struct Helper helper;\n+    helper.proc = proc;\n+    helper.context = context;\n+#ifdef _WIN32\n+    HANDLE thread = CreateThread(nullptr, 0, procedure, &helper, 0, nullptr);\n+    if (thread == nullptr) {\n+        fatal(\"failed to create thread\", GetLastError());\n+    }\n+    if (WaitForSingleObject(thread, INFINITE) != WAIT_OBJECT_0) {\n+        \/\/ Should be WAIT_FAILED, since this is not a mutex, and\n+        \/\/ we set no timeout.\n+        fatal(\"failed to join thread\", GetLastError());\n+    }\n+#else\n+    pthread_t thread;\n+    pthread_attr_t attr;\n+    pthread_attr_init(&attr);\n+    size_t stack_size = 0x100000;\n+    pthread_attr_setstacksize(&attr, stack_size);\n+    int result = pthread_create(&thread, &attr, procedure, &helper);\n+    if (result != 0) {\n+        fatal(\"failed to create thread\", result);\n+    }\n+    pthread_attr_destroy(&attr);\n+    result = pthread_join(thread, nullptr);\n+    if (result != 0) {\n+        fatal(\"failed to join thread\", result);\n+    }\n+#endif\n+}\n+\n+}\n+\n+#endif \/\/ TEST_LIB_NATIVE_THREAD_HPP\n","filename":"test\/lib\/native\/testlib_threads.hpp","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2020, 2022, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2020, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +31,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -31,0 +33,2 @@\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n@@ -41,1 +45,1 @@\n-    private final int size = 1024;\n+    private static final int SIZE = 1024;\n@@ -44,0 +48,10 @@\n+    private ByteArrayInputStream utfDataAsciiMixed;\n+    private ByteArrayInputStream utfDataMixed;\n+\n+    private ByteArrayInputStream utfDataAsciiSmall;\n+    private ByteArrayInputStream utfDataSmall;\n+\n+    private ByteArrayInputStream utfDataAsciiLarge;\n+    private ByteArrayInputStream utfDataLarge;\n+\n+    private static final int REPEATS = 20;\n@@ -46,2 +60,2 @@\n-    public void setup() {\n-        byte[] bytes = new byte[size];\n+    public void setup() throws IOException, ClassNotFoundException, NoSuchMethodException, IllegalAccessException {\n+        byte[] bytes = new byte[SIZE];\n@@ -50,0 +64,53 @@\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        DataOutputStream dataOut = new DataOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"small\");\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataAsciiMixed = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new DataOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigger use of simd intrinsics\");\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataAsciiLarge = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new DataOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"smol\");\n+            dataOut.writeUTF(\"smally\");\n+        }\n+        dataOut.flush();\n+        utfDataAsciiSmall = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new DataOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"sm\\u00FFll\");\n+            dataOut.writeUTF(\"slightly longer string th\\u01F3t is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataMixed = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new DataOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"sm\\u00F3l\");\n+            dataOut.writeUTF(\"small\\u0132\");\n+        }\n+        dataOut.flush();\n+        utfDataSmall = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new DataOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigg\\u0131r use of simd intrinsics\");\n+            dataOut.writeUTF(\"slightly longer string th\\u0131t is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataLarge = new ByteArrayInputStream(baos.toByteArray());\n@@ -56,1 +123,1 @@\n-        for (int i = 0; i < size \/ 2; i++) {\n+        for (int i = 0; i < SIZE \/ 2; i++) {\n@@ -65,1 +132,1 @@\n-        for (int i = 0; i < size \/ 4; i++) {\n+        for (int i = 0; i < SIZE \/ 4; i++) {\n@@ -69,0 +136,60 @@\n+\n+    @Benchmark\n+    public void readUTFAsciiMixed(Blackhole bh) throws Exception {\n+        utfDataAsciiMixed.reset();\n+        DataInputStream dis = new DataInputStream(utfDataAsciiMixed);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(dis.readUTF());\n+            bh.consume(dis.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFAsciiSmall(Blackhole bh) throws Exception {\n+        utfDataAsciiSmall.reset();\n+        DataInputStream dis = new DataInputStream(utfDataAsciiSmall);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(dis.readUTF());\n+            bh.consume(dis.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFAsciiLarge(Blackhole bh) throws Exception {\n+        utfDataAsciiLarge.reset();\n+        DataInputStream dis = new DataInputStream(utfDataAsciiLarge);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(dis.readUTF());\n+            bh.consume(dis.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFMixed(Blackhole bh) throws Exception {\n+        utfDataMixed.reset();\n+        DataInputStream dis = new DataInputStream(utfDataMixed);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(dis.readUTF());\n+            bh.consume(dis.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFSmall(Blackhole bh) throws Exception {\n+        utfDataSmall.reset();\n+        DataInputStream dis = new DataInputStream(utfDataSmall);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(dis.readUTF());\n+            bh.consume(dis.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFLarge(Blackhole bh) throws Exception {\n+        utfDataLarge.reset();\n+        DataInputStream dis = new DataInputStream(utfDataLarge);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(dis.readUTF());\n+            bh.consume(dis.readUTF());\n+        }\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/DataInputStreamTest.java","additions":133,"deletions":6,"binary":false,"changes":139,"status":"modified"},{"patch":"@@ -0,0 +1,186 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.java.io;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Level;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@Fork(value = 3, warmups = 0)\n+@Measurement(iterations = 5, time = 1)\n+@Warmup(iterations = 2, time = 2)\n+@State(Scope.Thread)\n+public class ObjectInputStreamTest {\n+    private ByteArrayInputStream utfDataAsciiMixed;\n+    private ByteArrayInputStream utfDataMixed;\n+\n+    private ByteArrayInputStream utfDataAsciiSmall;\n+    private ByteArrayInputStream utfDataSmall;\n+\n+    private ByteArrayInputStream utfDataAsciiLarge;\n+    private ByteArrayInputStream utfDataLarge;\n+\n+    \/\/ Overhead of creating an ObjectInputStream is significant, need to increase the number of data elements\n+    \/\/ to balance work\n+    private static final int REPEATS = 20;\n+\n+\n+    @Setup(Level.Iteration)\n+    public void setup() throws IOException, ClassNotFoundException, NoSuchMethodException, IllegalAccessException {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        ObjectOutputStream dataOut = new ObjectOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"small\");\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataAsciiMixed = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new ObjectOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigger use of simd intrinsics\");\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataAsciiLarge = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new ObjectOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"smol\");\n+            dataOut.writeUTF(\"smally\");\n+        }\n+        dataOut.flush();\n+        utfDataAsciiSmall = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new ObjectOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"sm\\u00FFll\");\n+            dataOut.writeUTF(\"slightly longer string th\\u01F3t is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataMixed = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new ObjectOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"sm\\u00F3l\");\n+            dataOut.writeUTF(\"small\\u0132\");\n+        }\n+        dataOut.flush();\n+        utfDataSmall = new ByteArrayInputStream(baos.toByteArray());\n+\n+        baos = new ByteArrayOutputStream();\n+        dataOut = new ObjectOutputStream(baos);\n+        for (int i = 0; i < REPEATS; i++) {\n+            dataOut.writeUTF(\"slightly longer string that is more likely to trigg\\u0131r use of simd intrinsics\");\n+            dataOut.writeUTF(\"slightly longer string th\\u0131t is more likely to trigger use of simd intrinsics\");\n+        }\n+        dataOut.flush();\n+        utfDataLarge = new ByteArrayInputStream(baos.toByteArray());\n+    }\n+\n+    @Benchmark\n+    public void readUTFAsciiMixed(Blackhole bh) throws Exception {\n+        utfDataAsciiMixed.reset();\n+        ObjectInputStream ois = new ObjectInputStream(utfDataAsciiMixed);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(ois.readUTF());\n+            bh.consume(ois.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFAsciiSmall(Blackhole bh) throws Exception {\n+        utfDataAsciiSmall.reset();\n+        ObjectInputStream ois = new ObjectInputStream(utfDataAsciiSmall);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(ois.readUTF());\n+            bh.consume(ois.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFAsciiLarge(Blackhole bh) throws Exception {\n+        utfDataAsciiLarge.reset();\n+        ObjectInputStream ois = new ObjectInputStream(utfDataAsciiLarge);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(ois.readUTF());\n+            bh.consume(ois.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFMixed(Blackhole bh) throws Exception {\n+        utfDataMixed.reset();\n+        ObjectInputStream ois = new ObjectInputStream(utfDataMixed);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(ois.readUTF());\n+            bh.consume(ois.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFSmall(Blackhole bh) throws Exception {\n+        utfDataSmall.reset();\n+        ObjectInputStream ois = new ObjectInputStream(utfDataSmall);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(ois.readUTF());\n+            bh.consume(ois.readUTF());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readUTFLarge(Blackhole bh) throws Exception {\n+        utfDataLarge.reset();\n+        ObjectInputStream ois = new ObjectInputStream(utfDataLarge);\n+        for (int i = 0; i < REPEATS; i++) {\n+            bh.consume(ois.readUTF());\n+            bh.consume(ois.readUTF());\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/ObjectInputStreamTest.java","additions":186,"deletions":0,"binary":false,"changes":186,"status":"added"}]}