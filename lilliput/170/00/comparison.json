{"files":[{"patch":"@@ -5341,0 +5341,4 @@\n+    \/\/ When the base is not aligned to 8 bytes, then we let\n+    \/\/ the compare loop include the array length, and skip\n+    \/\/ the explicit comparison of length.\n+    bool is_8aligned = is_aligned(base_offset, BytesPerWord);\n@@ -5346,0 +5350,5 @@\n+    if (!is_8aligned) {\n+      \/\/ Increase loop counter by size of length field.\n+      addw(cnt1, cnt1, BytesPerInt \/ elem_size);\n+      addw(cnt2, cnt2, BytesPerInt \/ elem_size);\n+    }\n@@ -5350,1 +5359,5 @@\n-    ldr(tmp3, Address(pre(a1, base_offset)));\n+    if (is_8aligned) {\n+      ldr(tmp3, Address(pre(a1, base_offset)));\n+    } else {\n+      ldr(tmp3, Address(pre(a1, length_offset)));\n+    }\n@@ -5353,1 +5366,5 @@\n-    ldr(tmp4, Address(pre(a2, base_offset)));\n+    if (is_8aligned) {\n+      ldr(tmp4, Address(pre(a2, base_offset)));\n+    } else {\n+      ldr(tmp4, Address(pre(a2, length_offset)));\n+    }\n@@ -5355,2 +5372,4 @@\n-    cmp(cnt2, cnt1);\n-    br(NE, DONE);\n+    if (is_8aligned) {\n+      cmp(cnt2, cnt1);\n+      br(NE, DONE);\n+    }\n@@ -5388,1 +5407,5 @@\n-    ldr(tmp4, Address(pre(a2, base_offset)));\n+    if (is_8aligned) {\n+      ldr(tmp4, Address(pre(a2, base_offset)));\n+    } else {\n+      ldr(tmp4, Address(pre(a2, length_offset)));\n+    }\n@@ -5411,2 +5434,4 @@\n-    cmp(cnt2, cnt1);\n-    br(NE, DONE);\n+    if (is_8aligned) {\n+      cmp(cnt2, cnt1);\n+      br(NE, DONE);\n+    }\n@@ -5415,2 +5440,10 @@\n-    ldr(tmp3, Address(a1, base_offset));\n-    ldr(tmp4, Address(a2, base_offset));\n+    if (is_8aligned) {\n+      ldr(tmp3, Address(pre(a1, base_offset)));\n+    } else {\n+      ldr(tmp3, Address(pre(a1, length_offset)));\n+    }\n+    if (is_8aligned) {\n+      ldr(tmp4, Address(pre(a2, base_offset)));\n+    } else {\n+      ldr(tmp4, Address(pre(a2, length_offset)));\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":42,"deletions":9,"binary":false,"changes":51,"status":"modified"}]}