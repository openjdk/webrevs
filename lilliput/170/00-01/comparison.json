{"files":[{"patch":"@@ -5245,0 +5245,8 @@\n+  \/\/ When the base is not aligned to 8 bytes, then we let\n+  \/\/ the compare loop include the array length, and skip\n+  \/\/ the explicit comparison of length.\n+  bool is_8aligned = is_aligned(base_offset, BytesPerWord);\n+  assert(is_aligned(base_offset, BytesPerWord) || is_aligned(length_offset, BytesPerWord),\n+         \"base_offset or length_offset must be 8-byte aligned\");\n+  int start_offset = is_8aligned ? base_offset : length_offset;\n+  int extra_length = is_8aligned ? 0 : BytesPerInt \/ elem_size;\n@@ -5279,0 +5287,5 @@\n+    if (extra_length != 0) {\n+      \/\/ Increase loop counter by size of length field.\n+      addw(cnt1, cnt1, extra_length);\n+      addw(cnt2, cnt2, extra_length);\n+    }\n@@ -5281,2 +5294,2 @@\n-    lea(a1, Address(a1, base_offset));\n-    lea(a2, Address(a2, base_offset));\n+    lea(a1, Address(a1, start_offset));\n+    lea(a2, Address(a2, start_offset));\n@@ -5341,4 +5354,0 @@\n-    \/\/ When the base is not aligned to 8 bytes, then we let\n-    \/\/ the compare loop include the array length, and skip\n-    \/\/ the explicit comparison of length.\n-    bool is_8aligned = is_aligned(base_offset, BytesPerWord);\n@@ -5350,1 +5359,1 @@\n-    if (!is_8aligned) {\n+    if (extra_length != 0) {\n@@ -5352,2 +5361,2 @@\n-      addw(cnt1, cnt1, BytesPerInt \/ elem_size);\n-      addw(cnt2, cnt2, BytesPerInt \/ elem_size);\n+      addw(cnt1, cnt1, extra_length);\n+      addw(cnt2, cnt2, extra_length);\n@@ -5359,5 +5368,1 @@\n-    if (is_8aligned) {\n-      ldr(tmp3, Address(pre(a1, base_offset)));\n-    } else {\n-      ldr(tmp3, Address(pre(a1, length_offset)));\n-    }\n+    ldr(tmp3, Address(pre(a1, start_offset)));\n@@ -5366,5 +5371,1 @@\n-    if (is_8aligned) {\n-      ldr(tmp4, Address(pre(a2, base_offset)));\n-    } else {\n-      ldr(tmp4, Address(pre(a2, length_offset)));\n-    }\n+    ldr(tmp4, Address(pre(a2, start_offset)));\n@@ -5372,4 +5373,2 @@\n-    if (is_8aligned) {\n-      cmp(cnt2, cnt1);\n-      br(NE, DONE);\n-    }\n+    cmp(cnt2, cnt1);\n+    br(NE, DONE);\n@@ -5407,5 +5406,1 @@\n-    if (is_8aligned) {\n-      ldr(tmp4, Address(pre(a2, base_offset)));\n-    } else {\n-      ldr(tmp4, Address(pre(a2, length_offset)));\n-    }\n+    ldr(tmp4, Address(pre(a2, start_offset)));\n@@ -5434,4 +5429,2 @@\n-    if (is_8aligned) {\n-      cmp(cnt2, cnt1);\n-      br(NE, DONE);\n-    }\n+    cmp(cnt2, cnt1);\n+    br(NE, DONE);\n@@ -5440,10 +5433,2 @@\n-    if (is_8aligned) {\n-      ldr(tmp3, Address(pre(a1, base_offset)));\n-    } else {\n-      ldr(tmp3, Address(pre(a1, length_offset)));\n-    }\n-    if (is_8aligned) {\n-      ldr(tmp4, Address(pre(a2, base_offset)));\n-    } else {\n-      ldr(tmp4, Address(pre(a2, length_offset)));\n-    }\n+    ldr(tmp3, Address(pre(a1, start_offset)));\n+    ldr(tmp4, Address(pre(a2, start_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":27,"deletions":42,"binary":false,"changes":69,"status":"modified"}]}