{"files":[{"patch":"@@ -467,10 +467,1 @@\n-    ReservedSpace rs = MemoryReserver::reserve(CDSAccess::get_cached_code_size(), mtCode);\n-    if (!rs.is_reserved()) {\n-      set_failed();\n-      return;\n-    }\n-    if (!CDSAccess::map_cached_code(rs)) {\n-      set_failed();\n-      return;\n-    }\n-    _cached_code_directory = (CachedCodeDirectory*)rs.base();\n+    _cached_code_directory = (CachedCodeDirectory*)CodeCache::map_cached_code();\n","filename":"src\/hotspot\/share\/code\/SCCache.cpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -325,0 +325,3 @@\n+  const size_t cds_code_size = align_up(CDSAccess::get_cached_code_size(), min_size);\n+  cache_size += cds_code_size;\n+\n@@ -331,0 +334,6 @@\n+  if (cds_code_size > 0) {\n+    \/\/ FIXME: use CodeHeapInfo for this hack ...\n+    _cds_code_space = rs.partition(offset, cds_code_size);\n+    offset += cds_code_size;\n+  }\n+\n@@ -350,0 +359,9 @@\n+\n+void* CodeCache::map_cached_code() {\n+  if (_cds_code_space.size() > 0 && CDSAccess::map_cached_code(_cds_code_space)) {\n+    return _cds_code_space.base();\n+  } else {\n+    return nullptr;\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -151,0 +151,1 @@\n+  static void* map_cached_code();\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}