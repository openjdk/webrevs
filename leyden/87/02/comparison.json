{"files":[{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotConstantPoolResolver.hpp\"\n@@ -834,1 +835,9 @@\n-    Method* adapter = cpool->resolved_indy_entry_at(index)->method();\n+    ResolvedIndyEntry* indy_info = cpool->resolved_indy_entry_at(index);\n+    Method* adapter = indy_info->method();\n+#if INCLUDE_CDS\n+    if (is_precompiled() && !AOTConstantPoolResolver::is_resolution_deterministic(cpool(), indy_info->constant_pool_index())) {\n+      \/\/ This is an indy callsite that was resolved as a side effect of VM bootstrap, but\n+      \/\/ it cannot be cached in the resolved state, so AOT code should not reference it.\n+      adapter = nullptr;\n+    }\n+#endif\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -658,1 +658,0 @@\n-  assert(CDSConfig::current_thread_is_vm_or_dumper(), \"sanity\");\n@@ -674,1 +673,1 @@\n-    if (!SafepointSynchronize::is_at_safepoint()) {\n+    if (!SafepointSynchronize::is_at_safepoint() && !Thread::current()->is_Compiler_thread()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}