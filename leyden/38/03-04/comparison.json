{"files":[{"patch":"@@ -2130,1 +2130,1 @@\n-    log_info(scc)(\"Uncommon trap in preload code: reason=%s action=%s method=%s::%s bci=%d\",\n+    log_debug(scc,deoptimization)(\"Uncommon trap in preload code: reason=%s action=%s method=%s::%s bci=%d, %s\",\n@@ -2133,1 +2133,1 @@\n-                  bci());\n+                  bci(), comment);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2016,2 +2016,2 @@\n-    ls.print(\"cid=%4d %s level=%d\",\n-             nm->compile_id(), (is_osr ? \"osr\" : \"   \"), nm->comp_level());\n+    ls.print(\"cid=%4d %s%s level=%d\",\n+             nm->compile_id(), (is_osr ? \"osr\" : \"   \"), (nm->preloaded() ? \"preload\" : \"\"), nm->comp_level());\n@@ -2136,8 +2136,0 @@\n-\n-      if (PreloadReduceTraps && nm->preloaded() && (action != Action_none)) {\n-        \/\/ For performance reasons, preloaded nmethods should avoid deopts that lead to recompilations.\n-        \/\/ Compiler logs all uncommon traps with -Xlog:scc. That log is noisy, and some traps may be\n-        \/\/ legitimate. Here, we log the problems that really caused the deopts at runtime.\n-        log_info(scc,deoptimization)(\"In preload code: reason=%s action=%s method=%s\",\n-          reason_name, reason_action, tm->name_and_sig_as_C_string());\n-      }\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"}]}