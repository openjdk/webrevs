{"files":[{"patch":"@@ -494,0 +494,3 @@\n+  product(bool, PreloadReduceTraps, true, DIAGNOSTIC,                       \\\n+          \"Preload code should avoid traps as much as possible.\")           \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/compiler\/compiler_globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4053,0 +4053,4 @@\n+  if (PreloadReduceTraps && for_preload()) {\n+    \/\/ Preload code should not have traps, if possible.\n+    return true;\n+  }\n@@ -4078,0 +4082,4 @@\n+  if (PreloadReduceTraps && for_preload()) {\n+    \/\/ Preload code should not have traps, if possible.\n+    return true;\n+  }\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2126,0 +2126,10 @@\n+  if (PreloadReduceTraps && Compile::current()->for_preload() &&\n+      (action != Deoptimization::Action_none)) {\n+    ResourceMark rm;\n+    ciMethod* cim = Compile::current()->method();\n+    log_info(scc)(\"Uncommon trap in preload code: reason=%s action=%s method=%s::%s bci=%d\",\n+                  Deoptimization::trap_reason_name(reason), Deoptimization::trap_action_name(action),\n+                  cim->holder()->name()->as_klass_external_name(), cim->name()->as_klass_external_name(),\n+                  bci());\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2129,0 +2129,8 @@\n+\n+      if (PreloadReduceTraps && nm->preloaded() && (action != Action_none)) {\n+        \/\/ For performance reasons, preloaded nmethods should avoid deopts that lead to recompilations.\n+        \/\/ Compiler logs all uncommon traps with -Xlog:scc. That log is noisy, and some traps may be\n+        \/\/ legitimate. Here, we log the problems that really caused the deopts at runtime.\n+        log_info(scc,deoptimization)(\"In preload code: reason=%s action=%s method=%s\",\n+          reason_name, reason_action, tm->name_and_sig_as_C_string());\n+      }\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}