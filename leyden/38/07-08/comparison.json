{"files":[{"patch":"@@ -1,33 +0,0 @@\n-#\/bin\/bash\n-\n-J=build\/linux-x86_64-server-release\/images\/jdk\/bin\/java\n-\n-OPTS=\"-Xms64m -Xmx8g -XX:+UseSerialGC -cp JavacBenchApp.jar\"\n-\n-rm -f hs_err*\n-\n-TRAINING_CONF=\"50\"\n-PROD_CONF=\"50\"\n-\n-TRAINING_OPTS=\"$OPTS\"\n-PROD_OPTS=\"$OPTS\"\n-\n-echo \"Building\"\n-rm JavacBenchApp.jar\n-${J}c .\/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/applications\/JavacBenchApp.java -d .\n-jar cvf JavacBenchApp.jar JavacBenchApp*.class\n-\n-echo \"Training\"\n-\n-rm -f *.aot *.aotconf\n-time $J -XX:AOTMode=record -XX:AOTConfiguration=app.aotconf $TRAINING_OPTS JavacBenchApp $TRAINING_CONF\n-time $J -XX:AOTMode=create -XX:AOTConfiguration=app.aotconf $TRAINING_OPTS -XX:AOTCache=app.aot -Xlog:deoptimization=debug JavacBenchApp $TRAINING_CONF 2>&1 | tee print-assembly.log\n-\n-$J $PROD_OPTS -XX:AOTCache=app.aot -XX:+PrintCompilation -Xlog:scc+deoptimization=debug -Xlog:deoptimization=debug -XX:+UnlockDiagnosticVMOptions JavacBenchApp $PROD_CONF 2>&1 | tee print-compilation.log\n-\n-echo -------------------------------\n-grep com.sun.tools.javac.util.StringNameTable::fromString print-assembly.log\n-echo -------------------------------\n-grep com.sun.tools.javac.util.StringNameTable::fromString print-compilation.log\n-\n-\n","filename":"reproduce-traps.sh","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -565,2 +565,1 @@\n-          Deoptimization::Action_reinterpret),\n-          \"do_aaload: array class is not loaded\");\n+          Deoptimization::Action_reinterpret));\n@@ -575,2 +574,1 @@\n-          Deoptimization::Action_reinterpret),\n-          \"do_aaload: array element class is not loaded\");\n+          Deoptimization::Action_reinterpret));\n@@ -615,1 +613,1 @@\n-    trap(str, field->holder(), str->get_field_holder_index(), \"do_getstatic: will not link\");\n+    trap(str, field->holder(), str->get_field_holder_index());\n@@ -658,2 +656,1 @@\n-            Deoptimization::Action_reinterpret),\n-            \"do_invoke: invoked dynamic method does not exist\");\n+            Deoptimization::Action_reinterpret));\n@@ -662,2 +659,1 @@\n-      trap(str, unloaded_holder, str->get_method_holder_index(),\n-        \"do_invoke: unloaded method\");\n+      trap(str, unloaded_holder, str->get_method_holder_index());\n@@ -725,2 +721,1 @@\n-                                                         Deoptimization::Action_none),\n-                                                         \"do_ldc: unhandled exception\");\n+                                                         Deoptimization::Action_none));\n@@ -735,2 +730,1 @@\n-                                                           cp_index),\n-                                                           \"do_ldc: unloaded constant\");\n+                                                           cp_index));\n@@ -767,1 +761,1 @@\n-    trap(str, array_klass, str->get_klass_index(), \"do_multianewarray: will not link\");\n+    trap(str, array_klass, str->get_klass_index());\n@@ -781,4 +775,2 @@\n-  if (!will_link) {\n-    trap(str, klass, str->get_klass_index(), \"do_new: will not link\");\n-  } else if (str->is_unresolved_klass()) {\n-    trap(str, klass, str->get_klass_index(), \"do_new: unresolved klass\");\n+  if (!will_link || str->is_unresolved_klass()) {\n+    trap(str, klass, str->get_klass_index());\n@@ -813,1 +805,1 @@\n-    trap(str, field->holder(), str->get_field_holder_index(), \"do_putstatic: will not link\");\n+    trap(str, field->holder(), str->get_field_holder_index());\n@@ -841,1 +833,1 @@\n-void ciTypeFlow::StateVector::trap(ciBytecodeStream* str, ciKlass* klass, int index, const char* reason) {\n+void ciTypeFlow::StateVector::trap(ciBytecodeStream* str, ciKlass* klass, int index) {\n@@ -858,11 +850,0 @@\n-\n-  LogTarget(Debug, deoptimization) lt;\n-  if (lt.is_enabled()) {\n-    ResourceMark rm;\n-    LogStream ls(lt);\n-    const char * name = outer()->method()->get_Method()->name_and_sig_as_C_string();\n-    ls.print(\"ciTypeFlow uncommon_trap method=%s bci=%d\", name, str->cur_bci());\n-    char buf[100];\n-    ls.print(\" %s\", Deoptimization::format_trap_request(buf, sizeof(buf), index));\n-    ls.print_cr(\" %s\", reason);\n-  }\n@@ -932,1 +913,1 @@\n-        trap(str, element_klass, str->get_klass_index(), \"anewarray: will not link\");\n+        trap(str, element_klass, str->get_klass_index());\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":13,"deletions":32,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -464,1 +464,1 @@\n-    void trap(ciBytecodeStream* str, ciKlass* klass, int index, const char* reason);\n+    void trap(ciBytecodeStream* str, ciKlass* klass, int index);\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}