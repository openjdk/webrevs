{"files":[{"patch":"@@ -83,0 +83,7 @@\n+  \/\/ Used during production run to convert a Method in AOTCache to offset from SharedBaseAddress\n+  static uint convert_method_to_offset(Method* method) {\n+    assert(method->is_shared(), \"method %p is not in AOTCache\", method);\n+    uint offset = (uint)pointer_delta((address)method, (address)SharedBaseAddress, 1);\n+    return offset;\n+  }\n+\n","filename":"src\/hotspot\/share\/cds\/aotCacheAccess.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -906,0 +906,3 @@\n+  if (!method->is_shared()) {\n+    return nullptr;\n+  }\n@@ -927,4 +930,2 @@\n-    ResourceMark rm;\n-    const char* target_name = method->name_and_sig_as_C_string();\n-    uint hash = java_lang_String::hash_code((const jbyte*)target_name, (int)strlen(target_name));\n-    AOTCodeEntry* entry = _cache->find_entry(AOTCodeEntry::Code, hash, comp_level);\n+    uint id = AOTCacheAccess::convert_method_to_offset(method());\n+    AOTCodeEntry* entry = _cache->find_entry(AOTCodeEntry::Code, id, comp_level);\n@@ -932,1 +933,6 @@\n-      log_info(aot, codecache, nmethod)(\"Missing entry for '%s' (comp_level %d, hash: \" UINT32_FORMAT_X_0 \")\", target_name, (uint)comp_level, hash);\n+      LogStreamHandle(Info, aot, codecache, nmethod) log;\n+      if (log.is_enabled()) {\n+        ResourceMark rm;\n+        const char* target_name = method->name_and_sig_as_C_string();\n+        log.print(\"Missing entry for '%s' (comp_level %d, id: \" UINT32_FORMAT_X_0 \")\", target_name, (uint)comp_level, id);\n+      }\n@@ -935,6 +941,4 @@\n-      uint name_offset = entry->offset() + entry->name_offset();\n-      uint name_size   = entry->name_size(); \/\/ Includes '\/0'\n-      const char* name = _cache->cache_buffer() + name_offset;\n-      if (strncmp(target_name, name, name_size) != 0) {\n-        assert(false, \"AOTCodeCache: saved nmethod's name '%s' is different from '%s', hash: \" UINT32_FORMAT_X_0, name, target_name, hash);\n-      }\n+      ResourceMark rm;\n+      assert(method() == entry->method(), \"AOTCodeCache: saved nmethod's method %p (name: %s id: \" UINT32_FORMAT_X_0\n+             \") is different from the method %p (name: %s, id: \" UINT32_FORMAT_X_0 \" being looked up\" ,\n+             entry->method(), entry->method()->name_and_sig_as_C_string(), entry->id(), method(), method()->name_and_sig_as_C_string(), id);\n@@ -1631,1 +1635,0 @@\n-  bool method_in_cds = MetaspaceShared::is_in_shared_metaspace((address)method);\n@@ -1633,1 +1636,0 @@\n-  bool klass_in_cds = holder->is_shared() && !holder->defined_by_other_loaders();\n@@ -1641,7 +1643,1 @@\n-  if (for_preload && !(method_in_cds && klass_in_cds)) {\n-    ResourceMark rm;\n-    log_info(aot, codecache, nmethod)(\"%d (L%d): Skip method '%s' for preload: not in CDS\", comp_id, (int)comp_level, method->name_and_sig_as_C_string());\n-    assert(!for_preload || (method_in_cds && klass_in_cds), \"sanity\");\n-    return nullptr;\n-  }\n-  assert(!for_preload || (method_in_cds && klass_in_cds), \"sanity\");\n+\n@@ -1660,1 +1656,1 @@\n-  uint hash = 0;\n+  uint id = 0;\n@@ -1695,1 +1691,0 @@\n-    hash = java_lang_String::hash_code((const jbyte*)name, (int)strlen(name));\n@@ -1697,0 +1692,1 @@\n+  id = AOTCacheAccess::delta_from_base_address((address)nm->method());\n@@ -1773,1 +1769,1 @@\n-  AOTCodeEntry* entry = new (this) AOTCodeEntry(AOTCodeEntry::Code, hash,\n+  AOTCodeEntry* entry = new (this) AOTCodeEntry(AOTCodeEntry::Code, id,\n@@ -1779,3 +1775,1 @@\n-  if (method_in_cds) {\n-    entry->set_method(method);\n-  }\n+  entry->set_method(method);\n@@ -1820,1 +1814,1 @@\n-    uint hash = java_lang_String::hash_code((const jbyte*)target_name, (int)strlen(target_name));\n+    uint id = AOTCacheAccess::convert_method_to_offset(method());\n@@ -1822,1 +1816,1 @@\n-    log_info(aot, codecache, nmethod)(\"%d (L%d): %s nmethod '%s' (hash: \" UINT32_FORMAT_X_0 \"%s)\",\n+    log_info(aot, codecache, nmethod)(\"%d (L%d): %s nmethod '%s' (id: \" UINT32_FORMAT_X_0 \"%s)\",\n@@ -1824,1 +1818,1 @@\n-                                      target_name, hash, (clinit_brs ? \", has clinit barriers\" : \"\"));\n+                                      target_name, id, (clinit_brs ? \", has clinit barriers\" : \"\"));\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":23,"deletions":29,"binary":false,"changes":52,"status":"modified"}]}