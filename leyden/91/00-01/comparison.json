{"files":[{"patch":"@@ -83,0 +83,7 @@\n+  \/\/ Used during production run to convert a Method in AOTCache to offset from SharedBaseAddress\n+  static uint convert_method_to_offset(Method* method) {\n+    assert(method->is_shared(), \"method %p is not in AOTCache\", method);\n+    uint offset = (uint)pointer_delta((address)method, (address)SharedBaseAddress, 1);\n+    return offset;\n+  }\n+\n","filename":"src\/hotspot\/share\/cds\/aotCacheAccess.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -906,0 +906,3 @@\n+  if (!method->is_shared()) {\n+    return nullptr;\n+  }\n@@ -927,4 +930,2 @@\n-    ResourceMark rm;\n-    const char* target_name = method->name_and_sig_as_C_string();\n-    uint hash = (uint)pointer_delta((address)method(), (address)SharedBaseAddress, 1);\n-    AOTCodeEntry* entry = _cache->find_entry(AOTCodeEntry::Code, hash, comp_level);\n+    uint id = AOTCacheAccess::convert_method_to_offset(method());\n+    AOTCodeEntry* entry = _cache->find_entry(AOTCodeEntry::Code, id, comp_level);\n@@ -932,1 +933,6 @@\n-      log_info(aot, codecache, nmethod)(\"Missing entry for '%s' (comp_level %d, hash: \" UINT32_FORMAT_X_0 \")\", target_name, (uint)comp_level, hash);\n+      LogStreamHandle(Info, aot, codecache, nmethod) log;\n+      if (log.is_enabled()) {\n+        ResourceMark rm;\n+        const char* target_name = method->name_and_sig_as_C_string();\n+        log.print(\"Missing entry for '%s' (comp_level %d, id: \" UINT32_FORMAT_X_0 \")\", target_name, (uint)comp_level, id);\n+      }\n@@ -934,2 +940,5 @@\n-    } else if (method() != entry->method()) {\n-      assert(false, \"AOTCodeCache: saved nmethod's method %p (hash: \" UINT32_FORMAT_X_0 \") is different from the method %p being looked up\" , entry->method(), hash, method());\n+    } else {\n+      ResourceMark rm;\n+      assert(method() == entry->method(), \"AOTCodeCache: saved nmethod's method %p (name: %s id: \" UINT32_FORMAT_X_0\n+             \") is different from the method %p (name: %s, id: \" UINT32_FORMAT_X_0 \" being looked up\" ,\n+             entry->method(), entry->method()->name_and_sig_as_C_string(), entry->id(), method(), method()->name_and_sig_as_C_string(), id);\n@@ -1647,1 +1656,1 @@\n-  uint hash = 0;\n+  uint id = 0;\n@@ -1683,1 +1692,1 @@\n-  hash = AOTCacheAccess::delta_from_base_address((address)nm->method());\n+  id = AOTCacheAccess::delta_from_base_address((address)nm->method());\n@@ -1760,1 +1769,1 @@\n-  AOTCodeEntry* entry = new (this) AOTCodeEntry(AOTCodeEntry::Code, hash,\n+  AOTCodeEntry* entry = new (this) AOTCodeEntry(AOTCodeEntry::Code, id,\n@@ -1805,1 +1814,1 @@\n-    uint hash = (uint)pointer_delta((address)method(), (address)SharedBaseAddress, 1);\n+    uint id = AOTCacheAccess::convert_method_to_offset(method());\n@@ -1807,1 +1816,1 @@\n-    log_info(aot, codecache, nmethod)(\"%d (L%d): %s nmethod '%s' (hash: \" UINT32_FORMAT_X_0 \"%s)\",\n+    log_info(aot, codecache, nmethod)(\"%d (L%d): %s nmethod '%s' (id: \" UINT32_FORMAT_X_0 \"%s)\",\n@@ -1809,1 +1818,1 @@\n-                                      target_name, hash, (clinit_brs ? \", has clinit barriers\" : \"\"));\n+                                      target_name, id, (clinit_brs ? \", has clinit barriers\" : \"\"));\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"}]}