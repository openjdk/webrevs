{"files":[{"patch":"@@ -1189,1 +1189,1 @@\n-  bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n@@ -1641,1 +1641,1 @@\n-  bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-  bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n@@ -1146,1 +1146,1 @@\n-  bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1232,1 +1232,1 @@\n-  const bool inc_counter = UseCompiler || CountCompiledCalls;\n+  const bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n@@ -1688,1 +1688,1 @@\n-  bool inc_counter = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -992,1 +992,1 @@\n-  bool inc_counter = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n@@ -1416,1 +1416,1 @@\n-  const bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  const bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1310,1 +1310,1 @@\n-  bool inc_counter = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n@@ -1669,1 +1669,1 @@\n-  bool inc_counter = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -814,1 +814,1 @@\n-  bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n@@ -1383,1 +1383,1 @@\n-  bool inc_counter  = UseCompiler || CountCompiledCalls;\n+  bool inc_counter = (UseCompiler || CountCompiledCalls) && !PreloadOnly;\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3277,0 +3277,4 @@\n+  if (PreloadOnly) {\n+    \/\/ Nothing to do if we only use preload code.\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -590,0 +590,11 @@\n+  if (PreloadOnly) {\n+    \/\/ Disable profiling\/counter updates in interpreter and C1.\n+    \/\/ This effectively disables most of the normal JIT (re-)compilations.\n+    FLAG_SET_DEFAULT(ProfileInterpreter, false);\n+    FLAG_SET_DEFAULT(UseOnStackReplacement, false);\n+    FLAG_SET_DEFAULT(UseLoopCounter, false);\n+\n+    \/\/ Disable compilations through training data replay.\n+    FLAG_SET_DEFAULT(ReplayTraining, false);\n+  }\n+\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -498,0 +498,4 @@\n+  product(bool, PreloadOnly, false, EXPERIMENTAL,                           \\\n+          \"Use preload code exclusively. This effectively disables most of \"\\\n+          \"profiling and JIT compilation, running close to AOT-only mode.\") \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/compiler\/compiler_globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1184,0 +1184,2 @@\n+  assert(!PreloadOnly, \"Should not be using interpreter counters\");\n+\n@@ -1288,0 +1290,1 @@\n+  assert(!PreloadOnly, \"Should not be using interpreter counters\");\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}