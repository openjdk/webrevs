{"files":[{"patch":"@@ -965,2 +965,2 @@\n-    _search_entries = (uint*)addr(_load_header->entries_offset()); \/\/ [id, index]\n-    _load_entries = (AOTCodeEntry*)(_search_entries + 2 * count);\n+    _search_entries = (uint*)addr(_load_header->search_table_offset()); \/\/ [id, index]\n+    _load_entries = (AOTCodeEntry*)addr(_load_header->entries_offset());\n@@ -1034,1 +1034,1 @@\n-  assert(entry->is_loaded(), \"invalidate only AOT code in use\");\n+  assert(entry->is_loaded() || entry->for_preload(), \"invalidate only AOT code in use or a preload code\");\n@@ -1072,7 +1072,0 @@\n-void AOTCodeEntry::update_method_for_writing() {\n-  if (_method != nullptr) {\n-    _method_offset = AOTCacheAccess::delta_from_base_address((address)_method);\n-    _method = nullptr;\n-  }\n-}\n-\n@@ -1085,0 +1078,9 @@\n+void AOTCodeCache::mark_method_pointer(AOTCodeEntry* entries, int count) {\n+  for (int i = 0; i < count; i++) {\n+    Method* m = entries[i].method();\n+    if (m != nullptr) {\n+      AOTCacheAccess::set_pointer(entries[i].method_addr(), m);\n+    }\n+  }\n+}\n+\n@@ -1163,1 +1165,0 @@\n-        entry->update_method_for_writing();\n@@ -1214,1 +1215,1 @@\n-    uint new_entries_offset = (current - start); \/\/ New offset\n+    uint search_table_offset = current - start;\n@@ -1223,0 +1224,2 @@\n+    current = align_up(current, DATA_ALIGNMENT);\n+    uint new_entries_offset = current - start;\n@@ -1225,0 +1228,1 @@\n+    mark_method_pointer((AOTCodeEntry*)current, entries_count);\n@@ -1244,1 +1248,1 @@\n-                 entries_count, new_entries_offset,\n+                 entries_count, search_table_offset, new_entries_offset,\n@@ -1923,2 +1927,2 @@\n-    _search_entries = (uint*)addr(_load_header->entries_offset()); \/\/ [id, index]\n-    _load_entries = (AOTCodeEntry*)(_search_entries + 2 * count);\n+    _search_entries = (uint*)addr(_load_header->search_table_offset()); \/\/ [id, index]\n+    _load_entries = (AOTCodeEntry*)addr(_load_header->entries_offset());\n@@ -1938,2 +1942,0 @@\n-      Method* m = AOTCacheAccess::convert_offset_to_method(entry->method_offset());\n-      entry->set_method(m);\n@@ -3972,2 +3974,1 @@\n-    uint* search_entries = (uint*)cache->addr(cache->_load_header->entries_offset()); \/\/ [id, index]\n-    AOTCodeEntry* load_entries = (AOTCodeEntry*)(search_entries + 2 * count);\n+    AOTCodeEntry* load_entries = (AOTCodeEntry*)cache->addr(cache->_load_header->entries_offset());\n@@ -4061,2 +4062,2 @@\n-    uint* search_entries = (uint*)opened_cache->addr(opened_cache->_load_header->entries_offset()); \/\/ [id, index]\n-    AOTCodeEntry* load_entries = (AOTCodeEntry*)(search_entries + 2 * count);\n+    uint* search_entries = (uint*)opened_cache->addr(opened_cache->_load_header->search_table_offset()); \/\/ [id, index]\n+    AOTCodeEntry* load_entries = (AOTCodeEntry*)opened_cache->addr(opened_cache->_load_header->entries_offset());\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":22,"deletions":21,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -96,1 +96,0 @@\n-  uint   _method_offset;\n@@ -186,1 +185,2 @@\n-  Method*   method()  const { return _method; }\n+  Method* method()  const { return _method; }\n+  Method** method_addr() { return &_method; }\n@@ -188,2 +188,0 @@\n-  void update_method_for_writing();\n-  uint method_offset() const { return _method_offset; }\n@@ -357,0 +355,1 @@\n+    uint   _search_table_offset; \/\/ offset of table for looking up an AOTCodeEntry\n@@ -370,1 +369,1 @@\n-              uint entries_count,  uint entries_offset,\n+              uint entries_count,  uint search_table_offset, uint entries_offset,\n@@ -379,0 +378,1 @@\n+      _search_table_offset = search_table_offset;\n@@ -395,0 +395,1 @@\n+    uint search_table_offset() const { return _search_table_offset; }\n@@ -528,0 +529,2 @@\n+  void mark_method_pointer(AOTCodeEntry* entries, int count);\n+\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.hpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}