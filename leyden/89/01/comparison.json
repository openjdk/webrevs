{"files":[{"patch":"@@ -787,0 +787,1 @@\n+    FLAG_SET_ERGO(UseAOTCodeLoadThread, false);\n@@ -792,0 +793,1 @@\n+    FLAG_SET_ERGO(UseAOTCodeLoadThread, false);\n@@ -798,0 +800,1 @@\n+    FLAG_SET_ERGO_IF_DEFAULT(UseAOTCodeLoadThread, true);\n@@ -802,0 +805,1 @@\n+    FLAG_SET_ERGO(UseAOTCodeLoadThread, false);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -232,4 +232,1 @@\n-  \/\/ We cannot trust AOTCodeCache status here, due to bootstrapping circularity.\n-  \/\/ Compilation policy init runs before AOT cache is fully initialized, so the\n-  \/\/ normal AOT cache status check would always fail.\n-  return UseAOTCodeLoadThread && AOTCodeCaching && CDSConfig::is_using_archive();\n+  return UseAOTCodeLoadThread && AOTCodeCaching;\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-  product(bool, UseAOTCodeLoadThread, true,                                 \\\n+  product(bool, UseAOTCodeLoadThread, false,                                \\\n","filename":"src\/hotspot\/share\/compiler\/compiler_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}