{"files":[{"patch":"@@ -1716,1 +1716,1 @@\n-  if (!holder->is_initialized() || needs_patching) {\n+  if (!holder->is_initialized() || needs_patching || compilation()->env()->is_precompile()) {\n@@ -2125,1 +2125,2 @@\n-    if ((code == Bytecodes::_invokestatic && klass->is_initialized()) || \/\/ invokestatic involves an initialization barrier on declaring class\n+    if ((code == Bytecodes::_invokestatic && klass->is_initialized() &&\n+        !compilation()->env()->is_precompile()) || \/\/ invokestatic involves an initialization barrier on declaring class\n@@ -3868,1 +3869,2 @@\n-      !callee->holder()->is_initialized()) INLINE_BAILOUT(\"callee's klass not initialized yet\");\n+      (!callee->holder()->is_initialized() ||\n+       compilation()->env()->is_precompile())) INLINE_BAILOUT(\"callee's klass not initialized yet\");\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -663,1 +663,2 @@\n-    C1StubId stub_id = klass->is_initialized() ? C1StubId::fast_new_instance_id : C1StubId::fast_new_instance_init_check_id;\n+    bool known_initialized = klass->is_initialized() && !compilation()->env()->is_precompile();\n+    C1StubId stub_id = known_initialized ? C1StubId::fast_new_instance_id : C1StubId::fast_new_instance_init_check_id;\n@@ -672,1 +673,1 @@\n-                       oopDesc::header_size(), instance_size, klass_reg, !klass->is_initialized(), slow_path);\n+                       oopDesc::header_size(), instance_size, klass_reg, !known_initialized, slow_path);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -838,1 +838,1 @@\n-    if (is_precompiled() && !AOTConstantPoolResolver::is_resolution_deterministic(cpool(), indy_info->constant_pool_index())) {\n+    if (is_precompile() && !AOTConstantPoolResolver::is_resolution_deterministic(cpool(), indy_info->constant_pool_index())) {\n@@ -1860,3 +1860,2 @@\n-bool ciEnv::is_precompiled() {\n-  return (task() != nullptr) && (task()->compile_reason() == CompileTask::Reason_Precompile          ||\n-                                 task()->compile_reason() == CompileTask::Reason_PrecompileForPreload);\n+bool ciEnv::is_precompile() {\n+  return (task() != nullptr) && task()->is_precompile();\n@@ -1866,1 +1865,1 @@\n-  assert(is_precompiled(), \"\");\n+  assert(is_precompile(), \"\");\n@@ -1907,1 +1906,1 @@\n-  assert(is_precompiled(), \"\");\n+  assert(is_precompile(), \"\");\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -549,1 +549,1 @@\n-  bool is_precompiled();\n+  bool is_precompile();\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-  if (env != nullptr && env->is_precompiled()) {\n+  if (env != nullptr && env->is_precompile()) {\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1068,1 +1068,1 @@\n-  if (CURRENT_ENV->task()->is_precompiled() && CURRENT_ENV->task()->comp_level() == CompLevel_full_optimization) {\n+  if (CURRENT_ENV->task()->is_precompile() && CURRENT_ENV->task()->comp_level() == CompLevel_full_optimization) {\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -250,1 +250,4 @@\n-  return !is_on() || !is_dumping_code() \/\/ Restrict only when we generate cache\n+  ciEnv* env = CURRENT_ENV;\n+  precond(env != nullptr);\n+  assert(!env->is_precompile() || is_dumping_code(), \"AOT compilation should be enabled\");\n+  return !env->is_precompile() \/\/ Restrict only when we generate AOT code\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1636,1 +1636,1 @@\n-  if (PrecompileOnlyAndExit && !CompileTask::reason_is_precompiled(compile_reason)) {\n+  if (PrecompileOnlyAndExit && !CompileTask::reason_is_precompile(compile_reason)) {\n@@ -1669,1 +1669,1 @@\n-      !CompileTask::reason_is_precompiled(compile_reason) &&\n+      !CompileTask::reason_is_precompile(compile_reason) &&\n@@ -2615,1 +2615,1 @@\n-    if (!ci_env.failing() && !task->is_success() && !task->is_precompiled()) {\n+    if (!ci_env.failing() && !task->is_success() && !task->is_precompile()) {\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  static bool reason_is_precompiled(CompileTask::CompileReason compile_reason) {\n+  static bool reason_is_precompile(CompileTask::CompileReason compile_reason) {\n@@ -199,2 +199,2 @@\n-  bool is_precompiled() {\n-    return reason_is_precompiled(compile_reason());\n+  bool is_precompile() {\n+    return reason_is_precompile(compile_reason());\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}