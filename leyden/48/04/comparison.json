{"files":[{"patch":"@@ -324,1 +324,1 @@\n-SCCEntry* SCCache::find_code_entry(const methodHandle& method, uint comp_level) {\n+SCCEntry* SCCache::find_code_entry(const methodHandle& method, uint comp_level, bool maybe_ignore) {\n@@ -366,6 +366,9 @@\n-    DirectiveSet* directives = DirectivesStack::getMatchingDirective(method, nullptr);\n-    if (directives->IgnorePrecompiledOption) {\n-      LogStreamHandle(Info, scc, compilation) log;\n-      if (log.is_enabled()) {\n-        log.print(\"Ignore cached code entry on level %d for \", comp_level);\n-        method->print_value_on(&log);\n+    if (maybe_ignore) {\n+      DirectiveSet* directives = DirectivesStack::getMatchingDirective(method, nullptr);\n+      if (directives->IgnorePrecompiledOption) {\n+        LogStreamHandle(Info, scc, compilation) log;\n+        if (log.is_enabled()) {\n+          log.print(\"Ignore cached code entry on level %d for \", comp_level);\n+          method->print_value_on(&log);\n+        }\n+        return nullptr;\n@@ -373,1 +376,0 @@\n-      return nullptr;\n@@ -4459,0 +4461,19 @@\n+\n+void SCCache::block_loading(Method* method, CompLevel comp_level) {\n+  SCCache* cache = open_for_read();\n+  if (cache == nullptr) {\n+    return;\n+  }\n+\n+  ReadingMark rdmk;\n+  if (rdmk.failed()) {\n+    \/\/ Cache is closed, cannot touch anything.\n+    return;\n+  }\n+\n+  Thread* current = Thread::current();\n+  HandleMark hm(current);\n+  methodHandle mh(current, method);\n+  SCCEntry* scc_entry = cache->find_code_entry(mh, comp_level, \/* maybe_ignore = *\/ false);\n+  cache->invalidate_entry(scc_entry);\n+}\n","filename":"src\/hotspot\/share\/code\/SCCache.cpp","additions":29,"deletions":8,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -555,0 +555,2 @@\n+  static void block_loading(Method* method, CompLevel comp_level);\n+\n@@ -609,1 +611,1 @@\n-  static SCCEntry* find_code_entry(const methodHandle& method, uint comp_level);\n+  static SCCEntry* find_code_entry(const methodHandle& method, uint comp_level, bool maybe_ignore = true);\n","filename":"src\/hotspot\/share\/code\/SCCache.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2078,0 +2078,9 @@\n+    if (preloaded() && method() != nullptr) {\n+      \/\/ Preload code was decompiled, possibly due to a trap. Preload code should not\n+      \/\/ normally have traps, but some are still there. Since preload code is compiled\n+      \/\/ more conservatively, we assume that non-preload code would trap again in similar\n+      \/\/ conditions. Therefore, there is no point in trying to load it. Instead, wait for\n+      \/\/ normal compilation to occur.\n+      SCCache::block_loading(method(), CompLevel_full_optimization);\n+    }\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}