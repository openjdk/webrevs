{"files":[{"patch":"@@ -1054,4 +1054,8 @@\n-    if (scc_entry != nullptr && scc_entry->not_entrant()) {\n-      \/\/ This shared code was marked invalid while it was loaded\n-      code_buffer->free_blob();\n-      return;\n+    if (scc_entry != nullptr) {\n+      \/\/ Invalid compilation states:\n+      \/\/  - SCCache is closed, SCC entry is garbage.\n+      \/\/  - SCC entry indicates this shared code was marked invalid while it was loaded.\n+      if (!SCCache::is_on() || scc_entry->not_entrant()) {\n+        code_buffer->free_blob();\n+        return;\n+      }\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+#include \"utilities\/spinYield.hpp\"\n@@ -713,1 +714,1 @@\n-volatile int SCCache::_reading_nmethod = 0;\n+volatile int SCCache::_nmethod_readers = 0;\n@@ -722,1 +723,1 @@\n-  if (_for_read && _reading_nmethod > 0) {\n+  if (_for_read) {\n@@ -724,5 +725,1 @@\n-    \/\/ TODO: may be have new separate locker for SCA.\n-    MonitorLocker locker(Compilation_lock, Mutex::_no_safepoint_check_flag);\n-    while (_reading_nmethod > 0) {\n-      locker.wait(10); \/\/ Wait 10 ms\n-    }\n+    wait_for_no_nmethod_readers();\n@@ -2885,0 +2882,5 @@\n+  if (rdmk.failed()) {\n+    \/\/ Cache is closed, cannot touch anything.\n+    return false;\n+  }\n+\n@@ -3378,0 +3380,4 @@\n+    if (rdmk.failed()) {\n+      \/\/ Cache is closed, cannot touch anything.\n+      return;\n+    }\n@@ -3429,0 +3435,4 @@\n+    if (rdmk.failed()) {\n+      \/\/ Cache is closed, cannot touch anything.\n+      return;\n+    }\n@@ -4182,0 +4192,54 @@\n+\n+\n+void SCCache::wait_for_no_nmethod_readers() {\n+  while (true) {\n+    int cur = Atomic::load(&_nmethod_readers);\n+    int upd = -(cur + 1);\n+    if (cur >= 0 && Atomic::cmpxchg(&_nmethod_readers, cur, upd) == cur) {\n+      \/\/ Success, no new readers should appear.\n+      break;\n+    }\n+  }\n+\n+  \/\/ Now wait for all readers to leave.\n+  SpinYield w;\n+  while (Atomic::load(&_nmethod_readers) != -1) {\n+    w.wait();\n+  }\n+}\n+\n+SCCache::ReadingMark::ReadingMark() {\n+  while (true) {\n+    int cur = Atomic::load(&_nmethod_readers);\n+    if (cur < 0) {\n+      \/\/ Cache is already closed, cannot proceed.\n+      _failed = true;\n+      return;\n+    }\n+    if (Atomic::cmpxchg(&_nmethod_readers, cur, cur + 1) == cur) {\n+      \/\/ Successfully recorded ourselves as entered.\n+      _failed = false;\n+      return;\n+    }\n+  }\n+}\n+\n+SCCache::ReadingMark::~ReadingMark() {\n+  if (_failed) {\n+    return;\n+  }\n+  while (true) {\n+    int cur = Atomic::load(&_nmethod_readers);\n+    if (cur > 0) {\n+      \/\/ Cache is open, we are counting down towards 0.\n+      if (Atomic::cmpxchg(&_nmethod_readers, cur, cur - 1) == cur) {\n+        return;\n+      }\n+    } else {\n+      \/\/ Cache is closed, we are counting up towards -1.\n+      if (Atomic::cmpxchg(&_nmethod_readers, cur, cur + 1) == cur) {\n+        return;\n+      }\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/code\/SCCache.cpp","additions":71,"deletions":7,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -439,1 +439,7 @@\n-  static volatile int _reading_nmethod;\n+  \/\/ States:\n+  \/\/   S >= 0: allow new readers, S readers are currently active\n+  \/\/   S <  0: no new readers are allowed; (-S-1) readers are currently active\n+  \/\/     (special case: S = -1 means no readers are active, and would never be active again)\n+  static volatile int _nmethod_readers;\n+\n+  static void wait_for_no_nmethod_readers();\n@@ -442,0 +448,2 @@\n+  private:\n+    bool _failed;\n@@ -443,5 +451,4 @@\n-    ReadingMark() {\n-      Atomic::inc(&_reading_nmethod);\n-    }\n-    ~ReadingMark() {\n-      Atomic::dec(&_reading_nmethod);\n+    ReadingMark();\n+    ~ReadingMark();\n+    bool failed() {\n+      return _failed;\n@@ -580,0 +587,4 @@\n+      if (rdmk.failed()) {\n+        \/\/ Cache is closed, cannot touch anything.\n+        return;\n+      }\n","filename":"src\/hotspot\/share\/code\/SCCache.hpp","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"}]}