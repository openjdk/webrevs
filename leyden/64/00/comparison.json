{"files":[{"patch":"@@ -344,0 +344,11 @@\n+static bool is_not_yet_initialized(Klass* k) {\n+  if (k->is_instance_klass()) {\n+    return InstanceKlass::cast(k)->is_not_initialized();\n+  }\n+  if (k->is_objArray_klass()) {\n+    return is_not_yet_initialized(ObjArrayKlass::cast(k)->bottom_klass());\n+  }\n+  \/\/ All other klass types should be always initialized.\n+  return false;\n+}\n+\n@@ -349,1 +360,1 @@\n-      if (!always_clean && k->is_instance_klass() && InstanceKlass::cast(k)->is_not_initialized()) {\n+      if (!always_clean && is_not_yet_initialized(k)) {\n@@ -370,1 +381,1 @@\n-    if (!always_clean && k->is_instance_klass() && InstanceKlass::cast(k)->is_not_initialized()) {\n+    if (!always_clean && is_not_yet_initialized(k)) {\n@@ -460,1 +471,1 @@\n-      if (!always_clean && p->is_instance_klass() && InstanceKlass::cast(p)->is_not_initialized()) {\n+      if (!always_clean && is_not_yet_initialized(p)) {\n@@ -1845,1 +1856,1 @@\n-    if (!_always_clean && m->method_holder()->is_instance_klass() && InstanceKlass::cast(m->method_holder())->is_not_initialized()) {\n+    if (!_always_clean && is_not_yet_initialized(m->method_holder())) {\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"}]}