{"files":[{"patch":"@@ -1758,3 +1758,1 @@\n-                       (PreloadBlocking && (compile_reason == CompileTask::Reason_Preload)) ||\n-                       (compile_reason == CompileTask::Reason_Precompile)         ||\n-                       (compile_reason == CompileTask::Reason_PrecompileForPreload);\n+                       (PreloadBlocking && (compile_reason == CompileTask::Reason_Preload));\n@@ -2050,0 +2048,4 @@\n+void CompileBroker::wait_for_no_active_tasks() {\n+  CompileTask::wait_for_no_active_tasks();\n+}\n+\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -301,0 +301,4 @@\n+public:\n+  static void wait_for_no_active_tasks();\n+\n+private:\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  { MutexLocker locker(CompileTaskAlloc_lock);\n+  { MonitorLocker locker(CompileTaskAlloc_lock);\n","filename":"src\/hotspot\/share\/compiler\/compileLog.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+int CompileTask::_active_tasks = 0;\n@@ -46,1 +47,1 @@\n-  MutexLocker locker(CompileTaskAlloc_lock);\n+  MonitorLocker locker(CompileTaskAlloc_lock);\n@@ -60,0 +61,1 @@\n+  _active_tasks++;\n@@ -67,1 +69,1 @@\n-  MutexLocker locker(CompileTaskAlloc_lock);\n+  MonitorLocker locker(CompileTaskAlloc_lock);\n@@ -87,0 +89,11 @@\n+    _active_tasks--;\n+    if (_active_tasks == 0) {\n+      locker.notify_all();\n+    }\n+  }\n+}\n+\n+void CompileTask::wait_for_no_active_tasks() {\n+  MonitorLocker locker(CompileTaskAlloc_lock);\n+  while (_active_tasks > 0) {\n+    locker.wait();\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -98,0 +98,1 @@\n+  static int           _active_tasks;\n@@ -154,0 +155,1 @@\n+  static void         wait_for_no_active_tasks();\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-static int precompiled_total_count = 0;\n-\n@@ -48,37 +46,0 @@\n-  bool precompile(Method* m, TRAPS) {\n-    assert(!HAS_PENDING_EXCEPTION, \"\");\n-    assert(m->method_holder()->is_linked(), \"required\");\n-\n-    ++precompiled_total_count;\n-\n-    uint entries_cnt_before = SCCache::store_entries_cnt();\n-\n-    methodHandle mh(THREAD, m);\n-    CompileTask::CompileReason compile_reason = (_for_preload ? CompileTask::Reason_PrecompileForPreload\n-                                                              : CompileTask::Reason_Precompile);\n-    nmethod* nm = CompileBroker::compile_method(mh, InvocationEntryBci, _comp_level, methodHandle(), 0,\n-                                                true \/*requires_online_comp*\/, compile_reason,\n-                                                THREAD);\n-\n-    uint entries_cnt_after = SCCache::store_entries_cnt();\n-\n-    return (nm != nullptr) || (entries_cnt_after > entries_cnt_before);\n-  }\n-\n-  bool precompile(Method* m, ArchiveBuilder* builder, TRAPS) {\n-    bool status = precompile(m, THREAD);\n-\n-    LogStreamHandle(Info, precompile) log;\n-    if (log.is_enabled()) {\n-      ResourceMark rm;\n-      log.print(\"[%4d] T%d Compiled %s [%p\",\n-                precompiled_total_count, _comp_level + (_for_preload ? 1 : 0), m->external_name(), m);\n-      if (builder != nullptr) {\n-        Method* requested_m = builder->to_requested(builder->get_buffered_addr(m));\n-        log.print(\" -> %p\", requested_m);\n-      }\n-      log.print(\"] [%d] (%s)\", SCCache::store_entries_cnt(), (status ? \"success\" : \"FAILED\"));\n-    }\n-    return status;\n-  }\n-\n@@ -156,1 +117,1 @@\n-  void sort_methods_by_compile_id(GrowableArray<Method*>* methods) {\n+  void sort_methods_by_compile_id() {\n@@ -158,4 +119,4 @@\n-      case CompLevel_simple:            methods->sort(&compare_by_compile_id_tier1); break;\n-      case CompLevel_limited_profile:   methods->sort(&compare_by_compile_id_tier2); break;\n-      case CompLevel_full_profile:      methods->sort(&compare_by_compile_id_tier3); break;\n-      case CompLevel_full_optimization: methods->sort(&compare_by_compile_id_tier4); break;\n+      case CompLevel_simple:            _methods.sort(&compare_by_compile_id_tier1); break;\n+      case CompLevel_limited_profile:   _methods.sort(&compare_by_compile_id_tier2); break;\n+      case CompLevel_full_profile:      _methods.sort(&compare_by_compile_id_tier3); break;\n+      case CompLevel_full_optimization: _methods.sort(&compare_by_compile_id_tier4); break;\n@@ -167,3 +128,1 @@\n-  void precompile(ArchiveBuilder* builder, TRAPS) {\n-    sort_methods_by_compile_id(&_methods);\n-\n+  void schedule_compilations(TRAPS) {\n@@ -172,0 +131,2 @@\n+      methodHandle mh(THREAD, m);\n+      assert(mh()->method_holder()->is_linked(), \"required\");\n@@ -174,1 +135,5 @@\n-      precompile(m, builder, THREAD);\n+      CompileBroker::compile_method(mh, InvocationEntryBci, _comp_level,\n+                                    methodHandle(), 0,\n+                                    true \/*requires_online_comp*\/,\n+                                    _for_preload ? CompileTask::Reason_PrecompileForPreload : CompileTask::Reason_Precompile,\n+                                    THREAD);\n@@ -180,0 +145,35 @@\n+\n+  void print_compilation_status(ArchiveBuilder* builder) {\n+    int success_count = 0;\n+    const int log_comp_level = _comp_level + (_for_preload ? 1 : 0);\n+\n+    for (int i = 0; i < _methods.length(); i++) {\n+      Method* m = _methods.at(i);\n+\n+      bool is_success = !m->is_not_compilable(_comp_level);\n+      if (is_success) {\n+        success_count++;\n+      }\n+\n+      LogStreamHandle(Info, precompile) log;\n+      if (log.is_enabled()) {\n+        ResourceMark rm;\n+        log.print(\"[%4d] T%d Compiled %s [%p\", i, log_comp_level, m->external_name(), m);\n+        if (builder != nullptr) {\n+          Method* requested_m = builder->to_requested(builder->get_buffered_addr(m));\n+          log.print(\" -> %p\", requested_m);\n+        }\n+        log.print(\"] [%d] (%s)\", SCCache::store_entries_cnt(), (is_success ? \"success\" : \"FAILED\"));\n+      }\n+    }\n+\n+    log_info(precompile)(\"Precompilation for level %d finished (%d successful out of %d total)\",\n+      log_comp_level, success_count, _methods.length());\n+  }\n+\n+  void precompile(ArchiveBuilder* builder, TRAPS) {\n+    sort_methods_by_compile_id();\n+    schedule_compilations(THREAD);\n+    CompileBroker::wait_for_no_active_tasks();\n+    print_compilation_status(builder);\n+  }\n@@ -181,0 +181,1 @@\n+\n@@ -217,1 +218,0 @@\n-  log_info(precompile)(\"Precompilation finished (total: %d)\", precompiled_total_count);\n","filename":"src\/hotspot\/share\/compiler\/precompiler.cpp","additions":49,"deletions":49,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-Mutex*   CompileTaskAlloc_lock        = nullptr;\n+Monitor* CompileTaskAlloc_lock        = nullptr;\n@@ -358,1 +358,1 @@\n-  MUTEX_DEFL(CompileTaskAlloc_lock          , PaddedMutex  ,  MethodCompileQueue_lock);\n+  MUTEX_DEFL(CompileTaskAlloc_lock          , PaddedMonitor,  MethodCompileQueue_lock);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-extern Mutex*   CompileTaskAlloc_lock;           \/\/ a lock held when CompileTasks are allocated\n+extern Monitor* CompileTaskAlloc_lock;           \/\/ a lock held when CompileTasks are allocated\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}