{"files":[{"patch":"@@ -3136,1 +3136,1 @@\n-    log_info(scc, nmethod)(\"%d (L%d): Skip nmethod with expanded buffer '%s'\", comp_id, (int)comp_level, method->name_and_sig_as_C_string());\n+    log_warning(scc, nmethod)(\"%d (L%d): Skip nmethod with expanded buffer '%s'\", comp_id, (int)comp_level, method->name_and_sig_as_C_string());\n","filename":"src\/hotspot\/share\/code\/SCCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -545,1 +545,1 @@\n-    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == nullptr) {\n+    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_gcstub_size) && cb.blob() == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == nullptr) {\n+    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_gcstub_size) && cb.blob() == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -185,0 +185,11 @@\n+  \/\/ SCCache::write_nmethod bails when nmethod buffer is expanded.\n+  \/\/ Large methods would routinely expand the buffer, making themselves\n+  \/\/ ineligible for SCCache stores. In order to minimize this effect,\n+  \/\/ we default to larger default sizes.\n+  \/\/\n+  \/\/ Additionally, GC barrier stubs expand up to MAX_inst_size in mainline,\n+  \/\/ which also forced resizes often. Current code replaces it with\n+  \/\/ MAX_inst_gcstub_size, which equals to old MAX_inst_size, so GC stubs\n+  \/\/ still fit nicely, and do not force the resizes too often.\n+  \/\/\n+  \/\/ TODO: Revert this back to mainline once SCCache is fixed.\n@@ -186,1 +197,2 @@\n-    MAX_inst_size       = 2048,\n+    MAX_inst_size       = 16384,\n+    MAX_inst_gcstub_size= 2048,\n@@ -192,0 +204,2 @@\n+  static_assert(MAX_inst_gcstub_size <= MAX_inst_size);\n+\n","filename":"src\/hotspot\/share\/opto\/output.hpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}