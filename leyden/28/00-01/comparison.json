{"files":[{"patch":"@@ -540,17 +540,0 @@\n-int G1BarrierSetC2::estimate_stub_size() const {\n-  Compile* const C = Compile::current();\n-  BufferBlob* const blob = C->output()->scratch_buffer_blob();\n-  GrowableArray<G1BarrierStubC2*>* const stubs = barrier_set_state()->stubs();\n-  int size = 0;\n-\n-  for (int i = 0; i < stubs->length(); i++) {\n-    CodeBuffer cb(blob->content_begin(), checked_cast<CodeBuffer::csize_t>((address)C->output()->scratch_locs_memory() - blob->content_begin()));\n-    MacroAssembler masm(&cb);\n-    stubs->at(i)->emit_code(masm);\n-    size += cb.insts_size();\n-  }\n-\n-  \/\/ Add slop to avoid expansion during emit_stubs.\n-  return size + PhaseOutput::MAX_inst_size;\n-}\n-\n@@ -562,1 +545,1 @@\n-    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == nullptr) {\n+    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_gcstub_size) && cb.blob() == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -121,1 +121,0 @@\n-  virtual int estimate_stub_size() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == nullptr) {\n+    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_gcstub_size) && cb.blob() == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1365,2 +1365,0 @@\n-  \/\/ Despite the name \"stub\", GC barrier stubs are emitted into\n-  \/\/ the insn section, and should be counted in code_req.\n@@ -1368,1 +1366,1 @@\n-  code_req += bs->estimate_stub_size();\n+  stub_req += bs->estimate_stub_size();\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -189,0 +189,6 @@\n+  \/\/\n+  \/\/ Additionally, GC barrier stubs expand up to MAX_inst_size in mainline,\n+  \/\/ which also forced resizes often. Current code replaces it with\n+  \/\/ MAX_inst_gcstub_size, which equals to old MAX_inst_size, so GC stubs\n+  \/\/ still fit nicely, and do not force the resizes too often.\n+  \/\/\n@@ -191,1 +197,2 @@\n-    MAX_inst_size       = 8192,\n+    MAX_inst_size       = 16384,\n+    MAX_inst_gcstub_size= 2048,\n@@ -197,0 +204,2 @@\n+  static_assert(MAX_inst_gcstub_size <= MAX_inst_size);\n+\n","filename":"src\/hotspot\/share\/opto\/output.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}