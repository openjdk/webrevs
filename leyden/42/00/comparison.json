{"files":[{"patch":"@@ -1002,6 +1002,9 @@\n-extern \"C\" {\n-  static int uint_cmp(const void *i, const void *j) {\n-    uint a = *(uint *)i;\n-    uint b = *(uint *)j;\n-    return a > b ? 1 : a < b ? -1 : 0;\n-  }\n+static int uint_cmp(const void *i, const void *j) {\n+  uint a = *(uint *)i;\n+  uint b = *(uint *)j;\n+  return a > b ? 1 : a < b ? -1 : 0;\n+}\n+\n+static void log_counts_on_exit(const char* kind, uint counts[2]) {\n+  int total = counts[0]+counts[1];\n+  log_info(scc, exit)(\"  %s: total=%u(old=%u+new=%u)\", kind, total, counts[0], counts[1]);\n@@ -1057,7 +1060,7 @@\n-    uint not_entrant_nb = 0;\n-    uint stubs_count = 0;\n-    uint adapters_count = 0;\n-    uint shared_blobs_count = 0;\n-    uint c1_blobs_count = 0;\n-    uint opto_blobs_count = 0;\n-    uint total_blobs_count = 0;\n+\n+    \/\/ Arrays to store counts of each kind.\n+    uint not_entrant_nb[2] = {0};\n+    uint stubs_count[2] = {0};\n+    uint adapters_count[2] = {0};\n+    uint blobs_count[2] = {0};\n+    uint nmethods_count[2] = {0};\n@@ -1065,0 +1068,1 @@\n+\n@@ -1073,1 +1077,1 @@\n-          not_entrant_nb++;\n+          not_entrant_nb[0]++;\n@@ -1083,15 +1087,9 @@\n-        } else if (entries_address[i].kind() == SCCEntry::Adapter) {\n-          adapters_count++;\n-        } else if (entries_address[i].kind() == SCCEntry::Stub) {\n-          stubs_count++;\n-        } else if (entries_address[i].kind() == SCCEntry::Blob) {\n-          total_blobs_count++;\n-          if (entries_address[i].comp_level() == CompLevel_none) {\n-            shared_blobs_count++;\n-          } else if ((entries_address[i].comp_level() == CompLevel_simple) ||\n-                     (entries_address[i].comp_level() == CompLevel_limited_profile)) {\n-            c1_blobs_count++;\n-          } else {\n-            assert(entries_address[i].comp_level() == CompLevel_full_optimization, \"must be!\");\n-            opto_blobs_count++;\n-          }\n+        }\n+        if (_load_entries[i].kind() == SCCEntry::Adapter) {\n+          adapters_count[0]++;\n+        } else if (_load_entries[i].kind() == SCCEntry::Stub) {\n+          stubs_count[0]++;\n+        } else if (_load_entries[i].kind() == SCCEntry::Blob) {\n+          blobs_count[0]++;\n+        } else if (_load_entries[i].kind() == SCCEntry::Code) {\n+          nmethods_count[0]++;\n@@ -1127,1 +1125,1 @@\n-        not_entrant_nb++;\n+        not_entrant_nb[1]++;\n@@ -1138,0 +1136,9 @@\n+      if (entries_address[i].kind() == SCCEntry::Adapter) {\n+        adapters_count[1]++;\n+      } else if (entries_address[i].kind() == SCCEntry::Stub) {\n+        stubs_count[1]++;\n+      } else if (entries_address[i].kind() == SCCEntry::Blob) {\n+        blobs_count[1]++;\n+      } else if (entries_address[i].kind() == SCCEntry::Code) {\n+        nmethods_count[1]++;\n+      }\n@@ -1195,7 +1202,7 @@\n-    log_info(scc, exit)(\"Wrote %d SCCEntry entries (%d were not entrant, %d max size) to AOT Code Cache\", entries_count, not_entrant_nb, max_size);\n-    log_info(scc, exit)(\"  Stubs: total=%d\", stubs_count);\n-    log_info(scc, exit)(\"  Adapters: total=%d\", adapters_count);\n-    log_info(scc, exit)(\"  Shared Blobs: total=%d\",shared_blobs_count);\n-    log_info(scc, exit)(\"  C1 Blobs: total=%d\", c1_blobs_count);\n-    log_info(scc, exit)(\"  Opto Blobs: total=%d\", opto_blobs_count);\n-    log_info(scc, exit)(\"  All Blobs: total=%d\", total_blobs_count);\n+    log_info(scc, exit)(\"Wrote %d SCCEntry entries (%u were not entrant(old=%u+new=%u), %u max size) to AOT Code Cache\",\n+                        entries_count, not_entrant_nb[0]+not_entrant_nb[1], not_entrant_nb[0], not_entrant_nb[1], max_size);\n+    log_counts_on_exit(\"Adapters\", adapters_count);\n+    log_counts_on_exit(\"Stubs\", stubs_count);\n+    log_counts_on_exit(\"Blobs\", blobs_count);\n+    log_counts_on_exit(\"Nmethods\", nmethods_count);\n+\n","filename":"src\/hotspot\/share\/code\/SCCache.cpp","additions":44,"deletions":37,"binary":false,"changes":81,"status":"modified"}]}