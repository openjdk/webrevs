{"files":[{"patch":"@@ -1195,1 +1195,1 @@\n-          log_info(aot, codecache, exit)(\"Not entrant new entry comp_id: %d, comp_level: %d, hash: \" UINT32_FORMAT_X_0 \"%s\",\n+          log_info(aot, codecache, exit)(\"Skip not entrant preload code comp_id: %d, comp_level: %d, hash: \" UINT32_FORMAT_X_0 \"%s\",\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -401,8 +401,7 @@\n-    uint nmethods_count() const { uint count = _entries_count\n-                                       - _stubs_count\n-                                       - _shared_blobs_count\n-                                       - _C1_blobs_count\n-                                       - _C2_blobs_count\n-                                       - _adapters_count;\n-                                  if (UseNewCode) count += _preload_entries_count;\n-                                  return count; }\n+    uint nmethods_count() const { return _preload_entries_count\n+                                         + _entries_count\n+                                         - _stubs_count\n+                                         - _shared_blobs_count\n+                                         - _C1_blobs_count\n+                                         - _C2_blobs_count\n+                                         - _adapters_count; }\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.hpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}