{"files":[{"patch":"@@ -314,21 +314,12 @@\n-  CompileTask* task = env->task();\n-  assert(task != nullptr, \"\");\n-  Method* method = task->method();\n-  InstanceKlass* compiling_klass = method->method_holder();\n-  if (what->is_metadata()) {\n-    ciMetadata* md = what->as_metadata();\n-    if (md->is_loaded() && md->is_instance_klass()) {\n-      ciInstanceKlass* cik = md->as_instance_klass();\n-\n-      if (cik->is_initialized()) {\n-        InstanceKlass* ik = md->as_instance_klass()->get_instanceKlass();\n-        KlassTrainingData* ktd = KlassTrainingData::make(ik);\n-        if (ktd == nullptr) {\n-          \/\/ Allocation failure or snapshot in progress\n-          return;\n-        }\n-        \/\/ This JIT task is (probably) requesting that ik be initialized,\n-        \/\/ so add him to my _init_deps list.\n-        TrainingDataLocker l;\n-        add_init_dep(ktd);\n-      }\n+  ciMetadata* md = nullptr;\n+  if (what->is_object()) {\n+    md = what->as_object()->klass();\n+  } else if (what->is_metadata()) {\n+    md = what->as_metadata();\n+  }\n+  if (md != nullptr && md->is_loaded() && md->is_instance_klass()) {\n+    InstanceKlass* ik = md->as_instance_klass()->get_instanceKlass();\n+    KlassTrainingData* ktd = KlassTrainingData::make(ik);\n+    if (ktd == nullptr) {\n+      \/\/ Allocation failure or snapshot in progress\n+      return;\n@@ -336,0 +327,4 @@\n+    \/\/ This JIT task is (probably) requesting that ik be initialized,\n+    \/\/ so add it to my _init_deps list.\n+    TrainingDataLocker l;\n+    add_init_dep(ktd);\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":16,"deletions":21,"binary":false,"changes":37,"status":"modified"}]}