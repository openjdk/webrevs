{"files":[{"patch":"@@ -167,0 +167,1 @@\n+ *   VarHandle.releaseFence();  \/\/optional, see below\n@@ -214,4 +215,4 @@\n- * (Note: The barrier used by a class initializer is part of the from\n- * an unlocking operation mandated by JVMS 5.5, Step 10, while the\n- * barrier action of an instance initializer is specified quite\n- * differently, by JLS 17.5.1.  These two barriers have analogous\n+ * (Note: The barrier action of a class initializer is implicit in the\n+ * unlocking operation specified in JVMS 5.5, Step 10.  The barrier\n+ * action of an instance initializer is specified as a \"freeze action\"\n+ * in JLS 17.5.1.  These disparate barrier actions have parallel\n@@ -237,3 +238,3 @@\n- * A stable variable can appear to be in either of two states:\n- * Uninitialized set to a foldable value.\n- * Therfore, most code which reads stable variables should not assume\n+ * A stable variable can appear to be in either of two states,\n+ * either uninitialized, or else set to a permanent, foldable value.\n+ * Therefore, most code which reads stable variables should not assume\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/annotation\/Stable.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}