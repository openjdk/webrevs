{"files":[{"patch":"@@ -420,2 +420,6 @@\n-  while (!_queue.empty()) {\n-    CompileTask* task = _queue.pop();\n+\n+  bool added_stale_tasks = false;\n+  bool added_new_tasks = false;\n+\n+  CompileTask* task;\n+  while ((task = _queue.pop()) != nullptr) {\n@@ -427,0 +431,1 @@\n+      added_stale_tasks = true;\n@@ -429,0 +434,1 @@\n+      added_new_tasks = true;\n@@ -431,0 +437,12 @@\n+\n+  if (added_stale_tasks && !added_new_tasks) {\n+    \/\/ We have added stale tasks. There might be waiters that want\n+    \/\/ the notification these tasks have failed. Normally, this would\n+    \/\/ be done by a compiler thread that would perform the purge at\n+    \/\/ the end of some compilation. But, if we never added any tasks,\n+    \/\/ there is no guarantee compilers would run and do the purge.\n+    \/\/ Do the purge here and now to unblock the waiters.\n+    \/\/ NOTE: The call below recurses back to this method, but it should\n+    \/\/ converge to having no stale tasks at all.\n+    purge_stale_tasks();\n+  }\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"}]}