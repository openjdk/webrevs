{"files":[{"patch":"@@ -91,0 +91,2 @@\n+            System.out.println();\n+            System.out.println(\"Testing: testSetOrderedTrue reuse = \" + reuse);\n@@ -92,0 +94,1 @@\n+            AtomicBoolean unordered = new AtomicBoolean(false);\n@@ -97,0 +100,1 @@\n+                    printTimestamp(endTime);\n@@ -98,1 +102,1 @@\n-                        throw new Error(\"Events are not ordered! Reuse = \" + reuse);\n+                        unordered.set(true);\n@@ -104,0 +108,3 @@\n+            if (unordered.get()) {\n+                throw new Exception(\"Events are not ordered! Reuse = \" + reuse);\n+            }\n@@ -109,0 +116,2 @@\n+            System.out.println();\n+            System.out.println(\"Testing: testSetOrderedFalse reuse = \" + reuse);\n@@ -110,1 +119,1 @@\n-            AtomicBoolean unoreded = new AtomicBoolean(false);\n+            AtomicBoolean unordered = new AtomicBoolean(false);\n@@ -116,1 +125,1 @@\n-                    System.out.println(\"testSetOrderedFalse: endTime: \" + endTime);\n+                    printTimestamp(endTime);\n@@ -118,2 +127,1 @@\n-                        unoreded.set(true);\n-                        es.close();\n+                        unordered.set(true);\n@@ -124,1 +132,1 @@\n-                if (!unoreded.get()) {\n+                if (!unordered.get()) {\n@@ -131,0 +139,6 @@\n+    private static void printTimestamp(Instant timestamp) {\n+        long seconds = timestamp.getEpochSecond();\n+        long nanos = timestamp.getNano();\n+        System.out.println(timestamp + \" seconds = \" + seconds + \" nanos = \" + nanos);\n+    }\n+\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/filestream\/TestOrdered.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"}]}