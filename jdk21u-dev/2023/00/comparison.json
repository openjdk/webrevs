{"files":[{"patch":"@@ -1052,0 +1052,16 @@\n+bool WhiteBox::is_asan_enabled() {\n+#ifdef ADDRESS_SANITIZER\n+  return true;\n+#else\n+  return false;\n+#endif\n+}\n+\n+bool WhiteBox::is_ubsan_enabled() {\n+#ifdef UNDEFINED_BEHAVIOR_SANITIZER\n+  return true;\n+#else\n+  return false;\n+#endif\n+}\n+\n@@ -1835,0 +1851,8 @@\n+WB_ENTRY(jboolean, WB_IsAsanEnabled(JNIEnv* env))\n+  return (jboolean) WhiteBox::is_asan_enabled();\n+WB_END\n+\n+WB_ENTRY(jboolean, WB_IsUbsanEnabled(JNIEnv* env))\n+  return (jboolean) WhiteBox::is_ubsan_enabled();\n+WB_END\n+\n@@ -2761,0 +2785,2 @@\n+  {CC\"isAsanEnabled\", CC\"()Z\",                        (void*)&WB_IsAsanEnabled },\n+  {CC\"isUbsanEnabled\", CC\"()Z\",                       (void*)&WB_IsUbsanEnabled },\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,3 @@\n+  \/\/ provide info about enabling of Address Sanitizer \/ Undefined Behavior Sanitizer\n+  static bool is_asan_enabled();\n+  static bool is_ubsan_enabled();\n","filename":"src\/hotspot\/share\/prims\/whitebox.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -86,0 +86,2 @@\n+    vm.asan \\\n+    vm.ubsan \\\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+ * @comment ulimit clashes with the memory requirements of ASAN\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsFlagsWithUlimit.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+ * @comment loading of the jsig lib does currently not work well with ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestBreakSignalThreadDump.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+ * @comment loading of the jsig lib does currently not work well with ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/runtime\/XCheckJniJsig\/XCheckJSig.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+ * @comment ASAN changes the memory map dump slightly, but the test has rather strict requirements\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/SystemDumpMapTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+ * @comment ASAN changes the memory map dump slightly, but the test has rather strict requirements\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/SystemMapTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,0 +96,2 @@\n+    vm.asan \\\n+    vm.ubsan \\\n","filename":"test\/jdk\/TEST.ROOT","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+ * @comment ASAN keeps the 'unwanted' paths in the binaries because of its build options\n+ * @requires !vm.asan\n","filename":"test\/jdk\/build\/AbsPathsInImage.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,0 +134,2 @@\n+        map.put(\"vm.asan\", this::isAsanEnabled);\n+        map.put(\"vm.ubsan\", this::isUbsanEnabled);\n@@ -657,0 +659,9 @@\n+    \/\/ Sanitizer support\n+    protected String isAsanEnabled() {\n+        return \"\" + WB.isAsanEnabled();\n+    }\n+\n+    protected String isUbsanEnabled() {\n+        return \"\" + WB.isUbsanEnabled();\n+    }\n+\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -298,0 +298,4 @@\n+  \/\/ Sanitizers\n+  public native boolean isAsanEnabled();\n+  public native boolean isUbsanEnabled();\n+\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}