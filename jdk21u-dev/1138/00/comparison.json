{"files":[{"patch":"@@ -75,0 +75,3 @@\n+<li><a href=\"#testing-with-alternative-security-providers\"\n+id=\"toc-testing-with-alternative-security-providers\">Testing with\n+alternative security providers<\/a><\/li>\n@@ -592,0 +595,12 @@\n+<h3 id=\"testing-with-alternative-security-providers\">Testing with\n+alternative security providers<\/h3>\n+<p>Some security tests use a hardcoded provider for\n+<code>KeyFactory<\/code>, <code>Cipher<\/code>,\n+<code>KeyPairGenerator<\/code>, <code>KeyGenerator<\/code>,\n+<code>AlgorithmParameterGenerator<\/code>, <code>KeyAgreement<\/code>,\n+<code>Mac<\/code>, <code>MessageDigest<\/code>, <code>SecureRandom<\/code>,\n+<code>Signature<\/code>, <code>AlgorithmParameters<\/code>,\n+<code>Configuration<\/code>, <code>Policy<\/code>, or\n+<code>SecretKeyFactory<\/code> objects. Specify the\n+<code>-Dtest.provider.name=NAME<\/code> property to use a different\n+provider for the service(s).<\/p>\n","filename":"doc\/testing.html","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -618,0 +618,9 @@\n+### Testing with alternative security providers\n+\n+Some security tests use a hardcoded provider for `KeyFactory`, `Cipher`,\n+`KeyPairGenerator`, `KeyGenerator`, `AlgorithmParameterGenerator`,\n+`KeyAgreement`, `Mac`, `MessageDigest`, `SecureRandom`, `Signature`,\n+`AlgorithmParameters`, `Configuration`, `Policy`, or `SecretKeyFactory` objects.\n+Specify the `-Dtest.provider.name=NAME` property to use a different provider for\n+the service(s).\n+\n","filename":"doc\/testing.md","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        Provider provider = Security.getProvider(\n+                                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/CICO\/CICODESFuncTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -207,1 +207,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        String providerName = System.getProperty(\"test.provider.name\", \"SunJCE\");\n+        Provider provider = Security.getProvider(providerName);\n@@ -209,1 +210,1 @@\n-            throw new RuntimeException(\"SunJCE provider does not exist.\");\n+            throw new RuntimeException(providerName + \" provider does not exist.\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/CICO\/CICOSkipTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        String providerName = System.getProperty(\"test.provider.name\", \"SunJCE\");\n+        Provider provider = Security.getProvider(providerName);\n@@ -74,1 +75,1 @@\n-            throw new RuntimeException(\"SunJCE provider does not exist.\");\n+            throw new RuntimeException(providerName + \": provider does not exist.\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/CICO\/PBEFunc\/AESPBEWrapper.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        String providerName = System.getProperty(\"test.provider.name\", \"SunJCE\");\n+        Provider provider = Security.getProvider(providerName);\n@@ -63,1 +64,1 @@\n-            throw new RuntimeException(\"SunJCE provider does not exist.\");\n+            throw new RuntimeException(providerName + \": provider does not exist.\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/CICO\/PBEFunc\/DefaultPBEWrapper.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        String providerName = System.getProperty(\"test.provider.name\", \"SunJCE\");\n+        Provider provider = Security.getProvider(providerName);\n@@ -94,1 +95,1 @@\n-            throw new RuntimeException(\"SunJCE provider does not exist.\");\n+            throw new RuntimeException(providerName + \": provider does not exist.\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/CICO\/PBEFunc\/PBKDF2Wrapper.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/Encrypt.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,2 @@\n-            cipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+            cipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -128,1 +129,2 @@\n-            cipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+            cipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/GCMLargeDataKAT.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(\"AES\", \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(\"AES\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -214,1 +215,2 @@\n-        Cipher cipher = Cipher.getInstance(TRANSFORMATION, \"SunJCE\");\n+        Cipher cipher = Cipher.getInstance(TRANSFORMATION,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/GCMParameterSpecTest.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    static final String PROVIDER = \"SunJCE\";\n+    static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/KeyWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    static final String PROVIDER = \"SunJCE\";\n+    static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/ReadWriteSkip.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/SameBuffer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/SealedObjectTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/WrongAAD.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/CICO.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,2 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER =\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/CTR.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER =\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Padding.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,2 @@\n-        Cipher ci = Cipher.getInstance(ALGO, \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -47,1 +48,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Test4511676.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,2 @@\n-        Cipher ci = Cipher.getInstance(transformation, \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -51,1 +52,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Test4512524.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,2 @@\n-        Cipher ci = Cipher.getInstance(transformation, \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -50,1 +51,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Test4512704.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,2 @@\n-        Cipher ci = Cipher.getInstance(ALGO+\"\/\"+MODE+\"\/\"+PADDING, \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(ALGO+\"\/\"+MODE+\"\/\"+PADDING,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -58,1 +59,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Test4513830.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,4 @@\n-        Cipher ci = Cipher.getInstance(transformation, \"SunJCE\");\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Test4517355.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,4 @@\n-        Cipher ci = Cipher.getInstance(transformation, \"SunJCE\");\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/Test4626070.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestAESCipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    static final String SUNJCE = \"SunJCE\";\n+    static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -131,2 +131,2 @@\n-            ci = Cipher.getInstance(transformation, SUNJCE);\n-            KeyGenerator kg = KeyGenerator.getInstance(algo, SUNJCE);\n+            ci = Cipher.getInstance(transformation, PROVIDER);\n+            KeyGenerator kg = KeyGenerator.getInstance(algo, PROVIDER);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestAESCiphers\/Dynamic.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-        Security.removeProvider(SUNJCE);\n+        Security.removeProvider(PROVIDER);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestAESCiphers\/TestAESWithProviderChange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-        Provider pJCE = Security.getProvider(SUNJCE);\n-        Security.removeProvider(SUNJCE);\n+        Provider pJCE = Security.getProvider(PROVIDER);\n+        Security.removeProvider(PROVIDER);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestAESCiphers\/TestAESWithRemoveAddProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n-    permission java.security.SecurityPermission \"removeProvider.SunJCE\";\n-    permission java.security.SecurityPermission \"insertProvider.SunJCE\";\n+    permission java.security.SecurityPermission \"removeProvider.*\";\n+    permission java.security.SecurityPermission \"insertProvider.*\";\n@@ -6,0 +6,1 @@\n+    permission java.util.PropertyPermission \"test.provider.name\", \"read\";\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestAESCiphers\/testAES.policy","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(\"AES\", \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(\"AES\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -56,1 +57,2 @@\n-        Cipher encCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher encCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -58,1 +60,2 @@\n-        Cipher decCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher decCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestCICOWithGCM.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(\"AES\", \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(\"AES\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -56,1 +57,2 @@\n-        Cipher encCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher encCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -59,1 +61,2 @@\n-        Cipher decCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher decCipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestCICOWithGCMAndAAD.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestCopySafe.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,2 @@\n-        Cipher c = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher c = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestGCMKeyAndIvCheck.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGO, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGO,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -62,1 +63,2 @@\n-        Cipher ci = Cipher.getInstance(TRANS + \"\/NoPadding\", \"SunJCE\");\n+        Cipher ci = Cipher.getInstance(TRANS + \"\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -71,1 +73,2 @@\n-        ci = Cipher.getInstance(TRANS + \"\/ISO10126Padding\", \"SunJCE\");\n+        ci = Cipher.getInstance(TRANS + \"\/ISO10126Padding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -79,1 +82,2 @@\n-        ci = Cipher.getInstance(TRANS + \"\/ISO10126Padding\", \"SunJCE\");\n+        ci = Cipher.getInstance(TRANS + \"\/ISO10126Padding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestISO10126Padding.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,2 @@\n-        Cipher c = Cipher.getInstance(transformation, \"SunJCE\");\n+        Cipher c = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestKATForECB_IV.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -710,1 +710,2 @@\n-        Cipher c = Cipher.getInstance(transformation, \"SunJCE\");\n+        Cipher c = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestKATForECB_VK.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -516,1 +516,2 @@\n-        Cipher c = Cipher.getInstance(transformation, \"SunJCE\");\n+        Cipher c = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestKATForECB_VT.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,2 @@\n-        Cipher c = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher c = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -323,1 +324,2 @@\n-        Cipher c = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+        Cipher c = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestKATForGCM.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -53,1 +54,2 @@\n-                    Cipher c = Cipher.getInstance(transformation, \"SunJCE\");\n+                    Cipher c = Cipher.getInstance(transformation,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestNoPaddingModes.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,2 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER =\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestNonexpanding.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER =\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestSameBuffer.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-                                           \"SunJCE\");\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AES\/TestShortBuffer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,2 @@\n-                Cipher cipher = Cipher.getInstance(alg + \"\/CTR\/NoPadding\", \"SunJCE\");\n+                Cipher cipher = Cipher.getInstance(alg + \"\/CTR\/NoPadding\",\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/CTR\/CounterMode.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,1 @@\n-                                               \"SunJCE\");\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -197,1 +197,2 @@\n-                Cipher.getInstance(algo+\"\/CTS\/NoPadding\", \"SunJCE\");\n+                Cipher.getInstance(algo+\"\/CTS\/NoPadding\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -229,1 +230,2 @@\n-                Cipher.getInstance(algo+\"\/CBC\/NoPadding\", \"SunJCE\");\n+                Cipher.getInstance(algo+\"\/CBC\/NoPadding\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -297,1 +299,2 @@\n-                Cipher.getInstance(algo+ \"\/CTS\/NoPadding\", \"SunJCE\");\n+                Cipher.getInstance(algo+ \"\/CTS\/NoPadding\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/CTS\/CTSMode.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,2 @@\n-        Cipher c1 = Cipher.getInstance(\"DES\", \"SunJCE\");\n+        Cipher c1 = Cipher.getInstance(\"DES\",\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/DES\/KeyWrapping.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -262,3 +262,6 @@\n-        Cipher c1 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c2 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c3 = Cipher.getInstance(algo, \"SunJCE\");\n+        Cipher c1 = Cipher.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c2 = Cipher.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c3 = Cipher.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -321,3 +324,6 @@\n-        Cipher c1 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c2 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c3 = Cipher.getInstance(algo, \"SunJCE\");\n+        Cipher c1 = Cipher.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c2 = Cipher.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c3 = Cipher.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/KeyWrap\/NISTWrapKAT.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,2 @@\n-    private static final String SUN_JCE = \"SunJCE\";\n+    private static final String PROVIDER_NAME =\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -160,1 +161,1 @@\n-        Provider provider = Security.getProvider(SUN_JCE);\n+        Provider provider = Security.getProvider(PROVIDER_NAME);\n@@ -162,1 +163,1 @@\n-            throw new RuntimeException(\"SUN_JCE provider not exist\");\n+            throw new RuntimeException(PROVIDER_NAME + \" provider not exist\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/KeyWrap\/TestCipherKeyWrapperTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -223,1 +223,2 @@\n-                (\"RSA\", \"SunRsaSign\").generateKeyPair().getPrivate();\n+                (\"RSA\", System.getProperty(\"test.provider.name\", \"SunRsaSign\"))\n+                .generateKeyPair().getPrivate();\n@@ -231,1 +232,2 @@\n-            Cipher c = Cipher.getInstance(a, \"SunJCE\");\n+            Cipher c = Cipher.getInstance(a,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/KeyWrap\/TestGeneral.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,2 @@\n-        Cipher c = Cipher.getInstance(algo, \"SunJCE\");\n+        Cipher c = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/KeyWrap\/TestKeySizeCheck.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,2 @@\n-        Cipher c = Cipher.getInstance(cAlg, \"SunJCE\");\n+        Cipher c = Cipher.getInstance(cAlg,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/KeyWrap\/XMLEncKAT.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,2 @@\n-            Cipher cipher = Cipher.getInstance(algo, \"SunJCE\");\n+            Cipher cipher = Cipher.getInstance(algo,\n+                                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -125,1 +126,2 @@\n-            Cipher cipher = Cipher.getInstance(algo, \"SunJCE\");\n+            Cipher cipher = Cipher.getInstance(algo,\n+                                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/DecryptWithoutParameters.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,3 @@\n-            \"PBKDF2WithHmacSHA1\", \"SunJCE\");\n+            \"PBKDF2WithHmacSHA1\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/NegativeLength.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,2 @@\n-            Cipher c = Cipher.getInstance(algo, \"SunJCE\");\n+            Cipher c = Cipher.getInstance(algo,\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PBEInvalidParamsTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,2 @@\n-    private final static String SunJCEProvider = \"SunJCE\";\n+    private final static String PROVIDER_NAME =\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -63,1 +64,1 @@\n-                SecretKeyFactory.getInstance(algorithm, SunJCEProvider);\n+                SecretKeyFactory.getInstance(algorithm, PROVIDER_NAME);\n@@ -75,1 +76,1 @@\n-                SecretKeyFactory.getInstance(algorithm, SunJCEProvider);\n+                SecretKeyFactory.getInstance(algorithm, PROVIDER_NAME);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PBEKeyCleanupTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,2 @@\n-            SecretKeyFactory skf = SecretKeyFactory.getInstance(s, \"SunJCE\");\n+            SecretKeyFactory skf = SecretKeyFactory.getInstance(s,\n+                                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PBEKeysAlgorithmNames.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,2 @@\n-            Cipher c = Cipher.getInstance(algo, \"SunJCE\");\n+            Cipher c = Cipher.getInstance(algo,\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PBEParametersTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PBESameBuffer\/PBESameBuffer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,3 @@\n+    private static final String PROVIDER_NAME =\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\");\n+\n@@ -85,1 +88,1 @@\n-        Provider sunjce = Security.getProvider(\"SunJCE\");\n+        Provider sunjce = Security.getProvider(PROVIDER_NAME);\n@@ -166,1 +169,1 @@\n-            unsealedKey = (SecretKey) so.getObject(key, \"SunJCE\");\n+            unsealedKey = (SecretKey) so.getObject(key, PROVIDER_NAME);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PBESealedObject.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PKCS12Cipher.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,1 +182,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/PKCS12CipherKAT.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,2 @@\n-        Provider sunjce = Security.getProvider(\"SunJCE\");\n+        Provider sunjce = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/TestCipherKeyWrapperPBEKey.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-        Provider sunjce = Security.getProvider(\"SunJCE\");\n+        Provider sunjce = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/PBE\/TestCipherPBECons.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        cp = Security.getProvider(\"SunJCE\");\n+        cp = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -52,1 +52,2 @@\n-        Provider kfp = Security.getProvider(\"SunRsaSign\");\n+        Provider kfp = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestOAEP.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,2 @@\n-        cp = Security.getProvider(\"SunJCE\");\n+        cp = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -57,1 +58,2 @@\n-        Provider kfp = Security.getProvider(\"SunRsaSign\");\n+        Provider kfp = Security.getProvider(\n+                        System.getProperty(\"test.providername\", \"SunRsaSign\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestOAEPPadding.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,2 @@\n-        cp = Security.getProvider(\"SunJCE\");\n+        cp = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestOAEPParameterSpec.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,2 @@\n-        cp = Security.getProvider(\"SunJCE\");\n+        cp = Security.getProvider(\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -59,1 +60,2 @@\n-        Provider kfp = Security.getProvider(\"SunRsaSign\");\n+        Provider kfp = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestOAEPWithParams.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,4 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n-        Provider kfProvider = Security.getProvider(\"SunRsaSign\");\n+        Provider provider = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Provider kfProvider = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestOAEP_KAT.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -171,1 +171,2 @@\n-        p = Security.getProvider(\"SunJCE\");\n+        p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestRSA.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private final String SUNJCE = \"SunJCE\";\n+    private final String PROVIDER_NAME = System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -141,2 +141,2 @@\n-        Cipher ci = Cipher.getInstance(TRANSFORMATION, SUNJCE);\n-        KeyGenerator kg = KeyGenerator.getInstance(ALGORITHM, SUNJCE);\n+        Cipher ci = Cipher.getInstance(TRANSFORMATION, PROVIDER_NAME);\n+        KeyGenerator kg = KeyGenerator.getInstance(ALGORITHM, PROVIDER_NAME);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/TestCipher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(algo, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -49,1 +50,2 @@\n-        c = Cipher.getInstance(transformation, \"SunJCE\");\n+        c = Cipher.getInstance(transformation,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/TextLength\/SameBufferOverwrite.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,2 @@\n-        Cipher c = Cipher.getInstance(\"AES\", \"SunJCE\");\n+        Cipher c = Cipher.getInstance(\"AES\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/UTIL\/StrongOrUnlimited.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+            String providerName = System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -44,2 +45,2 @@\n-            Provider prov = Security.getProvider(\"SunJCE\");\n-            Security.removeProvider(\"SunJCE\");\n+            Provider prov = Security.getProvider(providerName);\n+            Security.removeProvider(providerName);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/UTIL\/SunJCEGetInstance.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,2 @@\n-        KeyPairGenerator kpgen = KeyPairGenerator.getInstance(\"DH\", \"SunJCE\");\n+        KeyPairGenerator kpgen = KeyPairGenerator.getInstance(\"DH\",\n+                                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -75,1 +76,2 @@\n-        KeyFactory kfac = KeyFactory.getInstance(\"DH\", \"SunJCE\");\n+        KeyFactory kfac = KeyFactory.getInstance(\"DH\",\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyFactory.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,2 @@\n-            KeyPairGenerator.getInstance(\"DH\", \"SunJCE\");\n+            KeyPairGenerator.getInstance(\"DH\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyGenSpeed.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,2 @@\n-            AlgorithmParameterGenerator apg = AlgorithmParameterGenerator.getInstance(\"DH\",\"SunJCE\");\n+            AlgorithmParameterGenerator apg = AlgorithmParameterGenerator.getInstance(\"DH\",\n+                                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -142,2 +143,4 @@\n-        keyGen = KeyPairGenerator.getInstance(algo,\"SunJCE\");\n-        ka = KeyAgreement.getInstance(algo,\"SunJCE\");\n+        keyGen = KeyPairGenerator.getInstance(algo,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        ka = KeyAgreement.getInstance(algo,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/SameDHKeyStressTest.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,2 @@\n-            KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DH\", \"SunJCE\");\n+            KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DH\",\n+                                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/SupportedDHKeys.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,2 @@\n-                AlgorithmParameterGenerator.getInstance(\"DH\", \"SunJCE\");\n+                AlgorithmParameterGenerator.getInstance(\"DH\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -57,1 +58,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DH\", \"SunJCE\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DH\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/SupportedDHParamGens.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DH\", \"SunJCE\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DH\",\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/TestExponentSize.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,2 @@\n-                        KeyPairGenerator.getInstance(\"DH\", \"SunJCE\");\n+                        KeyPairGenerator.getInstance(\"DH\",\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/UnsupportedDHKeys.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,2 @@\n-        SecretKeyFactory skf = SecretKeyFactory.getInstance(ALGO, \"SunJCE\");\n+        SecretKeyFactory skf = SecretKeyFactory.getInstance(ALGO,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyFactory\/PBKDF2HmacSHA1FactoryTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,2 @@\n-            SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA1\", \"SunJCE\");\n+            SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA1\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyFactory\/TestProviderLeak.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(algo, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyGenerator\/Test4628062.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(algo, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(algo,\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyGenerator\/Test6227536.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,2 @@\n-        KeyGenerator kg = KeyGenerator.getInstance(algo, \"SunJCE\");\n+        KeyGenerator kg = KeyGenerator.getInstance(algo,\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyGenerator\/TestExplicitKeyLength.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,2 @@\n-            Mac mac = Mac.getInstance(ALGO, \"SunJCE\");\n+            Mac mac = Mac.getInstance(ALGO,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -75,1 +76,2 @@\n-                    md = MessageDigest.getInstance(\"SHA-512\", \"SUN\");\n+                    md = MessageDigest.getInstance(\"SHA-512\",\n+                            System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/DigestCloneabilityTest.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-        Mac mac = Mac.getInstance(alg, \"SunJCE\");\n+        Mac mac = Mac.getInstance(alg,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/EmptyByteBufferTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,2 @@\n-    private static final String PROVIDER = \"SunJCE\";\n+    private static final String PROVIDER =\n+            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/HmacPBESHA1.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/HmacSaltLengths.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,2 @@\n-        Mac mac = Mac.getInstance(alg, \"SunJCE\");\n+        Mac mac = Mac.getInstance(alg,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/LargeByteBufferTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,2 @@\n-        Mac mac = Mac.getInstance(algo, \"SunJCE\");\n+        Mac mac = Mac.getInstance(algo,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -84,1 +85,2 @@\n-        mac = Mac.getInstance(algo, \"SunJCE\");\n+        mac = Mac.getInstance(algo,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/MacClone.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -336,1 +336,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/MacKAT.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,2 @@\n-            mac = Mac.getInstance(algo, \"SunJCE\");\n+            mac = Mac.getInstance(algo,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/MacSameTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-        Mac mac = Mac.getInstance(alg, \"SunJCE\");\n+        Mac mac = Mac.getInstance(alg,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Mac\/NullByteBufferTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-    private static final String PROVIDER_NAME = \"SunJCE\";\n+    private static final String PROVIDER_NAME =\n+            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/NSASuiteB\/TestAESOids.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,2 @@\n-    private static final String PROVIDER_NAME = \"SunJCE\";\n+    private static final String PROVIDER_NAME =\n+            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/NSASuiteB\/TestAESWrapOids.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,2 @@\n-    private static final String PROVIDER_NAME = \"SunJCE\";\n+    private static final String PROVIDER_NAME =\n+            System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/NSASuiteB\/TestHmacSHAOids.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        Provider provider = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestKeyMaterial.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-    private static final String SUNJCE = \"SunJCE\";\n+    private static final String PROVIDER_NAME =\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -76,1 +77,1 @@\n-        KeyAgreement aliceKeyAgree = KeyAgreement.getInstance(\"DH\", SUNJCE);\n+        KeyAgreement aliceKeyAgree = KeyAgreement.getInstance(\"DH\", PROVIDER_NAME);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestLeadingZeroes.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,1 +52,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        Provider provider = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestMasterSecret.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        Provider provider = Security.getProvider(\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestPRF.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        Provider provider = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestPRF12.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,2 @@\n-        Provider provider = Security.getProvider(\"SunJCE\");\n+        Provider provider = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestPremaster.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,2 @@\n-                                java.security.KeyPairGenerator.getInstance(\"DSA\", \"SUN\");\n+                                    java.security.KeyPairGenerator.getInstance(\"DSA\",\n+                                            System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/com\/sun\/jdi\/ClassesByName2Test.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        String provider = args[2];\n+        String provider = System.getProperty(\"test.provider.name\", args[2]);\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/KeyAgreementTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        String provider = args[1];\n+        String provider = System.getProperty(\"test.provider.name\", args[1]);\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/KeySizeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        String provider = args[1];\n+        String provider = System.getProperty(\"test.provider.name\", args[1]);\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/KeySpecTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        String provider = args[1];\n+        String provider = System.getProperty(\"test.provider.name\", args[1]);\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/MultiThreadTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        String provider = args[1];\n+        String provider = System.getProperty(\"test.provider.name\", args[1]);\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/NegativeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-        KeyFactory kf = KeyFactory.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyFactory kf = KeyFactory.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/java\/security\/KeyFactory\/GenerateRSAPrivateCrtKey.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -72,1 +72,2 @@\n-        KeyPairGenerator kg = KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyPairGenerator kg = KeyPairGenerator.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/java\/security\/KeyFactory\/KeyFactoryGetKeySpecForInvalidSpec.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/java\/security\/KeyPairGenerator\/GenerateRSAKeyPair.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-    private static final String SUN = \"SUN\";\n-    private static final String RSA = \"SunRsaSign\";\n-    private static final String JCE = \"SunJCE\";\n+    private static final String SUN = System.getProperty(\"test.provider.name\", \"SUN\");\n+    private static final String RSA = System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n+    private static final String JCE = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/java\/security\/KeyRep\/Serial.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+    permission java.util.PropertyPermission \"test.provider.name\", \"read\";\n","filename":"test\/jdk\/java\/security\/KeyRep\/Serial.policy","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Provider p = Security.getProvider(\"SUN\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/java\/security\/MessageDigest\/ByteBuffers.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+    private static String providerName = System.getProperty(\"test.provider.name\", \"SUN\");\n+\n@@ -49,5 +51,5 @@\n-            { \"MD2\", \"SUN\" }, { \"MD5\", \"SUN\" }, { \"SHA-1\", \"SUN\" },\n-            { \"SHA-224\", \"SUN\" }, { \"SHA-256\", \"SUN\" },\n-            { \"SHA-384\", \"SUN\" }, { \"SHA-512\", \"SUN\" },\n-            { \"SHA3-224\", \"SUN\" }, { \"SHA3-256\", \"SUN\" },\n-            { \"SHA3-384\", \"SUN\" }, { \"SHA3-512\", \"SUN\" }\n+            { \"MD2\", providerName }, { \"MD5\", providerName }, { \"SHA-1\", providerName },\n+            { \"SHA-224\", providerName }, { \"SHA-256\", providerName },\n+            { \"SHA-384\", providerName }, { \"SHA-512\", providerName },\n+            { \"SHA3-224\", providerName }, { \"SHA3-256\", providerName },\n+            { \"SHA3-384\", providerName }, { \"SHA3-512\", providerName }\n","filename":"test\/jdk\/java\/security\/MessageDigest\/TestCloneable.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,2 +90,3 @@\n-                validate(new SecureRandom(), \"SUN\",\n-                        SunEntries.DEF_SECURE_RANDOM_ALGO);\n+                validate(new SecureRandom(), System.getProperty(\"test.provider.name\", \"SUN\"),\n+                        System.getProperty(\"test.default.secure.random.algorithm.name\",\n+                                SunEntries.DEF_SECURE_RANDOM_ALGO));\n","filename":"test\/jdk\/java\/security\/SecureRandom\/DefaultAlgo.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        if (!provider.equals(\"SUN\")) {\n+        if (!provider.equals(System.getProperty(\"test.provider.name\", \"SUN\"))) {\n@@ -54,1 +54,1 @@\n-        provider = \"SUN\";\n+        provider = System.getProperty(\"test.provider.name\", \"SUN\");\n@@ -64,1 +64,1 @@\n-            provider = \"SUN\";\n+            provider = System.getProperty(\"test.provider.name\", \"SUN\");\n","filename":"test\/jdk\/java\/security\/SecureRandom\/DefaultProvider.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,2 @@\n-            Security.setProperty(STRONG_ALG_SEC_PROP, \"DRBG:SUN\");\n+            Security.setProperty(STRONG_ALG_SEC_PROP, \"DRBG:\" +\n+                    System.getProperty(\"test.provider.name\", SUN_PROVIDER));\n@@ -126,1 +127,2 @@\n-                                Security.getProvider(SUN_PROVIDER)),\n+                                Security.getProvider(\n+                                        System.getProperty(\"test.provider.name\", SUN_PROVIDER))),\n@@ -135,1 +137,2 @@\n-                matchExc(() -> SecureRandom.getInstance(srAlgo, SUN_PROVIDER),\n+                matchExc(() -> SecureRandom.getInstance(srAlgo,\n+                                System.getProperty(\"test.provider.name\", SUN_PROVIDER)),\n@@ -178,1 +181,2 @@\n-                                    Security.getProvider(SUN_PROVIDER)),\n+                                    Security.getProvider(System.getProperty(\n+                                            \"test.provider.name\", SUN_PROVIDER))),\n@@ -189,1 +193,1 @@\n-                                    SUN_PROVIDER),\n+                                    System.getProperty(\"test.provider.name\", SUN_PROVIDER)),\n@@ -309,1 +313,2 @@\n-        Asserts.assertEquals(sr.getProvider().getName(), SUN_PROVIDER);\n+        String expectedProviderName = System.getProperty(\"test.provider.name\", SUN_PROVIDER);\n+        Asserts.assertEquals(sr.getProvider().getName(), expectedProviderName);\n","filename":"test\/jdk\/java\/security\/SecureRandom\/GetInstanceTest.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,4 +44,8 @@\n-            md = MessageDigest.getInstance(\"SHA\", \"SUN\");\n-            md = MessageDigest.getInstance(\"sha\", \"SUN\");\n-            md = MessageDigest.getInstance(\"Sha-1\", \"SUN\");\n-            md = MessageDigest.getInstance(\"shA1\", \"SUN\");\n+            md = MessageDigest.getInstance(\"SHA\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n+            md = MessageDigest.getInstance(\"sha\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n+            md = MessageDigest.getInstance(\"Sha-1\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n+            md = MessageDigest.getInstance(\"shA1\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -57,3 +61,6 @@\n-            kGen = KeyPairGenerator.getInstance(\"DSA\", \"SUN\");\n-            kGen = KeyPairGenerator.getInstance(\"dsa\", \"SUN\");\n-            kGen = KeyPairGenerator.getInstance(\"dSA\", \"SUN\");\n+            kGen = KeyPairGenerator.getInstance(\"DSA\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n+            kGen = KeyPairGenerator.getInstance(\"dsa\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n+            kGen = KeyPairGenerator.getInstance(\"dSA\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -61,2 +68,3 @@\n-                                                \"SUN\");\n-            kGen = KeyPairGenerator.getInstance(\"1.2.840.10040.4.1\", \"SUN\");\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n+            kGen = KeyPairGenerator.getInstance(\"1.2.840.10040.4.1\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/java\/security\/Security\/CaseInsensitiveAlgNames.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,2 @@\n-        Provider p = Security.getProvider(\"SUN\");\n+        Provider p = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/java\/security\/Signature\/ByteBuffers.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-\/\/      showProvider(Security.getProvider(\"SUN\"));\n+\/\/      showProvider(Security.getProvider(System.getProperty(\"test.provider.name\", \"SUN\")));\n@@ -69,1 +69,2 @@\n-        sig = Signature.getInstance(\"NONEwithRSA\", \"SunJCE\");\n+        sig = Signature.getInstance(\"NONEwithRSA\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -71,1 +72,2 @@\n-        sig = Signature.getInstance(\"NONEwithRSA\", Security.getProvider(\"SunJCE\"));\n+        sig = Signature.getInstance(\"NONEwithRSA\", Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\")));\n","filename":"test\/jdk\/java\/security\/Signature\/NONEwithRSA.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,2 @@\n-        testDblInit(kp.getPrivate(), kp.getPublic(), true, \"SunRsaSign\");\n+        testDblInit(kp.getPrivate(), kp.getPublic(), true,\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n@@ -62,1 +63,1 @@\n-        String provName = \"SunRsaSign\";\n+        String provName = System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/java\/security\/Signature\/SignatureGetInstance.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,4 @@\n+        String dsaProviderName = System.getProperty(\"test.provider.name\", \"SUN\");\n+        String ecProviderName  = System.getProperty(\"test.provider.name\", \"SunEC\");\n+        String rsaProviderName = System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n+\n@@ -46,14 +50,14 @@\n-            { \"SHA1withDSA\", \"SUN\" }, { \"NONEwithDSA\", \"SUN\" },\n-            { \"SHA224withDSA\", \"SUN\" }, { \"SHA256withDSA\", \"SUN\" },\n-            { \"EdDSA\", \"SunEC\" }, { \"Ed25519\", \"SunEC\" }, { \"Ed448\", \"SunEC\" },\n-            { \"SHA1withECDSA\", \"SunEC\" }, { \"SHA224withECDSA\", \"SunEC\" },\n-            { \"SHA256withECDSA\", \"SunEC\" }, { \"SHA384withECDSA\", \"SunEC\" },\n-            { \"SHA512withECDSA\", \"SunEC\" }, { \"NONEwithECDSA\", \"SunEC\" },\n-            { \"MD2withRSA\", \"SunRsaSign\" }, { \"MD5withRSA\", \"SunRsaSign\" },\n-            { \"SHA1withRSA\", \"SunRsaSign\" }, { \"SHA224withRSA\", \"SunRsaSign\" },\n-            { \"SHA256withRSA\", \"SunRsaSign\" },\n-            { \"SHA384withRSA\", \"SunRsaSign\" },\n-            { \"SHA512withRSA\", \"SunRsaSign\" },\n-            { \"SHA512\/224withRSA\", \"SunRsaSign\" },\n-            { \"SHA512\/256withRSA\", \"SunRsaSign\" },\n-            { \"RSASSA-PSS\", \"SunRsaSign\" },\n+            { \"SHA1withDSA\", dsaProviderName }, { \"NONEwithDSA\", dsaProviderName },\n+            { \"SHA224withDSA\", dsaProviderName }, { \"SHA256withDSA\", dsaProviderName },\n+            { \"EdDSA\", ecProviderName }, { \"Ed25519\", ecProviderName }, { \"Ed448\", ecProviderName },\n+            { \"SHA1withECDSA\", ecProviderName }, { \"SHA224withECDSA\", ecProviderName },\n+            { \"SHA256withECDSA\", ecProviderName }, { \"SHA384withECDSA\", ecProviderName },\n+            { \"SHA512withECDSA\", ecProviderName }, { \"NONEwithECDSA\", ecProviderName },\n+            { \"MD2withRSA\", rsaProviderName }, { \"MD5withRSA\", rsaProviderName },\n+            { \"SHA1withRSA\", rsaProviderName }, { \"SHA224withRSA\", rsaProviderName },\n+            { \"SHA256withRSA\", rsaProviderName },\n+            { \"SHA384withRSA\", rsaProviderName },\n+            { \"SHA512withRSA\", rsaProviderName },\n+            { \"SHA512\/224withRSA\", rsaProviderName },\n+            { \"SHA512\/256withRSA\", rsaProviderName },\n+            { \"RSASSA-PSS\", rsaProviderName },\n","filename":"test\/jdk\/java\/security\/Signature\/TestCloneable.java","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,2 @@\n-        Provider p = Security.getProvider(\"SUN\");\n+        Provider p = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/java\/security\/Signature\/TestInitSignWithMyOwnRandom.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,4 @@\n-        SunMSCAPI(\"SunMSCAPI\");\n+        SunMSCAPI(\"SunMSCAPI\"),\n+        TestProvider_or_SunRsaSign(System.getProperty(\"test.provider.name\", \"SunRsaSign\")),\n+        TestProvider_or_Sun(System.getProperty(\"test.provider.name\", \"SUN\")),\n+        TestProvider_or_SunEC(System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -169,3 +172,3 @@\n-        new Test(SigAlg.SHA1withDSA, KeyAlg.DSA, Provider.Sun, 1024),\n-        new Test(SigAlg.SHA224withDSA, KeyAlg.DSA, Provider.Sun, 2048),\n-        new Test(SigAlg.SHA256withDSA, KeyAlg.DSA, Provider.Sun, 2048),\n+        new Test(SigAlg.SHA1withDSA, KeyAlg.DSA, Provider.TestProvider_or_Sun, 1024),\n+        new Test(SigAlg.SHA224withDSA, KeyAlg.DSA, Provider.TestProvider_or_Sun, 2048),\n+        new Test(SigAlg.SHA256withDSA, KeyAlg.DSA, Provider.TestProvider_or_Sun, 2048),\n@@ -193,1 +196,1 @@\n-            result &= runTest(new Test(pss, KeyAlg.RSA, Provider.SunRsaSign,\n+            result &= runTest(new Test(pss, KeyAlg.RSA, Provider.TestProvider_or_SunRsaSign,\n","filename":"test\/jdk\/java\/security\/SignedObject\/Chain.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        signature = Signature.getInstance(DSA, \"SUN\");\n+        signature = Signature.getInstance(DSA, System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/java\/security\/SignedObject\/Copy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,2 @@\n-    private static final Provider SUN = Security.getProvider(\"SUN\");\n+    private static final String providerName = System.getProperty(\"test.provider.name\", \"SUN\");\n+    private static final Provider provider = Security.getProvider(providerName);\n@@ -171,2 +172,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -177,2 +178,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -193,2 +194,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -199,2 +200,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -215,2 +216,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -221,2 +222,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -237,2 +238,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -243,2 +244,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -260,2 +261,2 @@\n-        run(m, NullPointerException.class, null, csp, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", csp, \"SUN\");\n+        run(m, NullPointerException.class, null, csp, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", csp, providerName);\n@@ -266,2 +267,2 @@\n-        run(m, NullPointerException.class, null, csp, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", csp, SUN);\n+        run(m, NullPointerException.class, null, csp, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", csp, provider);\n@@ -282,2 +283,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, CertificateException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, CertificateException.class, \"\", providerName);\n@@ -288,2 +289,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, CertificateException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, CertificateException.class, \"\", provider);\n@@ -308,2 +309,2 @@\n-        run(m, NoSuchAlgorithmException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NoSuchAlgorithmException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -314,2 +315,2 @@\n-        run(m, NoSuchAlgorithmException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NoSuchAlgorithmException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -332,2 +333,2 @@\n-        run(m, NullPointerException.class, null, cp, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", cp, \"SUN\");\n+        run(m, NullPointerException.class, null, cp, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", cp, providerName);\n@@ -339,2 +340,2 @@\n-        run(m, NullPointerException.class, null, cp, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", cp, SUN);\n+        run(m, NullPointerException.class, null, cp, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", cp, provider);\n@@ -355,2 +356,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -361,2 +362,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -377,2 +378,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -383,2 +384,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -399,2 +400,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -405,2 +406,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -421,2 +422,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -427,2 +428,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -443,2 +444,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -449,2 +450,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -465,2 +466,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -471,2 +472,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -491,2 +492,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, KeyStoreException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, KeyStoreException.class, \"\", providerName);\n@@ -497,2 +498,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, KeyStoreException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, KeyStoreException.class, \"\", provider);\n@@ -513,2 +514,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -519,2 +520,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -535,2 +536,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -541,2 +542,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -559,2 +560,2 @@\n-        run(m, NullPointerException.class, null, pp, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", pp, \"SUN\");\n+        run(m, NullPointerException.class, null, pp, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", pp, providerName);\n@@ -565,2 +566,2 @@\n-        run(m, NullPointerException.class, null, pp, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", pp, SUN);\n+        run(m, NullPointerException.class, null, pp, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", pp, provider);\n@@ -581,2 +582,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -587,2 +588,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -603,2 +604,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -609,2 +610,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -627,2 +628,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -633,2 +634,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -642,2 +643,2 @@\n-        run(m, NullPointerException.class, null, srp, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", srp, \"SUN\");\n+        run(m, NullPointerException.class, null, srp, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", srp, providerName);\n@@ -648,2 +649,2 @@\n-        run(m, NullPointerException.class, null, srp, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", srp, SUN);\n+        run(m, NullPointerException.class, null, srp, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", srp, provider);\n@@ -664,2 +665,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -670,2 +671,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n@@ -686,2 +687,2 @@\n-        run(m, NullPointerException.class, null, \"SUN\");\n-        run(m, NoSuchAlgorithmException.class, \"\", \"SUN\");\n+        run(m, NullPointerException.class, null, providerName);\n+        run(m, NoSuchAlgorithmException.class, \"\", providerName);\n@@ -692,2 +693,2 @@\n-        run(m, NullPointerException.class, null, SUN);\n-        run(m, NoSuchAlgorithmException.class, \"\", SUN);\n+        run(m, NullPointerException.class, null, provider);\n+        run(m, NoSuchAlgorithmException.class, \"\", provider);\n","filename":"test\/jdk\/java\/security\/misc\/GetInstanceNullsEmpties.java","additions":99,"deletions":98,"binary":false,"changes":197,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/ByteBuffers.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -360,1 +360,2 @@\n-            c = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+            c = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -363,1 +364,2 @@\n-            c = Cipher.getInstance(\"AES\/CBC\/PKCS5Padding\", \"SunJCE\");\n+            c = Cipher.getInstance(\"AES\/CBC\/PKCS5Padding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -383,1 +385,2 @@\n-            c = Cipher.getInstance(\"AES\/GCM\/NoPadding\", \"SunJCE\");\n+            c = Cipher.getInstance(\"AES\/GCM\/NoPadding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -386,1 +389,2 @@\n-            c = Cipher.getInstance(\"AES\/CBC\/PKCS5Padding\", \"SunJCE\");\n+            c = Cipher.getInstance(\"AES\/CBC\/PKCS5Padding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/CipherInputStreamExceptions.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,2 @@\n-        Cipher c = Cipher.getInstance(\"AES\", \"SunJCE\");\n+        Cipher c = Cipher.getInstance(\"AES\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/GetMaxAllowed.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,3 @@\n-        TestCipherMode test = new TestCipherMode(\"SunJCE\", TRANSFORMATIONS);\n+        TestCipherMode test = new TestCipherMode(\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"),\n+                            TRANSFORMATIONS);\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/TestCipherMode.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,2 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -52,1 +53,2 @@\n-        c = Cipher.getInstance(\"des\", \"SunJCE\");\n+        c = Cipher.getInstance(\"des\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -54,1 +56,2 @@\n-        c = Cipher.getInstance(\"des\/cbc\/pkcs5padding\", \"SunJCE\");\n+        c = Cipher.getInstance(\"des\/cbc\/pkcs5padding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -69,1 +72,2 @@\n-            c = Cipher.getInstance(\"DES\/XYZ\/PKCS5Padding\", \"SunJCE\");\n+            c = Cipher.getInstance(\"DES\/XYZ\/PKCS5Padding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -88,1 +92,2 @@\n-            c = Cipher.getInstance(\"DES\/CBC\/XYZPadding\", \"SunJCE\");\n+            c = Cipher.getInstance(\"DES\/CBC\/XYZPadding\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -107,1 +112,2 @@\n-            c = Cipher.getInstance(\"foo\", \"SunJCE\");\n+            c = Cipher.getInstance(\"foo\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -120,1 +126,2 @@\n-            c = Cipher.getInstance(\"foo\", \"SUN\");\n+            c = Cipher.getInstance(\"foo\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -126,1 +133,2 @@\n-            c = Cipher.getInstance(\"foo\", Security.getProvider(\"SUN\"));\n+            c = Cipher.getInstance(\"foo\", Security.getProvider(\n+                    System.getProperty(\"test.provider.name\", \"SUN\")));\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/TestGetInstance.java","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,2 @@\n-        Cipher cipher = Cipher.getInstance(\"DES\/CBC\/PKCS5Padding\", \"SunJCE\");\n+        Cipher cipher = Cipher.getInstance(\"DES\/CBC\/PKCS5Padding\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/CipherSpi\/DirectBBRemaining.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/CryptoPermission\/AllPermCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/CryptoPermission\/LowercasePermCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,1 +138,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/CryptoPermission\/RSANoLimit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-                SecretKeyFactory.getInstance(algo, \"SunJCE\");\n+                    SecretKeyFactory.getInstance(algo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -52,1 +53,2 @@\n-            Cipher c = Cipher.getInstance(algo, \"SunJCE\");\n+            Cipher c = Cipher.getInstance(algo,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/EncryptedPrivateKeyInfo\/GetAlgName.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-                (cipherAlg, \"SunJCE\");\n+                    (cipherAlg, System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -105,1 +105,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/EncryptedPrivateKeyInfo\/GetKeySpec.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-            sunjce = Security.getProvider(\"SunJCE\");\n+            sunjce = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -64,1 +64,1 @@\n-                SecretKeyFactory.getInstance(cipherAlg, \"SunJCE\");\n+                SecretKeyFactory.getInstance(cipherAlg, System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -167,1 +167,1 @@\n-            pkcs8Spec = epki.getKeySpec(null, \"SunJCE\");\n+            pkcs8Spec = epki.getKeySpec(null, System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -179,1 +179,1 @@\n-            pkcs8Spec = epki.getKeySpec(INVALID_KEY, \"SunJCE\");\n+            pkcs8Spec = epki.getKeySpec(INVALID_KEY, System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -185,1 +185,1 @@\n-            pkcs8Spec = epkiBad.getKeySpec(cipherKey, \"SunJCE\");\n+            pkcs8Spec = epkiBad.getKeySpec(cipherKey, System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -198,2 +198,3 @@\n-            Security.removeProvider(\"SunJCE\");\n-            pkcs8Spec = epki.getKeySpec(cipherKey, \"SunJCE\");\n+            Security.removeProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+            pkcs8Spec = epki.getKeySpec(cipherKey,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/EncryptedPrivateKeyInfo\/GetKeySpecException.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,2 @@\n-        Cipher c = Cipher.getInstance(cipherAlg, \"SunJCE\");\n+        Cipher c = Cipher.getInstance(cipherAlg,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/EncryptedPrivateKeyInfo\/GetKeySpecException2.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-                (cipherAlg, \"SunJCE\");\n+                    (cipherAlg, System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -104,1 +104,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/EncryptedPrivateKeyInfo\/GetKeySpecInvalidEncoding.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -52,1 +52,2 @@\n-        kg = KeyGenerator.getInstance(\"des\", \"SunJCE\");\n+        kg = KeyGenerator.getInstance(\"des\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -64,1 +65,2 @@\n-            kg = KeyGenerator.getInstance(\"foo\", \"SunJCE\");\n+            kg = KeyGenerator.getInstance(\"foo\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -77,1 +79,2 @@\n-            kg = KeyGenerator.getInstance(\"foo\", \"SUN\");\n+            kg = KeyGenerator.getInstance(\"foo\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -83,1 +86,2 @@\n-            kg = KeyGenerator.getInstance(\"foo\", Security.getProvider(\"SUN\"));\n+            kg = KeyGenerator.getInstance(\"foo\",\n+                    Security.getProvider(System.getProperty(\"test.provider.name\", \"SUN\")));\n","filename":"test\/jdk\/javax\/crypto\/KeyGenerator\/TestGetInstance.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,4 @@\n-            if (prvName.startsWith(\"SunJCE\")\n-                    || prvName.startsWith(\"SunPKCS11-\")) {\n+            if ((System.getProperty(\"test.provider.name\") != null &&\n+                    prvName.equals(System.getProperty(\"test.provider.name\"))) ||\n+                    (System.getProperty(\"test.provider.name\") == null &&\n+                            (prvName.startsWith(\"SunJCE\") || prvName.startsWith(\"SunPKCS11-\")))) {\n","filename":"test\/jdk\/javax\/crypto\/KeyGenerator\/TestKGParity.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/Mac\/ByteBuffers.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        Provider p = Security.getProvider(\"SunJCE\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -52,1 +52,1 @@\n-        mac = Mac.getInstance(\"hmacmd5\", \"SunJCE\");\n+        mac = Mac.getInstance(\"hmacmd5\", System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -64,1 +64,1 @@\n-            mac = Mac.getInstance(\"foo\", \"SunJCE\");\n+            mac = Mac.getInstance(\"foo\", System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -77,1 +77,1 @@\n-            mac = Mac.getInstance(\"foo\", \"SUN\");\n+            mac = Mac.getInstance(\"foo\", System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -83,1 +83,2 @@\n-            mac = Mac.getInstance(\"foo\", Security.getProvider(\"SUN\"));\n+            mac = Mac.getInstance(\"foo\", Security.getProvider(\n+                    System.getProperty(\"test.provider.name\", \"SUN\")));\n","filename":"test\/jdk\/javax\/crypto\/Mac\/TestGetInstance.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,2 @@\n-    private static final String SUN_JCE = \"SunJCE\";\n+    private static final String PROVIDER_NAME =\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\");\n@@ -80,1 +81,1 @@\n-                SUN_JCE);\n+                PROVIDER_NAME);\n@@ -83,1 +84,1 @@\n-        Cipher ci = Cipher.getInstance(algo.toString(), SUN_JCE);\n+        Cipher ci = Cipher.getInstance(algo.toString(), PROVIDER_NAME);\n","filename":"test\/jdk\/javax\/crypto\/SecretKeyFactory\/SecKFTranslateTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,2 @@\n-                SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA1\", \"SunJCE\");\n+                SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA1\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/SecretKeyFactory\/SecKeyFacSunJCEPrf.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,2 @@\n-        internalMac = Mac.getInstance(\"HmacSHA1\", \"SunJCE\");\n+        internalMac = Mac.getInstance(\"HmacSHA1\",\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/javax\/crypto\/SecretKeyFactory\/evilprov\/com\/evilprovider\/EvilHmacSHA1.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,2 @@\n-        Configuration c = Configuration.getInstance(JAVA_CONFIG, null, \"SUN\");\n+        Configuration c = Configuration.getInstance(JAVA_CONFIG, null,\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -92,1 +93,2 @@\n-            c = Configuration.getInstance(JAVA_CONFIG, null, \"SunRsaSign\");\n+            c = Configuration.getInstance(JAVA_CONFIG, null,\n+                    System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n@@ -115,1 +117,2 @@\n-                                Security.getProvider(\"SUN\"));\n+                                Security.getProvider(\n+                                        System.getProperty(\"test.provider.name\", \"SUN\")));\n@@ -122,1 +125,2 @@\n-                                Security.getProvider(\"SunRsaSign\"));\n+                                Security.getProvider(\n+                                        System.getProperty(\"test.provider.name\",\"SunRsaSign\")));\n@@ -189,1 +193,1 @@\n-                                \"SUN\");\n+                                System.getProperty(\"test.provider.name\",\"SUN\"));\n@@ -199,1 +203,1 @@\n-                                Security.getProvider(\"SUN\"));\n+                                Security.getProvider(System.getProperty(\"test.provider.name\",\"SUN\")));\n@@ -288,1 +292,1 @@\n-        if (\"SUN\".equals(c.getProvider().getName())) {\n+        if (System.getProperty(\"test.provider.name\",\"SUN\").equals(c.getProvider().getName())) {\n@@ -328,1 +332,1 @@\n-        if (\"SUN\".equals(c.getProvider().getName())) {\n+        if (System.getProperty(\"test.provider.name\",\"SUN\").equals(c.getProvider().getName())) {\n","filename":"test\/jdk\/javax\/security\/auth\/login\/Configuration\/GetInstance.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+    permission java.util.PropertyPermission \"test.provider.name\", \"read\";\n","filename":"test\/jdk\/javax\/security\/auth\/login\/Configuration\/GetInstanceSecurity.grantedPolicy","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-                        (JAVA_CONFIG, null, \"SUN\");\n+                        (JAVA_CONFIG, null, System.getProperty(\"test.provider.name\",\"SUN\"));\n@@ -62,1 +62,2 @@\n-                        (JAVA_CONFIG, null, Security.getProvider(\"SUN\"));\n+                        (JAVA_CONFIG, null, Security.getProvider(\n+                                System.getProperty(\"test.provider.name\",\"SUN\")));\n@@ -74,1 +75,2 @@\n-        Policy p = Policy.getInstance(\"JavaPolicy\", param, \"SUN\");\n+        Policy p = Policy.getInstance(\"JavaPolicy\", param,\n+                System.getProperty(\"test.provider.name\",\"SUN\"));\n@@ -91,1 +93,1 @@\n-                        (JAVA_CONFIG, uriParam, \"SUN\");\n+                        (JAVA_CONFIG, uriParam, System.getProperty(\"test.provider.name\",\"SUN\"));\n@@ -99,1 +101,2 @@\n-                        (JAVA_CONFIG, uriParam, Security.getProvider(\"SUN\"));\n+                        (JAVA_CONFIG, uriParam, Security.getProvider(\n+                                System.getProperty(\"test.provider.name\",\"SUN\")));\n","filename":"test\/jdk\/javax\/security\/auth\/login\/Configuration\/GetInstanceSecurity.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-\n+    permission java.util.PropertyPermission \"test.provider.name\", \"read\";\n","filename":"test\/jdk\/javax\/security\/auth\/login\/Configuration\/GetInstanceSecurity.policy","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,2 @@\n-                                AlgorithmParameters.getInstance(\"EC\", \"SunEC\");\n+                                AlgorithmParameters.getInstance(\"EC\",\n+                                    System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/ECDSAPrimitive.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-                        \"SunEC\");\n+                        System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -69,1 +69,2 @@\n-                ka = KeyAgreement.getInstance(\"ECDH\", \"SunEC\");\n+                ka = KeyAgreement.getInstance(\"ECDH\",\n+                            System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -86,1 +87,1 @@\n-                    \"EC\", \"SunEC\");\n+                    \"EC\", System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -99,1 +100,2 @@\n-            KeyFactory kf = KeyFactory.getInstance(\"EC\", \"SunEC\");\n+            KeyFactory kf = KeyFactory.getInstance(\"EC\",\n+                                System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/ECDSAPrvGreaterThanOrder.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -41,1 +41,2 @@\n-            keyGen = KeyPairGenerator.getInstance(\"EC\", \"SunEC\");\n+            keyGen = KeyPairGenerator.getInstance(\"EC\",\n+                    System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/InvalidCurve.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-                \"SunEC\", 256, DATA);\n+                System.getProperty(\"test.provider.name\", \"SunEC\"), 256, DATA);\n","filename":"test\/jdk\/sun\/security\/ec\/NSASuiteB\/TestSHAwithECDSASignatureOids.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-        KeyFactory.getInstance(oid, \"SunEC\");\n-        KeyPairGenerator.getInstance(oid, \"SunEC\");\n-        AlgorithmParameters.getInstance(oid, \"SunEC\");\n+        KeyFactory.getInstance(oid, System.getProperty(\"test.provider.name\", \"SunEC\"));\n+        KeyPairGenerator.getInstance(oid, System.getProperty(\"test.provider.name\", \"SunEC\"));\n+        AlgorithmParameters.getInstance(oid, System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/OidInstance.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,2 @@\n-            AlgorithmParameters.getInstance(\"EC\", \"SunEC\");\n+            AlgorithmParameters.getInstance(\"EC\",\n+                    System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -104,1 +105,2 @@\n-        KeyFactory kf = KeyFactory.getInstance(\"EC\", \"SunEC\");\n+        KeyFactory kf = KeyFactory.getInstance(\"EC\",\n+                            System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -109,1 +111,2 @@\n-        Signature sig = Signature.getInstance(alg, \"SunEC\");\n+        Signature sig = Signature.getInstance(alg,\n+                            System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/SignatureDigestTruncate.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,2 @@\n-            AlgorithmParameters.getInstance(\"EC\", \"SunEC\");\n+            AlgorithmParameters.getInstance(\"EC\",\n+                    System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -140,1 +141,2 @@\n-        KeyFactory kf = KeyFactory.getInstance(\"EC\", \"SunEC\");\n+        KeyFactory kf = KeyFactory.getInstance(\"EC\",\n+                System.getProperty(\"test.provider.name\", \"SunEC\"));\n@@ -144,1 +146,2 @@\n-        Signature sig = Signature.getInstance(td.sigName, \"SunEC\");\n+        Signature sig = Signature.getInstance(td.sigName,\n+                System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/SignatureKAT.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-            super(sigAlg, Chain.KeyAlg.EC, Chain.Provider.SunEC);\n+            super(sigAlg, Chain.KeyAlg.EC, Chain.Provider.TestProvider_or_SunEC);\n","filename":"test\/jdk\/sun\/security\/ec\/SignedObjectChain.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        Provider p = Security.getProvider(\"SunEC\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunEC\"));\n","filename":"test\/jdk\/sun\/security\/ec\/TestEC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdCRLSign.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdDSAKeyCompatibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdDSAKeySize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdDSANegativeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdDSAParamSpec.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdDSAReuseTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    private static final String PROVIDER = \"SunEC\";\n+    private static final String PROVIDER = System.getProperty(\"test.provider.name\", \"SunEC\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/EdDSATest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -465,4 +465,8 @@\n-        runCurveMixTest(\"SunEC\", \"Ed25519\", 448);\n-        runCurveMixTest(\"SunEC\", \"Ed25519\", \"Ed448\");\n-        runCurveMixTest(\"SunEC\", \"Ed448\", 255);\n-        runCurveMixTest(\"SunEC\", \"Ed448\", \"Ed25519\");\n+        runCurveMixTest(System.getProperty(\"test.provider.name\", \"SunEC\"),\n+                \"Ed25519\", 448);\n+        runCurveMixTest(System.getProperty(\"test.provider.name\", \"SunEC\"),\n+                \"Ed25519\", \"Ed448\");\n+        runCurveMixTest(System.getProperty(\"test.provider.name\", \"SunEC\"),\n+                \"Ed448\", 255);\n+        runCurveMixTest(System.getProperty(\"test.provider.name\", \"SunEC\"),\n+                \"Ed448\", \"Ed25519\");\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/TestEdDSA.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-        expected = \"SunJCE\";\n+        expected = System.getProperty(\"test.provider.name\", \"SunJCE\");\n","filename":"test\/jdk\/sun\/security\/jca\/PreferredProviderNegativeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,2 @@\n-        String[] provsForKPG = {\"SunRsaSign\", \"SunMSCAPI\"};\n+        String[] provsForKPG = {System.getProperty(\"test.provider.name\", \"SunRsaSign\"),\n+                \"SunMSCAPI\"};\n@@ -110,1 +111,2 @@\n-        String[] provsForSignature = {\"SunRsaSign\", \"SunMSCAPI\", \"-\"};\n+        String[] provsForSignature = {System.getProperty(\"test.provider.name\", \"SunRsaSign\"),\n+                \"SunMSCAPI\", \"-\"};\n","filename":"test\/jdk\/sun\/security\/mscapi\/InteropWithSunRsaSign.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,2 @@\n-        KeyFactory factory = KeyFactory.getInstance(\"DSA\", \"SUN\");\n+        KeyFactory factory = KeyFactory.getInstance(\"DSA\",\n+                                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs8\/TestLeadingZeros.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -96,3 +96,4 @@\n-        Cipher sunJCECipher = Cipher.getInstance(transformation, \"SunJCE\");\n-        sunJCECipher.init(Cipher.DECRYPT_MODE, key);\n-        byte[] sunJCEPlain = sunJCECipher.doFinal(cipherText.array());\n+        Cipher providerCipher = Cipher.getInstance(transformation,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        providerCipher.init(Cipher.DECRYPT_MODE, key);\n+        byte[] sunJCEPlain = providerCipher.doFinal(cipherText.array());\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/EncryptionPadding.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -262,3 +262,6 @@\n-        Cipher c1 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c2 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c3 = Cipher.getInstance(algo, \"SunJCE\");\n+        Cipher c1 = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c2 = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c3 = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -322,3 +325,6 @@\n-        Cipher c1 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c2 = Cipher.getInstance(algo, \"SunJCE\");\n-        Cipher c3 = Cipher.getInstance(algo, \"SunJCE\");\n+        Cipher c1 = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c2 = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+        Cipher c3 = Cipher.getInstance(algo,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/KeyWrap\/NISTWrapKAT.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -248,1 +248,2 @@\n-                (\"RSA\", \"SunRsaSign\").generateKeyPair().getPrivate();\n+                (\"RSA\", System.getProperty(\"test.provider.name\",\"SunRsaSign\"))\n+                .generateKeyPair().getPrivate();\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/KeyWrap\/TestGeneral.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -78,1 +78,2 @@\n-    private static Provider sunJCE = Security.getProvider(\"SunJCE\");\n+    private static Provider sunJCE = Security.getProvider(\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/PBECipher.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-                                                   \"SunJCE\");\n+                               System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestPKCS5PaddingError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,2 @@\n-            Cipher c2 = Cipher.getInstance(rsaAlgo, \"SunJCE\");\n+            Cipher c2 = Cipher.getInstance(rsaAlgo,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestRSACipher.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,2 @@\n-            Cipher cipherJce = Cipher.getInstance(rsaAlgo, \"SunJCE\");\n+            Cipher cipherJce = Cipher.getInstance(rsaAlgo,\n+                                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestRSACipherWrap.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,2 @@\n-        Cipher c2 = Cipher.getInstance(\"RSA\/ECB\/NoPadding\", \"SunJCE\");\n+        Cipher c2 = Cipher.getInstance(\"RSA\/ECB\/NoPadding\",\n+                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestRawRSACipher.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-                            \"SunJCE\");\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestSymmCiphers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-                                                   \"SunJCE\");\n+                               System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestSymmCiphersNoPad.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,2 @@\n-        ka2 = KeyAgreement.getInstance(\"DH\", \"SunJCE\");\n+        ka2 = KeyAgreement.getInstance(\"DH\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -104,1 +105,2 @@\n-        System.out.println(\"Derive \" + algorithm + \" using SunJCE...\");\n+        System.out.println(\"Derive \" + algorithm + \" using \" +\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\") + \"...\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyAgreement\/TestDH.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,2 @@\n-            KeyAgreement kbSunJCE = KeyAgreement.getInstance(\"DH\", \"SunJCE\");\n+            KeyAgreement kbSunJCE = KeyAgreement.getInstance(\"DH\",\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyAgreement\/TestInterop.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,2 @@\n-        KeyFactory dsaKf = KeyFactory.getInstance(\"DSA\", \"SUN\");\n+        KeyFactory dsaKf = KeyFactory.getInstance(\"DSA\",\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/Basic.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -69,1 +69,2 @@\n-    private static Provider sunJCE = Security.getProvider(\"SunJCE\");\n+    private static Provider sunJCE = Security.getProvider(\n+            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Mac\/PBAMac.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,2 @@\n-        MessageDigest md1 = MessageDigest.getInstance(alg, \"SUN\");\n+        MessageDigest md1 = MessageDigest.getInstance(alg,\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/MessageDigest\/ReinitDigest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,2 @@\n-                Signature.getInstance(\"RSASSA-PSS\", \"SunRsaSign\");\n+                Signature.getInstance(\"RSASSA-PSS\",\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/SigInteropPSS.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+        String providerName = System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n@@ -56,1 +57,1 @@\n-                Signature.getInstance(\"RSASSA-PSS\", \"SunRsaSign\");\n+                Signature.getInstance(\"RSASSA-PSS\", providerName);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/SigInteropPSS2.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DSA\", \"SUN\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DSA\",\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/TestDSAKeyLength.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,2 @@\n-};\n\\ No newline at end of file\n+    permission java.util.PropertyPermission \"test.provider.name\", \"read\";\n+};\n","filename":"test\/jdk\/sun\/security\/pkcs11\/policy","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/rsa\/GenKeyStore.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4,1 +4,2 @@\n-};\n\\ No newline at end of file\n+    permission java.util.PropertyPermission \"test.provider.name\", \"read\";\n+};\n","filename":"test\/jdk\/sun\/security\/pkcs11\/rsa\/rsakeys.ks.policy","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,2 @@\n-            AlgorithmParameterGenerator.getInstance(\"DSA\", \"SUN\");\n+            AlgorithmParameterGenerator.getInstance(\"DSA\",\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/DSA\/SupportedDSAParamGen.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,2 @@\n-                = AlgorithmParameterGenerator.getInstance(\"DSA\", \"SUN\");\n+                = AlgorithmParameterGenerator.getInstance(\"DSA\",\n+                    System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/DSA\/TestAlgParameterGenerator.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-        Provider provider = Security.getProvider(\"SUN\");\n+        Provider provider = Security.getProvider(System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/DSA\/TestDSA.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,2 @@\n-    private static final String PROV = \"SUN\";\n+    private static final String PROV =\n+                System.getProperty(\"test.provider.name\", \"SUN\");\n","filename":"test\/jdk\/sun\/security\/provider\/DSA\/TestDSA2.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,2 @@\n-        kpg = KeyPairGenerator.getInstance(\"DSA\", \"SUN\");\n+        kpg = KeyPairGenerator.getInstance(\"DSA\",\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -63,1 +64,2 @@\n-        kpg = KeyPairGenerator.getInstance(\"DSA\", \"SUN\");\n+        kpg = KeyPairGenerator.getInstance(\"DSA\",\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/DSA\/TestKeyPairGenerator.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-        Provider p = Security.getProvider(\"SUN\");\n+        Provider p = Security.getProvider(System.getProperty(\"test.provider.name\",\"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/MessageDigest\/DigestKAT.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-        MessageDigest md = MessageDigest.getInstance(algorithm, \"SUN\");\n+        MessageDigest md = MessageDigest.getInstance(algorithm,\n+                            System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/MessageDigest\/Offsets.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,2 @@\n-        Provider p = Security.getProvider(\"SUN\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/provider\/MessageDigest\/TestSHAClone.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,2 @@\n-    private static final String PROVIDER_NAME = \"SUN\";\n+    private static final String PROVIDER_NAME =\n+                System.getProperty(\"test.provider.name\", \"SUN\");\n","filename":"test\/jdk\/sun\/security\/provider\/NSASuiteB\/TestDSAGenParameterSpec.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,2 @@\n-    private static final String PROVIDER_NAME = \"SUN\";\n+    private static final String PROVIDER_NAME =\n+            System.getProperty(\"test.provider.name\", \"SUN\");\n","filename":"test\/jdk\/sun\/security\/provider\/NSASuiteB\/TestSHAOids.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-                \"SUN\", 1024, DATA);\n+                System.getProperty(\"test.provider.name\", \"SUN\"), 1024, DATA);\n","filename":"test\/jdk\/sun\/security\/provider\/NSASuiteB\/TestSHAwithDSASignatureOids.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,3 @@\n-                KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n-        generator.initialize(512);\n+                KeyPairGenerator.getInstance(\"RSA\",\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n+        generator.initialize(2048);\n@@ -58,1 +59,2 @@\n-        KeyFactory factory = KeyFactory.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyFactory factory = KeyFactory.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/BrokenRSAPrivateCrtKey.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/GenKeyStore.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,2 @@\n-    private static final String PROVIDER_NAME = \"SunRsaSign\";\n+    private static final String PROVIDER_NAME =\n+            System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/KeySizeTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,2 @@\n-    private static final String PROVIDER_NAME = \"SunRsaSign\";\n+    private static final String PROVIDER_NAME =\n+            System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/PrivateKeyEqualityTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+            System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/SignatureTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/SpecTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,2 @@\n-    private final static String PROVIDER = \"SunRsaSign\";\n+    private final static String PROVIDER =\n+            System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/TestCACerts.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -231,1 +231,2 @@\n-        KeyFactory kf = KeyFactory.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyFactory kf = KeyFactory.getInstance(\"RSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestKeyFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,2 @@\n-        provider = Security.getProvider(\"SunRsaSign\");\n+        provider = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestKeyPairGenerator.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,2 @@\n-                KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+                KeyPairGenerator.getInstance(\"RSA\",\n+                    System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestKeyPairGeneratorExponent.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,2 @@\n-            KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+            KeyPairGenerator.getInstance(\"RSA\",\n+                    System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestKeyPairGeneratorInit.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,2 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\",\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestKeyPairGeneratorLength.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,2 @@\n-        KeyFactory kf = KeyFactory.getInstance(keyAlgo, \"SunRsaSign\");\n+        KeyFactory kf = KeyFactory.getInstance(keyAlgo,\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n@@ -69,1 +70,2 @@\n-        kf = KeyFactory.getInstance(\"RSASSA-PSS\", \"SunRsaSign\");\n+        kf = KeyFactory.getInstance(\"RSASSA-PSS\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestRSAOidSupport.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,2 @@\n-        Provider p = Security.getProvider(\"SunRsaSign\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\",\"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestSigGen15.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,2 @@\n-        provider = Security.getProvider(\"SunRsaSign\");\n+        provider = Security.getProvider(\n+                        System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/TestSignatures.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,2 @@\n-        Signature s = Signature.getInstance(\"SHA1withRSA\", \"SunRsaSign\");\n+        Signature s = Signature.getInstance(\"SHA1withRSA\",\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/WithoutNULL.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/PSSKeyCompatibility.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+            System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/PSSParametersTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+                    System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/SerializedPSSKey.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/SignatureTest2.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,2 @@\n-    private static final String PROVIDER = \"SunRsaSign\";\n+    private static final String PROVIDER =\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\");\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/SignatureTestPSS.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,1 +134,2 @@\n-            KeyPairGenerator.getInstance(ALGO, \"SunRsaSign\");\n+            KeyPairGenerator.getInstance(ALGO,\n+                    System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n@@ -155,1 +156,2 @@\n-        KeyFactory kf = KeyFactory.getInstance(ALGO, \"SunRsaSign\");\n+        KeyFactory kf = KeyFactory.getInstance(ALGO,\n+                            System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/TestPSSKeySupport.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,2 @@\n-        Provider p = Security.getProvider(\"SunRsaSign\");\n+        Provider p = Security.getProvider(\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/TestSigGenPSS.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-            super(\"SHA\", \"SUN\");\n+            super(\"SHA\", System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -68,1 +68,1 @@\n-            super(\"SHA-256\", \"SUN\");\n+            super(\"SHA-256\", System.getProperty(\"test.provider.name\", \"SUN\"));\n","filename":"test\/jdk\/sun\/security\/ssl\/HandshakeHash\/DigestBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,2 @@\n-        verifyCRL(crlIssuerCertPubKey, \"SunRsaSign\");\n+        verifyCRL(crlIssuerCertPubKey,\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n@@ -110,1 +111,2 @@\n-            verifyCRL(crlIssuerCertPubKey, \"SUN\");\n+            verifyCRL(crlIssuerCertPubKey,\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -121,1 +123,2 @@\n-            verifyCRL(selfSignedCertPubKey, \"SunRsaSign\");\n+            verifyCRL(selfSignedCertPubKey,\n+                    System.getProperty(\"test.provider.name\",\"SunRsaSign\"));\n@@ -151,0 +154,1 @@\n+        System.out.println(\"Provider = \" + provider.getName());\n","filename":"test\/jdk\/sun\/security\/x509\/X509CRLImpl\/Verify.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,2 @@\n-        verifyCert(selfSignedCertPubKey,\"SunRsaSign\");\n+        verifyCert(selfSignedCertPubKey,\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n@@ -89,1 +90,2 @@\n-            verifyCert(selfSignedCertPubKey, \"SunJCE\");\n+            verifyCert(selfSignedCertPubKey,\n+                System.getProperty(\"test.provider.name\", \"SunJCE\"));\n@@ -101,1 +103,2 @@\n-            verifyCert(selfSignedCertPubKey, \"SUN\");\n+            verifyCert(selfSignedCertPubKey,\n+                System.getProperty(\"test.provider.name\", \"SUN\"));\n@@ -112,1 +115,2 @@\n-            verifyCert(crlIssuerCertPubKey, \"SunRsaSign\");\n+            verifyCert(crlIssuerCertPubKey,\n+                System.getProperty(\"test.provider.name\", \"SunRsaSign\"));\n","filename":"test\/jdk\/sun\/security\/x509\/X509CertImpl\/Verify.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}