{"files":[{"patch":"@@ -85,1 +85,1 @@\n-    for (int index = 0; index < indent; index ++) out->print(\" \");\n+    out->fill_to(indent);\n@@ -91,2 +91,5 @@\n-      \/\/ Print indent\n-      for (int index = 0; index < indent; index ++) out->print(\" \");\n+      out->fill_to(indent);\n+      out->print(\"[\" PTR_FORMAT \"]\", p2i(pc));\n+      \/\/ Print function and library; shorten library name to just its last component\n+      \/\/ for brevity, and omit it completely for libjvm.so\n+      bool function_printed = false;\n@@ -94,3 +97,15 @@\n-        out->print(\"[\" PTR_FORMAT \"] %s+0x%x\", p2i(pc), buf, offset);\n-      } else {\n-        out->print(\"[\" PTR_FORMAT \"]\", p2i(pc));\n+        out->print(\"%s+0x%x\", buf, offset);\n+        function_printed = true;\n+      }\n+      if ((!function_printed || !os::address_is_in_vm(pc)) &&\n+          os::dll_address_to_library_name(pc, buf, sizeof(buf), &offset)) {\n+        const char* libname = strrchr(buf, os::file_separator()[0]);\n+        if (libname != nullptr) {\n+          libname++;\n+        } else {\n+          libname = buf;\n+        }\n+        out->print(\" in %s\", libname);\n+        if (!function_printed) {\n+          out->print(\"+0x%x\", offset);\n+        }\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.cpp","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"}]}