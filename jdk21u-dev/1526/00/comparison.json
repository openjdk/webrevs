{"files":[{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6261336\n+ * @summary Tests that Choice inside ScrollPane opens at the right location\n+ *          after resize\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual BadConfigure\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+\n+public class BadConfigure\n+{\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+            Please resize the BadConfigure window using the left border.\n+            Now click on choice. Its popup will be opened.\n+            Please verify that the popup is opened right under the choice.\n+            \"\"\";\n+\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(35)\n+            .testUI(initialize())\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    private static Frame initialize() {\n+        Frame f = new Frame(\"BadConfigure\");\n+        f.setLayout(new BorderLayout());\n+        Choice ch = new Choice();\n+        f.add(ch, BorderLayout.NORTH);\n+        ch.add(\"One\");\n+        ch.add(\"One\");\n+        ch.add(\"One\");\n+        ch.add(\"One\");\n+        ch.add(\"One\");\n+        ch.add(\"One\");\n+        f.setSize(200, 200);\n+        f.validate();\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/BadConfigure\/BadConfigure.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4397883\n+ * @summary Tests that non-focusable Window doesn't grab focus\n+ * @key headful\n+ * @run main InvalidFocusLostEventTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Window;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+\n+public class InvalidFocusLostEventTest implements ActionListener {\n+    private static Frame f;\n+    private static Button b;\n+    private static KeyboardFocusManager fm;\n+    private static volatile Point bp;\n+    private static volatile int width, height;\n+    private static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            InvalidFocusLostEventTest test = new InvalidFocusLostEventTest();\n+            EventQueue.invokeAndWait(() -> test.createUI());\n+            runTest();\n+            \/\/ we should check focus after all events are processed,\n+            \/\/ since focus transfers are asynchronous\n+            robot.waitForIdle();\n+            if (fm.getFocusOwner() != b) {\n+                throw new RuntimeException(\"Failed: focus was lost\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private void createUI() {\n+        f = new Frame(\"InvalidFocusLostEventTest\");\n+        b = new Button(\"Press me\");\n+        fm = KeyboardFocusManager.getCurrentKeyboardFocusManager();\n+        b.addActionListener(this);\n+        f.add(b);\n+        f.pack();\n+        f.setLocationRelativeTo(null);\n+        f.setVisible(true);\n+    }\n+\n+    private static void runTest() throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        robot.setAutoWaitForIdle(true);\n+        EventQueue.invokeAndWait(() -> {\n+            bp = b.getLocationOnScreen();\n+            width = b.getWidth();\n+            height = b.getHeight();\n+        });\n+        robot.mouseMove(bp.x + width \/ 2, bp.y + height \/ 2 );\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+    }\n+\n+    public void actionPerformed(ActionEvent ev) {\n+        \/\/ pop up a non-focusable window\n+        Window win = new Window(f);\n+        win.setFocusableWindowState(false);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/InvalidFocusLostEventTest\/InvalidFocusLostEventTest.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}