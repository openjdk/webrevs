{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -58,0 +59,2 @@\n+    private static final AtomicBoolean reached1 = new AtomicBoolean();\n+    private static final AtomicBoolean reached2 = new AtomicBoolean();\n@@ -75,0 +78,1 @@\n+                reached1.set(true);\n@@ -87,0 +91,1 @@\n+                reached2.set(true);\n@@ -93,2 +98,2 @@\n-        awaitBlocked(thread1);\n-        awaitBlocked(thread2);\n+        awaitTrueAndBlocked(thread1, reached1);\n+        awaitTrueAndBlocked(thread2, reached2);\n@@ -111,2 +116,2 @@\n-    private static void awaitBlocked(Thread thread) throws InterruptedException {\n-        while (thread.getState() != Thread.State.BLOCKED) {\n+    private static void awaitTrueAndBlocked(Thread thread, AtomicBoolean flag) throws InterruptedException {\n+        while (!flag.get() || thread.getState() != Thread.State.BLOCKED) {\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreadDeadlocks.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}