{"files":[{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4624353\n+ * @summary Tests that Motif FileChooser is not able to show control buttons\n+ * @key headful\n+ * @run main bug4624353\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class bug4624353 {\n+    static volatile boolean passed = true;\n+    static JFrame fr;\n+    static JFileChooser fc;\n+\n+    public static void main(String args[]) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4624353\");\n+                fc = new JFileChooser();\n+                fc.setControlButtonsAreShown(false);\n+                fr.getContentPane().add(fc);\n+                fr.pack();\n+                fr.setVisible(true);\n+\n+                passAround(fc);\n+            });\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void passAround(Container c) {\n+        Component[] list = c.getComponents();\n+        if (list.length == 0) {\n+            return;\n+        }\n+        for (int i = 0; i < list.length; i++) {\n+            if (list[i] != null) {\n+                if ((list[i] instanceof JButton) &&\n+                        \"OK\".equals(((JButton)list[i]).getText())) {\n+                    passed = false;\n+                    return;\n+                }\n+                passAround((Container)list[i]);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4624353.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4673161\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests if JFileChooser preferred size depends on selected files\n+ * @run main bug4673161\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.UIManager;\n+\n+public class bug4673161 {\n+\n+  public static void main(String[] args) throws Exception {\n+    JFileChooser fc = new JFileChooser();\n+    Dimension d = fc.getPreferredSize();\n+    JFileChooser fc2 = new JFileChooser();\n+    File[] files = new File[50];\n+    for (int i = 0; i < 50; i++) {\n+      files[i] = new File(\"file\" + i);\n+    }\n+    fc2.setSelectedFiles(files);\n+    Dimension d2 = fc2.getPreferredSize();\n+    if (!d.equals(d2)) {\n+      throw new RuntimeException(\"Test failed: JFileChooser preferred \" +\n+              \"size depends on selected files\");\n+    }\n+\n+    UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+\n+    JFileChooser fc3 = new JFileChooser();\n+    d = fc3.getPreferredSize();\n+    fc2 = new JFileChooser();\n+    files = new File[50];\n+    for (int i = 0; i < 50; i++) {\n+      files[i] = new File(\"file\" + i);\n+    }\n+    fc2.setSelectedFiles(files);\n+    d2 = fc2.getPreferredSize();\n+    if (!d.equals(d2)) {\n+      throw new RuntimeException(\"Test failed: JFileChooser preferred \" +\n+              \"size depends on selected files\");\n+    }\n+  }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4673161.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4782168\n+ * @summary Tests if DefaultShellFolder.isHidden() crashes for the\n+           root folder on Solaris\n+ * @modules java.desktop\/sun.awt.shell\n+ * @run main bug4782168\n+ *\/\n+\n+public class bug4782168 {\n+\n+    public static void main(String args[]) throws Exception {\n+        sun.awt.shell.ShellFolder sf = sun.awt.shell.ShellFolder.\n+                getShellFolder(new java.io.File(\"\/\"));\n+        sf.isHidden();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4782168.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4822331\n+ * @summary setLaberFor does not transfer focus to the JSpinner editor\n+ * @library \/test\/lib\n+ * @key headful\n+ * @run main bug4822331\n+ *\/\n+\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.FlowLayout;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JSpinner;\n+import javax.swing.SwingUtilities;\n+import jdk.test.lib.Platform;\n+\n+public class bug4822331 {\n+\n+    static JFrame fr;\n+    static JButton button;\n+    static JSpinner spinner;\n+    static volatile boolean tfFocused = false;\n+    static volatile boolean passed = false;\n+\n+    public static void main(String []args) throws Exception {\n+        bug4822331 test = new bug4822331();\n+        test.init();\n+    }\n+\n+    public void init() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"Test\");\n+                fr.getContentPane().setLayout(new FlowLayout());\n+\n+                button = new JButton(\"Button\");\n+                fr.getContentPane().add(button);\n+\n+                spinner = new JSpinner();\n+                JLabel spinnerLabel = new JLabel(\"spinner\");\n+                spinnerLabel.setDisplayedMnemonic(KeyEvent.VK_S);\n+                spinnerLabel.setLabelFor(spinner);\n+                fr.getContentPane().add(spinnerLabel);\n+                fr.getContentPane().add(spinner);\n+\n+                JSpinner.DefaultEditor editor =\n+                        (JSpinner.DefaultEditor) spinner.getEditor();\n+                JFormattedTextField ftf = editor.getTextField();\n+                ftf.addFocusListener(new FocusAdapter() {\n+                    public void focusGained(FocusEvent e) {\n+                        passed = true;\n+                    }\n+                });\n+                fr.pack();\n+                fr.setVisible(true);\n+            });\n+            start();\n+            if ( !passed ) {\n+                throw new RuntimeException(\"The activation of spinner's \" +\n+                        \"mnemonic didn't focus the editor component.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public void start() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(50);\n+        robot.delay(1000);\n+        robot.waitForIdle();\n+        button.requestFocus();\n+        if (Platform.isOSX()) {\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_S);\n+            robot.keyRelease(KeyEvent.VK_S);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n+        } else {\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_S);\n+            robot.keyRelease(KeyEvent.VK_S);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JLabel\/bug4822331.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4191835\n+ * @summary JOptionPane should allow Dialog as window owner.\n+ * @key headful\n+ * @run main bug4191835\n+ *\/\n+\n+import java.awt.Dialog;\n+import javax.swing.JDialog;\n+import javax.swing.JOptionPane;\n+\n+public class bug4191835 {\n+\n+  public static void main(String[] args) {\n+    JOptionPane op = new JOptionPane();\n+    Dialog dlg = new Dialog(new JDialog());\n+    JDialog jd = op.createDialog(dlg, \"Dialog\");\n+  }\n+}\n","filename":"test\/jdk\/javax\/swing\/JOptionPane\/bug4191835.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}