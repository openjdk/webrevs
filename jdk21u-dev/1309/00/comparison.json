{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -42,1 +44,1 @@\n-    static final Random RAND = new Random(Integer.getInteger(\"jdk.incubator.vector.test.random-seed\", 1337));\n+    static final Random RAND = Utils.getRandomInstance();\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4744,1 +4747,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4773,1 +4776,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4807,1 +4810,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4836,1 +4839,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4874,2 +4877,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4931,2 +4934,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4744,1 +4747,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4773,1 +4776,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4807,1 +4810,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4836,1 +4839,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4874,2 +4877,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4931,2 +4934,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4744,1 +4747,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4773,1 +4776,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4807,1 +4810,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4836,1 +4839,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4874,2 +4877,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4931,2 +4934,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4744,1 +4747,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4773,1 +4776,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4807,1 +4810,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4836,1 +4839,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4874,2 +4877,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4931,2 +4934,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4749,1 +4752,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4778,1 +4781,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4812,1 +4815,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4841,1 +4844,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4879,2 +4882,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4936,2 +4939,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3550,1 +3553,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3579,1 +3582,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3613,1 +3616,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3642,1 +3645,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3680,2 +3683,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3737,2 +3740,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3550,1 +3553,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3579,1 +3582,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3613,1 +3616,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3642,1 +3645,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3680,2 +3683,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3737,2 +3740,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3550,1 +3553,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3579,1 +3582,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3613,1 +3616,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3642,1 +3645,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3680,2 +3683,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3737,2 +3740,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3550,1 +3553,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3579,1 +3582,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3613,1 +3616,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3642,1 +3645,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3680,2 +3683,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3737,2 +3740,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3555,1 +3558,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3584,1 +3587,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3618,1 +3621,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3647,1 +3650,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3685,2 +3688,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3742,2 +3745,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3561,1 +3564,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3590,1 +3593,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3624,1 +3627,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3653,1 +3656,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3691,2 +3694,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3748,2 +3751,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3561,1 +3564,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3590,1 +3593,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3624,1 +3627,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3653,1 +3656,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3691,2 +3694,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3748,2 +3751,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3561,1 +3564,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3590,1 +3593,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3624,1 +3627,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3653,1 +3656,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3691,2 +3694,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3748,2 +3751,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3561,1 +3564,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3590,1 +3593,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3624,1 +3627,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3653,1 +3656,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3691,2 +3694,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3748,2 +3751,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3566,1 +3569,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3595,1 +3598,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3629,1 +3632,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3658,1 +3661,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3696,2 +3699,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3753,2 +3756,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4788,1 +4791,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4817,1 +4820,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4851,1 +4854,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4880,1 +4883,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4918,2 +4921,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4975,2 +4978,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4788,1 +4791,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4817,1 +4820,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4851,1 +4854,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4880,1 +4883,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4918,2 +4921,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4975,2 +4978,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4788,1 +4791,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4817,1 +4820,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4851,1 +4854,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4880,1 +4883,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4918,2 +4921,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4975,2 +4978,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4788,1 +4791,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4817,1 +4820,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4851,1 +4854,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4880,1 +4883,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4918,2 +4921,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4975,2 +4978,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4793,1 +4796,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4822,1 +4825,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4856,1 +4859,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4885,1 +4888,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4923,2 +4926,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4980,2 +4983,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4740,1 +4743,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4769,1 +4772,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4803,1 +4806,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4832,1 +4835,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4870,2 +4873,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4927,2 +4930,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4740,1 +4743,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4769,1 +4772,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4803,1 +4806,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4832,1 +4835,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4870,2 +4873,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4927,2 +4930,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4740,1 +4743,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4769,1 +4772,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4803,1 +4806,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4832,1 +4835,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4870,2 +4873,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4927,2 +4930,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4740,1 +4743,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4769,1 +4772,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4803,1 +4806,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4832,1 +4835,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4870,2 +4873,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4927,2 +4930,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4745,1 +4748,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4774,1 +4777,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4808,1 +4811,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4837,1 +4840,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4875,2 +4878,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4932,2 +4935,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4735,1 +4738,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4764,1 +4767,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4798,1 +4801,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4827,1 +4830,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4865,2 +4868,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4922,2 +4925,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4735,1 +4738,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4764,1 +4767,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4798,1 +4801,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4827,1 +4830,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4865,2 +4868,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4922,2 +4925,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4735,1 +4738,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4764,1 +4767,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4798,1 +4801,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4827,1 +4830,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4865,2 +4868,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4922,2 +4925,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4735,1 +4738,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4764,1 +4767,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4798,1 +4801,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4827,1 +4830,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4865,2 +4868,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4922,2 +4925,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4740,1 +4743,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4769,1 +4772,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4803,1 +4806,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4832,1 +4835,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4870,2 +4873,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4927,2 +4930,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Slice-Masked-bop.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Slice-bop.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Slice-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,2 +6,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Unslice-Masked-bop.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,2 +4,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Unslice-bop.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Unslice-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}