{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+static NSInteger architecture = -1;\n@@ -61,1 +62,11 @@\n-static BOOL isValidDisplayMode(CGDisplayModeRef mode){\n+static BOOL isValidDisplayMode(CGDisplayModeRef mode) {\n+    \/\/ Workaround for apple bug FB13261205, since it only affects arm based macs\n+    \/\/ and arm support started with macOS 11 ignore the workaround for previous versions\n+    if (@available(macOS 11, *)) {\n+        if (architecture == -1) {\n+            architecture = [[NSRunningApplication currentApplication] executableArchitecture];\n+        }\n+        if (architecture == NSBundleExecutableArchitectureARM64) {\n+            return (CGDisplayModeGetPixelWidth(mode) >= 800);\n+        }\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CGraphicsDevice.m","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -462,1 +462,0 @@\n-java\/awt\/GraphicsDevice\/CheckDisplayModes.java 8266242 macosx-aarch64\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}