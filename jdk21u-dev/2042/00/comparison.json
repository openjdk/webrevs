{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,3 +24,0 @@\n-import java.awt.Button;\n-import java.awt.Dimension;\n-import java.awt.Frame;\n@@ -29,1 +26,0 @@\n-import java.awt.Panel;\n@@ -34,0 +30,1 @@\n+import java.io.File;\n@@ -37,1 +34,3 @@\n-import javax.swing.JOptionPane;\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.PrintRequestAttributeSet;\n+import javax.print.attribute.standard.Destination;\n@@ -42,1 +41,1 @@\n- * @summary Printer graphics must behave the same as screen graphics\n+ * @summary Printer graphics must throw expected exceptions\n@@ -44,3 +43,1 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual PrintNullString\n+ * @run main PrintNullString\n@@ -48,10 +45,6 @@\n-public class PrintNullString extends Frame {\n-    private static final String INSTRUCTIONS =\n-            \"This test should print a page which contains the same\\n\" +\n-            \"text messages as in the test window on the screen.\\n\" +\n-            \"\\n\" +\n-            \"The messages should contain only 'OK' and 'expected' messages.\\n\" +\n-            \"Press Pass if it's the case; otherwise press Fail.\\n\" +\n-            \"\\n\" +\n-            \"If the page fails to print, but there were no exceptions\\n\" +\n-            \"then the problem is likely elsewhere (i.e. your printer)\";\n+public class PrintNullString implements Printable {\n+    private final String nullStr = null;\n+    private final String emptyStr = \"\";\n+    private final AttributedString emptyAttStr = new AttributedString(emptyStr);\n+    private final AttributedCharacterIterator nullIterator = null;\n+    private final AttributedCharacterIterator emptyIterator = emptyAttStr.getIterator();\n@@ -64,7 +57,1 @@\n-        PassFailJFrame.builder()\n-                .instructions(INSTRUCTIONS)\n-                .testUI(PrintNullString::new)\n-                .rows((int) INSTRUCTIONS.lines().count() + 1)\n-                .columns(45)\n-                .build()\n-                .awaitAndCheck();\n+        new PrintNullString();\n@@ -73,24 +60,8 @@\n-    public PrintNullString() {\n-        super(\"PrintNullString\");\n-\n-        TextCanvas c = new TextCanvas();\n-        add(\"Center\", c);\n-\n-        Button b = new Button(\"Print\");\n-        add(\"South\", b);\n-        b.addActionListener(e -> {\n-            PrinterJob pj = PrinterJob.getPrinterJob();\n-            if (pj.printDialog()) {\n-                pj.setPrintable(c);\n-                try {\n-                    pj.print();\n-                } catch (PrinterException ex) {\n-                    ex.printStackTrace();\n-                    String msg = \"PrinterException: \" + ex.getMessage();\n-                    JOptionPane.showMessageDialog(b, msg, \"Error occurred\",\n-                            JOptionPane.ERROR_MESSAGE);\n-                    PassFailJFrame.forceFail(msg);\n-                }\n-            }\n-        });\n-        pack();\n+    public PrintNullString() throws PrinterException {\n+        PrinterJob pj = PrinterJob.getPrinterJob();\n+        pj.setPrintable(this, new PageFormat());\n+        PrintRequestAttributeSet pSet = new HashPrintRequestAttributeSet();\n+        File file = new File(\"out.prn\");\n+        file.deleteOnExit();\n+        pSet.add(new Destination(file.toURI()));\n+        pj.print(pSet);\n@@ -99,11 +70,4 @@\n-    private static class TextCanvas extends Panel implements Printable {\n-        private final String nullStr = null;\n-        private final String emptyStr = \"\";\n-        private final AttributedString emptyAttStr = new AttributedString(emptyStr);\n-        private final AttributedCharacterIterator nullIterator = null;\n-        private final AttributedCharacterIterator emptyIterator = emptyAttStr.getIterator();\n-\n-        @Override\n-        public void paint(Graphics g) {\n-            Graphics2D g2d = (Graphics2D) g;\n-            paint(g2d);\n+    @Override\n+    public int print(Graphics g, PageFormat pgFmt, int pgIndex) {\n+        if (pgIndex > 0) {\n+            return NO_SUCH_PAGE;\n@@ -112,5 +76,2 @@\n-        @Override\n-        public int print(Graphics g, PageFormat pgFmt, int pgIndex) {\n-            if (pgIndex > 0) {\n-                return NO_SUCH_PAGE;\n-            }\n+        Graphics2D g2d = (Graphics2D) g;\n+        g2d.translate(pgFmt.getImageableX(), pgFmt.getImageableY());\n@@ -118,3 +79,18 @@\n-            Graphics2D g2d = (Graphics2D) g;\n-            g2d.translate(pgFmt.getImageableX(), pgFmt.getImageableY());\n-            paint(g2d);\n+        \/\/ API 1: null & empty drawString(String, int, int);\n+        try {\n+            g2d.drawString(nullStr, 20, 40);\n+            throw new RuntimeException(\"FAILURE: No NPE for null String, int\");\n+        } catch (NullPointerException e) {\n+            g2d.drawString(\"caught expected NPE for null String, int\", 20, 40);\n+        }\n+\n+        g2d.drawString(emptyStr, 20, 60);\n+        g2d.drawString(\"OK for empty String, int\", 20, 60);\n+\n+        \/\/ API 2: null & empty drawString(String, float, float);\n+        try {\n+            g2d.drawString(nullStr, 20.0f, 80.0f);\n+            throw new RuntimeException(\"FAILURE: No NPE for null String, float\");\n+        } catch (NullPointerException e) {\n+            g2d.drawString(\"caught expected NPE for null String, float\", 20, 80);\n+        }\n@@ -122,1 +98,16 @@\n-            return PAGE_EXISTS;\n+        g2d.drawString(emptyStr, 20.0f, 100.0f);\n+        g2d.drawString(\"OK for empty String, float\", 20.0f, 100.f);\n+\n+        \/\/ API 3: null & empty drawString(Iterator, int, int);\n+        try {\n+            g2d.drawString(nullIterator, 20, 120);\n+            throw new RuntimeException(\"FAILURE: No NPE for null iterator, int\");\n+        } catch (NullPointerException e) {\n+            g2d.drawString(\"caught expected NPE for null iterator, int\", 20, 120);\n+        }\n+\n+        try {\n+            g2d.drawString(emptyIterator, 20, 140);\n+            throw new RuntimeException(\"FAILURE: No IAE for empty iterator, int\");\n+        } catch (IllegalArgumentException e) {\n+            g2d.drawString(\"caught expected IAE for empty iterator, int\", 20, 140);\n@@ -125,52 +116,6 @@\n-        private void paint(Graphics2D g2d) {\n-            \/\/ API 1: null & empty drawString(String, int, int);\n-            try {\n-                g2d.drawString(nullStr, 20, 40);\n-                g2d.drawString(\"FAILURE: No NPE for null String, int\", 20, 40);\n-            } catch (NullPointerException e) {\n-                g2d.drawString(\"caught expected NPE for null String, int\", 20, 40);\n-            }\n-\n-            g2d.drawString(emptyStr, 20, 60);\n-            g2d.drawString(\"OK for empty String, int\", 20, 60);\n-\n-            \/\/ API 2: null & empty drawString(String, float, float);\n-            try {\n-                g2d.drawString(nullStr, 20.0f, 80.0f);\n-                g2d.drawString(\"FAILURE: No NPE for null String, float\", 20, 80);\n-            } catch (NullPointerException e) {\n-                g2d.drawString(\"caught expected NPE for null String, float\", 20, 80);\n-            }\n-\n-            g2d.drawString(emptyStr, 20.0f, 100.0f);\n-            g2d.drawString(\"OK for empty String, float\", 20.0f, 100.f);\n-\n-            \/\/ API 3: null & empty drawString(Iterator, int, int);\n-            try {\n-                g2d.drawString(nullIterator, 20, 120);\n-                g2d.drawString(\"FAILURE: No NPE for null iterator, int\", 20, 120);\n-            } catch (NullPointerException e) {\n-                g2d.drawString(\"caught expected NPE for null iterator, int\", 20, 120);\n-            }\n-\n-            try {\n-                g2d.drawString(emptyIterator, 20, 140);\n-                g2d.drawString(\"FAILURE: No IAE for empty iterator, int\", 20, 140);\n-            } catch (IllegalArgumentException e) {\n-                g2d.drawString(\"caught expected IAE for empty iterator, int\", 20, 140);\n-            }\n-\n-            \/\/ API 4: null & empty drawString(Iterator, float, int);\n-            try {\n-                g2d.drawString(nullIterator, 20.0f, 160.0f);\n-                g2d.drawString(\"FAILURE: No NPE for null iterator, float\", 20, 160);\n-            } catch (NullPointerException e) {\n-                g2d.drawString(\"caught expected NPE for null iterator, float\", 20, 160);\n-            }\n-\n-            try {\n-                g2d.drawString(emptyIterator, 20.0f, 180.0f);\n-                g2d.drawString(\"FAILURE: No IAE for empty iterator, float\", 20, 180);\n-            } catch (IllegalArgumentException e) {\n-                g2d.drawString(\"caught expected IAE for empty iterator, float\", 20, 180);\n-            }\n+        \/\/ API 4: null & empty drawString(Iterator, float, int);\n+        try {\n+            g2d.drawString(nullIterator, 20.0f, 160.0f);\n+            throw new RuntimeException(\"FAILURE: No NPE for null iterator, float\");\n+        } catch (NullPointerException e) {\n+            g2d.drawString(\"caught expected NPE for null iterator, float\", 20, 160);\n@@ -179,3 +124,5 @@\n-        @Override\n-        public Dimension getPreferredSize() {\n-            return new Dimension(450, 250);\n+        try {\n+            g2d.drawString(emptyIterator, 20.0f, 180.0f);\n+            throw new RuntimeException(\"FAILURE: No IAE for empty iterator, float\");\n+        } catch (IllegalArgumentException e) {\n+            g2d.drawString(\"caught expected IAE for empty iterator, float\", 20, 180);\n@@ -183,0 +130,2 @@\n+\n+        return PAGE_EXISTS;\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintNullString.java","additions":75,"deletions":126,"binary":false,"changes":201,"status":"modified"}]}