{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.util.concurrent.CountDownLatch;\n@@ -149,0 +150,2 @@\n+\n+            var ready = new CountDownLatch(1);\n@@ -150,0 +153,1 @@\n+                ready.countDown();\n@@ -155,0 +159,1 @@\n+\n@@ -156,2 +161,2 @@\n-                \/\/ give thread time to be scheduled\n-                Thread.sleep(100);\n+                \/\/ wait for thread to run\n+                ready.await();\n@@ -324,0 +329,2 @@\n+\n+            var ready = new CountDownLatch(1);\n@@ -325,0 +332,1 @@\n+                ready.countDown();\n@@ -331,1 +339,3 @@\n-            Thread.sleep(100); \/\/ give thread time to be scheduled\n+            try {\n+                \/\/ wait for thread to run\n+                ready.await();\n@@ -333,2 +343,7 @@\n-            \/\/ unpark with another virtual thread, runs on same carrier thread\n-            factory.newThread(() -> LockSupport.unpark(vthread)).start();\n+                \/\/ unpark with another virtual thread, runs on same carrier thread\n+                Thread unparker = factory.newThread(() -> LockSupport.unpark(vthread));\n+                unparker.start();\n+                unparker.join();\n+            } finally {\n+                LockSupport.unpark(vthread);  \/\/ in case test fails\n+            }\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Reflection.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"}]}