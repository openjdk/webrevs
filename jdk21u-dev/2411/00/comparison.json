{"files":[{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectOutputStream;\n+\n+\/**\n+ * @test\n+ * @bug 8369032\n+ * @summary Checks the size of the serialized ICC_Profile for standard and\n+ *          non-standard profiles.\n+ *\/\n+public final class SerializedFormSize {\n+\n+    private static final ICC_Profile[] PROFILES = {\n+            ICC_Profile.getInstance(ColorSpace.CS_sRGB),\n+            ICC_Profile.getInstance(ColorSpace.CS_LINEAR_RGB),\n+            ICC_Profile.getInstance(ColorSpace.CS_CIEXYZ),\n+            ICC_Profile.getInstance(ColorSpace.CS_PYCC),\n+            ICC_Profile.getInstance(ColorSpace.CS_GRAY)\n+    };\n+\n+    public static void main(String[] args) throws Exception {\n+        for (ICC_Profile profile : PROFILES) {\n+            byte[] data = profile.getData();\n+            int dataSize = data.length;\n+            int min = 3; \/\/ At least version, name and data fields\n+            int max = 200; \/\/ Small enough to confirm no data saved\n+\n+            \/\/ Standard profile: should serialize to a small size, no data\n+            test(profile, min, max);\n+            \/\/ Non-standard profile: includes full data, but only once\n+            test(ICC_Profile.getInstance(data), dataSize, dataSize + max);\n+        }\n+    }\n+\n+    private static void test(ICC_Profile p, int min, int max) throws Exception {\n+        try (var bos = new ByteArrayOutputStream();\n+             var oos = new ObjectOutputStream(bos))\n+        {\n+            oos.writeObject(p);\n+            int size = bos.size();\n+            if (size < min || size > max) {\n+                System.err.println(\"Expected: >= \" + min + \" and <= \" + max);\n+                System.err.println(\"Actual: \" + size);\n+                throw new RuntimeException(\"Wrong size\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/SerializedFormSize.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}