{"files":[{"patch":"@@ -30,0 +30,3 @@\n+import java.util.Map;\n+import java.util.HashMap;\n+import java.util.Objects;\n@@ -35,0 +38,1 @@\n+import javax.print.attribute.Size2DSyntax;\n@@ -39,0 +43,1 @@\n+    private static Map<SizeNameChoiceItem, CustomMediaSizeName> customMap = new HashMap<>();\n@@ -194,0 +199,51 @@\n+    public static CustomMediaSizeName create(String name, String choice,\n+                                             float width, float length) {\n+        SizeNameChoiceItem key = new SizeNameChoiceItem(name, choice, width, length);\n+        CustomMediaSizeName value = customMap.get(key);\n+        if (value == null) {\n+            value = new CustomMediaSizeName(name, choice, width, length);\n+            customMap.put(key, value);\n+\n+            \/\/ add this new custom media size name to MediaSize array\n+            if ((width > 0.0) && (length > 0.0)) {\n+                try {\n+                    new MediaSize(width, length, Size2DSyntax.INCH, value);\n+                } catch (IllegalArgumentException e) {\n+                        \/* PDF printer in Linux for Ledger paper causes\n+                        \"IllegalArgumentException: X dimension > Y dimension\".\n+                        We rotate based on IPP spec. *\/\n+                    new MediaSize(length, width, Size2DSyntax.INCH, value);\n+                }\n+            }\n+        }\n+        return value;\n+    }\n+\n+    private static class SizeNameChoiceItem {\n+\n+        private final String name;\n+        private final String choice;\n+        private final float width;\n+        private final float length;\n+\n+        public SizeNameChoiceItem(String name, String choice, float width, float length) {\n+            this.name = name;\n+            this.choice = choice;\n+            this.width = width;\n+            this.length = length;\n+        }\n+\n+        public boolean equals(Object object) {\n+            if (this == object) return true;\n+            if (object == null || getClass() != object.getClass()) return false;\n+            SizeNameChoiceItem that = (SizeNameChoiceItem) object;\n+            return Objects.equals(this.name, that.name)\n+                    && Objects.equals(this.choice, that.choice) &&\n+                    Float.compare(this.width, that.width) == 0 &&\n+                    Float.compare(this.length, that.length) == 0;\n+        }\n+\n+        public int hashCode() {\n+            return Objects.hash(name, choice, width, length);\n+        }\n+    }\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/CustomMediaSizeName.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+import java.util.Objects;\n+import java.util.Map;\n+import java.util.HashMap;\n@@ -38,0 +41,1 @@\n+    private static Map<NameChoiceItem, CustomMediaTray> customMap = new HashMap<>();\n@@ -96,0 +100,32 @@\n+    public static CustomMediaTray create(String name, String choice) {\n+        NameChoiceItem key = new NameChoiceItem(name, choice);\n+        CustomMediaTray value = customMap.get(key);\n+        if (value == null) {\n+            value = new CustomMediaTray(name, choice);\n+            customMap.put(key, value);\n+        }\n+        return value;\n+    }\n+\n+    private static class NameChoiceItem {\n+\n+        private final String name;\n+        private final String choice;\n+\n+        public NameChoiceItem(String name, String choice) {\n+            this.name = name;\n+            this.choice = choice;\n+        }\n+\n+        public boolean equals(Object object) {\n+            if (this == object) return true;\n+            if (object == null || getClass() != object.getClass()) return false;\n+            NameChoiceItem that = (NameChoiceItem) object;\n+            return Objects.equals(this.name, that.name)\n+                    && Objects.equals(this.choice, that.choice);\n+        }\n+\n+        public int hashCode() {\n+            return Objects.hash(name, choice);\n+        }\n+    }\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/CustomMediaTray.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -228,2 +228,2 @@\n-            msn = new CustomMediaSizeName(media[i*2], media[i*2+1],\n-                                          width, length);\n+            msn = CustomMediaSizeName.create(media[i*2], media[i*2+1],\n+                                             width, length);\n@@ -235,13 +235,0 @@\n-\n-                \/\/ add this new custom msn to MediaSize array\n-                if ((width > 0.0) && (length > 0.0)) {\n-                    try {\n-                    new MediaSize(width, length,\n-                                  Size2DSyntax.INCH, msn);\n-                    } catch (IllegalArgumentException e) {\n-                        \/* PDF printer in Linux for Ledger paper causes\n-                        \"IllegalArgumentException: X dimension > Y dimension\".\n-                        We rotate based on IPP spec. *\/\n-                        new MediaSize(length, width, Size2DSyntax.INCH, msn);\n-                    }\n-                }\n@@ -272,2 +259,2 @@\n-            mt = new CustomMediaTray(media[(nPageSizes+i)*2],\n-                                     media[(nPageSizes+i)*2+1]);\n+            mt = CustomMediaTray.create(media[(nPageSizes+i)*2],\n+                                        media[(nPageSizes+i)*2+1]);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/CUPSPrinter.java","additions":4,"deletions":17,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1014,2 +1014,2 @@\n-        CustomMediaSizeName sampleSize = new CustomMediaSizeName(\"sample\", \"\",\n-                                                                 0, 0);\n+        CustomMediaSizeName sampleSize =\n+                CustomMediaSizeName.create(\"sample\", \"\", 0, 0);\n@@ -1022,1 +1022,1 @@\n-        CustomMediaTray sampleTray = new CustomMediaTray(\"sample\", \"\");\n+        CustomMediaTray sampleTray = CustomMediaTray.create(\"sample\", \"\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/IPPPrintService.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, BELLSOFT. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7001133\n+ * @summary OutOfMemoryError by CustomMediaSizeName implementation\n+ * @run main CustomMediaSizeNameOOMETest\n+ * @run main\/timeout=300\/othervm -Xmx8m CustomMediaSizeNameOOMETest\n+*\/\n+\n+import javax.print.PrintService;\n+import javax.print.PrintServiceLookup;\n+\n+public class CustomMediaSizeNameOOMETest {\n+\n+    private static final int MILLIS = 3000;\n+\n+    public static void main(String[] args) {\n+\n+        PrintService[] services = PrintServiceLookup.lookupPrintServices(null, null);\n+        if (services == null || services.length == 0) {\n+            return;\n+        }\n+\n+        for (PrintService service : services) {\n+            service.getUnsupportedAttributes(null, null);\n+        }\n+\n+        long time = System.currentTimeMillis() + MILLIS;\n+\n+        do {\n+            for (int i = 0; i < 2000; i++) {\n+                for (PrintService service : services) {\n+                    service.getAttributes();\n+                }\n+            }\n+        } while (time > System.currentTimeMillis());\n+    }\n+}\n","filename":"test\/jdk\/javax\/print\/CustomMediaSizeNameOOMETest.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}