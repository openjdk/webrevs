{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,1 @@\n+                        $(TESTLIBRARY_SRC_DIR)\/util\/FileUtils.java \\\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/Makefile","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        String classPath = tmpDir.toString();\n+        String classPath = tmpDir.path.toString();\n@@ -73,1 +73,1 @@\n-            int r = runProcess(pb, tmpDir.resolve(mainClassName + \".javac\").toString());\n+            int r = runProcess(pb, tmpDir.path.resolve(mainClassName + \".javac\").toString());\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/src\/jdk\/test\/lib\/jittester\/JavaCodeGenerator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.jittester;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import jdk.test.lib.util.FileUtils;\n+\n+\/**\n+  * A temporary directory wrapper.\n+  * Makes sure that the directory gets deleted after usage.\n+  *\/\n+public class TempDir {\n+    public final Path path;\n+\n+    \/**\n+     * Creates a temporary directory with a given suffix.\n+     * The directory is deep deleted on VM shutdown using a ShutdownHook.\n+     *\/\n+    public TempDir(String suffix) {\n+        try {\n+            path = Files.createTempDirectory(suffix).toAbsolutePath();\n+            Runtime.getRuntime().addShutdownHook(new Thread(this::delete));\n+        } catch (IOException e) {\n+            throw new Error(\"Can't create a tmp dir for \" + suffix, e);\n+        }\n+\n+        System.out.println(\"DBG: Temp folder created: '\" + path + \"'\");\n+    }\n+\n+    private void delete() {\n+        try {\n+            FileUtils.deleteFileTreeWithRetry(path);\n+            System.out.println(\"DBG: Temp folder deleted: '\" + path + \"'\");\n+        } catch (IOException exc) {\n+            throw new Error(\"Could not deep delete '\" + path + \"'\", exc);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/src\/jdk\/test\/lib\/jittester\/TempDir.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    protected final Path tmpDir;\n+    protected final TempDir tmpDir;\n@@ -57,5 +57,1 @@\n-        try {\n-            tmpDir = Files.createTempDirectory(suffix).toAbsolutePath();\n-        } catch (IOException e) {\n-            throw new Error(\"Can't get a tmp dir for \" + suffix, e);\n-        }\n+        tmpDir = new TempDir(suffix);\n@@ -67,1 +63,1 @@\n-        String classPath = tmpDir.toString() + File.pathSeparator\n+        String classPath = tmpDir.path.toString() + File.pathSeparator\n@@ -100,1 +96,1 @@\n-                \"-d\", tmpDir.toString(),\n+                \"-d\", tmpDir.path.toString(),\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/src\/jdk\/test\/lib\/jittester\/TestsGenerator.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"}]}