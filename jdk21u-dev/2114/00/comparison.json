{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.awt.Dimension;\n@@ -178,1 +177,1 @@\n-        private Part part;\n+        private final Part part;\n@@ -289,7 +288,2 @@\n-                \/\/ Assume for now that height is correct and derive width using the\n-                \/\/ ratio from the uxtheme part\n-                width = UIManager.getInt(\"InternalFrame.titleButtonHeight\") -2;\n-                Dimension d = XPStyle.getPartSize(Part.WP_CLOSEBUTTON, State.NORMAL);\n-                if (d != null && d.width != 0 && d.height != 0) {\n-                    width = (int) ((float) width * d.width \/ d.height);\n-                }\n+                \/\/ Assume for now that height is correct and derive width from height\n+                width = UIManager.getInt(\"InternalFrame.titleButtonHeight\") + 10;\n@@ -297,4 +291,1 @@\n-                width = UIManager.getInt(\"InternalFrame.titleButtonWidth\") -2;\n-            }\n-            if (XPStyle.getXP() != null) {\n-                width -= 2;\n+                width = UIManager.getInt(\"InternalFrame.titleButtonHeight\") - 2;\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsIconFactory.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,9 +28,16 @@\n-import sun.swing.SwingUtilities2;\n-\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.UIManager;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.BasicInternalFrameTitlePane;\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.GradientPaint;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Paint;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n@@ -41,1 +48,20 @@\n-import static com.sun.java.swing.plaf.windows.TMSchema.*;\n+import javax.swing.BorderFactory;\n+import javax.swing.Icon;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.JSeparator;\n+import javax.swing.LookAndFeel;\n+import javax.swing.UIDefaults;\n+import javax.swing.UIManager;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicInternalFrameTitlePane;\n+\n+import sun.swing.SwingUtilities2;\n+\n+import static com.sun.java.swing.plaf.windows.TMSchema.Part;\n+import static com.sun.java.swing.plaf.windows.TMSchema.Prop;\n+import static com.sun.java.swing.plaf.windows.TMSchema.State;\n@@ -71,1 +97,0 @@\n-        buttonWidth     = UIManager.getInt(\"InternalFrame.titleButtonWidth\")  - 4;\n@@ -80,7 +105,2 @@\n-            \/\/ Assume for now that height is correct and derive width using the\n-            \/\/ ratio from the uxtheme part\n-            buttonWidth = buttonHeight;\n-            Dimension d = XPStyle.getPartSize(Part.WP_CLOSEBUTTON, State.NORMAL);\n-            if (d != null && d.width != 0 && d.height != 0) {\n-                buttonWidth = (int) ((float) buttonWidth * d.width \/ d.height);\n-            }\n+            \/\/ Assume for now that height is correct and derive width from height\n+            buttonWidth = buttonHeight + 14;\n@@ -88,1 +108,1 @@\n-            buttonWidth += 2;\n+            buttonWidth = buttonHeight + 2;\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsInternalFrameTitlePane.java","additions":40,"deletions":20,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8140527\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @summary InternalFrame has incorrect title button width\n+ * @run main InternalFrameTitleButtonTest\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Robot;\n+\n+import javax.swing.Icon;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.basic.BasicInternalFrameUI;\n+\n+public class InternalFrameTitleButtonTest {\n+\n+    private static JFrame frame;\n+    private static JInternalFrame iframe;\n+\n+    public static void main(String[] args) throws Exception {\n+        String osName = System.getProperty(\"os.name\");\n+        if (!osName.toLowerCase().contains(\"win\")) {\n+            System.out.println(\"The test is applicable only for Windows.\");\n+            return;\n+        }\n+\n+        UIManager.setLookAndFeel(\n+                   \"com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel\");\n+        try {\n+            test(2);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+\n+        UIManager.setLookAndFeel(\n+              \"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        try {\n+            test(14);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+\n+        System.out.println(\"ok\");\n+    }\n+\n+    private static void test(final int widthAdd) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame();\n+\n+            JDesktopPane pane = new JDesktopPane();\n+            frame.setContentPane(pane);\n+            frame.setSize(400, 400);\n+            frame.setVisible(true);\n+\n+            iframe = new JInternalFrame(\"Mail Reader\", true,\n+                    true, true, true);\n+            iframe.setSize(200, 200);\n+            pane.add(iframe);\n+            iframe.setVisible(true);\n+        });\n+\n+        Robot robot = new Robot();\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            JComponent title = ((BasicInternalFrameUI) iframe.getUI()).getNorthPane();\n+            for (int i = 0; i < title.getComponentCount(); i++) {\n+                Component c = title.getComponent(i);\n+                if (c instanceof JButton button\n+                    && !testButtonSize(button, widthAdd)) {\n+                    throw new RuntimeException(\"Wrong title icon size\");\n+                }\n+            }\n+        });\n+    }\n+\n+    private static boolean testButtonSize(final JButton button,\n+                                          final int widthAdd) {\n+        int height = UIManager.getInt(\"InternalFrame.titleButtonHeight\") - 4;\n+        Icon icon = button.getIcon();\n+        return height == button.getHeight()\n+               && (height + widthAdd) == button.getWidth()\n+               && height == icon.getIconHeight()\n+               && (height + widthAdd) == icon.getIconWidth();\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/InternalFrameTitleButtonTest.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"}]}