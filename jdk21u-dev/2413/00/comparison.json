{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+import jtreg.SkippedException;\n+\n@@ -49,2 +51,1 @@\n-            System.out.println(\"Not supported by provider, skipping\");\n-            return;\n+            throw new SkippedException(\"Not supported by provider, skipping\");\n@@ -61,1 +62,1 @@\n-            if (DESKeySpec.isParityAdjusted(key.getEncoded(), 0) == false) {\n+            if (!DESKeySpec.isParityAdjusted(key.getEncoded(), 0)) {\n@@ -72,1 +73,1 @@\n-            if (DESedeKeySpec.isParityAdjusted(key.getEncoded(), 0) == false) {\n+            if (!DESedeKeySpec.isParityAdjusted(key.getEncoded(), 0)) {\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyGenerator\/DESParity.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,3 @@\n+import jtreg.SkippedException;\n+import sun.security.util.SecurityProviderConstants;\n+\n@@ -34,1 +37,0 @@\n-import java.security.InvalidAlgorithmParameterException;\n@@ -39,1 +41,0 @@\n-import static sun.security.util.SecurityProviderConstants.*;\n@@ -56,2 +57,1 @@\n-            System.out.println(\"Skip; no support for \" + ALGO);\n-            return;\n+            throw new SkippedException(\"Skip; no support for \" + ALGO, nsae);\n@@ -64,1 +64,1 @@\n-        if (key.getEncoded().length != getDefAESKeySize() >> 3) {\n+        if (key.getEncoded().length != SecurityProviderConstants.getDefAESKeySize() >> 3) {\n@@ -66,1 +66,1 @@\n-                    getDefAESKeySize());\n+                                       SecurityProviderConstants.getDefAESKeySize());\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyGenerator\/TestAES.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,2 @@\n+import jtreg.SkippedException;\n+\n@@ -57,2 +59,1 @@\n-            System.out.println(\"Skip; no support for \" + ALGO);\n-            return;\n+            throw new SkippedException(\"Skip; no support for \" + ALGO, nsae);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyGenerator\/TestChaCha20.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyGenerator\/TestKeyGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import jtreg.SkippedException;\n+\n@@ -54,2 +56,1 @@\n-            System.out.println(\"KPG for DH not supported, skipping\");\n-            return;\n+            throw new SkippedException(\"KPG for DH not supported, skipping\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyPairGenerator\/TestDH2048.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.security.KeyPair;\n@@ -27,1 +26,0 @@\n-import java.security.PrivateKey;\n@@ -30,0 +28,2 @@\n+\n+import jtreg.SkippedException;\n@@ -50,2 +50,1 @@\n-            System.out.println(\"Skip, no support for DH KeyPairGenerator\");\n-            return;\n+            throw new SkippedException(\"Skip, no support for DH KeyPairGenerator\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyPairGenerator\/TestDefaultDHPrivateExpSize.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}