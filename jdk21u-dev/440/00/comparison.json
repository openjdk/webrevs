{"files":[{"patch":"@@ -53,1 +53,1 @@\n-void MemReporterBase::print_total(size_t reserved, size_t committed) const {\n+void MemReporterBase::print_total(size_t reserved, size_t committed, size_t peak) const {\n@@ -57,0 +57,3 @@\n+  if (peak != 0) {\n+    output()->print(\", largest_committed=\" SIZE_FORMAT \"%s\", amount_in_current_scale(peak), scale);\n+  }\n@@ -92,1 +95,1 @@\n-void MemReporterBase::print_virtual_memory(size_t reserved, size_t committed) const {\n+void MemReporterBase::print_virtual_memory(size_t reserved, size_t committed, size_t peak) const {\n@@ -94,2 +97,2 @@\n-  output()->print(\"(mmap: reserved=\" SIZE_FORMAT \"%s, committed=\" SIZE_FORMAT \"%s)\",\n-    amount_in_current_scale(reserved), scale, amount_in_current_scale(committed), scale);\n+  output()->print(\"(mmap: reserved=\" SIZE_FORMAT \"%s, committed=\" SIZE_FORMAT \"%s, largest_committed=\" SIZE_FORMAT \"%s)\",\n+    amount_in_current_scale(reserved), scale, amount_in_current_scale(committed), scale, amount_in_current_scale(peak), scale);\n@@ -104,1 +107,1 @@\n-void MemReporterBase::print_virtual_memory_line(size_t reserved, size_t committed) const {\n+void MemReporterBase::print_virtual_memory_line(size_t reserved, size_t committed, size_t peak) const {\n@@ -106,1 +109,1 @@\n-  print_virtual_memory(reserved, committed);\n+  print_virtual_memory(reserved, committed, peak);\n@@ -231,1 +234,1 @@\n-        print_total(thread_stack_usage->reserved(), thread_stack_usage->committed());\n+        print_total(thread_stack_usage->reserved(), thread_stack_usage->committed(), thread_stack_usage->peak_size());\n@@ -249,2 +252,3 @@\n-    if (amount_in_current_scale(virtual_memory->reserved()) > 0) {\n-      print_virtual_memory_line(virtual_memory->reserved(), virtual_memory->committed());\n+    if (amount_in_current_scale(virtual_memory->reserved()) > 0\n+        DEBUG_ONLY(|| amount_in_current_scale(virtual_memory->peak_size()) > 0)) {\n+      print_virtual_memory_line(virtual_memory->reserved(), virtual_memory->committed(), virtual_memory->peak_size());\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-  void print_total(size_t reserved, size_t committed) const;\n+  void print_total(size_t reserved, size_t committed, size_t peak = 0) const;\n@@ -112,1 +112,1 @@\n-  void print_virtual_memory(size_t reserved, size_t committed) const;\n+  void print_virtual_memory(size_t reserved, size_t committed, size_t peak) const;\n@@ -115,1 +115,1 @@\n-  void print_virtual_memory_line(size_t reserved, size_t committed) const;\n+  void print_virtual_memory_line(size_t reserved, size_t committed, size_t peak) const;\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,14 @@\n+#ifdef ASSERT\n+void VirtualMemory::update_peak(size_t size) {\n+  size_t peak_sz = peak_size();\n+  while (peak_sz < size) {\n+    size_t old_sz = Atomic::cmpxchg(&_peak_size, peak_sz, size, memory_order_relaxed);\n+    if (old_sz == peak_sz) {\n+      break;\n+    } else {\n+      peak_sz = old_sz;\n+    }\n+  }\n+}\n+#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -46,0 +46,5 @@\n+#ifdef ASSERT\n+  volatile size_t _peak_size;\n+  void update_peak(size_t size);\n+#endif \/\/ ASSERT\n+\n@@ -47,1 +52,3 @@\n-  VirtualMemory() : _reserved(0), _committed(0) { }\n+  VirtualMemory() : _reserved(0), _committed(0) {\n+    DEBUG_ONLY(_peak_size  = 0;)\n+  }\n@@ -52,0 +59,1 @@\n+    DEBUG_ONLY(update_peak(sz);)\n@@ -67,0 +75,3 @@\n+  inline size_t peak_size() const {\n+    return DEBUG_ONLY(Atomic::load(&_peak_size)) NOT_DEBUG(0);\n+  }\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.hpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}