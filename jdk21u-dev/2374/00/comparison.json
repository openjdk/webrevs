{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,9 @@\n-import java.net.*;\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutput;\n+import java.io.ObjectOutputStream;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+\n@@ -39,1 +46,1 @@\n-    public static void main(String [] argv) throws Exception {\n+    public static void main(String[] argv) throws Exception {\n@@ -55,10 +62,3 @@\n-            \/\/ Wait for the client thread to finish\n-            c1.join(20000);\n-\n-            \/\/ If timeout, we assume there is a deadlock\n-            if (c1.isAlive() == true) {\n-                \/\/ Close the socket to force the server thread\n-                \/\/ terminate too\n-                s1.stop();\n-                throw new Exception(\"Takes too long. Dead lock\");\n-            }\n+            \/\/ Wait for the client thread to finish.\n+            \/\/ If it doesn't finish then it's a sign of a deadlock\n+            c1.join();\n@@ -76,1 +76,1 @@\n-    ObjectInputStream  in;\n+    ObjectInputStream in;\n","filename":"test\/jdk\/java\/net\/Socket\/DeadlockTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}