{"files":[{"patch":"@@ -1775,0 +1775,1 @@\n+  INSN(vluxei64_v, 0b0000111, 0b111, 0b01, 0b0);\n@@ -1778,0 +1779,1 @@\n+  INSN(vsuxei64_v, 0b0100111, 0b111, 0b01, 0b0);\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3598,3 +3598,2 @@\n-instruct gather_load(vReg dst, indirect mem, vReg idx) %{\n-  predicate(type2aelembytes(Matcher::vector_element_basic_type(n)) == 4 ||\n-            type2aelembytes(Matcher::vector_element_basic_type(n)) == 8);\n+instruct gather_loadS(vReg dst, indirect mem, vReg idx) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n)) == 4);\n@@ -3603,1 +3602,1 @@\n-  format %{ \"gather_load $dst, $mem, $idx\" %}\n+  format %{ \"gather_loadS $dst, $mem, $idx\" %}\n@@ -3616,3 +3615,19 @@\n-instruct gather_load_masked(vReg dst, indirect mem, vReg idx, vRegMask_V0 v0, vReg tmp) %{\n-  predicate(type2aelembytes(Matcher::vector_element_basic_type(n)) == 4 ||\n-            type2aelembytes(Matcher::vector_element_basic_type(n)) == 8);\n+instruct gather_loadD(vReg dst, indirect mem, vReg idx) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n)) == 8);\n+  match(Set dst (LoadVectorGather mem idx));\n+  effect(TEMP_DEF dst);\n+  format %{ \"gather_loadD $dst, $mem, $idx\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n+    __ vsetvli_helper(bt, Matcher::vector_length(this));\n+    __ vzext_vf2(as_VectorRegister($dst$$reg), as_VectorRegister($idx$$reg));\n+    __ vsll_vi(as_VectorRegister($dst$$reg), as_VectorRegister($dst$$reg), (int)sew);\n+    __ vluxei64_v(as_VectorRegister($dst$$reg), as_Register($mem$$base),\n+                  as_VectorRegister($dst$$reg));\n+ %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct gather_loadS_masked(vReg dst, indirect mem, vReg idx, vRegMask_V0 v0, vReg tmp) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n)) == 4);\n@@ -3621,1 +3636,1 @@\n-  format %{ \"gather_load_masked $dst, $mem, $idx, $v0\\t# KILL $tmp\" %}\n+  format %{ \"gather_loadS_masked $dst, $mem, $idx, $v0\\t# KILL $tmp\" %}\n@@ -3636,0 +3651,19 @@\n+instruct gather_loadD_masked(vReg dst, indirect mem, vReg idx, vRegMask_V0 v0, vReg tmp) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n)) == 8);\n+  match(Set dst (LoadVectorGatherMasked mem (Binary idx v0)));\n+  effect(TEMP_DEF dst, TEMP tmp);\n+  format %{ \"gather_loadD_masked $dst, $mem, $idx, $v0\\t# KILL $tmp\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n+    __ vsetvli_helper(bt, Matcher::vector_length(this));\n+    __ vzext_vf2(as_VectorRegister($tmp$$reg), as_VectorRegister($idx$$reg));\n+    __ vsll_vi(as_VectorRegister($tmp$$reg), as_VectorRegister($tmp$$reg), (int)sew);\n+    __ vxor_vv(as_VectorRegister($dst$$reg), as_VectorRegister($dst$$reg),\n+               as_VectorRegister($dst$$reg));\n+    __ vluxei64_v(as_VectorRegister($dst$$reg), as_Register($mem$$base),\n+                  as_VectorRegister($tmp$$reg), Assembler::v0_t);\n+ %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -3638,3 +3672,2 @@\n-instruct scatter_store(indirect mem, vReg src, vReg idx, vReg tmp) %{\n-  predicate(type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 4 ||\n-            type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 8);\n+instruct scatter_storeS(indirect mem, vReg src, vReg idx, vReg tmp) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 4);\n@@ -3643,1 +3676,1 @@\n-  format %{ \"scatter_store $mem, $idx, $src\\t# KILL $tmp\" %}\n+  format %{ \"scatter_storeS $mem, $idx, $src\\t# KILL $tmp\" %}\n@@ -3656,3 +3689,19 @@\n-instruct scatter_store_masked(indirect mem, vReg src, vReg idx, vRegMask_V0 v0, vReg tmp) %{\n-  predicate(type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 4 ||\n-            type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 8);\n+instruct scatter_storeD(indirect mem, vReg src, vReg idx, vReg tmp) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 8);\n+  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n+  effect(TEMP tmp);\n+  format %{ \"scatter_storeD $mem, $idx, $src\\t# KILL $tmp\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n+    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n+    __ vsetvli_helper(bt, Matcher::vector_length(this, $src));\n+    __ vzext_vf2(as_VectorRegister($tmp$$reg), as_VectorRegister($idx$$reg));\n+    __ vsll_vi(as_VectorRegister($tmp$$reg), as_VectorRegister($tmp$$reg), (int)sew);\n+    __ vsuxei64_v(as_VectorRegister($src$$reg), as_Register($mem$$base),\n+                  as_VectorRegister($tmp$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct scatter_storeS_masked(indirect mem, vReg src, vReg idx, vRegMask_V0 v0, vReg tmp) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 4);\n@@ -3661,1 +3710,1 @@\n-  format %{ \"scatter_store_masked $mem, $idx, $src, $v0\\t# KILL $tmp\" %}\n+  format %{ \"scatter_storeS_masked $mem, $idx, $src, $v0\\t# KILL $tmp\" %}\n@@ -3674,0 +3723,17 @@\n+instruct scatter_storeD_masked(indirect mem, vReg src, vReg idx, vRegMask_V0 v0, vReg tmp) %{\n+  predicate(type2aelembytes(Matcher::vector_element_basic_type(n->in(3)->in(1))) == 8);\n+  match(Set mem (StoreVectorScatterMasked mem (Binary src (Binary idx v0))));\n+  effect(TEMP tmp);\n+  format %{ \"scatter_storeD_masked $mem, $idx, $src, $v0\\t# KILL $tmp\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n+    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n+    __ vsetvli_helper(bt, Matcher::vector_length(this, $src));\n+    __ vzext_vf2(as_VectorRegister($tmp$$reg), as_VectorRegister($idx$$reg));\n+    __ vsll_vi(as_VectorRegister($tmp$$reg), as_VectorRegister($tmp$$reg), (int)sew);\n+    __ vsuxei64_v(as_VectorRegister($src$$reg), as_Register($mem$$base),\n+                  as_VectorRegister($tmp$$reg), Assembler::v0_t);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":82,"deletions":16,"binary":false,"changes":98,"status":"modified"}]}