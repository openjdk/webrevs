{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1700,0 +1700,1 @@\n+            [nsWindow makeKeyAndOrderFront: nil];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/AWTWindow.m","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Robot;\n+import jtreg.SkippedException;\n+\n+import static java.awt.EventQueue.invokeAndWait;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8312518\n+ * @library \/test\/lib\n+ * @summary Setting fullscreen window using setFullScreenWindow() shows up\n+ *          as black screen on newer macOS versions (13 & 14).\n+ *\/\n+\n+public class SetFullScreenTest {\n+    private static Frame frame;\n+    private static GraphicsDevice gd;\n+    private static Robot robot;\n+    private static volatile int width;\n+    private static volatile int height;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            invokeAndWait(() -> {\n+                gd = GraphicsEnvironment.getLocalGraphicsEnvironment().\n+                        getDefaultScreenDevice();\n+                if (!gd.isFullScreenSupported()) {\n+                    throw new SkippedException(\"Full Screen mode not supported\");\n+                }\n+            });\n+\n+            invokeAndWait(() -> {\n+                frame = new Frame(\"Test FullScreen mode\");\n+                frame.setBackground(Color.RED);\n+                frame.setSize(100, 100);\n+                frame.setLocation(10, 10);\n+                frame.setVisible(true);\n+            });\n+            robot.delay(1000);\n+\n+            invokeAndWait(() -> gd.setFullScreenWindow(frame));\n+            robot.waitForIdle();\n+            robot.delay(300);\n+\n+            invokeAndWait(() -> {\n+                width = gd.getFullScreenWindow().getWidth();\n+                height = gd.getFullScreenWindow().getHeight();\n+            });\n+\n+            if (!robot.getPixelColor(width \/ 2, height \/ 2).equals(Color.RED)) {\n+                System.err.println(\"Actual color: \" + robot.getPixelColor(width \/ 2, height \/ 2)\n+                                    + \" Expected color: \" + Color.RED);\n+                throw new RuntimeException(\"Test Failed! Window not in full screen mode\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FullScreen\/SetFullScreenTest.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"}]}