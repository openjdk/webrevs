{"files":[{"patch":"@@ -506,1 +506,0 @@\n-  Node_List           *defs,*phis;\n@@ -522,3 +521,0 @@\n-  \/\/ Keep track of DEFS & Phis for later passes\n-  defs = new Node_List();\n-  phis = new Node_List();\n@@ -572,2 +568,8 @@\n-  for( slidx = 0; slidx < spill_cnt; slidx++ )\n-    UP_entry[slidx] = new VectorSet(split_arena);\n+  \/\/ Each containing at most spill_cnt * _cfg.number_of_blocks() entries.\n+  for (slidx = 0; slidx < spill_cnt; slidx++) {\n+    UP_entry[slidx] = new(split_arena) VectorSet(split_arena);\n+  }\n+\n+  \/\/ Keep track of DEFS & Phis for later passes\n+  Node_List defs(split_arena, 8);\n+  Node_List phis(split_arena, 16);\n@@ -705,1 +707,1 @@\n-        phis->push(phi);\n+        phis.push(phi);\n@@ -1192,1 +1194,1 @@\n-        defs->push(n);\n+        defs.push(n);\n@@ -1311,1 +1313,1 @@\n-  for( insidx = 0; insidx < defs->size(); insidx++ ) {\n+  for( insidx = 0; insidx < defs.size(); insidx++ ) {\n@@ -1313,1 +1315,1 @@\n-    n1 = defs->at(insidx);\n+    n1 = defs.at(insidx);\n@@ -1323,2 +1325,2 @@\n-  for( insidx = 0; insidx < phis->size(); insidx++ ) {\n-    Node *phi = phis->at(insidx);\n+  for( insidx = 0; insidx < phis.size(); insidx++ ) {\n+    Node *phi = phis.at(insidx);\n@@ -1392,2 +1394,2 @@\n-  for( insidx = 0; insidx < phis->size(); insidx++ ) {\n-    Node *phi = phis->at(insidx);\n+  for( insidx = 0; insidx < phis.size(); insidx++ ) {\n+    Node *phi = phis.at(insidx);\n@@ -1411,1 +1413,1 @@\n-  for (insidx = 0; insidx < defs->size(); insidx++) {\n+  for (insidx = 0; insidx < defs.size(); insidx++) {\n@@ -1413,1 +1415,1 @@\n-    n1 = defs->at(insidx);\n+    n1 = defs.at(insidx);\n","filename":"src\/hotspot\/share\/opto\/reg_split.cpp","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"}]}