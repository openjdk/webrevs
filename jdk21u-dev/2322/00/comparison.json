{"files":[{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4287208\n+ * @summary Tests if JTabbedPane's setEnabledAt properly renders bounds of Tabs\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4287208\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import javax.swing.ImageIcon;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+\n+public class bug4287208 implements ActionListener {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        There are two tabs in the test window. Press the \"Test\" button 5 times.\n+        If this causes tabs to overlap at any time, the test FAILS, otherwise\n+        the test PASSES.\n+    \"\"\";\n+\n+    static boolean state = true;\n+    static JTabbedPane jtp;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"bug4287208 Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(bug4287208::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"bug4287208\");\n+\n+        JButton start = new JButton(\"Test\");\n+        start.addActionListener(new bug4287208());\n+        JPanel buttonPanel = new JPanel();\n+        buttonPanel.add(start);\n+        frame.add(buttonPanel,BorderLayout.SOUTH);\n+\n+        jtp = new JTabbedPane();\n+        jtp.addTab(\"Panel One\", new JPanel());\n+        String s = System.getProperty(\"test.src\",\".\") +\n+                   System.getProperty(\"file.separator\") + \"duke.gif\";\n+        ImageIcon ii = new ImageIcon(s);\n+        jtp.addTab(\"Panel Two\", ii, new JPanel());\n+\n+        frame.add(jtp, BorderLayout.CENTER);\n+        frame.setSize(500, 300);\n+        return frame;\n+    }\n+\n+    public void actionPerformed(ActionEvent evt) {\n+        jtp.setEnabledAt(0, state);\n+        jtp.setEnabledAt(1, !state);\n+        state = !state;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/4287208\/bug4287208.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/4287208\/duke.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/swing\/plaf\/metal\/MetalSliderUI\/4186347\/duke.gif","status":"copied"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4273320\n+ * @summary JTabbedPane.setTitleAt() should refresh when using HTML text\n+ * @key headful\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.plaf.TabbedPaneUI;\n+\n+public class bug4273320 {\n+\n+    static JFrame frame;\n+    static volatile JTabbedPane tabs;\n+\n+    static final String PLAIN = \"Plain\";\n+    static final String HTML = \"<html>A fairly long HTML text label<\/html>\";\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(bug4273320::createUI);\n+\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            TabbedPaneUI ui = tabs.getUI();\n+            Rectangle origSize = ui.getTabBounds(tabs, 0);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                tabs.setTitleAt(0, HTML);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Rectangle newSize = ui.getTabBounds(tabs, 0);\n+            \/\/ The tab should be resized larger if the longer HTML text is added\n+            System.out.println(\"orig = \" + origSize.width + \" x \" + origSize.height);\n+            System.out.println(\"new = \" + newSize.width + \" x \" + newSize.height);\n+            if (origSize.width >= newSize.width) {\n+                throw new RuntimeException(\"Tab text is not updated.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    static void createUI() {\n+        frame = new JFrame(\"bug4273320\");\n+        tabs = new JTabbedPane();\n+        JPanel panel = new JPanel();\n+        tabs.addTab(PLAIN, panel);\n+        frame.getContentPane().add(tabs, BorderLayout.CENTER);\n+        frame.setSize(500, 300);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4273320.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4287268\n+ * @summary Tests if setIconAt(index,Icon) does not set Tab's disabled icon\n+ * @key headful\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import javax.swing.ImageIcon;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4287268 {\n+\n+    static JFrame frame;\n+    static volatile JTabbedPane jtp;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(bug4287268::createUI);\n+\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point point = jtp.getLocationOnScreen();\n+            int width = jtp.getWidth();\n+            int height = jtp.getHeight();\n+            Rectangle r = new Rectangle(point.x, point.y, width, height);\n+            BufferedImage cap = robot.createScreenCapture(r);\n+\n+            int red = Color.red.getRGB();\n+            for (int x = 0; x < cap.getWidth(); x++) {\n+                for (int y = 0; y < cap.getHeight(); y++) {\n+                    int rgb = cap.getRGB(x, y);\n+                    if (rgb == red) {\n+                        try {\n+                             javax.imageio.ImageIO.write(cap, \"png\", new java.io.File(\"cap.png\"));\n+                        } catch (Exception ee) {\n+                        }\n+                        throw new RuntimeException(\"Test failed : found red\");\n+                    }\n+                }\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    static void createUI() {\n+        frame = new JFrame(\"bug4287268\");\n+        jtp = new JTabbedPane();\n+        JPanel panel = new JPanel();\n+        jtp.add(\"Panel One\", panel);\n+        int size = 64;\n+        BufferedImage img = new BufferedImage(size, size, BufferedImage.TYPE_INT_RGB);\n+        Graphics g = img.createGraphics();\n+        g.setColor(Color.red);\n+        g.fillRect(0, 0, size, size);\n+        ImageIcon ii = new ImageIcon(img);\n+        jtp.setIconAt(0, ii);\n+        jtp.setEnabledAt(0, false);\n+        frame.getContentPane().add(jtp, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4287268.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4362226\n+ * @summary JTabbedPane's HTML title should have proper offsets\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4362226\n+*\/\n+\n+import java.awt.BorderLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n+\n+public class bug4362226 {\n+\n+    static final String PLAIN = \"Label\";\n+    static final String HTML = \"<html>Label<\/html>\";\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        The test window contains a JTabbedPane with two tabs.\n+        The titles for both tabs should look similar and drawn with the same fonts.\n+        The text of the tabs should start in a position that is offset from the left\n+        boundary of the tab, so there is clear space between them.\n+        If there is no space, then the test FAILS.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"bug4362226 Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(60)\n+            .testUI(bug4362226::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        try {\n+            UIManager.setLookAndFeel(new MetalLookAndFeel());\n+        } catch (Exception e) {\n+        }\n+        JFrame frame = new JFrame(\"bug4362226\");\n+        JTabbedPane tabs = new JTabbedPane();\n+        tabs.addTab(PLAIN, new JPanel());\n+        tabs.addTab(HTML, new JPanel());\n+        frame.add(tabs, BorderLayout.CENTER);\n+        frame.setSize(500, 300);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4362226.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4668865\n+ * @summary Tests if JTabbedPane's setEnabledAt properly renders bounds of Tabs\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4668865\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.event.ActionEvent;\n+import javax.swing.AbstractAction;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JTextField;\n+\n+public class bug4668865 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        This tests that tooltips are shown for all tabs in all orientations,\n+        when it is necessary to scroll to see all the tabs.\n+        Use the buttons to select each orientation (top\/bottom\/left\/right) in turn.\n+        Scroll through the 8 tabs - using the navigation arrows as needed.\n+        Move the mouse over each tab in turn and verify that the matching tooltip is shown\n+        after sufficient hover time.\n+        The test PASSES if the tooltips are shown for all cases, and FAILS otherwise.\n+    \"\"\";\n+\n+    static JTabbedPane tabPane;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"bug4668865 Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(50)\n+            .testUI(bug4668865::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"bug4668865\");\n+\n+        tabPane = new JTabbedPane(JTabbedPane.TOP, JTabbedPane.SCROLL_TAB_LAYOUT);\n+        for(int i = 1; i < 9; i++) {\n+            tabPane.addTab(\"Tab\" + i, null, new JTextField(\"Tab\" + i), \"Tab\" + i);\n+        }\n+        frame.add(tabPane, BorderLayout.CENTER);\n+\n+        JButton top = new JButton(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setTabPlacement(JTabbedPane.TOP);\n+            }\n+        });\n+        top.setText(\"Top\");\n+        frame.add(top, BorderLayout.NORTH);\n+\n+        JButton bottom = new JButton(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setTabPlacement(JTabbedPane.BOTTOM);\n+            }\n+        });\n+        bottom.setText(\"Bottom\");\n+        frame.add(bottom, BorderLayout.SOUTH);\n+\n+        JButton left = new JButton(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setTabPlacement(JTabbedPane.LEFT);\n+            }\n+        });\n+\n+        left.setText(\"Left\");\n+        frame.add(left, BorderLayout.WEST);\n+\n+        JButton right = new JButton(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setTabPlacement(JTabbedPane.RIGHT);\n+            }\n+        });\n+\n+        right.setText(\"Right\");\n+        frame.add(right, BorderLayout.EAST);\n+\n+        frame.setSize(400, 400);\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4668865.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}