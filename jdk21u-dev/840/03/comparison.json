{"files":[{"patch":"@@ -233,0 +233,13 @@\n+size_t HugePages::thp_pagesize_fallback() {\n+    \/\/ Older kernels won't publish the THP page size. Fall back to default explicit huge page size,\n+    \/\/ since that is likely to be the THP page size as well. Don't do it if the page size is considered\n+    \/\/ too large to avoid large alignment waste. If explicit huge page size is unknown, use educated guess.\n+    if (thp_pagesize() != 0) {\n+        return thp_pagesize();\n+    }\n+    if (supports_explicit_hugepages()) {\n+        return MIN2(default_explicit_hugepage_size(), 16 * M);\n+    }\n+    return 2 * M;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/hugepages.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -110,0 +110,1 @@\n+  static size_t thp_pagesize_fallback();\n","filename":"src\/hotspot\/os\/linux\/hugepages.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3873,1 +3873,0 @@\n-    assert(HugePages::supports_thp() && HugePages::thp_pagesize() > 0, \"Missing OS info\");\n@@ -3875,0 +3874,5 @@\n+    if (_large_page_size == 0) {\n+        log_info(pagesize) (\"Cannot determine THP page size (kernel < 4.10 ?)\");\n+        _large_page_size = HugePages::thp_pagesize_fallback();\n+        log_info(pagesize) (\"Assuming THP page size to be: \" EXACTFMT \" (heuristics)\", EXACTFMTARGS(_large_page_size));\n+    }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,0 +87,14 @@\n+    \/\/ Returns the THP page size (if exposed by the kernel) or a guessed THP page size.\n+    \/\/ Mimics HugePages::thp_pagesize_fallback() method in hotspot (must be kept in sync with it).\n+    public long getThpPageSizeOrFallback() {\n+        long pageSize = getThpPageSize();\n+        if (pageSize != 0) {\n+            return pageSize;\n+        }\n+        pageSize = getExplicitDefaultHugePageSize();\n+        if (pageSize != 0) {\n+            return Math.min(pageSize, 16 * 1024 * 1024);\n+        }\n+        return 2 * 1024 * 1024;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/HugePageConfiguration.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-            String thpPageSizeString = buildSizeString(configuration.getThpPageSize());\n+            long thpPageSize = configuration.getThpPageSizeOrFallback();\n+            String thpPageSizeString = buildSizeString(thpPageSize);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}