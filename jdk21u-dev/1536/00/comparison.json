{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-    public synchronized boolean run(String args[]) {\n+    public synchronized boolean run(String[] args) {\n@@ -370,5 +370,3 @@\n-                    InputStream in = new FileInputStream(FileDescriptor.in);\n-                    try {\n-                        list(new BufferedInputStream(in), files);\n-                    } finally {\n-                        in.close();\n+                    try (InputStream in = new FileInputStream(FileDescriptor.in);\n+                         BufferedInputStream bis = new BufferedInputStream(in)) {\n+                        list(bis, files);\n@@ -390,1 +388,1 @@\n-                if (fname != null && files != null) {\n+                if (fname != null) {\n@@ -393,9 +391,3 @@\n-                    InputStream in = (fname == null)\n-                        ? new FileInputStream(FileDescriptor.in)\n-                        : new FileInputStream(fname);\n-                    try {\n-                        if (!extract(new BufferedInputStream(in), files) && fname != null) {\n-                            extract(fname, files);\n-                        }\n-                    } finally {\n-                        in.close();\n+                    try (InputStream in = new FileInputStream(FileDescriptor.in);\n+                         BufferedInputStream bis = new BufferedInputStream(in)) {\n+                        extract(bis, files);\n@@ -507,1 +499,1 @@\n-    boolean parseArgs(String args[]) {\n+    boolean parseArgs(String[] args) {\n@@ -945,4 +937,0 @@\n-        ZipInputStream zis = new ZipInputStream(in);\n-        ZipOutputStream zos = new JarOutputStream(out);\n-        ZipEntry e = null;\n-        boolean foundManifest = false;\n@@ -950,0 +938,2 @@\n+        try (ZipInputStream zis = new ZipInputStream(in);\n+            ZipOutputStream zos = new JarOutputStream(out)) {\n@@ -951,11 +941,12 @@\n-        \/\/ All actual entries added\/updated\/existing, in the jar file (excl manifest\n-        \/\/ and module-info.class ).\n-        Set<String> jentries = new HashSet<>();\n-\n-        if (jarIndex != null) {\n-            addIndex(jarIndex, zos);\n-        }\n-\n-        \/\/ put the old entries first, replace if necessary\n-        while ((e = zis.getNextEntry()) != null) {\n-            String name = e.getName();\n+            if (jarIndex != null) {\n+                addIndex(jarIndex, zos);\n+            }\n+            ZipEntry e = null;\n+            boolean foundManifest = false;\n+            \/\/ All actual entries added\/updated\/existing, in the jar file (excl manifest\n+            \/\/ and module-info.class ).\n+            Set<String> jentries = new HashSet<>();\n+\n+            \/\/ put the old entries first, replace if necessary\n+            while ((e = zis.getNextEntry()) != null) {\n+                String name = e.getName();\n@@ -963,2 +954,2 @@\n-            boolean isManifestEntry = equalsIgnoreCase(name, MANIFEST_NAME);\n-            boolean isModuleInfoEntry = isModuleInfoEntry(name);\n+                boolean isManifestEntry = equalsIgnoreCase(name, MANIFEST_NAME);\n+                boolean isModuleInfoEntry = isModuleInfoEntry(name);\n@@ -966,4 +957,4 @@\n-            if ((jarIndex != null && equalsIgnoreCase(name, INDEX_NAME))\n-                || (Mflag && isManifestEntry)) {\n-                continue;\n-            } else if (isManifestEntry && ((newManifest != null) ||\n+                if ((jarIndex != null && equalsIgnoreCase(name, INDEX_NAME))\n+                        || (Mflag && isManifestEntry)) {\n+                    continue;\n+                } else if (isManifestEntry && ((newManifest != null) ||\n@@ -971,8 +962,9 @@\n-                foundManifest = true;\n-                if (newManifest != null) {\n-                    \/\/ Don't read from the newManifest InputStream, as we\n-                    \/\/ might need it below, and we can't re-read the same data\n-                    \/\/ twice.\n-                    try (FileInputStream fis = new FileInputStream(mname)) {\n-                        if (isAmbiguousMainClass(new Manifest(fis))) {\n-                            return false;\n+                    foundManifest = true;\n+                    if (newManifest != null) {\n+                        \/\/ Don't read from the newManifest InputStream, as we\n+                        \/\/ might need it below, and we can't re-read the same data\n+                        \/\/ twice.\n+                        try (FileInputStream fis = new FileInputStream(mname)) {\n+                            if (isAmbiguousMainClass(new Manifest(fis))) {\n+                                return false;\n+                            }\n@@ -981,23 +973,34 @@\n-                }\n-                \/\/ Update the manifest.\n-                Manifest old = new Manifest(zis);\n-                if (newManifest != null) {\n-                    old.read(newManifest);\n-                }\n-                if (!updateManifest(old, zos)) {\n-                    return false;\n-                }\n-            } else if (moduleInfos != null && isModuleInfoEntry) {\n-                moduleInfos.putIfAbsent(name, new StreamedModuleInfoEntry(name, zis.readAllBytes(), e.getLastModifiedTime()));\n-            } else {\n-                boolean isDir = e.isDirectory();\n-                if (!entryMap.containsKey(name)) { \/\/ copy the old stuff\n-                    \/\/ do our own compression\n-                    ZipEntry e2 = new ZipEntry(name);\n-                    e2.setMethod(e.getMethod());\n-                    setZipEntryTime(e2, e.getTime());\n-                    e2.setComment(e.getComment());\n-                    e2.setExtra(e.getExtra());\n-                    if (e.getMethod() == ZipEntry.STORED) {\n-                        e2.setSize(e.getSize());\n-                        e2.setCrc(e.getCrc());\n+                    \/\/ Update the manifest.\n+                    Manifest old = new Manifest(zis);\n+                    if (newManifest != null) {\n+                        old.read(newManifest);\n+                    }\n+                    if (!updateManifest(old, zos)) {\n+                        return false;\n+                    }\n+                } else if (moduleInfos != null && isModuleInfoEntry) {\n+                    moduleInfos.putIfAbsent(name, new StreamedModuleInfoEntry(name, zis.readAllBytes(), e.getLastModifiedTime()));\n+                } else {\n+                    boolean isDir = e.isDirectory();\n+                    if (!entryMap.containsKey(name)) { \/\/ copy the old stuff\n+                        \/\/ do our own compression\n+                        ZipEntry e2 = new ZipEntry(name);\n+                        e2.setMethod(e.getMethod());\n+                        setZipEntryTime(e2, e.getTime());\n+                        e2.setComment(e.getComment());\n+                        e2.setExtra(e.getExtra());\n+                        if (e.getMethod() == ZipEntry.STORED) {\n+                            e2.setSize(e.getSize());\n+                            e2.setCrc(e.getCrc());\n+                        }\n+                        zos.putNextEntry(e2);\n+                        copy(zis, zos);\n+                    } else { \/\/ replace with the new files\n+                        Entry ent = entryMap.get(name);\n+                        addFile(zos, ent);\n+                        entryMap.remove(name);\n+                        entries.remove(ent);\n+                        isDir = ent.isDir;\n+                    }\n+                    if (!isDir) {\n+                        jentries.add(name);\n@@ -1005,11 +1008,0 @@\n-                    zos.putNextEntry(e2);\n-                    copy(zis, zos);\n-                } else { \/\/ replace with the new files\n-                    Entry ent = entryMap.get(name);\n-                    addFile(zos, ent);\n-                    entryMap.remove(name);\n-                    entries.remove(ent);\n-                    isDir = ent.isDir;\n-                }\n-                if (!isDir) {\n-                    jentries.add(name);\n@@ -1018,1 +1010,0 @@\n-        }\n@@ -1020,5 +1011,6 @@\n-        \/\/ add the remaining new files\n-        for (Entry entry : entries) {\n-            addFile(zos, entry);\n-            if (!entry.isDir) {\n-                jentries.add(entry.name);\n+            \/\/ add the remaining new files\n+            for (Entry entry : entries) {\n+                addFile(zos, entry);\n+                if (!entry.isDir) {\n+                    jentries.add(entry.name);\n+                }\n@@ -1026,7 +1018,11 @@\n-        }\n-        if (!foundManifest) {\n-            if (newManifest != null) {\n-                Manifest m = new Manifest(newManifest);\n-                updateOk = !isAmbiguousMainClass(m);\n-                if (updateOk) {\n-                    if (!updateManifest(m, zos)) {\n+            if (!foundManifest) {\n+                if (newManifest != null) {\n+                    Manifest m = new Manifest(newManifest);\n+                    updateOk = !isAmbiguousMainClass(m);\n+                    if (updateOk) {\n+                        if (!updateManifest(m, zos)) {\n+                            updateOk = false;\n+                        }\n+                    }\n+                } else if (ename != null) {\n+                    if (!updateManifest(new Manifest(), zos)) {\n@@ -1036,2 +1032,11 @@\n-            } else if (ename != null) {\n-                if (!updateManifest(new Manifest(), zos)) {\n+            }\n+            if (updateOk) {\n+                if (moduleInfos != null && !moduleInfos.isEmpty()) {\n+                    Set<String> pkgs = new HashSet<>();\n+                    jentries.forEach(je -> addPackageIfNamed(pkgs, je));\n+                    addExtendedModuleAttributes(moduleInfos, pkgs);\n+                    updateOk = checkModuleInfo(moduleInfos.get(MODULE_INFO), jentries);\n+                    updateModuleInfo(moduleInfos, zos);\n+                    \/\/ TODO: check manifest main classes, etc\n+                } else if (moduleVersion != null || modulesToHash != null) {\n+                    error(getMsg(\"error.module.options.without.info\"));\n@@ -1042,15 +1047,0 @@\n-        if (updateOk) {\n-            if (moduleInfos != null && !moduleInfos.isEmpty()) {\n-                Set<String> pkgs = new HashSet<>();\n-                jentries.forEach( je -> addPackageIfNamed(pkgs, je));\n-                addExtendedModuleAttributes(moduleInfos, pkgs);\n-                updateOk = checkModuleInfo(moduleInfos.get(MODULE_INFO), jentries);\n-                updateModuleInfo(moduleInfos, zos);\n-                \/\/ TODO: check manifest main classes, etc\n-            } else if (moduleVersion != null || modulesToHash != null) {\n-                error(getMsg(\"error.module.options.without.info\"));\n-                updateOk = false;\n-            }\n-        }\n-        zis.close();\n-        zos.close();\n@@ -1384,3 +1374,0 @@\n-     *\n-     * @return whether entries were found and successfully extracted\n-     * (indicating this was a zip file without \"leading garbage\")\n@@ -1388,1 +1375,1 @@\n-    boolean extract(InputStream in, String files[]) throws IOException {\n+    void extract(InputStream in, String[] files) throws IOException {\n@@ -1391,3 +1378,0 @@\n-        \/\/ Set of all directory entries specified in archive.  Disallows\n-        \/\/ null entries.  Disallows all entries if using pre-6.0 behavior.\n-        boolean entriesFound = false;\n@@ -1396,1 +1380,0 @@\n-            entriesFound = true;\n@@ -1415,2 +1398,0 @@\n-\n-        return entriesFound;\n@@ -1422,14 +1403,16 @@\n-    void extract(String fname, String files[]) throws IOException {\n-        ZipFile zf = new ZipFile(fname);\n-        Set<ZipEntry> dirs = newDirSet();\n-        Enumeration<? extends ZipEntry> zes = zf.entries();\n-        while (zes.hasMoreElements()) {\n-            ZipEntry e = zes.nextElement();\n-            if (files == null) {\n-                dirs.add(extractFile(zf.getInputStream(e), e));\n-            } else {\n-                String name = e.getName();\n-                for (String file : files) {\n-                    if (name.startsWith(file)) {\n-                        dirs.add(extractFile(zf.getInputStream(e), e));\n-                        break;\n+    void extract(String fname, String[] files) throws IOException {\n+        final Set<ZipEntry> dirs;\n+        try (ZipFile zf = new ZipFile(fname)) {\n+            dirs = newDirSet();\n+            Enumeration<? extends ZipEntry> zes = zf.entries();\n+            while (zes.hasMoreElements()) {\n+                ZipEntry e = zes.nextElement();\n+                if (files == null) {\n+                    dirs.add(extractFile(zf.getInputStream(e), e));\n+                } else {\n+                    String name = e.getName();\n+                    for (String file : files) {\n+                        if (name.startsWith(file)) {\n+                            dirs.add(extractFile(zf.getInputStream(e), e));\n+                            break;\n+                        }\n@@ -1440,1 +1423,0 @@\n-        zf.close();\n@@ -1521,1 +1503,1 @@\n-    void list(InputStream in, String files[]) throws IOException {\n+    void list(InputStream in, String[] files) throws IOException {\n@@ -1539,5 +1521,6 @@\n-    void list(String fname, String files[]) throws IOException {\n-        ZipFile zf = new ZipFile(fname);\n-        Enumeration<? extends ZipEntry> zes = zf.entries();\n-        while (zes.hasMoreElements()) {\n-            printEntry(zes.nextElement(), files);\n+    void list(String fname, String[] files) throws IOException {\n+        try (ZipFile zf = new ZipFile(fname)) {\n+            Enumeration<? extends ZipEntry> zes = zf.entries();\n+            while (zes.hasMoreElements()) {\n+                printEntry(zes.nextElement(), files);\n+            }\n@@ -1545,1 +1528,0 @@\n-        zf.close();\n@@ -1588,4 +1570,2 @@\n-        JarFile rf = new JarFile(jar.replace('\/', File.separatorChar));\n-\n-        if (rf != null) {\n-            Manifest man = rf.getManifest();\n+        try (JarFile jarFile = new JarFile(jar.replace('\/', File.separatorChar))) {\n+            Manifest man = jarFile.getManifest();\n@@ -1612,1 +1592,0 @@\n-        rf.close();\n@@ -1719,1 +1698,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":128,"deletions":149,"binary":false,"changes":277,"status":"modified"}]}