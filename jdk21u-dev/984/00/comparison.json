{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,3 @@\n-static long tls_data = 0;\n+static void* tls_data = 0;\n+static const void* const tls_data1 = (const void*)0x111;\n+static const void* const tls_data2 = (const void*)0x222;\n@@ -152,1 +154,1 @@\n-  err = jvmti->GetThreadLocalStorage(cthread, (void**)&tls_data);\n+  err = jvmti->GetThreadLocalStorage(cthread, &tls_data);\n@@ -155,1 +157,1 @@\n-  if (tls_data != 111) {\n+  if (tls_data != tls_data1) {\n@@ -157,1 +159,1 @@\n-    LOG(\"FAILED: GetThreadLocalStorage for carrier thread returned value: %d, expected 111\\n\\n\", (int)tls_data);\n+    LOG(\"FAILED: GetThreadLocalStorage for carrier thread returned value: %p, expected %p\\n\\n\", tls_data, tls_data1);\n@@ -159,1 +161,1 @@\n-    LOG(\"GetThreadLocalStorage for carrier thread returned value %d as expected\\n\\n\", (int)tls_data);\n+    LOG(\"GetThreadLocalStorage for carrier thread returned value %p as expected\\n\\n\", tls_data);\n@@ -228,1 +230,1 @@\n-  err = jvmti->GetThreadLocalStorage(thread, (void**)&tls_data);\n+  err = jvmti->GetThreadLocalStorage(thread, &tls_data);\n@@ -231,1 +233,1 @@\n-  if (tls_data != 222) {\n+  if (tls_data != tls_data2) {\n@@ -233,1 +235,1 @@\n-    LOG(\"FAILED: GetThreadLocalStorage for virtual thread returned value: %d, expected 222\\n\\n\", (int)tls_data);\n+    LOG(\"FAILED: GetThreadLocalStorage for virtual thread returned value: %p, expected %p\\n\\n\", tls_data, tls_data2);\n@@ -235,1 +237,1 @@\n-    LOG(\"GetThreadLocalStorage for virtual thread returned value %d as expected\\n\\n\", (int)tls_data);\n+    LOG(\"GetThreadLocalStorage for virtual thread returned value %p as expected\\n\\n\", tls_data);\n@@ -383,1 +385,1 @@\n-  long loc_tls_data = 0;\n+  void* loc_tls_data = 0;\n@@ -391,1 +393,1 @@\n-  err = jvmti->SetThreadLocalStorage(cthread, (void*)111);\n+  err = jvmti->SetThreadLocalStorage(cthread, tls_data1);\n@@ -395,1 +397,1 @@\n-  err = jvmti->GetThreadLocalStorage(cthread, (void**)&loc_tls_data);\n+  err = jvmti->GetThreadLocalStorage(cthread, &loc_tls_data);\n@@ -398,1 +400,1 @@\n-  if (loc_tls_data != 111) {\n+  if (loc_tls_data != tls_data1) {\n@@ -400,1 +402,1 @@\n-    LOG(\"ThreadStart: FAILED: GetThreadLocalStorage for carrier thread returned value: %d, expected 111\\n\\n\", (int)loc_tls_data);\n+    LOG(\"ThreadStart: FAILED: GetThreadLocalStorage for carrier thread returned value: %p, expected %p\\n\\n\", loc_tls_data, tls_data1);\n@@ -402,1 +404,1 @@\n-    LOG(\"ThreadStart: GetThreadLocalStorage for carrier thread returned value %d as expected\\n\\n\", (int)loc_tls_data);\n+    LOG(\"ThreadStart: GetThreadLocalStorage for carrier thread returned value %p as expected\\n\\n\", loc_tls_data);\n@@ -422,1 +424,1 @@\n-  err = jvmti->SetThreadLocalStorage(vthread, (void*)222);\n+  err = jvmti->SetThreadLocalStorage(vthread, tls_data2);\n@@ -466,1 +468,1 @@\n-  err = jvmti->SetThreadLocalStorage(thread, (void*)222);\n+  err = jvmti->SetThreadLocalStorage(thread, tls_data2);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/MethodExitTest\/libMethodExitTest.cpp","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"}]}