{"files":[{"patch":"@@ -527,1 +527,1 @@\n-    if (cs->is_empty() || !cs->has_locs()) continue;  \/\/ skip trivial section\n+    if (cs->is_empty() || (cs->locs_count() == 0)) continue;  \/\/ skip trivial section\n@@ -793,3 +793,0 @@\n-    \/\/ pull code out of each section\n-    const CodeSection* cs = code_section(n);\n-    if (cs->is_empty() || !cs->has_locs()) continue;  \/\/ skip trivial section\n@@ -797,0 +794,1 @@\n+    if (dest_cs->is_empty() || (dest_cs->locs_count() == 0)) continue;  \/\/ skip trivial section\n@@ -1057,1 +1055,1 @@\n-  if (PrintRelocations) {\n+  if (PrintRelocations && (locs_size != 0)) {\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -152,2 +152,1 @@\n-  assert((cs->locs_start() != nullptr) && (cs->locs_end() != nullptr) ||\n-         (cs->locs_start() == nullptr) && (cs->locs_end() == nullptr), \"valid start and end pointer\");\n+  assert(((cs->locs_start() != nullptr) && (cs->locs_end() != nullptr)), \"valid start and end pointer\");\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}