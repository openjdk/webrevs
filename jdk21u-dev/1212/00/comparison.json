{"files":[{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4688907\n+ * @summary ScrollPaneLayout.minimumLayoutSize incorrectly compares hsbPolicy\n+ *\/\n+\n+import java.awt.Dimension;\n+import javax.swing.JScrollPane;\n+\n+public class bug4688907 {\n+    public static void main(String[] args) throws Exception {\n+        JScrollPane sp = new JScrollPane();\n+        Dimension d1 = sp.getMinimumSize();\n+        sp.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+        Dimension d2 = sp.getMinimumSize();\n+        if (d1.height == d2.height) {\n+            throw new RuntimeException(\"The scrollbar minimum size doesn't take \" +\n+                    \"into account horizontal scrollbar policy\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4688907.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4756178\n+ * @summary SpringLayout:applyDefaults() discards size information when right-aligning.\n+ * @key headful\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.Spring;\n+import javax.swing.SpringLayout;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4756178 {\n+    static JFrame fr;\n+    static JButton bt;\n+    static volatile Dimension buttonPreferredSize;\n+    static volatile Dimension actualSize;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4756178\");\n+                JPanel p = (JPanel) fr.getContentPane();\n+                SpringLayout layout = new SpringLayout();\n+                p.setLayout(layout);\n+\n+                SpringLayout.Constraints cc = new SpringLayout.Constraints();\n+                cc.setConstraint(\"East\",\n+                        Spring.sum(Spring.constant(-20),\n+                                layout.getConstraint(\"East\", p)));\n+                cc.setConstraint(\"South\",\n+                        Spring.sum(Spring.constant(-20),\n+                                layout.getConstraint(\"South\", p)));\n+\n+                bt = new JButton();\n+\n+                buttonPreferredSize = new Dimension(20, 20);\n+                bt.setPreferredSize(buttonPreferredSize);\n+                p.add(bt, cc);\n+\n+                fr.setSize(200, 200);\n+                fr.setLocationRelativeTo(null);\n+                fr.setVisible(true);\n+            });\n+\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                actualSize = bt.getSize();\n+            });\n+\n+            if (!buttonPreferredSize.equals(actualSize)) {\n+                    throw new RuntimeException(\"Button size is \" + actualSize +\n+                            \", should be \" + buttonPreferredSize);\n+                }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/SpringLayout\/bug4756178.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4803649\n+ * @summary setWidth() doesn't work on the container in a SpringLayout\n+ * @key headful\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.Spring;\n+import javax.swing.SpringLayout;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4803649 {\n+    static JFrame fr;\n+    static JPanel panel;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4803649\");\n+\n+                panel = new JPanel();\n+                SpringLayout layout = new SpringLayout();\n+                panel.setLayout(layout);\n+\n+                JTextArea textArea = new JTextArea(\"asasddsa\");\n+                textArea.setPreferredSize(new Dimension(200, 200));\n+                panel.add(textArea);\n+                SpringLayout.Constraints cCons = layout.getConstraints(textArea);\n+                cCons.setX(Spring.constant(10));\n+                cCons.setY(Spring.constant(10));\n+\n+                SpringLayout.Constraints pCons = layout.getConstraints(panel);\n+                pCons.setWidth(Spring.sum(Spring.constant(10),\n+                        cCons.getConstraint(\"East\")));\n+                pCons.setHeight(Spring.sum(Spring.constant(10),\n+                        cCons.getConstraint(\"South\")));\n+\n+                fr.getContentPane().add(panel);\n+\n+                fr.setLocationRelativeTo(null);\n+                fr.pack();\n+                fr.setVisible(true);\n+            });\n+\n+            Robot r = new Robot();\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                Dimension d = panel.getSize();\n+                if (d.width < 220 || d.height < 220) {\n+                    throw new RuntimeException(\"JPanel with the SpringLayout is too small\");\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/SpringLayout\/bug4803649.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"}]}