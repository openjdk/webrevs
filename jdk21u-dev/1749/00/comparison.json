{"files":[{"patch":"@@ -27,14 +27,2 @@\n- * @summary Test verifies set\/get TLS data and verifies it's consistency.\n- * Test set TLS with thread name which it belongs to and verify this information when getting test.\n- *  -- cbThreadStart\n- *  -- by AgentThread\n- *\n- * Test doesn't verify that TLS is not NULL because for some threads TLS is not initialized initially.\n- * TODO:\n- *  -- verify that TLS is not NULL (not possible to do with jvmti, ThreadStart might be called too late)\n- *  -- add more events where TLS is set *first time*, it is needed to test lazily jvmtThreadState init\n- *  -- set\/get TLS from other JavaThreads (not from agent and current thread)\n- *  -- set\/get for suspened (blocked?) threads\n- *  -- split test to \"sanity\" and \"stress\" version\n- *  -- update properties to run jvmti stress tests non-concurrently?\n- *\n+ * @summary Test verifies that JVMTI raw monitor wait\/notify works for\n+ * suspended virtual thread.\n@@ -67,2 +55,0 @@\n-\n-        Thread.sleep(1000);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/WaitNotifySuspendedVThreadTest.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+\/\/ Accessed using 'monitor' monitor.\n+bool is_breakpoint_reached = JNI_FALSE;\n@@ -45,2 +47,0 @@\n-\n-\n@@ -63,1 +63,0 @@\n-\n@@ -68,0 +67,8 @@\n+\n+  \/\/ Wait until virtual thread reach breakpoint and lock 'montior' monitor\n+  bool is_breakpoint_reached_local = JNI_FALSE;\n+  while (!is_breakpoint_reached_local) {\n+    RawMonitorLocker rml(jvmti_env, jni, monitor);\n+    is_breakpoint_reached_local = is_breakpoint_reached;\n+  }\n+\n@@ -74,0 +81,2 @@\n+  RawMonitorLocker completed(jvmti_env, jni, monitor_completed);\n+\n@@ -81,2 +90,0 @@\n-  RawMonitorLocker completed(jvmti_env, jni, monitor_completed);\n-\n@@ -107,0 +114,1 @@\n+\n@@ -114,0 +122,1 @@\n+    is_breakpoint_reached = JNI_TRUE;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/libWaitNotifySuspendedVThread.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"}]}