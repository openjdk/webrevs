{"files":[{"patch":"@@ -321,1 +321,12 @@\n-#define IOE_FORMAT \"error=%d, %s\"\n+#define IOE_FORMAT \"%s, error: %d (%s) %s\"\n+\n+#define SPAWN_HELPER_INTERNAL_ERROR_MSG \"\\n\" \\\n+  \"Possible reasons:\\n\" \\\n+  \"  - Spawn helper ran into JDK version mismatch\\n\" \\\n+  \"  - Spawn helper ran into unexpected internal error\\n\" \\\n+  \"  - Spawn helper was terminated by another process\\n\" \\\n+  \"Possible solutions:\\n\" \\\n+  \"  - Restart JVM, especially after in-place JDK updates\\n\" \\\n+  \"  - Check system logs for JDK-related errors\\n\" \\\n+  \"  - Re-install JDK to fix permission\/versioning problems\\n\" \\\n+  \"  - Switch to legacy launch mechanism with -Djdk.lang.Process.launchMechanism=VFORK\\n\"\n@@ -324,1 +335,1 @@\n-throwIOException(JNIEnv *env, int errnum, const char *defaultDetail)\n+throwIOExceptionImpl(JNIEnv *env, int errnum, const char *externalDetail, const char *internalDetail)\n@@ -326,1 +337,1 @@\n-    const char *detail = defaultDetail;\n+    const char *errorDetail;\n@@ -334,2 +345,7 @@\n-        if (ret != EINVAL)\n-            detail = tmpbuf;\n+        if (ret != EINVAL) {\n+            errorDetail = tmpbuf;\n+        } else {\n+            errorDetail = \"unknown\";\n+        }\n+    } else {\n+        errorDetail = \"none\";\n@@ -337,0 +353,1 @@\n+\n@@ -338,1 +355,1 @@\n-    fmtsize = sizeof(IOE_FORMAT) + strlen(detail) + 3 * sizeof(errnum);\n+    fmtsize = sizeof(IOE_FORMAT) + strlen(externalDetail) + 3 * sizeof(errnum) + strlen(errorDetail) +  strlen(internalDetail) + 1;\n@@ -343,1 +360,1 @@\n-    snprintf(errmsg, fmtsize, IOE_FORMAT, errnum, detail);\n+    snprintf(errmsg, fmtsize, IOE_FORMAT, externalDetail, errnum, errorDetail, internalDetail);\n@@ -354,0 +371,24 @@\n+\/**\n+ * Throws IOException that signifies an internal error, e.g. spawn helper failure.\n+ *\/\n+static void\n+throwInternalIOException(JNIEnv *env, int errnum, const char *externalDetail, int mode)\n+{\n+  switch (mode) {\n+    case MODE_POSIX_SPAWN:\n+      throwIOExceptionImpl(env, errnum, externalDetail, SPAWN_HELPER_INTERNAL_ERROR_MSG);\n+      break;\n+    default:\n+      throwIOExceptionImpl(env, errnum, externalDetail, \"\");\n+  }\n+}\n+\n+\/**\n+ * Throws IOException that signifies a normal error.\n+ *\/\n+static void\n+throwIOException(JNIEnv *env, int errnum, const char *externalDetail)\n+{\n+  throwIOExceptionImpl(env, errnum, externalDetail, \"\");\n+}\n+\n@@ -357,1 +398,1 @@\n-static void throwExitCause(JNIEnv *env, int pid, int status) {\n+static void throwExitCause(JNIEnv *env, int pid, int status, int mode) {\n@@ -361,1 +402,1 @@\n-            \"Failed to exec spawn helper: pid: %d, exit value: %d\",\n+            \"Failed to exec spawn helper: pid: %d, exit code: %d\",\n@@ -372,1 +413,1 @@\n-    throwIOException(env, 0, ebuf);\n+    throwInternalIOException(env, 0, ebuf, mode);\n@@ -695,1 +736,1 @@\n-        throwIOException(env, errno, \"Bad file descriptor\");\n+        throwInternalIOException(env, errno, \"Bad file descriptor\", c->mode);\n@@ -729,1 +770,1 @@\n-            throwIOException(env, errno, \"vfork failed\");\n+            throwInternalIOException(env, errno, \"vfork failed\", c->mode);\n@@ -732,1 +773,1 @@\n-            throwIOException(env, errno, \"fork failed\");\n+            throwInternalIOException(env, errno, \"fork failed\", c->mode);\n@@ -735,1 +776,1 @@\n-            throwIOException(env, errno, \"posix_spawn failed\");\n+            throwInternalIOException(env, errno, \"posix_spawn failed\", c->mode);\n@@ -749,1 +790,1 @@\n-                throwExitCause(env, p, tmpStatus);\n+                throwExitCause(env, p, tmpStatus, c->mode);\n@@ -756,2 +797,3 @@\n-                throwIOException(env, 0, \"Bad code from spawn helper \"\n-                                         \"(Failed to exec spawn helper)\");\n+                throwInternalIOException(env, 0,\n+                                         \"Bad code from spawn helper (Failed to exec spawn helper)\",\n+                                         c->mode);\n@@ -762,1 +804,1 @@\n-            throwIOException(env, errno, \"Read failed\");\n+          throwInternalIOException(env, errno, \"Read failed\", c->mode);\n@@ -774,1 +816,1 @@\n-        throwIOException(env, errno, \"Read failed\");\n+        throwInternalIOException(env, errno, \"Read failed\", c->mode);\n","filename":"src\/java.base\/unix\/native\/libjava\/ProcessImpl_md.c","additions":61,"deletions":19,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ *      8352533\n@@ -92,0 +93,1 @@\n+    static final String SPAWNHELPER_FAILURE_MSG = \"(Possible reasons:)\";\n@@ -324,1 +326,3 @@\n-                ! matches(m, PERMISSION_DENIED_ERROR_MSG))\n+                !matches(m, PERMISSION_DENIED_ERROR_MSG))\n+                unexpected(e);\n+            if (matches(m, SPAWNHELPER_FAILURE_MSG))\n@@ -434,1 +438,3 @@\n-                                ! matches(m, NO_SUCH_FILE_ERROR_MSG))\n+                                !matches(m, NO_SUCH_FILE_ERROR_MSG))\n+                                unexpected(e);\n+                            if (matches(m, SPAWNHELPER_FAILURE_MSG))\n@@ -447,1 +453,3 @@\n-                                ! matches(m, NO_SUCH_FILE_ERROR_MSG))\n+                                !matches(m, NO_SUCH_FILE_ERROR_MSG))\n+                                unexpected(e);\n+                            if (matches(m, SPAWNHELPER_FAILURE_MSG))\n@@ -2055,0 +2063,2 @@\n+            if (matches(m, SPAWNHELPER_FAILURE_MSG))\n+                unexpected(e);\n@@ -2072,0 +2082,2 @@\n+                if (matches(m, SPAWNHELPER_FAILURE_MSG))\n+                    unexpected(e);\n@@ -2088,0 +2100,2 @@\n+            if (matches(m, SPAWNHELPER_FAILURE_MSG))\n+                unexpected(e);\n@@ -2146,2 +2160,3 @@\n-                        check(expected.getMessage()\n-                              .matches(\"[Ss]tream [Cc]losed\"));\n+                        String m = expected.getMessage();\n+                        check(m.matches(\"[Ss]tream [Cc]losed\"));\n+                        check(!matches(m, SPAWNHELPER_FAILURE_MSG));\n@@ -2199,1 +2214,2 @@\n-                            if (!ioe.getMessage().equals(\"Stream closed\")) {\n+                            String m = ioe.getMessage();\n+                            if (!m.equals(\"Stream closed\")) {\n@@ -2203,0 +2219,3 @@\n+                            if (matches(m, SPAWNHELPER_FAILURE_MSG)) {\n+                                unexpected(ioe);\n+                            }\n@@ -2256,0 +2275,3 @@\n+                            if (matches(msg, SPAWNHELPER_FAILURE_MSG)) {\n+                                unexpected(e);\n+                            }\n@@ -2348,0 +2370,3 @@\n+            if (matches(m, SPAWNHELPER_FAILURE_MSG)) {\n+                unexpected(e);\n+            }\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/Basic.java","additions":31,"deletions":6,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -52,0 +52,2 @@\n+    private static final String SPAWNHELPER_FAILURE_MSG = \"Possible reasons:\";\n+\n@@ -58,0 +60,1 @@\n+            \/\/ Check that exception contains rich message on failure.\n@@ -59,1 +62,5 @@\n-            System.exit(ERROR);\n+            if (e instanceof IOException && e.getMessage().contains(SPAWNHELPER_FAILURE_MSG)) {\n+                System.exit(ERROR);\n+            } else {\n+                System.exit(ERROR + 3);\n+            }\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/JspawnhelperProtocol.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}