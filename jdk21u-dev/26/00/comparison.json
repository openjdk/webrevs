{"files":[{"patch":"@@ -4638,1 +4638,1 @@\n-                    hasBindings(patternLabel.pat)) {\n+                    (hasBindings(patternLabel.pat) || hasBindings(c.guard))) {\n@@ -4642,1 +4642,1 @@\n-                           hasBindings(patternLabel.pat) &&\n+                           (hasBindings(patternLabel.pat) || hasBindings(c.guard)) &&\n@@ -4651,1 +4651,1 @@\n-    boolean hasBindings(JCPattern p) {\n+    boolean hasBindings(JCTree p) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/**\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8314578\n+ * @enablePreview\n+ * @summary Parsing of erroneous patterns succeeds\n+ * @compile\/fail\/ref=T8314578.out -XDrawDiagnostics T8314578.java\n+ *\/\n+public class T8314578 {\n+    record R1() {}\n+    record R2() {}\n+\n+    static void test(Object o) {\n+        switch (o) {\n+            case R1() when o instanceof String s:\n+            case R2() when o instanceof Integer i:\n+                System.out.println(\"hello: \" + i);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n+    static void test2(Object o) {\n+        switch (o) {\n+            case R1() when o instanceof String s:\n+                System.out.println(\"hello: \" + s);\n+            case R2() when o instanceof Integer i:\n+                System.out.println(\"hello: \" + i);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n+    static int unnamedInGuardsOK(String s) {\n+        return switch (s) {\n+            case String _ when s instanceof String _ ->  \/\/ should be OK\n+                    1;\n+            default ->\n+                    -1;\n+        };\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314578.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,6 @@\n+T8314578.java:14:18: compiler.err.flows.through.from.pattern\n+T8314578.java:15:18: compiler.err.flows.through.to.pattern\n+T8314578.java:27:18: compiler.err.flows.through.to.pattern\n+- compiler.note.preview.filename: T8314578.java, DEFAULT\n+- compiler.note.preview.recompile\n+3 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314578.out","additions":6,"deletions":0,"binary":false,"changes":6,"status":"added"}]}