{"files":[{"patch":"@@ -38,3 +38,0 @@\n-import com.sun.net.httpserver.HttpServer;\n-import com.sun.net.httpserver.HttpsConfigurator;\n-import com.sun.net.httpserver.HttpsServer;\n@@ -59,2 +56,0 @@\n-import java.net.InetAddress;\n-import java.net.InetSocketAddress;\n@@ -83,1 +78,0 @@\n-import java.util.stream.Stream;\n@@ -85,1 +79,0 @@\n-import jdk.httpclient.test.lib.http2.Http2TestServer;\n@@ -87,1 +80,0 @@\n-import static java.lang.System.arraycopy;\n@@ -94,0 +86,1 @@\n+import static org.testng.Assert.assertFalse;\n@@ -182,1 +175,1 @@\n-    static final void printFailedTests(ITestContext context) {\n+    static void printFailedTests(ITestContext context) {\n@@ -185,1 +178,1 @@\n-                .collect(Collectors.toMap(r -> name(r), ITestResult::getThrowable));\n+                .collect(Collectors.toMap(CancelRequestTest::name, ITestResult::getThrowable));\n@@ -192,3 +185,3 @@\n-            FAILURES.entrySet().forEach((e) -> {\n-                out.printf(\"\\t%s: %s%n\", e.getKey(), e.getValue());\n-                e.getValue().printStackTrace(out);\n+            FAILURES.forEach((key, value) -> {\n+                out.printf(\"\\t%s: %s%n\", key, value);\n+                value.printStackTrace(out);\n@@ -330,1 +323,1 @@\n-                assertEquals(body, Stream.of(BODY.split(\"\\\\|\")).collect(Collectors.joining()));\n+                assertEquals(body, String.join(\"\", BODY.split(\"\\\\|\")));\n@@ -351,1 +344,1 @@\n-                assertEquals(body, Stream.of(BODY.split(\"\\\\|\")).collect(Collectors.joining()));\n+                assertEquals(body, String.join(\"\", BODY.split(\"\\\\|\")));\n@@ -358,1 +351,1 @@\n-                assertEquals(response.isDone(), true);\n+                assertTrue(response.isDone());\n@@ -386,2 +379,2 @@\n-            assertEquals(response.isDone(), true);\n-            assertEquals(response.isCancelled(), false);\n+            assertTrue(response.isDone());\n+            assertFalse(response.isCancelled());\n@@ -389,2 +382,2 @@\n-            assertEquals(cf2.isDone(), true);\n-            assertEquals(cf2.isCancelled(), false);\n+            assertTrue(cf2.isDone());\n+            assertFalse(cf2.isCancelled());\n@@ -400,0 +393,2 @@\n+        assert client != null;\n+        if (!sameClient) client.close();\n@@ -416,1 +411,1 @@\n-            Iterable<byte[]> iterable = new Iterable<byte[]>() {\n+            Iterable<byte[]> iterable = new Iterable<>() {\n@@ -451,1 +446,1 @@\n-                assertEquals(body, Stream.of(BODY.split(\"\\\\|\")).collect(Collectors.joining()));\n+                assertEquals(body, String.join(\"\", BODY.split(\"\\\\|\")));\n@@ -472,1 +467,1 @@\n-                assertEquals(body, Stream.of(BODY.split(\"\\\\|\")).collect(Collectors.joining()));\n+                assertEquals(body, String.join(\"\", BODY.split(\"\\\\|\")));\n@@ -479,1 +474,1 @@\n-                assertEquals(response.isDone(), true);\n+                assertTrue(response.isDone());\n@@ -498,2 +493,2 @@\n-            assertEquals(response.isDone(), true);\n-            assertEquals(response.isCancelled(), false);\n+            assertTrue(response.isDone());\n+            assertFalse(response.isCancelled());\n@@ -501,2 +496,2 @@\n-            assertEquals(cf2.isDone(), true);\n-            assertEquals(cf2.isCancelled(), false);\n+            assertTrue(cf2.isDone());\n+            assertFalse(cf2.isCancelled());\n@@ -512,0 +507,2 @@\n+        assert client != null;\n+        if (!sameClient) client.close();\n@@ -575,1 +572,1 @@\n-                assertEquals(body, Stream.of(BODY.split(\"\\\\|\")).collect(Collectors.joining()));\n+                assertEquals(body, String.join(\"\", BODY.split(\"\\\\|\")));\n@@ -579,1 +576,1 @@\n-            var error = TRACKER.check(tracker, 1000,\n+            var error = TRACKER.check(tracker, 2000,\n@@ -586,0 +583,2 @@\n+        assert client != null;\n+        if (!sameClient) client.close();\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelRequestTest.java","additions":29,"deletions":30,"binary":false,"changes":59,"status":"modified"}]}