{"files":[{"patch":"@@ -604,2 +604,0 @@\n-java\/rmi\/transport\/checkLeaseInfoLeak\/CheckLeaseLeak.java       7191877 generic-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,0 @@\n-import sun.rmi.transport.*;\n-import sun.rmi.*;\n@@ -63,0 +61,1 @@\n+import sun.rmi.transport.*;\n@@ -105,2 +104,0 @@\n-                                        \" -Djava.security.policy=\" +\n-                                        TestParams.defaultPolicy +\n@@ -131,2 +128,2 @@\n-        \/* numLeft should be 2 - if 11 there is a problem. *\/\n-        if (numLeft > 2) {\n+        \/* numLeft should be 4 - if 11 there is a problem. *\/\n+        if (numLeft > 4) {\n@@ -159,37 +156,32 @@\n-            f = (Field) java.security.AccessController.doPrivileged\n-                (new java.security.PrivilegedExceptionAction() {\n-                    public Object run() throws Exception {\n-\n-                        ObjID dgcID = new ObjID(DGC_ID);\n-\n-                        \/*\n-                         * Construct an ObjectEndpoint containing DGC's\n-                         * ObjID.\n-                         *\/\n-                        Class oeClass =\n-                            Class.forName(\"sun.rmi.transport.ObjectEndpoint\");\n-                        Class[] constrParams =\n-                            new Class[]{ ObjID.class, Transport.class };\n-                        Constructor oeConstructor =\n-                            oeClass.getDeclaredConstructor(constrParams);\n-                        oeConstructor.setAccessible(true);\n-                        Object oe =\n-                            oeConstructor.newInstance(\n-                                new Object[]{ dgcID, null });\n-\n-                        \/*\n-                         * Get Target that contains DGCImpl in ObjectTable\n-                         *\/\n-                        Class objTableClass =\n-                            Class.forName(\"sun.rmi.transport.ObjectTable\");\n-                        Class getTargetParams[] = new Class[] { oeClass };\n-                        Method objTableGetTarget =\n-                            objTableClass.getDeclaredMethod(\"getTarget\",\n-                                                            getTargetParams);\n-                        objTableGetTarget.setAccessible(true);\n-                        Target dgcTarget = (Target)\n-                            objTableGetTarget.invoke(null, new Object[]{ oe });\n-\n-                        \/* get the DGCImpl from its Target *\/\n-                        Method targetGetImpl =\n-                            dgcTarget.getClass().getDeclaredMethod\n+            ObjID dgcID = new ObjID(DGC_ID);\n+            \/*\n+             * Construct an ObjectEndpoint containing DGC's\n+             * ObjID.\n+             *\/\n+            Class oeClass =\n+                    Class.forName(\"sun.rmi.transport.ObjectEndpoint\");\n+            Class[] constrParams =\n+                    new Class[]{ ObjID.class, Transport.class };\n+            Constructor oeConstructor =\n+                    oeClass.getDeclaredConstructor(constrParams);\n+            oeConstructor.setAccessible(true);\n+            Object oe =\n+                    oeConstructor.newInstance(\n+                            new Object[]{ dgcID, null });\n+\n+            \/*\n+             * Get Target that contains DGCImpl in ObjectTable\n+             *\/\n+            Class objTableClass =\n+                    Class.forName(\"sun.rmi.transport.ObjectTable\");\n+            Class getTargetParams[] = new Class[] { oeClass };\n+            Method objTableGetTarget =\n+                    objTableClass.getDeclaredMethod(\"getTarget\",\n+                            getTargetParams);\n+            objTableGetTarget.setAccessible(true);\n+            Target dgcTarget = (Target)\n+                    objTableGetTarget.invoke(null, new Object[]{ oe });\n+\n+            \/* get the DGCImpl from its Target *\/\n+            Method targetGetImpl =\n+                    dgcTarget.getClass().getDeclaredMethod\n@@ -197,3 +189,3 @@\n-                        targetGetImpl.setAccessible(true);\n-                        dgcImpl[0] =\n-                            (Remote) targetGetImpl.invoke(dgcTarget, null);\n+            targetGetImpl.setAccessible(true);\n+            dgcImpl[0] =\n+                    (Remote) targetGetImpl.invoke(dgcTarget, null);\n@@ -201,3 +193,3 @@\n-                        \/* Get the lease table from the DGCImpl. *\/\n-                        Field reflectedLeaseTable =\n-                            dgcImpl[0].getClass().getDeclaredField\n+            \/* Get the lease table from the DGCImpl. *\/\n+            Field reflectedLeaseTable =\n+                    dgcImpl[0].getClass().getDeclaredField\n@@ -205,1 +197,3 @@\n-                        reflectedLeaseTable.setAccessible(true);\n+            reflectedLeaseTable.setAccessible(true);\n+\n+            f = reflectedLeaseTable;\n@@ -207,3 +201,0 @@\n-                        return reflectedLeaseTable;\n-                    }\n-            });\n@@ -220,3 +211,0 @@\n-            if (e instanceof java.security.PrivilegedActionException)\n-                e = ((java.security.PrivilegedActionException) e).\n-                    getException();\n","filename":"test\/jdk\/java\/rmi\/transport\/checkLeaseInfoLeak\/CheckLeaseLeak.java","additions":45,"deletions":57,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-        TestLibrary.suggestSecurityManager(\"java.rmi.RMISecurityManager\");\n","filename":"test\/jdk\/java\/rmi\/transport\/checkLeaseInfoLeak\/LeaseLeakClient.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}