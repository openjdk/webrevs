{"files":[{"patch":"@@ -2355,1 +2355,1 @@\n-  int size = MIN2((UseSVE > 0) ? (int)FloatRegister::sve_vl_max : (int)FloatRegister::neon_vl, (int)MaxVectorSize);\n+  int size = MIN2((UseSVE > 0) ? 256 : 16, (int)MaxVectorSize);\n@@ -2394,1 +2394,1 @@\n-  if (UseSVE > 0 && FloatRegister::neon_vl < len && len <= FloatRegister::sve_vl_max) {\n+  if (UseSVE > 0 && 16 < len && len <= 256) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-    if (UseSVE == 0 && length_in_bytes > FloatRegister::neon_vl) {\n+    if (UseSVE == 0 && length_in_bytes > 16) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-    if (UseSVE == 0 && length_in_bytes > FloatRegister::neon_vl) {\n+    if (UseSVE == 0 && length_in_bytes > 16) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6005,3 +6005,0 @@\n-  if (!UseSVE || VM_Version::get_max_supported_sve_vector_length() == FloatRegister::sve_vl_min) {\n-    return;\n-  }\n@@ -6009,0 +6006,1 @@\n+  if (!UseSVE) return;\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"register_aarch64.hpp\"\n@@ -48,1 +47,0 @@\n-int VM_Version::_max_supported_sve_vector_length;\n@@ -525,3 +523,2 @@\n-    } else if (MaxVectorSize < FloatRegister::sve_vl_min) {\n-      warning(\"SVE does not support vector length less than %d bytes. Disabling SVE.\",\n-              FloatRegister::sve_vl_min);\n+    } else if (MaxVectorSize < 16) {\n+      warning(\"SVE does not support vector length less than 16 bytes. Disabling SVE.\");\n@@ -529,19 +526,11 @@\n-    } else if (!((MaxVectorSize % FloatRegister::sve_vl_min) == 0 && is_power_of_2(MaxVectorSize))) {\n-      vm_exit_during_initialization(err_msg(\"Unsupported MaxVectorSize: %d\", (int)MaxVectorSize));\n-    }\n-\n-    if (UseSVE > 0) {\n-      \/\/ Acquire the largest supported vector length of this machine\n-      _max_supported_sve_vector_length = set_and_get_current_sve_vector_length(FloatRegister::sve_vl_max);\n-\n-      if (MaxVectorSize != _max_supported_sve_vector_length) {\n-        int new_vl = set_and_get_current_sve_vector_length(MaxVectorSize);\n-        if (new_vl < 0) {\n-          vm_exit_during_initialization(\n-            err_msg(\"Current system does not support SVE vector length for MaxVectorSize: %d\",\n-                    (int)MaxVectorSize));\n-        } else if (new_vl != MaxVectorSize) {\n-          warning(\"Current system only supports max SVE vector length %d. Set MaxVectorSize to %d\",\n-                  new_vl, new_vl);\n-        }\n-        MaxVectorSize = new_vl;\n+    } else if ((MaxVectorSize % 16) == 0 && is_power_of_2(MaxVectorSize)) {\n+      int new_vl = set_and_get_current_sve_vector_length(MaxVectorSize);\n+      _initial_sve_vector_length = new_vl;\n+      \/\/ Update MaxVectorSize to the largest supported value.\n+      if (new_vl < 0) {\n+        vm_exit_during_initialization(\n+          err_msg(\"Current system does not support SVE vector length for MaxVectorSize: %d\",\n+                  (int)MaxVectorSize));\n+      } else if (new_vl != MaxVectorSize) {\n+        warning(\"Current system only supports max SVE vector length %d. Set MaxVectorSize to %d\",\n+                new_vl, new_vl);\n@@ -549,1 +538,3 @@\n-      _initial_sve_vector_length = MaxVectorSize;\n+      MaxVectorSize = new_vl;\n+    } else {\n+      vm_exit_during_initialization(err_msg(\"Unsupported MaxVectorSize: %d\", (int)MaxVectorSize));\n@@ -555,1 +546,1 @@\n-    int max_vector_size = FloatRegister::neon_vl;\n+    int max_vector_size = 16;\n@@ -567,1 +558,1 @@\n-      FLAG_SET_DEFAULT(MaxVectorSize, FloatRegister::neon_vl);\n+      FLAG_SET_DEFAULT(MaxVectorSize, 16);\n@@ -571,1 +562,1 @@\n-  int inline_size = (UseSVE > 0 && MaxVectorSize >= FloatRegister::sve_vl_min) ? MaxVectorSize : 0;\n+  int inline_size = (UseSVE > 0 && MaxVectorSize >= 16) ? MaxVectorSize : 0;\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":19,"deletions":28,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-  static int _max_supported_sve_vector_length;\n@@ -168,2 +167,1 @@\n-  static int get_initial_sve_vector_length()        { return _initial_sve_vector_length; };\n-  static int get_max_supported_sve_vector_length()  { return _max_supported_sve_vector_length; };\n+  static int get_initial_sve_vector_length()  { return _initial_sve_vector_length; };\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}