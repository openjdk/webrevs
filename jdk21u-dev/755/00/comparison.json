{"files":[{"patch":"@@ -34,3 +34,3 @@\n- import jdk.test.lib.cds.CDSTestUtils;\n- import jdk.test.lib.process.OutputAnalyzer;\n- import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n@@ -38,1 +38,1 @@\n- public class TestCDSVMCrash {\n+public class TestCDSVMCrash {\n@@ -40,17 +40,18 @@\n-     public static void main(String[] args) throws Exception {\n-         if (args.length == 1) {\n-             \/\/ This should guarantee to throw:\n-             \/\/ java.lang.OutOfMemoryError: Requested array size exceeds VM limit\n-             try {\n-                 Object[] oa = new Object[Integer.MAX_VALUE];\n-                 throw new Error(\"OOME not triggered\");\n-             } catch (OutOfMemoryError err) {\n-                 throw new Error(\"OOME didn't abort JVM!\");\n-             }\n-         }\n-         \/\/ else this is the main test\n-         ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n-                  \"-XX:-CreateCoredumpOnCrash\", \"-Xmx128m\", \"-Xshare:on\", TestCDSVMCrash.class.getName(),\"throwOOME\");\n-         OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-         \/\/ executeAndLog should throw an exception in the VM crashed\n-         try {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 1) {\n+            \/\/ This should guarantee to throw:\n+            \/\/ java.lang.OutOfMemoryError: Requested array size exceeds VM limit\n+            try {\n+                Object[] oa = new Object[Integer.MAX_VALUE];\n+                throw new Error(\"OOME not triggered\");\n+            } catch (OutOfMemoryError err) {\n+                throw new Error(\"OOME didn't abort JVM!\");\n+            }\n+        }\n+        \/\/ else this is the main test\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n+                                                                             \"-XX:-CreateCoredumpOnCrash\", \"-Xmx128m\",\n+                                                                             \"-Xshare:on\", TestCDSVMCrash.class.getName(),\n+                                                                             \"throwOOME\");\n+        \/\/ executeAndLog should throw an exception in the VM crashed\n+        try {\n@@ -59,1 +60,1 @@\n-         } catch(RuntimeException e) {\n+        } catch(RuntimeException e) {\n@@ -61,1 +62,1 @@\n-              throw new Error(\"Expected message: Hotspot crashed\");\n+                throw new Error(\"Expected message: Hotspot crashed\");\n@@ -63,7 +64,1 @@\n-         }\n-         int exitValue = output.getExitValue();\n-         if (0 == exitValue) {\n-             \/\/expecting a non zero value\n-             throw new Error(\"Expected to get non zero exit value\");\n-         }\n-        output.shouldContain(\"A fatal error has been detected by the Java Runtime Environment\");\n+        }\n@@ -71,2 +66,2 @@\n-     }\n- }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/TestCDSVMCrash.java","additions":27,"deletions":32,"binary":false,"changes":59,"status":"modified"}]}