{"files":[{"patch":"@@ -72,0 +72,3 @@\n+  \/\/ Caveat: BufferUpdater is not MT-safe. We use it only for testing.\n+  \/\/ We would observe missing loglines if we interleaved buffers.\n+  \/\/ Emit all logs between constructor and destructor of BufferUpdater.\n@@ -73,3 +76,1 @@\n-    auto writer = AsyncLogWriter::instance();\n-    if (writer != nullptr) {\n-      const size_t sz = 2000;\n+    const size_t sz = 2000;\n@@ -77,3 +78,4 @@\n-      \/\/ shrink async buffer.\n-      AsyncLogWriter::BufferUpdater saver(1024);\n-      LogMessage(logging) lm;\n+    \/\/ shrink async buffer.\n+    AsyncLogWriter::BufferUpdater saver(1024);\n+    test_asynclog_ls(); \/\/ roughly 200 bytes.\n+    LogMessage(logging) lm;\n@@ -81,5 +83,3 @@\n-      \/\/ write more messages than its capacity in burst\n-      for (size_t i = 0; i < sz; ++i) {\n-        lm.debug(\"a lot of log...\");\n-      }\n-      lm.flush();\n+    \/\/ write more messages than its capacity in burst\n+    for (size_t i = 0; i < sz; ++i) {\n+      lm.debug(\"a lot of log...\");\n@@ -87,0 +87,1 @@\n+    lm.flush();\n@@ -96,2 +97,1 @@\n-      \/\/ at least see \"header\"\n-      return fclose(f) == 0 && sz == written && sz >= 6;\n+      return fclose(f) == 0 && sz == written;\n@@ -247,0 +247,4 @@\n+  if (AsyncLogWriter::instance() == nullptr) {\n+    return;\n+  }\n+\n@@ -249,5 +253,1 @@\n-\n-  AsyncLogWriter::flush();\n-  if (AsyncLogWriter::instance() != nullptr) {\n-    EXPECT_TRUE(file_contains_substring(TestLogFileName, \"messages dropped due to async logging\"));\n-  }\n+  EXPECT_TRUE(file_contains_substring(TestLogFileName, \"messages dropped due to async logging\"));\n@@ -258,1 +258,0 @@\n-  fprintf(stdout, \"header\");\n@@ -261,2 +260,7 @@\n-  test_asynclog_ls();\n-  test_asynclog_drop_messages();\n+  bool async = AsyncLogWriter::instance() != nullptr;\n+  if (async) {\n+    test_asynclog_drop_messages();\n+    AsyncLogWriter::flush();\n+  } else {\n+    test_asynclog_ls();\n+  }\n@@ -264,1 +268,0 @@\n-  AsyncLogWriter::flush();\n@@ -266,1 +269,0 @@\n-\n@@ -268,1 +270,0 @@\n-    EXPECT_TRUE(file_contains_substring(TestLogFileName, \"header\"));\n@@ -273,1 +274,1 @@\n-    if (AsyncLogWriter::instance() != nullptr) {\n+    if (async) {\n@@ -281,1 +282,0 @@\n-  fprintf(stderr, \"header\");\n@@ -284,2 +284,7 @@\n-  test_asynclog_ls();\n-  test_asynclog_drop_messages();\n+  bool async = AsyncLogWriter::instance() != nullptr;\n+  if (async) {\n+    test_asynclog_drop_messages();\n+    AsyncLogWriter::flush();\n+  } else {\n+    test_asynclog_ls();\n+  }\n@@ -287,1 +292,0 @@\n-  AsyncLogWriter::flush();\n@@ -289,1 +293,0 @@\n-\n@@ -291,1 +294,0 @@\n-    EXPECT_TRUE(file_contains_substring(TestLogFileName, \"header\"));\n@@ -296,1 +298,1 @@\n-    if (AsyncLogWriter::instance() != nullptr) {\n+    if (async) {\n","filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp","additions":34,"deletions":32,"binary":false,"changes":66,"status":"modified"}]}