{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-            failed(\"Socket.getInputStream().read() returned unexpectedly!!\");\n+            failed(\"Socket.getInputStream().read() returned unexpectedly, n=\" + n);\n@@ -80,9 +80,10 @@\n-            ServerSocket ss = new ServerSocket(0, 0, lh);\n-            s.connect( new InetSocketAddress(lh, ss.getLocalPort()) );\n-            Socket s2 = ss.accept();\n-            Thread thr = new Thread(this);\n-            thr.start();\n-            latch.await();\n-            Thread.sleep(5000); \/\/sleep, so Socket.getInputStream().read() can block\n-            s.close();\n-            thr.join();\n+            try (ServerSocket ss = new ServerSocket(0, 0, lh)) {\n+                s.connect(new InetSocketAddress(lh, ss.getLocalPort()));\n+                try (Socket s2 = ss.accept()) {\n+                    Thread thr = new Thread(this);\n+                    thr.start();\n+                    latch.await();\n+                    Thread.sleep(5000); \/\/sleep, so Socket.getInputStream().read() can block\n+                    s.close();\n+                    thr.join();\n+                }\n@@ -90,4 +91,5 @@\n-            if (isClosed()) {\n-                return passed();\n-            } else {\n-                return failed(\"Socket.getInputStream().read() wasn't preempted\");\n+                if (isClosed()) {\n+                    return passed();\n+                } else {\n+                    return failed(\"Socket.getInputStream().read() wasn't preempted\");\n+                }\n","filename":"test\/jdk\/java\/net\/Socket\/asyncClose\/Socket_getInputStream_read.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,9 +69,10 @@\n-            ServerSocket ss = new ServerSocket(0, 0, lh);\n-            s.connect( new InetSocketAddress(lh, ss.getLocalPort()) );\n-            Socket s2 = ss.accept();\n-            Thread thr = new Thread(this);\n-            thr.start();\n-            latch.await();\n-            Thread.sleep(1000);\n-            s.close();\n-            thr.join();\n+            try (ServerSocket ss = new ServerSocket(0, 0, lh)) {\n+                s.connect(new InetSocketAddress(lh, ss.getLocalPort()));\n+                try (Socket s2 = ss.accept()) {\n+                    Thread thr = new Thread(this);\n+                    thr.start();\n+                    latch.await();\n+                    Thread.sleep(1000);\n+                    s.close();\n+                    thr.join();\n+                }\n@@ -79,4 +80,5 @@\n-            if (isClosed()) {\n-                return passed();\n-            } else {\n-                return failed(\"Socket.getOutputStream().write() wasn't preempted\");\n+                if (isClosed()) {\n+                    return passed();\n+                } else {\n+                    return failed(\"Socket.getOutputStream().write() wasn't preempted\");\n+                }\n","filename":"test\/jdk\/java\/net\/Socket\/asyncClose\/Socket_getOutputStream_write.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"}]}