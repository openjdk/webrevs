{"files":[{"patch":"@@ -1,53 +0,0 @@\n-<!--\n-Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n-DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-This code is free software; you can redistribute it and\/or modify it\n-under the terms of the GNU General Public License version 2 only, as\n-published by the Free Software Foundation.\n-\n-This code is distributed in the hope that it will be useful, but WITHOUT\n-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-version 2 for more details (a copy is included in the LICENSE file that\n-accompanied this code).\n-\n-You should have received a copy of the GNU General Public License version\n-2 along with this work; if not, write to the Free Software Foundation,\n-Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n-Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-or visit www.oracle.com if you need additional information or have any\n-questions.\n--->\n-\n-<html>\n-<head>\n-<title> DiacriticsTest <\/title>\n-<\/head>\n-<body>\n-<applet code=\"DiacriticsTest.class\" width=350 height=200><\/applet>\n-\n-Test run requires the following keyboard layouts to be installed:\n-Linux OS: English (US, alternative international)\n-Windows OS: Hungarian\n-A keyboard layout having compose function or compose-like key. Programmer\n-Dvorak (http:\/\/www.kaufmann.no\/roland\/dvorak\/) is suggested to use.\n-\n-To test JDK-8000423 fix (Linux only!):\n-please switch to US alternative international layout and try to type diacritics\n-(using the following combinations: `+e; `+u; etc.)\n-\n-To test JDK-7197619 fix (Windows only!):\n-please switch to Hungarian keyboard layout and try to type diacritics \n-(Ctrl+Alt+2 e; Ctrl+Alt+2 E)\n-\n-To test JDK-8139189 fix:\n-please switch to Programmer Dvorak keyboard layout try to type diacritics\n-using compose combinations (Compose+z+d, Compose+z+Shift+d). The Compose key\n-in Programmer Dvorak layout is OEM102 the key which is located between\n-Left Shift and Z keys on the standard 102-key keyboard.\n-\n-If you can do that then the test is passed; otherwise failed.\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/InputMethods\/DiacriticsTest\/DiacriticsTest.html","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,5 @@\n+import jdk.test.lib.Platform;\n+import java.awt.GridLayout;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import javax.swing.JPanel;\n@@ -26,5 +31,8 @@\n-  @test\n-  @bug 8000423 7197619 8025649\n-  @summary Check if diacritical signs could be typed for TextArea and TextField\n-  @run applet\/manual=yesno DiacriticsTest.html\n-*\/\n+ * @test\n+ * @bug 8000423 7197619 8025649\n+ * @summary Check if diacritical signs could be typed for TextArea and TextField\n+ * @requires (os.family == \"windows\" | os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jdk.test.lib.Platform\n+ * @run main\/manual DiacriticsTest\n+ *\/\n@@ -32,0 +40,1 @@\n+public class DiacriticsTest {\n@@ -33,3 +42,5 @@\n-import java.applet.Applet;\n-import java.awt.*;\n-import javax.swing.JPanel;\n+    private static final String INSTRUCTIONS_WIN = \"\"\"\n+    Test run requires the following keyboard layouts to be installed:\n+    - Hungarian\n+    - A keyboard layout having compose function or compose-like key. Programmer\n+    Dvorak (http:\/\/www.kaufmann.no\/roland\/dvorak\/) is suggested to use.\n@@ -37,0 +48,2 @@\n+    To the right are a text area and a text field, you should check the behavior\n+    for both of them.\n@@ -38,1 +51,3 @@\n-public class DiacriticsTest extends Applet {\n+    To test the JDK-7197619 fix:\n+    Please switch to Hungarian keyboard layout and try to type diacritics\n+    (Ctrl+Alt+2 e; Ctrl+Alt+2 E)\n@@ -40,3 +55,19 @@\n-    public void init() {\n-        this.setLayout(new BorderLayout());\n-    }\n+    To test the JDK-8139189 fix:\n+    Please switch to Programmer Dvorak keyboard layout try to type diacritics\n+    using compose combinations (Compose+z+d, Compose+z+Shift+d).\n+\n+    The Compose key in the Programmer Dvorak layout is OEM102, the key located\n+    between the and Z keys on a standard 102-key keyboard.\n+    If you do not have this key on your keyboard, you can skip this part of the test.\n+\n+    If you can do that then the test is passed; otherwise failed.\n+    \"\"\";\n+\n+    private static final String INSTRUCTIONS_LIN = \"\"\"\n+    Test run requires the following keyboard layouts to be installed:\n+    - English (US, alternative international), aka English (US, alt. intl.)\n+    - A keyboard layout having compose function or compose-like key. Programmer\n+    Dvorak (http:\/\/www.kaufmann.no\/roland\/dvorak\/) is suggested to use.\n+\n+    To the right are a text area and a text field, you should check the behavior\n+    for both of them.\n@@ -44,1 +75,3 @@\n-    public void start() {\n+    To test the JDK-8000423 fix:\n+    Please switch to US alternative international layout and try to type diacritics\n+    (using the following combinations: `+e; `+u; etc.)\n@@ -46,1 +79,3 @@\n-        setSize(350, 200);\n+    To test the JDK-8139189 fix:\n+    Please switch to Programmer Dvorak keyboard layout try to type diacritics\n+    using compose combinations (Compose+z+d, Compose+z+Shift+d)..\n@@ -48,0 +83,29 @@\n+    The Compose key in the Programmer Dvorak layout is OEM102, the key located\n+    between the and Z keys on a standard 102-key keyboard.\n+\n+    If the above key does not work in the Gnome shell,\n+    it can be overridden in the system preferences:\n+    System > Keyboard > Special character entry > Compose key\n+    and set it to another key(e.g. menu key or scroll lock.)\n+\n+    If you can do that then the test is passed; otherwise failed.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String instructions = Platform.isWindows()\n+                ? INSTRUCTIONS_WIN\n+                : INSTRUCTIONS_LIN;\n+\n+        PassFailJFrame\n+                .builder()\n+                .title(\"DiacriticsTest Instructions\")\n+                .instructions(instructions)\n+                .splitUIRight(DiacriticsTest::createPanel)\n+                .testTimeOut(10)\n+                .rows((int) instructions.lines().count() + 2)\n+                .columns(50)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JPanel createPanel() {\n@@ -57,4 +121,1 @@\n-        add(panel, BorderLayout.CENTER);\n-\n-        validate();\n-        setVisible(true);\n+        return panel;\n@@ -63,1 +124,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/InputMethods\/DiacriticsTest\/DiacriticsTest.java","additions":80,"deletions":20,"binary":false,"changes":100,"status":"modified"}]}