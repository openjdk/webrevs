{"files":[{"patch":"@@ -142,0 +142,15 @@\n+    \/\/ get thread ID for \"startNewThread\" command\n+    private long getNewThreadId() throws Exception {\n+        final String debugeeClassSig = \"L\" + getDebugeeClassName().replace('.', '\/') + \";\";\n+        log.display(\"  getting classID for \" + debugeeClassSig);\n+        long classID = debuggee.getReferenceTypeID(debugeeClassSig);\n+        log.display(\"  got classID: \" + classID);\n+\n+        log.display(\"  getting testNewThread field value\");\n+        JDWP.Value value = debuggee.getStaticFieldValue(classID, \"testNewThread\", JDWP.Tag.THREAD);\n+\n+        long threadID = ((Long)value.getValue()).longValue();\n+        log.display(\"  got threadID: \" + threadID);\n+        return threadID;\n+    }\n+\n@@ -144,0 +159,1 @@\n+            long newThreadId = getNewThreadId();\n@@ -148,1 +164,6 @@\n-            command.addInt(0);\n+            \/\/ we want the THREAD_START event only for the test thread\n+            \/\/ and not any others that might be started by debuggee VM,\n+            \/\/ so add THREAD_ONLY modifier\n+            command.addInt(1);\n+            command.addByte(JDWP.EventModifierKind.THREAD_ONLY);\n+            command.addObjectID(newThreadId);\n@@ -178,1 +199,1 @@\n-        \/\/ create command with invalid trheadID, expect INVALID_OBJECT error\n+        \/\/ create command with invalid threadID, expect INVALID_OBJECT error\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdwp\/ThreadReference\/ForceEarlyReturn\/forceEarlyReturn002\/forceEarlyReturn002.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -54,8 +54,1 @@\n-            Thread thread = new Thread(new Runnable() {\n-                public void run() {\n-                    log.display(\"Thread exit\");\n-                }\n-            });\n-\n-            thread.setName(\"forceEarlyReturn002a_NewThread\");\n-            thread.start();\n+            testNewThread.start();\n@@ -69,0 +62,15 @@\n+    @Override\n+    protected void init(String args[]) {\n+        super.init(args);\n+\n+        \/\/ create thread for \"NewThread\" command in advance\n+        testNewThread = new Thread(new Runnable() {\n+            public void run() {\n+                log.display(\"Thread exit\");\n+            }\n+        });\n+        testNewThread.setName(\"forceEarlyReturn002a_NewThread\");\n+    }\n+\n+    private static Thread testNewThread;\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdwp\/ThreadReference\/ForceEarlyReturn\/forceEarlyReturn002\/forceEarlyReturn002a.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}