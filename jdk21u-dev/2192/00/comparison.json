{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,1 @@\n+    private static final int ARGS_ATTEMPTS = 10;\n@@ -178,2 +179,0 @@\n-        private static final int ARGS_ATTEMPTS = 3;\n-\n@@ -207,1 +206,4 @@\n-                    System.out.println(\"hasMainArgs(\" + id + \"): \" + e);\n+                    \/\/ Only log if something else, to avoid filling log:\n+                    if (!e.getMessage().contains(\"Could not attach\")) {\n+                        System.out.println(\"hasMainArgs(\" + id + \"): \" + e);\n+                    }\n@@ -252,3 +254,0 @@\n-            String timeoutFactorText = System.getProperty(\"test.timeout.factor\", \"1.0\");\n-            double timeoutFactor = Double.parseDouble(timeoutFactorText);\n-            long timeoutNanos = 1000_000_000L*(long)(1000*timeoutFactor);\n@@ -256,0 +255,1 @@\n+            System.out.println(\"Waiting for \" + path + \" to be removed\");\n@@ -259,1 +259,0 @@\n-                System.out.println(\"Waiting for \" + path + \" to be removed, \" + waited + \" ns\");\n@@ -261,0 +260,1 @@\n+                    System.out.println(\"waitForRemoval: \" + path + \" has been removed in \" + waited + \" ns\");\n@@ -263,6 +263,0 @@\n-                if (waited > timeoutNanos) {\n-                    System.out.println(\"Start: \" + start);\n-                    System.out.println(\"Now: \" + now);\n-                    System.out.println(\"Process timed out after \" + waited + \" ns. Abort.\");\n-                    System.exit(1);\n-                }\n","filename":"test\/jdk\/sun\/jvmstat\/monitor\/MonitoredVm\/MonitorVmStartTerminate.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"}]}