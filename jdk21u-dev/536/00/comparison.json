{"files":[{"patch":"@@ -172,16 +172,0 @@\n-\/\/ If the remaining free space in the old generation is less that\n-\/\/ that expected to be needed by the next collection, do a full\n-\/\/ collection now.\n-bool PSAdaptiveSizePolicy::should_full_GC(size_t old_free_in_bytes) {\n-\n-  \/\/ A similar test is done in the scavenge's should_attempt_scavenge().  If\n-  \/\/ this is changed, decide if that test should also be changed.\n-  bool result = padded_average_promoted_in_bytes() > (float) old_free_in_bytes;\n-  log_trace(gc, ergo)(\"%s after scavenge average_promoted \" SIZE_FORMAT \" padded_average_promoted \" SIZE_FORMAT \" free in old gen \" SIZE_FORMAT,\n-                      result ? \"Full\" : \"No full\",\n-                      (size_t) average_promoted_in_bytes(),\n-                      (size_t) padded_average_promoted_in_bytes(),\n-                      old_free_in_bytes);\n-  return result;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psAdaptiveSizePolicy.cpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -309,4 +309,0 @@\n-  \/\/ Given the amount of live data in the heap, should we\n-  \/\/ perform a Full GC?\n-  bool should_full_GC(size_t live_in_old_gen);\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psAdaptiveSizePolicy.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -242,2 +242,1 @@\n-  const bool need_full_gc = !scavenge_done ||\n-    policy->should_full_GC(heap->old_gen()->free_in_bytes());\n+  const bool need_full_gc = !scavenge_done;\n@@ -710,2 +709,0 @@\n-  \/\/ A similar test is done in the policy's should_full_GC().  If this is\n-  \/\/ changed, decide if that test should also be changed.\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}