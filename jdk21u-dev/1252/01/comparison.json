{"files":[{"patch":"@@ -27,0 +27,3 @@\n+# Import common utils\n+. .github\/scripts\/report-utils.sh\n+\n@@ -33,0 +36,4 @@\n+# Collect hs_errs for build-time crashes, e.g. javac, jmod, jlink, CDS.\n+# These usually land in make\/\n+hs_err_files=$(ls make\/hs_err*.log 2> \/dev\/null || true)\n+\n@@ -49,0 +56,12 @@\n+  for hs_err in $hs_err_files; do\n+    echo \"<details><summary><b>View HotSpot error log: \"$hs_err\"<\/b><\/summary>\"\n+    echo ''\n+    echo '```'\n+    echo \"$hs_err:\"\n+    echo ''\n+    cat \"$hs_err\"\n+    echo '```'\n+    echo '<\/details>'\n+    echo ''\n+  done\n+\n@@ -52,0 +71,2 @@\n+\n+truncate_summary\n","filename":".github\/scripts\/gen-build-failure-report.sh","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+# Import common utils\n+. .github\/scripts\/report-utils.sh\n+\n@@ -92,14 +95,0 @@\n-# With many failures, the summary can easily exceed 1024 kB, the limit set by Github\n-# Trim it down if so.\n-summary_size=$(wc -c < $GITHUB_STEP_SUMMARY)\n-if [[ $summary_size -gt 1000000 ]]; then\n-  # Trim to below 1024 kB, and cut off after the last detail group\n-  head -c 1000000 $GITHUB_STEP_SUMMARY | tac | sed -n -e '\/<\\\/details>\/,$ p' | tac > $GITHUB_STEP_SUMMARY.tmp\n-  mv $GITHUB_STEP_SUMMARY.tmp $GITHUB_STEP_SUMMARY\n-  (\n-    echo ''\n-    echo ':x: **WARNING: Summary is too large and has been truncated.**'\n-    echo ''\n-  )  >> $GITHUB_STEP_SUMMARY\n-fi\n-\n@@ -107,0 +96,2 @@\n+\n+truncate_summary\n","filename":".github\/scripts\/gen-test-results.sh","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+#!\/bin\/bash\n+#\n+# Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+function truncate_summary() {\n+  # With large hs_errs, the summary can easily exceed 1024 kB, the limit set by Github\n+  # Trim it down if so.\n+  summary_size=$(wc -c < $GITHUB_STEP_SUMMARY)\n+  if [[ $summary_size -gt 1000000 ]]; then\n+    # Trim to below 1024 kB, and cut off after the last detail group\n+    head -c 1000000 $GITHUB_STEP_SUMMARY | tac | sed -n -e '\/<\\\/details>\/,$ p' | tac > $GITHUB_STEP_SUMMARY.tmp\n+    mv $GITHUB_STEP_SUMMARY.tmp $GITHUB_STEP_SUMMARY\n+    (\n+      echo ''\n+      echo ':x: **WARNING: Summary is too large and has been truncated.**'\n+      echo ''\n+    )  >> $GITHUB_STEP_SUMMARY\n+  fi\n+}\n","filename":".github\/scripts\/report-utils.sh","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -59,0 +59,12 @@\n+  # Always include common test functionality\n+  TEST_CFLAGS := -I$(TOPDIR)\/test\/lib\/native\n+\n+  ifeq ($(TOOLCHAIN_TYPE), gcc)\n+    TEST_CFLAGS += -fvisibility=hidden\n+    TEST_LDFLAGS += -Wl,--exclude-libs,ALL\n+  else ifeq ($(TOOLCHAIN_TYPE), clang)\n+    TEST_CFLAGS += -fvisibility=hidden\n+  else ifeq ($(TOOLCHAIN_TYPE), xlc)\n+    TEST_CFLAGS += -qvisibility=hidden\n+  endif\n+\n@@ -64,3 +76,3 @@\n-    $1_BASE_CFLAGS := $(CFLAGS_JDKLIB)\n-    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKLIB)\n-    $1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(call SET_SHARED_LIBRARY_ORIGIN)\n+    $1_BASE_CFLAGS := $(CFLAGS_JDKLIB) $$(TEST_CFLAGS)\n+    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKLIB) $$(TEST_CFLAGS)\n+    $1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(TEST_LDFLAGS) $$(call SET_SHARED_LIBRARY_ORIGIN)\n@@ -72,3 +84,3 @@\n-    $1_BASE_CFLAGS := $(CFLAGS_JDKEXE)\n-    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKEXE)\n-    $1_LDFLAGS := $(LDFLAGS_JDKEXE) $(LDFLAGS_TESTEXE)\n+    $1_BASE_CFLAGS := $(CFLAGS_JDKEXE) $$(TEST_CFLAGS)\n+    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKEXE) $$(TEST_CFLAGS)\n+    $1_LDFLAGS := $(LDFLAGS_JDKEXE) $$(TEST_LDFLAGS) $(LDFLAGS_TESTEXE)\n","filename":"make\/common\/TestFilesCompilation.gmk","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,0 @@\n-TEST_LIB_NATIVE_SRC := $(TOPDIR)\/test\/lib\/native\n-\n@@ -72,8 +70,0 @@\n-\n-  # java.lang.foreign tests\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncStackWalk := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerUnnamed := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerModule := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLoaderLookupInvoker := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncInvokers := -I$(TEST_LIB_NATIVE_SRC)\n-\n@@ -91,1 +81,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncStackWalk := -I$(TEST_LIB_NATIVE_SRC)\n@@ -93,1 +82,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncInvokers := -I$(TEST_LIB_NATIVE_SRC)\n@@ -95,1 +83,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerUnnamed := -I$(TEST_LIB_NATIVE_SRC)\n@@ -97,1 +84,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerModule := -I$(TEST_LIB_NATIVE_SRC)\n@@ -99,1 +85,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLoaderLookupInvoker := -I$(TEST_LIB_NATIVE_SRC)\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-  assert((Patching_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n+  assert((CodeCache_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-\/\/ during code generation, where no patching lock is needed.\n+\/\/ during code generation, where no lock is needed.\n@@ -98,1 +98,1 @@\n-         (Patching_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n+         (CodeCache_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n","filename":"src\/hotspot\/cpu\/ppc\/nativeInst_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-\/\/ during code generation, where no patching lock is needed.\n+\/\/ during code generation, where no lock is needed.\n@@ -144,1 +144,1 @@\n-         (Patching_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n+         (CodeCache_lock->is_locked() || SafepointSynchronize::is_at_safepoint()) ||\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -661,2 +661,2 @@\n-  \/\/ Bytes_after_jump cannot change, because we own the Patching_lock.\n-  assert(Patching_lock->owned_by_self(), \"must hold lock to patch instruction\");\n+  \/\/ Bytes_after_jump cannot change, because we own the CodeCache_lock.\n+  assert(CodeCache_lock->owned_by_self(), \"must hold lock to patch instruction\");\n","filename":"src\/hotspot\/cpu\/s390\/nativeInst_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -285,0 +285,6 @@\n+\n+  \/\/ The OptoScheduling information is not maintained in s390.ad.\n+  if (OptoScheduling) {\n+    warning(\"OptoScheduling is not supported on this CPU.\");\n+    FLAG_SET_DEFAULT(OptoScheduling, false);\n+  }\n@@ -305,6 +311,0 @@\n-\n-  \/\/ The OptoScheduling information is not maintained in s390.ad.\n-  if (OptoScheduling) {\n-    warning(\"OptoScheduling is not supported on this CPU.\");\n-    FLAG_SET_DEFAULT(OptoScheduling, false);\n-  }\n","filename":"src\/hotspot\/cpu\/s390\/vm_version_s390.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-  assert(Patching_lock->is_locked() ||\n+  assert(CodeCache_lock->is_locked() ||\n@@ -284,1 +284,1 @@\n-  assert(Patching_lock->is_locked() || SafepointSynchronize::is_at_safepoint() ||\n+  assert(CodeCache_lock->is_locked() || SafepointSynchronize::is_at_safepoint() ||\n","filename":"src\/hotspot\/cpu\/x86\/nativeInst_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -883,1 +883,1 @@\n-\/\/ patch_stub: jmp Runtim1::patch_code (through a runtime stub)\n+\/\/ patch_stub: jmp Runtime1::patch_code (through a runtime stub)\n@@ -1103,1 +1103,1 @@\n-    MutexLocker ml_patch (current, Patching_lock, Mutex::_no_safepoint_check_flag);\n+    MutexLocker ml_code (current, CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -1268,6 +1268,2 @@\n-  }\n-\n-  \/\/ If we are patching in a non-perm oop, make sure the nmethod\n-  \/\/ is on the right list.\n-  {\n-    MutexLocker ml_code (current, CodeCache_lock, Mutex::_no_safepoint_check_flag);\n+    \/\/ If we are patching in a non-perm oop, make sure the nmethod\n+    \/\/ is on the right list.\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -600,1 +600,1 @@\n-      return intx(loader_a) - intx(loader_b);\n+      return primitive_compare(loader_a, loader_b);\n@@ -602,1 +602,1 @@\n-      return intx(a[0]) - intx(b[0]);\n+      return primitive_compare(a[0], b[0]);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1392,1 +1392,1 @@\n-  \/\/ Invalidate can't occur while holding the Patching lock\n+  \/\/ Invalidate can't occur while holding the NMethodState_lock\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,4 +181,5 @@\n-  \/\/ Ideal nodes are allowable in empty blocks: skip them  Only MachNodes\n-  \/\/ turn directly into code, because only MachNodes have non-trivial\n-  \/\/ emit() functions.\n-  while ((end_idx > 0) && !get_node(end_idx)->is_Mach()) {\n+  \/\/ Ideal nodes (except BoxLock) are allowable in empty blocks: skip them. Only\n+  \/\/ Mach and BoxLock nodes turn directly into code via emit().\n+  while ((end_idx > 0) &&\n+         !get_node(end_idx)->is_Mach() &&\n+         !get_node(end_idx)->is_BoxLock()) {\n","filename":"src\/hotspot\/share\/opto\/block.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,0 +254,3 @@\n+\n+    \/\/ Separate the arming of the poll in add_operation() above from\n+    \/\/ the read of JavaThread state in the try_process() call below.\n@@ -256,0 +259,2 @@\n+    } else {\n+      OrderAccess::fence();\n@@ -383,0 +388,2 @@\n+  } else {\n+    OrderAccess::fence();\n@@ -556,0 +563,4 @@\n+  \/\/ Separate all the writes above for other threads reading state\n+  \/\/ set by this thread in case the operation is ThreadSuspendHandshake.\n+  OrderAccess::fence();\n+\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-Mutex*   Patching_lock                = nullptr;\n@@ -236,1 +235,0 @@\n-  MUTEX_DEFN(Patching_lock                   , PaddedMutex  , nosafepoint);      \/\/ used for safepointing and code patching.\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-extern Mutex*   Patching_lock;                   \/\/ a lock used to guard code patching of compiled code\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1367,0 +1367,4 @@\n+template<typename K> int primitive_compare(const K& k0, const K& k1) {\n+  return ((k0 < k1) ? -1 : (k0 == k1) ? 0 : 1);\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -336,0 +336,1 @@\n+    int rc;\n@@ -348,2 +349,3 @@\n-    if (pthread_create(&main_thr, NULL, &apple_main, &args) != 0) {\n-        JLI_ReportErrorMessageSys(\"Could not create main thread: %s\\n\", strerror(errno));\n+    rc = pthread_create(&main_thr, NULL, &apple_main, &args);\n+    if (rc != 0) {\n+        JLI_ReportErrorMessageSys(\"Could not create main thread, return code: %d\\n\", rc);\n@@ -352,2 +354,3 @@\n-    if (pthread_detach(main_thr)) {\n-        JLI_ReportErrorMessageSys(\"pthread_detach() failed: %s\\n\", strerror(errno));\n+    rc = pthread_detach(main_thr);\n+    if (rc != 0) {\n+        JLI_ReportErrorMessage(\"pthread_detach() failed, return code: %d\\n\", rc);\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -203,7 +203,1 @@\n-    char *emsg;\n-\n-    \/*\n-     * TODO: its safer to use strerror_r but is not available on\n-     * Solaris 8. Until then....\n-     *\/\n-    emsg = strerror(errno);\n+    char *emsg = strerror(errno);\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md_common.c","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,3 +105,3 @@\n-    printf(HOTSPOT_VM_DISTRO \" VM warning: the use of signal() and sigset() \"\n-           \"for signal chaining was deprecated in version 16.0 and will \"\n-           \"be removed in a future release. Use sigaction() instead.\\n\");\n+    fprintf(stderr, HOTSPOT_VM_DISTRO \" VM warning: the use of signal() and sigset() \"\n+            \"for signal chaining was deprecated in version 16.0 and will \"\n+            \"be removed in a future release. Use sigaction() instead.\\n\");\n","filename":"src\/java.base\/unix\/native\/libjsig\/jsig.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -274,1 +274,0 @@\n-    int rc;\n@@ -278,1 +277,4 @@\n-    rc = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    rslt = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    if (rslt != 0) {\n+        fprintf(stderr, \"Could not create SplashScreen thread, error number:%d\\n\", rslt);\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libsplashscreen\/splashscreen_sys.m","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,0 @@\n-void (*fp_pw_deinit)(void);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/fp_pipewire.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -288,0 +288,3 @@\n+        fp_g_main_context_default = dl_symbol(\"g_main_context_default\");\n+        fp_g_main_context_is_owner = dl_symbol(\"g_main_context_is_owner\");\n+\n@@ -559,0 +562,1 @@\n+        fp_gtk_main_level = dl_symbol(\"gtk_main_level\");\n@@ -3125,0 +3129,2 @@\n+    gtk->g_main_context_default = fp_g_main_context_default;\n+    gtk->g_main_context_is_owner = fp_g_main_context_is_owner;\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -395,0 +395,3 @@\n+static GMainContext *(*fp_g_main_context_default)();\n+static gboolean (*fp_g_main_context_is_owner)(GMainContext* context);\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -795,0 +795,2 @@\n+    GMainContext *(*g_main_context_default)();\n+    gboolean (*g_main_context_is_owner)(GMainContext* context);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk_interface.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+volatile bool isGtkMainThread = FALSE;\n@@ -135,4 +136,0 @@\n-    if (!sessionClosed) {\n-        fp_pw_deinit();\n-    }\n-\n@@ -584,0 +581,7 @@\n+        if (!pw.loop) {\n+            \/\/ in case someone called the pw_deinit before\n+            DEBUG_SCREENCAST(\"pw_init\\n\", NULL);\n+            fp_pw_init(NULL, NULL);\n+            pw.loop = fp_pw_thread_loop_new(\"AWT Pipewire Thread\", NULL);\n+        }\n+\n@@ -715,1 +719,0 @@\n-    LOAD_SYMBOL(fp_pw_deinit, \"pw_deinit\");\n@@ -949,0 +952,1 @@\n+    isGtkMainThread = gtk->g_main_context_is_owner(gtk->g_main_context_default());\n@@ -950,2 +954,2 @@\n-            \"taking screenshot at \\n\\tx: %5i y %5i w %5i h %5i with token |%s|\\n\",\n-            jx, jy, jwidth, jheight, token\n+            \"taking screenshot at \\n\\tx: %5i y %5i w %5i h %5i\\n\\twith token |%s| isGtkMainThread %d\\n\",\n+            jx, jy, jwidth, jheight, token, isGtkMainThread\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+extern volatile bool isGtkMainThread;\n@@ -70,0 +71,21 @@\n+void waitForCallback(struct DBusCallbackHelper *helper) {\n+    if (!helper) {\n+        return;\n+    }\n+\n+    if (isGtkMainThread) {\n+        gtk->gtk_main();\n+    } else {\n+        while (!helper->isDone) {\n+            \/\/ do not block if there is a GTK loop running\n+            gtk->g_main_context_iteration(NULL, gtk->gtk_main_level() == 0);\n+        }\n+    }\n+}\n+\n+void callbackEnd() {\n+    if (isGtkMainThread) {\n+        gtk->gtk_main_quit();\n+    }\n+}\n+\n@@ -365,0 +387,1 @@\n+    callbackEnd();\n@@ -429,3 +452,1 @@\n-        while (!helper.isDone) {\n-            gtk->g_main_context_iteration(NULL, TRUE);\n-        }\n+        waitForCallback(&helper);\n@@ -475,0 +496,2 @@\n+\n+    callbackEnd();\n@@ -555,3 +578,1 @@\n-        while (!helper.isDone) {\n-            gtk->g_main_context_iteration(NULL, TRUE);\n-        }\n+        waitForCallback(&helper);\n@@ -643,0 +664,2 @@\n+\n+    callbackEnd();\n@@ -696,3 +719,1 @@\n-        while (!helper.isDone) {\n-            gtk->g_main_context_iteration(NULL, TRUE);\n-        }\n+        waitForCallback(&helper);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_portal.c","additions":30,"deletions":9,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -774,1 +774,0 @@\n-    int rc;\n@@ -778,1 +777,4 @@\n-    rc = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    rslt = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    if (rslt != 0) {\n+        fprintf(stderr, \"Could not create SplashScreen thread, error number:%d\\n\", rslt);\n+    }\n","filename":"src\/java.desktop\/unix\/native\/libsplashscreen\/splashscreen_sys.c","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.function.BiFunction;\n@@ -42,0 +41,1 @@\n+import java.util.stream.IntStream;\n@@ -2415,4 +2415,0 @@\n-            \/\/ Search the structure of the type to find the contained types at each type path\n-            Map<Type, List<Attribute.TypeCompound>> attributesByType = new HashMap<>();\n-            new TypeAnnotationLocator(attributesByPath, attributesByType).visit(type, List.nil());\n-\n@@ -2420,2 +2416,1 @@\n-            type = new TypeAnnotationTypeMapping(attributesByType).visit(type, null);\n-            Assert.check(attributesByType.isEmpty(), \"Failed to apply annotations to types\");\n+            type = new TypeAnnotationStructuralTypeMapping(attributesByPath).visit(type, List.nil());\n@@ -2449,2 +2444,4 @@\n-     * Visit all contained types, assembling a type path to represent the current location, and\n-     * record the types at each type path that need to be annotated.\n+     * A type mapping that rewrites the type to include type annotations.\n+     *\n+     * <p>This logic is similar to {@link Type.StructuralTypeMapping}, but also tracks the path to\n+     * the contained types being rewritten, and so cannot easily share the existing logic.\n@@ -2452,2 +2449,3 @@\n-    private static class TypeAnnotationLocator\n-            extends Types.DefaultTypeVisitor<Void, List<TypeAnnotationPosition.TypePathEntry>> {\n+    private static final class TypeAnnotationStructuralTypeMapping\n+            extends Types.TypeMapping<List<TypeAnnotationPosition.TypePathEntry>> {\n+\n@@ -2455,2 +2453,1 @@\n-                          ListBuffer<Attribute.TypeCompound>> attributesByPath;\n-        private final Map<Type, List<Attribute.TypeCompound>> attributesByType;\n+                ListBuffer<Attribute.TypeCompound>> attributesByPath;\n@@ -2458,1 +2455,1 @@\n-        private TypeAnnotationLocator(\n+        private TypeAnnotationStructuralTypeMapping(\n@@ -2460,2 +2457,1 @@\n-                        attributesByPath,\n-                Map<Type, List<Attribute.TypeCompound>> attributesByType) {\n+                    attributesByPath) {\n@@ -2463,1 +2459,0 @@\n-            this.attributesByType = attributesByType;\n@@ -2466,0 +2461,1 @@\n+\n@@ -2467,1 +2463,1 @@\n-        public Void visitClassType(ClassType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+        public Type visitClassType(ClassType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n@@ -2473,3 +2469,4 @@\n-            List<ClassType> enclosing = List.nil();\n-            for (Type curr = t;\n-                    curr != null && curr != Type.noType;\n+            Type outer = t.getEnclosingType();\n+            Type outer1 = outer != Type.noType ? visit(outer, path) : outer;\n+            for (Type curr = t.getEnclosingType();\n+                    curr != Type.noType;\n@@ -2477,11 +2474,0 @@\n-                enclosing = enclosing.prepend((ClassType) curr);\n-            }\n-            for (ClassType te : enclosing) {\n-                if (te.typarams_field != null) {\n-                    int i = 0;\n-                    for (Type typaram : te.typarams_field) {\n-                        visit(typaram, path.append(new TypeAnnotationPosition.TypePathEntry(\n-                                TypeAnnotationPosition.TypePathEntryKind.TYPE_ARGUMENT, i++)));\n-                    }\n-                }\n-                visitType(te, path);\n@@ -2490,1 +2476,6 @@\n-            return null;\n+            List<Type> typarams = t.getTypeArguments();\n+            List<Type> typarams1 = rewriteTypeParams(path, typarams);\n+            if (outer1 != outer || typarams != typarams1) {\n+                t = new ClassType(outer1, typarams1, t.tsym, t.getMetadata());\n+            }\n+            return reannotate(t, path);\n@@ -2493,5 +2484,6 @@\n-        @Override\n-        public Void visitWildcardType(\n-                WildcardType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            visit(t.type, path.append(TypeAnnotationPosition.TypePathEntry.WILDCARD));\n-            return super.visitWildcardType(t, path);\n+        private List<Type> rewriteTypeParams(\n+                List<TypeAnnotationPosition.TypePathEntry> path, List<Type> typarams) {\n+            var i = IntStream.iterate(0, x -> x + 1).iterator();\n+            return typarams.map(typaram -> visit(typaram,\n+                    path.append(new TypeAnnotationPosition.TypePathEntry(\n+                            TypeAnnotationPosition.TypePathEntryKind.TYPE_ARGUMENT, i.nextInt()))));\n@@ -2501,3 +2493,10 @@\n-        public Void visitArrayType(ArrayType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            visit(t.elemtype, path.append(TypeAnnotationPosition.TypePathEntry.ARRAY));\n-            return super.visitArrayType(t, path);\n+        public Type visitWildcardType(\n+                WildcardType wt, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            Type t = wt.type;\n+            if (t != null) {\n+                t = visit(t, path.append(TypeAnnotationPosition.TypePathEntry.WILDCARD));\n+            }\n+            if (t != wt.type) {\n+                wt = new WildcardType(t, wt.kind, wt.tsym, wt.bound, wt.getMetadata());\n+            }\n+            return reannotate(wt, path);\n@@ -2507,4 +2506,6 @@\n-        public Void visitType(Type t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            ListBuffer<Attribute.TypeCompound> attributes = attributesByPath.remove(path);\n-            if (attributes != null) {\n-                attributesByType.put(t, attributes.toList());\n+        public Type visitArrayType(ArrayType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            Type elemtype = t.elemtype;\n+            Type elemtype1 =\n+                    visit(elemtype, path.append(TypeAnnotationPosition.TypePathEntry.ARRAY));\n+            if (elemtype1 != elemtype)  {\n+                t = new ArrayType(elemtype1, t.tsym, t.getMetadata());\n@@ -2512,1 +2513,1 @@\n-            return null;\n+            return reannotate(t, path);\n@@ -2514,4 +2515,0 @@\n-    }\n-\n-    \/** A type mapping that rewrites the type to include type annotations. *\/\n-    private static class TypeAnnotationTypeMapping extends Type.StructuralTypeMapping<Void> {\n@@ -2519,5 +2516,3 @@\n-        private final Map<Type, List<Attribute.TypeCompound>> attributesByType;\n-\n-        private TypeAnnotationTypeMapping(\n-                Map<Type, List<Attribute.TypeCompound>> attributesByType) {\n-            this.attributesByType = attributesByType;\n+        @Override\n+        public Type visitType(Type t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            return reannotate(t, path);\n@@ -2526,8 +2521,4 @@\n-        private <T extends Type> Type reannotate(T t, BiFunction<T, Void, Type> f) {\n-            \/\/ We're relying on object identify of Type instances to record where the annotations\n-            \/\/ need to be added, so we have to retrieve the annotations for each type before\n-            \/\/ rewriting it, and then add them after its contained types have been rewritten.\n-            List<Attribute.TypeCompound> attributes = attributesByType.remove(t);\n-            Type mapped = f.apply(t, null);\n-            if (attributes == null) {\n-                return mapped;\n+        Type reannotate(Type type, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            List<Attribute.TypeCompound> attributes = attributesForPath(path);\n+            if (attributes.isEmpty()) {\n+                return type;\n@@ -2537,1 +2528,1 @@\n-            TypeMetadata.Annotations existing = mapped.getMetadata(TypeMetadata.Annotations.class);\n+            TypeMetadata.Annotations existing = type.getMetadata(TypeMetadata.Annotations.class);\n@@ -2540,1 +2531,1 @@\n-                return mapped;\n+                return type;\n@@ -2542,1 +2533,1 @@\n-            return mapped.annotatedType(attributes);\n+            return type.annotatedType(attributes);\n@@ -2545,18 +2536,4 @@\n-        @Override\n-        public Type visitClassType(ClassType t, Void unused) {\n-            return reannotate(t, super::visitClassType);\n-        }\n-\n-        @Override\n-        public Type visitWildcardType(WildcardType t, Void unused) {\n-            return reannotate(t, super::visitWildcardType);\n-        }\n-\n-        @Override\n-        public Type visitArrayType(ArrayType t, Void unused) {\n-            return reannotate(t, super::visitArrayType);\n-        }\n-\n-        @Override\n-        public Type visitType(Type t, Void unused) {\n-            return reannotate(t, (x, u) -> x);\n+        List<Attribute.TypeCompound> attributesForPath(\n+                List<TypeAnnotationPosition.TypePathEntry> path) {\n+            ListBuffer<Attribute.TypeCompound> attributes = attributesByPath.remove(path);\n+            return attributes != null ? attributes.toList() : List.nil();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":61,"deletions":84,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-\n+import java.util.stream.Collectors;\n@@ -1238,0 +1238,1 @@\n+\n@@ -1239,0 +1240,3 @@\n+        Set<Long> supportedMechSet =\n+                Arrays.stream(supportedMechanisms).boxed().collect\n+                (Collectors.toCollection(HashSet::new));\n@@ -1247,1 +1251,1 @@\n-                                        new HashMap<Descriptor,Integer>();\n+                new HashMap<Descriptor,Integer>();\n@@ -1249,2 +1253,1 @@\n-        for (int i = 0; i < supportedMechanisms.length; i++) {\n-            long longMech = supportedMechanisms[i];\n+        for (long longMech : supportedMechanisms) {\n@@ -1284,0 +1287,1 @@\n+                    \/\/ check all required mechs are supported\n@@ -1285,6 +1289,11 @@\n-                        \/\/ Check that other mechanisms required for the\n-                        \/\/ service are supported before listing it as\n-                        \/\/ available for the first time.\n-                        for (int requiredMech : d.requiredMechs) {\n-                            if (token.getMechanismInfo(\n-                                    requiredMech & 0xFFFFFFFFL) == null) {\n+                        for (int reqMech : d.requiredMechs) {\n+                            long longReqMech = reqMech & 0xFFFFFFFFL;\n+                            if (!config.isEnabled(longReqMech) ||\n+                                    !supportedMechSet.contains(longReqMech) \/*||\n+                                    brokenMechanisms.contains(longReqMech)*\/) {\n+                                if (showInfo) {\n+                                    System.out.println(\"DISABLED \" + d.type +\n+                                        \" \" + d.algorithm +\n+                                        \" due to no support for req'd mech \" +\n+                                        Functions.getMechanismName(longReqMech));\n+                                }\n@@ -1303,1 +1312,1 @@\n-                                System.out.println(\"DISABLED \" +  d.type +\n+                                System.out.println(\"DISABLED \" + d.type +\n@@ -1327,1 +1336,0 @@\n-\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -300,3 +300,7 @@\n-      if (add_map_info(ph, fd, segcmd.fileoff, segcmd.vmaddr, segcmd.vmsize, segcmd.flags) == NULL) {\n-        print_debug(\"Failed to add map_info at i = %d\\n\", i);\n-        goto err;\n+      \/\/ The base of the library is offset by a random amount which ends up as a load command with a\n+      \/\/ filesize of 0.  This must be ignored otherwise the base address of the library is wrong.\n+      if (segcmd.filesize != 0) {\n+        if (add_map_info(ph, fd, segcmd.fileoff, segcmd.vmaddr, segcmd.vmsize, segcmd.flags) == NULL) {\n+          print_debug(\"Failed to add map_info at i = %d\\n\", i);\n+          goto err;\n+        }\n@@ -304,1 +308,2 @@\n-      print_debug(\"LC_SEGMENT_64 added: nsects=%d fileoff=0x%llx vmaddr=0x%llx vmsize=0x%llx filesize=0x%llx %s\\n\",\n+      print_debug(\"LC_SEGMENT_64 %s: nsects=%d fileoff=0x%llx vmaddr=0x%llx vmsize=0x%llx filesize=0x%llx %s\\n\",\n+                  segcmd.filesize == 0 ? \"with filesize == 0 ignored\" : \"added\",\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/ps_core.c","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"AppLauncher.h\"\n@@ -28,0 +27,2 @@\n+#include \"AppLauncher.h\"\n+#include \"ErrorHandling.h\"\n@@ -29,0 +30,2 @@\n+#include \"jni.h\"\n+#include \"JvmLauncher.h\"\n@@ -31,2 +34,0 @@\n-#include \"JvmLauncher.h\"\n-#include \"ErrorHandling.h\"\n@@ -92,1 +93,1 @@\n-int main(int argc, char *argv[]) {\n+JNIEXPORT int main(int argc, char *argv[]) {\n","filename":"src\/jdk.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -277,2 +277,7 @@\n-        if (containerMetrics != null && containerMetrics.getCpuSetCpus() != null) {\n-            return containerMetrics.getCpuSetCpus().length == getHostOnlineCpuCount0();\n+        if (containerMetrics != null) {\n+            \/\/ The return value may change (including from non-null to null) and\n+            \/\/ the call may involve I\/O, so keep the result in a local variable.\n+            int[] cpuSetCpus = containerMetrics.getCpuSetCpus();\n+            if (cpuSetCpus != null) {\n+                return cpuSetCpus.length == getHostOnlineCpuCount0();\n+            }\n","filename":"src\/jdk.management\/unix\/classes\/com\/sun\/management\/internal\/OperatingSystemImpl.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -136,7 +136,7 @@\n-serviceability\/sa\/ClhsdbCDSCore.java 8294316,8267433 macosx-x64\n-serviceability\/sa\/ClhsdbFindPC.java#xcomp-core 8294316,8267433 macosx-x64\n-serviceability\/sa\/ClhsdbFindPC.java#no-xcomp-core 8294316,8267433 macosx-x64\n-serviceability\/sa\/ClhsdbPmap.java#core 8294316,8267433 macosx-x64\n-serviceability\/sa\/ClhsdbPstack.java#core 8294316,8267433 macosx-x64\n-serviceability\/sa\/TestJmapCore.java 8294316,8267433 macosx-x64\n-serviceability\/sa\/TestJmapCoreMetaspace.java 8294316,8267433 macosx-x64\n+serviceability\/sa\/ClhsdbCDSCore.java 8267433 macosx-x64\n+serviceability\/sa\/ClhsdbFindPC.java#xcomp-core 8267433 macosx-x64\n+serviceability\/sa\/ClhsdbFindPC.java#no-xcomp-core 8267433 macosx-x64\n+serviceability\/sa\/ClhsdbPmap.java#core 8267433 macosx-x64\n+serviceability\/sa\/ClhsdbPstack.java#core 8267433 macosx-x64\n+serviceability\/sa\/TestJmapCore.java 8267433 macosx-x64\n+serviceability\/sa\/TestJmapCoreMetaspace.java 8267433 macosx-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.arraycopy;\n+import java.util.Random;\n+\n+\/**\n+ * @test\n+ * @bug 8310159\n+ * @summary Test large arrayCopy.\n+ *\n+ * @run main\/timeout=600 compiler.arraycopy.TestArrayCopyDisjointLarge\n+ *\n+ *\/\n+\n+public class TestArrayCopyDisjointLarge {\n+\n+    public static final int ARRLEN = 4194304;\n+    public static int fromPos, toPos;\n+    public static byte[] fromByteArr, toByteArr;\n+\n+    public static void setup() {\n+        fromPos = 0;\n+        toPos = 0;\n+\n+        fromByteArr = new byte[ARRLEN];\n+        toByteArr = new byte[ARRLEN];\n+        for (int i = 0 ; i < ARRLEN ; i++) {\n+            fromByteArr[i] = (byte)i;\n+        }\n+    }\n+\n+    public static void validate(String msg, byte[] toByteArr, int length, int fromPos, int toPos) {\n+        for(int i = 0 ; i < length; i++) {\n+            if (fromByteArr[i + fromPos] != toByteArr[i + toPos]) {\n+                System.out.println(msg + \"[\" + toByteArr.getClass() + \"] Result mismtach at i = \" + i\n+                                + \" expected = \" + fromByteArr[i + fromPos]\n+                                + \" actual   = \" + toByteArr[i + toPos]\n+                                + \" fromPos = \" + fromPos\n+                                + \" toPos = \" + toPos);\n+                throw new Error(\"Fail\");\n+            }\n+        }\n+    }\n+\n+    public static void testByte(int length, int fromPos, int toPos) {\n+        System.arraycopy(fromByteArr, fromPos, toByteArr, toPos, length);\n+        validate(\" Test ByteArr \", toByteArr, length, fromPos, toPos);\n+    }\n+\n+    public static void main(String [] args) {\n+        int base_size = 2621440;\n+        Random r = new Random(1024);\n+        int [] lengths = {base_size - 1, base_size, base_size + 1, base_size + 63, base_size + 64,\n+                                base_size + 65, base_size + 255, base_size + 256, base_size + 257,\n+                                base_size + r.nextInt(2048)};\n+        setup();\n+\n+        for (int i = 0 ; i < 20 ; i++ ) {\n+            testByte(lengths[i % lengths.length], 0, 0);\n+            testByte(lengths[i % lengths.length], 0, 9);\n+            testByte(lengths[i % lengths.length], 9, 0);\n+            testByte(lengths[i % lengths.length], 9, 9);\n+            testByte(lengths[i % lengths.length], r.nextInt(2048) , r.nextInt(2048));\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyDisjointLarge.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.util.ArrayList;\n+\n+\/**\n+  * @test\n+  * @bug 8340313\n+  * @summary Test that concurrent patching of oop immediates is thread-safe in C1.\n+  * @run main\/othervm\/timeout=480 -Xcomp -XX:CompileCommand=compileonly,TestConcurrentPatching::* -XX:TieredStopAtLevel=1 TestConcurrentPatching\n+  *\/\n+\n+class MyClass { }\n+\n+class Holder {\n+    public static final MyClass OBJ1 = null;\n+    public static final MyClass OBJ2 = null;\n+    public static final MyClass OBJ3 = null;\n+    public static final MyClass OBJ4 = null;\n+    public static final MyClass OBJ5 = null;\n+    public static final MyClass OBJ6 = null;\n+    public static final MyClass OBJ7 = null;\n+    public static final MyClass OBJ8 = null;\n+    public static final MyClass OBJ9 = null;\n+    public static final MyClass OBJ10 = null;\n+    public static final MyClass OBJ11 = null;\n+    public static final MyClass OBJ12 = null;\n+    public static final MyClass OBJ13 = null;\n+    public static final MyClass OBJ14 = null;\n+    public static final MyClass OBJ15 = null;\n+    public static final MyClass OBJ16 = null;\n+    public static final MyClass OBJ17 = null;\n+    public static final MyClass OBJ18 = null;\n+    public static final MyClass OBJ19 = null;\n+    public static final MyClass OBJ20 = null;\n+}\n+\n+public class TestConcurrentPatching {\n+    \/\/ Increase to 100_000 for a good chance of reproducing the issue with a single run\n+    static final int ITERATIONS = 1000;\n+\n+    static Object field;\n+\n+    \/\/ 'Holder' class is unloaded on first execution and therefore field\n+    \/\/ accesses require patching when the method is C1 compiled (with -Xcomp).\n+    public static void test() {\n+        field = Holder.OBJ1;\n+        field = Holder.OBJ2;\n+        field = Holder.OBJ3;\n+        field = Holder.OBJ4;\n+        field = Holder.OBJ5;\n+        field = Holder.OBJ6;\n+        field = Holder.OBJ7;\n+        field = Holder.OBJ8;\n+        field = Holder.OBJ9;\n+        field = Holder.OBJ10;\n+        field = Holder.OBJ11;\n+        field = Holder.OBJ12;\n+        field = Holder.OBJ13;\n+        field = Holder.OBJ14;\n+        field = Holder.OBJ15;\n+        field = Holder.OBJ16;\n+        field = Holder.OBJ17;\n+        field = Holder.OBJ18;\n+        field = Holder.OBJ19;\n+        field = Holder.OBJ20;\n+    }\n+\n+    \/\/ Appendix of invokedynamic call sites is unloaded on first execution and\n+    \/\/ therefore requires patching when the method is C1 compiled (with -Xcomp).\n+    public static void testIndy() throws Throwable {\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+          field = (Runnable) () -> { };\n+    }\n+\n+    \/\/ Run 'test' by multiple threads to trigger concurrent patching of field accesses\n+    static void runWithThreads(Method method) {\n+        ArrayList<Thread> threads = new ArrayList<>();\n+        for (int threadIdx = 0; threadIdx < 10; threadIdx++) {\n+            threads.add(new Thread(() -> {\n+                try {\n+                    method.invoke(null);\n+                } catch (Exception e) {\n+                    throw new IllegalStateException(e);\n+                }\n+            }));\n+        }\n+        threads.forEach(Thread::start);\n+        threads.forEach(t -> {\n+            try {\n+                t.join();\n+            } catch (Throwable e) {\n+                throw new IllegalStateException(e);\n+            }\n+        });\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Class<?> thisClass = TestConcurrentPatching.class;\n+        ClassLoader defaultLoader = thisClass.getClassLoader();\n+        URL classesDir = thisClass.getProtectionDomain().getCodeSource().getLocation();\n+\n+        \/\/ Load the test class multiple times with a separate class loader to make sure\n+        \/\/ that the 'Holder' class is unloaded for each compilation of method 'test'\n+        \/\/ and that the appendix of the invokedynamic call site is unloaded for each\n+        \/\/ compilation of method 'testIndy'.\n+        for (int i = 0; i < ITERATIONS; ++i) {\n+            URLClassLoader myLoader = URLClassLoader.newInstance(new URL[] {classesDir}, defaultLoader.getParent());\n+            Class<?> testClass = Class.forName(thisClass.getCanonicalName(), true, myLoader);\n+            runWithThreads(testClass.getDeclaredMethod(\"test\"));\n+            runWithThreads(testClass.getDeclaredMethod(\"testIndy\"));\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestConcurrentPatching.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8337660\n+ * @summary Test that C2 does not remove blocks with BoxLock nodes that are\n+ *          otherwise empty.\n+ * @run main\/othervm -Xbatch -XX:+UnlockExperimentalVMOptions -XX:LockingMode=1\n+ *                   -XX:CompileOnly=compiler.locks.TestSynchronizeWithEmptyBlock::*\n+ *                   compiler.locks.TestSynchronizeWithEmptyBlock\n+ * @run main\/othervm -Xbatch\n+ *                   -XX:CompileOnly=compiler.locks.TestSynchronizeWithEmptyBlock::*\n+ *                   compiler.locks.TestSynchronizeWithEmptyBlock\n+ *\/\n+\n+package compiler.locks;\n+\n+public class TestSynchronizeWithEmptyBlock {\n+\n+    static int c;\n+    static final Object obj = new Object();\n+\n+    static void test1() {\n+        synchronized (TestSynchronizeWithEmptyBlock.class) {\n+            int i = 0;\n+            while (i < 1000) {\n+                i++;\n+                if (i < 5);\n+            }\n+        }\n+        synchronized (TestSynchronizeWithEmptyBlock.class) {\n+            int i = 0;\n+            do {\n+                i++;\n+                if (i < 4) {\n+                    boolean p = true;\n+                    int j = 0;\n+                    do {\n+                        j++;\n+                        if (p) {\n+                            c++;\n+                        }\n+                    } while (j < 100);\n+                }\n+            } while (i < 1000);\n+        }\n+    }\n+\n+    static void test2() {\n+        synchronized (obj) {\n+            for (long i = 0; i < 1_000_000_000_000L; i+=6_500_000_000L) {}\n+        }\n+        synchronized (obj) {\n+            for (long i = 0; i < 1_000_000_000_000L; i+=6_500_000_000L) {}\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10_000; i++) {\n+            test1();\n+        }\n+        for (int i = 0; i < 10_000; i++) {\n+            test2();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/locks\/TestSynchronizeWithEmptyBlock.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +50,2 @@\n+    private static int init = 0;\n+    private static int limit = SIZE;\n@@ -104,0 +107,5 @@\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \"=0\"})\n+    \/\/ The ConvI2L can be split through the AddI, creating a mix of\n+    \/\/ ConvI2L(AddI) and AddL(ConvI2L) cases, which do not vectorize.\n+    \/\/ See: JDK-8332878\n@@ -112,0 +120,59 @@\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n+    \/\/ The variable init\/limit has the consequence that we do not split\n+    \/\/ the ConvI2L through the AddI.\n+    public long[] fillLongArray2() {\n+        long[] res = new long[SIZE];\n+        for (int i = init; i < limit; i++) {\n+            res[i] = i;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \"=0\"})\n+    \/\/ See: JDK-8332878\n+    public float[] fillFloatArray() {\n+        float[] res = new float[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = i;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n+    public float[] fillFloatArray2() {\n+        float[] res = new float[SIZE];\n+        for (int i = init; i < limit; i++) {\n+            res[i] = i;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \"=0\"})\n+    \/\/ See: JDK-8332878\n+    public double[] fillDoubleArray() {\n+        double[] res = new double[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = i;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n+    public double[] fillDoubleArray2() {\n+        double[] res = new double[SIZE];\n+        for (int i = init; i < limit; i++) {\n+            res[i] = i;\n+        }\n+        return res;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayIndexFillTest.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +54,1 @@\n+    private static       int zero = 0;\n@@ -117,0 +119,30 @@\n+    @Test\n+    \/\/ Tests that we add a ConvI2L for size, when converting it to long for\n+    \/\/ the rotateRight rotation input.\n+    \/\/ However, it currently only seems to vectorize in OSR, so we cannot add IR rules.\n+    public long[] longExplicitRotateWithPopulateIndex() {\n+        long[] res = new long[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = Long.rotateRight(i, \/* some rotation value*\/ size);\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.STORE_VECTOR, \">0\"})\n+    @IR(applyIfCPUFeature = {\"avx512f\", \"true\"},\n+        counts = {IRNode.ROTATE_RIGHT_V, \">0\"})\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n+    \/\/ The unknown init\/limit values make sure that the rotation does fold badly\n+    \/\/ like in longExplicitRotateWithPopulateIndex.\n+    public long[] longExplicitRotateWithPopulateIndex2() {\n+        long[] res = new long[SIZE];\n+        for (int i = zero; i < size; i++) {\n+            res[i] = Long.rotateRight(i, \/* some rotation value*\/ size);\n+        }\n+        return res;\n+    }\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayShiftOpTest.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/libLinkToNativeRBP.c","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-                    new DwarfConstraint(0, \"dereference_null\", \"libTestDwarfHelper.h\", 44));\n+                    new DwarfConstraint(0, \"dereference_null\", \"libTestDwarfHelper.h\", 46));\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestDwarf.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"jni.h\"\n@@ -27,0 +26,3 @@\n+#include \"export.h\"\n+#include \"jni.h\"\n+\n@@ -42,1 +44,1 @@\n-void dereference_null() {\n+EXPORT void dereference_null() {\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/libTestDwarfHelper.h","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace007.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,0 +132,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace008.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,0 +132,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace009.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace010.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,0 +152,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace011.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,0 +154,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace012.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,0 +133,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace013.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -143,0 +143,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace014.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,0 +141,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace015.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java 8005021,8332158 macosx-all,linux-x64\n+java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java 8005021 macosx-all\n@@ -445,0 +445,1 @@\n+java\/awt\/List\/HandlingKeyEventIfMousePressedTest.java 6848358 macosx-all,windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.awt.EventQueue;\n@@ -32,0 +33,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -38,2 +41,1 @@\n- * @author Alexander Scherbatiy\n- * @run main ScaledTransform\n+ * @run main\/timeout=300 ScaledTransform\n@@ -43,1 +45,5 @@\n-    private static volatile boolean passed = false;\n+    private static volatile CountDownLatch painted;\n+    private static volatile boolean passed;\n+    private static volatile Dialog dialog;\n+    private static volatile long startTime;\n+    private static volatile long endTime;\n@@ -45,1 +51,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n@@ -49,4 +55,0 @@\n-        if (ge.isHeadlessInstance()) {\n-            return;\n-        }\n-\n@@ -54,2 +56,6 @@\n-            for (GraphicsConfiguration gc : gd.getConfigurations()) {\n-                testScaleFactor(gc);\n+            System.out.println(\"Screen = \" + gd);\n+            test(gd.getDefaultConfiguration());\n+            \/* Don't want to run too long. Test the default and up to 10 more *\/\n+            GraphicsConfiguration[] configs = gd.getConfigurations();\n+            for (int c = 0; c < configs.length && c < 10; c++) {\n+                test(configs[c]);\n@@ -60,3 +66,1 @@\n-    private static void testScaleFactor(final GraphicsConfiguration gc) {\n-        final Dialog dialog = new Dialog((Frame) null, \"Test\", true, gc);\n-\n+    static void test(GraphicsConfiguration gc) throws Exception {\n@@ -64,20 +68,11 @@\n-            dialog.setSize(100, 100);\n-            Panel panel = new Panel() {\n-\n-                @Override\n-                public void paint(Graphics g) {\n-                    if (g instanceof Graphics2D) {\n-                        AffineTransform gcTx = gc.getDefaultTransform();\n-                        AffineTransform gTx\n-                                = ((Graphics2D) g).getTransform();\n-                        passed = gcTx.getScaleX() == gTx.getScaleX()\n-                                && gcTx.getScaleY() == gTx.getScaleY();\n-                    } else {\n-                        passed = true;\n-                    }\n-                    dialog.setVisible(false);\n-                }\n-            };\n-            dialog.add(panel);\n-            dialog.setVisible(true);\n-\n+            \/* reset vars for each run *\/\n+            passed = false;\n+            dialog = null;\n+            painted = new CountDownLatch(1);\n+            EventQueue.invokeLater(() -> showDialog(gc));\n+            startTime = System.currentTimeMillis();\n+            endTime = startTime;\n+            if (!painted.await(5, TimeUnit.SECONDS)) {\n+                throw new RuntimeException(\"Panel is not painted!\");\n+            }\n+            System.out.println(\"Time to paint = \" + (endTime - startTime) + \"ms.\");\n@@ -88,1 +83,1 @@\n-            dialog.dispose();\n+            EventQueue.invokeAndWait(() -> disposeDialog());\n@@ -91,0 +86,36 @@\n+\n+    private static void showDialog(final GraphicsConfiguration gc) {\n+        System.out.println(\"Creating dialog for gc=\" + gc + \" with tx=\" + gc.getDefaultTransform());\n+        dialog = new Dialog((Frame) null, \"ScaledTransform\", true, gc);\n+        dialog.setSize(300, 100);\n+\n+        Panel panel = new Panel() {\n+\n+            @Override\n+            public void paint(Graphics g) {\n+                System.out.println(\"Painting panel\");\n+                if (g instanceof Graphics2D g2d) {\n+                    AffineTransform gcTx = gc.getDefaultTransform();\n+                    AffineTransform gTx = g2d.getTransform();\n+                    System.out.println(\"GTX = \" + gTx);\n+                    passed = (gcTx.getScaleX() == gTx.getScaleX()) &&\n+                             (gcTx.getScaleY() == gTx.getScaleY());\n+                } else {\n+                    passed = true;\n+                }\n+                endTime = System.currentTimeMillis();\n+                painted.countDown();\n+                System.out.println(\"Painted panel\");\n+            }\n+        };\n+        dialog.add(panel);\n+        dialog.setVisible(true);\n+    }\n+\n+    private static void disposeDialog() {\n+       if (dialog != null) {\n+           System.out.println(\"Disposing dialog\");\n+           dialog.setVisible(false);\n+           dialog.dispose();\n+       }\n+    }\n","filename":"test\/jdk\/java\/awt\/Graphics2D\/ScaledTransform\/ScaledTransform.java","additions":66,"deletions":35,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     4131642\n+ * @summary This test shows the ability to create Frames, Windows\n+ *          and Canvases with a GraphicsConfiguration. The test should show a number\n+ *          of windows with RGB stripes in according to the number of the\n+ *          GraphicsConfigurations for each screen. It also displays the size of\n+ *          the screen and the GraphicsConfiguration.toString().\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual NonDefaultGC\n+ *\/\n+\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Rectangle;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class NonDefaultGC {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        This test shows the ability to create Frames, Windows and Canvases\n+        with a GraphicsConfiguration.\n+        The test should show a number of windows with RGB stripes according\n+        to the number of the GraphicsConfigurations for each screen.\n+        The window also contains text which displays the size of the screen\n+        and the output GraphicsConfiguration.toString().\n+        The test passes if every screen displays at least one such window.\n+        \"\"\";\n+\n+    public static void main(String[] argv) throws Exception {\n+       SwingUtilities.invokeAndWait(NonDefaultGC::createUI);\n+       PassFailJFrame.builder()\n+                .title(\"GraphicsConfigurationTest\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(5)\n+                .rows(12)\n+                .columns(45)\n+                .build()\n+                .awaitAndCheck();\n+\n+    }\n+\n+    private static void createUI() {\n+\n+        GraphicsEnvironment ge = GraphicsEnvironment.\n+                                 getLocalGraphicsEnvironment();\n+        GraphicsDevice[] gs = ge.getScreenDevices();\n+        for (int j = 0; j < gs.length; j++) {\n+            GraphicsDevice gd = gs[j];\n+            GraphicsConfiguration[] gc = gd.getConfigurations();\n+            for (int i=0; i < gc.length; i++) {\n+                JFrame f = new JFrame(gs[j].getDefaultConfiguration());\n+                PassFailJFrame.addTestWindow(f); \/\/ to ensure it is disposed.\n+                GCCanvas c = new GCCanvas(gc[i]);\n+                Rectangle gcBounds = gc[i].getBounds();\n+                int xoffs = gcBounds.x;\n+                int yoffs = gcBounds.y;\n+                f.getContentPane().add(c);\n+                f.setTitle(\"Screen# \"+ j +\", GC# \"+ i);\n+                f.setSize(300, 150);\n+                f.setLocation((i*50)+xoffs, (i*60)+yoffs);\n+                f.show();\n+            }\n+        }\n+    }\n+}\n+\n+class GCCanvas extends Canvas {\n+\n+    GraphicsConfiguration gc;\n+    Rectangle bounds;\n+\n+    public GCCanvas(GraphicsConfiguration gc) {\n+        super(gc);\n+        this.gc = gc;\n+        bounds = gc.getBounds();\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(300, 150);\n+    }\n+\n+    public void paint(Graphics g) {\n+        g.setColor(Color.red);\n+        g.fillRect(0, 0, 100, 150);\n+        g.setColor(Color.green);\n+        g.fillRect(100, 0, 100, 150);\n+        g.setColor(Color.blue);\n+        g.fillRect(200, 0, 100, 150);\n+        g.setColor(Color.black);\n+        g.drawString(\"ScreenSize=\"+bounds.width+\"X\"+ bounds.height, 10, 15);\n+        g.drawString(gc.toString(), 10, 30);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/GraphicsConfiguration\/NonDefaultGC.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     4271200\n+ * @summary This test should show that the default position of a Frame\n+ *          should be on the physical screen for the GraphicsConfiguration.\n+ *          The togglebutton shows and hides an empty frame on the second monitor.\n+ *          The frame should be positioned at 0, 0 and is shown and hidden by clicking the button.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual Position\n+ *\/\n+\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+\n+public class Position extends JPanel implements ActionListener {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        This test should show that the default position of a Frame\n+        should be on the physical screen for the specified GraphicsConfiguration.\n+        There is a window \"Show\/Hide\" button.\n+        The button alternatively shows and hides an empty frame on the second monitor.\n+        The frame should be positioned at 0, 0 and is shown and hidden by clicking the button.\n+        The test passes if it behaves as described and fails otherwise.\n+        \"\"\";\n+\n+    static volatile GraphicsDevice gd[];\n+    static volatile JFrame secondFrame;\n+    static volatile boolean on = true;\n+\n+    public Position() {\n+        JPanel p = new JPanel();\n+        JButton b = new JButton(\"Show\/Hide Window on other screen\");\n+        b.addActionListener(this);\n+        p.add(b);\n+        add(p);\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        if (secondFrame == null) {\n+            secondFrame = new JFrame(\"screen1\", gd[1].getDefaultConfiguration());\n+            secondFrame.setSize(500, 500);\n+            PassFailJFrame.addTestWindow(secondFrame);\n+        }\n+        secondFrame.setVisible(on);\n+        on = !on;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices();\n+        if (gd.length < 2) { \/* test runs only on a multi-screen environment *\/\n+            return;\n+        }\n+\n+        PassFailJFrame.builder()\n+                .title(\"Screen Device Position Test\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(5)\n+                .rows(10)\n+                .columns(50)\n+                .splitUIBottom(Position::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/GraphicsConfiguration\/Position.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6293432\n+ * @summary Key events ('SPACE', 'UP', 'DOWN') aren't blocked\n+ *          if mouse is kept in 'PRESSED' state for List\n+ * @key headful\n+ * @run main HandlingKeyEventIfMousePressedTest\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseMotionAdapter;\n+\n+public class HandlingKeyEventIfMousePressedTest {\n+\n+    static Frame frame;\n+    static List list;\n+    static volatile Point loc;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> createUI());\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            EventQueue.invokeAndWait(() -> {\n+                loc = list.getLocationOnScreen();\n+            });\n+            robot.mouseMove(loc.x + 10, loc.y + 10);\n+            robot.waitForIdle();\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            \/\/ key pressing when the mouse is kept in the 'pressed' state\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            int selectedIndex = list.getSelectedIndex();\n+            if (selectedIndex != 0) {\n+                throw new RuntimeException(\"Test failed: list.getCurrentItem = \" + selectedIndex);\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new Frame(\"HandlingKeyEventIfMousePressedTest\");\n+        list = new List(10, false);\n+\n+        list.add(\"111\");\n+        list.add(\"222\");\n+        list.add(\"333\");\n+        list.add(\"444\");\n+        frame.add(list);\n+\n+        addListeners();\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    \/\/ added in order to have more information in failed case\n+    private static void addListeners() {\n+\n+        list.addMouseMotionListener(\n+            new MouseMotionAdapter() {\n+                @Override\n+                public void mouseDragged(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+\n+                @Override\n+                public void mouseMoved(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+            });\n+\n+        list.addMouseListener(\n+            new MouseAdapter(){\n+                public void mousePressed(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseClicked(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseEntered(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseExited(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseReleased(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+            });\n+\n+        list.addActionListener(\n+            new ActionListener() {\n+                public void actionPerformed(ActionEvent ae) {\n+                    System.out.println(ae);\n+                }\n+            });\n+\n+        list.addItemListener(\n+            new ItemListener() {\n+                public void itemStateChanged(ItemEvent ie) {\n+                    System.out.println(ie);\n+                }\n+            });\n+\n+        list.addFocusListener(\n+            new FocusAdapter() {\n+                public void focusGained(FocusEvent fe) {\n+                    System.out.println(fe);\n+                }\n+                public void focusLost(FocusEvent fe) {\n+                    System.out.println(fe);\n+                }\n+            });\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/HandlingKeyEventIfMousePressedTest.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -24,11 +24,0 @@\n-\/*\n-  @test\n-  @key headful\n-  @bug 6190768 6190778\n-  @summary Tests that triggering events on AWT list by pressing CTRL + HOME,\n-           CTRL + END, PG-UP, PG-DOWN similar Motif behavior\n-  @library \/test\/lib\n-  @build jdk.test.lib.Platform\n-  @run main KeyEventsTest\n-*\/\n-\n@@ -53,0 +42,11 @@\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 6190768 6190778\n+ * @requires os.family != \"mac\"\n+ * @summary Tests that triggering events on AWT list by pressing CTRL + HOME,\n+ *          CTRL + END, PG-UP, PG-DOWN similar Motif behavior\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main KeyEventsTest\n+ *\/\n@@ -264,7 +264,1 @@\n-        boolean isWin = false;\n-        if (Platform.isWindows()) {\n-            isWin = true;\n-        } else if (Platform.isOSX()) {\n-            System.out.println(\"Not for OS X\");\n-            return;\n-        }\n+        boolean isWin = Platform.isWindows();\n","filename":"test\/jdk\/java\/awt\/List\/KeyEventsTest\/KeyEventsTest.java","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4089604\n+ * @summary Enter key doesn't fire List actionPerformed as specified\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ListActionEventTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+public class ListActionEventTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            A frame will be shown.\n+            1. Click any item in the list (say item 1) in the frame\n+            2. A message 'ItemSelected' is displayed on the message window.\n+            3. Press the return key on the selected item.\n+            4. If the text 'ActionPerformed' is displayed on the message window,\n+               then press PASS else press FAIL.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ListActionEventTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ListActionEventTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"ListActionEventTest frame\");\n+\n+        Panel pnl1 = new Panel();\n+        frame.add(pnl1);\n+        pnl1.setLayout(new BorderLayout());\n+\n+        List list = new List();\n+        for (int i = 0; i < 5; i++) {\n+            list.addItem(\"Item \" + i);\n+        }\n+        pnl1.add(list);\n+\n+        list.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                PassFailJFrame.log(\"ActionPerformed\");\n+            }\n+        });\n+\n+        list.addItemListener(new ItemListener() {\n+            @Override\n+            public void itemStateChanged(ItemEvent ev) {\n+                PassFailJFrame.log(\"ItemSelected\");\n+            }\n+        });\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/ListActionEventTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4102881\n+ * @summary Ensure multiple selection Lists have horizontal scrollbars when necessary\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MultiSelectionListHorizScrollbar\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.List;\n+\n+public class MultiSelectionListHorizScrollbar {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         Resize the frame so that the lists are not wide enough\n+         to fully display the lines of text they contain.\n+         Once the lists are in this state, press pass\n+         if both lists display an horizontal scrollbar. Otherwise press fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"MultiSelectionListHorizScrollbar Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(MultiSelectionListHorizScrollbar::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"MultiSelectionListHorizScrollbar Frame\");\n+        List singleList = new List(3);\n+        List multiList = new List(3, true);\n+\n+        frame.setLayout(new GridLayout(1, 2));\n+        frame.add(singleList);\n+        frame.add(multiList);\n+\n+        singleList.addItem(\"This is the 1st item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 2nd item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 4th item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 5th item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 6th item in the list! Does it scroll horizontally??\");\n+\n+        multiList.addItem(\"This is the 1st item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 2nd item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 4th item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 5th item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 6th item in the list! Does it scroll horizontally??\");\n+\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/MultiSelectionListHorizScrollbar.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6308295\n+ * @summary XAWTduplicate list item is displayed\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual RepaintAfterResize\n+*\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class RepaintAfterResize {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) A Frame appears with a list\n+            2) Resize somehow the frame using mouse\n+            3) Move down the vertical scrollbar of the list\n+            4) If you see that two selected items are displayed then the test failed.\n+               Otherwise, the test passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"RepaintAfterResize Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(RepaintAfterResize::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"RepaintAfterResize Frame\");\n+        List list = new List(4, false);\n+\n+        frame.setLayout (new FlowLayout ());\n+        list.setBounds(100, 100, 100, 100);\n+        for (int i = 0 ; i < 7 ; i++) {\n+            list.add(\" \" + i);\n+        }\n+        frame.add(list);\n+        list.select(3);\n+\n+        frame.setSize(100, 100);\n+        return frame;\n+\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/RepaintAfterResize.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+ * @library \/test\/lib\n+ * @build   jdk.test.lib.Platform\n@@ -33,3 +35,8 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+import jdk.test.lib.Platform;\n@@ -44,0 +51,3 @@\n+        if (Platform.isOnWayland()) {\n+            return;\n+        }\n","filename":"test\/jdk\/java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * summary:\n","filename":"test\/jdk\/java\/awt\/TextField\/CaretPositionTest\/CaretPositionTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * summary:\n","filename":"test\/jdk\/java\/awt\/TextField\/SetBoundsTest\/SetBoundsTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * summary:\n","filename":"test\/jdk\/java\/awt\/TextField\/SetEchoCharTest4\/SetEchoCharTest4.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * summary:\n","filename":"test\/jdk\/java\/awt\/TextField\/SetPasswordTest\/SetPasswordTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * summary:\n","filename":"test\/jdk\/java\/awt\/TextField\/ZeroEchoCharTest\/ZeroEchoCharTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import javax.swing.JFrame;\n@@ -31,0 +30,1 @@\n+import java.awt.Rectangle;\n@@ -32,0 +32,1 @@\n+import java.awt.Toolkit;\n@@ -34,1 +35,0 @@\n-import java.awt.dnd.DragGestureEvent;\n@@ -46,1 +46,0 @@\n-import java.awt.event.MouseEvent;\n@@ -49,0 +48,5 @@\n+import java.awt.event.MouseEvent;\n+import java.io.File;\n+import java.util.concurrent.atomic.AtomicReference;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n@@ -59,2 +63,3 @@\n-    Robot robot;\n-    Frame frame;\n+    private static Robot robot;\n+    private static Frame frame;\n+    private static volatile DropActionChangeTest test;\n@@ -66,2 +71,1 @@\n-    static final int FRAME_ACTIVATION_TIMEOUT = 3000;\n-    static final int DROP_COMPLETION_TIMEOUT = 5000;\n+    static final int DROP_COMPLETION_TIMEOUT = 8000;\n@@ -71,1 +75,1 @@\n-        DropActionChangeTest test = new DropActionChangeTest();\n+        EventQueue.invokeAndWait(() -> test = new DropActionChangeTest());\n@@ -76,5 +80,1 @@\n-            EventQueue.invokeAndWait(() -> {\n-                if (test.frame != null) {\n-                    test.frame.dispose();\n-                }\n-            });\n+            EventQueue.invokeAndWait(DropActionChangeTest::disposeFrame);\n@@ -100,1 +100,1 @@\n-                System.err.println(\"DragSourseListener.dragDropEnd(): \" +\n+                System.err.println(\"DragSourceListener.dragDropEnd(): \" +\n@@ -103,1 +103,3 @@\n-                    System.err.println(\"FAILURE: wrong drop action:\" + e.getDropAction());\n+                    System.err.println(\"FAILURE: wrong drop action:\"\n+                                       + e.getDropAction() + \", It should be \"\n+                                       + DnDConstants.ACTION_MOVE);\n@@ -113,5 +115,1 @@\n-        DragGestureListener dgl = new DragGestureListener() {\n-            public void dragGestureRecognized(DragGestureEvent dge) {\n-                dge.startDrag(null, new StringSelection(\"test\"), dsl);\n-            }\n-        };\n+        DragGestureListener dgl = dge -> dge.startDrag(null, new StringSelection(\"test\"), dsl);\n@@ -145,0 +143,9 @@\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+        if (test != null) {\n+            test.dispose();\n+        }\n+    }\n+\n@@ -148,0 +155,3 @@\n+            robot.setAutoDelay(100);\n+            robot.waitForIdle();\n+            robot.delay(500);\n@@ -149,1 +159,3 @@\n-            Point startPoint = panel.getLocationOnScreen();\n+            AtomicReference<Point> startPointRef = new AtomicReference<>();\n+            EventQueue.invokeAndWait(()-> startPointRef.set(panel.getLocationOnScreen()));\n+            Point startPoint = startPointRef.get();\n@@ -166,1 +178,1 @@\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -168,0 +180,1 @@\n+                robot.delay(500);\n@@ -170,1 +183,2 @@\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+                robot.delay(500);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -174,1 +188,2 @@\n-                System.err.println(\"DragSourseListener.dragDropEnd() was not called, returning\");\n+                captureScreen(\"No_Drop_End_\");\n+                System.err.println(\"DragSourceListener.dragDropEnd() was not called, returning\");\n@@ -182,1 +197,2 @@\n-            throw new RuntimeException(\"wrong drop action!\");\n+            captureScreen(\"Wrong_Drop_Action_\");\n+            throw new RuntimeException(\"Wrong drop action!\");\n@@ -185,1 +201,12 @@\n-        System.err.println(\"test passed!\");\n+        System.err.println(\"Test passed!\");\n+    }\n+\n+    private static void captureScreen(String str) {\n+        try {\n+            final Rectangle screenBounds = new Rectangle(\n+                    Toolkit.getDefaultToolkit().getScreenSize());\n+            ImageIO.write(robot.createScreenCapture(screenBounds), \"png\",\n+                          new File(str + \"Failure_Screen.png\"));\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n@@ -206,1 +233,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -208,1 +235,1 @@\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -230,0 +257,1 @@\n+       robot.waitForIdle();\n@@ -234,5 +262,0 @@\n-           try {\n-               Thread.sleep(100);\n-           } catch (InterruptedException e) {\n-             e.printStackTrace();\n-           }\n@@ -241,1 +264,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/awt\/dnd\/DropActionChangeTest.java","additions":57,"deletions":34,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -1,28 +0,0 @@\n-<!--\n- Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<p>\n-Please run this test case under Solaris cjk locale with inputmethod\n-support, if you could input Chinese\/Japanese\/Korean in the  swing\n-JTextField, then the test has passed!\n-<applet code=JTextFieldTest.class width=400 height=400><\/applet>\n","filename":"test\/jdk\/java\/awt\/im\/JTextFieldTest.html","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,3 @@\n- * @bug  4226191\n+ * @bug 4226191\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n@@ -30,2 +32,1 @@\n- * @author xueming.shen@eng\n- * @run applet\/manual=yesno JTextFieldTest.html\n+ * @run main\/manual JTextFieldTest\n@@ -34,4 +35,2 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.applet.*;\n-import javax.swing.*;\n+import java.awt.FlowLayout;\n+import java.awt.TextField;\n@@ -39,1 +38,2 @@\n-public class JTextFieldTest extends Applet implements ActionListener {\n+import javax.swing.JFrame;\n+import javax.swing.JTextField;\n@@ -41,2 +41,7 @@\n-    TextField  tf1;\n-    JTextField tf2;\n+public class JTextFieldTest {\n+    private static final String INSTRUCTIONS =\n+            \"\"\"\n+             Please run this test in a CJK (Chinese\/Japanese\/Korean) locale\n+             with input method support. If you could add input in the swing\n+             JTextField, then the test has passed!\n+            \"\"\";\n@@ -44,7 +49,10 @@\n-    public JTextFieldTest() {\n-        tf1 = new TextField(\"ABCDEFGH\", 10);\n-        tf1.setEditable(false);\n-        tf2 = new JTextField(\"12345678\", 10);\n-        setLayout(new FlowLayout());\n-        add(tf1);\n-        add(tf2);\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame\n+            .builder()\n+            .title(\"JTextFieldTest\")\n+            .instructions(INSTRUCTIONS)\n+            .rows(5)\n+            .columns(40)\n+            .testUI(JTextFieldTest::createAndShowGUI)\n+            .build()\n+            .awaitAndCheck();\n@@ -53,11 +61,10 @@\n-    public void actionPerformed(ActionEvent ae) {\n-\n-    }\n-\n-    public static void main(String args[]) {\n-        JFrame  win = new JFrame();\n-        JTextFieldTest jtf = new JTextFieldTest();\n-        win.getContentPane().setLayout(new FlowLayout());\n-        win.getContentPane().add(jtf);\n-        win.pack();\n-        win.show();\n+    public static JFrame createAndShowGUI() {\n+        JFrame frame = new JFrame(\"Test Frame\");\n+        frame.setLayout(new FlowLayout());\n+        TextField tf1 = new TextField(\"ABCDEFGH\", 10);\n+        tf1.setEditable(false);\n+        JTextField tf2 = new JTextField(\"12345678\", 10);\n+        frame.getContentPane().add(tf1);\n+        frame.getContentPane().add(tf2);\n+        frame.pack();\n+        return frame;\n","filename":"test\/jdk\/java\/awt\/im\/JTextFieldTest.java","additions":36,"deletions":29,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,71 +25,7 @@\n-   @bug 4078566 6658398\n-   @summary Test for a memory leak in Image.\n-   @run main\/manual MemoryLeakTest\n-*\/\n-\n-import java.applet.Applet;\n-import java.lang.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-class Globals {\n-  static boolean testPassed=false;\n-  static Thread mainThread=null;\n-}\n-\n-public class MemoryLeakTest extends Applet {\n-\n-public static void main(String args[]) throws Exception {\n-  new TestDialog(new Frame(), \"MemoryLeakTest\").start();\n-  new MemoryLeak().start();\n-  Globals.mainThread = Thread.currentThread();\n-  try {\n-    Thread.sleep(300000);\n-  } catch (InterruptedException e) {\n-    if (!Globals.testPassed)\n-      throw new Exception(\"MemoryLeakTest failed.\");\n-  }\n-}\n-\n-}\n-\n-class TestDialog extends Dialog\n-    implements ActionListener {\n-\n-TextArea output;\n-Button passButton;\n-Button failButton;\n-String name;\n-\n-public TestDialog(Frame frame, String name)\n-{\n-  super(frame, name + \" Pass\/Fail Dialog\");\n-  this.name = name;\n-  output = new TextArea(11, 50);\n-  add(\"North\", output);\n-  output.append(\"Do the following steps on Solaris only.\\n\");\n-  output.append(\"Maximize and minimize the Memory Leak Test window.\\n\");\n-  output.append(\"Execute the following after minimize.\\n\");\n-  output.append(\"    ps -al | egrep -i 'java|PPID'\\n\");\n-  output.append(\"Examine the size of the process under SZ.\\n\");\n-  output.append(\"Maximize and minimize the Memory Leak Test window again.\\n\");\n-  output.append(\"Execute the following after minimize.\\n\");\n-  output.append(\"    ps -al | egrep -i 'java|PPID'\\n\");\n-  output.append(\"Examine the size of the process under SZ.\\n\");\n-  output.append(\"If the two SZ values are the same, plus or minus one,\\n\");\n-  output.append(\"then click Pass, else click Fail.\");\n-  Panel buttonPanel = new Panel();\n-  passButton = new Button(\"Pass\");\n-  failButton = new Button(\"Fail\");\n-  passButton.addActionListener(this);\n-  failButton.addActionListener(this);\n-  buttonPanel.add(passButton);\n-  buttonPanel.add(failButton);\n-  add(\"South\", buttonPanel);\n-  pack();\n-}\n-\n-public void start()\n-{\n-  show();\n-}\n+ * @bug 4078566 6658398\n+ * @requires (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test for a memory leak in Image.\n+ * @run main\/manual MemoryLeakTest\n+ *\/\n@@ -97,9 +33,33 @@\n-public void actionPerformed(ActionEvent event)\n-{\n-    if ( event.getSource() == passButton ) {\n-      Globals.testPassed = true;\n-      System.err.println(name + \" Passed.\");\n-    }\n-    else if ( event.getSource() == failButton ) {\n-      Globals.testPassed = false;\n-      System.err.println(name + \" Failed.\");\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ComponentListener;\n+\n+public class MemoryLeakTest {\n+    private static final String INSTRUCTIONS =\n+        \"\"\"\n+         Do the following steps on Unix platforms.\n+         Maximize and minimize the Memory Leak Test window.\n+         Execute the following after minimize.\n+             ps -al | egrep -i 'java|PPID'\n+         Examine the size of the process under SZ.\n+         Maximize and minimize the Memory Leak Test window again.\n+         Execute the following after minimize.\n+             ps -al | egrep -i 'java|PPID'\n+         Examine the size of the process under SZ.\n+         If the two SZ values are the same, plus or minus one,\n+         then click Pass, else click Fail.\n+        \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame\n+            .builder()\n+            .title(\"MemoryLeakTest Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .rows(15)\n+            .columns(40)\n+            .testUI(MemoryLeak::new)\n+            .build()\n+            .awaitAndCheck();\n@@ -107,3 +67,0 @@\n-    this.dispose();\n-    if (Globals.mainThread != null)\n-      Globals.mainThread.interrupt();\n@@ -112,1 +69,2 @@\n-}\n+class MemoryLeak extends Frame implements ComponentListener {\n+    private Image osImage;\n@@ -114,0 +72,5 @@\n+    public MemoryLeak() {\n+        super(\"Memory Leak Test\");\n+        setSize(200, 200);\n+        addComponentListener(this);\n+    }\n@@ -115,3 +78,3 @@\n-class MemoryLeak extends Frame implements ComponentListener\n-{\n-private Image osImage;\n+    public static void main(String[] args) {\n+        new MemoryLeak().start();\n+    }\n@@ -119,6 +82,3 @@\n-public MemoryLeak()\n-{\n-    super(\"Memory Leak Test\");\n-    setSize(200, 200);\n-    addComponentListener(this);\n-}\n+    public void start() {\n+        setVisible(true);\n+    }\n@@ -126,4 +86,5 @@\n-public static void main(String args[])\n-{\n-   new MemoryLeak().start();\n-}\n+    public void paint(Graphics g) {\n+        if (osImage != null) {\n+            g.drawImage(osImage, 0, 0, this);\n+        }\n+    }\n@@ -131,4 +92,3 @@\n-public void start()\n-{\n-  show();\n-}\n+    public void update(Graphics g) {\n+        paint(g);\n+    }\n@@ -136,3 +96,12 @@\n-public void paint(Graphics g) {\n-    if (osImage != null) {\n-        g.drawImage(osImage, 0, 0, this);\n+    public void componentResized(ComponentEvent e) {\n+        Image oldimage = osImage;\n+        osImage = createImage(getSize().width, getSize().height);\n+        Graphics g = osImage.getGraphics();\n+        if (oldimage != null) {\n+            g.drawImage(oldimage, 0, 0, getSize().width, getSize().height, this);\n+            oldimage.flush();\n+        } else {\n+            g.setColor(Color.blue);\n+            g.drawLine(0, 0, getSize().width, getSize().height);\n+        }\n+        g.dispose();\n@@ -140,1 +109,0 @@\n-}\n@@ -142,4 +110,1 @@\n-public void update(Graphics g)\n-{\n-    paint(g);\n-}\n+    public void componentMoved(ComponentEvent e) {}\n@@ -147,9 +112,3 @@\n-public void componentResized(ComponentEvent e)\n-{\n-    Image oldimage = osImage;\n-    osImage = createImage(getSize().width, getSize().height);\n-    Graphics g = osImage.getGraphics();\n-    if (oldimage != null) {\n-        g.drawImage(oldimage, 0, 0, getSize().width, getSize().height, this);\n-        oldimage.flush();\n-    } else {\n+    public void componentShown(ComponentEvent e) {\n+        osImage = createImage(getSize().width, getSize().height);\n+        Graphics g = osImage.getGraphics();\n@@ -158,0 +117,1 @@\n+        g.dispose();\n@@ -159,13 +119,0 @@\n-    g.dispose();\n-}\n-\n-public void componentMoved(ComponentEvent e) {}\n-\n-public void componentShown(ComponentEvent e)\n-{\n-    osImage = createImage(getSize().width, getSize().height);\n-    Graphics g = osImage.getGraphics();\n-    g.setColor(Color.blue);\n-    g.drawLine(0, 0, getSize().width, getSize().height);\n-    g.dispose();\n-}\n@@ -173,1 +120,1 @@\n-public void componentHidden(ComponentEvent e) {}\n+    public void componentHidden(ComponentEvent e) {}\n","filename":"test\/jdk\/java\/awt\/image\/MemoryLeakTest\/MemoryLeakTest.java","additions":80,"deletions":133,"binary":false,"changes":213,"status":"modified"},{"patch":"@@ -1,29 +0,0 @@\n-!--\n- Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<title>PrintApplet<\/title>\n-<h1>PrintApplet<\/h1>\n-\n-\n-<applet code=\"PrintApplet.class\" width=300 height=300>\n-<\/applet><p>\n","filename":"test\/jdk\/java\/awt\/print\/Dialog\/PrintApplet.html","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"},{"patch":"@@ -1,142 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n-  @test\n-  @bug 5024549\n-  @key printer\n-  @summary   Pass if dialogs are modal.\n-  @run applet\/manual PrintApplet.html\n-*\/\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.applet.*;\n-import java.awt.print.*;\n-import javax.swing.*;\n-\n-public class PrintApplet extends JApplet implements Printable {\n-    private JButton jButton1 = new JButton();\n-\n-\n-    public PrintApplet() {\n-    }\n-\n-    public void init() {\n-        try {\n-            jbInit();\n-        }\n-        catch(Exception e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    private void jbInit() throws Exception {\n-        jButton1.setText(\"PRINT\");\n-        jButton1.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                jButton1_actionPerformed(e);\n-            }\n-        });\n-        jButton1.setBounds(new Rectangle(165, 248, 80, 30));\n-        this.setSize(new Dimension(400,300));\n-        this.getContentPane().setLayout(null);\n-        this.getContentPane().setBackground(Color.pink);\n-        this.getContentPane().add(jButton1, BorderLayout.SOUTH);\n-    }\n-\n-    public void start() {\n-    }\n-\n-    public void stop() {\n-    }\n-\n-    public void destroy() {\n-    }\n-\n-    public String getAppletInfo() {\n-        return \"Applet inf\";\n-    }\n-\n-    public String[][] getParameterInfo() {\n-        return null;\n-    }\n-\n-\n-   public int print(Graphics g, PageFormat pf, int page) throws PrinterException {\n-       System.out.println(\"Calling print\");\n-       if (page == 0) {\n-           Graphics2D g2 = (Graphics2D)g;\n-           g2.translate(pf.getImageableX(), pf.getImageableY());\n-           g2.setColor(Color.black);\n-           g2.drawString(\"Hello World\", 20, 100);\n-\n-           return Printable.PAGE_EXISTS;\n-       }\n-       return Printable.NO_SUCH_PAGE;\n-   }\n-\n-\n-\n-    void jButton1_actionPerformed(ActionEvent e) {\n-      PrinterJob printJob = null;\n-      PageFormat pageFormat = null;\n-      Paper prtPaper = null;\n-      boolean bPrintFlg = true;\n-\n-\n-      try{\n-         printJob = PrinterJob.getPrinterJob();\n-\n-      }\n-      catch(SecurityException se){\n-\n-         bPrintFlg = false;\n-      }\n-\n-      if (bPrintFlg) {\n-\n-         pageFormat = printJob.pageDialog(printJob.defaultPage());\n-         System.out.println(\"PrintApplet: pageFormat = \"+pageFormat.getWidth()\/72.0+\" x \"+pageFormat.getHeight()\/72.0);\n-         if (pageFormat != null) {\n-\n-            prtPaper = pageFormat.getPaper();\n-            pageFormat.setPaper(prtPaper);\n-\n-\n-            printJob.setPrintable(this, pageFormat);\n-         }\n-\n-         if (printJob.printDialog()) {\n-\n-             try {\n-                 printJob.print();\n-             }\n-             catch (java.awt.print.PrinterException ex) {\n-                 ex.printStackTrace();\n-             }\n-\n-         }\n-\n-      }\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/print\/Dialog\/PrintApplet.java","additions":0,"deletions":142,"binary":false,"changes":142,"status":"deleted"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.print.PageFormat;\n+import java.awt.print.PrinterJob;\n+\n+import javax.swing.JFrame;\n+\n+\/*\n+ * @test\n+ * @bug 4784285 4785920 5024549\n+ * @key printer\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary check whether Print- and Page- dialogs are modal and correct window\n+ *  activated after their closing\n+ * @run main\/manual PrinterDialogsModalityTest\n+ *\/\n+\n+public class PrinterDialogsModalityTest {\n+    private static final String INSTRUCTIONS =\n+            \"\"\"\n+             After the test starts, you will see a frame titled \"Test Frame\"\n+             with two buttons: \"Page Dialog\" and \"Print Dialog\".\n+             1. Make the \"Test Frame\" active by clicking on title.\n+             2. Press \"Page Dialog\" button and a page dialog should popup.\n+             3. Make sure page dialog is modal. (Modal in this case means that\n+                it blocks the user from interacting with other windows in the\n+                same application, like this instruction window. You may still be\n+                able to interact with unrelated applications on the desktop.).\n+             4. Close the dialog (either cancel it or press ok).\n+             5. Make sure the frame is still active.\n+             6. Press \"Print Dialog\" button, print dialog should popup.\n+             7. Repeat steps 3-5.\n+\n+             If you are able to execute all steps successfully then the test\n+             passes, otherwise it fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame\n+                .builder()\n+                .title(\"PrinterDialogsModalityTest Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(PrinterDialogsModalityTest::createAndShowGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createAndShowGUI() {\n+        JFrame frame = new JFrame(\"Test Frame\");\n+        frame.setLayout(new FlowLayout());\n+\n+        Button page = new Button(\"Page Dialog\");\n+        page.addActionListener(e -> {\n+            PrinterJob prnJob = PrinterJob.getPrinterJob();\n+            prnJob.pageDialog(new PageFormat());\n+        });\n+        Button print = new Button(\"Print Dialog\");\n+        print.addActionListener(e -> {\n+            PrinterJob prnJob = PrinterJob.getPrinterJob();\n+            prnJob.printDialog();\n+        });\n+        frame.add(page);\n+        frame.add(print);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrinterDialogsModalityTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @bug 4784285 4785920\n-  @key printer\n-  @summary check whether Print- and Page- dialogs are modal and correct window activated after their closing\n-  @run applet\/manual=yesno PrinterDialogsModalityTest.html\n-  -->\n-<head>\n-<title> PrinterDialogsModalityTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>PrinterDialogsModalityTest<br>Bug ID: 4784285 4785920<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"PrinterDialogsModalityTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrinterDialogsModalityTest\/PrinterDialogsModalityTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,262 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n-  test\n-  @bug 4784285 4785920\n-  @key printer\n-  @summary check whether Print- and Page- dialogs are modal and correct window activated after their closing\n-  @run applet\/manual=yesno PrinterDialogsModalityTest.html\n-*\/\n-\n-\/**\n- * PrinterDialogsModalityTest.java\n- *\n- * summary: check whether Print- and Page- dialogs are modal and correct window activated after their closing\n- *\/\n-\n-import java.applet.Applet;\n-\n-import java.awt.BorderLayout;\n-import java.awt.Button;\n-import java.awt.Dialog;\n-import java.awt.FlowLayout;\n-import java.awt.Frame;\n-import java.awt.TextArea;\n-\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-\n-import java.awt.print.PageFormat;\n-import java.awt.print.PrinterJob;\n-\n-public class PrinterDialogsModalityTest extends Applet\n-{\n-    \/\/Declare things used in the test, like buttons and labels here\n-\n-    public void init()\n-    {\n-        \/\/Create instructions for the user here, as well as set up\n-        \/\/ the environment -- set the layout manager, add buttons,\n-        \/\/ etc.\n-        this.setLayout (new BorderLayout ());\n-\n-        String[] instructions =\n-        {\n-            \"This is a Windows only test, for other platforms consider it passed\",\n-            \"After test start you will see frame titled \\\"test Frame\\\"\",\n-            \"with two buttons - \\\"Page Dialog\\\" and \\\"Print Dialog\\\"\",\n-            \"1. make the frame active by clicking on title\",\n-            \"2. press \\\"Page Dialog\\\" button, page dailog should popup\",\n-            \"3. make sure page dialog is modal (if not test is failed)\",\n-            \"4. close the dialog (either cancel it or press ok)\",\n-            \"5. make sure the frame is still active (if not test is failed)\",\n-            \"6. press \\\"Print Dialog\\\" button, print dialog should popup\",\n-            \"7. repeat steps 3.-5.\",\n-            \"\",\n-            \"If you are able to execute all steps successfully then test is passed, else failed.\"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        \/\/Get things going.  Request focus, set size, et cetera\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-\n-        Button page = new Button(\"Page Dialog\");\n-        page.addActionListener(new ActionListener() {\n-                public void actionPerformed(ActionEvent e) {\n-                    PrinterJob prnJob = PrinterJob.getPrinterJob();\n-                    prnJob.pageDialog(new PageFormat());\n-                }\n-            });\n-        Button print = new Button(\"Print Dialog\");\n-        print.addActionListener(new ActionListener() {\n-                public void actionPerformed(ActionEvent e) {\n-                    PrinterJob prnJob = PrinterJob.getPrinterJob();\n-                    prnJob.printDialog();\n-                }\n-            });\n-        Frame frame = new Frame(\"Test Frame\");\n-        frame.setLayout(new FlowLayout());\n-        frame.add(page);\n-        frame.add(print);\n-        frame.setLocation(200, 200);\n-        frame.pack();\n-        frame.setVisible(true);\n-\n-    }\/\/ start()\n-\n-    \/\/The rest of this class is the actions which perform the test...\n-\n-    \/\/Use Sysout.println to communicate with the user NOT System.out!!\n-    \/\/Sysout.println (\"Something Happened!\");\n-\n-}\/\/ class PrinterDialogsModalityTest\n-\n-\/* Place other classes related to the test after this line *\/\n-\n-\n-\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrinterDialogsModalityTest\/PrinterDialogsModalityTest.java","additions":0,"deletions":262,"binary":false,"changes":262,"status":"deleted"},{"patch":"@@ -187,1 +187,1 @@\n- * {@snippet :\n+ * <pre><code>\n@@ -189,1 +189,1 @@\n- *  * @test\n+ *  * &#64;test\n@@ -194,2 +194,2 @@\n- * }\n- * and the closing comment tag <code>*&#47;<\/code>.\n+ *  *&#47;\n+ * <\/code><\/pre>\n@@ -202,0 +202,2 @@\n+ * <p>\n+ * Don't forget to update the name of the class to run in the {@code @run} tag.\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -216,5 +216,1 @@\n-                \"#ifdef _WIN64\\n\" +\n-                \"#define EXPORT __declspec(dllexport)\\n\" +\n-                \"#else\\n\" +\n-                \"#define EXPORT\\n\" +\n-                \"#endif\\n\"\n+                \"#include \\\"export.h\\\"\\n\"\n@@ -270,5 +266,1 @@\n-                \"#ifdef _WIN64\\n\" +\n-                \"#define EXPORT __declspec(dllexport)\\n\" +\n-                \"#else\\n\" +\n-                \"#define EXPORT\\n\" +\n-                \"#endif\\n\"\n+                \"#include \\\"export.h\\\"\\n\"\n","filename":"test\/jdk\/java\/foreign\/CallGeneratorHelper.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/arraystructs\/libArrayStructs.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/capturecallstate\/libCaptureCallState.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/dontrelease\/libDontRelease.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libAddressDereference.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n@@ -88,1 +84,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/foreign\/libIntrinsics.c","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libLibraryLookup.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,8 +25,1 @@\n- #ifdef _WIN64\n- #define EXPORT __declspec(dllexport)\n- #else\n- #define EXPORT\n- #endif\n-\n- EXPORT void f() { }\n- EXPORT int c = 42;\n+#include \"export.h\"\n@@ -34,0 +27,2 @@\n+EXPORT void f() { }\n+EXPORT int c = 42;\n","filename":"test\/jdk\/java\/foreign\/libLookupTest.c","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,6 +24,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n@@ -32,0 +26,2 @@\n+#include \"export.h\"\n+\n","filename":"test\/jdk\/java\/foreign\/libNull.c","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libSafeAccess.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libTestUpcallHighArity.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libTestUpcallStructScope.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/loaderLookup\/lookup\/libFoo.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/nested\/libNested.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/normalize\/libNormalize.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/passheapsegment\/libPassHeapSegment.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+#include \"export.h\"\n+\n@@ -32,6 +34,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n","filename":"test\/jdk\/java\/foreign\/shared.h","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"export.h\"\n@@ -27,6 +28,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libAsyncStackWalk.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libReentrantUpcalls.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libStackWalk.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/trivial\/libTrivial.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/upcalldeopt\/libUpcallDeopt.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/virtual\/libVirtual.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,1 +23,1 @@\n-#include <stdio.h>\n+\n@@ -25,0 +25,3 @@\n+#include <stdio.h>\n+\n+#include \"export.h\"\n@@ -31,1 +34,1 @@\n-void start_threads(int n, void *(*f)(void *)) {\n+EXPORT void start_threads(int n, void *(*f)(void *)) {\n","filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/libImplicitAttach.c","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.httpclient.test.lib.common.HttpServerAdapters;\n+\n@@ -57,4 +59,8 @@\n- *          is always the same InetSocketAddress.\n- * @modules jdk.httpserver\n- * @run main\/othervm -Djdk.tracePinnedThreads=full PlainProxyConnectionTest\n- * @author danielfuchs\n+ *          is always the same InetSocketAddress. Logging verbosity is increased to aid in\n+ *          diagnosis of intermittent failures.\n+ * @library \/test\/lib\n+ *          \/test\/jdk\/java\/net\/httpclient\/lib\n+ * @run main\/othervm -Djdk.tracePinnedThreads=full\n+ *      -Djdk.httpclient.HttpClient.log=headers,requests,trace\n+ *      -Djdk.internal.httpclient.debug=true\n+ *      PlainProxyConnectionTest\n@@ -64,0 +70,5 @@\n+    \/\/ Increase logging verbosity to troubleshoot intermittent failures\n+    static {\n+        HttpServerAdapters.enableServerLogging();\n+    }\n+\n@@ -65,1 +76,5 @@\n-    static final String PATH = \"\/foo\/\";\n+\n+    \/\/ Adding some salt to the path to avoid other parallel running tests mistakenly connect to our test server\n+    private static final String PATH = String.format(\n+            \"\/%s-%d\", PlainProxyConnectionTest.class.getSimpleName(), PlainProxyConnectionTest.class.hashCode());\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/PlainProxyConnectionTest.java","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -29,1 +29,3 @@\n-import java.nio.channels.*;\n+import java.nio.channels.Pipe;\n+import java.nio.channels.SelectionKey;\n+import java.nio.channels.Selector;\n@@ -50,1 +52,1 @@\n-        long startTime = System.currentTimeMillis();\n+        long startTime = System.nanoTime();\n@@ -52,1 +54,1 @@\n-        long endTime = System.currentTimeMillis();\n+        long endTime = System.nanoTime();\n@@ -56,2 +58,3 @@\n-        if (endTime - startTime < 1000)\n-            throw new RuntimeException(\"test failed\");\n+        long delta = endTime - startTime;\n+        if (delta < 1_000_000_000)\n+            throw new RuntimeException(\"test failed with delta \" + delta);\n@@ -65,2 +68,0 @@\n-        Pipe p = Pipe.open();\n-        p.source().configureBlocking(false);\n@@ -71,1 +72,1 @@\n-        long startTime = System.currentTimeMillis();\n+        long startTime = System.nanoTime();\n@@ -73,1 +74,1 @@\n-        long endTime = System.currentTimeMillis();\n+        long endTime = System.nanoTime();\n@@ -75,2 +76,3 @@\n-        if (endTime - startTime < 1000)\n-            throw new RuntimeException(\"test failed\");\n+        long delta = endTime - startTime;\n+        if (delta < 1_000_000_000)\n+            throw new RuntimeException(\"test failed with delta \" + delta);\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/WakeupNow.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024 Alibaba Group Holding Limited. All Rights Reserved.\n@@ -31,1 +32,1 @@\n- * @run main\/othervm CreationTime\n+ * @run main\/othervm\/native CreationTime\n@@ -40,1 +41,1 @@\n- * @run main\/native CreationTime .\n+ * @run main\/othervm\/native CreationTime .\n@@ -54,2 +55,0 @@\n-    private static final java.io.PrintStream err = System.err;\n-\n@@ -81,8 +80,3 @@\n-            System.out.println(\"creationTime.toMillis() == \" + creationTime.toMillis());\n-            \/\/ If the file system doesn't support birth time, then skip this test\n-            if (creationTime.toMillis() == 0) {\n-                throw new SkippedException(\"birth time not support for: \" + file);\n-            } else {\n-                err.println(\"File creation time reported as: \" + creationTime);\n-                throw new RuntimeException(\"Expected to be close to: \" + now);\n-            }\n+            System.err.println(\"creationTime.toMillis() == \" + creationTime.toMillis());\n+            System.err.println(\"File creation time reported as: \" + creationTime);\n+            throw new RuntimeException(\"Expected to be close to: \" + now);\n@@ -110,1 +104,6 @@\n-            supportsCreationTimeRead = CreationTimeHelper.linuxIsCreationTimeSupported();\n+            try {\n+                supportsCreationTimeRead = CreationTimeHelper.\n+                        linuxIsCreationTimeSupported(file.toAbsolutePath().toString());\n+            } catch (Throwable e) {\n+                supportsCreationTimeRead = false;\n+            }\n@@ -125,1 +124,3 @@\n-            if (!current.equals(creationTime))\n+            if (!current.equals(creationTime)) {\n+                System.err.println(\"current = \" + current);\n+                System.err.println(\"creationTime = \" + creationTime);\n@@ -127,0 +128,1 @@\n+            }\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTime.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024 Alibaba Group Holding Limited. All Rights Reserved.\n@@ -23,0 +24,1 @@\n+\n@@ -30,1 +32,1 @@\n-    static native boolean linuxIsCreationTimeSupported();\n+    static native boolean linuxIsCreationTimeSupported(String file);\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTimeHelper.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024 Alibaba Group Holding Limited. All Rights Reserved.\n@@ -24,0 +25,1 @@\n+#include <stdbool.h>\n@@ -25,0 +27,4 @@\n+#include <stdio.h>\n+#include <string.h>\n+#include <sys\/types.h>\n+#include <sys\/stat.h>\n@@ -26,0 +32,21 @@\n+#ifndef STATX_BASIC_STATS\n+#define STATX_BASIC_STATS 0x000007ffU\n+#endif\n+#ifndef STATX_BTIME\n+#define STATX_BTIME 0x00000800U\n+#endif\n+#ifndef RTLD_DEFAULT\n+#define RTLD_DEFAULT RTLD_LOCAL\n+#endif\n+#ifndef AT_SYMLINK_NOFOLLOW\n+#define AT_SYMLINK_NOFOLLOW 0x100\n+#endif\n+#ifndef AT_FDCWD\n+#define AT_FDCWD -100\n+#endif\n+\n+#ifndef __GLIBC__\n+\/\/ Alpine doesn't know these types, define them\n+typedef unsigned int       __uint32_t;\n+typedef unsigned short     __uint16_t;\n+typedef unsigned long int  __uint64_t;\n@@ -28,0 +55,44 @@\n+\/*\n+ * Timestamp structure for the timestamps in struct statx.\n+ *\/\n+struct my_statx_timestamp {\n+        int64_t   tv_sec;\n+        __uint32_t  tv_nsec;\n+        int32_t   __reserved;\n+};\n+\n+\/*\n+ * struct statx used by statx system call on >= glibc 2.28\n+ * systems\n+ *\/\n+struct my_statx\n+{\n+  __uint32_t stx_mask;\n+  __uint32_t stx_blksize;\n+  __uint64_t stx_attributes;\n+  __uint32_t stx_nlink;\n+  __uint32_t stx_uid;\n+  __uint32_t stx_gid;\n+  __uint16_t stx_mode;\n+  __uint16_t __statx_pad1[1];\n+  __uint64_t stx_ino;\n+  __uint64_t stx_size;\n+  __uint64_t stx_blocks;\n+  __uint64_t stx_attributes_mask;\n+  struct my_statx_timestamp stx_atime;\n+  struct my_statx_timestamp stx_btime;\n+  struct my_statx_timestamp stx_ctime;\n+  struct my_statx_timestamp stx_mtime;\n+  __uint32_t stx_rdev_major;\n+  __uint32_t stx_rdev_minor;\n+  __uint32_t stx_dev_major;\n+  __uint32_t stx_dev_minor;\n+  __uint64_t __statx_pad2[14];\n+};\n+\n+typedef int statx_func(int dirfd, const char *restrict pathname, int flags,\n+                       unsigned int mask, struct my_statx *restrict statxbuf);\n+\n+static statx_func* my_statx_func = NULL;\n+#endif  \/\/#defined(__linux__)\n+\n@@ -30,2 +101,1 @@\n-Java_CreationTimeHelper_linuxIsCreationTimeSupported(JNIEnv *env, jclass cls)\n-{\n+Java_CreationTimeHelper_linuxIsCreationTimeSupported(JNIEnv *env, jclass cls, jstring file) {\n@@ -33,2 +103,36 @@\n-    void* statx_func = dlsym(RTLD_DEFAULT, \"statx\");\n-    return statx_func != NULL ? JNI_TRUE : JNI_FALSE;\n+    struct my_statx stx = {0};\n+    int ret, atflag = AT_SYMLINK_NOFOLLOW;\n+    unsigned int mask = STATX_BASIC_STATS | STATX_BTIME;\n+\n+    my_statx_func = (statx_func*) dlsym(RTLD_DEFAULT, \"statx\");\n+    if (my_statx_func == NULL) {\n+        return false;\n+    }\n+\n+    if (file == NULL) {\n+        printf(\"input file error!\\n\");\n+        return JNI_FALSE;\n+    }\n+    const char *utfChars = (*env)->GetStringUTFChars(env, file, NULL);\n+    if (utfChars == NULL) {\n+        printf(\"jstring convert to char array error!\\n\");\n+        return JNI_FALSE;\n+    }\n+\n+    ret = my_statx_func(AT_FDCWD, utfChars, atflag, mask, &stx);\n+\n+    if (file != NULL && utfChars != NULL) {\n+        (*env)->ReleaseStringUTFChars(env, file, utfChars);\n+    }\n+\n+    if (ret != 0) {\n+        return JNI_FALSE;\n+    }\n+\n+    \/\/ On some systems where statx is available but birth time might still not\n+    \/\/ be supported as it's file system specific. The only reliable way to\n+    \/\/ check for supported or not is looking at the filled in STATX_BTIME bit\n+    \/\/ in the returned statx buffer mask.\n+    if ((stx.stx_mask & STATX_BTIME) != 0)\n+        return JNI_TRUE;\n+    return JNI_FALSE;\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/libCreationTimeHelper.c","additions":108,"deletions":4,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -1,147 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-import java.awt.AWTException;\n-import java.awt.BorderLayout;\n-import java.awt.EventQueue;\n-import java.awt.Point;\n-import java.awt.Robot;\n-import java.awt.event.InputEvent;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-import javax.swing.JButton;\n-import javax.swing.JFrame;\n-import javax.swing.SwingUtilities;\n-\n-\/*\n- * @test\n- * @key headful\n- * @bug  8049069\n- * @summary Tests whether right mouse click releases a pressed JButton\n- *\/\n-\n-public class PressedButtonRightClickTest {\n-\n-    private static Robot testRobot;\n-    private static JFrame myFrame;\n-    private static JButton myButton;\n-\n-    public static void main(String[] args) throws Throwable {\n-\n-        SwingUtilities.invokeAndWait(PressedButtonRightClickTest::constructTestUI);\n-\n-        try {\n-            testRobot = new Robot();\n-        } catch (AWTException ex) {\n-            throw new RuntimeException(\"Exception in Robot creation\");\n-        }\n-\n-        testRobot.waitForIdle();\n-        testRobot.delay(500);\n-\n-        \/\/ Method performing auto test operation\n-        try {\n-            test();\n-        } finally {\n-            EventQueue.invokeAndWait(PressedButtonRightClickTest::disposeTestUI);\n-        }\n-    }\n-\n-    private static void test() {\n-        Point loc = myFrame.getLocationOnScreen();\n-\n-        testRobot.mouseMove((loc.x + 100), (loc.y + 100));\n-\n-        \/\/ Press the left mouse button\n-        System.out.println(\"press BUTTON1_DOWN_MASK\");\n-        testRobot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        myButton.setText(\"Left button pressed\");\n-        testRobot.delay(500);\n-\n-        \/\/ Press the right mouse button\n-        System.out.println(\"press BUTTON3_DOWN_MASK\");\n-        testRobot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n-        myButton.setText(\"Left button pressed + Right button pressed\");\n-        testRobot.delay(500);\n-\n-        \/\/ Release the right mouse button\n-        System.out.println(\"release BUTTON3_DOWN_MASK\");\n-        testRobot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n-        myButton.setText(\"Right button released\");\n-        testRobot.waitForIdle();\n-        testRobot.delay(500);\n-\n-        \/\/ Test whether the button is still pressed\n-        boolean pressed = myButton.getModel().isPressed();\n-        System.out.println(\"release BUTTON1_DOWN_MASK\");\n-        testRobot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        if (!pressed) {\n-            disposeTestUI();\n-            throw new RuntimeException(\"Test Failed!\");\n-        }\n-    }\n-\n-    private static void disposeTestUI() {\n-        myFrame.setVisible(false);\n-        myFrame.dispose();\n-    }\n-\n-    public static void constructTestUI() {\n-        myFrame = new JFrame();\n-        myFrame.setLayout(new BorderLayout());\n-        myButton = new JButton(\"Whatever\");\n-        myButton.addMouseListener(new MouseAdapter() {\n-            @Override\n-            public void mouseClicked(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mousePressed(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mouseReleased(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mouseEntered(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mouseExited(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-        });\n-        myFrame.add(myButton, BorderLayout.CENTER);\n-        myFrame.setSize(400, 300);\n-        myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        myFrame.setLocationRelativeTo(null);\n-        myFrame.setVisible(true);\n-    }\n-}\n-\n","filename":"test\/jdk\/javax\/swing\/JButton\/PressedButtonRightClickTest.java","additions":0,"deletions":147,"binary":false,"changes":147,"status":"deleted"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 4490179\n+ * @bug 4490179 8049069\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4490179.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,36 +0,0 @@\n-<!--\n- Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-\n-Verify that scaled components are rendered smoothly to image.\n-\n-1. Run the test.\n-2. Check that Selected and Deselected JCheckBox icons are drawn smoothly.\n-If so, press PASS, else press FAIL.\n-\n-<applet  code=\"bug8032667.class\" width=400 height=400><\/applet>\n-\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667.html","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-\/*\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import java.awt.BorderLayout;\n-import java.awt.Canvas;\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.Image;\n-import java.awt.image.BufferedImage;\n-import javax.swing.JApplet;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComponent;\n-import javax.swing.SwingUtilities;\n-\n-\/* @test\n- * @bug 8032667\n- * @summary [macosx] Components cannot be rendered in HiDPI to BufferedImage\n- * @run applet\/manual=yesno bug8032667.html\n- *\/\n-public class bug8032667 extends JApplet {\n-\n-    static final int scale = 2;\n-    static final int width = 130;\n-    static final int height = 50;\n-    static final int scaledWidth = scale * width;\n-    static final int scaledHeight = scale * height;\n-\n-    @Override\n-    public void init() {\n-        SwingUtilities.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-\n-                final Image image1 = getImage(getCheckBox(\"Deselected\", false));\n-                final Image image2 = getImage(getCheckBox(\"Selected\", true));\n-\n-                Canvas canvas = new Canvas() {\n-\n-                    @Override\n-                    public void paint(Graphics g) {\n-                        super.paint(g);\n-                        g.drawImage(image1, 0, 0, scaledWidth, scaledHeight, this);\n-                        g.drawImage(image2, 0, scaledHeight + 5,\n-                                scaledWidth, scaledHeight, this);\n-                    }\n-                };\n-\n-                getContentPane().add(canvas, BorderLayout.CENTER);\n-            }\n-        });\n-    }\n-\n-    static JCheckBox getCheckBox(String text, boolean selected) {\n-        JCheckBox checkBox = new JCheckBox(text);\n-        checkBox.setSelected(selected);\n-        checkBox.setSize(new Dimension(width, height));\n-        return checkBox;\n-    }\n-\n-    static Image getImage(JComponent component) {\n-        final BufferedImage image = new BufferedImage(\n-                scaledWidth, scaledHeight, BufferedImage.TYPE_INT_ARGB);\n-        final Graphics g = image.getGraphics();\n-        ((Graphics2D) g).scale(scale, scale);\n-        component.paint(g);\n-        g.dispose();\n-\n-        return image;\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667.java","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,116 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.Image;\n-import java.awt.image.BufferedImage;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComponent;\n-import javax.swing.SwingUtilities;\n-\n-import jdk.test.lib.Platform;\n-\n-\/* @test\n- * @bug 8032667\n- * @summary [macosx] Components cannot be rendered in HiDPI to BufferedImage\n- * @library \/test\/lib\n- * @build jdk.test.lib.Platform\n- * @run main bug8032667_image_diff\n- *\/\n-public class bug8032667_image_diff {\n-\n-    static final int IMAGE_WIDTH = 130;\n-    static final int IMAGE_HEIGHT = 50;\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        if (!Platform.isOSX()) {\n-            return;\n-        }\n-\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-\n-                JCheckBox checkBox = new JCheckBox();\n-                checkBox.setSelected(true);\n-                checkBox.setSize(new Dimension(IMAGE_WIDTH, IMAGE_HEIGHT));\n-\n-                final BufferedImage image1 = getHiDPIImage(checkBox);\n-                final BufferedImage image2 = getScaledImage(checkBox);\n-\n-                if(equal(image1, image2)){\n-                    throw new RuntimeException(\"2x image equals to non smooth image\");\n-                }\n-            }\n-        });\n-    }\n-\n-    static boolean equal(BufferedImage image1, BufferedImage image2) {\n-\n-        int w = image1.getWidth();\n-        int h = image1.getHeight();\n-\n-        if (w != image2.getWidth() || h != image2.getHeight()) {\n-            return false;\n-        }\n-\n-        for (int i = 0; i < w; i++) {\n-            for (int j = 0; j < h; j++) {\n-                int color1 = image1.getRGB(i, j);\n-                int color2 = image2.getRGB(i, j);\n-\n-                if (color1 != color2) {\n-                    return false;\n-                }\n-            }\n-        }\n-        return true;\n-    }\n-\n-    static BufferedImage getHiDPIImage(JComponent component) {\n-        return getImage(component, 2, IMAGE_WIDTH, IMAGE_HEIGHT);\n-    }\n-\n-    static BufferedImage getScaledImage(JComponent component) {\n-        Image image1x = getImage(component, 1, IMAGE_WIDTH, IMAGE_HEIGHT);\n-        final BufferedImage image2x = new BufferedImage(\n-                2 * IMAGE_WIDTH, 2 * IMAGE_HEIGHT, BufferedImage.TYPE_INT_ARGB);\n-        final Graphics g = image2x.getGraphics();\n-        ((Graphics2D) g).scale(2, 2);\n-        g.drawImage(image1x, 0, 0, null);\n-        g.dispose();\n-        return image2x;\n-    }\n-\n-    static BufferedImage getImage(JComponent component, int scale, int width, int height) {\n-        final BufferedImage image = new BufferedImage(\n-                scale * width, scale * height, BufferedImage.TYPE_INT_ARGB);\n-        final Graphics g = image.getGraphics();\n-        ((Graphics2D) g).scale(scale, scale);\n-        component.paint(g);\n-        g.dispose();\n-        return image;\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667_image_diff.java","additions":0,"deletions":116,"binary":false,"changes":116,"status":"deleted"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.image.BufferedImage;\n+\n+import javax.swing.JCheckBox;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+\n+\/* @test\n+ * @bug 8032667\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary [macosx] Components cannot be rendered in HiDPI to BufferedImage\n+ * @run main\/manual bug8032667\n+ *\/\n+\n+public class bug8032667 {\n+\n+    static final int scale = 2;\n+    static final int width = 130;\n+    static final int height = 50;\n+    static final int scaledWidth = scale * width;\n+    static final int scaledHeight = scale * height;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Verify that scaled components are rendered smoothly to image.\n+\n+            1. Run the test.\n+            2. Check that Selected and Deselected JCheckBox icons are drawn smoothly.\n+            If so, press PASS, else press FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug8032667 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(bug8032667::createAndShowGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createAndShowGUI() {\n+        JFrame frame = new JFrame(\"bug8032667 HiDPI Component Test\");\n+        frame.setLayout(new BorderLayout());\n+        frame.setBounds(0, 400, 400, 400);\n+\n+        final Image image1 = getImage(getCheckBox(\"Deselected\", false));\n+        final Image image2 = getImage(getCheckBox(\"Selected\", true));\n+        JPanel panel = new JPanel() {\n+            @Override\n+            public void paint(Graphics g) {\n+                super.paint(g);\n+                g.drawImage(image1, 0, 0, scaledWidth, scaledHeight, this);\n+                g.drawImage(image2, 0, scaledHeight + 5,\n+                        scaledWidth, scaledHeight, this);\n+            }\n+        };\n+        frame.add(panel, BorderLayout.CENTER);\n+        return frame;\n+    }\n+\n+    static JCheckBox getCheckBox(String text, boolean selected) {\n+        JCheckBox checkBox = new JCheckBox(text);\n+        checkBox.setSelected(selected);\n+        checkBox.setSize(new Dimension(width, height));\n+        return checkBox;\n+    }\n+\n+    static Image getImage(JComponent component) {\n+        final BufferedImage image = new BufferedImage(\n+                scaledWidth, scaledHeight, BufferedImage.TYPE_INT_ARGB);\n+        final Graphics g = image.getGraphics();\n+        ((Graphics2D) g).scale(scale, scale);\n+        component.paint(g);\n+        g.dispose();\n+\n+        return image;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/bug8032667.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,15 +37,11 @@\n-        SwingUtilities.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                JFrame frame = new JFrame();\n-                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-                JPanel panel = new JPanel();\n-                JColorChooser colorChooser = new JColorChooser();\n-                colorChooser.setDragEnabled(true);\n-                panel.setBorder(BorderFactory.createTitledBorder(\"JColorChoosers\"));\n-                panel.add(colorChooser);\n-                frame.setContentPane(panel);\n-                frame.pack();\n-                frame.setVisible(true);\n-            }\n+        SwingUtilities.invokeLater(() -> {\n+            JFrame frame = new JFrame();\n+            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+            JPanel panel = new JPanel();\n+            JColorChooser colorChooser = new JColorChooser();\n+            colorChooser.setDragEnabled(true);\n+            panel.setBorder(BorderFactory.createTitledBorder(\"JColorChoosers\"));\n+            panel.add(colorChooser);\n+            frame.setContentPane(panel);\n+            frame.pack();\n+            frame.setVisible(true);\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/8065098\/JColorChooserDnDTest.java","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-<!--\n- Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-    <body>\n-        1. Compile the java test JColorChooserDnDTest.java: \n-            > <path-to-the-tested-jdk>\/bin\/javac JColorChooserDnDTest.java\n-        2. Run the first instance of the java test: \n-            > <path-to-the-tested-jdk>\/bin\/java JColorChooserDnDTest\n-        3. Select a color in the color chooser\n-        4. Run the second instance of the java test: \n-            > <path-to-the-tested-jdk>\/bin\/java JColorChooserDnDTest\n-        5. Drag and drop the selected color from the first color chooser\n-           preview panel to the second color chooser preview panel\n-        6. If the color is dragged to the second color chooser then the test passes.\n-\n-    <applet width=\"500\" height=\"1\" code=\"bug8065098.class\">\n-    <\/applet>        \n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/8065098\/bug8065098.html","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,1 +23,0 @@\n-import javax.swing.JApplet;\n@@ -28,0 +27,2 @@\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n@@ -30,1 +31,1 @@\n- * @run applet\/manual=yesno bug8065098.html\n+ * @run main\/manual bug8065098\n@@ -32,1 +33,0 @@\n-public class bug8065098 extends JApplet {\n@@ -34,0 +34,24 @@\n+public class bug8065098 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. Compile the java test JColorChooserDnDTest.java:\n+                > <path-to-the-tested-jdk>\/bin\/javac JColorChooserDnDTest.java\n+            2. Run the first instance of the java test:\n+                > <path-to-the-tested-jdk>\/bin\/java JColorChooserDnDTest\n+            3. Select a color in the color chooser.\n+            4. Run the second instance of the java test:\n+                > <path-to-the-tested-jdk>\/bin\/java JColorChooserDnDTest\n+            5. Drag and drop the selected color from the first color chooser\n+                preview panel to the second color chooser preview panel\n+            6. If the color is dragged to the second color chooser, then the\n+                test passes. Otherwise, the test fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug8065098 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .build()\n+                .awaitAndCheck();\n+    }\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/8065098\/bug8065098.java","additions":28,"deletions":4,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1,37 +0,0 @@\n-<!--\n- Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-1. Press button \"Show Dialog\" at the frame \"Test\" and\n-   the dialog with button \"Show ColorChooser\" should appears.\n-2. Press button \"Show ColorChooser\" at the dialog \"Dialog\" and\n-   the colorchooser should appears.\n-3. Press the button \"Cancel\" of colorchooser.\n-   If the focus will come to the frame \"Test\" then test fails.\n-   If the focus will come to the dialog \"Dialog\" then test passes.\n-\n-<applet width=\"500\" height=\"400\" code=\"Test4759934.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4759934.html","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2008, 2024 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,8 +24,0 @@\n-\/*\n- * @test\n- * @bug 4759934\n- * @summary Tests windows activation problem\n- * @author Andrey Pikalev\n- * @run applet\/manual=yesno Test4759934.html\n- *\/\n-\n@@ -37,1 +29,0 @@\n-import javax.swing.JApplet;\n@@ -43,1 +34,9 @@\n-public class Test4759934 extends JApplet implements ActionListener {\n+\/*\n+ * @test\n+ * @bug 4759934\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests windows activation problem\n+ * @run main\/manual Test4759934\n+ *\/\n+public class Test4759934 {\n@@ -47,1 +46,1 @@\n-    private final JFrame frame = new JFrame(\"Test\"); \/\/ NON-NLS: frame title\n+    private static JFrame frame;\n@@ -49,3 +48,14 @@\n-    public void init() {\n-        show(this.frame, CMD_DIALOG);\n-    }\n+    private static ActionListener al = new ActionListener() {\n+        @Override\n+        public void actionPerformed(ActionEvent event) {\n+            String command = event.getActionCommand();\n+            if (CMD_DIALOG.equals(command)) {\n+                JDialog dialog = new JDialog(frame, \"Dialog\"); \/\/ NON-NLS: dialog title\n+                dialog.setLocation(200, 0);\n+                show(dialog, CMD_CHOOSER, true);\n+            }\n+            else if (CMD_CHOOSER.equals(command)) {\n+                Object source = event.getSource();\n+                Component component = (source instanceof Component)\n+                        ? (Component) source\n+                        : null;\n@@ -53,6 +63,2 @@\n-    public void actionPerformed(ActionEvent event) {\n-        String command = event.getActionCommand();\n-        if (CMD_DIALOG.equals(command)) {\n-            JDialog dialog = new JDialog(this.frame, \"Dialog\"); \/\/ NON-NLS: dialog title\n-            dialog.setLocation(200, 0);\n-            show(dialog, CMD_CHOOSER);\n+                JColorChooser.showDialog(component, \"ColorChooser\", Color.BLUE); \/\/ NON-NLS: title\n+            }\n@@ -60,5 +66,1 @@\n-        else if (CMD_CHOOSER.equals(command)) {\n-            Object source = event.getSource();\n-            Component component = (source instanceof Component)\n-                    ? (Component) source\n-                    : null;\n+    };\n@@ -66,2 +68,18 @@\n-            JColorChooser.showDialog(component, \"ColorChooser\", Color.BLUE); \/\/ NON-NLS: title\n-        }\n+    public static void main(String[] args) throws Exception {\n+        String instructions = \"1. Press button \\\"Show Dialog\\\" at the frame \\\"Test\\\" and\\n\" +\n+                \"   the dialog with button \\\"Show ColorChooser\\\" should appears.\\n\" +\n+                \"2. Press button \\\"Show ColorChooser\\\" at the dialog \\\"Dialog\\\" and\\n\" +\n+                \"   the colorchooser should appears.\\n\" +\n+                \"3. Press the button \\\"Cancel\\\" of colorchooser.\\n\" +\n+                \"   If the focus will come to the frame \\\"Test\\\" then test fails.\\n\" +\n+                \"   If the focus will come to the dialog \\\"Dialog\\\" then test passes.\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test4759934\")\n+                .instructions(instructions)\n+                .rows(5)\n+                .columns(40)\n+                .testTimeOut(10)\n+                .testUI(Test4759934::test)\n+                .build()\n+                .awaitAndCheck();\n@@ -70,1 +88,7 @@\n-    private void show(Window window, String command) {\n+    public static JFrame test() {\n+        frame = new JFrame(\"ColorChooser dialog on button press test\");\n+        show(frame, CMD_DIALOG, false);\n+        return frame;\n+    }\n+\n+    private static void show(Window window, String command, boolean setVisible) {\n@@ -73,1 +97,2 @@\n-        button.addActionListener(this);\n+        button.addActionListener(al);\n+\n@@ -78,1 +103,3 @@\n-        window.setVisible(true);\n+        if (setVisible) {\n+            window.setVisible(true);\n+        }\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4759934.java","additions":58,"deletions":31,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -0,0 +1,130 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4765272\n+ * @summary REGRESSION: IAE: focusCycleRoot not focus cyle root of a Component\n+ * @key headful\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.FlowLayout;\n+import java.awt.FocusTraversalPolicy;\n+import java.awt.Robot;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4765272 {\n+    static boolean focusGained = false;\n+    static JFrame f;\n+    static JButton bt1;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"bug4765272\");\n+                bt1 = new JButton(\"Button 1\");\n+                JButton bt2 = new JButton(\"Button 2\");\n+\n+                JPanel p = new JPanel();\n+                p.setLayout(new FlowLayout());\n+                p.add(bt1);\n+                p.add(bt2);\n+                f.getContentPane().add(p);\n+\n+                FocusTraversalPolicy policy = new FocusTraversalPolicy() {\n+                    @Override\n+                    public Component getComponentAfter(Container aContainer, Component aComponent) {\n+                        if (aComponent == bt1) {\n+                            return bt2;\n+                        }\n+                        return bt1;\n+                    }\n+\n+                    @Override\n+                    public Component getComponentBefore(Container aContainer, Component aComponent) {\n+                        if (aComponent == bt1) {\n+                            return bt2;\n+                        }\n+                        return bt1;\n+                    }\n+\n+                    @Override\n+                    public Component getFirstComponent(Container aContainer) {\n+                        return bt1;\n+                    }\n+\n+                    @Override\n+                    public Component getLastComponent(Container aContainer) {\n+                        return bt2;\n+                    }\n+\n+                    @Override\n+                    public Component getDefaultComponent(Container aContainer) {\n+                        return bt1;\n+                    }\n+                };\n+\n+                bt1.addFocusListener(new FocusAdapter() {\n+                    public void focusGained(FocusEvent e) {\n+                        p.removeAll();\n+                        synchronized (this) {\n+                            focusGained = true;\n+                            this.notifyAll();\n+                        }\n+                    }\n+                });\n+\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+            });\n+\n+            Robot r = new Robot();\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                bt1.requestFocus();\n+                try {\n+                    if (!focusGained) {\n+                        Thread.sleep(5000);\n+                    }\n+                } catch (Exception ex) {\n+                    ex.printStackTrace();\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComponent\/bug4765272.java","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4979794\n+ * @summary A component is sometimes the next component for itself in focus policy.\n+ * @key headful\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.FocusTraversalPolicy;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4979794 {\n+    static JFrame fr;\n+    static JButton btn1;\n+    static JButton btn2;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4979794\");\n+                fr.getContentPane().setLayout(null);\n+\n+                JPanel p = new JPanel();\n+                p.setLayout(null);\n+                fr.getContentPane().add(p);\n+\n+                btn1 = new JButton(\"Button 1\");\n+                btn1.setBounds(0, 0, 200, 200);\n+\n+                btn2 = new JButton(\"Button 2\");\n+                btn2.setBounds(0, 0, 200, 200);\n+\n+                p.add(btn1);\n+                p.add(btn2);\n+                p.setSize(200, 200);\n+\n+                fr.setLocationRelativeTo(null);\n+                fr.setSize(300, 300);\n+                fr.setVisible(true);\n+            });\n+\n+            Robot r = new Robot();\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                Container root = btn1.getFocusCycleRootAncestor();\n+                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();\n+                Component next1 = policy.getComponentAfter(fr, btn1);\n+                Component next2 = policy.getComponentAfter(fr, btn2);\n+                if (next1 == next2) {\n+                    throw new RuntimeException(\"btn1 and btn2 have the same next Component.\");\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComponent\/bug4979794.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,2 @@\n-\/* @test\n+\/*\n+ * @test\n@@ -30,2 +31,0 @@\n- * @author Mikhail Lapshin\n- * @library \/lib\/client\/\n@@ -33,1 +32,0 @@\n- * @build ExtendedRobot\n@@ -37,2 +35,11 @@\n-import javax.swing.*;\n-import java.awt.*;\n+import java.awt.Robot;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+import com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel;\n+import com.sun.java.swing.plaf.windows.WindowsInternalFrameTitlePane;\n@@ -43,3 +50,3 @@\n-    private TestTitlePane testTitlePane;\n-    private boolean passed;\n-    private static ExtendedRobot robot = createRobot();\n+    private static TestTitlePane testTitlePane;\n+    private static volatile boolean passed;\n+    private static Robot robot;\n@@ -48,7 +55,2 @@\n-        try {\n-            UIManager.setLookAndFeel(\n-                    new com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel());\n-        } catch(UnsupportedLookAndFeelException e) {\n-            System.out.println(\"The test is for Windows LaF only\");\n-            return;\n-        }\n+        UIManager.setLookAndFeel(\n+                new WindowsClassicLookAndFeel());\n@@ -56,0 +58,1 @@\n+        robot = new Robot();\n@@ -58,5 +61,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    bug6725409.setupUIStep1();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug6725409::setupUIStep1);\n@@ -64,5 +63,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    bug6725409.setupUIStep2();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug6725409::setupUIStep2);\n@@ -70,5 +65,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    bug6725409.test();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug6725409::test);\n@@ -78,3 +69,5 @@\n-            if (bug6725409.frame != null) {\n-                bug6725409.frame.dispose();\n-            }\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (bug6725409.frame != null) {\n+                    bug6725409.frame.dispose();\n+                }\n+            });\n@@ -85,1 +78,1 @@\n-        frame = new JFrame();\n+        frame = new JFrame(\"bug6725409\");\n@@ -150,9 +143,0 @@\n-    private static ExtendedRobot createRobot() {\n-        try {\n-             ExtendedRobot robot = new ExtendedRobot();\n-             return robot;\n-         }catch(Exception ex) {\n-             ex.printStackTrace();\n-             throw new Error(\"Unexpected Failure\");\n-         }\n-    }\n@@ -161,2 +145,1 @@\n-    private class TestTitlePane extends\n-            com.sun.java.swing.plaf.windows.WindowsInternalFrameTitlePane {\n+    private class TestTitlePane extends WindowsInternalFrameTitlePane {\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/6725409\/bug6725409.java","additions":30,"deletions":47,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4907772\n+ * @summary 1.4 REGRESSION: JPanel responds to mouse clicks on overlapping JPanel\n+ * @key headful\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.FocusTraversalPolicy;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4907772 {\n+    static JFrame fr;\n+    static JButton btn1;\n+    static JButton btn2;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4907772\");\n+                fr.getContentPane().setLayout(null);\n+\n+                JPanel p = new JPanel();\n+                p.setLayout(null);\n+                fr.getContentPane().add(p);\n+\n+                btn1 = new JButton(\"Button 1\");\n+                btn1.setBounds(0, 0, 200, 200);\n+\n+                btn2 = new JButton(\"Button 2\");\n+                btn2.setBounds(0, 0, 200, 200);\n+\n+                p.add(btn1);\n+                p.add(btn2);\n+\n+                fr.setLocationRelativeTo(null);\n+                fr.pack();\n+                fr.setVisible(true);\n+            });\n+\n+            Robot r = new Robot();\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                Container root = btn1.getFocusCycleRootAncestor();\n+                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();\n+                Component initial = policy.getInitialComponent(fr);\n+                if (initial == btn2) {\n+                    throw new RuntimeException(\"The underlying button shouldn't be the initial component of FCR\");\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPanel\/bug4907772.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4138694\n+ * @summary When adding an Action object to a toolbar, the Action object's\n+ * SHORT_DESCRIPTION property (if present) should be automatically used\n+ * for toolTip text.\n+ * @run main bug4138694\n+ *\/\n+\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.JComponent;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4138694 {\n+    public static final String actionName = \"Action\";\n+\n+    private static class MyAction extends AbstractAction {\n+        public void actionPerformed(ActionEvent e) {}\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JToolBar jtb = new JToolBar();\n+            MyAction aa = new MyAction();\n+            aa.putValue(Action.SHORT_DESCRIPTION, actionName);\n+            jtb.add(aa);\n+            JComponent c = (JComponent)jtb.getComponentAtIndex(0);\n+            if (!c.getToolTipText().equals(actionName)) {\n+                throw new RuntimeException(\"ToolTip not set automatically...\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4138694.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4140421\n+ * @summary Tests JToolBar set title correctly\n+ * @run main bug4140421\n+ *\/\n+\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4140421 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JToolBar tb = new JToolBar(\"MyToolBar\");\n+            if (!tb.getName().equals(\"MyToolBar\")) {\n+                throw new RuntimeException(\"Title of JToolBar set incorrectly...\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4140421.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4196662\n+ * @summary JToolBar has remove(int) method.\n+ * @run main bug4196662\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4196662 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JToolBar tb = new JToolBar();\n+            tb.add(new JButton(\"Button1\"));\n+            JButton bt2 = new JButton(\"Button2\");\n+            tb.add(bt2);\n+            tb.add(new JButton(\"Button3\"));\n+            tb.remove(1);\n+            if (tb.getComponentCount() != 2 || tb.getComponent(1) == bt2) {\n+                throw new RuntimeException(\"Component wasn't removed...\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4196662.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4243930\n+ * @summary Tests that JToolBar.remove() does not throw StackOverflowError\n+ * @run main bug4243930\n+ *\/\n+\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.JButton;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4243930 {\n+\n+    private static class NullAction extends AbstractAction {\n+        public void actionPerformed(ActionEvent e){}\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JToolBar tb = new JToolBar();\n+            JButton test = tb.add(new NullAction());\n+            tb.remove(test);\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4243930.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4368050\n+ * @summary Default toolbar layout manager should be serializable.\n+ * @run main bug4368050\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+\n+import javax.swing.JToolBar;\n+\n+public class bug4368050 {\n+    public static void main(String[] args) throws Exception {\n+        JToolBar toolBar = new JToolBar();\n+\n+        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+             ObjectOutputStream oos = new ObjectOutputStream(baos)) {\n+            oos.writeObject(toolBar);\n+            byte[] buf = baos.toByteArray();\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(buf);\n+                 ObjectInputStream ois = new ObjectInputStream(bais)) {\n+                ois.readObject();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4368050.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4465534\n+ * @summary Tests adding borderless button to a toolbar\n+ * @run main bug4465534\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4465534 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JToolBar toolbar = new JToolBar();\n+            JButton button = new JButton(\"text\");\n+            button.setBorder(null);\n+            toolbar.add(button);\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4465534.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4700351\n+ * @summary Checks if JToolBar keeps orientation when dragged off\n+ * @key headful\n+ * @run main bug4700351\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+import javax.swing.plaf.basic.BasicToolBarUI;\n+\n+public class bug4700351 {\n+    static JFrame fr;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4700351\");\n+                JToolBar tb = new JToolBar();\n+                tb.setOrientation(JToolBar.VERTICAL);\n+                fr.add(tb);\n+                BasicToolBarUI ui = (javax.swing.plaf.basic.BasicToolBarUI) tb.getUI();\n+                if (!ui.isFloating()) {\n+                    ui.setFloatingLocation(100, 100);\n+                    ui.setFloating(true, tb.getLocation());\n+                }\n+                if (tb.getOrientation() != JToolBar.VERTICAL) {\n+                    throw new RuntimeException(\"Error: toolbar's orientation \" +\n+                            \"has changed\");\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4700351.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4107843\n+ * @summary ToolTipText for JTabbedPane.\n+ * @run main bug4107843\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4107843 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JTabbedPane tp = new JTabbedPane();\n+            tp.add(\"First\", new JButton(\"Button1\"));\n+            tp.add(\"Second\", new JButton(\"Button2\"));\n+            tp.setToolTipTextAt(0, \"first button\");\n+            if (!tp.getToolTipTextAt(0).equals(\"first button\")) {\n+                throw new RuntimeException(\"ToolTipText isn't set \" +\n+                        \"as expected...\");\n+            }\n+            tp.setToolTipTextAt(1, \"second button\");\n+            if (!tp.getToolTipTextAt(1).equals(\"second button\")) {\n+                throw new RuntimeException(\"ToolTipText isn't set \" +\n+                        \"as expected...\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/bug4107843.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4161685\n+ * @summary JTree now has the public methods setAnchorSelectionPath,\n+ * getAnchorSelectionPath, setLeadSelectionPath.\n+ * @run main bug4161685\n+ *\/\n+\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.tree.TreePath;\n+\n+public class bug4161685 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JTree tr = new JTree();\n+            TreePath tp = tr.getPathForRow(2);\n+            tr.setAnchorSelectionPath(tp);\n+            if (tr.getAnchorSelectionPath() != tp) {\n+                throw new RuntimeException(\"AnchorSelectionPath isn't \" +\n+                        \"set correctly...\");\n+            }\n+            tr.setLeadSelectionPath(tp);\n+            if (tr.getLeadSelectionPath() != tp) {\n+                throw new RuntimeException(\"LeadSelectionPath isn't \" +\n+                        \"set correctly...\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4161685.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4210432\n+ * @summary Tests if JTree allows nodes not visible to be selected\n+ * @run main bug4210432\n+ *\/\n+\n+import javax.swing.JPanel;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+\n+public class bug4210432 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JPanel p = new JPanel();\n+            DefaultMutableTreeNode expansible =\n+                    new DefaultMutableTreeNode(\"expansible\");\n+            DefaultMutableTreeNode unexpansible =\n+                    new DefaultMutableTreeNode(\"unexpansible\");\n+            DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"root\");\n+            DefaultMutableTreeNode subexpansible1 =\n+                    new DefaultMutableTreeNode(\"sub-expansible 1\");\n+            DefaultMutableTreeNode subexpansible2 =\n+                    new DefaultMutableTreeNode(\"sub-expansible 2\");\n+            DefaultMutableTreeNode subsubexpansible1 =\n+                    new DefaultMutableTreeNode(\"sub-sub-expansible 1\");\n+            DefaultMutableTreeNode subsubexpansible2 =\n+                    new DefaultMutableTreeNode(\"sub-sub-expansible 2\");\n+            expansible.add(subexpansible1);\n+            expansible.add(subexpansible2);\n+            subexpansible1.add(subsubexpansible1);\n+            subexpansible1.add(subsubexpansible2);\n+            root.add(expansible);\n+            root.add(unexpansible);\n+            DefaultTreeModel model = new DefaultTreeModel(root);\n+            JTree t = new JTree(model);\n+            Object[] tpa = {root, expansible, subexpansible1};\n+            Object[] tpa2 = {root, expansible};\n+            t.setExpandsSelectedPaths(false);\n+            t.setSelectionPath(new TreePath(tpa));\n+            p.add(t);\n+            if (t.isExpanded(new TreePath(tpa2))) {\n+                throw new RuntimeException(\"Test failed: JTree should not have \" +\n+                        \"expanded path\");\n+            }\n+            t.clearSelection();\n+            t.setExpandsSelectedPaths(true);\n+            t.setSelectionPath(new TreePath(tpa));\n+            if (!t.isExpanded(new TreePath(tpa2))) {\n+                throw new RuntimeException(\"Test failed: JTree should have \" +\n+                        \"expanded path\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4210432.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4213868\n+ * @summary Tests if AccessibleJTreeNode.getAccessibleIndexInParent() returns\n+ * correct value\n+ * @run main bug4213868\n+ *\/\n+\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+\n+public class bug4213868 {\n+    public static JTree createTree() {\n+        DefaultMutableTreeNode root =\n+                new DefaultMutableTreeNode(0, true);\n+        JTree tree = new JTree(root);\n+        for (int i = 1; i < 10; i++) {\n+            root.add(new DefaultMutableTreeNode(i));\n+        }\n+        return tree;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JTree parent = createTree();\n+            AccessibleContext c = parent.getAccessibleContext()\n+                                        .getAccessibleChild(0)\n+                                        .getAccessibleContext();\n+            if (c.getAccessibleChild(1)\n+                 .getAccessibleContext()\n+                 .getAccessibleIndexInParent() != 1) {\n+                throw new RuntimeException(\"Test failed: \" +\n+                        \"AccessibleJTreeNode.getAccessibleIndexInParent() \" +\n+                        \"returns incorrect value\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4213868.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4224491\n+ * @summary Tests if JTree's model & invokesStopCellEditing bound properties\n+ * are working\n+ * @run main bug4224491\n+ *\/\n+\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+\n+public class bug4224491 {\n+    private static boolean modelChanged = false;\n+    private static boolean invokesStopCellEditingChanged = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n+            JTree jt = new JTree(new DefaultTreeModel(root));\n+            jt.addPropertyChangeListener(evt -> {\n+                if (evt.getPropertyName().equals(\"model\")) {\n+                    modelChanged = true;\n+                }\n+                if (evt.getPropertyName().equals(\"invokesStopCellEditing\")) {\n+                    invokesStopCellEditingChanged = true;\n+                }\n+            });\n+            jt.setModel(new DefaultTreeModel(root));\n+            jt.setInvokesStopCellEditing(true);\n+            if (!(modelChanged && invokesStopCellEditingChanged)) {\n+                throw new RuntimeException(\"Test failed: JTree's model \" +\n+                        \"& invokesStopCellEditing bound properties \" +\n+                        \"are not working\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4224491.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4237370\n+ * @summary Tests that JTree calls TreeExpansionListener methods\n+ *          after it has been updated due to expanded\/collapsed event\n+ * @run main bug4237370\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.TreeExpansionEvent;\n+import javax.swing.event.TreeExpansionListener;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreeModel;\n+\n+public class bug4237370 {\n+    static class TestTree extends JTree implements TreeExpansionListener {\n+        int[] testMap = {1, 2};\n+        int testIndex = 0;\n+\n+        private void testRowCount() {\n+            int rows = getRowCount();\n+            if (rows != testMap[testIndex]) {\n+                throw new RuntimeException(\"Bad row count: reported \" + rows +\n+                                \" instead of \" + testMap[testIndex]);\n+            } else {\n+                testIndex++;\n+            }\n+        }\n+\n+        public void treeExpanded(TreeExpansionEvent e) {\n+            testRowCount();\n+        }\n+\n+        public void treeCollapsed(TreeExpansionEvent e) {\n+            testRowCount();\n+        }\n+\n+        public TestTree() {\n+            super((TreeModel)null);\n+            DefaultMutableTreeNode top = new DefaultMutableTreeNode(\"Root\");\n+            top.add(new DefaultMutableTreeNode(\"Sub 1\"));\n+            setModel(new DefaultTreeModel(top));\n+            addTreeExpansionListener(this);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            TestTree tree = new TestTree();\n+            tree.collapseRow(0);\n+            tree.expandRow(0);\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4237370.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4662505\n+ * @summary IllegalArgumentException with empty JTree and key event\n+ * @run main bug4662505\n+ *\/\n+\n+import java.awt.event.KeyEvent;\n+import java.util.Date;\n+\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4662505 {\n+    static DummyTree tree;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            tree = new DummyTree();\n+\n+            try {\n+                tree.doTest();\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Empty JTree shouldn't handle \" +\n+                        \"first letter navigation\", e);\n+            }\n+        });\n+    }\n+\n+    static class DummyTree extends JTree {\n+        public DummyTree() {\n+            super(new Object[]{});\n+        }\n+\n+        public void doTest() {\n+            KeyEvent key = new KeyEvent(tree, KeyEvent.KEY_TYPED,\n+                    new Date().getTime(), 0, KeyEvent.VK_UNDEFINED, 'a');\n+            processKeyEvent(key);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4662505.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4696499\n+ * @summary new tree model asked about nodes of previous tree model\n+ * @run main bug4696499\n+ *\/\n+\n+import java.util.ArrayList;\n+\n+import javax.swing.JTree;\n+import javax.swing.event.TreeModelListener;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.TreeModel;\n+import javax.swing.tree.TreeNode;\n+import javax.swing.tree.TreePath;\n+\n+public class bug4696499 {\n+    public static void main(String[] args) throws Exception {\n+        JTree tree = new JTree();\n+        TreeModel model = new MyModel();\n+        tree.setModel(model);\n+\n+        tree.setSelectionRow(1);\n+        model = new MyModel();\n+        tree.setModel(model);\n+    }\n+}\n+\n+class MyModel implements TreeModel {\n+    private Object root = \"Root\";\n+    private ArrayList listeners = new ArrayList();\n+    private TreeNode ONE;\n+    static int next = 1;\n+\n+    MyModel() {\n+        ONE = new DefaultMutableTreeNode(next);\n+        next *= 2;\n+    }\n+\n+    public void addTreeModelListener(TreeModelListener l) {\n+        listeners.add(l);\n+    }\n+\n+    public void removeTreeModelListener(TreeModelListener l) {\n+        listeners.remove(l);\n+    }\n+\n+    public void valueForPathChanged(TreePath tp, Object newValue) {\n+    }\n+\n+    public Object getRoot() {\n+        return root;\n+    }\n+\n+    public boolean isLeaf(Object o) {\n+        return o == ONE;\n+    }\n+\n+    public int getIndexOfChild(Object parent, Object child) {\n+        if (parent != root || child != ONE) {\n+            throw new RuntimeException(\"This method is called with the child \" +\n+                    \"of the previous tree model\");\n+        }\n+        return 0;\n+    }\n+\n+    public int getChildCount(Object o) {\n+        if (o == root) {\n+            return 1;\n+        }\n+        if (o == ONE) {\n+            return 0;\n+        }\n+        throw new IllegalArgumentException(o.toString());\n+    }\n+\n+    public Object getChild(Object o, int index) {\n+        if (o != root || index != 0) {\n+            throw new IllegalArgumentException(o + \", \" + index);\n+        }\n+        return ONE;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4696499.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 5039542\n+ * @summary JTree's setToolTipText() doesn't work\n+ * @run main bug5039542\n+ *\/\n+\n+import javax.swing.JTree;\n+\n+public class bug5039542 {\n+    public static void main(String[] args) throws Exception {\n+        final String exampleStr = \"TEST\";\n+        JTree tree = new JTree();\n+        tree.setToolTipText(exampleStr);\n+        if (tree.getToolTipText(null) != exampleStr) {\n+            throw new RuntimeException(\"The default JTree tooltip text \" +\n+                    \"have to be used if renderer doesn't provide it.\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug5039542.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4546474\n+ * @summary JScrollPane's always-visible scrollbars not updated when\n+ * viewport is replaced\n+ * @run main bug4546474\n+ *\/\n+\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+\n+public class bug4546474 {\n+    public static void main(String[] args) {\n+        JPanel panel = new JPanel();\n+        JScrollPane scrollpane = new JScrollPane(panel,\n+                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,\n+                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+        JScrollBar sbar = scrollpane.getVerticalScrollBar();\n+\n+        scrollpane.setViewportView(null);\n+\n+        if (sbar.getVisibleAmount() > 0) {\n+            throw new RuntimeException(\"Vertical scrollbar is not \" +\n+                    \"updated when viewport is replaced\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JViewport\/bug4546474.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4677611\n+ * @summary JViewport sets Opaque after UpdateUI (prevents UI delegates\n+ * to determine look)\n+ * @run main bug4677611\n+ *\/\n+\n+import java.awt.Color;\n+\n+import javax.swing.JScrollPane;\n+import javax.swing.JViewport;\n+\n+public class bug4677611 {\n+    public static void main(String[] args) throws Exception {\n+        JScrollPane sp = new JScrollPane();\n+        JViewport vp = new MyViewport();\n+        vp.setBackground(Color.blue);\n+        sp.setViewport(vp);\n+\n+        if (vp.isOpaque()) {\n+            throw new RuntimeException(\"JViewport shouldn't set Opaque \" +\n+                    \"after update the UI\");\n+        }\n+    }\n+\n+    static class MyViewport extends JViewport {\n+        public void updateUI() {\n+            setOpaque(false);\n+            super.updateUI();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JViewport\/bug4677611.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4345798\n+ * @summary Tests if Pressing enter to dismiss menu works when a JRootPane\n+ * has a default button.\n+ * @key headful\n+ * @run main bug4345798\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JRootPane;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4345798 {\n+    private static JFrame f;\n+    private static JButton b;\n+    private static JMenu menu;\n+    private static volatile boolean passed = true;\n+    private static volatile Point p;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"bug4345798\");\n+                JMenuBar mbar = new JMenuBar();\n+                JMenuItem item = new JMenuItem(\"Open...\");\n+                menu = new JMenu(\"File\");\n+                item.addActionListener(new TestActionListener());\n+                menu.add(item);\n+                mbar.add(menu);\n+\n+                f.setJMenuBar(mbar);\n+\n+                b = new JButton(\"Default\");\n+                b.addActionListener(new TestActionListener());\n+                f.getContentPane().add(b);\n+                JRootPane rp = f.getRootPane();\n+                rp.setDefaultButton(b);\n+\n+                f.setSize(200, 200);\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+                b.requestFocus();\n+            });\n+\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> p = menu.getLocationOnScreen());\n+            robot.mouseMove(p.x, p.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            robot.keyPress(KeyEvent.VK_F10);\n+            robot.keyRelease(KeyEvent.VK_F10);\n+\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+\n+        if (!passed) {\n+            throw new RuntimeException(\"Test failed.\");\n+        }\n+    }\n+\n+    static class TestActionListener implements ActionListener {\n+        @Override\n+        public void actionPerformed(ActionEvent e) {\n+            if (e.getSource() == b) {\n+                passed = false;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/KeyboardManager\/bug4345798.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4753342\n+ * @key headful\n+ * @summary Makes sure add\/remove\/setLayout redirect to the contentpane\n+ *\/\n+\n+import java.awt.Container;\n+import java.awt.GridLayout;\n+import java.awt.LayoutManager;\n+import javax.swing.JButton;\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JWindow;\n+import javax.swing.RootPaneContainer;\n+import javax.swing.SwingUtilities;\n+\n+public class RootPaneChecking {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+                MyJFrame frame = new MyJFrame();\n+                frame.setTitle(\"RootPaneChecking\");\n+                checkRootPaneCheckingEnabled(frame);\n+                frame.setRootPaneCheckingEnabled(false);\n+                checkRootPaneCheckingDisabled(frame);\n+\n+                MyJWindow window = new MyJWindow();\n+                checkRootPaneCheckingEnabled(window);\n+                window.setRootPaneCheckingEnabled(false);\n+                checkRootPaneCheckingDisabled(window);\n+\n+                MyJDialog dialog = new MyJDialog();\n+                checkRootPaneCheckingEnabled(dialog);\n+                dialog.setRootPaneCheckingEnabled(false);\n+                checkRootPaneCheckingDisabled(dialog);\n+\n+                MyJInternalFrame iframe = new MyJInternalFrame();\n+                checkRootPaneCheckingEnabled(iframe);\n+                iframe.setRootPaneCheckingEnabled(false);\n+                checkRootPaneCheckingDisabled(iframe);\n+        });\n+    }\n+\n+    private static void checkRootPaneCheckingEnabled(RootPaneContainer rpc) {\n+        Container parent = (Container) rpc;\n+        Container cp = rpc.getContentPane();\n+        \/\/ Test add\n+        JButton button = new JButton(\"RootPaneChecking\");\n+        parent.add(button);\n+        if (button.getParent() != cp) {\n+            throw new RuntimeException(\"Add parent mismatch, want: \" +\n+                    cp + \" got \" + button.getParent());\n+        }\n+\n+        \/\/ Test remove\n+        parent.remove(button);\n+        if (button.getParent() != null) {\n+            throw new RuntimeException(\"Remove mismatch, want null got \" +\n+                    button.getParent());\n+        }\n+\n+        \/\/ Test setLayout\n+        LayoutManager manager = new GridLayout();\n+        parent.setLayout(manager);\n+        if (manager != cp.getLayout()) {\n+            throw new RuntimeException(\"LayoutManager mismatch, want: \" +\n+                    manager + \" got \" + cp.getLayout());\n+        }\n+    }\n+\n+    private static void checkRootPaneCheckingDisabled(RootPaneContainer rpc) {\n+        Container parent = (Container) rpc;\n+        Container cp = rpc.getContentPane();\n+\n+        \/\/ Test add\n+        JButton button = new JButton(\"RootPaneChecking\");\n+        parent.add(button);\n+        if (button.getParent() != parent) {\n+            throw new RuntimeException(\"Add parent mismatch, want: \" +\n+                    parent + \" got \" + button.getParent());\n+        }\n+\n+        \/\/ Test setLayout\n+        LayoutManager manager = new GridLayout();\n+        parent.setLayout(manager);\n+        if (manager != parent.getLayout()) {\n+            throw new RuntimeException(\"LayoutManager mismatch, want: \" +\n+                    manager + \" got \" + cp.getLayout());\n+        }\n+    }\n+\n+    static class MyJFrame extends JFrame {\n+        public void setRootPaneCheckingEnabled(boolean x) {\n+            super.setRootPaneCheckingEnabled(x);\n+        }\n+    }\n+\n+    static class MyJWindow extends JWindow {\n+        public void setRootPaneCheckingEnabled(boolean x) {\n+            super.setRootPaneCheckingEnabled(x);\n+        }\n+    }\n+\n+    static class MyJDialog extends JDialog {\n+        public void setRootPaneCheckingEnabled(boolean x) {\n+            super.setRootPaneCheckingEnabled(x);\n+        }\n+    }\n+\n+    static class MyJInternalFrame extends JInternalFrame {\n+        public void setRootPaneCheckingEnabled(boolean x) {\n+            super.setRootPaneCheckingEnabled(x);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/RootPaneChecking\/RootPaneChecking.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import javax.swing.JApplet;\n@@ -45,2 +44,0 @@\n- *\n- * @author Jeff Dinkins\n@@ -48,1 +45,1 @@\n-public class DemoModule extends JApplet {\n+public class DemoModule extends JPanel {\n@@ -217,5 +214,0 @@\n-    public void init() {\n-        getContentPane().setLayout(new BorderLayout());\n-        getContentPane().add(getDemoPanel(), BorderLayout.CENTER);\n-    }\n-\n@@ -223,1 +215,2 @@\n-}\n\\ No newline at end of file\n+}\n+\n","filename":"test\/jdk\/sanity\/client\/lib\/SwingSet2\/src\/DemoModule.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -638,2 +638,2 @@\n-                    new CATestURLs(\"https:\/\/good.gsr4.demo.pki.goog\",\n-                    \"https:\/\/revoked.gsr4.demo.pki.goog\");\n+                    new CATestURLs(\"https:\/\/good.gsr4.demosite.pki.goog\",\n+                    \"https:\/\/revoked.gsr4.demosite.pki.goog\");\n@@ -641,2 +641,2 @@\n-                    new CATestURLs(\"https:\/\/good.gtsr1.demo.pki.goog\",\n-                    \"https:\/\/revoked.gtsr1.demo.pki.goog\");\n+                    new CATestURLs(\"https:\/\/good.gtsr1.demosite.pki.goog\",\n+                    \"https:\/\/revoked.gtsr1.demosite.pki.goog\");\n@@ -644,2 +644,2 @@\n-                    new CATestURLs(\"https:\/\/good.gtsr2.demo.pki.goog\",\n-                    \"https:\/\/revoked.gtsr2.demo.pki.goog\");\n+                    new CATestURLs(\"https:\/\/good.gtsr2.demosite.pki.goog\",\n+                    \"https:\/\/revoked.gtsr2.demosite.pki.goog\");\n@@ -647,2 +647,2 @@\n-                    new CATestURLs(\"https:\/\/good.gtsr3.demo.pki.goog\",\n-                    \"https:\/\/revoked.gtsr3.demo.pki.goog\");\n+                    new CATestURLs(\"https:\/\/good.gtsr3.demosite.pki.goog\",\n+                    \"https:\/\/revoked.gtsr3.demosite.pki.goog\");\n@@ -650,2 +650,2 @@\n-                    new CATestURLs(\"https:\/\/good.gtsr4.demo.pki.goog\",\n-                    \"https:\/\/revoked.gtsr4.demo.pki.goog\");\n+                    new CATestURLs(\"https:\/\/good.gtsr4.demosite.pki.goog\",\n+                    \"https:\/\/revoked.gtsr4.demosite.pki.goog\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CAInterop.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4532352\n+ * @summary This test verifies that the specified background color is rendered\n+ *          in the special case of:\n+ *          Graphics.drawImage(Image img, int dx1, int dy1, int dx2, int dy2,\n+ *                             int sx1, int sy1, int sx2, int sy2,\n+ *                             Color bgColor, ImageObserver observer)\n+ *          where no scaling takes place because the source and destination\n+ *          bounds have the same width and height.\n+ *\/\n+\n+import java.io.File;\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+\n+public class DrawImageBgTest {\n+\n+    public static void main(String argv[]) throws Exception {\n+\n+        int dx, dy, dw, dh;\n+        int sx, sy, sw, sh;\n+\n+        int iw = 250, ih = 250;\n+        String sep = System.getProperty(\"file.separator\");\n+        String dir = System.getProperty(\"test.src\", \".\");\n+        String prefix = dir+sep;\n+        BufferedImage img = ImageIO.read(new File(prefix + \"duke.gif\"));\n+        BufferedImage dest = new BufferedImage(iw, ih, BufferedImage.TYPE_INT_RGB);\n+\n+        Graphics2D g = dest.createGraphics();\n+        g.setColor(Color.blue);\n+        g.fillRect(0, 0, iw, ih);\n+\n+        \/\/ source and destination dimensions are different, results in scaling\n+        dx = 10;\n+        dy = 10;\n+        dw = 100;\n+        dh = 200;\n+        sx = 10;\n+        sy = 10;\n+        sw = 50;\n+        sh = 100;\n+        g.drawImage(img,\n+                    dx, dy, dx + dw, dy + dh,\n+                    sx, sy, sx + sw, sy + sh,\n+                    Color.yellow, null);\n+\n+        int pix1 = dest.getRGB(dx + 1, dy + 1);\n+\n+        \/\/ source and destination dimensions are the same, no scaling\n+        dx = 120;\n+        dy = 10;\n+        sx = 10;\n+        sy = 10;\n+        sw = dw = 50;\n+        sh = dh = 100;\n+        g.drawImage(img,\n+                    dx, dy, dx + dw, dy + dh,\n+                    sx, sy, sx + sw, sy + sh,\n+                    Color.yellow, null);\n+\n+        int pix2 = dest.getRGB(dx + 1, dy + 1);\n+        int yellow = Color.yellow.getRGB();\n+\n+        if (pix1 != yellow || pix2 != yellow) {\n+            ImageIO.write(dest, \"gif\", new File(\"op.gif\"));\n+            throw new RuntimeException(\"pix1=\" + Integer.toHexString(pix1) +\n+                                       \" pix2=\" + Integer.toHexString(pix2));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/java2d\/pipe\/DrawImageBgTest.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"","filename":"test\/jdk\/sun\/java2d\/pipe\/duke.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/awt\/image\/VolatileImage\/duke.gif","status":"copied"},{"patch":"@@ -57,0 +57,1 @@\n+import java.util.stream.Collectors;\n@@ -63,0 +64,1 @@\n+import jdk.test.lib.Utils;\n@@ -489,2 +491,1 @@\n-        String base = getBase();\n-\n+        String nssConfigDir = copyNssFiles();\n@@ -496,1 +497,1 @@\n-                base + SEP + \"nss\" + SEP + \"db\";\n+                nssConfigDir + SEP + \"db\";\n@@ -506,1 +507,1 @@\n-                base + SEP + \"nss\" + SEP + customConfigName;\n+                nssConfigDir + SEP + customConfigName;\n@@ -789,0 +790,25 @@\n+    \/\/Copy the nss config files to the current directory for tests. Returns the destination path\n+    private static String copyNssFiles() throws Exception {\n+        String nss = \"nss\";\n+        String db = \"db\";\n+        Path nssDirSource = Path.of(getBase()).resolve(nss);\n+        Path nssDirDestination = Path.of(\".\").resolve(nss);\n+\n+        \/\/ copy files from nss directory\n+        copyFiles(nssDirSource, nssDirDestination);\n+        \/\/ copy files from nss\/db directory\n+        copyFiles(nssDirSource.resolve(db), nssDirDestination.resolve(db));\n+        return nssDirDestination.toString();\n+    }\n+\n+    private static void copyFiles(Path dirSource, Path dirDestination) throws IOException {\n+        List<Path> sourceFiles = Arrays\n+                .stream(dirSource.toFile().listFiles())\n+                .filter(File::isFile)\n+                .map(File::toPath)\n+                .collect(Collectors.toList());\n+        List<Path> destFiles = Utils.copyFiles(sourceFiles, dirDestination,\n+                StandardCopyOption.REPLACE_EXISTING);\n+        destFiles.forEach((Path file) -> file.toFile().setWritable(true));\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":30,"deletions":4,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#        jdk.test.lib.Utils\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.sh","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,14 @@\n+name = NSS\n+\n+showInfo = true\n+\n+slot = 1\n+\n+library = ${pkcs11test.nss.lib}\n+\n+disabledMechanisms = {\n+    CKM_SHA224_HMAC\n+    CKM_SHA256_HMAC\n+}\n+\n+nssArgs = \"configdir='${pkcs11test.nss.db}' certPrefix='' keyPrefix=''\"\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/RequiredMechCheck.cfg","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8335288\n+ * @library \/test\/lib ..\n+ * @modules jdk.crypto.cryptoki\n+ * @summary check that if any required mech is unavailable, then the\n+ * mechanism will be unavailable as well.\n+ * @run testng\/othervm RequiredMechCheck\n+ *\/\n+import java.nio.file.Path;\n+import java.security.Provider;\n+import java.security.NoSuchAlgorithmException;\n+import javax.crypto.Cipher;\n+import javax.crypto.Mac;\n+import javax.crypto.SecretKeyFactory;\n+\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+public class RequiredMechCheck extends PKCS11Test {\n+\n+    private static record TestData(String serviceType, String algo,\n+            boolean disabled) {}\n+\n+    private static TestData[] testValues = {\n+        new TestData(\"MAC\", \"HmacPBESHA1\", false),\n+        new TestData(\"MAC\", \"HmacPBESHA224\", true),\n+        new TestData(\"MAC\", \"HmacPBESHA256\", true),\n+        new TestData(\"MAC\", \"HmacPBESHA384\", false),\n+        new TestData(\"MAC\", \"HmacPBESHA512\", false),\n+        new TestData(\"SKF\", \"PBEWithHmacSHA1AndAES_128\", false),\n+        new TestData(\"SKF\", \"PBEWithHmacSHA224AndAES_128\", true),\n+        new TestData(\"SKF\", \"PBEWithHmacSHA256AndAES_128\", true),\n+        new TestData(\"SKF\", \"PBEWithHmacSHA384AndAES_128\", false),\n+        new TestData(\"SKF\", \"PBEWithHmacSHA512AndAES_128\", false),\n+        new TestData(\"CIP\", \"PBEWithHmacSHA1AndAES_128\", false),\n+        new TestData(\"CIP\", \"PBEWithHmacSHA224AndAES_128\", true),\n+        new TestData(\"CIP\", \"PBEWithHmacSHA256AndAES_128\", true),\n+        new TestData(\"CIP\", \"PBEWithHmacSHA384AndAES_128\", false),\n+        new TestData(\"CIP\", \"PBEWithHmacSHA512AndAES_128\", false),\n+    };\n+\n+    @BeforeClass\n+    public void setUp() throws Exception {\n+        Path configPath = Path.of(BASE).resolve(\"RequiredMechCheck.cfg\");\n+        System.setProperty(\"CUSTOM_P11_CONFIG\", configPath.toString());\n+    }\n+\n+    @Test\n+    public void test() throws Exception {\n+        try {\n+            main(new RequiredMechCheck());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n+    }\n+\n+    public void main(Provider p) throws Exception {\n+        for (TestData td : testValues) {\n+            String desc = td.serviceType + \" \" + td.algo;\n+            Object t;\n+            try {\n+                switch (td.serviceType) {\n+                    case \"MAC\":\n+                        t = Mac.getInstance(td.algo, p);\n+                    break;\n+                    case \"SKF\":\n+                        t = SecretKeyFactory.getInstance(td.algo, p);\n+                    break;\n+                    case \"CIP\":\n+                        t = Cipher.getInstance(td.algo, p);\n+                    break;\n+                    default:\n+                        throw new RuntimeException(\"Unsupported Test Type!\");\n+                }\n+\n+                if (td.disabled) {\n+                    throw new RuntimeException(\"Fail, no NSAE for \" + desc);\n+                } else {\n+                    System.out.println(\"Ok, getInstance() works for \" + desc);\n+                }\n+            } catch (NoSuchAlgorithmException e) {\n+                if (td.disabled) {\n+                    System.out.println(\"Ok, NSAE thrown for \" + desc);\n+                } else {\n+                    throw new RuntimeException(\"Unexpected Ex for \" + desc, e);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/RequiredMechCheck.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -250,1 +250,0 @@\n-            String jarFilename, String digestalg,\n@@ -252,1 +251,1 @@\n-        final String TS = \".{28,29}\"; \/\/ matches a timestamp\n+        final String TS = \".{28,34}\"; \/\/ matches a timestamp\n@@ -354,1 +353,0 @@\n-                        jarFilename4, digestalg,\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/PreserveRawManifestEntryAndDigest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.test;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+record Comm<T>(Set<T> common, Set<T> unique1, Set<T> unique2) {\n+\n+    static <T> Comm<T> compare(Set<T> a, Set<T> b) {\n+        Set<T> common = new HashSet<>(a);\n+        common.retainAll(b);\n+        Set<T> unique1 = new HashSet<>(a);\n+        unique1.removeAll(common);\n+        Set<T> unique2 = new HashSet<>(b);\n+        unique2.removeAll(common);\n+        return new Comm(common, unique1, unique2);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/Comm.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -57,0 +57,1 @@\n+        winEnglishOutput = false;\n@@ -93,0 +94,9 @@\n+    public Executor setWinRunWithEnglishOutput(boolean value) {\n+        if (!TKit.isWindows()) {\n+            throw new UnsupportedOperationException(\n+                    \"setWinRunWithEnglishOutput is only valid on Windows platform\");\n+        }\n+        winEnglishOutput = value;\n+        return this;\n+    }\n+\n@@ -210,0 +220,5 @@\n+        if (toolProvider != null && winEnglishOutput) {\n+            throw new IllegalArgumentException(\n+                    \"Can't change locale when using tool provider\");\n+        }\n+\n@@ -327,0 +342,8 @@\n+    private List<String> prefixCommandLineArgs() {\n+        if (winEnglishOutput) {\n+            return List.of(\"cmd.exe\", \"\/c\", \"chcp\", \"437\", \">nul\", \"2>&1\", \"&&\");\n+        } else {\n+            return List.of();\n+        }\n+    }\n+\n@@ -329,0 +352,1 @@\n+        command.addAll(prefixCommandLineArgs());\n@@ -460,2 +484,4 @@\n-        return String.format(format, printCommandLine(exec, args),\n-                args.size() + 1);\n+        var cmdline = Stream.of(prefixCommandLineArgs(), List.of(exec), args).flatMap(\n+                List::stream).toList();\n+\n+        return String.format(format, printCommandLine(cmdline), cmdline.size());\n@@ -464,1 +490,1 @@\n-    private static String printCommandLine(String executable, List<String> args) {\n+    private static String printCommandLine(List<String> cmdline) {\n@@ -466,1 +492,1 @@\n-        \/\/ to be executed manally\n+        \/\/ to be executed manually\n@@ -468,1 +494,1 @@\n-        return Stream.concat(Stream.of(executable), args.stream()).map(\n+        return cmdline.stream().map(\n@@ -482,0 +508,1 @@\n+    private boolean winEnglishOutput;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/Executor.java","additions":32,"deletions":5,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+import java.util.Arrays;\n@@ -47,0 +48,1 @@\n+import java.util.HashSet;\n@@ -60,0 +62,1 @@\n+import static java.util.stream.Collectors.toSet;\n@@ -61,0 +64,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -68,2 +72,0 @@\n-    private static final String OS = System.getProperty(\"os.name\").toLowerCase();\n-\n@@ -176,1 +178,1 @@\n-        return (OS.contains(\"win\"));\n+        return OperatingSystem.isWindows();\n@@ -180,1 +182,1 @@\n-        return (OS.contains(\"mac\"));\n+        return OperatingSystem.isMacOS();\n@@ -184,1 +186,1 @@\n-        return ((OS.contains(\"nix\") || OS.contains(\"nux\")));\n+        return OperatingSystem.isLinux();\n@@ -382,1 +384,1 @@\n-                    try (var pathStream = Files.walk(root, 0)) {\n+                    try (var pathStream = Files.list(root)) {\n@@ -735,0 +737,88 @@\n+    public static DirectoryContentVerifier assertDirectoryContent(Path dir) {\n+        return new DirectoryContentVerifier(dir);\n+    }\n+\n+    public static final class DirectoryContentVerifier {\n+        public DirectoryContentVerifier(Path baseDir) {\n+            this(baseDir, ThrowingSupplier.toSupplier(() -> {\n+                try (var files = Files.list(baseDir)) {\n+                    return files.map(Path::getFileName).collect(toSet());\n+                }\n+            }).get());\n+        }\n+\n+        public void match(Path ... expected) {\n+            DirectoryContentVerifier.this.match(Set.of(expected));\n+        }\n+\n+        public void match(Set<Path> expected) {\n+            currentTest.notifyAssert();\n+\n+            var comm = Comm.compare(content, expected);\n+            if (!comm.unique1().isEmpty() && !comm.unique2().isEmpty()) {\n+                error(String.format(\n+                        \"assertDirectoryContentEquals(%s): Some expected %s. Unexpected %s. Missing %s\",\n+                        baseDir, format(comm.common()), format(comm.unique1()), format(comm.unique2())));\n+            } else if (!comm.unique1().isEmpty()) {\n+                error(String.format(\n+                        \"assertDirectoryContentEquals(%s): Expected %s. Unexpected %s\",\n+                        baseDir, format(comm.common()), format(comm.unique1())));\n+            } else if (!comm.unique2().isEmpty()) {\n+                error(String.format(\n+                        \"assertDirectoryContentEquals(%s): Some expected %s. Missing %s\",\n+                        baseDir, format(comm.common()), format(comm.unique2())));\n+            } else {\n+                traceAssert(String.format(\n+                        \"assertDirectoryContentEquals(%s): Expected %s\",\n+                        baseDir, format(expected)));\n+            }\n+        }\n+\n+        public void contains(Path ... expected) {\n+            contains(Set.of(expected));\n+        }\n+\n+        public void contains(Set<Path> expected) {\n+            currentTest.notifyAssert();\n+\n+            var comm = Comm.compare(content, expected);\n+            if (!comm.unique2().isEmpty()) {\n+                error(String.format(\n+                        \"assertDirectoryContentContains(%s): Some expected %s. Missing %s\",\n+                        baseDir, format(comm.common()), format(comm.unique2())));\n+            } else {\n+                traceAssert(String.format(\n+                        \"assertDirectoryContentContains(%s): Expected %s\",\n+                        baseDir, format(expected)));\n+            }\n+        }\n+\n+        public DirectoryContentVerifier removeAll(Collection<Path> paths) {\n+            Set<Path> newContent = new HashSet<>(content);\n+            newContent.removeAll(paths);\n+            return new DirectoryContentVerifier(baseDir, newContent);\n+        }\n+\n+        public DirectoryContentVerifier removeAll(Path ... paths) {\n+            return removeAll(List.of(paths));\n+        }\n+\n+        public Set<Path> items() {\n+            return content;\n+        }\n+\n+        private DirectoryContentVerifier(Path baseDir, Set<Path> contents) {\n+            this.baseDir = baseDir;\n+            this.content = contents;\n+        }\n+\n+        private static String format(Set<Path> paths) {\n+            return Arrays.toString(\n+                    paths.stream().sorted().map(Path::toString).toArray(\n+                            String[]::new));\n+        }\n+\n+        private final Path baseDir;\n+        private final Set<Path> content;\n+    }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":97,"deletions":7,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -395,0 +395,3 @@\n+        if (toType.isEnum()) {\n+            return Enum.valueOf(toType, value);\n+        }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TestBuilder.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -64,16 +64,0 @@\n-    \/\/ Tests have problems on windows where path in the temp dir are too long\n-    \/\/ for the wix tools.  We can't use a tempDir outside the TKit's WorkDir, so\n-    \/\/ we minimize both the tempRoot directory name (above) and the tempDir name\n-    \/\/ (below) to the extension part (which is necessary to differenciate between\n-    \/\/ the multiple PackageTypes that will be run for one JPackageCommand).\n-    \/\/ It might be beter if the whole work dir name was shortened from:\n-    \/\/ jtreg_open_test_jdk_tools_jpackage_share_jdk_jpackage_tests_BasicTest_java.\n-    public static Path getTempDirectory(JPackageCommand cmd, Path tempRoot) {\n-        String ext = cmd.outputBundle().getFileName().toString();\n-        int i = ext.lastIndexOf(\".\");\n-        if (i > 0 && i < (ext.length() - 1)) {\n-            ext = ext.substring(i+1);\n-        }\n-        return tempRoot.resolve(ext);\n-    }\n-\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/WindowsHelper.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"","filename":"test\/jdk\/tools\/jpackage\/linux\/UsrTreeTest.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/tools\/jpackage\/linux\/jdk\/jpackage\/tests\/UsrTreeTest.java","status":"renamed"},{"patch":"@@ -31,0 +31,1 @@\n+import jdk.internal.util.Architecture;\n@@ -76,1 +77,1 @@\n-        if (\"aarch64\".equals(System.getProperty(\"os.arch\"))) {\n+        if (Architecture.isAARCH64()) {\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/HostArchPkgTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -49,1 +48,1 @@\n- *  --jpt-run=jdk.jpackage.tests.AppVersionTest\n+ *  --jpt-run=AppVersionTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppVersionTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/AppVersionTest.java","status":"renamed"},{"patch":"@@ -0,0 +1,363 @@\n+\/*\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.ArrayList;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.JavaAppDesc;\n+import jdk.jpackage.test.PackageTest;\n+import jdk.jpackage.test.HelloApp;\n+import jdk.jpackage.test.Executor;\n+import jdk.jpackage.test.JavaTool;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Annotations.Parameter;\n+\n+\/*\n+ * @test\n+ * @summary jpackage basic testing\n+ * @library \/test\/jdk\/tools\/jpackage\/helpers\n+ * @build jdk.jpackage.test.*\n+ * @compile BasicTest.java\n+ * @run main\/othervm\/timeout=720 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=BasicTest\n+ *\/\n+\n+public final class BasicTest {\n+    @Test\n+    public void testNoArgs() {\n+        List<String> output =\n+                getJPackageToolProvider().executeAndGetOutput();\n+        TKit.assertStringListEquals(List.of(\"Usage: jpackage <options>\",\n+                \"Use jpackage --help (or -h) for a list of possible options\"),\n+                output, \"Check jpackage output\");\n+    }\n+\n+    @Test\n+    public void testJpackageProps() {\n+        String appVersion = \"3.0\";\n+        JPackageCommand cmd = JPackageCommand.helloAppImage(\n+                JavaAppDesc.parse(\"Hello\"))\n+                \/\/ Disable default logic adding `--verbose` option\n+                \/\/ to jpackage command line.\n+                .ignoreDefaultVerbose(true)\n+                .saveConsoleOutput(true)\n+                .addArguments(\"--app-version\", appVersion, \"--arguments\",\n+                    \"jpackage.app-version jpackage.app-path\")\n+                .ignoreDefaultRuntime(true);\n+\n+        cmd.executeAndAssertImageCreated();\n+        Path launcherPath = cmd.appLauncherPath();\n+\n+        List<String> output = HelloApp.executeLauncher(cmd).getOutput();\n+\n+        TKit.assertTextStream(\"jpackage.app-version=\" + appVersion).apply(output.stream());\n+        TKit.assertTextStream(\"jpackage.app-path=\").apply(output.stream());\n+    }\n+\n+    @Test\n+    public void testVersion() {\n+        List<String> output =\n+                getJPackageToolProvider()\n+                        .addArgument(\"--version\")\n+                        .executeAndGetOutput();\n+        TKit.assertStringListEquals(List.of(System.getProperty(\"java.version\")),\n+                output, \"Check jpackage output\");\n+    }\n+\n+    @Test\n+    public void testHelp() {\n+        List<String> hOutput = getJPackageToolProvider()\n+                .addArgument(\"-h\").executeAndGetOutput();\n+        List<String> helpOutput = getJPackageToolProvider()\n+                .addArgument(\"--help\").executeAndGetOutput();\n+\n+        TKit.assertStringListEquals(hOutput, helpOutput,\n+                \"Check -h and --help parameters produce the same output\");\n+\n+        final String windowsPrefix = \"--win-\";\n+        final String linuxPrefix = \"--linux-\";\n+        final String osxPrefix = \"--mac-\";\n+\n+        final String expectedPrefix;\n+        final List<String> unexpectedPrefixes;\n+\n+        if (TKit.isWindows()) {\n+            expectedPrefix = windowsPrefix;\n+            unexpectedPrefixes = List.of(osxPrefix, linuxPrefix);\n+        } else if (TKit.isLinux()) {\n+            expectedPrefix = linuxPrefix;\n+            unexpectedPrefixes = List.of(windowsPrefix, osxPrefix);\n+        } else if (TKit.isOSX()) {\n+            expectedPrefix = osxPrefix;\n+            unexpectedPrefixes = List.of(linuxPrefix,  windowsPrefix);\n+        } else {\n+            throw TKit.throwUnknownPlatformError();\n+        }\n+\n+        Function<String, Predicate<String>> createPattern = (prefix) -> {\n+            return Pattern.compile(\"^  \" + prefix).asPredicate();\n+        };\n+\n+        Function<List<String>, Long> countStrings = (prefixes) -> {\n+            return hOutput.stream().filter(\n+                    prefixes.stream().map(createPattern).reduce(x -> false,\n+                            Predicate::or)).peek(TKit::trace).count();\n+        };\n+\n+        TKit.trace(\"Check parameters in help text\");\n+        TKit.assertNotEquals(0, countStrings.apply(List.of(expectedPrefix)),\n+                \"Check help text contains platform specific parameters\");\n+        TKit.assertEquals(0, countStrings.apply(unexpectedPrefixes),\n+                \"Check help text doesn't contain unexpected parameters\");\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void testVerbose() {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage()\n+                \/\/ Disable default logic adding `--verbose` option\n+                \/\/ to jpackage command line.\n+                .ignoreDefaultVerbose(true)\n+                .saveConsoleOutput(true)\n+                .setFakeRuntime().executePrerequisiteActions();\n+\n+        List<String> expectedVerboseOutputStrings = new ArrayList<>();\n+        expectedVerboseOutputStrings.add(\"Creating app package:\");\n+        if (TKit.isWindows()) {\n+            expectedVerboseOutputStrings.add(\n+                    \"Succeeded in building Windows Application Image package\");\n+        } else if (TKit.isLinux()) {\n+            expectedVerboseOutputStrings.add(\n+                    \"Succeeded in building Linux Application Image package\");\n+        } else if (TKit.isOSX()) {\n+            expectedVerboseOutputStrings.add(\"Preparing Info.plist:\");\n+            expectedVerboseOutputStrings.add(\n+                    \"Succeeded in building Mac Application Image package\");\n+        } else {\n+            TKit.throwUnknownPlatformError();\n+        }\n+\n+        TKit.deleteDirectoryContentsRecursive(cmd.outputDir());\n+        List<String> nonVerboseOutput = cmd.execute().getOutput();\n+        List<String>[] verboseOutput = (List<String>[])new List<?>[1];\n+\n+        \/\/ Directory clean up is not 100% reliable on Windows because of\n+        \/\/ antivirus software that can lock .exe files. Setup\n+        \/\/ different output directory instead of cleaning the default one for\n+        \/\/ verbose jpackage run.\n+        TKit.withTempDirectory(\"verbose-output\", tempDir -> {\n+            cmd.setArgumentValue(\"--dest\", tempDir);\n+            cmd.addArgument(\"--verbose\");\n+            verboseOutput[0] = cmd.execute().getOutput();\n+        });\n+\n+        TKit.assertTrue(nonVerboseOutput.size() < verboseOutput[0].size(),\n+                \"Check verbose output is longer than regular\");\n+\n+        expectedVerboseOutputStrings.forEach(str -> {\n+            TKit.assertTextStream(str).label(\"regular output\")\n+                    .predicate(String::contains).negate()\n+                    .apply(nonVerboseOutput.stream());\n+        });\n+\n+        expectedVerboseOutputStrings.forEach(str -> {\n+            TKit.assertTextStream(str).label(\"verbose output\")\n+                    .apply(verboseOutput[0].stream());\n+        });\n+    }\n+\n+    @Test\n+    public void testNoName() {\n+        final String mainClassName = \"Greetings\";\n+\n+        JPackageCommand cmd = JPackageCommand.helloAppImage(mainClassName)\n+                .removeArgumentWithValue(\"--name\");\n+\n+        Path expectedImageDir = cmd.outputDir().resolve(mainClassName);\n+        if (TKit.isOSX()) {\n+            expectedImageDir = expectedImageDir.getParent().resolve(\n+                    expectedImageDir.getFileName().toString() + \".app\");\n+        }\n+\n+        cmd.executeAndAssertHelloAppImageCreated();\n+        TKit.assertEquals(expectedImageDir.toAbsolutePath().normalize().toString(),\n+                cmd.outputBundle().toAbsolutePath().normalize().toString(),\n+                String.format(\n+                        \"Check [%s] directory is filled with application image data\",\n+                        expectedImageDir));\n+    }\n+\n+    @Test\n+    \/\/ Regular app\n+    @Parameter(\"Hello\")\n+    \/\/ Modular app in .jar file\n+    @Parameter(\"com.other\/com.other.Hello\")\n+    \/\/ Modular app in .jmod file\n+    @Parameter(\"hello.jmod:com.other\/com.other.Hello\")\n+    \/\/ Modular app in exploded .jmod file\n+    @Parameter(\"hello.ejmod:com.other\/com.other.Hello\")\n+    public void testApp(String javaAppDesc) {\n+        JavaAppDesc appDesc = JavaAppDesc.parse(javaAppDesc);\n+        JPackageCommand cmd = JPackageCommand.helloAppImage(appDesc);\n+        if (appDesc.jmodFileName() != null) {\n+            \/\/ .jmod files are not supported at run-time. They should be\n+            \/\/ bundled in Java run-time with jlink command, so disable\n+            \/\/ use of external Java run-time if any configured.\n+            cmd.ignoreDefaultRuntime(true);\n+        }\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    @Test\n+    public void testWhitespaceInPaths() {\n+        JPackageCommand.helloAppImage(\"a\/b c.jar:Hello\")\n+        .setArgumentValue(\"--input\", TKit.workDir().resolve(\"The quick brown fox\"))\n+        .setArgumentValue(\"--dest\", TKit.workDir().resolve(\"jumps over the lazy dog\"))\n+        .executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    @Test\n+    @Parameter(\"ALL-MODULE-PATH\")\n+    @Parameter(\"ALL-DEFAULT\")\n+    @Parameter(\"java.desktop\")\n+    @Parameter(\"java.desktop,jdk.jartool\")\n+    @Parameter({ \"java.desktop\", \"jdk.jartool\" })\n+    public void testAddModules(String... addModulesArg) {\n+        JPackageCommand cmd = JPackageCommand\n+                .helloAppImage(\"goodbye.jar:com.other\/com.other.Hello\")\n+                .ignoreDefaultRuntime(true); \/\/ because of --add-modules\n+        Stream.of(addModulesArg).map(v -> Stream.of(\"--add-modules\", v)).flatMap(\n+                s -> s).forEachOrdered(cmd::addArgument);\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    public static enum TestTempType {\n+        TEMPDIR_EMPTY,\n+        TEMPDIR_NOT_EMPTY,\n+        TEMPDIR_NOT_EXIST,\n+    }\n+\n+    \/**\n+     * Test --temp option. Doesn't make much sense for app image as temporary\n+     * directory is used only on Windows. Test it in packaging mode.\n+     *\/\n+    @Test\n+    @Parameter(\"TEMPDIR_EMPTY\")\n+    @Parameter(\"TEMPDIR_NOT_EMPTY\")\n+    @Parameter(\"TEMPDIR_NOT_EXIST\")\n+    public void testTemp(TestTempType type) throws IOException {\n+        final Path tempRoot = TKit.createTempDirectory(\"tmp\");\n+\n+        var pkgTest = new PackageTest()\n+        .configureHelloApp()\n+        \/\/ Force save of package bundle in test work directory.\n+        .addInitializer(JPackageCommand::setDefaultInputOutput)\n+        .addInitializer(cmd -> {\n+            Path tempDir = tempRoot.resolve(cmd.packageType().name());\n+            switch (type) {\n+                    case TEMPDIR_EMPTY -> Files.createDirectories(tempDir);\n+                    case TEMPDIR_NOT_EXIST -> Files.createDirectories(tempDir.getParent());\n+                    case TEMPDIR_NOT_EMPTY -> {\n+                        Files.createDirectories(tempDir);\n+                        TKit.createTextFile(tempDir.resolve(\"foo.txt\"), List.of(\n+                                \"Hello Duke!\"));\n+                    }\n+                }\n+                cmd.addArguments(\"--temp\", tempDir);\n+            }\n+        );\n+\n+        if (TestTempType.TEMPDIR_NOT_EMPTY.equals(type)) {\n+            pkgTest.setExpectedExitCode(1).addBundleVerifier(cmd -> {\n+                \/\/ Check jpackage didn't use the supplied directory.\n+                Path tempDir = Path.of(cmd.getArgumentValue(\"--temp\"));\n+                TKit.assertDirectoryContent(tempDir).match(Path.of(\"foo.txt\"));\n+                TKit.assertStringListEquals(List.of(\"Hello Duke!\"),\n+                        Files.readAllLines(tempDir.resolve(\"foo.txt\")),\n+                        \"Check the contents of the file in the supplied temporary directory\");\n+            });\n+        } else {\n+            pkgTest.addBundleVerifier(cmd -> {\n+                \/\/ Check jpackage used the supplied directory.\n+                Path tempDir = Path.of(cmd.getArgumentValue(\"--temp\"));\n+                TKit.assertDirectoryNotEmpty(tempDir);\n+            });\n+        }\n+\n+        pkgTest.run(PackageTest.Action.CREATE);\n+    }\n+\n+    @Test\n+    public void testAtFile() throws IOException {\n+        JPackageCommand cmd = JPackageCommand\n+                .helloAppImage()\n+                .setArgumentValue(\"--dest\", TKit.createTempDirectory(\"output\"));\n+\n+        \/\/ Init options file with the list of options configured\n+        \/\/ for JPackageCommand instance.\n+        final Path optionsFile = TKit.createTempFile(Path.of(\"options\"));\n+        Files.write(optionsFile,\n+                List.of(String.join(\" \", cmd.getAllArguments())));\n+\n+        \/\/ Build app jar file.\n+        cmd.executePrerequisiteActions();\n+\n+        \/\/ Instead of running jpackage command through configured\n+        \/\/ JPackageCommand instance, run vanilla jpackage command with @ file.\n+        getJPackageToolProvider()\n+                .addArgument(String.format(\"@%s\", optionsFile))\n+                .execute();\n+\n+        \/\/ Verify output of jpackage command.\n+        cmd.assertImageCreated();\n+        HelloApp.executeLauncherAndVerifyOutput(cmd);\n+    }\n+\n+    @Test\n+    @Parameter(\"1\")\n+    @Parameter(\"123\")\n+    public void testExitCode(int exitCode) {\n+        JPackageCommand cmd = JPackageCommand\n+                .helloAppImage()\n+                .addArguments(\"--java-options\", String.format(\n+                        \"-Djpackage.test.exitCode=%d\", exitCode));\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    private static Executor getJPackageToolProvider() {\n+        return getToolProvider(JavaTool.JPACKAGE);\n+    }\n+\n+    private static Executor getToolProvider(JavaTool tool) {\n+        return new Executor().dumpOutput().saveOutput().setToolProvider(tool);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/share\/BasicTest.java","additions":363,"deletions":0,"binary":false,"changes":363,"status":"added"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -49,1 +48,1 @@\n- *  --jpt-run=jdk.jpackage.tests.CookedRuntimeTest\n+ *  --jpt-run=CookedRuntimeTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/CookedRuntimeTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/CookedRuntimeTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -40,1 +39,1 @@\n- *  --jpt-run=jdk.jpackage.tests.DotInNameTest\n+ *  --jpt-run=DotInNameTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/DotInNameTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/DotInNameTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -40,1 +39,1 @@\n- *  --jpt-run=jdk.jpackage.tests.ErrorTest\n+ *  --jpt-run=ErrorTest\n@@ -51,1 +50,1 @@\n- *  --jpt-run=jdk.jpackage.tests.ErrorTest\n+ *  --jpt-run=ErrorTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/ErrorTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ErrorTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -40,1 +39,1 @@\n- *  --jpt-run=jdk.jpackage.tests.JLinkOptionsTest\n+ *  --jpt-run=JLinkOptionsTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/JLinkOptionsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JLinkOptionsTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -42,1 +41,1 @@\n- *  --jpt-run=jdk.jpackage.tests.JavaOptionsEqualsTest\n+ *  --jpt-run=JavaOptionsEqualsTest\n@@ -53,1 +52,1 @@\n- *  --jpt-run=jdk.jpackage.tests.JavaOptionsEqualsTest\n+ *  --jpt-run=JavaOptionsEqualsTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/JavaOptionsEqualsTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JavaOptionsEqualsTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -42,1 +41,1 @@\n- *  --jpt-run=jdk.jpackage.tests.JavaOptionsTest\n+ *  --jpt-run=JavaOptionsTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/JavaOptionsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JavaOptionsTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -49,1 +48,1 @@\n-import static jdk.jpackage.tests.MainClassTest.Script.MainClassType.*;\n+\n@@ -59,1 +58,1 @@\n- *  --jpt-run=jdk.jpackage.tests.MainClassTest\n+ *  --jpt-run=MainClassTest\n@@ -85,1 +84,1 @@\n-            appDesc.setWithMainClass(v != NotSet);\n+            appDesc.setWithMainClass(v != MainClassType.NotSet);\n@@ -175,1 +174,2 @@\n-        final var withMainClass = Set.of(SetWrong, SetRight);\n+        final var withMainClass = Set.of(Script.MainClassType.SetWrong,\n+                Script.MainClassType.SetRight);\n@@ -208,1 +208,1 @@\n-        if (script.jarMainClass == SetWrong) {\n+        if (script.jarMainClass == Script.MainClassType.SetWrong) {\n@@ -227,1 +227,1 @@\n-        appShouldSucceed |= (script.mainClass == SetRight);\n+        appShouldSucceed |= (script.mainClass == Script.MainClassType.SetRight);\n@@ -231,1 +231,1 @@\n-        appShouldSucceed |= (script.mainClass == NotSet && script.jarMainClass == SetRight);\n+        appShouldSucceed |= (script.mainClass == Script.MainClassType.NotSet && script.jarMainClass == Script.MainClassType.SetRight);\n","filename":"test\/jdk\/tools\/jpackage\/share\/MainClassTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MainClassTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -51,1 +50,1 @@\n- *  --jpt-run=jdk.jpackage.tests.ModulePathTest\n+ *  --jpt-run=ModulePathTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/ModulePathTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -43,1 +42,1 @@\n- *  --jpt-run=jdk.jpackage.tests.ModulePathTest2\n+ *  --jpt-run=ModulePathTest2\n","filename":"test\/jdk\/tools\/jpackage\/share\/ModulePathTest2.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest2.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -56,1 +55,1 @@\n- *  --jpt-run=jdk.jpackage.tests.ModulePathTest3\n+ *  --jpt-run=ModulePathTest3\n","filename":"test\/jdk\/tools\/jpackage\/share\/ModulePathTest3.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest3.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -40,1 +39,1 @@\n- *  --jpt-run=jdk.jpackage.tests.MultipleJarAppTest\n+ *  --jpt-run=MultipleJarAppTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/MultipleJarAppTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MultipleJarAppTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -50,1 +49,1 @@\n- *  --jpt-run=jdk.jpackage.tests.NoMPathRuntimeTest\n+ *  --jpt-run=NoMPathRuntimeTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/NoMPathRuntimeTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/NoMPathRuntimeTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -40,1 +39,1 @@\n- *  --jpt-run=jdk.jpackage.tests.NonExistentTest\n+ *  --jpt-run=NonExistentTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/NonExistentTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/NonExistentTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -45,1 +44,1 @@\n- *  --jpt-run=jdk.jpackage.tests.PredefinedAppImageErrorTest\n+ *  --jpt-run=PredefinedAppImageErrorTest\n@@ -49,1 +48,1 @@\n- *  --jpt-run=jdk.jpackage.tests.PredefinedAppImageErrorTest\n+ *  --jpt-run=PredefinedAppImageErrorTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/PredefinedAppImageErrorTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/PredefinedAppImageErrorTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -41,1 +40,1 @@\n- *  --jpt-run=jdk.jpackage.tests.UnicodeArgsTest\n+ *  --jpt-run=UnicodeArgsTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/UnicodeArgsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/UnicodeArgsTest.java","status":"renamed"},{"patch":"@@ -24,1 +24,0 @@\n-package jdk.jpackage.tests;\n@@ -64,1 +63,1 @@\n- *  --jpt-run=jdk.jpackage.tests.VendorTest\n+ *  --jpt-run=VendorTest\n@@ -77,1 +76,1 @@\n- *  --jpt-run=jdk.jpackage.tests.VendorTest\n+ *  --jpt-run=VendorTest\n","filename":"test\/jdk\/tools\/jpackage\/share\/VendorTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"previous_filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/VendorTest.java","status":"renamed"},{"patch":"@@ -1,356 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.tests;\n-\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.util.List;\n-import java.util.ArrayList;\n-import java.util.function.Function;\n-import java.util.function.Predicate;\n-import java.util.function.Supplier;\n-import java.util.regex.Pattern;\n-import java.util.stream.Stream;\n-import jdk.jpackage.test.TKit;\n-import jdk.jpackage.test.JPackageCommand;\n-import jdk.jpackage.test.JavaAppDesc;\n-import jdk.jpackage.test.PackageTest;\n-import jdk.jpackage.test.HelloApp;\n-import jdk.jpackage.test.Executor;\n-import jdk.jpackage.test.JavaTool;\n-import jdk.jpackage.test.Annotations.Test;\n-import jdk.jpackage.test.Annotations.Parameter;\n-\n-import static jdk.jpackage.test.WindowsHelper.getTempDirectory;\n-\n-\/*\n- * @test\n- * @summary jpackage basic testing\n- * @library \/test\/jdk\/tools\/jpackage\/helpers\n- * @build jdk.jpackage.test.*\n- * @compile BasicTest.java\n- * @run main\/othervm\/timeout=720 -Xmx512m jdk.jpackage.test.Main\n- *  --jpt-run=jdk.jpackage.tests.BasicTest\n- *\/\n-\n-public final class BasicTest {\n-    @Test\n-    public void testNoArgs() {\n-        List<String> output =\n-                getJPackageToolProvider().executeAndGetOutput();\n-        TKit.assertStringListEquals(List.of(\"Usage: jpackage <options>\",\n-                \"Use jpackage --help (or -h) for a list of possible options\"),\n-                output, \"Check jpackage output\");\n-    }\n-\n-    @Test\n-    public void testJpackageProps() {\n-        String appVersion = \"3.0\";\n-        JPackageCommand cmd = JPackageCommand.helloAppImage(\n-                JavaAppDesc.parse(\"Hello\"))\n-                \/\/ Disable default logic adding `--verbose` option\n-                \/\/ to jpackage command line.\n-                .ignoreDefaultVerbose(true)\n-                .saveConsoleOutput(true)\n-                .addArguments(\"--app-version\", appVersion, \"--arguments\",\n-                    \"jpackage.app-version jpackage.app-path\")\n-                .ignoreDefaultRuntime(true);\n-\n-        cmd.executeAndAssertImageCreated();\n-        Path launcherPath = cmd.appLauncherPath();\n-\n-        List<String> output = HelloApp.executeLauncher(cmd).getOutput();\n-\n-        TKit.assertTextStream(\"jpackage.app-version=\" + appVersion).apply(output.stream());\n-        TKit.assertTextStream(\"jpackage.app-path=\").apply(output.stream());\n-    }\n-\n-    @Test\n-    public void testVersion() {\n-        List<String> output =\n-                getJPackageToolProvider()\n-                        .addArgument(\"--version\")\n-                        .executeAndGetOutput();\n-        TKit.assertStringListEquals(List.of(System.getProperty(\"java.version\")),\n-                output, \"Check jpackage output\");\n-    }\n-\n-    @Test\n-    public void testHelp() {\n-        List<String> hOutput = getJPackageToolProvider()\n-                .addArgument(\"-h\").executeAndGetOutput();\n-        List<String> helpOutput = getJPackageToolProvider()\n-                .addArgument(\"--help\").executeAndGetOutput();\n-\n-        TKit.assertStringListEquals(hOutput, helpOutput,\n-                \"Check -h and --help parameters produce the same output\");\n-\n-        final String windowsPrefix = \"--win-\";\n-        final String linuxPrefix = \"--linux-\";\n-        final String osxPrefix = \"--mac-\";\n-\n-        final String expectedPrefix;\n-        final List<String> unexpectedPrefixes;\n-\n-        if (TKit.isWindows()) {\n-            expectedPrefix = windowsPrefix;\n-            unexpectedPrefixes = List.of(osxPrefix, linuxPrefix);\n-        } else if (TKit.isLinux()) {\n-            expectedPrefix = linuxPrefix;\n-            unexpectedPrefixes = List.of(windowsPrefix, osxPrefix);\n-        } else if (TKit.isOSX()) {\n-            expectedPrefix = osxPrefix;\n-            unexpectedPrefixes = List.of(linuxPrefix,  windowsPrefix);\n-        } else {\n-            throw TKit.throwUnknownPlatformError();\n-        }\n-\n-        Function<String, Predicate<String>> createPattern = (prefix) -> {\n-            return Pattern.compile(\"^  \" + prefix).asPredicate();\n-        };\n-\n-        Function<List<String>, Long> countStrings = (prefixes) -> {\n-            return hOutput.stream().filter(\n-                    prefixes.stream().map(createPattern).reduce(x -> false,\n-                            Predicate::or)).peek(TKit::trace).count();\n-        };\n-\n-        TKit.trace(\"Check parameters in help text\");\n-        TKit.assertNotEquals(0, countStrings.apply(List.of(expectedPrefix)),\n-                \"Check help text contains platform specific parameters\");\n-        TKit.assertEquals(0, countStrings.apply(unexpectedPrefixes),\n-                \"Check help text doesn't contain unexpected parameters\");\n-    }\n-\n-    @Test\n-    @SuppressWarnings(\"unchecked\")\n-    public void testVerbose() {\n-        JPackageCommand cmd = JPackageCommand.helloAppImage()\n-                \/\/ Disable default logic adding `--verbose` option\n-                \/\/ to jpackage command line.\n-                .ignoreDefaultVerbose(true)\n-                .saveConsoleOutput(true)\n-                .setFakeRuntime().executePrerequisiteActions();\n-\n-        List<String> expectedVerboseOutputStrings = new ArrayList<>();\n-        expectedVerboseOutputStrings.add(\"Creating app package:\");\n-        if (TKit.isWindows()) {\n-            expectedVerboseOutputStrings.add(\n-                    \"Succeeded in building Windows Application Image package\");\n-        } else if (TKit.isLinux()) {\n-            expectedVerboseOutputStrings.add(\n-                    \"Succeeded in building Linux Application Image package\");\n-        } else if (TKit.isOSX()) {\n-            expectedVerboseOutputStrings.add(\"Preparing Info.plist:\");\n-            expectedVerboseOutputStrings.add(\n-                    \"Succeeded in building Mac Application Image package\");\n-        } else {\n-            TKit.throwUnknownPlatformError();\n-        }\n-\n-        TKit.deleteDirectoryContentsRecursive(cmd.outputDir());\n-        List<String> nonVerboseOutput = cmd.execute().getOutput();\n-        List<String>[] verboseOutput = (List<String>[])new List<?>[1];\n-\n-        \/\/ Directory clean up is not 100% reliable on Windows because of\n-        \/\/ antivirus software that can lock .exe files. Setup\n-        \/\/ different output directory instead of cleaning the default one for\n-        \/\/ verbose jpackage run.\n-        TKit.withTempDirectory(\"verbose-output\", tempDir -> {\n-            cmd.setArgumentValue(\"--dest\", tempDir);\n-            cmd.addArgument(\"--verbose\");\n-            verboseOutput[0] = cmd.execute().getOutput();\n-        });\n-\n-        TKit.assertTrue(nonVerboseOutput.size() < verboseOutput[0].size(),\n-                \"Check verbose output is longer than regular\");\n-\n-        expectedVerboseOutputStrings.forEach(str -> {\n-            TKit.assertTextStream(str).label(\"regular output\")\n-                    .predicate(String::contains).negate()\n-                    .apply(nonVerboseOutput.stream());\n-        });\n-\n-        expectedVerboseOutputStrings.forEach(str -> {\n-            TKit.assertTextStream(str).label(\"verbose output\")\n-                    .apply(verboseOutput[0].stream());\n-        });\n-    }\n-\n-    @Test\n-    public void testNoName() {\n-        final String mainClassName = \"Greetings\";\n-\n-        JPackageCommand cmd = JPackageCommand.helloAppImage(mainClassName)\n-                .removeArgumentWithValue(\"--name\");\n-\n-        Path expectedImageDir = cmd.outputDir().resolve(mainClassName);\n-        if (TKit.isOSX()) {\n-            expectedImageDir = expectedImageDir.getParent().resolve(\n-                    expectedImageDir.getFileName().toString() + \".app\");\n-        }\n-\n-        cmd.executeAndAssertHelloAppImageCreated();\n-        TKit.assertEquals(expectedImageDir.toAbsolutePath().normalize().toString(),\n-                cmd.outputBundle().toAbsolutePath().normalize().toString(),\n-                String.format(\n-                        \"Check [%s] directory is filled with application image data\",\n-                        expectedImageDir));\n-    }\n-\n-    @Test\n-    \/\/ Regular app\n-    @Parameter(\"Hello\")\n-    \/\/ Modular app in .jar file\n-    @Parameter(\"com.other\/com.other.Hello\")\n-    \/\/ Modular app in .jmod file\n-    @Parameter(\"hello.jmod:com.other\/com.other.Hello\")\n-    \/\/ Modular app in exploded .jmod file\n-    @Parameter(\"hello.ejmod:com.other\/com.other.Hello\")\n-    public void testApp(String javaAppDesc) {\n-        JavaAppDesc appDesc = JavaAppDesc.parse(javaAppDesc);\n-        JPackageCommand cmd = JPackageCommand.helloAppImage(appDesc);\n-        if (appDesc.jmodFileName() != null) {\n-            \/\/ .jmod files are not supported at run-time. They should be\n-            \/\/ bundled in Java run-time with jlink command, so disable\n-            \/\/ use of external Java run-time if any configured.\n-            cmd.ignoreDefaultRuntime(true);\n-        }\n-        cmd.executeAndAssertHelloAppImageCreated();\n-    }\n-\n-    @Test\n-    public void testWhitespaceInPaths() {\n-        JPackageCommand.helloAppImage(\"a\/b c.jar:Hello\")\n-        .setArgumentValue(\"--input\", TKit.workDir().resolve(\"The quick brown fox\"))\n-        .setArgumentValue(\"--dest\", TKit.workDir().resolve(\"jumps over the lazy dog\"))\n-        .executeAndAssertHelloAppImageCreated();\n-    }\n-\n-    @Test\n-    @Parameter(\"ALL-MODULE-PATH\")\n-    @Parameter(\"ALL-DEFAULT\")\n-    @Parameter(\"java.desktop\")\n-    @Parameter(\"java.desktop,jdk.jartool\")\n-    @Parameter({ \"java.desktop\", \"jdk.jartool\" })\n-    public void testAddModules(String... addModulesArg) {\n-        JPackageCommand cmd = JPackageCommand\n-                .helloAppImage(\"goodbye.jar:com.other\/com.other.Hello\")\n-                .ignoreDefaultRuntime(true); \/\/ because of --add-modules\n-        Stream.of(addModulesArg).map(v -> Stream.of(\"--add-modules\", v)).flatMap(\n-                s -> s).forEachOrdered(cmd::addArgument);\n-        cmd.executeAndAssertHelloAppImageCreated();\n-    }\n-\n-    \/**\n-     * Test --temp option. Doesn't make much sense for app image as temporary\n-     * directory is used only on Windows. Test it in packaging mode.\n-     * @throws IOException\n-     *\/\n-    @Test\n-    @Parameter(\"true\")\n-    @Parameter(\"false\")\n-    public void testTemp(boolean withExistingTempDir) throws IOException {\n-        final Path tempRoot = TKit.createTempDirectory(\"tmp\");\n-\n-        Supplier<PackageTest> createTest = () -> {\n-            return new PackageTest()\n-            .configureHelloApp()\n-            \/\/ Force save of package bundle in test work directory.\n-            .addInitializer(JPackageCommand::setDefaultInputOutput)\n-            .addInitializer(cmd -> {\n-                Path tempDir = getTempDirectory(cmd, tempRoot);\n-                if (withExistingTempDir) {\n-                    Files.createDirectories(tempDir);\n-                } else {\n-                    Files.createDirectories(tempDir.getParent());\n-                }\n-                cmd.addArguments(\"--temp\", tempDir);\n-            });\n-        };\n-\n-        createTest.get()\n-        .addBundleVerifier(cmd -> {\n-            \/\/ Check jpackage actually used the supplied directory.\n-            Path tempDir = getTempDirectory(cmd, tempRoot);\n-            TKit.assertNotEquals(0, tempDir.toFile().list().length,\n-                    String.format(\n-                            \"Check jpackage wrote some data in the supplied temporary directory [%s]\",\n-                            tempDir));\n-        })\n-        .run(PackageTest.Action.CREATE);\n-\n-        createTest.get()\n-        \/\/ Temporary directory should not be empty,\n-        \/\/ jpackage should exit with error.\n-        .setExpectedExitCode(1)\n-        .run(PackageTest.Action.CREATE);\n-    }\n-\n-    @Test\n-    public void testAtFile() throws IOException {\n-        JPackageCommand cmd = JPackageCommand\n-                .helloAppImage()\n-                .setArgumentValue(\"--dest\", TKit.createTempDirectory(\"output\"));\n-\n-        \/\/ Init options file with the list of options configured\n-        \/\/ for JPackageCommand instance.\n-        final Path optionsFile = TKit.createTempFile(Path.of(\"options\"));\n-        Files.write(optionsFile,\n-                List.of(String.join(\" \", cmd.getAllArguments())));\n-\n-        \/\/ Build app jar file.\n-        cmd.executePrerequisiteActions();\n-\n-        \/\/ Instead of running jpackage command through configured\n-        \/\/ JPackageCommand instance, run vanilla jpackage command with @ file.\n-        getJPackageToolProvider()\n-                .addArgument(String.format(\"@%s\", optionsFile))\n-                .execute();\n-\n-        \/\/ Verify output of jpackage command.\n-        cmd.assertImageCreated();\n-        HelloApp.executeLauncherAndVerifyOutput(cmd);\n-    }\n-\n-    @Test\n-    @Parameter(\"1\")\n-    @Parameter(\"123\")\n-    public void testExitCode(int exitCode) {\n-        JPackageCommand cmd = JPackageCommand\n-                .helloAppImage()\n-                .addArguments(\"--java-options\", String.format(\n-                        \"-Djpackage.test.exitCode=%d\", exitCode));\n-        cmd.executeAndAssertHelloAppImageCreated();\n-    }\n-\n-    private static Executor getJPackageToolProvider() {\n-        return getToolProvider(JavaTool.JPACKAGE);\n-    }\n-\n-    private static Executor getToolProvider(JavaTool tool) {\n-        return new Executor().dumpOutput().saveOutput().setToolProvider(tool);\n-    }\n-}\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/BasicTest.java","additions":0,"deletions":356,"binary":false,"changes":356,"status":"deleted"},{"patch":"@@ -95,1 +95,1 @@\n-        \/\/ Get the list of PIDs and PPIDs of app launcher processes.\n+        \/\/ Get the list of PIDs and PPIDs of app launcher processes. Run setWinRunWithEnglishOutput(true) for JDK-8344275.\n@@ -101,1 +101,1 @@\n-                saveOutput().executeAndGetOutput();\n+                saveOutput().setWinRunWithEnglishOutput(true).executeAndGetOutput();\n","filename":"test\/jdk\/tools\/jpackage\/windows\/Win8301247Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.nio.file.Files;\n@@ -39,2 +38,0 @@\n-import static jdk.jpackage.test.WindowsHelper.getTempDirectory;\n-\n@@ -166,3 +163,2 @@\n-            Path tempDir = getTempDirectory(cmd, tempRoot);\n-            Files.createDirectories(tempDir.getParent());\n-            cmd.addArguments(\"--temp\", tempDir.toString());\n+            Path tempDir = tempRoot.resolve(cmd.packageType().name());\n+            cmd.addArguments(\"--temp\", tempDir);\n@@ -189,1 +185,1 @@\n-                    Path tempDir = getTempDirectory(cmd, tempRoot).toAbsolutePath();\n+                    var tempDir = Path.of(cmd.getArgumentValue(\"--temp\")).toAbsolutePath();\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinL10nTest.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"export.h\"\n@@ -35,1 +36,1 @@\n-int\n+EXPORT int\n","filename":"test\/jdk\/tools\/launcher\/exeJliLaunchTest.c","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -588,0 +588,4 @@\n+\n+    @Test(posn=1, annoType=TA.class, expect=\"130\")\n+    @Test(posn=23, annoType=TA.class, expect=\"131\")\n+    public Map<@TA(130) String, @TA(131) String> f130;\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef TEST_LIB_NATIVE_EXPORT_H\n+#define TEST_LIB_NATIVE_EXPORT_H\n+\n+#ifdef _WIN64\n+  #define EXPORT __declspec(dllexport)\n+#elif defined(__GNUC__)\n+  #define EXPORT __attribute__((visibility(\"default\")))\n+#else\n+  #define EXPORT\n+#endif\n+\n+#endif \/\/ TEST_LIB_NATIVE_EXPORT_H\n","filename":"test\/lib\/native\/export.h","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libCallOverhead.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,6 +26,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n@@ -34,0 +28,2 @@\n+#include \"export.h\"\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libPtr.c","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,6 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libQSort.c","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libUpcalls.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,1 +23,1 @@\n-#include <stdlib.h>\n+\n@@ -25,0 +25,1 @@\n+#include <stdlib.h>\n@@ -26,0 +27,1 @@\n+#include \"export.h\"\n@@ -28,6 +30,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/libPoint.c","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}