{"files":[{"patch":"@@ -68,0 +68,1 @@\n+    DEBUG_ONLY(size_t _saved_hash);\n@@ -80,0 +81,4 @@\n+#ifdef ASSERT\n+    size_t saved_hash() const         { return _saved_hash; }\n+    void set_saved_hash(size_t hash)  { _saved_hash = hash; }\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -682,1 +682,3 @@\n-        fatal(\"aux_index does not match even or odd indices\");\n+        const char* msg = \"Cannot resize table: Node hash code has changed possibly due to corruption of the contents.\";\n+        DEBUG_ONLY(fatal(\"%s Node hash code changed from \" SIZE_FORMAT \" to \" SIZE_FORMAT, msg, aux->saved_hash(), aux_hash);)\n+        NOT_DEBUG(fatal(\"%s\", msg);)\n@@ -895,0 +897,1 @@\n+  DEBUG_ONLY(new_node->set_saved_hash(hash);)\n@@ -1111,0 +1114,1 @@\n+  DEBUG_ONLY(new_node->set_saved_hash(hash);)\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8333356\n+ * @summary Verify new error message for corrupting string table contents.\n+ * @requires vm.flagless\n+ * @modules java.base\/java.lang:open\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver StringTableCorruptionTest test\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class StringTableCorruptionTest {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length > 0) {\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--add-opens\", \"java.base\/java.lang=ALL-UNNAMED\",\n+                                                             \"-XX:-CreateCoredumpOnCrash\", \"StringTableCorruptionTest\");\n+            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+            output.shouldContain(\"Node hash code has changed possibly due to corruption of the contents.\");\n+            output.shouldNotHaveExitValue(0);\n+            return;\n+        }\n+\n+        Field f = String.class.getDeclaredField(\"value\");\n+        f.setAccessible(true);\n+        f.set(\"s1\".intern(), f.get(\"s2\"));\n+        for (int i = 0; i < 4_000_000; i++) {\n+            (\"s_\" + i).intern();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/stringtable\/StringTableCorruptionTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}