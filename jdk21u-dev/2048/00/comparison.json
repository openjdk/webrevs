{"files":[{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+import java.awt.Toolkit;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JButton;\n+import jtreg.SkippedException;\n+\n+\/*\n+ * @test\n+ * @bug 4974135\n+ * @summary FileDialog should open current directory by default.\n+ * @requires (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @library \/test\/lib\n+ * @build PassFailJFrame\n+ * @build jtreg.SkippedException\n+ * @run main\/manual FileDialogOpenDirTest\n+ *\/\n+\n+public class FileDialogOpenDirTest {\n+    private static JButton initialize() {\n+        System.setProperty(\"sun.awt.disableGtkFileDialogs\", \"true\");\n+\n+        JButton open = new JButton(\"Open File Dialog\");\n+        open.addActionListener(e -> {\n+            new FileDialog((Frame) null).setVisible(true);\n+        });\n+\n+        return open;\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        String toolkit = Toolkit.getDefaultToolkit().getClass().getName();\n+        if (!toolkit.equals(\"sun.awt.X11.XToolkit\")) {\n+            throw new SkippedException(\"Test is not designed for toolkit \" + toolkit);\n+        }\n+\n+        String curdir = System.getProperty(\"user.dir\");\n+        String instructions = \"\"\"\n+                        Click the \\\"Open File Dialog\\\" button below to open FileDialog.\n+                        Verify that the directory opened is current directory, that is:\n+                        $curdir,\n+                        If so press Pass, otherwise press Fail\n+                        \"\"\".replace(\"$curdir\", curdir);\n+\n+        PassFailJFrame.builder()\n+                .title(\"Directory File Dialog Test Instructions\")\n+                .instructions(instructions)\n+                .rows((int) instructions.lines().count() + 1)\n+                .columns(40)\n+                .splitUIBottom(FileDialogOpenDirTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FileDialog\/FileDialogOpenDirTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--\n-  @test\n-  @bug 4974135\n-  @summary FileDialog should open current directory by default.\n-  @author tav@sparc.spb.su: area=awt.filedialog\n-  @run applet\/manual=yesno FileDialogOpenDirTest.html\n-  -->\n-<head>\n-<title>FileDialogOpenDirTest<\/title>\n-<\/head>\n-<body>\n-\n-<h1>FileDialogOpenDirTest<br>Bug ID: 4974135<\/h1>\n-\n-<p>See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"FileDialogOpenDirTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/FileDialog\/FileDialogOpenDirTest\/FileDialogOpenDirTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,239 +0,0 @@\n-\/*\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- test\n- @bug 4974135\n- @summary FileDialog should open current directory by default.\n- @author tav@sparc.spb.su area=awt.filedialog\n- @run applet\/manual=yesno FileDialogOpenDirTest.html\n-*\/\n-\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.applet.*;\n-\n-public class FileDialogOpenDirTest extends Applet {\n-\n-    public static void main(String[] args) {\n-        Applet a = new FileDialogOpenDirTest();\n-        a.init();\n-        a.start();\n-    }\n-\n-    public void init()\n-    {\n-        System.setProperty(\"sun.awt.disableGtkFileDialogs\",\"true\");\n-        \/\/Create instructions for the user here, as well as set up\n-        \/\/ the environment -- set the layout manager, add buttons,\n-        \/\/ etc.\n-        this.setLayout (new BorderLayout ());\n-\n-        String curdir = System.getProperty(\"user.dir\");\n-\n-        String[] instructions1 =\n-        {\n-            \"After test started you will see 'Test Frame' with a button inside.\",\n-            \"Click the button to open FileDialog.\",\n-            \"Verify that the directory opened is current directory, that is:\",\n-            curdir,\n-            \"If so press PASSED, otherwise FAILED.\"\n-        };\n-\n-        String[] instructions2 =\n-        {\n-            \"The test is not applicable for current platform. Press PASSED.\"\n-        };\n-\n-        Sysout.createDialogWithInstructions(Toolkit.getDefaultToolkit().getClass().getName().\n-                                            equals(\"sun.awt.X11.XToolkit\") ?\n-                                            instructions1 : instructions2);\n-    }\n-\n-    public void start() {\n-        Frame frame = new Frame(\"Test Frame\");\n-        Button open = new Button(\"Open File Dialog\");\n-\n-        open.addActionListener(new ActionListener() {\n-                public void actionPerformed(ActionEvent e) {\n-                    new FileDialog(new Frame()).show();\n-                }\n-            });\n-\n-        frame.setLayout(new FlowLayout());\n-        frame.add(open);\n-\n-        int x = 0;\n-        int y = 0;\n-        Component dlg = null;\n-\n-        if ((dlg = Sysout.getDialog()) != null) {\n-            x = dlg.getBounds().x + dlg.getBounds().width;\n-            y = dlg.getBounds().y;\n-        }\n-        frame.setBounds(x, y, 150, 70);\n-        frame.setVisible(true);\n-    }\n-}\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-    public static Component getDialog() {\n-        return dialog;\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/FileDialog\/FileDialogOpenDirTest\/FileDialogOpenDirTest.java","additions":0,"deletions":239,"binary":false,"changes":239,"status":"deleted"}]}