{"files":[{"patch":"@@ -39,1 +39,1 @@\n- * @run main\/othervm\/timeout=300 GetStackTraceALotWhenPinned 200000\n+ * @run main\/othervm\/timeout=300 GetStackTraceALotWhenPinned 50000\n@@ -46,1 +46,1 @@\n-import jdk.test.lib.thread.VThreadRunner;   \/\/ ensureParallelism requires jdk.management\n+import jdk.test.lib.thread.VThreadRunner;\n@@ -90,2 +90,2 @@\n-        long lastTimestamp = System.currentTimeMillis();\n-        for (int i = 0; i < iterations; i++) {\n+        long lastTime = System.nanoTime();\n+        for (int i = 1; i <= iterations; i++) {\n@@ -98,4 +98,9 @@\n-            long currentTime = System.currentTimeMillis();\n-            if ((currentTime - lastTimestamp) > 500) {\n-                System.out.format(\"%s %d remaining ...%n\", Instant.now(), (iterations - i));\n-                lastTimestamp = currentTime;\n+            long currentTime = System.nanoTime();\n+            if (i == iterations || ((currentTime - lastTime) > 1_000_000_000L)) {\n+                System.out.format(\"%s => %d of %d%n\", Instant.now(), i, iterations);\n+                lastTime = currentTime;\n+            }\n+\n+            if (Thread.currentThread().isInterrupted()) {\n+                \/\/ fail quickly if interrupted by jtreg\n+                throw new RuntimeException(\"interrupted\");\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/GetStackTraceALotWhenPinned.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"}]}