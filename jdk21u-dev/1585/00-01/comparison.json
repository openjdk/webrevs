{"files":[{"patch":"@@ -203,7 +203,1 @@\n-                    if (endStreamReceived() && rf.getErrorCode() == ResetFrame.NO_ERROR) {\n-                        \/\/ If END_STREAM is already received, complete the requestBodyCF successfully\n-                        \/\/ and stop sending any request data.\n-                        requestBodyCF.complete(null);\n-                    } else {\n-                        handleReset(rf, subscriber);\n-                    }\n+                    handleReset(rf, subscriber);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ *        jdk.test.lib.RandomFactory jdk.test.lib.Utils\n@@ -44,2 +45,0 @@\n-import java.net.InetAddress;\n-import java.net.InetSocketAddress;\n@@ -61,4 +60,0 @@\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.RejectedExecutionException;\n-import java.util.concurrent.TimeUnit;\n@@ -67,1 +62,0 @@\n-import jdk.httpclient.test.lib.http2.Http2TestServer;\n@@ -69,1 +63,0 @@\n-import javax.net.ssl.SSLHandshakeException;\n@@ -71,3 +64,0 @@\n-import com.sun.net.httpserver.HttpServer;\n-import com.sun.net.httpserver.HttpsConfigurator;\n-import com.sun.net.httpserver.HttpsServer;\n@@ -75,0 +65,1 @@\n+import jdk.test.lib.Utils;\n@@ -214,1 +205,1 @@\n-            if (client.awaitTermination(Duration.ofMillis(2000))) {\n+            if (client.awaitTermination(Duration.ofMillis(Utils.adjustTimeout(1000)))) {\n@@ -276,1 +267,1 @@\n-            if (client.awaitTermination(Duration.ofMillis(2000))) {\n+            if (client.awaitTermination(Duration.ofMillis(Utils.adjustTimeout(1000)))) {\n","filename":"test\/jdk\/java\/net\/httpclient\/ShutdownNow.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"}]}