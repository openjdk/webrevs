{"files":[{"patch":"@@ -2049,0 +2049,6 @@\n+  if (init->is_CastII()) {\n+    \/\/ skip over the cast added by PhaseIdealLoop::cast_incr_before_loop() when pre\/post\/main loops are created because\n+    \/\/ it can get in the way of type propagation\n+    assert(init->as_CastII()->carry_dependency() && loop_head->skip_assertion_predicates_with_halt() == init->in(0), \"casted iv phi from pre loop expected\");\n+    init = init->in(1);\n+  }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325494\n+ * @summary C2: Broken graph after not skipping CastII node anymore for Assertion Predicates after JDK-8309902\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:CompileOnly=TestAssertionPredicateDoesntConstantFold::test TestAssertionPredicateDoesntConstantFold\n+ *\n+ *\/\n+\n+public class TestAssertionPredicateDoesntConstantFold {\n+    static boolean bFld;\n+    static int iArrFld[];\n+    static long lArrFld[];\n+\n+    public static void main(String[] strArr) {\n+        try {\n+            test();\n+        } catch (NullPointerException npe) {}\n+    }\n+\n+    static long test() {\n+        int i6 = 1, i7, i11;\n+        do {\n+            for (i7 = 1; i7 < 9; ++i7) {\n+                for (i11 = 2; i6 < i11; i11 -= 2) {\n+                    if (bFld) {\n+                        break;\n+                    }\n+\n+                    lArrFld[i11 + 1] = 6;\n+                    iArrFld[i11 % 20] = 3;\n+                }\n+            }\n+        } while (++i6 < 8);\n+\n+        return i6;\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/TestAssertionPredicateDoesntConstantFold.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}