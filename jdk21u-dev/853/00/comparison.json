{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-      if (getMethod().getName().asString().equals(\"wait\") &&\n+      if (getMethod().getName().asString().equals(\"wait0\") &&\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/JavaVFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+    private static Object lockObj = new Object();\n@@ -39,0 +40,10 @@\n+    public static void waitMethod() {\n+        synchronized (lockObj) {\n+            try {\n+                lockObj.wait(300000);\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+\n@@ -44,0 +55,1 @@\n+        Thread objectWait = new Thread(() -> waitMethod());\n@@ -49,0 +61,1 @@\n+        objectWait.start();\n@@ -56,1 +69,2 @@\n-               (primitiveLock.getState() != Thread.State.TIMED_WAITING)) {\n+               (primitiveLock.getState() != Thread.State.TIMED_WAITING) ||\n+               (objectWait.getState() != Thread.State.TIMED_WAITING)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/LingeredAppWithLock.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+ * @bug 8185796 8335743\n@@ -60,1 +61,2 @@\n-                \"^\\\\s+- locked <0x[0-9a-f]+> \\\\(a java\\\\.lang\\\\.Class for int\\\\)$\"));\n+                \"^\\\\s+- locked <0x[0-9a-f]+> \\\\(a java\\\\.lang\\\\.Class for int\\\\)$\",\n+                \"^\\\\s+- waiting on <0x[0-9a-f]+> \\\\(a java\\\\.lang\\\\.Object\\\\)$\"));\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestClhsdbJstackLock.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @bug 8185796 8335743\n@@ -67,0 +68,1 @@\n+            out.shouldMatch(\"^\\\\s+- waiting on <0x[0-9a-f]+> \\\\(a java\\\\.lang\\\\.Object\\\\)$\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestJhsdbJstackLock.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}