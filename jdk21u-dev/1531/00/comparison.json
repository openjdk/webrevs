{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,3 +85,2 @@\n-    static final String DEBUGGEE_LOCATION1 = DEBUGGEE_CLASS + \"$Nested$DeeperNested$DeepestNested:43\";\n-    static final String DEBUGGEE_LOCATION2 = DEBUGGEE_CLASS + \"$Inner$MoreInner:57\";\n-    static final String FAILURE_PATTERN = \"Unable to set\";\n+    static final String DEBUGGEE_LOCATION1 = DEBUGGEE_CLASS + \"$Nested$DeeperNested$DeepestNested:64\";\n+    static final String DEBUGGEE_LOCATION2 = DEBUGGEE_CLASS + \"$Inner$MoreInner:78\";\n@@ -90,6 +89,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -104,1 +97,9 @@\n-        jdb.contToExit(3);\n+        if (!checkBreakpointHit(DEBUGGEE_LOCATION1)) {\n+            success = false;\n+        }\n+\n+        if (!checkBreakpointHit(DEBUGGEE_LOCATION2)) {\n+            success = false;\n+        }\n+\n+        jdb.contToExit(1);\n@@ -107,1 +108,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n@@ -111,1 +112,0 @@\n-        boolean result = true;\n@@ -117,1 +117,19 @@\n-        found = grep.findFirst(FAILURE_PATTERN);\n+        found = grep.findFirst(\"Deferring breakpoint \" + location);\n+        if (found.length() == 0) {\n+            log.complain(\"jdb failed to setup deferred breakpoint at line: \" + location);\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    private boolean checkBreakpointHit(String location) {\n+        Paragrep grep;\n+        String[] reply;\n+        String found;\n+\n+        log.display(\"continuing to breakpoint at line: \" + location);\n+        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        grep = new Paragrep(reply);\n+\n+        found = grep.findFirst(\"Unable to set deferred breakpoint\");\n@@ -119,2 +137,14 @@\n-            log.complain(\"jdb failed to set line breakpoint at line: \" + found);\n-            result = false;\n+            log.complain(\"jdb failed to set deferred breakpoint at line: \" + location);\n+            return false;\n+        }\n+\n+        found = grep.findFirst(\"Set deferred breakpoint \" + location);\n+        if (found.length() == 0) {\n+            log.complain(\"jdb failed to set deferred breakpoint at line: \" + location);\n+            return false;\n+        }\n+\n+        found = grep.findFirst(\"Breakpoint hit: \\\"thread=main\\\", \");\n+        if (found.length() == 0) {\n+            log.complain(\"jdb failed to hit breakpoint at line: \" + location);\n+            return false;\n@@ -123,1 +153,1 @@\n-        return result;\n+        return true;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002.java","additions":47,"deletions":17,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+\/\/    THIS TEST IS LINE NUMBER SENSITIVE\n+\n@@ -62,1 +64,1 @@\n-                    flag = input; \/* <--------  This is line number 43 *\/\n+                    flag = input; \/* <--------  This is line number 64 *\/\n@@ -76,1 +78,1 @@\n-                content += input; \/* <--------  This is line number 57 *\/\n+                content += input; \/* <--------  This is line number 78 *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002a.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}