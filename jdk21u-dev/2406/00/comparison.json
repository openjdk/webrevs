{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,2 +111,1 @@\n-        debugee = Debugee.prepareDebugee(argsHandler, logHandler,\n-                debugeeName + (argsHandler.verbose() ? \" -vbs\" : \"\"));\n+        debugee = Debugee.prepareDebugee(argsHandler, logHandler, debugeeName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Accessible\/isPackagePrivate\/accipp001.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-                       ThreadReference thread = debuggee.threadByNameOrThrow(methodName);\n+                       ThreadReference thread = debuggee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/hashCode\/hashcode001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-        ThreadReference thread = debugee.threadByName(\"main\");\n+        ThreadReference thread = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/_bounds_\/requests001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -253,0 +253,1 @@\n+        debuggee.setMainThread(event.thread());\n@@ -260,1 +261,1 @@\n-        ThreadReference mainThread = debuggee.threadByNameOrThrow(\"main\");\n+        ThreadReference mainThread = debuggee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/suspendPolicy\/suspendpolicy001.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,1 +142,1 @@\n-        ThreadReference mainThread = debuggee.threadByName(\"main\");\n+        ThreadReference mainThread = debuggee.mainThread();\n@@ -459,0 +459,1 @@\n+        debuggee.setMainThread(event.thread());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Method\/isObsolete\/isobsolete003.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,0 +116,3 @@\n+        ClassPrepareEvent cpEvent = debuggee.waitForClassPrepare(DEBUGGEE_NAME);\n+        debuggee.setMainThread(cpEvent.thread());\n+\n@@ -138,1 +141,1 @@\n-            checkedThread = debuggee.threadByName(\"main\");\n+            checkedThread = debuggee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryEvent\/method\/method002.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,0 +113,3 @@\n+        ClassPrepareEvent cpEvent = debuggee.waitForClassPrepare(DEBUGGEE_NAME);\n+        debuggee.setMainThread(cpEvent.thread());\n+\n@@ -134,1 +137,1 @@\n-            checkedThread = debuggee.threadByName(\"main\");\n+            checkedThread = debuggee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitEvent\/method\/method001.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,3 @@\n+        ClassPrepareEvent cpEvent = debuggee.waitForClassPrepare(DEBUGGEE_NAME);\n+        debuggee.setMainThread(cpEvent.thread());\n+\n@@ -139,1 +142,1 @@\n-            checkedThread = debuggee.threadByName(\"main\");\n+            checkedThread = debuggee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitEvent\/method\/method002.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-        ThreadReference mainThread = debuggee.threadByName(\"main\");\n+        ThreadReference mainThread = debuggee.mainThread();\n@@ -293,0 +293,2 @@\n+        debuggee.setMainThread(event.thread()); \/\/ Needed so debuggee.mainThread() will work\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/entryCount\/entrycount002.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-        ThreadReference mainThread = debuggee.threadByName(\"main\");\n+        ThreadReference mainThread = debuggee.mainThread();\n@@ -301,0 +301,2 @@\n+        debuggee.setMainThread(event.thread()); \/\/ Needed so debuggee.mainThread() will work\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/owningThread\/owningthread002.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-        ThreadReference thread = debugee.threadByName(\"main\");\n+        ThreadReference thread = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/_bounds_\/bounds002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        ThreadReference thread = debugee.threadByName(\"main\");\n+        ThreadReference thread = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/_bounds_\/filters001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-        ThreadReference thread = debugee.threadByName(\"main\");\n+        ThreadReference thread = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/_bounds_\/bounds001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -170,1 +170,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses004.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -158,1 +158,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -168,1 +168,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses005.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -170,1 +170,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses006.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,1 +167,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -177,1 +177,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses007.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -175,1 +175,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses008.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -167,1 +167,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses009.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -169,1 +169,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses010.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -171,1 +171,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses011.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -167,1 +167,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses012.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,1 +164,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -174,1 +174,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses013.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -175,1 +175,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses014.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -185,1 +185,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -195,1 +195,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses015.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,1 +166,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n@@ -176,1 +176,0 @@\n-        thrd = debugee.threadByName(\"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses016.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,1 +239,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses020.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -236,1 +236,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses022.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,1 +295,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses024.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,1 +270,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses025.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,1 +209,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses026.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,1 +268,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses027.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -213,1 +213,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses028.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -234,1 +234,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses030.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses031.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,1 @@\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n+        ThreadReference thrd = debugee.mainThread();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses032.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * In addition to the general abities to control of debugee VM process,\n+ * In addition to the general abilities to control the debugee VM process\n@@ -45,1 +45,1 @@\n- * handling events, and so on.).\n+ * handling events, and so on).\n@@ -64,0 +64,6 @@\n+    \/** wait time in ms. *\/\n+    protected long waitTime;\n+\n+    \/** Stashed ThreadReference for debuggee \"main\" thread. Not always setup. *\/\n+    protected ThreadReference mainThread;\n+\n@@ -69,0 +75,1 @@\n+        this.waitTime = argumentHandler.getWaitTime() * 60000;\n@@ -76,0 +83,1 @@\n+        this.waitTime = argumentHandler.getWaitTime() * 60000;\n@@ -267,0 +275,15 @@\n+    public void setMainThread(ThreadReference thread) {\n+        String threadName = thread.name();\n+        if (!threadName.equals(\"main\")) {\n+            throw new TestBug(\"Thread is not \\\"main\\\" thread: \" + threadName);\n+        }\n+        mainThread = thread;\n+    }\n+\n+    public ThreadReference mainThread() {\n+        if (mainThread == null) {\n+            throw new JDITestRuntimeException(\"** mainThrad has not been set **\");\n+        }\n+        return mainThread;\n+    }\n+\n@@ -579,1 +602,0 @@\n-\n@@ -581,0 +603,6 @@\n+\n+        \/\/ Get the ClassPrepareEvent for the main class for the sole purpose\n+        \/\/ of using it to get the ThreadReference for the \"main\" thread.\n+        ClassPrepareEvent cpEvent = debugee.waitForClassPrepare(mainClassName);\n+        debugee.setMainThread(cpEvent.thread());\n+\n@@ -588,0 +616,31 @@\n+    public ClassPrepareEvent waitForClassPrepare(String classname) {\n+        Event event;\n+        EventRequestManager eventRManager = getEventRequestManager();\n+        ClassPrepareRequest cpRequest = eventRManager.createClassPrepareRequest();\n+        cpRequest.setSuspendPolicy(EventRequest.SUSPEND_ALL);\n+        cpRequest.addClassFilter(classname);\n+        cpRequest.addCountFilter(1);\n+\n+        cpRequest.enable();\n+        vm.resume();\n+        try {\n+            event = (ClassPrepareEvent)waitingEvent(cpRequest, waitTime);\n+        } catch (InterruptedException e) {\n+            throw new Failure(\"Thread interrupted while waiting for ClassPrepareEvent: \" + e);\n+        }\n+        cpRequest.disable();\n+\n+        if (!(event instanceof ClassPrepareEvent)) {\n+            throw new Failure(\"Unexpected Event: \" + event);\n+        }\n+\n+        ClassPrepareEvent cpEvent = (ClassPrepareEvent)event;\n+        ReferenceType cls = cpEvent.referenceType();\n+        if (!cls.name().equals(classname)) {\n+            throw new Failure(\"Unexpected ClassName for ClassPrepareEvent: \" + cls.name());\n+        }\n+\n+        display(\"received: ClassPrepareEvent for class: \" + classname);\n+        return cpEvent;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Debugee.java","additions":62,"deletions":3,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- *      8301206 8303472\n+ *      8301206 8303472 8367021\n","filename":"test\/jdk\/sun\/text\/resources\/LocaleDataTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}