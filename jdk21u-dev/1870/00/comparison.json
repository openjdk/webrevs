{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,6 @@\n+                || (cs instanceof CESU_8)\n+                || (cs instanceof UTF_32)\n+                || (cs instanceof UTF_32BE)\n+                || (cs instanceof UTF_32BE_BOM)\n+                || (cs instanceof UTF_32LE)\n+                || (cs instanceof UTF_32LE_BOM)\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/Unicode.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,2 @@\n-                || (cs instanceof EUC_JP));\n+                || (cs instanceof EUC_JP)\n+                || (cs instanceof EUC_JP_Open));\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/EUC_JP_Open.java.template","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -62,1 +62,2 @@\n-                || (cs instanceof ISO2022_JP));\n+                || (cs instanceof ISO2022_JP)\n+                || (cs instanceof JISAutoDetect));\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/JISAutoDetect.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6798572\n+ * @bug 6798572 8167252\n@@ -96,0 +96,2 @@\n+\n+        containsSelfTest();\n@@ -106,0 +108,21 @@\n+    \/**\n+     * Tests the assertion in the contains() method: \"Every charset contains itself.\"\n+     *\/\n+    static void containsSelfTest() {\n+        boolean failed = false;\n+\n+        for (var entry : Charset.availableCharsets().entrySet()) {\n+            Charset charset = entry.getValue();\n+            boolean contains = charset.contains(charset);\n+\n+            System.out.println(\"Charset(\" + charset.name() + \").contains(Charset(\" + charset.name()\n+                        + \")) returns \" + contains);\n+            if (!contains) {\n+                failed = true;\n+            }\n+        }\n+        if (failed) {\n+            throw new RuntimeException(\"Charset.contains(itself) returns false for some charsets\");\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/Contains.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"}]}