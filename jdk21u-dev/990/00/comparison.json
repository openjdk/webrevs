{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.annotations.Level;\n@@ -55,1 +56,0 @@\n-@State(Scope.Thread)\n@@ -66,8 +66,0 @@\n-    Provider p;\n-    static byte[] pk;\n-    static byte[] msg;\n-    static byte[] sig;\n-    static Signature v;\n-\n-    @Param({\"noop\"})\n-    private String test;\n@@ -81,9 +73,1 @@\n-    @Setup\n-    public void setup() throws Exception {\n-        p = Security.getProvider(\"SUN\");\n-        if (p == null) {\n-            throw new Exception (\"Can't load \\\"Sun\\\" provider\");\n-        }\n-    }\n-\n-    public Signature getVerifier(byte[] pk) throws Exception {\n+    public static Signature getVerifier(byte[] pk) throws Exception {\n@@ -98,5 +82,2 @@\n-    @Benchmark\n-    public void verify() throws Exception {\n-        if (v == null) {\n-            return;\n-        }\n+    public static void verify(Signature v, byte[] pk, byte[] msg, byte[] sig)\n+            throws Exception {\n@@ -110,1 +91,5 @@\n-    public static class test01 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test01 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -223,2 +208,0 @@\n-\n-            v = getVerifier(pk);\n@@ -229,1 +212,5 @@\n-    public static class test02 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test02 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -379,2 +366,0 @@\n-\n-            v = getVerifier(pk);\n@@ -385,1 +370,5 @@\n-    public static class test03 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test03 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -488,2 +477,0 @@\n-\n-            v = getVerifier(pk);\n@@ -494,1 +481,5 @@\n-    public static class test04 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test04 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -602,2 +593,0 @@\n-\n-            v = getVerifier(pk);\n@@ -608,1 +597,5 @@\n-    public static class test05 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test05 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -744,2 +737,0 @@\n-\n-            v = getVerifier(pk);\n@@ -750,1 +741,5 @@\n-    public static class test06 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test06 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -891,2 +886,0 @@\n-\n-            v = getVerifier(pk);\n@@ -898,1 +891,5 @@\n-    public static class test07 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test07 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -1119,2 +1116,0 @@\n-\n-            v = getVerifier(pk);\n@@ -1126,1 +1121,5 @@\n-    public static class test08 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test08 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -1352,2 +1351,0 @@\n-\n-            v = getVerifier(pk);\n@@ -1359,1 +1356,5 @@\n-    public static class test09 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test09 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -1585,2 +1586,0 @@\n-\n-            v = getVerifier(pk);\n@@ -1592,1 +1591,5 @@\n-    public static class test10 extends HSS {\n+    @State(Scope.Benchmark)\n+    public static class test10 {\n+        byte[] pk;\n+        byte[] msg;\n+        byte[] sig;\n@@ -1823,0 +1826,51 @@\n+        }\n+    }\n+\n+    @State(Scope.Thread)\n+    public static class verifier01 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test01 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier02 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test02 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier03 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test03 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier04 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test04 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier05 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test05 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier06 {\n+        Signature v;\n@@ -1824,1 +1878,12 @@\n-            v = getVerifier(pk);\n+        @Setup\n+        public void setup(test06 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier07 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test07 test) throws Exception {\n+            v = getVerifier(test.pk);\n@@ -1827,0 +1892,68 @@\n+    @State(Scope.Thread)\n+    public static class verifier08 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test08 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier09 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test09 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+    @State(Scope.Thread)\n+    public static class verifier10 {\n+        Signature v;\n+\n+        @Setup\n+        public void setup(test10 test) throws Exception {\n+            v = getVerifier(test.pk);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void verify01(test01 test, verifier01 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify02(test02 test, verifier02 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify03(test03 test, verifier03 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify04(test04 test, verifier04 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify05(test05 test, verifier05 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify06(test06 test, verifier06 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify07(test07 test, verifier07 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify08(test08 test, verifier08 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify09(test09 test, verifier09 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n+    @Benchmark\n+    public void verify10(test10 test, verifier10 v) throws Exception {\n+        HSS.verify(v.v, test.pk, test.msg, test.sig);\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/HSS.java","additions":186,"deletions":53,"binary":false,"changes":239,"status":"modified"}]}