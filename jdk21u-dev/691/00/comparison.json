{"files":[{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4028130\n+ * @summary Test dynamically adding and removing a menu bar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AddRemoveMenuBarTest_1\n+ *\/\n+\n+public class AddRemoveMenuBarTest_1 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        An initially empty frame should appear.\n+\n+        Click anywhere in the frame to add a menu bar at the top of the frame.\n+\n+        Click again to replace the menu bar with another menu bar.\n+\n+        Each menu bar has one (empty) menu, labelled with the\n+        number of the menu bar appearing.\n+\n+        After a menubar is added, the frame should not be resized nor repositioned\n+        on the screen;\n+\n+        it should have the same size and position.\n+\n+        Upon test completion, click Pass or Fail appropriately.\n+        \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+                .title(\"AddRemoveMenuBarTest_1 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(5)\n+                .rows(18)\n+                .columns(45)\n+                .build();\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            AddRemoveMenuBar_1 frame = new AddRemoveMenuBar_1();\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+        });\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n+class AddRemoveMenuBar_1 extends Frame {\n+    int menuCount;\n+\n+    AddRemoveMenuBar_1() {\n+        super(\"AddRemoveMenuBar_1\");\n+        setSize(200, 200);\n+        menuCount = 0;\n+\n+        addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                setMenuBar();\n+            }\n+        });\n+    }\n+\n+    void setMenuBar() {\n+        MenuBar bar = new MenuBar();\n+        bar.add(new Menu(Integer.toString(menuCount++)));\n+        setMenuBar(bar);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_1.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4028130\n+ * @key headful\n+ * @summary Test dynamically adding and removing a menu bar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AddRemoveMenuBarTest_2\n+ *\/\n+\n+public class AddRemoveMenuBarTest_2 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            A frame with a menu bar appears.\n+\n+            Click anywhere in the frame to replace the menu bar with\n+            another one.\n+\n+            Each menu bar has one (empty) menu, 'foo'.\n+\n+            After the menu bar replacement, the containing frame\n+            should not be resized nor repositioned on the screen.\n+\n+            Upon test completion, click Pass or Fail appropriately.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+                .title(\"AddRemoveMenuBarTest_2 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(5)\n+                .rows(15)\n+                .columns(45)\n+                .build();\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            AddRemoveMenuBar_2 frame = new AddRemoveMenuBar_2();\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+        });\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n+class AddRemoveMenuBar_2 extends Frame {\n+    AddRemoveMenuBar_2() {\n+        super(\"AddRemoveMenuBar_2\");\n+        setSize(200, 200);\n+        setMenuBar();\n+        addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                setMenuBar();\n+            }\n+        });\n+    }\n+\n+    int count = 0;\n+\n+    void setMenuBar() {\n+        MenuBar bar = new MenuBar();\n+        bar.add(new Menu(\"foo \" + count++));\n+        super.setMenuBar(bar);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_2.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,195 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Checkbox;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.Panel;\n+import java.awt.Rectangle;\n+import java.awt.TextField;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4017504\n+ * @summary Test dynamically adding and removing a menu bar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AddRemoveMenuBarTest_3\n+ *\/\n+\n+public class AddRemoveMenuBarTest_3  {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            A frame at (100,100) contains two (2) rows of three (3) text\n+            fields each, and under this, a checkbox labelled 'Use menubar'.\n+\n+            The first row's text fields pertain to the x coordinates and\n+            the second row's text fields pertain to the y coordinates.\n+\n+            The first column, 'request', is an input only field for frame\n+            location. (press enter to apply).\n+\n+            The second column, 'reported', is an output only\n+            field reporting frame location.\n+\n+            The third column, 'inset', is an output only field reporting\n+            the frame's inset values.\n+\n+            You can click the 'Use menubar' checkbox to alternately add\n+            and remove a menu bar containing an (empty) 'Help' menu.\n+\n+            After a menubar is added or removed, the frame should not\n+            have been resized nor repositioned on the screen and the\n+            y inset should accurately reflect the presence or absence\n+            of the menubar within the inset.\n+\n+            The insets always include the window manager's title and border\n+            decorations, if any.\n+\n+            Upon test completion, click Pass or Fail appropriately.\n+            \"\"\";\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+                .title(\"AddRemoveMenuBarTest_3 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(5)\n+                .rows(30)\n+                .columns(38)\n+                .build();\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            AddRemoveMenuBar_3 frame = new AddRemoveMenuBar_3();\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(null,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+        });\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n+class AddRemoveMenuBar_3 extends Frame {\n+    TextField xfield;\n+    TextField yfield;\n+\n+    TextField xfield_out;\n+    TextField yfield_out;\n+    TextField xinset_out;\n+    TextField yinset_out;\n+\n+    Checkbox menu_checkbox;\n+    MenuBar menubar;\n+\n+    public AddRemoveMenuBar_3() {\n+        super(\"AddRemoveMenuBar_3\");\n+\n+        menubar = new MenuBar();\n+        menubar.setHelpMenu(new Menu(\"Help\"));\n+\n+        setLayout(new BorderLayout());\n+        Panel p = new Panel();\n+        add(\"Center\", p);\n+        p.setLayout(new GridLayout(3, 3));\n+\n+        menu_checkbox = new Checkbox(\"Use menubar\");\n+        add(\"South\", menu_checkbox);\n+\n+        xfield = new TextField();\n+        yfield = new TextField();\n+        xfield_out = new TextField();\n+        xfield_out.setEditable(false);\n+        xfield_out.setFocusable(false);\n+        yfield_out = new TextField();\n+        yfield_out.setEditable(false);\n+        yfield_out.setFocusable(false);\n+\n+        xinset_out = new TextField();\n+        xinset_out.setEditable(false);\n+        xinset_out.setFocusable(false);\n+        yinset_out = new TextField();\n+        yinset_out.setEditable(false);\n+        yinset_out.setFocusable(false);\n+\n+        p.add(new Label(\"request\"));\n+        p.add(new Label(\"reported\"));\n+        p.add(new Label(\"inset\"));\n+\n+        p.add(xfield);\n+        p.add(xfield_out);\n+        p.add(xinset_out);\n+\n+        p.add(yfield);\n+        p.add(yfield_out);\n+        p.add(yinset_out);\n+\n+        setSize(200, 200);\n+        setLocation(100, 100);\n+\n+        addComponentListener(new ComponentAdapter() {\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                xfield_out.setText(Integer.toString(getLocation().x));\n+                yfield_out.setText(Integer.toString(getLocation().y));\n+\n+                xinset_out.setText(Integer.toString(getInsets().left));\n+                yinset_out.setText(Integer.toString(getInsets().top));\n+            }\n+        });\n+\n+        ActionListener setLocationListener = e -> {\n+            Rectangle r = getBounds();\n+            try {\n+                r.x = Integer.parseInt(xfield.getText());\n+                r.y = Integer.parseInt(yfield.getText());\n+            } catch (java.lang.NumberFormatException ignored) {\n+            }\n+\n+            setLocation(r.x, r.y);\n+        };\n+\n+        xfield.addActionListener(setLocationListener);\n+        yfield.addActionListener(setLocationListener);\n+\n+        menu_checkbox.addItemListener(e -> {\n+            if (menu_checkbox.getState()) {\n+                setMenuBar(menubar);\n+            } else {\n+                setMenuBar(null);\n+            }\n+\n+            validate();\n+            xinset_out.setText(Integer.toString(getInsets().left));\n+            yinset_out.setText(Integer.toString(getInsets().top));\n+        });\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_3.java","additions":195,"deletions":0,"binary":false,"changes":195,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4071086\n+ * @key headful\n+ * @summary Test dynamically adding and removing a menu bar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AddRemoveMenuBarTest_4\n+ *\/\n+\n+public class AddRemoveMenuBarTest_4 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            There is a frame with a menubar and a single button.\n+\n+            The button is labelled 'Add new MenuBar'.\n+\n+            If you click the button, the menubar is replaced with another menubar.\n+            This can be done repeatedly.\n+\n+            The <n>-th menubar contains one menu, 'TestMenu<n>',\n+            with two items, 'one <n>' and 'two <n>'.\n+\n+            Click again to replace the menu bar with another menu bar.\n+\n+            After a menubar has been replaced with another menubar,\n+            the frame should not be resized nor repositioned on the screen.\n+\n+            Upon test completion, click Pass or Fail appropriately.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+                .title(\"AddRemoveMenuBarTest_4 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(5)\n+                .rows(18)\n+                .columns(45)\n+                .build();\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            AddRemoveMenuBar_4 frame = new AddRemoveMenuBar_4();\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+        });\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n+class AddRemoveMenuBar_4 extends Frame {\n+    int count = 1;\n+    MenuBar mb = null;\n+\n+    AddRemoveMenuBar_4() {\n+        super(\"AddRemoveMenuBar_4\");\n+        setLayout(new FlowLayout());\n+\n+        Button b = new Button(\"Add new MenuBar\");\n+        b.addActionListener((e) -> createMenuBar());\n+        add(b);\n+\n+        createMenuBar();\n+\n+        setSize(300, 300);\n+    }\n+\n+    void createMenuBar() {\n+        if (mb != null) {\n+            remove(mb);\n+        }\n+\n+        mb = new MenuBar();\n+        Menu m = new Menu(\"TestMenu\" + count);\n+        m.add(new MenuItem(\"one \" + count));\n+        m.add(new MenuItem(\"two \" + count));\n+        count++;\n+        mb.add(m);\n+        setMenuBar(mb);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_4.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"}]}