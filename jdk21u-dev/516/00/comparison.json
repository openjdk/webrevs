{"files":[{"patch":"@@ -723,1 +723,1 @@\n-  if (is_simm32(offset)) {\n+  if (is_valid_32bit_offset(offset)) {\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -643,0 +643,8 @@\n+  \/\/ The signed 20-bit upper imm can materialize at most negative 0xF...F80000000, two G.\n+  \/\/ The following signed 12-bit imm can at max subtract 0x800, two K, from that previously loaded two G.\n+  bool is_valid_32bit_offset(int64_t x) {\n+    constexpr int64_t twoG = (2 * G);\n+    constexpr int64_t twoK = (2 * K);\n+    return x < (twoG - twoK) && x >= (-twoG - twoK);\n+  }\n+\n@@ -797,1 +805,1 @@\n-    if (is_simm32(distance)) {                                                                     \\\n+    if (is_valid_32bit_offset(distance)) {                                                         \\\n@@ -854,1 +862,1 @@\n-    if (is_simm32(distance)) {                                                                     \\\n+    if (is_valid_32bit_offset(distance)) {                                                         \\\n@@ -915,1 +923,1 @@\n-    if (is_simm32(distance)) {                                                                     \\\n+    if (is_valid_32bit_offset(distance)) {                                                         \\\n@@ -960,1 +968,1 @@\n-    if (is_simm32(distance)) {                                                                     \\\n+    if (is_valid_32bit_offset(distance)) {                                                         \\\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"}]}