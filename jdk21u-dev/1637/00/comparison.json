{"files":[{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.GridLayout;\n+import java.awt.Panel;\n+import java.awt.Window;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4140293\n+ * @summary Tests that focus is returned to the correct Component when a Frame\n+ *          is reactivated.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FocusTest\n+ *\/\n+\n+public class FocusTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+              Click on the bottom rectangle. Move the mouse slightly.\n+              A focus rectangle should appear around the bottom rectangle.\n+\n+              Now, deactivate the window and then reactivate it.\n+              (You would click on the caption bar of another window,\n+              and then on the caption bar of the FocusTest Frame.)\n+\n+              If the focus rectangle appears again, the test passes.\n+              If it does not appear, or appears around the top rectangle,\n+              the test fails.\n+              \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"FocusTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .logArea(6)\n+                .testUI(FocusTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Frame frame = new Frame(\"FocusTest\");\n+\n+        frame.add(new FocusTestPanel());\n+        frame.setSize(400, 400);\n+\n+        frame.addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                frame.dispose();\n+            }\n+        });\n+\n+        frame.validate();\n+        return frame;\n+    }\n+\n+    private static class FocusTestPanel extends Panel {\n+        PassiveClient pc1 = new PassiveClient(\"pc1\");\n+        PassiveClient pc2 = new PassiveClient(\"pc2\");\n+\n+        public FocusTestPanel() {\n+            super();\n+            setLayout(new GridLayout(2, 1, 10, 10));\n+            add(pc1);\n+            add(pc2);\n+        }\n+    }\n+\n+    private static class PassiveClient extends Canvas implements FocusListener {\n+        boolean haveFocus = false;\n+        final String name;\n+\n+        PassiveClient(String name) {\n+            super();\n+            this.name = name;\n+            setSize(400, 100);\n+            setBackground(Color.cyan);\n+            setVisible(true);\n+            setEnabled(true);\n+            addMouseListener(new MouseAdapter() {\n+                @Override\n+                public void mouseClicked(MouseEvent e) {\n+                    requestFocus();\n+                }\n+            });\n+            addFocusListener(this);\n+        }\n+\n+        public void paint(Graphics g) {\n+            g.setColor(getBackground());\n+            Dimension size = getSize();\n+            g.fillRect(0, 0, size.width, size.height);\n+            if (haveFocus) {\n+                g.setColor(Color.black);\n+                g.drawRect(0, 0, size.width - 1, size.height - 1);\n+                g.drawRect(1, 1, size.width - 3, size.height - 3);\n+            }\n+            g.setColor(getForeground());\n+        }\n+\n+        public void focusGained(FocusEvent event) {\n+            haveFocus = true;\n+            paint(getGraphics());\n+            PassFailJFrame.log(\"<<<< %s Got focus!! %s>>>>\".formatted(this, event));\n+        }\n+\n+        public void focusLost(FocusEvent event) {\n+            haveFocus = false;\n+            paint(getGraphics());\n+            PassFailJFrame.log(\"<<<< %s Lost focus!! %s>>>>\".formatted(this, event));\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"PassiveClient \" + name;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/FocusTest.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"}]}