{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/libAsyncExceptionOnMonitorEnter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/libStopAtExit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/libSuspendAtExit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        if (runnable == NULL)  return JNI_FALSE;\n+        if (runnable == nullptr)  return JNI_FALSE;\n@@ -45,1 +45,1 @@\n-        if (methodId == NULL)  return JNI_FALSE;\n+        if (methodId == nullptr)  return JNI_FALSE;\n@@ -52,1 +52,1 @@\n-        if (test_class_A == NULL)  return JNI_FALSE;\n+        if (test_class_A == nullptr)  return JNI_FALSE;\n@@ -55,1 +55,1 @@\n-        if (test_class_B == NULL)  return JNI_FALSE;\n+        if (test_class_B == nullptr)  return JNI_FALSE;\n@@ -58,1 +58,1 @@\n-        if (test_staticM_id == NULL)  return JNI_FALSE;\n+        if (test_staticM_id == nullptr)  return JNI_FALSE;\n@@ -61,1 +61,1 @@\n-        if (test_staticS_id == NULL)  return JNI_FALSE;\n+        if (test_staticS_id == nullptr)  return JNI_FALSE;\n@@ -64,1 +64,1 @@\n-        if (test_staticN_id == NULL)  return JNI_FALSE;\n+        if (test_staticN_id == nullptr)  return JNI_FALSE;\n@@ -67,1 +67,1 @@\n-        if (test_A_m_id == NULL)  return JNI_FALSE;\n+        if (test_A_m_id == nullptr)  return JNI_FALSE;\n@@ -70,1 +70,1 @@\n-        if (test_staticF_id == NULL)  return JNI_FALSE;\n+        if (test_staticF_id == nullptr)  return JNI_FALSE;\n@@ -73,1 +73,1 @@\n-        if (test_A_f_id == NULL)  return JNI_FALSE;\n+        if (test_A_f_id == nullptr)  return JNI_FALSE;\n@@ -108,2 +108,2 @@\n-          return NULL;\n-        } else if (obj == NULL) {\n+          return nullptr;\n+        } else if (obj == nullptr) {\n@@ -112,1 +112,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -121,2 +121,2 @@\n-          return NULL;\n-        } else if (obj == NULL) {\n+          return nullptr;\n+        } else if (obj == nullptr) {\n@@ -125,1 +125,1 @@\n-          return NULL;\n+          return nullptr;\n","filename":"test\/hotspot\/jtreg\/runtime\/clinit\/libClassInitBarrier.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    elem_ = NULL;\n+    elem_ = nullptr;\n@@ -103,1 +103,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -132,1 +132,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -138,1 +138,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -146,1 +146,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -197,1 +197,1 @@\n-  if (agct == NULL) {\n+  if (agct == nullptr) {\n@@ -202,1 +202,1 @@\n-  agct(&trace, MAX_DEPTH, NULL);\n+  agct(&trace, MAX_DEPTH, nullptr);\n@@ -217,2 +217,2 @@\n-  if (trace.frames[0].method_id == NULL) {\n-    fprintf(stderr, \"First frame method_id is NULL\\n\");\n+  if (trace.frames[0].method_id == nullptr) {\n+    fprintf(stderr, \"First frame method_id is null\\n\");\n@@ -222,1 +222,1 @@\n-  jvmtiError err = jvmti->GetMethodName(trace.frames[0].method_id, name.get_addr(), NULL, NULL);\n+  jvmtiError err = jvmti->GetMethodName(trace.frames[0].method_id, name.get_addr(), nullptr, nullptr);\n@@ -228,2 +228,2 @@\n-  if (name.get() == NULL) {\n-    fprintf(stderr, \"Name is NULL\\n\");\n+  if (name.get() == nullptr) {\n+    fprintf(stderr, \"Name is null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/AsyncGetCallTrace\/libAsyncGetCallTraceTest.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL);\n+    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr);\n@@ -67,1 +67,1 @@\n-    jvmti->RunAgentThread(agent_thread, GenerateEventsThread, NULL, JVMTI_THREAD_NORM_PRIORITY);\n+    jvmti->RunAgentThread(agent_thread, GenerateEventsThread, nullptr, JVMTI_THREAD_NORM_PRIORITY);\n@@ -86,1 +86,1 @@\n-    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/CompiledMethodLoad\/libCompiledZombie.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n@@ -37,2 +37,2 @@\n-    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, NULL);\n-    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, NULL);\n+    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, nullptr);\n+    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/DynamicCodeGenerated\/libDynamicCodeGenerated.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,3 @@\n-static JavaVM *java_vm = NULL;\n-static jthread exp_thread = NULL;\n-static jvmtiEnv *jvmti1 = NULL;\n+static JavaVM *java_vm = nullptr;\n+static jthread exp_thread = nullptr;\n+static jvmtiEnv *jvmti1 = nullptr;\n@@ -51,4 +51,4 @@\n-  JNIEnv* env = NULL;\n-  jthread thread = NULL;\n-  char* name = NULL;\n-  char* sign = NULL;\n+  JNIEnv* env = nullptr;\n+  jthread thread = nullptr;\n+  char* name = nullptr;\n+  char* sign = nullptr;\n@@ -70,1 +70,1 @@\n-  err = jvmti->GetMethodName(method, &name, &sign, NULL);\n+  err = jvmti->GetMethodName(method, &name, &sign, nullptr);\n@@ -114,1 +114,1 @@\n-  jthread thread = NULL;\n+  jthread thread = nullptr;\n@@ -122,1 +122,1 @@\n-  err = jvmti1->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL);\n+  err = jvmti1->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr);\n@@ -128,1 +128,1 @@\n-  err = jvmti1->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL);\n+  err = jvmti1->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GenerateEvents\/libGenerateEvents1.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,3 @@\n-static JavaVM *java_vm = NULL;\n-static jthread exp_thread = NULL;\n-static jvmtiEnv *jvmti2 = NULL;\n+static JavaVM *java_vm = nullptr;\n+static jthread exp_thread = nullptr;\n+static jvmtiEnv *jvmti2 = nullptr;\n@@ -51,4 +51,4 @@\n-  JNIEnv* env = NULL;\n-  jthread thread = NULL;\n-  char* name = NULL;\n-  char* sign = NULL;\n+  JNIEnv* env = nullptr;\n+  jthread thread = nullptr;\n+  char* name = nullptr;\n+  char* sign = nullptr;\n@@ -70,1 +70,1 @@\n-  err = jvmti->GetMethodName(method, &name, &sign, NULL);\n+  err = jvmti->GetMethodName(method, &name, &sign, nullptr);\n@@ -116,1 +116,1 @@\n-  err = jvmti2->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL);\n+  err = jvmti2->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr);\n@@ -124,1 +124,1 @@\n-  err = jvmti2->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL);\n+  err = jvmti2->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GenerateEvents\/libGenerateEvents2.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,1 +44,1 @@\n-  if (options != NULL && strcmp(options, \"maintain_original_method_order\") == 0) {\n+  if (options != nullptr && strcmp(options, \"maintain_original_method_order\") == 0) {\n@@ -61,1 +61,1 @@\n-  jmethodID* methods = NULL;\n+  jmethodID* methods = nullptr;\n@@ -65,1 +65,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -69,1 +69,1 @@\n-  if (method_cls == NULL) {\n+  if (method_cls == nullptr) {\n@@ -71,1 +71,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -73,2 +73,2 @@\n-  jobjectArray array = env->NewObjectArray(method_count, method_cls, NULL);\n-  if (array == NULL) {\n+  jobjectArray array = env->NewObjectArray(method_count, method_cls, nullptr);\n+  if (array == nullptr) {\n@@ -76,1 +76,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -84,1 +84,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -88,1 +88,1 @@\n-    if (array == NULL) {\n+    if (array == nullptr) {\n@@ -90,1 +90,1 @@\n-      return NULL;\n+      return nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetClassMethods\/libOverpassMethods.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -170,1 +170,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -226,1 +226,1 @@\n-  jmethodID mid = NULL;\n+  jmethodID mid = nullptr;\n@@ -228,1 +228,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -235,1 +235,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetLocalVariable\/libGetLocalVars.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,1 +58,1 @@\n-  jobject msg = NULL;\n+  jobject msg = nullptr;\n@@ -104,1 +104,1 @@\n-  const jobject msg = NULL;\n+  const jobject msg = nullptr;\n@@ -166,1 +166,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetLocalVariable\/libGetSetLocalUnsuspended.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -106,1 +106,1 @@\n-  target_info = NULL;\n+  target_info = nullptr;\n@@ -118,1 +118,1 @@\n-  if (target_info == NULL) {\n+  if (target_info == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetThreadListStackTraces\/libOneGetThreadListStackTraces.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  if (res != JNI_OK || env == NULL) {\n+  if (res != JNI_OK || env == nullptr) {\n@@ -82,1 +82,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -260,1 +260,1 @@\n-    err = jvmti->IterateOverReachableObjects(NULL \/*jvmtiHeapRootCallback*\/,\n+    err = jvmti->IterateOverReachableObjects(nullptr \/*jvmtiHeapRootCallback*\/,\n@@ -262,1 +262,1 @@\n-                                             NULL \/* jvmtiObjectReferenceCallback *\/,\n+                                             nullptr \/* jvmtiObjectReferenceCallback *\/,\n@@ -297,2 +297,2 @@\n-                                  NULL \/* no class filter *\/,\n-                                  NULL \/* no initial object, follow roots *\/,\n+                                  nullptr \/* no class filter *\/,\n+                                  nullptr \/* no initial object, follow roots *\/,\n@@ -311,1 +311,1 @@\n-                                    NULL \/* no class filter *\/,\n+                                    nullptr \/* no class filter *\/,\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/Heap\/libIterateHeapWithEscapeAnalysisEnabled.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jvmtiEnv *second_jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jvmtiEnv *second_jvmti = nullptr;\n@@ -141,1 +141,1 @@\n-    char *name = NULL, *signature = NULL, *file_name = NULL;\n+    char *name = nullptr, *signature = nullptr, *file_name = nullptr;\n@@ -169,2 +169,2 @@\n-    \/\/ Compare now, none should be NULL.\n-    if (name == NULL) {\n+    \/\/ Compare now, none should be null.\n+    if (name == nullptr) {\n@@ -175,1 +175,1 @@\n-    if (file_name == NULL) {\n+    if (file_name == nullptr) {\n@@ -180,1 +180,1 @@\n-    if (signature == NULL) {\n+    if (signature == nullptr) {\n@@ -207,1 +207,1 @@\n-    char *name = NULL, *signature = NULL, *file_name = NULL;\n+    char *name = nullptr, *signature = nullptr, *file_name = nullptr;\n@@ -230,2 +230,2 @@\n-    \/\/ Compare now, none should be NULL.\n-    if (name == NULL) {\n+    \/\/ Compare now, none should be null.\n+    if (name == nullptr) {\n@@ -235,1 +235,1 @@\n-    if (file_name == NULL) {\n+    if (file_name == nullptr) {\n@@ -239,1 +239,1 @@\n-    if (signature == NULL) {\n+    if (signature == nullptr) {\n@@ -270,1 +270,1 @@\n-    jclass frame_class = NULL;\n+    jclass frame_class = nullptr;\n@@ -274,4 +274,4 @@\n-    jstring string_object = NULL;\n-    const char* method = NULL;\n-    const char* file_name = NULL;\n-    const char* signature = NULL;\n+    jstring string_object = nullptr;\n+    const char* method = nullptr;\n+    const char* file_name = nullptr;\n+    const char* signature = nullptr;\n@@ -413,1 +413,1 @@\n-  if (old_object != NULL) {\n+  if (old_object != nullptr) {\n@@ -499,1 +499,1 @@\n-    if (trace == NULL) {\n+    if (trace == nullptr) {\n@@ -592,1 +592,1 @@\n-    if (!jni->IsSameObject(object, NULL)) {\n+    if (!jni->IsSameObject(object, nullptr)) {\n@@ -599,1 +599,1 @@\n-      live_object->object = NULL;\n+      live_object->object = nullptr;\n@@ -612,1 +612,1 @@\n-    free(array[i]), array[i] = NULL;\n+    free(array[i]), array[i] = nullptr;\n@@ -625,1 +625,1 @@\n-  free(storage->live_objects), storage->live_objects = NULL;\n+  free(storage->live_objects), storage->live_objects = nullptr;\n@@ -804,1 +804,1 @@\n-      JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL),\n+      JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr),\n@@ -810,1 +810,1 @@\n-      JVMTI_ENABLE, JVMTI_EVENT_SAMPLED_OBJECT_ALLOC, NULL),\n+      JVMTI_ENABLE, JVMTI_EVENT_SAMPLED_OBJECT_ALLOC, nullptr),\n@@ -821,1 +821,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -828,1 +828,1 @@\n-  if (res != JNI_OK || second_jvmti == NULL) {\n+  if (res != JNI_OK || second_jvmti == nullptr) {\n@@ -898,1 +898,1 @@\n-      JVMTI_DISABLE, JVMTI_EVENT_SAMPLED_OBJECT_ALLOC, NULL),\n+      JVMTI_DISABLE, JVMTI_EVENT_SAMPLED_OBJECT_ALLOC, nullptr),\n@@ -902,1 +902,1 @@\n-      JVMTI_DISABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL),\n+      JVMTI_DISABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr),\n@@ -917,2 +917,2 @@\n-  if (native_frames == NULL) {\n-    env->FatalError(\"Error in get_native_frames: malloc returned NULL\\n\");\n+  if (native_frames == nullptr) {\n+    env->FatalError(\"Error in get_native_frames: malloc returned null\\n\");\n@@ -939,1 +939,1 @@\n-  free(native_frames), native_frames = NULL;\n+  free(native_frames), native_frames = nullptr;\n@@ -954,1 +954,1 @@\n-  free(native_frames), native_frames = NULL;\n+  free(native_frames), native_frames = nullptr;\n@@ -969,1 +969,1 @@\n-  free(native_frames), native_frames = NULL;\n+  free(native_frames), native_frames = nullptr;\n@@ -1088,1 +1088,1 @@\n-      JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, NULL),\n+      JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, nullptr),\n@@ -1108,1 +1108,1 @@\n-  if (env->ExceptionOccurred() || cls == NULL) {\n+  if (env->ExceptionOccurred() || cls == nullptr) {\n@@ -1113,1 +1113,1 @@\n-  if (env->ExceptionOccurred() || constructor == NULL) {\n+  if (env->ExceptionOccurred() || constructor == nullptr) {\n@@ -1120,1 +1120,1 @@\n-  if (env->ExceptionOccurred() || result == NULL) {\n+  if (env->ExceptionOccurred() || result == nullptr) {\n@@ -1140,2 +1140,2 @@\n-    if (allocate_object(jni_env) == NULL) {\n-      jni_env->FatalError(\"allocate_object returned NULL\\n\");\n+    if (allocate_object(jni_env) == nullptr) {\n+      jni_env->FatalError(\"allocate_object returned null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HeapMonitor\/libHeapMonitorTest.cpp","additions":41,"deletions":41,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-  char* csig = NULL;\n+  char* csig = nullptr;\n@@ -55,1 +55,1 @@\n-  jmethodID *methods = NULL;\n+  jmethodID *methods = nullptr;\n@@ -57,3 +57,3 @@\n-  if (clazz == NULL) {\n-    jni->FatalError(\"is_hidden_mid: Error: FindClass returned NULL for java\/lang\/Class\\n\");\n-    return NULL;\n+  if (clazz == nullptr) {\n+    jni->FatalError(\"is_hidden_mid: Error: FindClass returned null for java\/lang\/Class\\n\");\n+    return nullptr;\n@@ -64,1 +64,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -73,1 +73,1 @@\n-  static jmethodID is_hid_mid = NULL;\n+  static jmethodID is_hid_mid = nullptr;\n@@ -75,1 +75,1 @@\n-  if (is_hid_mid == NULL) {\n+  if (is_hid_mid == nullptr) {\n@@ -91,2 +91,2 @@\n-  char* sig = NULL;\n-  char* gsig = NULL;\n+  char* sig = nullptr;\n+  char* gsig = nullptr;\n@@ -106,2 +106,2 @@\n-  if (is_hidden && gsig == NULL) {\n-    LOG0(\"check_class_signature: FAIL: unexpected NULL generic signature for hidden class\\n\");\n+  if (is_hidden && gsig == nullptr) {\n+    LOG0(\"check_class_signature: FAIL: unexpected null generic signature for hidden class\\n\");\n@@ -155,2 +155,2 @@\n-  jobject loader = NULL;\n-  jclass* loader_classes = NULL;\n+  jobject loader = nullptr;\n+  jclass* loader_classes = nullptr;\n@@ -169,1 +169,1 @@\n-    char* sig = NULL;\n+    char* sig = nullptr;\n@@ -177,1 +177,1 @@\n-    err = jvmti->GetClassSignature(kls, &sig, NULL);\n+    err = jvmti->GetClassSignature(kls, &sig, nullptr);\n@@ -190,1 +190,1 @@\n-  char* sig = NULL;\n+  char* sig = nullptr;\n@@ -192,1 +192,1 @@\n-  jclass* interfaces = NULL;\n+  jclass* interfaces = nullptr;\n@@ -204,1 +204,1 @@\n-  err = jvmti->GetClassSignature(interfaces[0], &sig, NULL);\n+  err = jvmti->GetClassSignature(interfaces[0], &sig, nullptr);\n@@ -218,1 +218,1 @@\n-  char* source_file_name = NULL;\n+  char* source_file_name = nullptr;\n@@ -240,1 +240,1 @@\n-  char* source_file_name = NULL;\n+  char* source_file_name = nullptr;\n@@ -253,2 +253,2 @@\n-  char* sig = NULL;\n-  char* gsig = NULL;\n+  char* sig = nullptr;\n+  char* gsig = nullptr;\n@@ -266,2 +266,2 @@\n-    if (gsig == NULL) {\n-      LOG1(\"%s event: FAIL: GetClassSignature returned NULL generic signature for hidden class\\n\", event_name);\n+    if (gsig == nullptr) {\n+      LOG1(\"%s event: FAIL: GetClassSignature returned null generic signature for hidden class\\n\", event_name);\n@@ -296,1 +296,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -300,1 +300,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -330,1 +330,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -344,1 +344,1 @@\n-  const char* exp_sig = jni->GetStringUTFChars(exp_sig_str, NULL);\n+  const char* exp_sig = jni->GetStringUTFChars(exp_sig_str, nullptr);\n@@ -346,2 +346,2 @@\n-  if (exp_sig == NULL) {\n-    jni->FatalError(\"check_hidden_class: Error: JNI GetStringChars returned NULL for jstring\\n\");\n+  if (exp_sig == nullptr) {\n+    jni->FatalError(\"check_hidden_class: Error: JNI GetStringChars returned null for jstring\\n\");\n@@ -358,1 +358,1 @@\n-  const char* exp_sig = jni->GetStringUTFChars(exp_sig_str, NULL);\n+  const char* exp_sig = jni->GetStringUTFChars(exp_sig_str, nullptr);\n@@ -360,2 +360,2 @@\n-  if (exp_sig == NULL) {\n-    jni->FatalError(\"check_hidden_class_array: Error: JNI GetStringChars returned NULL for jstring\\n\");\n+  if (exp_sig == nullptr) {\n+    jni->FatalError(\"check_hidden_class_array: Error: JNI GetStringChars returned null for jstring\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HiddenClass\/libHiddenClassSigTest.cpp","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        _log(\"SavedClassBytes: NULL\\n\");\n+        _log(\"SavedClassBytes: null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/MissedStackMapFrames\/libMissedStackMapFrames.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,1 +155,1 @@\n-            _log(\"%s: savedClassBytes is NULL\\n\", mode);\n+            _log(\"%s: savedClassBytes is null\\n\", mode);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineRetransform\/libRedefineRetransform.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -45,1 +45,1 @@\n-    err = jvmti->GetClassSignature(klass, &buf, NULL);\n+    err = jvmti->GetClassSignature(klass, &buf, nullptr);\n@@ -98,1 +98,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -104,1 +104,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SetBreakpoint\/libTestManyBreakpoints.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -58,1 +58,1 @@\n-    checkJvmti(jvmti->IterateOverHeap(tagged ? JVMTI_HEAP_OBJECT_TAGGED : JVMTI_HEAP_OBJECT_EITHER, &heapObjectCallback, NULL), \"could not iterate\");\n+    checkJvmti(jvmti->IterateOverHeap(tagged ? JVMTI_HEAP_OBJECT_TAGGED : JVMTI_HEAP_OBJECT_EITHER, &heapObjectCallback, nullptr), \"could not iterate\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SetTag\/libTagMapTest.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,2 @@\n-static jvmtiEnv* jvmti = NULL;\n-static jthread* threads = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n+static jthread* threads = nullptr;\n@@ -54,1 +54,1 @@\n-  jvmtiError* results = NULL;\n+  jvmtiError* results = nullptr;\n@@ -56,1 +56,1 @@\n-  const char* tname = get_thread_name(jvmti, jni, NULL); \/\/ current thread name\n+  const char* tname = get_thread_name(jvmti, jni, nullptr); \/\/ current thread name\n@@ -108,1 +108,1 @@\n-  jvmtiError* results = NULL;\n+  jvmtiError* results = nullptr;\n@@ -138,1 +138,1 @@\n-    if (threads[i] != NULL) {\n+    if (threads[i] != nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SuspendWithCurrentThread\/libSuspendWithCurrentThread.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SuspendWithObjectMonitorEnter\/libSuspendWithObjectMonitorEnter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SuspendWithObjectMonitorWait\/libSuspendWithObjectMonitorWait.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n-static jvmtiEnv* jvmti = NULL;\n-static jrawMonitorID threadLock = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n+static jrawMonitorID threadLock = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/SuspendWithRawMonitorEnter\/libSuspendWithRawMonitorEnter.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-  char *signature = NULL;\n-  jvmtiError err = jvmti->GetClassSignature(cls, &signature, NULL);\n+  char *signature = nullptr;\n+  jvmtiError err = jvmti->GetClassSignature(cls, &signature, nullptr);\n@@ -83,1 +83,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC , NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC , nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/VMObjectAlloc\/libVMObjectAlloc.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -95,1 +95,1 @@\n-    if (sig != NULL && (strcmp(sig, CLASS_SIG) == 0)) {\n+    if (sig != nullptr && (strcmp(sig, CLASS_SIG) == 0)) {\n@@ -119,1 +119,1 @@\n-  const char* thr_name = thr_info.name == NULL ? \"NULL\" : thr_info.name;\n+  const char* thr_name = thr_info.name == nullptr ? \"null\" : thr_info.name;\n@@ -122,1 +122,1 @@\n-  if (thr_info.name == NULL || strcmp(thr_info.name, THREAD_NAME) != 0) {\n+  if (thr_info.name == nullptr || strcmp(thr_info.name, THREAD_NAME) != 0) {\n@@ -151,1 +151,1 @@\n-  if (clsSig == NULL || strcmp(clsSig, CLASS_SIG) != 0) {\n+  if (clsSig == nullptr || strcmp(clsSig, CLASS_SIG) != 0) {\n@@ -153,1 +153,1 @@\n-    LOG(\"TEST FAILED: Breakpoint event with unexpected class signature: %s\\n\\n\", (clsSig == NULL) ? \"NULL\" : clsSig);\n+    LOG(\"TEST FAILED: Breakpoint event with unexpected class signature: %s\\n\\n\", (clsSig == nullptr) ? \"null\" : clsSig);\n@@ -158,1 +158,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -233,1 +233,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -271,1 +271,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr);\n@@ -274,1 +274,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -277,1 +277,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -280,1 +280,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -286,1 +286,1 @@\n-  if (agent_lock == NULL)\n+  if (agent_lock == nullptr)\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Breakpoint\/breakpoint01\/libbreakpoint01.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -94,1 +94,1 @@\n-    if (sig != NULL &&\n+    if (sig != nullptr &&\n@@ -163,1 +163,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -200,1 +200,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ClassLoad\/classload01\/libclassload01.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-    if (methods[i] == NULL) {\n+    if (methods[i] == nullptr) {\n@@ -176,1 +176,1 @@\n-    if (fields[i] == NULL) {\n+    if (fields[i] == nullptr) {\n@@ -191,1 +191,1 @@\n-    if (interfaces[i] == NULL) {\n+    if (interfaces[i] == nullptr) {\n@@ -229,1 +229,1 @@\n-  if (inf.sig == NULL || strcmp(inf.sig, classes[eventsCount].sig) != 0) {\n+  if (inf.sig == nullptr || strcmp(inf.sig, classes[eventsCount].sig) != 0) {\n@@ -265,1 +265,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -302,1 +302,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -330,1 +330,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ClassPrepare\/classprep01\/libclassprep01.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -142,7 +142,7 @@\n-    if (ex.name != NULL && strcmp(ex.name, exs[i].name) == 0\n-        && ex.t_cls != NULL && strcmp(ex.t_cls, exs[i].t_cls) == 0\n-        && ex.t_name != NULL && strcmp(ex.t_name, exs[i].t_name) == 0\n-        && ex.t_sig != NULL && strcmp(ex.t_sig, exs[i].t_sig) == 0\n-        && ex.c_cls != NULL && strcmp(ex.c_cls, exs[i].c_cls) == 0\n-        && ex.c_name != NULL && strcmp(ex.c_name, exs[i].c_name) == 0\n-        && ex.c_sig != NULL && strcmp(ex.c_sig, exs[i].c_sig) == 0\n+    if (ex.name != nullptr && strcmp(ex.name, exs[i].name) == 0\n+        && ex.t_cls != nullptr && strcmp(ex.t_cls, exs[i].t_cls) == 0\n+        && ex.t_name != nullptr && strcmp(ex.t_name, exs[i].t_name) == 0\n+        && ex.t_sig != nullptr && strcmp(ex.t_sig, exs[i].t_sig) == 0\n+        && ex.c_cls != nullptr && strcmp(ex.c_cls, exs[i].c_cls) == 0\n+        && ex.c_name != nullptr && strcmp(ex.c_name, exs[i].c_name) == 0\n+        && ex.c_sig != nullptr && strcmp(ex.c_sig, exs[i].c_sig) == 0\n@@ -178,1 +178,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n@@ -220,1 +220,1 @@\n-  if (jvmti_env == NULL) {\n+  if (jvmti_env == nullptr) {\n@@ -225,1 +225,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -230,1 +230,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -235,1 +235,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -240,1 +240,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Exception\/exception01\/libexception01.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -110,4 +110,4 @@\n-    if (ex.name != NULL && strcmp(ex.name, exs[i].name) == 0\n-        && ex.c_cls != NULL && strcmp(ex.c_cls, exs[i].c_cls) == 0\n-        && ex.c_name != NULL && strcmp(ex.c_name, exs[i].c_name) == 0\n-        && ex.c_sig != NULL && strcmp(ex.c_sig, exs[i].c_sig) == 0\n+    if (ex.name != nullptr && strcmp(ex.name, exs[i].name) == 0\n+        && ex.c_cls != nullptr && strcmp(ex.c_cls, exs[i].c_cls) == 0\n+        && ex.c_name != nullptr && strcmp(ex.c_name, exs[i].c_name) == 0\n+        && ex.c_sig != nullptr && strcmp(ex.c_sig, exs[i].c_sig) == 0\n@@ -141,1 +141,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -183,1 +183,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -189,1 +189,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -194,1 +194,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -199,1 +199,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -204,1 +204,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -216,1 +216,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr);\n@@ -227,1 +227,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ExceptionCatch\/excatch01\/libexcatch01.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 2,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 2,\n@@ -70,1 +70,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 6,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 6,\n@@ -72,1 +72,1 @@\n-    { NULL, \"Lfieldacc01a;\",   \"run\", \"()I\", 15,\n+    { nullptr, \"Lfieldacc01a;\",   \"run\", \"()I\", 15,\n@@ -74,1 +74,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 19,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 19,\n@@ -76,1 +76,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 28,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 28,\n@@ -78,1 +78,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 32,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 32,\n@@ -80,1 +80,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 41,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 41,\n@@ -82,1 +82,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 45,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 45,\n@@ -84,1 +84,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 54,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 54,\n@@ -86,1 +86,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 58,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 58,\n@@ -88,1 +88,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 68,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 68,\n@@ -90,1 +90,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 72,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 72,\n@@ -92,1 +92,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 82,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 82,\n@@ -94,1 +94,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 86,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 86,\n@@ -96,1 +96,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 96,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 96,\n@@ -98,1 +98,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 100,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 100,\n@@ -100,1 +100,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 109,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 109,\n@@ -102,1 +102,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 113,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 113,\n@@ -104,1 +104,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 122,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 122,\n@@ -106,1 +106,1 @@\n-    { NULL, \"Lfieldacc01a;\", \"run\", \"()I\", 128,\n+    { nullptr, \"Lfieldacc01a;\", \"run\", \"()I\", 128,\n@@ -124,1 +124,1 @@\n-  watch.is_static = (obj == NULL) ? JNI_TRUE : JNI_FALSE;\n+  watch.is_static = (obj == nullptr) ? JNI_TRUE : JNI_FALSE;\n@@ -166,1 +166,1 @@\n-      if (watch.m_cls == NULL || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n+      if (watch.m_cls == nullptr || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n@@ -170,1 +170,1 @@\n-      if (watch.m_name == NULL || strcmp(watch.m_name, watches[i].m_name) != 0) {\n+      if (watch.m_name == nullptr || strcmp(watch.m_name, watches[i].m_name) != 0) {\n@@ -175,1 +175,1 @@\n-      if (watch.m_sig == NULL || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n+      if (watch.m_sig == nullptr || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n@@ -185,1 +185,1 @@\n-      if (watch.f_name == NULL || strcmp(watch.f_name, watches[i].f_name) != 0) {\n+      if (watch.f_name == nullptr || strcmp(watch.f_name, watches[i].f_name) != 0) {\n@@ -190,1 +190,1 @@\n-      if (watch.f_sig == NULL || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n+      if (watch.f_sig == nullptr || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n@@ -219,1 +219,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -248,1 +248,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -270,1 +270,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n@@ -292,1 +292,1 @@\n-    if (watches[i].fid == NULL) {\n+    if (watches[i].fid == nullptr) {\n@@ -320,1 +320,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc01\/libfieldacc01.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -70,1 +70,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -72,1 +72,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -74,1 +74,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -76,1 +76,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -78,1 +78,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -80,1 +80,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -82,1 +82,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -84,1 +84,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -86,1 +86,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -89,1 +89,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -91,1 +91,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -93,1 +93,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -95,1 +95,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -97,1 +97,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -99,1 +99,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -101,1 +101,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -103,1 +103,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -105,1 +105,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -107,1 +107,1 @@\n-    { NULL, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldacc02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -124,1 +124,1 @@\n-  watch.is_static = (obj == NULL) ? JNI_TRUE : JNI_FALSE;\n+  watch.is_static = (obj == nullptr) ? JNI_TRUE : JNI_FALSE;\n@@ -165,1 +165,1 @@\n-      if (watch.m_cls == NULL || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n+      if (watch.m_cls == nullptr || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n@@ -169,1 +169,1 @@\n-      if (watch.m_name == NULL || strcmp(watch.m_name, watches[i].m_name) != 0) {\n+      if (watch.m_name == nullptr || strcmp(watch.m_name, watches[i].m_name) != 0) {\n@@ -174,1 +174,1 @@\n-      if (watch.m_sig == NULL || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n+      if (watch.m_sig == nullptr || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n@@ -184,1 +184,1 @@\n-      if (watch.f_name == NULL || strcmp(watch.f_name, watches[i].f_name) != 0) {\n+      if (watch.f_name == nullptr || strcmp(watch.f_name, watches[i].f_name) != 0) {\n@@ -189,1 +189,1 @@\n-      if (watch.f_sig == NULL || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n+      if (watch.f_sig == nullptr || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n@@ -217,1 +217,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -246,1 +246,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -267,1 +267,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n@@ -290,1 +290,1 @@\n-    if (watches[i].fid == NULL) {\n+    if (watches[i].fid == nullptr) {\n@@ -316,1 +316,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc02\/libfieldacc02.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 3,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 3,\n@@ -70,1 +70,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 14,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 14,\n@@ -72,1 +72,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 25,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 25,\n@@ -74,1 +74,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 36,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 36,\n@@ -76,1 +76,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 47,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 47,\n@@ -78,1 +78,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 61,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 61,\n@@ -80,1 +80,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 74,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 74,\n@@ -82,1 +82,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 88,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 88,\n@@ -84,1 +84,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 100,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 100,\n@@ -86,1 +86,1 @@\n-    { NULL, \"Lfieldacc03a;\", \"run\", \"()I\", 111,\n+    { nullptr, \"Lfieldacc03a;\", \"run\", \"()I\", 111,\n@@ -103,1 +103,1 @@\n-  watch.is_static = (obj == NULL) ? JNI_TRUE : JNI_FALSE;\n+  watch.is_static = (obj == nullptr) ? JNI_TRUE : JNI_FALSE;\n@@ -145,1 +145,1 @@\n-      if (watch.m_cls == NULL || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n+      if (watch.m_cls == nullptr || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n@@ -149,1 +149,1 @@\n-      if (watch.m_name == NULL || strcmp(watch.m_name, watches[i].m_name) != 0) {\n+      if (watch.m_name == nullptr || strcmp(watch.m_name, watches[i].m_name) != 0) {\n@@ -154,1 +154,1 @@\n-      if (watch.m_sig == NULL || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n+      if (watch.m_sig == nullptr || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n@@ -164,1 +164,1 @@\n-      if (watch.f_name == NULL || strcmp(watch.f_name, watches[i].f_name) != 0) {\n+      if (watch.f_name == nullptr || strcmp(watch.f_name, watches[i].f_name) != 0) {\n@@ -169,1 +169,1 @@\n-      if (watch.f_sig == NULL || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n+      if (watch.f_sig == nullptr || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n@@ -197,1 +197,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -226,1 +226,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -259,1 +259,1 @@\n-    if (cls == NULL) {\n+    if (cls == nullptr) {\n@@ -269,1 +269,1 @@\n-    if (watches[i].fid == NULL) {\n+    if (watches[i].fid == nullptr) {\n@@ -294,1 +294,1 @@\n-    if (cls == NULL) {\n+    if (cls == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc03\/libfieldacc03.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    { NULL, \"Lfieldacc04a;\", \"run\", \"()I\", 2,\n+    { nullptr, \"Lfieldacc04a;\", \"run\", \"()I\", 2,\n@@ -71,1 +71,1 @@\n-    { NULL, \"Lfieldacc04a;\", \"run\", \"()I\", 12,\n+    { nullptr, \"Lfieldacc04a;\", \"run\", \"()I\", 12,\n@@ -90,1 +90,1 @@\n-  watch.is_static = (obj == NULL) ? JNI_TRUE : JNI_FALSE;\n+  watch.is_static = (obj == nullptr) ? JNI_TRUE : JNI_FALSE;\n@@ -132,1 +132,1 @@\n-      if (watch.m_cls == NULL ||  strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n+      if (watch.m_cls == nullptr ||  strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n@@ -136,1 +136,1 @@\n-      if (watch.m_name == NULL || strcmp(watch.m_name, watches[i].m_name) != 0) {\n+      if (watch.m_name == nullptr || strcmp(watch.m_name, watches[i].m_name) != 0) {\n@@ -141,1 +141,1 @@\n-      if (watch.m_sig == NULL || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n+      if (watch.m_sig == nullptr || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n@@ -151,1 +151,1 @@\n-      if (watch.f_name == NULL || strcmp(watch.f_name, watches[i].f_name) != 0) {\n+      if (watch.f_name == nullptr || strcmp(watch.f_name, watches[i].f_name) != 0) {\n@@ -156,1 +156,1 @@\n-      if (watch.f_sig == NULL || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n+      if (watch.f_sig == nullptr || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n@@ -184,1 +184,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -213,1 +213,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -246,1 +246,1 @@\n-    if (cls == NULL) {\n+    if (cls == nullptr) {\n@@ -256,1 +256,1 @@\n-    if (watches[i].fid == NULL) {\n+    if (watches[i].fid == nullptr) {\n@@ -282,1 +282,1 @@\n-    if (cls == NULL) {\n+    if (cls == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc04\/libfieldacc04.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 1,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 1,\n@@ -72,1 +72,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 5,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 5,\n@@ -74,1 +74,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 9,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 9,\n@@ -76,1 +76,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 13,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 13,\n@@ -78,1 +78,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 19,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 19,\n@@ -80,1 +80,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 24,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 24,\n@@ -82,1 +82,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 30,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 30,\n@@ -84,1 +84,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 35,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 35,\n@@ -86,1 +86,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 41,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 41,\n@@ -88,1 +88,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 47,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 47,\n@@ -91,1 +91,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 52,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 52,\n@@ -93,1 +93,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 58,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 58,\n@@ -95,1 +95,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 64,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 64,\n@@ -97,1 +97,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 70,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 70,\n@@ -99,1 +99,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 77,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 77,\n@@ -101,1 +101,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 83,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 83,\n@@ -103,1 +103,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 90,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 90,\n@@ -105,1 +105,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 96,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 96,\n@@ -107,1 +107,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 103,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 103,\n@@ -109,1 +109,1 @@\n-    { NULL, \"Lfieldmod01a;\", \"run\", \"()V\", 110,\n+    { nullptr, \"Lfieldmod01a;\", \"run\", \"()V\", 110,\n@@ -190,1 +190,1 @@\n-  watch.is_static = (obj == NULL) ? JNI_TRUE : JNI_FALSE;\n+  watch.is_static = (obj == nullptr) ? JNI_TRUE : JNI_FALSE;\n@@ -234,1 +234,1 @@\n-      if (watch.m_cls == NULL || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n+      if (watch.m_cls == nullptr || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n@@ -238,1 +238,1 @@\n-      if (watch.m_name == NULL || strcmp(watch.m_name, watches[i].m_name) != 0) {\n+      if (watch.m_name == nullptr || strcmp(watch.m_name, watches[i].m_name) != 0) {\n@@ -243,1 +243,1 @@\n-      if (watch.m_sig == NULL || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n+      if (watch.m_sig == nullptr || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n@@ -253,1 +253,1 @@\n-      if (watch.f_name == NULL || strcmp(watch.f_name, watches[i].f_name) != 0) {\n+      if (watch.f_name == nullptr || strcmp(watch.f_name, watches[i].f_name) != 0) {\n@@ -258,1 +258,1 @@\n-      if (watch.f_sig == NULL || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n+      if (watch.f_sig == nullptr || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n@@ -294,1 +294,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -324,1 +324,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -356,1 +356,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n@@ -367,1 +367,1 @@\n-    if (watches[i].fid == NULL) {\n+    if (watches[i].fid == nullptr) {\n@@ -415,1 +415,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldModification\/fieldmod01\/libfieldmod01.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -72,1 +72,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -74,1 +74,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -76,1 +76,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -78,1 +78,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -80,1 +80,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -82,1 +82,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -84,1 +84,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -86,1 +86,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -88,1 +88,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -91,1 +91,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -93,1 +93,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -95,1 +95,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -97,1 +97,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -99,1 +99,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -101,1 +101,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -103,1 +103,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -105,1 +105,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -107,1 +107,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -109,1 +109,1 @@\n-    { NULL, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n+    { nullptr, \"Lfieldmod02;\", \"check\", \"(Ljava\/lang\/Object;)I\", 0,\n@@ -190,1 +190,1 @@\n-  watch.is_static = (obj == NULL) ? JNI_TRUE : JNI_FALSE;\n+  watch.is_static = (obj == nullptr) ? JNI_TRUE : JNI_FALSE;\n@@ -235,1 +235,1 @@\n-      if (watch.m_cls == NULL || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n+      if (watch.m_cls == nullptr || strcmp(watch.m_cls, watches[i].m_cls) != 0) {\n@@ -239,1 +239,1 @@\n-      if (watch.m_name == NULL || strcmp(watch.m_name, watches[i].m_name) != 0) {\n+      if (watch.m_name == nullptr || strcmp(watch.m_name, watches[i].m_name) != 0) {\n@@ -244,1 +244,1 @@\n-      if (watch.m_sig == NULL || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n+      if (watch.m_sig == nullptr || strcmp(watch.m_sig, watches[i].m_sig) != 0) {\n@@ -254,1 +254,1 @@\n-      if (watch.f_name == NULL || strcmp(watch.f_name, watches[i].f_name) != 0) {\n+      if (watch.f_name == nullptr || strcmp(watch.f_name, watches[i].f_name) != 0) {\n@@ -259,1 +259,1 @@\n-      if (watch.f_sig == NULL || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n+      if (watch.f_sig == nullptr || strcmp(watch.f_sig, watches[i].f_sig) != 0) {\n@@ -295,1 +295,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -324,1 +324,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -359,1 +359,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n@@ -370,1 +370,1 @@\n-    if (watches[i].fid == NULL) {\n+    if (watches[i].fid == nullptr) {\n@@ -425,1 +425,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldModification\/fieldmod02\/libfieldmod02.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -114,1 +114,1 @@\n-    if (cls_sig == NULL || strcmp(cls_sig, pops[eventsCount].cls_sig) != 0) {\n+    if (cls_sig == nullptr || strcmp(cls_sig, pops[eventsCount].cls_sig) != 0) {\n@@ -119,1 +119,1 @@\n-    if (name == NULL || strcmp(name, pops[eventsCount].name) != 0) {\n+    if (name == nullptr || strcmp(name, pops[eventsCount].name) != 0) {\n@@ -124,1 +124,1 @@\n-    if (sig == NULL || strcmp(sig, pops[eventsCount].sig) != 0) {\n+    if (sig == nullptr || strcmp(sig, pops[eventsCount].sig) != 0) {\n@@ -155,1 +155,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -206,1 +206,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -221,1 +221,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr);\n@@ -226,1 +226,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -233,1 +233,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/framepop01\/libframepop01.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -119,1 +119,1 @@\n-  if (threads[i].tos == NULL) {\n+  if (threads[i].tos == nullptr) {\n@@ -134,1 +134,1 @@\n-  } while (threads[i].tos != NULL);\n+  } while (threads[i].tos != nullptr);\n@@ -158,1 +158,1 @@\n-    threads[i].tos = NULL;\n+    threads[i].tos = nullptr;\n@@ -162,1 +162,1 @@\n-  if (new_item == NULL) {\n+  if (new_item == nullptr) {\n@@ -249,1 +249,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -283,1 +283,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr);\n@@ -287,1 +287,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -298,1 +298,1 @@\n-  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL),\n+  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr),\n@@ -300,1 +300,1 @@\n-  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL),\n+  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr),\n@@ -307,1 +307,1 @@\n-  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, NULL),\n+  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, nullptr),\n@@ -309,1 +309,1 @@\n-  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, NULL),\n+  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr),\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/framepop02\/libframepop02.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -81,1 +81,1 @@\n-  if (cls_sig != NULL && strcmp(cls_sig, \"Lmentry01;\") == 0) {\n+  if (cls_sig != nullptr && strcmp(cls_sig, \"Lmentry01;\") == 0) {\n@@ -103,1 +103,1 @@\n-      if (entry.name == NULL || strcmp(entry.name, entries[eventsCount].name) != 0) {\n+      if (entry.name == nullptr || strcmp(entry.name, entries[eventsCount].name) != 0) {\n@@ -108,1 +108,1 @@\n-      if (entry.sig == NULL || strcmp(entry.sig, entries[eventsCount].sig) != 0) {\n+      if (entry.sig == nullptr || strcmp(entry.sig, entries[eventsCount].sig) != 0) {\n@@ -140,1 +140,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -179,1 +179,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -191,1 +191,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr);\n@@ -205,1 +205,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -222,1 +222,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -228,1 +228,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodEntry\/mentry01\/libmentry01.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-static jmethodID mid = NULL;\n+static jmethodID mid = nullptr;\n@@ -78,1 +78,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -119,1 +119,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -133,1 +133,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -139,1 +139,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr);\n@@ -148,1 +148,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodEntry\/mentry02\/libmentry02.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -76,1 +76,1 @@\n-  if (cls_sig != NULL && strcmp(cls_sig, \"Lmexit01a;\") == 0) {\n+  if (cls_sig != nullptr && strcmp(cls_sig, \"Lmexit01a;\") == 0) {\n@@ -98,1 +98,1 @@\n-      if (cls_sig == NULL || strcmp(cls_sig, exits[eventsCount].cls_sig) != 0) {\n+      if (cls_sig == nullptr || strcmp(cls_sig, exits[eventsCount].cls_sig) != 0) {\n@@ -103,1 +103,1 @@\n-      if (name == NULL || strcmp(name, exits[eventsCount].name) != 0) {\n+      if (name == nullptr || strcmp(name, exits[eventsCount].name) != 0) {\n@@ -108,1 +108,1 @@\n-      if (sig == NULL || strcmp(sig, exits[eventsCount].sig) != 0) {\n+      if (sig == nullptr || strcmp(sig, exits[eventsCount].sig) != 0) {\n@@ -140,1 +140,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -180,1 +180,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -185,1 +185,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -203,1 +203,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -217,1 +217,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -223,1 +223,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -230,1 +230,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodExit\/mexit01\/libmexit01.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -76,1 +76,1 @@\n-  if (cls_sig != NULL && strcmp(cls_sig, \"Lmexit02a;\") == 0) {\n+  if (cls_sig != nullptr && strcmp(cls_sig, \"Lmexit02a;\") == 0) {\n@@ -103,1 +103,1 @@\n-      if (cls_sig == NULL || strcmp(cls_sig, exits[eventsCount].cls_sig) != 0) {\n+      if (cls_sig == nullptr || strcmp(cls_sig, exits[eventsCount].cls_sig) != 0) {\n@@ -108,1 +108,1 @@\n-      if (name == NULL || strcmp(name, exits[eventsCount].name) != 0) {\n+      if (name == nullptr || strcmp(name, exits[eventsCount].name) != 0) {\n@@ -113,1 +113,1 @@\n-      if (sig == NULL || strcmp(sig, exits[eventsCount].sig) != 0) {\n+      if (sig == nullptr || strcmp(sig, exits[eventsCount].sig) != 0) {\n@@ -140,1 +140,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -181,1 +181,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -195,1 +195,1 @@\n-  if (clz == NULL) {\n+  if (clz == nullptr) {\n@@ -201,1 +201,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -206,1 +206,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -217,1 +217,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodExit\/mexit02\/libmexit02.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,2 +43,2 @@\n-static jthread expected_thread = NULL;\n-static jobject expected_object = NULL;\n+static jthread expected_thread = nullptr;\n+static jobject expected_object = nullptr;\n@@ -56,2 +56,2 @@\n-  if (expected_thread == NULL) {\n-    jni->FatalError(\"expected_thread is NULL.\");\n+  if (expected_thread == nullptr) {\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -60,2 +60,2 @@\n-  if (expected_object == NULL) {\n-    jni->FatalError(\"expected_object is NULL.\");\n+  if (expected_object == nullptr) {\n+    jni->FatalError(\"expected_object is null.\");\n@@ -75,1 +75,1 @@\n-  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL);\n+  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr);\n@@ -85,1 +85,1 @@\n-  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL);\n+  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr);\n@@ -142,1 +142,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -180,1 +180,1 @@\n-  set_agent_proc(agentProc, NULL);\n+  set_agent_proc(agentProc, nullptr);\n@@ -193,1 +193,1 @@\n-  if (expected_object == NULL) {\n+  if (expected_object == nullptr) {\n@@ -199,1 +199,1 @@\n-  if (thread == NULL) {\n+  if (thread == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEnter\/mcontenter01\/libmcontenter01.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,2 +40,2 @@\n-static jthread expected_thread = NULL;\n-static jobject expected_object = NULL;\n+static jthread expected_thread = nullptr;\n+static jobject expected_object = nullptr;\n@@ -54,2 +54,2 @@\n-  if (expected_thread == NULL) {\n-    jni->FatalError(\"expected_thread is NULL.\");\n+  if (expected_thread == nullptr) {\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -58,2 +58,2 @@\n-  if (expected_object == NULL) {\n-    jni->FatalError(\"expected_object is NULL.\");\n+  if (expected_object == nullptr) {\n+    jni->FatalError(\"expected_object is null.\");\n@@ -76,2 +76,2 @@\n-  if (expected_thread == NULL) {\n-    jni->FatalError(\"expected_thread is NULL.\");\n+  if (expected_thread == nullptr) {\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -80,2 +80,2 @@\n-  if (expected_object == NULL) {\n-    jni->FatalError(\"expected_object is NULL.\");\n+  if (expected_object == nullptr) {\n+    jni->FatalError(\"expected_object is null.\");\n@@ -100,1 +100,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr);\n@@ -107,1 +107,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr);\n@@ -119,1 +119,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE,JVMTI_EVENT_MONITOR_CONTENDED_ENTERED,NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE,JVMTI_EVENT_MONITOR_CONTENDED_ENTERED,nullptr);\n@@ -176,1 +176,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -217,1 +217,1 @@\n-  set_agent_proc(agentProc, NULL);\n+  set_agent_proc(agentProc, nullptr);\n@@ -230,1 +230,1 @@\n-  if (expected_object == NULL) {\n+  if (expected_object == nullptr) {\n@@ -236,1 +236,1 @@\n-  if (thread == NULL) {\n+  if (thread == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEntered\/mcontentered01\/libmcontentered01.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -39,2 +39,2 @@\n-static jthread expected_thread = NULL;\n-static jobject expected_object = NULL;\n+static jthread expected_thread = nullptr;\n+static jobject expected_object = nullptr;\n@@ -50,2 +50,2 @@\n-  if (expected_thread == NULL) {\n-    jni->FatalError(\"expected_thread is NULL.\");\n+  if (expected_thread == nullptr) {\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -54,2 +54,2 @@\n-  if (expected_object == NULL) {\n-    jni->FatalError(\"expected_object is NULL.\");\n+  if (expected_object == nullptr) {\n+    jni->FatalError(\"expected_object is null.\");\n@@ -73,1 +73,1 @@\n-  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, NULL);\n+  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr);\n@@ -83,1 +83,1 @@\n-  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAIT, NULL);\n+  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr);\n@@ -138,1 +138,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -176,1 +176,1 @@\n-  set_agent_proc(agentProc, NULL);\n+  set_agent_proc(agentProc, nullptr);\n@@ -185,1 +185,1 @@\n-  if (expected_object == NULL) {\n+  if (expected_object == nullptr) {\n@@ -191,1 +191,1 @@\n-  if (thread == NULL) {\n+  if (thread == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWait\/monitorwait01\/libmonitorwait01.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -39,2 +39,2 @@\n-static jthread expected_thread = NULL;\n-static jobject expected_object = NULL;\n+static jthread expected_thread = nullptr;\n+static jobject expected_object = nullptr;\n@@ -51,2 +51,2 @@\n-  if (expected_thread == NULL) {\n-    jni->FatalError(\"expected_thread is NULL.\");\n+  if (expected_thread == nullptr) {\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -55,2 +55,2 @@\n-  if (expected_object == NULL) {\n-    jni->FatalError(\"expected_object is NULL.\");\n+  if (expected_object == nullptr) {\n+    jni->FatalError(\"expected_object is null.\");\n@@ -74,1 +74,1 @@\n-  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, NULL);\n+  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr);\n@@ -84,1 +84,1 @@\n-  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAITED, NULL);\n+  jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr);\n@@ -139,1 +139,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -179,1 +179,1 @@\n-  set_agent_proc(agentProc, NULL);\n+  set_agent_proc(agentProc, nullptr);\n@@ -188,1 +188,1 @@\n-  if (expected_object == NULL) {\n+  if (expected_object == nullptr) {\n@@ -194,1 +194,1 @@\n-  if (thread == NULL) {\n+  if (thread == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWaited\/monitorwaited01\/libmonitorwaited01.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -79,1 +79,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -121,1 +121,1 @@\n-  jclass testedCls = NULL;\n+  jclass testedCls = nullptr;\n@@ -129,1 +129,1 @@\n-    if (testedCls == NULL) {\n+    if (testedCls == nullptr) {\n@@ -171,1 +171,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -206,1 +206,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind01\/libnativemethbind01.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -49,1 +49,1 @@\n-  char *methNam = NULL, *methSig = NULL;\n+  char *methNam = nullptr, *methSig = nullptr;\n@@ -63,1 +63,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -73,1 +73,1 @@\n-  if (methNam != NULL) {\n+  if (methNam != nullptr) {\n@@ -81,1 +81,1 @@\n-  if (methSig != NULL) {\n+  if (methSig != nullptr) {\n@@ -119,1 +119,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -153,1 +153,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n@@ -157,1 +157,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind02\/libnativemethbind02.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -75,1 +75,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -87,1 +87,1 @@\n-  if (methNam != NULL) {\n+  if (methNam != nullptr) {\n@@ -95,1 +95,1 @@\n-  if (methSig != NULL) {\n+  if (methSig != nullptr) {\n@@ -136,1 +136,1 @@\n-  jclass testedCls = NULL;\n+  jclass testedCls = nullptr;\n@@ -142,1 +142,1 @@\n-  if (testedCls == NULL) {\n+  if (testedCls == nullptr) {\n@@ -174,1 +174,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -210,1 +210,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n@@ -214,1 +214,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind03\/libnativemethbind03.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -87,1 +87,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -100,1 +100,1 @@\n-  if (methNam != NULL) {\n+  if (methNam != nullptr) {\n@@ -108,1 +108,1 @@\n-  if (methSig != NULL) {\n+  if (methSig != nullptr) {\n@@ -149,1 +149,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -182,1 +182,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/NativeMethodBind\/nativemethbind04\/libnativemethbind04.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -65,1 +65,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -89,1 +89,1 @@\n-    if (sig != NULL && (strcmp(sig, CLASS_SIG) == 0)) {\n+    if (sig != nullptr && (strcmp(sig, CLASS_SIG) == 0)) {\n@@ -120,1 +120,1 @@\n-  if (sig != NULL && (strcmp(sig, CLASS_SIG) == 0)) {\n+  if (sig != nullptr && (strcmp(sig, CLASS_SIG) == 0)) {\n@@ -148,1 +148,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -169,1 +169,1 @@\n-  if (sig != NULL) {\n+  if (sig != nullptr) {\n@@ -247,1 +247,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -287,1 +287,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr);\n@@ -291,1 +291,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -295,1 +295,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -299,1 +299,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep01\/libsinglestep01.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -81,1 +81,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -116,1 +116,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, nullptr);\n@@ -120,1 +120,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep02\/libsinglestep02.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -67,1 +67,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -94,1 +94,1 @@\n-  if (sig != NULL && (strcmp(sig, CLASS_SIG) == 0)) {\n+  if (sig != nullptr && (strcmp(sig, CLASS_SIG) == 0)) {\n@@ -136,1 +136,1 @@\n-  if (sig != NULL && (strcmp(sig, CLASS_SIG) == 0)) {\n+  if (sig != nullptr && (strcmp(sig, CLASS_SIG) == 0)) {\n@@ -162,1 +162,1 @@\n-  err = jvmti->GetMethodName(method, &methNam, &methSig, NULL);\n+  err = jvmti->GetMethodName(method, &methNam, &methSig, nullptr);\n@@ -183,1 +183,1 @@\n-  if (sig != NULL) {\n+  if (sig != nullptr) {\n@@ -275,1 +275,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -313,1 +313,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr);\n@@ -317,1 +317,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -321,1 +321,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -325,1 +325,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep03\/libsinglestep03.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -42,1 +42,1 @@\n-static const char *prefix = NULL;\n+static const char *prefix = nullptr;\n@@ -57,1 +57,1 @@\n-  if (inf.name != NULL && strstr(inf.name, prefix) == inf.name) {\n+  if (inf.name != nullptr && strstr(inf.name, prefix) == inf.name) {\n@@ -60,1 +60,1 @@\n-    if (inf.name == NULL || strcmp(name, inf.name) != 0) {\n+    if (inf.name == nullptr || strcmp(name, inf.name) != 0) {\n@@ -73,1 +73,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -92,1 +92,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -97,2 +97,2 @@\n-  prefix = jni->GetStringUTFChars(name, NULL);\n-  if (prefix == NULL) {\n+  prefix = jni->GetStringUTFChars(name, nullptr);\n+  if (prefix == nullptr) {\n@@ -104,1 +104,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, nullptr);\n@@ -115,1 +115,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -120,1 +120,1 @@\n-jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_END, NULL);\n+jvmtiError err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_END, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadEnd\/threadend01\/libthreadend01.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-  err = jvmti->SetEventNotificationMode(enable, event, NULL);\n+  err = jvmti->SetEventNotificationMode(enable, event, nullptr);\n@@ -132,1 +132,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -153,1 +153,1 @@\n-  set_agent_proc(agentProc, NULL);\n+  set_agent_proc(agentProc, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadEnd\/threadend02\/libthreadend02.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -42,1 +42,1 @@\n-static const char *prefix = NULL;\n+static const char *prefix = nullptr;\n@@ -57,1 +57,1 @@\n-  if (inf.name != NULL && strstr(inf.name, prefix) == inf.name) {\n+  if (inf.name != nullptr && strstr(inf.name, prefix) == inf.name) {\n@@ -73,1 +73,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -92,1 +92,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -97,2 +97,2 @@\n-  prefix = jni->GetStringUTFChars(name, NULL);\n-  if (prefix == NULL) {\n+  prefix = jni->GetStringUTFChars(name, nullptr);\n+  if (prefix == nullptr) {\n@@ -104,1 +104,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -117,1 +117,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -122,1 +122,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadStart\/threadstart01\/libthreadstart01.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,1 +41,1 @@\n-static volatile jthread agent_thread = NULL;\n+static volatile jthread agent_thread = nullptr;\n@@ -45,1 +45,1 @@\n-static volatile jthread next_thread = NULL;\n+static volatile jthread next_thread = nullptr;\n@@ -131,1 +131,1 @@\n-    if (next_thread == NULL) {\n+    if (next_thread == nullptr) {\n@@ -136,1 +136,1 @@\n-    if (next_thread != NULL) {\n+    if (next_thread != nullptr) {\n@@ -163,1 +163,1 @@\n-    next_thread = NULL;\n+    next_thread = nullptr;\n@@ -270,2 +270,2 @@\n-  jclass cls = NULL;\n-  jmethodID mid = NULL;\n+  jclass cls = nullptr;\n+  jmethodID mid = nullptr;\n@@ -275,1 +275,1 @@\n-  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL),\n+  check_jvmti_status(jni, jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr),\n@@ -280,1 +280,1 @@\n-  if (cls == NULL) {\n+  if (cls == nullptr) {\n@@ -287,1 +287,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -294,1 +294,1 @@\n-  if (agent_thread == NULL) {\n+  if (agent_thread == nullptr) {\n@@ -301,1 +301,1 @@\n-  if (agent_thread == NULL) {\n+  if (agent_thread == nullptr) {\n@@ -314,1 +314,1 @@\n-  check_jvmti_status(jni, jvmti->RunAgentThread(agent_thread, debug_agent, NULL, JVMTI_THREAD_NORM_PRIORITY),\n+  check_jvmti_status(jni, jvmti->RunAgentThread(agent_thread, debug_agent, nullptr, JVMTI_THREAD_NORM_PRIORITY),\n@@ -330,1 +330,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -369,1 +369,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -376,1 +376,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadStart\/threadstart02\/libthreadstart02.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -42,1 +42,1 @@\n-static const char *threadName = NULL;\n+static const char *threadName = nullptr;\n@@ -60,1 +60,1 @@\n-  if (inf.name != NULL && strcmp(inf.name, threadName) == 0) {\n+  if (inf.name != nullptr && strcmp(inf.name, threadName) == 0) {\n@@ -77,1 +77,1 @@\n-  if (inf.name != NULL && strcmp(inf.name, threadName) == 0) {\n+  if (inf.name != nullptr && strcmp(inf.name, threadName) == 0) {\n@@ -87,1 +87,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -113,1 +113,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -118,2 +118,2 @@\n-  threadName = jni->GetStringUTFChars(name, NULL);\n-  if (threadName == NULL) {\n+  threadName = jni->GetStringUTFChars(name, nullptr);\n+  if (threadName == nullptr) {\n@@ -126,1 +126,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -134,1 +134,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, nullptr);\n@@ -146,1 +146,1 @@\n-    err = jvmti->RunAgentThread(thr, threadProc, NULL, JVMTI_THREAD_MAX_PRIORITY);\n+    err = jvmti->RunAgentThread(thr, threadProc, nullptr, JVMTI_THREAD_MAX_PRIORITY);\n@@ -167,1 +167,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -173,1 +173,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_END, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_END, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ThreadStart\/threadstart03\/libthreadstart03.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-  if (signature != NULL)\n+  if (signature != nullptr)\n@@ -71,1 +71,1 @@\n-  if (generic != NULL)\n+  if (generic != nullptr)\n@@ -95,1 +95,1 @@\n-  jvmtiEnv* jvmti = NULL;\n+  jvmtiEnv* jvmti = nullptr;\n@@ -106,1 +106,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -130,1 +130,1 @@\n-  if (jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, NULL) != JVMTI_ERROR_NONE) {\n+  if (jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, nullptr) != JVMTI_ERROR_NONE) {\n@@ -135,1 +135,1 @@\n-  set_agent_proc(agentProc, NULL);\n+  set_agent_proc(agentProc, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/VMObjectAlloc\/vmobjalloc01\/libvmobjalloc01.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -36,1 +36,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n@@ -51,1 +51,1 @@\n-  if (jvmti_env == NULL) {\n+  if (jvmti_env == nullptr) {\n@@ -58,1 +58,1 @@\n-  err = jvmti_env->GetAllThreads(NULL, &threadsPtr);\n+  err = jvmti_env->GetAllThreads(nullptr, &threadsPtr);\n@@ -67,1 +67,1 @@\n-  err = jvmti_env->GetAllThreads(&threadsCountPtr, NULL);\n+  err = jvmti_env->GetAllThreads(&threadsCountPtr, nullptr);\n@@ -74,1 +74,1 @@\n-  err = jvmti_env->GetAllThreads(NULL, NULL);\n+  err = jvmti_env->GetAllThreads(nullptr, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/GetAllThreadsNullTest\/libGetAllThreadsNullTest.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -45,1 +45,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -67,1 +67,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -83,1 +83,1 @@\n-  err = jvmti->GetCurrentContendedMonitor(thread, NULL);\n+  err = jvmti->GetCurrentContendedMonitor(thread, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/contmon03\/libcontmon03.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -57,1 +57,1 @@\n-    err = jvmti->GetFrameCount(thr, NULL);\n+    err = jvmti->GetFrameCount(thr, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/framecnt02\/libframecnt02.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -56,1 +56,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/framecnt03\/libframecnt03.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -46,1 +46,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -51,1 +51,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -87,1 +87,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -126,1 +126,1 @@\n-  err = jvmti->GetFrameLocation(thr, 0, NULL, &loc);\n+  err = jvmti->GetFrameLocation(thr, 0, nullptr, &loc);\n@@ -136,1 +136,1 @@\n-  err = jvmti->GetFrameLocation(thr, 0, &mid, NULL);\n+  err = jvmti->GetFrameLocation(thr, 0, &mid, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/frameloc03\/libframeloc03.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -48,1 +48,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -62,1 +62,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -88,1 +88,1 @@\n-  err = jvmti->GetStackTrace(thread, 0, 1, NULL, &count);\n+  err = jvmti->GetStackTrace(thread, 0, 1, nullptr, &count);\n@@ -98,1 +98,1 @@\n-  err = jvmti->GetStackTrace(thread, 0, 1, &frame, NULL);\n+  err = jvmti->GetStackTrace(thread, 0, 1, &frame, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/getstacktr02\/libgetstacktr02.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -48,1 +48,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -62,1 +62,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/getstacktr09\/libgetstacktr09.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -48,1 +48,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -61,1 +61,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -69,1 +69,1 @@\n-  err = jvmti->GetThreadInfo(NULL, &inf);\n+  err = jvmti->GetThreadInfo(nullptr, &inf);\n@@ -76,1 +76,1 @@\n-  if (inf.name == NULL || strcmp(inf.name, \"main\")) {\n+  if (inf.name == nullptr || strcmp(inf.name, \"main\")) {\n@@ -96,1 +96,1 @@\n-  err = jvmti->GetThreadInfo(thr, NULL);\n+  err = jvmti->GetThreadInfo(thr, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/thrinfo02\/libthrinfo02.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -48,1 +48,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -61,1 +61,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -69,1 +69,1 @@\n-  err = jvmti->GetThreadState(thr, NULL);\n+  err = jvmti->GetThreadState(thr, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/negative\/thrstat04\/libthrstat04.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -81,1 +81,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -93,1 +93,1 @@\n-      jthread tested_thread = NULL;\n+      jthread tested_thread = nullptr;\n@@ -103,1 +103,1 @@\n-      if (tested_thread != NULL) {\n+      if (tested_thread != nullptr) {\n@@ -135,1 +135,1 @@\n-  if (set_agent_proc(agentProc, NULL) != JNI_TRUE) {\n+  if (set_agent_proc(agentProc, nullptr) != JNI_TRUE) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/StackTrace\/NotSuspended\/libGetStackTraceNotSuspendedStress.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jrawMonitorID event_mon = NULL;\n+static jrawMonitorID event_mon = nullptr;\n@@ -40,1 +40,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -96,1 +96,1 @@\n-  if (cthread != NULL) {\n+  if (cthread != nullptr) {\n@@ -121,1 +121,1 @@\n-  \/\/const char* cname = (cthread == NULL) ? \"<no cthread>\" : get_thread_name(jvmti, jni, cthread);\n+  \/\/const char* cname = (cthread == nullptr) ? \"<no cthread>\" : get_thread_name(jvmti, jni, cthread);\n@@ -126,1 +126,1 @@\n-  if (cthread != NULL) { \/\/ pre-condition for reliable testing\n+  if (cthread != nullptr) { \/\/ pre-condition for reliable testing\n@@ -148,1 +148,1 @@\n-  if (cthread != NULL) {\n+  if (cthread != nullptr) {\n@@ -173,1 +173,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -185,1 +185,1 @@\n-      jthread vthread = NULL;\n+      jthread vthread = nullptr;\n@@ -195,1 +195,1 @@\n-      if (iter > 50 && vthread != NULL) {\n+      if (iter > 50 && vthread != nullptr) {\n@@ -259,1 +259,1 @@\n-  if (set_agent_proc(agentProc, NULL) != JNI_TRUE) {\n+  if (set_agent_proc(agentProc, nullptr) != JNI_TRUE) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/StackTrace\/Suspended\/libGetStackTraceSuspendedStress.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -57,1 +57,1 @@\n-  if (storage == NULL) {\n+  if (storage == nullptr) {\n@@ -59,1 +59,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -74,1 +74,1 @@\n-  if (storage == NULL) {\n+  if (storage == nullptr) {\n@@ -79,1 +79,1 @@\n-  jvmtiError err = jvmti->SetThreadLocalStorage(thread, NULL);\n+  jvmtiError err = jvmti->SetThreadLocalStorage(thread, nullptr);\n@@ -128,1 +128,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -139,1 +139,1 @@\n-      jthread testedThread = NULL;\n+      jthread testedThread = nullptr;\n@@ -148,1 +148,1 @@\n-      if (testedThread == NULL) {\n+      if (testedThread == nullptr) {\n@@ -208,1 +208,1 @@\n-  jvmtiEnv * jvmti = NULL;\n+  jvmtiEnv * jvmti = nullptr;\n@@ -216,1 +216,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -253,6 +253,6 @@\n-  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n-  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n-  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n-  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, NULL);\n-  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n-  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_END, NULL);\n+  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n+  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n+  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n+  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, nullptr);\n+  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n+  jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_END, nullptr);\n@@ -265,1 +265,1 @@\n-  if (set_agent_proc(agentProc, NULL) != JNI_TRUE) {\n+  if (set_agent_proc(agentProc, nullptr) != JNI_TRUE) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/ThreadLocalStorage\/SetGetThreadLocalStorageStressTest\/libSetGetThreadLocalStorageStress.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n@@ -165,1 +165,1 @@\n-                                             sys_thread, NULL,JVMTI_THREAD_NORM_PRIORITY);\n+                                             sys_thread, nullptr,JVMTI_THREAD_NORM_PRIORITY);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetAllThreads\/allthr01\/liballthr01.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -57,1 +57,1 @@\n-  jobject monitor = NULL;\n+  jobject monitor = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetCurrentContendedMonitor\/contmon01\/libcontmon01.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -59,1 +59,1 @@\n-  if (monitor != NULL) {\n+  if (monitor != nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetCurrentContendedMonitor\/contmon02\/libcontmon02.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -38,1 +38,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameCount\/framecnt01\/libframecnt01.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -43,1 +43,1 @@\n-  jmethodID mid = NULL;\n+  jmethodID mid = nullptr;\n@@ -91,1 +91,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n@@ -118,1 +118,1 @@\n-  if (mid1 == NULL) {\n+  if (mid1 == nullptr) {\n@@ -124,1 +124,1 @@\n-  err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL);\n+  err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr);\n@@ -137,1 +137,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameLocation\/frameloc01\/libframeloc01.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -50,1 +50,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n@@ -101,1 +101,1 @@\n-  if (cls_sig == NULL || strcmp(cls_sig, fi.cls_sig) != 0) {\n+  if (cls_sig == nullptr || strcmp(cls_sig, fi.cls_sig) != 0) {\n@@ -106,1 +106,1 @@\n-  if (name == NULL || strcmp(name, fi.name) != 0) {\n+  if (name == nullptr || strcmp(name, fi.name) != 0) {\n@@ -111,1 +111,1 @@\n-  if (sig == NULL || strcmp(sig, fi.sig) != 0) {\n+  if (sig == nullptr || strcmp(sig, fi.sig) != 0) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameLocation\/frameloc02\/libframeloc02.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jmethodID* ids = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jmethodID* ids = nullptr;\n@@ -40,1 +40,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,2 +74,2 @@\n-    jclass rslt = NULL;\n-    char* class_name = NULL;\n+    jclass rslt = nullptr;\n+    char* class_name = nullptr;\n@@ -77,2 +77,2 @@\n-    if (rslt != NULL) {\n-        jvmti->GetClassSignature(rslt, &class_name, NULL);\n+    if (rslt != nullptr) {\n+        jvmti->GetClassSignature(rslt, &class_name, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/GetStackTraceAndRetransformTest\/libGetStackTraceAndRetransformTest.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/GetStackTraceCurrentThreadTest\/libGetStackTraceCurrentThreadTest.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,1 +58,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr03\/libgetstacktr03.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -83,1 +83,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -111,1 +111,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -116,1 +116,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE,JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE,JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr04\/libgetstacktr04.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -105,1 +105,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -135,1 +135,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -139,1 +139,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE,JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE,JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr05\/libgetstacktr05.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -70,1 +70,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_DISABLE,JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_DISABLE,JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -95,1 +95,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -131,1 +131,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -136,1 +136,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE,JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE,JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr06\/libgetstacktr06.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -76,1 +76,1 @@\n-  if (classBytes == NULL) {\n+  if (classBytes == nullptr) {\n@@ -86,1 +86,1 @@\n-  class_def.class_bytes = (unsigned char *) jni->GetByteArrayElements(classBytes, NULL);\n+  class_def.class_bytes = (unsigned char *) jni->GetByteArrayElements(classBytes, nullptr);\n@@ -90,1 +90,1 @@\n-  classBytes = NULL;\n+  classBytes = nullptr;\n@@ -108,1 +108,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -140,1 +140,1 @@\n-  if (mid == NULL) {\n+  if (mid == nullptr) {\n@@ -145,1 +145,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr07\/libgetstacktr07.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -119,1 +119,1 @@\n-    if (classBytes == NULL) {\n+    if (classBytes == nullptr) {\n@@ -128,1 +128,1 @@\n-    classDef.class_bytes = (unsigned char *) jni->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) jni->GetByteArrayElements(classBytes, nullptr);\n@@ -132,1 +132,1 @@\n-    classBytes = NULL;\n+    classBytes = nullptr;\n@@ -143,1 +143,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -179,1 +179,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -184,1 +184,1 @@\n-  if (mid_chain4 != NULL) {\n+  if (mid_chain4 != nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr08\/libgetstacktr08.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -52,1 +52,1 @@\n-  if (res != JNI_OK || jvmti_env == NULL) {\n+  if (res != JNI_OK || jvmti_env == nullptr) {\n@@ -78,2 +78,2 @@\n-  if (inf.name == NULL) {\n-    LOG(\"Thread %s: incorrect name in NULL\\n\", expected_info.name);\n+  if (inf.name == nullptr) {\n+    LOG(\"Thread %s: incorrect name in null\\n\", expected_info.name);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadInfo\/thrinfo01\/libthrinfo01.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jthread tested_thread_thr1 = NULL;\n+static jthread tested_thread_thr1 = nullptr;\n@@ -48,1 +48,1 @@\n-  jvmtiError err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  jvmtiError err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -50,1 +50,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -61,1 +61,1 @@\n-  if (thread_info.name != NULL && strcmp(thread_info.name, \"tested_thread_thr1\") == 0) {\n+  if (thread_info.name != nullptr && strcmp(thread_info.name, \"tested_thread_thr1\") == 0) {\n@@ -75,1 +75,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -104,1 +104,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -120,1 +120,1 @@\n-  if (tested_thread_thr1 == NULL) {\n+  if (tested_thread_thr1 == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat01\/libthrstat01.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -35,1 +35,1 @@\n-static jthread thr_ptr = NULL;\n+static jthread thr_ptr = nullptr;\n@@ -58,1 +58,1 @@\n-  jvmtiError err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  jvmtiError err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -66,1 +66,1 @@\n-  if (thread_info.name != NULL && strcmp(thread_info.name, \"tested_thread_thr1\") == 0) {\n+  if (thread_info.name != nullptr && strcmp(thread_info.name, \"tested_thread_thr1\") == 0) {\n@@ -80,1 +80,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -106,1 +106,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -138,1 +138,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -143,1 +143,1 @@\n-  if (thr_ptr == NULL) {\n+  if (thr_ptr == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat02\/libthrstat02.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -49,1 +49,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -62,1 +62,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat03\/libthrstat03.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-static jvmtiEnv *jvmti_env = NULL;\n+static jvmtiEnv *jvmti_env = nullptr;\n@@ -78,1 +78,1 @@\n-    LOG(\"Agent_OnLoad: Error: GetEnv returned error or NULL\\n\");\n+    LOG(\"Agent_OnLoad: Error: GetEnv returned error or null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat05\/libthrstat05.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    jthread testedThread = NULL;\n+    jthread testedThread = nullptr;\n@@ -55,1 +55,1 @@\n-    if (testedThread == NULL) {\n+    if (testedThread == nullptr) {\n@@ -103,1 +103,1 @@\n-  jvmtiEnv *jvmti = NULL;\n+  jvmtiEnv *jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -125,1 +125,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThread\/resumethrd01\/libresumethrd01.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-static jthread testedThread = NULL;\n+static jthread testedThread = nullptr;\n@@ -62,1 +62,1 @@\n-    if (testedThread == NULL) {\n+    if (testedThread == nullptr) {\n@@ -69,1 +69,1 @@\n-    enable_events_notifications(jvmti, jni, JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni, JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -105,1 +105,1 @@\n-    enable_events_notifications(jvmti, jni,JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni,JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -126,1 +126,1 @@\n-  if (thread != NULL && jni->IsSameObject(testedThread, thread)) {\n+  if (thread != nullptr && jni->IsSameObject(testedThread, thread)) {\n@@ -139,1 +139,1 @@\n-  jvmtiEnv* jvmti = NULL;\n+  jvmtiEnv* jvmti = nullptr;\n@@ -144,1 +144,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -176,1 +176,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThread\/resumethrd02\/libresumethrd02.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-    jthread* threads = NULL;\n-    jvmtiError* results = NULL;\n+    jthread* threads = nullptr;\n+    jvmtiError* results = nullptr;\n@@ -126,1 +126,1 @@\n-      if (threads[i] != NULL)\n+      if (threads[i] != nullptr)\n@@ -146,1 +146,1 @@\n-  jthread* threads = NULL;\n+  jthread* threads = nullptr;\n@@ -152,1 +152,1 @@\n-    foundThreads[i] = NULL;\n+    foundThreads[i] = nullptr;\n@@ -162,1 +162,1 @@\n-    if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+    if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -185,1 +185,1 @@\n-    if ( foundThreads[i] == NULL) {\n+    if ( foundThreads[i] == nullptr) {\n@@ -197,1 +197,1 @@\n-  jvmtiEnv* jvmti = NULL;\n+  jvmtiEnv* jvmti = nullptr;\n@@ -202,1 +202,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -222,1 +222,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThreadList\/resumethrdlst01\/libresumethrdlst01.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-static jthread* threads = NULL;\n+static jthread* threads = nullptr;\n@@ -68,1 +68,1 @@\n-    jvmtiError* results = NULL;\n+    jvmtiError* results = nullptr;\n@@ -101,1 +101,1 @@\n-    enable_events_notifications(jvmti, jni,JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni,JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -139,1 +139,1 @@\n-    enable_events_notifications(jvmti, jni, JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni, JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -147,1 +147,1 @@\n-      if (threads[i] != NULL)\n+      if (threads[i] != nullptr)\n@@ -167,1 +167,1 @@\n-  jthread* threads = NULL;\n+  jthread* threads = nullptr;\n@@ -173,1 +173,1 @@\n-    foundThreads[i] = NULL;\n+    foundThreads[i] = nullptr;\n@@ -183,1 +183,1 @@\n-    if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+    if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -206,1 +206,1 @@\n-    if ( foundThreads[i] == NULL) {\n+    if ( foundThreads[i] == nullptr) {\n@@ -224,1 +224,1 @@\n-    if (thread != NULL && jni->IsSameObject(threads[i], thread)) {\n+    if (thread != nullptr && jni->IsSameObject(threads[i], thread)) {\n@@ -237,1 +237,1 @@\n-  jvmtiEnv* jvmti = NULL;\n+  jvmtiEnv* jvmti = nullptr;\n@@ -242,1 +242,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -276,1 +276,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/ResumeThreadList\/resumethrdlst02\/libresumethrdlst02.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    if (tested_thread == NULL) {\n+    if (tested_thread == nullptr) {\n@@ -100,1 +100,1 @@\n-  jvmtiEnv *jvmti = NULL;\n+  jvmtiEnv *jvmti = nullptr;\n@@ -105,1 +105,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -125,1 +125,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThread\/suspendthrd01\/libsuspendthrd01.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jthread testedThread = NULL;\n+static jthread testedThread = nullptr;\n@@ -64,1 +64,1 @@\n-    if (testedThread == NULL) {\n+    if (testedThread == nullptr) {\n@@ -71,1 +71,1 @@\n-    enable_events_notifications(jvmti, jni, JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni, JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -99,1 +99,1 @@\n-    enable_events_notifications(jvmti, jni, JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni, JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -125,1 +125,1 @@\n-  if (thread != NULL && jni->IsSameObject(testedThread, thread)) {\n+  if (thread != nullptr && jni->IsSameObject(testedThread, thread)) {\n@@ -135,1 +135,1 @@\n-  jvmtiEnv *jvmti = NULL;\n+  jvmtiEnv *jvmti = nullptr;\n@@ -140,1 +140,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -171,1 +171,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThread\/suspendthrd02\/libsuspendthrd02.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    jthread *threads = NULL;\n-    jvmtiError *results = NULL;\n+    jthread *threads = nullptr;\n+    jvmtiError *results = nullptr;\n@@ -123,1 +123,1 @@\n-      if (threads[i] != NULL)\n+      if (threads[i] != nullptr)\n@@ -144,1 +144,1 @@\n-  jthread *threads = NULL;\n+  jthread *threads = nullptr;\n@@ -150,1 +150,1 @@\n-    found_threads[i] = NULL;\n+    found_threads[i] = nullptr;\n@@ -161,1 +161,1 @@\n-    if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+    if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -185,1 +185,1 @@\n-    if (found_threads[i] == NULL) {\n+    if (found_threads[i] == nullptr) {\n@@ -197,1 +197,1 @@\n-  jvmtiEnv *jvmti = NULL;\n+  jvmtiEnv *jvmti = nullptr;\n@@ -202,1 +202,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -219,1 +219,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThreadList\/suspendthrdlst01\/libsuspendthrdlst01.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-static jthread* threads = NULL;\n+static jthread* threads = nullptr;\n@@ -69,1 +69,1 @@\n-    jvmtiError* results = NULL;\n+    jvmtiError* results = nullptr;\n@@ -103,1 +103,1 @@\n-    enable_events_notifications(jvmti, jni, JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni, JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -124,1 +124,1 @@\n-    enable_events_notifications(jvmti, jni,JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    enable_events_notifications(jvmti, jni,JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -140,1 +140,1 @@\n-      if (threads[i] != NULL) {\n+      if (threads[i] != nullptr) {\n@@ -162,1 +162,1 @@\n-  jthread* threads = NULL;\n+  jthread* threads = nullptr;\n@@ -167,1 +167,1 @@\n-    foundThreads[i] = NULL;\n+    foundThreads[i] = nullptr;\n@@ -177,1 +177,1 @@\n-    if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+    if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -201,1 +201,1 @@\n-    if (foundThreads[i] == NULL) {\n+    if (foundThreads[i] == nullptr) {\n@@ -216,1 +216,1 @@\n-    if (thread != NULL && jni->IsSameObject(threads[i], thread)) {\n+    if (thread != nullptr && jni->IsSameObject(threads[i], thread)) {\n@@ -227,1 +227,1 @@\n-  jvmtiEnv* jvmti = NULL;\n+  jvmtiEnv* jvmti = nullptr;\n@@ -232,1 +232,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -264,1 +264,1 @@\n-  if (!set_agent_proc(agentProc, NULL)) {\n+  if (!set_agent_proc(agentProc, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/SuspendThreadList\/suspendthrdlst02\/libsuspendthrdlst02.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -66,1 +66,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -134,1 +134,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -139,2 +139,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -165,1 +165,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -170,2 +170,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -242,1 +242,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -248,1 +248,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -253,1 +253,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, nullptr);\n@@ -259,1 +259,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_UNMOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_UNMOUNT, nullptr);\n@@ -279,3 +279,3 @@\n-  jclass k1 = find_class(jvmti, jni, NULL, \"Ljava\/lang\/VirtualThread;\");\n-  jclass k2 = find_class(jvmti, jni, NULL, \"Ljdk\/internal\/vm\/Continuation;\");\n-  if (k1 == NULL || k2 == NULL) {\n+  jclass k1 = find_class(jvmti, jni, nullptr, \"Ljava\/lang\/VirtualThread;\");\n+  jclass k2 = find_class(jvmti, jni, nullptr, \"Ljdk\/internal\/vm\/Continuation;\");\n+  if (k1 == nullptr || k2 == nullptr) {\n@@ -288,1 +288,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -300,1 +300,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -303,1 +303,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -306,1 +306,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, nullptr);\n@@ -309,1 +309,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, EXT_EVENT_VIRTUAL_THREAD_UNMOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, EXT_EVENT_VIRTUAL_THREAD_UNMOUNT, nullptr);\n@@ -312,1 +312,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/BreakpointInYieldTest\/libBreakpointInYieldTest.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jthread exp_thread = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jthread exp_thread = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -43,2 +43,2 @@\n-  char* mname = NULL;\n-  char* msign = NULL;\n+  char* mname = nullptr;\n+  char* msign = nullptr;\n@@ -47,1 +47,1 @@\n-  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  err = jvmti->GetMethodName(method, &mname, &msign, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContFramePopTest\/libContFramePopTest.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jthread exp_thread = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jthread exp_thread = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -45,2 +45,2 @@\n-  char* mname = NULL;\n-  char* msign = NULL;\n+  char* mname = nullptr;\n+  char* msign = nullptr;\n@@ -49,1 +49,1 @@\n-  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  err = jvmti->GetMethodName(method, &mname, &msign, nullptr);\n@@ -184,1 +184,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr);\n@@ -187,1 +187,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, nullptr);\n@@ -239,2 +239,2 @@\n-  jmethodID* methods = NULL;\n-  jmethodID method = NULL;\n+  jmethodID* methods = nullptr;\n+  jmethodID method = nullptr;\n@@ -262,1 +262,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -270,1 +270,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContStackDepthTest\/libContStackDepthTest.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jthread exp_thread = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jthread exp_thread = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -42,2 +42,2 @@\n-  char* mname = NULL;\n-  char* msign = NULL;\n+  char* mname = nullptr;\n+  char* msign = nullptr;\n@@ -46,1 +46,1 @@\n-  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  err = jvmti->GetMethodName(method, &mname, &msign, nullptr);\n@@ -153,2 +153,2 @@\n-  jmethodID* methods = NULL;\n-  jmethodID method = NULL;\n+  jmethodID* methods = nullptr;\n+  jmethodID method = nullptr;\n@@ -175,1 +175,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -183,1 +183,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContYieldBreakPointTest\/libContYieldBreakPointTest.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jthread exp_thread = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jthread exp_thread = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -43,2 +43,2 @@\n-  char* mname = NULL;\n-  char* msign = NULL;\n+  char* mname = nullptr;\n+  char* msign = nullptr;\n@@ -49,1 +49,1 @@\n-  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  err = jvmti->GetMethodName(method, &mname, &msign, nullptr);\n@@ -81,1 +81,1 @@\n-      jmethodID frame_method = NULL;\n+      jmethodID frame_method = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContinuationTest\/libContinuationTest.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jmethodID mid_B = NULL;\n-static jrawMonitorID monitor = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jmethodID mid_B = nullptr;\n+static jrawMonitorID monitor = nullptr;\n@@ -58,1 +58,1 @@\n-    jobject ret_obj = NULL;\n+    jobject ret_obj = nullptr;\n@@ -82,1 +82,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -127,1 +127,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -131,1 +131,1 @@\n-  if (mid_B == NULL) {\n+  if (mid_B == nullptr) {\n@@ -137,1 +137,1 @@\n-  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ForceEarlyReturnTest\/libForceEarlyReturnTest.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -63,1 +63,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -91,2 +91,2 @@\n-    char* name = NULL;\n-    char* sign = NULL;\n+    char* name = nullptr;\n+    char* sign = nullptr;\n@@ -94,1 +94,1 @@\n-    err = jvmti->GetMethodName(method, &name, &sign, NULL);\n+    err = jvmti->GetMethodName(method, &name, &sign, nullptr);\n@@ -110,2 +110,2 @@\n-  jobject msg = NULL;\n-  jobject tt = NULL;\n+  jobject msg = nullptr;\n+  jobject tt = nullptr;\n@@ -118,1 +118,1 @@\n-  LOG(\"test_GetLocal: mounted: %d depth: %d fcount: %d\\n\", cthread != NULL, depth, frame_count);\n+  LOG(\"test_GetLocal: mounted: %d depth: %d fcount: %d\\n\", cthread != nullptr, depth, frame_count);\n@@ -129,1 +129,1 @@\n-  if (cthread != NULL) {\n+  if (cthread != nullptr) {\n@@ -168,2 +168,2 @@\n-  \/\/ #5: Test JVMTI GetLocalObject function with NULL value_ptr\n-  err = jvmti->GetLocalObject(vthread, depth, SlotString, NULL);\n+  \/\/ #5: Test JVMTI GetLocalObject function with nullptr value_ptr\n+  err = jvmti->GetLocalObject(vthread, depth, SlotString, nullptr);\n@@ -171,2 +171,2 @@\n-    LOG(\"JVMTI GetLocalObject with NULL value_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"JVMTI GetLocalObject with NULL value_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetLocalObject with null value_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"JVMTI GetLocalObject with null value_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -179,1 +179,1 @@\n-  const char* str = jni->GetStringUTFChars((jstring)msg, NULL);\n+  const char* str = jni->GetStringUTFChars((jstring)msg, nullptr);\n@@ -192,1 +192,1 @@\n-  if (exp_values->tt != NULL && !jni->IsSameObject(tt, exp_values->tt)) {\n+  if (exp_values->tt != nullptr && !jni->IsSameObject(tt, exp_values->tt)) {\n@@ -242,1 +242,1 @@\n-  LOG(\"test_SetLocal: mounted: %d depth: %d fcount: %d\\n\", cthread != NULL, depth, frame_count);\n+  LOG(\"test_SetLocal: mounted: %d depth: %d fcount: %d\\n\", cthread != nullptr, depth, frame_count);\n@@ -260,1 +260,1 @@\n-  if (depth > 0 || cthread == NULL) {\n+  if (depth > 0 || cthread == nullptr) {\n@@ -274,1 +274,1 @@\n-  if (depth > 0 || cthread == NULL) {\n+  if (depth > 0 || cthread == nullptr) {\n@@ -281,1 +281,1 @@\n-  else if (cthread != NULL && err != JVMTI_ERROR_INVALID_SLOT && err != JVMTI_ERROR_TYPE_MISMATCH) {\n+  else if (cthread != nullptr && err != JVMTI_ERROR_INVALID_SLOT && err != JVMTI_ERROR_TYPE_MISMATCH) {\n@@ -289,1 +289,1 @@\n-  if (depth > 0 || cthread == NULL) {\n+  if (depth > 0 || cthread == nullptr) {\n@@ -317,2 +317,2 @@\n-  Values values0 = { NULL, NULL, 1, 2L, (jfloat)3.2F, (jdouble)4.500000047683716 };\n-  Values values1 = { NULL, NULL, 2, 3L, (jfloat)4.2F, (jdouble)5.500000047683716 };\n+  Values values0 = { nullptr, nullptr, 1, 2L, (jfloat)3.2F, (jdouble)4.500000047683716 };\n+  Values values1 = { nullptr, nullptr, 2, 3L, (jfloat)4.2F, (jdouble)5.500000047683716 };\n@@ -332,1 +332,1 @@\n-  if (depth > 0 || cthread == NULL) {\n+  if (depth > 0 || cthread == nullptr) {\n@@ -371,2 +371,2 @@\n-    \/\/ so we can also test with NULL in place of vthread.\n-    test_GetSetLocal(jvmti, jni, NULL, depth, frame_count, true \/* at_event *\/);\n+    \/\/ so we can also test with nullptr in place of vthread.\n+    test_GetSetLocal(jvmti, jni, nullptr, depth, frame_count, true \/* at_event *\/);\n@@ -442,1 +442,1 @@\n-    jmethodID method = NULL;\n+    jmethodID method = nullptr;\n@@ -463,1 +463,1 @@\n-    bool case_2 = !seen_unmounted && depth >= 0 && cthread == NULL;\n+    bool case_2 = !seen_unmounted && depth >= 0 && cthread == nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetSetLocalTest\/libGetSetLocalTest.cpp","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/InterruptThreadTest\/libInterruptThreadTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jthread exp_thread = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jthread exp_thread = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -44,1 +44,1 @@\n-static jmethodID *test_methods = NULL;\n+static jmethodID *test_methods = nullptr;\n@@ -46,1 +46,1 @@\n-jclass test_class = NULL;\n+jclass test_class = nullptr;\n@@ -82,1 +82,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -96,1 +96,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -134,1 +134,1 @@\n-  jthread vthread = NULL;\n+  jthread vthread = nullptr;\n@@ -164,1 +164,1 @@\n-    jmethodID method = NULL;\n+    jmethodID method = nullptr;\n@@ -166,2 +166,2 @@\n-    char* mname1 = NULL;\n-    char* cname1 = NULL;\n+    char* mname1 = nullptr;\n+    char* cname1 = nullptr;\n@@ -255,1 +255,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_DISABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_DISABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -282,1 +282,1 @@\n-  jthread cthread = NULL;\n+  jthread cthread = nullptr;\n@@ -350,1 +350,1 @@\n-  if (strstr(mname, \"brkpt\") != NULL) { \/\/ event IS in the \"brkpt\" method\n+  if (strstr(mname, \"brkpt\") != nullptr) { \/\/ event IS in the \"brkpt\" method\n@@ -436,1 +436,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -438,2 +438,2 @@\n-  char* mname = NULL;\n-  char* cname = NULL;\n+  char* mname = nullptr;\n+  char* cname = nullptr;\n@@ -443,2 +443,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -481,1 +481,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -483,2 +483,2 @@\n-  char* mname = NULL;\n-  char* cname = NULL;\n+  char* mname = nullptr;\n+  char* cname = nullptr;\n@@ -488,2 +488,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -565,3 +565,3 @@\n-  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL);\n-  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n-  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr);\n+  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n+  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -588,1 +588,1 @@\n-  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, jni, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/MethodExitTest\/libMethodExitTest.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -52,4 +52,4 @@\n-    char* name0 = NULL;\n-    char* name1 = NULL;\n-    char* sign0 = NULL;\n-    char* sign1 = NULL;\n+    char* name0 = nullptr;\n+    char* name1 = nullptr;\n+    char* sign0 = nullptr;\n+    char* sign1 = nullptr;\n@@ -57,1 +57,1 @@\n-    err = jvmti->GetMethodName(method0, &name0, &sign0, NULL);\n+    err = jvmti->GetMethodName(method0, &name0, &sign0, nullptr);\n@@ -61,1 +61,1 @@\n-      err = jvmti->GetMethodName(method1, &name1, &sign1, NULL);\n+      err = jvmti->GetMethodName(method1, &name1, &sign1, nullptr);\n@@ -83,1 +83,1 @@\n-  err = jvmti->GetThreadInfo(NULL, &inf0);\n+  err = jvmti->GetThreadInfo(nullptr, &inf0);\n@@ -89,1 +89,1 @@\n-  const char* name = (inf0.name == NULL) ? \"<Unnamed thread>\" : inf0.name;\n+  const char* name = (inf0.name == nullptr) ? \"<Unnamed thread>\" : inf0.name;\n@@ -124,1 +124,1 @@\n-  err = jvmti->GetThreadState(NULL, &state0);\n+  err = jvmti->GetThreadState(nullptr, &state0);\n@@ -148,1 +148,1 @@\n-  err = jvmti->GetFrameCount(NULL, &count1);\n+  err = jvmti->GetFrameCount(nullptr, &count1);\n@@ -166,8 +166,8 @@\n-  jmethodID method0 = NULL;\n-  jmethodID method1 = NULL;\n-  char* name0 = NULL;\n-  char* name1 = NULL;\n-  char* sign0 = NULL;\n-  char* sign1 = NULL;\n-\n-  err = jvmti->GetFrameLocation(NULL, DEPTH, &method0, &loc0);\n+  jmethodID method0 = nullptr;\n+  jmethodID method1 = nullptr;\n+  char* name0 = nullptr;\n+  char* name1 = nullptr;\n+  char* sign0 = nullptr;\n+  char* sign1 = nullptr;\n+\n+  err = jvmti->GetFrameLocation(nullptr, DEPTH, &method0, &loc0);\n@@ -179,1 +179,1 @@\n-  err = jvmti->GetMethodName(method0, &name0, &sign0, NULL);\n+  err = jvmti->GetMethodName(method0, &name0, &sign0, nullptr);\n@@ -183,1 +183,1 @@\n-    err = jvmti->GetMethodName(method1, &name1, &sign1, NULL);\n+    err = jvmti->GetMethodName(method1, &name1, &sign1, nullptr);\n@@ -210,1 +210,1 @@\n-  err = jvmti->GetStackTrace(NULL, 0, MAX_FRAME_CNT, frames0, &count0);\n+  err = jvmti->GetStackTrace(nullptr, 0, MAX_FRAME_CNT, frames0, &count0);\n@@ -229,2 +229,2 @@\n-  jobject* monitors0 = NULL;\n-  jobject* monitors1 = NULL;\n+  jobject* monitors0 = nullptr;\n+  jobject* monitors1 = nullptr;\n@@ -266,2 +266,2 @@\n-  jvmtiMonitorStackDepthInfo* inf0 = NULL;\n-  jvmtiMonitorStackDepthInfo* inf1 = NULL;\n+  jvmtiMonitorStackDepthInfo* inf0 = nullptr;\n+  jvmtiMonitorStackDepthInfo* inf1 = nullptr;\n@@ -269,1 +269,1 @@\n-  err = jvmti->GetOwnedMonitorStackDepthInfo(NULL, &count0, &inf0);\n+  err = jvmti->GetOwnedMonitorStackDepthInfo(nullptr, &count0, &inf0);\n@@ -305,2 +305,2 @@\n-  jobject monitor0 = NULL;\n-  jobject monitor1 = NULL;\n+  jobject monitor0 = nullptr;\n+  jobject monitor1 = nullptr;\n@@ -308,1 +308,1 @@\n-  err = jvmti->GetCurrentContendedMonitor(NULL, &monitor0);\n+  err = jvmti->GetCurrentContendedMonitor(nullptr, &monitor0);\n@@ -324,1 +324,1 @@\n- * Execute JVMTI functions with NULL jthread and check the result is correct.\n+ * Execute JVMTI functions with nullptr jthread and check the result is correct.\n@@ -329,1 +329,1 @@\n-  jthread cur_thr = NULL;\n+  jthread cur_thr = nullptr;\n@@ -334,1 +334,1 @@\n-  LOG(\"Testing JMTI functions accepting NULL jthread as current thread\\n\");\n+  LOG(\"Testing JMTI functions accepting null jthread as current thread\\n\");\n@@ -398,1 +398,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/NullAsCurrentThreadTest\/libNullAsCurrentThreadTest.cpp","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PinnedTaskTest\/libPinnedTaskTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -119,1 +119,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -125,1 +125,1 @@\n-  if (mid_B == NULL) {\n+  if (mid_B == nullptr) {\n@@ -131,1 +131,1 @@\n-  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PopFrameTest\/libPopFrameTest.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/RawMonitorTest\/libRawMonitorTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-  check_jvmti_status(jni, jvmti->SuspendAllVirtualThreads(0, NULL), \"Error in SuspendAllVirtualThreads\");\n+  check_jvmti_status(jni, jvmti->SuspendAllVirtualThreads(0, nullptr), \"Error in SuspendAllVirtualThreads\");\n@@ -58,1 +58,1 @@\n-  check_jvmti_status(jni, jvmti->ResumeAllVirtualThreads(0, NULL), \"Error in ResumeAllVirtualThreads\");\n+  check_jvmti_status(jni, jvmti->ResumeAllVirtualThreads(0, nullptr), \"Error in ResumeAllVirtualThreads\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SelfSuspendDisablerTest\/libSelfSuspendDisablerTest.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,4 +31,4 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jmethodID mid_B = NULL;\n-static jobject exception_obj = NULL;\n-static jrawMonitorID monitor = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jmethodID mid_B = nullptr;\n+static jobject exception_obj = nullptr;\n+static jrawMonitorID monitor = nullptr;\n@@ -76,1 +76,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -121,1 +121,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -125,1 +125,1 @@\n-  if (exception_obj == NULL) {\n+  if (exception_obj == nullptr) {\n@@ -129,1 +129,1 @@\n-  if (mid_B == NULL) {\n+  if (mid_B == nullptr) {\n@@ -135,1 +135,1 @@\n-  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  set_event_notification_mode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/StopThreadTest\/libStopThreadTest.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID agent_event_lock = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID agent_event_lock = nullptr;\n@@ -51,1 +51,1 @@\n-  jvmtiStackInfo* stack_info_arr = NULL;\n+  jvmtiStackInfo* stack_info_arr = nullptr;\n@@ -73,3 +73,3 @@\n-  jmethodID method = NULL;\n-  char* name = NULL;\n-  char* sign = NULL;\n+  jmethodID method = nullptr;\n+  char* name = nullptr;\n+  char* sign = nullptr;\n@@ -87,1 +87,1 @@\n-  err = jvmti->GetMethodName(method, &name, &sign, NULL);\n+  err = jvmti->GetMethodName(method, &name, &sign, nullptr);\n@@ -96,1 +96,1 @@\n-  jthread* tested_cthreads = NULL;\n+  jthread* tested_cthreads = nullptr;\n@@ -316,1 +316,1 @@\n-  jthread* tested_cthreads = NULL;\n+  jthread* tested_cthreads = nullptr;\n@@ -398,1 +398,1 @@\n-                                        JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+                                        JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume1\/libSuspendResume1.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID agent_event_lock = NULL;\n-static volatile jthread agent_thread = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID agent_event_lock = nullptr;\n+static volatile jthread agent_thread = nullptr;\n@@ -47,1 +47,1 @@\n-  jthread* tested_cthreads = NULL;\n+  jthread* tested_cthreads = nullptr;\n@@ -109,1 +109,1 @@\n-  jthread exclude_list[EXCLUDE_CNT] = { NULL, NULL };\n+  jthread exclude_list[EXCLUDE_CNT] = { nullptr, nullptr };\n@@ -141,1 +141,1 @@\n-  jthread exclude_list[EXCLUDE_CNT] = { NULL, NULL };\n+  jthread exclude_list[EXCLUDE_CNT] = { nullptr, nullptr };\n@@ -227,1 +227,1 @@\n-  jthread* tested_cthreads = NULL;\n+  jthread* tested_cthreads = nullptr;\n@@ -313,1 +313,1 @@\n-                                        JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+                                        JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume2\/libSuspendResume2.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID agent_event_lock = NULL;\n-static volatile jthread agent_thread = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID agent_event_lock = nullptr;\n+static volatile jthread agent_thread = nullptr;\n@@ -44,1 +44,1 @@\n-static jmethodID *test_methods = NULL;\n+static jmethodID *test_methods = nullptr;\n@@ -46,1 +46,1 @@\n-jclass test_class = NULL;\n+jclass test_class = nullptr;\n@@ -52,1 +52,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -66,1 +66,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -112,1 +112,1 @@\n-  jthread* tested_cthreads = NULL;\n+  jthread* tested_cthreads = nullptr;\n@@ -174,1 +174,1 @@\n-  jthread exclude_list[EXCLUDE_CNT] = { NULL, NULL };\n+  jthread exclude_list[EXCLUDE_CNT] = { nullptr, nullptr };\n@@ -207,1 +207,1 @@\n-  jthread exclude_list[EXCLUDE_CNT] = { NULL, NULL };\n+  jthread exclude_list[EXCLUDE_CNT] = { nullptr, nullptr };\n@@ -267,1 +267,1 @@\n-  jthread* tested_cthreads = NULL;\n+  jthread* tested_cthreads = nullptr;\n@@ -371,1 +371,1 @@\n-                                        JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+                                        JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResumeAll\/libSuspendResumeAll.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-  jvmtiStackInfo* info = NULL;\n+  jvmtiStackInfo* info = nullptr;\n@@ -48,1 +48,1 @@\n-  jvmtiStackInfo* info = NULL;\n+  jvmtiStackInfo* info = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadListStackTracesTest\/libThreadListStackTracesTest.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-  jvmtiStackInfo* stackInfo = NULL;\n+  jvmtiStackInfo* stackInfo = nullptr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadStateTest\/libThreadStateTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jrawMonitorID agent_lock = NULL;\n+static jrawMonitorID agent_lock = nullptr;\n@@ -42,2 +42,2 @@\n-  jthread cthread = NULL;\n-  jthread vthread = NULL;\n+  jthread cthread = nullptr;\n+  jthread vthread = nullptr;\n@@ -55,1 +55,1 @@\n-  char* vtname = vthread == NULL ? NULL : get_thread_name(jvmti, jni, vthread);\n+  char* vtname = vthread == nullptr ? nullptr : get_thread_name(jvmti, jni, vthread);\n@@ -161,1 +161,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -166,1 +166,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_END, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_END, nullptr);\n@@ -171,1 +171,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n@@ -176,1 +176,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ToggleNotifyJvmtiTest\/libToggleNotifyJvmtiTest.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID agent_monitor = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID agent_monitor = nullptr;\n@@ -43,2 +43,2 @@\n-static volatile jclass test_class_0 = NULL;\n-static volatile jclass test_class_2 = NULL;\n+static volatile jclass test_class_0 = nullptr;\n+static volatile jclass test_class_2 = nullptr;\n@@ -63,1 +63,1 @@\n-  if (test_class_0 == NULL) {\n+  if (test_class_0 == nullptr) {\n@@ -71,1 +71,1 @@\n-  if (test_class_2 == NULL) {\n+  if (test_class_2 == nullptr) {\n@@ -101,1 +101,1 @@\n-    print_stack_trace(jvmti, jni, NULL);\n+    print_stack_trace(jvmti, jni, nullptr);\n@@ -126,1 +126,1 @@\n-  jobject *owned_monitors = NULL;\n+  jobject *owned_monitors = nullptr;\n@@ -185,1 +185,1 @@\n-                          vthread, vtname, JNI_TRUE, monitor, NULL);\n+                          vthread, vtname, JNI_TRUE, monitor, nullptr);\n@@ -187,1 +187,1 @@\n-                          cthread,  ctname, JNI_FALSE, NULL, NULL);\n+                          cthread,  ctname, JNI_FALSE, nullptr, nullptr);\n@@ -207,1 +207,1 @@\n-                          vthread, vtname, JNI_TRUE, NULL, NULL);\n+                          vthread, vtname, JNI_TRUE, nullptr, nullptr);\n@@ -209,1 +209,1 @@\n-                          cthread, ctname, JNI_FALSE, NULL, NULL);\n+                          cthread, ctname, JNI_FALSE, nullptr, nullptr);\n@@ -229,1 +229,1 @@\n-  if (k == NULL) {\n+  if (k == nullptr) {\n@@ -243,1 +243,1 @@\n-  if (res != JNI_OK || jni == NULL) {\n+  if (res != JNI_OK || jni == nullptr) {\n@@ -251,1 +251,1 @@\n-  if (test_class_0 == NULL || test_class_2 == NULL) {\n+  if (test_class_0 == nullptr || test_class_2 == nullptr) {\n@@ -267,1 +267,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -318,1 +318,1 @@\n-                                        JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL);\n+                                        JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr);\n@@ -325,1 +325,1 @@\n-                                        JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL);\n+                                        JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadMonitorTest\/libVThreadMonitorTest.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID event_mon = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID event_mon = nullptr;\n@@ -40,1 +40,1 @@\n-static jmethodID *test_methods = NULL;\n+static jmethodID *test_methods = nullptr;\n@@ -42,1 +42,1 @@\n-jclass test_class = NULL;\n+jclass test_class = nullptr;\n@@ -44,1 +44,1 @@\n-static jmethodID *url_methods = NULL;\n+static jmethodID *url_methods = nullptr;\n@@ -46,1 +46,1 @@\n-jclass url_class = NULL;\n+jclass url_class = nullptr;\n@@ -53,2 +53,2 @@\n-  char* mname = NULL;\n-  char* msign = NULL;\n+  char* mname = nullptr;\n+  char* msign = nullptr;\n@@ -57,1 +57,1 @@\n-  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  err = jvmti->GetMethodName(method, &mname, &msign, nullptr);\n@@ -87,1 +87,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -101,1 +101,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -240,1 +240,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr);\n@@ -271,1 +271,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadNotifyFramePopTest\/libVThreadNotifyFramePopTest.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID events_monitor = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID events_monitor = nullptr;\n@@ -49,1 +49,1 @@\n-  Tinfo* inf = NULL;\n+  Tinfo* inf = nullptr;\n@@ -55,1 +55,1 @@\n-    if (inf->tname == NULL) {\n+    if (inf->tname == nullptr) {\n@@ -81,2 +81,2 @@\n-    char* name = NULL;\n-    char* sign = NULL;\n+    char* name = nullptr;\n+    char* sign = nullptr;\n@@ -84,1 +84,1 @@\n-    err = jvmti->GetMethodName(method, &name, &sign, NULL);\n+    err = jvmti->GetMethodName(method, &name, &sign, nullptr);\n@@ -105,1 +105,1 @@\n-    if (inf->tname == NULL && strcmp(event_name, \"VirtualThreadEnd\") != 0) {\n+    if (inf->tname == nullptr && strcmp(event_name, \"VirtualThreadEnd\") != 0) {\n@@ -120,1 +120,1 @@\n-  jobject thread_vthread = NULL;\n+  jobject thread_vthread = nullptr;\n@@ -125,3 +125,3 @@\n-  \/\/ #1: Test JVMTI GetVirtualThread extension function NULL thread (current)\n-  err = GetVirtualThread(jvmti, jni, NULL, &thread_vthread);\n-  check_jvmti_status(jni, err, \"event handler: error in JVMTI GetVirtualThread with NULL thread (current)\");\n+  \/\/ #1: Test JVMTI GetVirtualThread extension function nullptr thread (current)\n+  err = GetVirtualThread(jvmti, jni, nullptr, &thread_vthread);\n+  check_jvmti_status(jni, err, \"event handler: error in JVMTI GetVirtualThread with null thread (current)\");\n@@ -129,2 +129,2 @@\n-  if (thread_vthread == NULL) {\n-    fatal(jni, \"event handler: JVMTI GetVirtualThread with NULL thread (current) failed to return non-NULL vthread\");\n+  if (thread_vthread == nullptr) {\n+    fatal(jni, \"event handler: JVMTI GetVirtualThread with nullptr thread (current) failed to return non-null vthread\");\n@@ -132,1 +132,1 @@\n-  LOG(\"JVMTI GetVirtualThread with NULL thread (current) returned non-NULL vthread as expected\\n\");\n+  LOG(\"JVMTI GetVirtualThread with nullptr thread (current) returned non-null vthread as expected\\n\");\n@@ -144,2 +144,2 @@\n-  if (thread_vthread == NULL) {\n-    fatal(jni, \"event handler: JVMTI GetVirtualThread with good thread failed to return non-NULL vthread\");\n+  if (thread_vthread == nullptr) {\n+    fatal(jni, \"event handler: JVMTI GetVirtualThread with good thread failed to return non-null vthread\");\n@@ -147,1 +147,1 @@\n-  LOG(\"JVMTI GetVirtualThread with good thread returned non-NULL vthread as expected\\n\");\n+  LOG(\"JVMTI GetVirtualThread with good thread returned non-null vthread as expected\\n\");\n@@ -152,1 +152,1 @@\n-  jthread vthread_thread = NULL;\n+  jthread vthread_thread = nullptr;\n@@ -157,2 +157,2 @@\n-  \/\/ #1: Test JVMTI GetCarrierThread extension function with NULL vthread\n-  err = GetCarrierThread(jvmti, jni, NULL, &vthread_thread);\n+  \/\/ #1: Test JVMTI GetCarrierThread extension function with nullptr vthread\n+  err = GetCarrierThread(jvmti, jni, nullptr, &vthread_thread);\n@@ -171,2 +171,2 @@\n-  if (vthread_thread == NULL) {\n-    fatal(jni, \"event handler: JVMTI GetCarrierThread with good vthread failed to return non-NULL carrier thread\");\n+  if (vthread_thread == nullptr) {\n+    fatal(jni, \"event handler: JVMTI GetCarrierThread with good vthread failed to return non-null carrier thread\");\n@@ -174,1 +174,1 @@\n-  LOG(\"JVMTI GetCarrierThread with good vthread returned non-NULL carrier thread as expected\\n\");\n+  LOG(\"JVMTI GetCarrierThread with good vthread returned non-null carrier thread as expected\\n\");\n@@ -183,1 +183,1 @@\n-  jclass* classes = NULL;\n+  jclass* classes = nullptr;\n@@ -210,2 +210,2 @@\n-    char* sign = NULL;\n-    err = jvmti->GetClassSignature(classes[idx], &sign, NULL);\n+    char* sign = nullptr;\n+    err = jvmti->GetClassSignature(classes[idx], &sign, nullptr);\n@@ -214,1 +214,1 @@\n-    if (strstr(sign, \"VThreadTest\") != NULL) {\n+    if (strstr(sign, \"VThreadTest\") != nullptr) {\n@@ -231,2 +231,2 @@\n-  \/\/ #1: Test JVMTI GetFrameCount function with NULL count_ptr pointer\n-  err = jvmti->GetFrameCount(vthread, NULL);\n+  \/\/ #1: Test JVMTI GetFrameCount function with nullptr count_ptr pointer\n+  err = jvmti->GetFrameCount(vthread, nullptr);\n@@ -234,2 +234,2 @@\n-    LOG(\"JVMTI GetFrameCount with NULL count_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetFrameCount with NULL count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetFrameCount with null count_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetFrameCount with null count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -252,1 +252,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -263,2 +263,2 @@\n-  \/\/ #2: Test JVMTI GetFrameLocation function with NULL method_ptr\n-  err = jvmti->GetFrameLocation(vthread, 0, NULL, &location);\n+  \/\/ #2: Test JVMTI GetFrameLocation function with nullptr method_ptr\n+  err = jvmti->GetFrameLocation(vthread, 0, nullptr, &location);\n@@ -266,2 +266,2 @@\n-    LOG(\"JVMTI GetFrameLocation with NULL method_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetFrameLocation with NULL method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetFrameLocation with null method_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetFrameLocation with null method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -270,2 +270,2 @@\n-  \/\/ #3: Test JVMTI GetFrameLocation function with NULL location_ptr\n-  err = jvmti->GetFrameLocation(vthread, 0, &method, NULL);\n+  \/\/ #3: Test JVMTI GetFrameLocation function with nullptr location_ptr\n+  err = jvmti->GetFrameLocation(vthread, 0, &method, nullptr);\n@@ -273,2 +273,2 @@\n-    LOG(\"JVMTI GetFrameCount with NULL location_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetFrameLocation with NULL location_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetFrameCount with null location_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetFrameLocation with null location_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -307,1 +307,1 @@\n-  jmethodID method = NULL;\n+  jmethodID method = nullptr;\n@@ -331,2 +331,2 @@\n-  \/\/ #3: Test JVMTI GetStackTrace function with NULL frame_buffer pointer\n-  err = jvmti->GetStackTrace(vthread, 0, MAX_FRAME_COUNT, NULL, &count);\n+  \/\/ #3: Test JVMTI GetStackTrace function with nullptr frame_buffer pointer\n+  err = jvmti->GetStackTrace(vthread, 0, MAX_FRAME_COUNT, nullptr, &count);\n@@ -334,2 +334,2 @@\n-    LOG(\"JVMTI GetStackTrace with NULL frame_buffer pointer returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetStackTrace witt NULL frame_buffer pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetStackTrace with null frame_buffer pointer returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetStackTrace witt null frame_buffer pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -338,2 +338,2 @@\n-  \/\/ #4: Test JVMTI GetStackTrace function with NULL count_ptr pointer\n-  err = jvmti->GetStackTrace(vthread, 0, MAX_FRAME_COUNT, frames, NULL);\n+  \/\/ #4: Test JVMTI GetStackTrace function with nullptr count_ptr pointer\n+  err = jvmti->GetStackTrace(vthread, 0, MAX_FRAME_COUNT, frames, nullptr);\n@@ -341,2 +341,2 @@\n-    LOG(\"JVMTI GetStackTrace with NULL count_ptr pointer returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetStackTrace witt NULL count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetStackTrace with null count_ptr pointer returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetStackTrace witt null count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -367,2 +367,2 @@\n-  jmethodID method = NULL;\n-  jobject obj = NULL;\n+  jmethodID method = nullptr;\n+  jobject obj = nullptr;\n@@ -426,2 +426,2 @@\n-  \/\/ #5: Test JVMTI GetLocalObject function with NULL value_ptr\n-  err = jvmti->GetLocalObject(vthread, depth, SlotObj, NULL);\n+  \/\/ #5: Test JVMTI GetLocalObject function with null value_ptr\n+  err = jvmti->GetLocalObject(vthread, depth, SlotObj, nullptr);\n@@ -429,2 +429,2 @@\n-    LOG(\"JVMTI GetLocalObject with NULL method_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"JVMTI GetLocalObject with NULL method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetLocalObject with null method_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"JVMTI GetLocalObject with null method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -437,1 +437,1 @@\n-  const char* str = jni->GetStringUTFChars((jstring)obj, NULL);\n+  const char* str = jni->GetStringUTFChars((jstring)obj, nullptr);\n@@ -503,1 +503,1 @@\n-    return; \/\/ skip further testing as GetVirtualThread can return NULL\n+    return; \/\/ skip further testing as GetVirtualThread can return nullptr\n@@ -535,2 +535,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -552,2 +552,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -611,1 +611,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -617,1 +617,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_END, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_END, nullptr);\n@@ -623,1 +623,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, nullptr);\n@@ -629,1 +629,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_UNMOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_UNMOUNT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTest\/libVThreadTest.cpp","additions":67,"deletions":67,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -71,1 +71,1 @@\n-  void* local_storage_data = NULL;\n+  void* local_storage_data = nullptr;\n@@ -101,1 +101,1 @@\n-  err = jvmti->RunAgentThread(vthread, agent_proc, (const void*)NULL, JVMTI_THREAD_NORM_PRIORITY);\n+  err = jvmti->RunAgentThread(vthread, agent_proc, nullptr, JVMTI_THREAD_NORM_PRIORITY);\n@@ -124,2 +124,2 @@\n-  JNIEnv* jni = NULL;\n-  jthread thread = NULL;\n+  JNIEnv* jni = nullptr;\n+  jthread thread = nullptr;\n@@ -178,1 +178,1 @@\n-  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, NULL);\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, EXT_EVENT_VIRTUAL_THREAD_MOUNT, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadUnsupportedTest\/libVThreadUnsupportedTest.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-  err = jvmti->GetStackTrace(NULL, 0, MAX_COUNT, frameInfo, &count);\n+  err = jvmti->GetStackTrace(nullptr, 0, MAX_COUNT, frameInfo, &count);\n@@ -47,3 +47,3 @@\n-    jclass declaringClass = NULL;\n-    char *clasSignature = NULL;\n-    char *methodName = NULL;\n+    jclass declaringClass = nullptr;\n+    char *clasSignature = nullptr;\n+    char *methodName = nullptr;\n@@ -54,1 +54,1 @@\n-    err = jvmti->GetClassSignature(declaringClass, &clasSignature, NULL);\n+    err = jvmti->GetClassSignature(declaringClass, &clasSignature, nullptr);\n@@ -57,1 +57,1 @@\n-    err = jvmti->GetMethodName(frameInfo[idx].method, &methodName, NULL, NULL);\n+    err = jvmti->GetMethodName(frameInfo[idx].method, &methodName, nullptr, nullptr);\n@@ -69,1 +69,1 @@\n-  jobjectArray methodNames = jni->NewObjectArray(count - skipped, jni->FindClass(\"java\/lang\/String\"), NULL);\n+  jobjectArray methodNames = jni->NewObjectArray(count - skipped, jni->FindClass(\"java\/lang\/String\"), nullptr);\n@@ -73,1 +73,1 @@\n-  print_stack_trace(jvmti, jni, NULL);\n+  print_stack_trace(jvmti, jni, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VirtualStackTraceTest\/libVirtualStackTraceTest.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-static jrawMonitorID agent_event_lock = NULL;\n+static jrawMonitorID agent_event_lock = nullptr;\n@@ -43,1 +43,1 @@\n-  if (tname != NULL && strncmp(tname, TESTED_TNAME_START, TESTED_TNAME_START_LEN) == 0) {\n+  if (tname != nullptr && strncmp(tname, TESTED_TNAME_START, TESTED_TNAME_START_LEN) == 0) {\n@@ -62,1 +62,1 @@\n-  if (tname != NULL && strncmp(tname, TESTED_TNAME_START, TESTED_TNAME_START_LEN) == 0) {\n+  if (tname != nullptr && strncmp(tname, TESTED_TNAME_START, TESTED_TNAME_START_LEN) == 0) {\n@@ -104,1 +104,1 @@\n-  if (options != NULL && strcmp(options, \"can_support_virtual_threads\") == 0) {\n+  if (options != nullptr && strcmp(options, \"can_support_virtual_threads\") == 0) {\n@@ -113,1 +113,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VIRTUAL_THREAD_START, nullptr);\n@@ -119,1 +119,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VirtualThreadStartTest\/libVirtualThreadStartTest.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -59,1 +59,1 @@\n-  err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+  err = jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -140,1 +140,1 @@\n-  jvmtiEnv * jvmti = NULL;\n+  jvmtiEnv * jvmti = nullptr;\n@@ -148,1 +148,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/libWaitNotifySuspendedVThread.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-      if (monitor_ptr != NULL) {\n+      if (monitor_ptr != nullptr) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/monitoring\/ThreadInfo\/GetLockOwnerName\/libGetLockOwnerName.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-static jvmtiEnv* jvmti = NULL;\n+static jvmtiEnv* jvmti = nullptr;\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jvmti\/libJvmtiUtils.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-  const char * classNameChar = env->GetStringUTFChars(className, NULL);\n-  jbyte * arrayContent = env->GetByteArrayElements(bytecode, NULL);\n+  const char * classNameChar = env->GetStringUTFChars(className, nullptr);\n+  jbyte * arrayContent = env->GetByteArrayElements(bytecode, nullptr);\n@@ -54,1 +54,1 @@\n-    printf(\"ERROR: DefineClass call returned NULL by some reason. Classloading failed.\\n\");\n+    printf(\"ERROR: DefineClass call returned null by some reason. Classloading failed.\\n\");\n@@ -104,1 +104,1 @@\n-    jbyte * class_bytes = env->GetByteArrayElements(classBytes, NULL);\n+    jbyte * class_bytes = env->GetByteArrayElements(classBytes, nullptr);\n@@ -170,1 +170,1 @@\n-    env->SetObjectField(thisObject, objectToKeepField, NULL);\n+    env->SetObjectField(thisObject, objectToKeepField, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/g1\/unloading\/libdefine.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-                        env->SetObjectArrayElement(listHolder, i, NULL);\n+                        env->SetObjectArrayElement(listHolder, i, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/nativeGC03\/libnativeGC03.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -49,1 +49,1 @@\n-    if (optionsString == NULL) {\n+    if (optionsString == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent00.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -52,1 +52,1 @@\n-    if (optionsString == NULL) {\n+    if (optionsString == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent01.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -54,1 +54,1 @@\n-    if (optionsString == NULL) {\n+    if (optionsString == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent02.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine07\/agent03.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-    JNIEnv* jni = NULL;\n-    Options* options = NULL;\n+    JNIEnv* jni = nullptr;\n+    Options* options = nullptr;\n@@ -52,1 +52,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -58,1 +58,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/aod\/VirtualMachine\/VirtualMachine09\/agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,1 +271,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -298,1 +298,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -306,1 +306,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -321,1 +321,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -336,1 +336,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AddCapabilities\/addcaps001\/addcaps001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,1 +290,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -317,1 +317,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -325,1 +325,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -340,1 +340,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -359,1 +359,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AddCapabilities\/addcaps002\/addcaps002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -166,1 +166,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -174,1 +174,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -189,1 +189,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -208,1 +208,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AddCapabilities\/addcaps003\/addcaps003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,2 +70,2 @@\n-    if (jvm == NULL) {\n-        NSK_COMPLAIN1(\"First parameter 'vm' in JVM_OnLoad() is NULL: 0x%p\\n\", (void*)jvm);\n+    if (jvm == nullptr) {\n+        NSK_COMPLAIN1(\"First parameter 'vm' in JVM_OnLoad() is null: 0x%p\\n\", (void*)jvm);\n@@ -75,2 +75,2 @@\n-    if (options == NULL) {\n-        NSK_COMPLAIN1(\"Second parameter 'options' in JVM_OnLoad() is NULL: 0x%p\\n\", (void*)options);\n+    if (options == nullptr) {\n+        NSK_COMPLAIN1(\"Second parameter 'options' in JVM_OnLoad() is null: 0x%p\\n\", (void*)options);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload001\/agentonload001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    if (options == NULL) {\n-        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is NULL: 0x%p\\n\",\n+    if (options == nullptr) {\n+        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is null: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload002\/agentonload002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    if (options == NULL) {\n-        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is NULL: 0x%p\\n\",\n+    if (options == nullptr) {\n+        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is null: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload003\/agentonload003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    void *prev = NULL;\n+    void *prev = nullptr;\n@@ -78,1 +78,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -84,1 +84,1 @@\n-    err = jvmti->Allocate((jlong)1, NULL);\n+    err = jvmti->Allocate((jlong)1, nullptr);\n@@ -138,1 +138,1 @@\n-    while (prev != NULL) {\n+    while (prev != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Allocate\/alloc001\/alloc001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -155,1 +155,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -161,1 +161,1 @@\n-        NSK_DISPLAY1(\"%s: ClassFileLoadHook event received for class with NULL name\\n\", agentName);\n+        NSK_DISPLAY1(\"%s: ClassFileLoadHook event received for class with null name\\n\", agentName);\n@@ -180,2 +180,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -184,1 +184,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -190,1 +190,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -194,1 +194,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002\/attach002Agent00.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -92,2 +92,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -96,1 +96,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -102,1 +102,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -106,1 +106,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/attach002aAgent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -110,2 +110,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -114,1 +114,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -120,1 +120,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -124,1 +124,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach008\/attach008Agent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -132,1 +132,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -138,1 +138,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -142,1 +142,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach009\/attach009Agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-    JNIEnv* jni = NULL;\n-    Options* options = NULL;\n+    JNIEnv* jni = nullptr;\n+    Options* options = nullptr;\n@@ -58,1 +58,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -64,1 +64,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -68,1 +68,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach012\/attach012Agent00.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -91,2 +91,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -95,1 +95,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -101,1 +101,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -105,1 +105,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach014\/attach014Agent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -84,2 +84,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -88,1 +88,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -94,1 +94,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -98,1 +98,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Agent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -84,2 +84,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -88,1 +88,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -94,1 +94,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -98,1 +98,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Agent01.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -119,1 +119,1 @@\n-    if (!NSK_VERIFY(thread != NULL))\n+    if (!NSK_VERIFY(thread != nullptr))\n@@ -122,1 +122,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->RunAgentThread(thread, auxiliaryThreadFunction, NULL, JVMTI_THREAD_NORM_PRIORITY))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->RunAgentThread(thread, auxiliaryThreadFunction, nullptr, JVMTI_THREAD_NORM_PRIORITY))) {\n@@ -150,1 +150,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -156,1 +156,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -160,1 +160,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach020\/attach020Agent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -77,1 +77,1 @@\n-                                        NULL) != JVMTI_ERROR_NONE) {\n+                                        nullptr) != JVMTI_ERROR_NONE) {\n@@ -130,1 +130,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -136,1 +136,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -140,1 +140,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach021\/attach021Agent00.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -177,1 +177,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -183,1 +183,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -187,1 +187,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach022\/attach022Agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -113,1 +113,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -119,1 +119,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -123,1 +123,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach037\/attach037Agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -109,1 +109,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -115,1 +115,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -119,1 +119,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach038\/attach038Agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -55,1 +55,1 @@\n-    if (!nsk_jvmti_aod_getThreadName(jvmti, NULL, threadName)) {\n+    if (!nsk_jvmti_aod_getThreadName(jvmti, nullptr, threadName)) {\n@@ -69,1 +69,1 @@\n-    if (!NSK_VERIFY(thread != NULL))\n+    if (!NSK_VERIFY(thread != nullptr))\n@@ -72,1 +72,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->RunAgentThread(thread, startedThreadFunction, NULL, JVMTI_THREAD_NORM_PRIORITY))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->RunAgentThread(thread, startedThreadFunction, nullptr, JVMTI_THREAD_NORM_PRIORITY))) {\n@@ -145,1 +145,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -151,1 +151,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -155,1 +155,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach039\/attach039Agent00.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -137,1 +137,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -143,1 +143,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -147,1 +147,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach040\/attach040Agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -48,1 +48,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -50,1 +50,1 @@\n-    jthreadGroup* groups = NULL;\n+    jthreadGroup* groups = nullptr;\n@@ -163,1 +163,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -169,1 +169,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -173,1 +173,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach041\/attach041Agent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -61,1 +61,1 @@\n-        jthread* threads = NULL;\n+        jthread* threads = nullptr;\n@@ -127,1 +127,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -133,1 +133,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -137,1 +137,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach042\/attach042Agent00.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -101,1 +101,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -107,1 +107,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -111,1 +111,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent00.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -112,1 +112,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -118,1 +118,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -122,1 +122,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent01.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -132,1 +132,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -138,1 +138,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -142,1 +142,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent02.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static Options* options = NULL;\n+static Options* options = nullptr;\n@@ -122,1 +122,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -128,1 +128,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -132,1 +132,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent03.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    if (!NSK_VERIFY(options != NULL)) {\n+    if (!NSK_VERIFY(options != nullptr)) {\n@@ -99,2 +99,2 @@\n-    jvmtiEnv* jvmti = NULL;\n-    JNIEnv* jni = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n+    JNIEnv* jni = nullptr;\n@@ -105,1 +105,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -111,1 +111,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -115,1 +115,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach046\/attach046Agent00.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    JNIEnv* jni = NULL;\n-    Options* options = NULL;\n+    JNIEnv* jni = nullptr;\n+    Options* options = nullptr;\n@@ -62,1 +62,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -68,1 +68,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -72,1 +72,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach050\/attach050Agent00.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-    JNIEnv* jni = NULL;\n-    Options* options = NULL;\n+    JNIEnv* jni = nullptr;\n+    Options* options = nullptr;\n@@ -58,1 +58,1 @@\n-    if (!NSK_VERIFY(options != NULL))\n+    if (!NSK_VERIFY(options != nullptr))\n@@ -64,1 +64,1 @@\n-    if (jni == NULL)\n+    if (jni == nullptr)\n@@ -68,1 +68,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/sharedAgents\/simpleAgent00.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -90,1 +90,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -100,1 +100,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk001\/classfloadhk001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static unsigned char* origClassBytes = NULL;\n+static unsigned char* origClassBytes = nullptr;\n@@ -62,2 +62,2 @@\n-    if (bytes == NULL) {\n-        NSK_COMPLAIN2(\"Unexpected NULL pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+    if (bytes == nullptr) {\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -118,2 +118,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -125,1 +125,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -133,1 +133,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -147,1 +147,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -185,1 +185,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -189,1 +189,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -207,1 +207,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -219,1 +219,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -264,1 +264,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -269,2 +269,2 @@\n-        if (class_being_redefined != NULL) {\n-            NSK_COMPLAIN1(\"Unexpected not NULL class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (class_being_redefined != nullptr) {\n+            NSK_COMPLAIN1(\"Unexpected not null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -297,1 +297,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -307,1 +307,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -336,1 +336,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk002\/classfloadhk002.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jobject classLoader = NULL;\n+static jobject classLoader = nullptr;\n@@ -50,1 +50,1 @@\n-static unsigned char* origClassBytes = NULL;\n+static unsigned char* origClassBytes = nullptr;\n@@ -67,2 +67,2 @@\n-    if (bytes == NULL) {\n-        NSK_COMPLAIN2(\"Unexpected NULL pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+    if (bytes == nullptr) {\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -123,2 +123,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -130,1 +130,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -138,1 +138,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -152,1 +152,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -181,2 +181,2 @@\n-    jfieldID fieldID = NULL;\n-    jobject obj = NULL;\n+    jfieldID fieldID = nullptr;\n+    jobject obj = nullptr;\n@@ -186,1 +186,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -188,1 +188,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -193,1 +193,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -195,1 +195,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -200,1 +200,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != nullptr)) {\n@@ -202,1 +202,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -221,1 +221,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -226,1 +226,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -235,1 +235,1 @@\n-                                                        TESTED_CLASSLOADER_SIG)) != NULL))\n+                                                        TESTED_CLASSLOADER_SIG)) != nullptr))\n@@ -251,1 +251,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -263,1 +263,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -311,1 +311,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -316,2 +316,2 @@\n-        if (class_being_redefined != NULL) {\n-            NSK_COMPLAIN1(\"Unexpected not NULL class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (class_being_redefined != nullptr) {\n+            NSK_COMPLAIN1(\"Unexpected not null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -323,2 +323,2 @@\n-        if (loader == NULL) {\n-            NSK_COMPLAIN1(\"Unexpected NULL classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (loader == nullptr) {\n+            NSK_COMPLAIN1(\"Unexpected null classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -357,1 +357,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -367,1 +367,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -396,1 +396,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk003\/classfloadhk003.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-static unsigned char* newClassBytes = NULL;\n+static unsigned char* newClassBytes = nullptr;\n@@ -57,2 +57,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -64,1 +64,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -72,1 +72,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -86,1 +86,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -124,1 +124,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -128,1 +128,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -146,1 +146,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -158,1 +158,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -199,1 +199,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -210,2 +210,2 @@\n-        if (new_class_data_len == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data_len == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -217,2 +217,2 @@\n-        if (new_class_data == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -223,1 +223,1 @@\n-        if (new_class_data_len != NULL && new_class_data != NULL) {\n+        if (new_class_data_len != nullptr && new_class_data != nullptr) {\n@@ -251,1 +251,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -261,1 +261,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -290,1 +290,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk004\/classfloadhk004.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-static unsigned char* newClassBytes = NULL;\n+static unsigned char* newClassBytes = nullptr;\n@@ -63,2 +63,2 @@\n-    if (bytes == NULL) {\n-        NSK_COMPLAIN2(\"Unexpected NULL pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+    if (bytes == nullptr) {\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -119,2 +119,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -126,1 +126,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -134,1 +134,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -148,1 +148,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -186,1 +186,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -190,1 +190,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -208,1 +208,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -220,1 +220,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -261,1 +261,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -272,2 +272,2 @@\n-        if (new_class_data_len == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data_len == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -279,2 +279,2 @@\n-        if (new_class_data == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -285,1 +285,1 @@\n-        if (new_class_data_len != NULL && new_class_data != NULL) {\n+        if (new_class_data_len != nullptr && new_class_data != nullptr) {\n@@ -313,1 +313,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -323,1 +323,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -352,1 +352,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk005\/classfloadhk005.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jclass testedClass = NULL;\n+static jclass testedClass = nullptr;\n@@ -51,1 +51,1 @@\n-static unsigned char* redefClassBytes = NULL;\n+static unsigned char* redefClassBytes = nullptr;\n@@ -68,2 +68,2 @@\n-    if (bytes == NULL) {\n-        NSK_COMPLAIN2(\"Unexpected NULL pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+    if (bytes == nullptr) {\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -124,2 +124,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -131,1 +131,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -139,1 +139,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -153,1 +153,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -182,2 +182,2 @@\n-    jfieldID fieldID = NULL;\n-    jobject obj = NULL;\n+    jfieldID fieldID = nullptr;\n+    jobject obj = nullptr;\n@@ -187,1 +187,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -189,1 +189,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -194,1 +194,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -196,1 +196,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -201,1 +201,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != nullptr)) {\n@@ -203,1 +203,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -241,1 +241,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -246,1 +246,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -255,1 +255,1 @@\n-                                                        TESTED_CLASS_FIELD_SIG)) != NULL))\n+                                                        TESTED_CLASS_FIELD_SIG)) != nullptr))\n@@ -278,1 +278,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -286,1 +286,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -333,1 +333,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -338,2 +338,2 @@\n-        if (class_being_redefined == NULL) {\n-            NSK_COMPLAIN1(\"Unexpected NULL class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (class_being_redefined == nullptr) {\n+            NSK_COMPLAIN1(\"Unexpected null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -372,1 +372,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -382,1 +382,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -412,1 +412,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk006\/classfloadhk006.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-static jobject classLoader = NULL;\n-static jclass testedClass = NULL;\n+static jobject classLoader = nullptr;\n+static jclass testedClass = nullptr;\n@@ -55,1 +55,1 @@\n-static unsigned char* redefClassBytes = NULL;\n+static unsigned char* redefClassBytes = nullptr;\n@@ -72,2 +72,2 @@\n-    if (bytes == NULL) {\n-        NSK_COMPLAIN2(\"Unexpected NULL pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+    if (bytes == nullptr) {\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -128,2 +128,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -135,1 +135,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -143,1 +143,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -157,1 +157,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -186,2 +186,2 @@\n-    jfieldID fieldID = NULL;\n-    jobject obj = NULL;\n+    jfieldID fieldID = nullptr;\n+    jobject obj = nullptr;\n@@ -191,1 +191,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -193,1 +193,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -198,1 +198,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -200,1 +200,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -205,1 +205,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != nullptr)) {\n@@ -207,1 +207,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -245,1 +245,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -250,1 +250,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -259,1 +259,1 @@\n-                                                        TESTED_CLASS_FIELD_SIG)) != NULL))\n+                                                        TESTED_CLASS_FIELD_SIG)) != nullptr))\n@@ -265,1 +265,1 @@\n-                                                        TESTED_CLASSLOADER_SIG)) != NULL))\n+                                                        TESTED_CLASSLOADER_SIG)) != nullptr))\n@@ -288,1 +288,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -296,1 +296,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -346,1 +346,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -351,2 +351,2 @@\n-        if (loader == NULL) {\n-            NSK_COMPLAIN1(\"Unexpected NULL classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (loader == nullptr) {\n+            NSK_COMPLAIN1(\"Unexpected null classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -364,2 +364,2 @@\n-        if (class_being_redefined == NULL) {\n-            NSK_COMPLAIN1(\"Unexpected NULL class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (class_being_redefined == nullptr) {\n+            NSK_COMPLAIN1(\"Unexpected null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -398,1 +398,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -408,1 +408,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -438,1 +438,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk007\/classfloadhk007.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jclass testedClass = NULL;\n+static jclass testedClass = nullptr;\n@@ -52,1 +52,1 @@\n-static unsigned char* redefClassBytes = NULL;\n+static unsigned char* redefClassBytes = nullptr;\n@@ -55,1 +55,1 @@\n-static unsigned char* newClassBytes = NULL;\n+static unsigned char* newClassBytes = nullptr;\n@@ -66,2 +66,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -73,1 +73,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -81,1 +81,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -95,1 +95,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -124,2 +124,2 @@\n-    jfieldID fieldID = NULL;\n-    jobject obj = NULL;\n+    jfieldID fieldID = nullptr;\n+    jobject obj = nullptr;\n@@ -129,1 +129,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -131,1 +131,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -136,1 +136,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -138,1 +138,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -143,1 +143,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != nullptr)) {\n@@ -145,1 +145,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -183,1 +183,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -188,1 +188,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -197,1 +197,1 @@\n-                                                        TESTED_CLASS_FIELD_SIG)) != NULL))\n+                                                        TESTED_CLASS_FIELD_SIG)) != nullptr))\n@@ -227,1 +227,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -235,1 +235,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -282,1 +282,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -293,2 +293,2 @@\n-        if (new_class_data_len == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data_len == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -300,2 +300,2 @@\n-        if (new_class_data == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -306,1 +306,1 @@\n-        if (new_class_data_len != NULL && new_class_data != NULL) {\n+        if (new_class_data_len != nullptr && new_class_data != nullptr) {\n@@ -334,1 +334,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -344,1 +344,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -374,1 +374,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk008\/classfloadhk008.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jclass testedClass = NULL;\n+static jclass testedClass = nullptr;\n@@ -52,1 +52,1 @@\n-static unsigned char* redefClassBytes = NULL;\n+static unsigned char* redefClassBytes = nullptr;\n@@ -55,1 +55,1 @@\n-static unsigned char* newClassBytes = NULL;\n+static unsigned char* newClassBytes = nullptr;\n@@ -66,2 +66,2 @@\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -73,1 +73,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -81,1 +81,1 @@\n-            jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -95,1 +95,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (elements = jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -124,2 +124,2 @@\n-    jfieldID fieldID = NULL;\n-    jobject obj = NULL;\n+    jfieldID fieldID = nullptr;\n+    jobject obj = nullptr;\n@@ -129,1 +129,1 @@\n-            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != NULL)) {\n+            jni->GetStaticFieldID(cls, fieldName, fieldSig)) != nullptr)) {\n@@ -131,1 +131,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -136,1 +136,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetStaticObjectField(cls, fieldID)) != nullptr)) {\n@@ -138,1 +138,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -143,1 +143,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->NewGlobalRef(obj)) != nullptr)) {\n@@ -145,1 +145,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -183,1 +183,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -188,1 +188,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -197,1 +197,1 @@\n-                                                        TESTED_CLASS_FIELD_SIG)) != NULL))\n+                                                        TESTED_CLASS_FIELD_SIG)) != nullptr))\n@@ -227,1 +227,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -235,1 +235,1 @@\n-            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+            if (NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -282,1 +282,1 @@\n-    if (name != NULL && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, TESTED_CLASS_NAME) == 0)) {\n@@ -293,2 +293,2 @@\n-        if (new_class_data_len == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data_len == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -300,2 +300,2 @@\n-        if (new_class_data == NULL) {\n-            NSK_COMPLAIN1(\"NULL new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        if (new_class_data == nullptr) {\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -306,1 +306,1 @@\n-        if (new_class_data_len != NULL && new_class_data != NULL) {\n+        if (new_class_data_len != nullptr && new_class_data != nullptr) {\n@@ -334,1 +334,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -344,1 +344,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -374,1 +374,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk009\/classfloadhk009.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -65,1 +65,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -70,1 +70,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -105,1 +105,1 @@\n-            JVMTI_EVENT_BREAKPOINT, NULL);\n+            JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -121,1 +121,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -132,1 +132,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -141,1 +141,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -156,1 +156,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -165,1 +165,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -179,1 +179,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk001\/clrbrk001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -111,1 +111,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk002\/clrbrk002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -117,1 +117,1 @@\n-    err = jvmti->ClearBreakpoint(NULL, 0);\n+    err = jvmti->ClearBreakpoint(nullptr, 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk005\/clrbrk005.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jfieldID thrown_fid = NULL;\n+static jfieldID thrown_fid = nullptr;\n@@ -50,2 +50,2 @@\n-    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\", \"fld0\", \"I\", 0, NULL },\n-    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\", \"fld1\", \"I\", 1, NULL },\n+    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\", \"fld0\", \"I\", 0, nullptr },\n+    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\", \"fld1\", \"I\", 1, nullptr },\n@@ -53,3 +53,3 @@\n-      \"Lnsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001a;\", 0, NULL },\n-    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001a\", \"fld3\", \"[I\", 0, NULL },\n-    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001b\", \"fld4\", \"F\", 0, NULL },\n+      \"Lnsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001a;\", 0, nullptr },\n+    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001a\", \"fld3\", \"[I\", 0, nullptr },\n+    { \"nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001b\", \"fld4\", \"F\", 0, nullptr },\n@@ -65,1 +65,1 @@\n-    if (fld.fid == NULL) {\n+    if (fld.fid == nullptr) {\n@@ -112,1 +112,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -148,1 +148,1 @@\n-                JVMTI_EVENT_FIELD_ACCESS, NULL);\n+                JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -185,1 +185,1 @@\n-        if (flag == JNI_FALSE && thrown_fid != NULL) {\n+        if (flag == JNI_FALSE && thrown_fid != nullptr) {\n@@ -194,1 +194,1 @@\n-        thrown_fid = NULL;\n+        thrown_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\/clrfldw001.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-                JVMTI_EVENT_FIELD_ACCESS, NULL);\n+                JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -128,1 +128,1 @@\n-        err = jvmti->ClearFieldAccessWatch(NULL, fid2);\n+        err = jvmti->ClearFieldAccessWatch(nullptr, fid2);\n@@ -135,1 +135,1 @@\n-        err = jvmti->ClearFieldAccessWatch(cls, NULL);\n+        err = jvmti->ClearFieldAccessWatch(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw002\/clrfldw002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-static jfieldID thrown_fid = NULL;\n+static jfieldID thrown_fid = nullptr;\n@@ -50,2 +50,2 @@\n-    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\", \"fld0\", \"I\", 0, NULL },\n-    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\", \"fld1\", \"I\", 1, NULL },\n+    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\", \"fld0\", \"I\", 0, nullptr },\n+    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\", \"fld1\", \"I\", 1, nullptr },\n@@ -53,3 +53,3 @@\n-      \"Lnsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001a;\", 0, NULL },\n-    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001a\", \"fld3\", \"[I\", 0, NULL },\n-    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001b\", \"fld4\", \"F\", 0, NULL },\n+      \"Lnsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001a;\", 0, nullptr },\n+    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001a\", \"fld3\", \"[I\", 0, nullptr },\n+    { \"nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001b\", \"fld4\", \"F\", 0, nullptr },\n@@ -65,1 +65,1 @@\n-    if (fld.fid == NULL) {\n+    if (fld.fid == nullptr) {\n@@ -112,1 +112,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -148,1 +148,1 @@\n-                JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+                JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -178,1 +178,1 @@\n-        if (flag == JNI_FALSE && thrown_fid != NULL) {\n+        if (flag == JNI_FALSE && thrown_fid != nullptr) {\n@@ -187,1 +187,1 @@\n-        thrown_fid = NULL;\n+        thrown_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\/clrfmodw001.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-                JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+                JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -130,1 +130,1 @@\n-        err = jvmti->ClearFieldModificationWatch(NULL, fid2);\n+        err = jvmti->ClearFieldModificationWatch(nullptr, fid2);\n@@ -137,1 +137,1 @@\n-        err = jvmti->ClearFieldModificationWatch(cls, NULL);\n+        err = jvmti->ClearFieldModificationWatch(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw002\/clrfmodw002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -116,1 +116,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -140,1 +140,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -142,1 +142,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CompiledMethodLoad\/compmethload001\/compmethload001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -91,1 +91,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -160,1 +160,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -185,1 +185,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -187,1 +187,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)))\n@@ -189,1 +189,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CompiledMethodUnload\/compmethunload001\/compmethunload001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,1 +60,1 @@\n-        } else if (monitors[i] == NULL) {\n+        } else if (monitors[i] == nullptr) {\n@@ -82,1 +82,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -87,1 +87,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CreateRawMonitor\/crrawmon001\/crrawmon001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->CreateRawMonitor(NULL, &monitor);\n+    err = jvmti->CreateRawMonitor(nullptr, &monitor);\n@@ -90,1 +90,1 @@\n-    err = jvmti->CreateRawMonitor(\"dummy\", NULL);\n+    err = jvmti->CreateRawMonitor(\"dummy\", nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CreateRawMonitor\/crrawmon002\/crrawmon002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL)) {\n+    if (!NSK_VERIFY(jvmti != nullptr)) {\n@@ -125,1 +125,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DATA_DUMP_REQUEST, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DATA_DUMP_REQUEST, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DataDumpRequest\/datadumpreq001\/datadumpreq001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    err = jvmti->Deallocate(NULL);\n+    err = jvmti->Deallocate(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Deallocate\/dealloc001\/dealloc001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -61,1 +61,1 @@\n-        } else if (monitors[i] == NULL) {\n+        } else if (monitors[i] == nullptr) {\n@@ -97,1 +97,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -102,1 +102,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -116,1 +116,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon001\/drrawmon001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon003\/drrawmon003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->DestroyRawMonitor(NULL);\n+    err = jvmti->DestroyRawMonitor(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon004\/drrawmon004.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DisposeEnvironment\/disposeenv001\/disposeenv001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_VM_DEATH, NULL))) {\n+            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_VM_DEATH, nullptr))) {\n@@ -82,1 +82,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -88,1 +88,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -102,1 +102,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DisposeEnvironment\/disposeenv002\/disposeenv002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -114,1 +114,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -124,1 +124,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, nullptr)))\n@@ -128,1 +128,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DynamicCodeGenerated\/dyncodgen001\/dyncodgen001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -181,1 +181,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL))\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ForceEarlyReturn\/ForceEarlyReturn001\/ForceEarlyReturn001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -83,1 +83,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -86,1 +86,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ForceGarbageCollection\/forcegc001\/forcegc001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+        if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -63,1 +63,1 @@\n-        if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+        if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -101,1 +101,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -128,1 +128,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ForceGarbageCollection\/forcegc002\/forcegc002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -197,1 +197,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -221,1 +221,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -223,1 +223,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionFinish\/gcfinish001\/gcfinish001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -117,1 +117,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -142,1 +142,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -144,1 +144,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, nullptr)))\n@@ -146,1 +146,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionStart\/gcstart001\/gcstart001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -198,1 +198,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -222,1 +222,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -224,1 +224,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionStart\/gcstart002\/gcstart002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL)) {\n+        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr)) {\n@@ -111,1 +111,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL)) {\n+        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr)) {\n@@ -177,1 +177,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -185,1 +185,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -188,1 +188,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GenerateEvents\/genevents001\/genevents001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-    jmethodID mid = NULL;\n+    jmethodID mid = nullptr;\n@@ -48,1 +48,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetArgumentsSize\/argsize001\/argsize001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetArgumentsSize(NULL, &size);\n+    err = jvmti->GetArgumentsSize(nullptr, &size);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetArgumentsSize(mid, NULL);\n+    err = jvmti->GetArgumentsSize(mid, nullptr);\n@@ -105,1 +105,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetArgumentsSize\/argsize002\/argsize002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -142,1 +142,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -150,1 +150,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -174,1 +174,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetAvailableProcessors\/getavailproc001\/getavailproc001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -73,1 +73,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -78,1 +78,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -120,1 +120,1 @@\n-    jmethodID mid = NULL;\n+    jmethodID mid = nullptr;\n@@ -122,1 +122,1 @@\n-    unsigned char *codes = NULL;\n+    unsigned char *codes = nullptr;\n@@ -125,1 +125,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -138,1 +138,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetBytecodes\/bytecodes001\/bytecodes001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -108,1 +108,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -114,1 +114,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -122,1 +122,1 @@\n-    err = jvmti->GetBytecodes(NULL, &bytecodeCount, &bytecodes);\n+    err = jvmti->GetBytecodes(nullptr, &bytecodeCount, &bytecodes);\n@@ -134,1 +134,1 @@\n-    err = jvmti->GetBytecodes(mid, NULL, &bytecodes);\n+    err = jvmti->GetBytecodes(mid, nullptr, &bytecodes);\n@@ -146,1 +146,1 @@\n-    err = jvmti->GetBytecodes(mid, &bytecodeCount, NULL);\n+    err = jvmti->GetBytecodes(mid, &bytecodeCount, nullptr);\n@@ -156,1 +156,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetBytecodes\/bytecodes002\/bytecodes002.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -327,2 +327,2 @@\n-    sig = NULL;\n-    err = jvmti_env->GetClassSignature(cls, &sig, NULL);\n+    sig = nullptr;\n+    err = jvmti_env->GetClassSignature(cls, &sig, nullptr);\n@@ -350,1 +350,1 @@\n-        if (methods[i] == NULL) {\n+        if (methods[i] == nullptr) {\n@@ -355,4 +355,4 @@\n-            name = NULL;\n-            msig = NULL;\n-            bytecodes = NULL;\n-            err = jvmti_env->GetMethodName(methods[i], &name, &msig, NULL);\n+            name = nullptr;\n+            msig = nullptr;\n+            bytecodes = nullptr;\n+            err = jvmti_env->GetMethodName(methods[i], &name, &msig, nullptr);\n@@ -400,1 +400,1 @@\n-            if (name != NULL) {\n+            if (name != nullptr) {\n@@ -403,1 +403,1 @@\n-            if (msig != NULL) {\n+            if (msig != nullptr) {\n@@ -406,1 +406,1 @@\n-            if (bytecodes != NULL) {\n+            if (bytecodes != nullptr) {\n@@ -412,1 +412,1 @@\n-    if (methods != NULL) {\n+    if (methods != nullptr) {\n@@ -415,1 +415,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -436,1 +436,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -441,1 +441,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -491,1 +491,1 @@\n-                JVMTI_EVENT_CLASS_PREPARE, NULL);\n+                JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -508,1 +508,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -515,1 +515,1 @@\n-                JVMTI_EVENT_CLASS_PREPARE, NULL);\n+                JVMTI_EVENT_CLASS_PREPARE, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetBytecodes\/bytecodes003\/bytecodes003.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    err = jvmti->GetCapabilities(NULL);\n+    err = jvmti->GetCapabilities(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCapabilities\/getcaps001\/getcaps001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -282,1 +282,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -290,1 +290,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -305,1 +305,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -314,1 +314,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCapabilities\/getcaps002\/getcaps002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    err = jvmti->GetClassFields(NULL, &fcount, &fields);\n+    err = jvmti->GetClassFields(nullptr, &fcount, &fields);\n@@ -91,1 +91,1 @@\n-    err = jvmti->GetClassFields(cls, NULL, &fields);\n+    err = jvmti->GetClassFields(cls, nullptr, &fields);\n@@ -101,1 +101,1 @@\n-    err = jvmti->GetClassFields(cls, &fcount, NULL);\n+    err = jvmti->GetClassFields(cls, &fcount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld005\/getclfld005.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld006\/getclfld006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-    const char* utf = env->GetStringUTFChars(jstr, NULL);\n+    const char* utf = env->GetStringUTFChars(jstr, nullptr);\n@@ -45,1 +45,1 @@\n-    if (utf != NULL) {\n+    if (utf != nullptr) {\n@@ -71,1 +71,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -87,1 +87,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -112,1 +112,1 @@\n-        if (fields[j] == NULL) {\n+        if (fields[j] == nullptr) {\n@@ -117,1 +117,1 @@\n-        err = jvmti->GetFieldName(clazz, fields[j], &name, &sig, NULL);\n+        err = jvmti->GetFieldName(clazz, fields[j], &name, &sig, nullptr);\n@@ -126,1 +126,1 @@\n-               (name == NULL || sig == NULL ||\n+               (name == nullptr || sig == nullptr ||\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld007\/getclfld007.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->GetClassLoader(NULL, &classloader);\n+    err = jvmti->GetClassLoader(nullptr, &classloader);\n@@ -90,1 +90,1 @@\n-    err = jvmti->GetClassLoader(cls, NULL);\n+    err = jvmti->GetClassLoader(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr001\/getclsldr001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -100,2 +100,2 @@\n-    if (classloader != NULL) {\n-        printf(\"(%d:%s) class loader is not NULL: 0x%p\\n\",\n+    if (classloader != nullptr) {\n+        printf(\"(%d:%s) class loader is not null: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr002\/getclsldr002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr003\/getclsldr003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -90,1 +90,1 @@\n-    err = jvmti->GetClassLoaderClasses(NULL, &classCount, &classes);\n+    err = jvmti->GetClassLoaderClasses(nullptr, &classCount, &classes);\n@@ -100,1 +100,1 @@\n-    err = jvmti->GetClassLoaderClasses(classloader, NULL, &classes);\n+    err = jvmti->GetClassLoaderClasses(classloader, nullptr, &classes);\n@@ -110,1 +110,1 @@\n-    err = jvmti->GetClassLoaderClasses(classloader, &classCount, NULL);\n+    err = jvmti->GetClassLoaderClasses(classloader, &classCount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoaderClasses\/clsldrclss001\/clsldrclss001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-static jobject testedClassLoader = NULL;\n-static jclass testedClass = NULL;\n-static jfieldID testedFieldID = NULL;\n+static jobject testedClassLoader = nullptr;\n+static jclass testedClass = nullptr;\n+static jfieldID testedFieldID = nullptr;\n@@ -61,1 +61,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -64,1 +64,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -69,1 +69,1 @@\n-            jni->GetStaticFieldID(testedClass, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(testedClass, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -85,1 +85,1 @@\n-        if (signature != NULL && strcmp(signature, exp_sig) == 0) {\n+        if (signature != nullptr && strcmp(signature, exp_sig) == 0) {\n@@ -90,1 +90,1 @@\n-        if (signature != NULL)\n+        if (signature != nullptr)\n@@ -93,1 +93,1 @@\n-        if (generic != NULL)\n+        if (generic != nullptr)\n@@ -118,1 +118,1 @@\n-            jni->GetStaticObjectField(testedClass, testedFieldID)) != NULL)) {\n+            jni->GetStaticObjectField(testedClass, testedFieldID)) != nullptr)) {\n@@ -130,1 +130,1 @@\n-    if (!NSK_VERIFY(classes != NULL)) {\n+    if (!NSK_VERIFY(classes != nullptr)) {\n@@ -139,1 +139,1 @@\n-    if (classes != NULL)\n+    if (classes != nullptr)\n@@ -149,1 +149,1 @@\n-            jni->GetStaticObjectField(testedClass, testedFieldID)) != NULL)) {\n+            jni->GetStaticObjectField(testedClass, testedFieldID)) != nullptr)) {\n@@ -161,1 +161,1 @@\n-    if (!NSK_VERIFY(classes != NULL)) {\n+    if (!NSK_VERIFY(classes != nullptr)) {\n@@ -177,1 +177,1 @@\n-    if (classes != NULL)\n+    if (classes != nullptr)\n@@ -201,1 +201,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -211,1 +211,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -214,1 +214,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoaderClasses\/clsldrclss002\/clsldrclss002.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    err = jvmti->GetClassMethods(NULL, &mcount, &methods);\n+    err = jvmti->GetClassMethods(nullptr, &mcount, &methods);\n@@ -91,1 +91,1 @@\n-    err = jvmti->GetClassMethods(cls, NULL, &methods);\n+    err = jvmti->GetClassMethods(cls, nullptr, &methods);\n@@ -101,1 +101,1 @@\n-    err = jvmti->GetClassMethods(cls, &mcount, NULL);\n+    err = jvmti->GetClassMethods(cls, &mcount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassMethods\/getclmthd005\/getclmthd005.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassMethods\/getclmthd006\/getclmthd006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -127,1 +127,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -132,1 +132,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -150,1 +150,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -176,1 +176,1 @@\n-        if (methods[k] == NULL) {\n+        if (methods[k] == nullptr) {\n@@ -190,1 +190,1 @@\n-            if (methods[k] != NULL) {\n+            if (methods[k] != nullptr) {\n@@ -198,1 +198,1 @@\n-                    if (name != NULL && sig != NULL &&\n+                    if (name != nullptr && sig != nullptr &&\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassMethods\/getclmthd007\/getclmthd007.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->GetClassModifiers(NULL, &modifiers);\n+    err = jvmti->GetClassModifiers(nullptr, &modifiers);\n@@ -90,1 +90,1 @@\n-    err = jvmti->GetClassModifiers(cls, NULL);\n+    err = jvmti->GetClassModifiers(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf004\/getclmdf004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,1 +60,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -65,1 +65,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -78,1 +78,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf005\/getclmdf005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -63,1 +63,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -68,1 +68,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -93,1 +93,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf006\/getclmdf006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -63,1 +63,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -68,1 +68,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -94,1 +94,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassModifiers\/getclmdf007\/getclmdf007.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -66,1 +66,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -71,1 +71,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -85,1 +85,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig004\/getclsig004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -60,1 +60,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    err = jvmti->GetClassSignature(NULL, &sig, &generic);\n+    err = jvmti->GetClassSignature(nullptr, &sig, &generic);\n@@ -91,1 +91,1 @@\n-    err = jvmti->GetClassSignature(cls, NULL, &generic);\n+    err = jvmti->GetClassSignature(cls, nullptr, &generic);\n@@ -105,1 +105,1 @@\n-    err = jvmti->GetClassSignature(cls, &sig, NULL);\n+    err = jvmti->GetClassSignature(cls, &sig, nullptr);\n@@ -114,1 +114,1 @@\n-        if (sig == NULL || strcmp(sig, CLASS_SIGNATURE) != 0) {\n+        if (sig == nullptr || strcmp(sig, CLASS_SIGNATURE) != 0) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig005\/getclsig005.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    { \"getclsig006\", \"Lnsk\/jvmti\/GetClassSignature\/getclsig006;\", \"NULL\" },\n+    { \"getclsig006\", \"Lnsk\/jvmti\/GetClassSignature\/getclsig006;\", \"null\" },\n@@ -54,1 +54,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -70,1 +70,1 @@\n-                strcmp(class_sig[idx][2], (gen_sign == NULL) ? \"NULL\" : gen_sign) != 0) {\n+                strcmp(class_sig[idx][2], (gen_sign == nullptr) ? \"null\" : gen_sign) != 0) {\n@@ -78,1 +78,1 @@\n-                sign, (gen_sign == NULL) ? \"NULL\" : gen_sign,\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign,\n@@ -84,1 +84,1 @@\n-                sign, (gen_sign == NULL) ? \"NULL\" : gen_sign);\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign);\n@@ -90,1 +90,1 @@\n-        if (gen_sign != NULL)\n+        if (gen_sign != nullptr)\n@@ -108,1 +108,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (testedCls = jni->FindClass(class_sig[i][1])) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni, (testedCls = jni->FindClass(class_sig[i][1])) != nullptr)) {\n@@ -140,1 +140,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig006\/getclsig006.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->GetClassStatus(NULL, &status);\n+    err = jvmti->GetClassStatus(nullptr, &status);\n@@ -90,1 +90,1 @@\n-    err = jvmti->GetClassStatus(cls, NULL);\n+    err = jvmti->GetClassStatus(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassStatus\/getclstat005\/getclstat005.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -63,1 +63,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -68,1 +68,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassStatus\/getclstat006\/getclstat006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassStatus\/getclstat007\/getclstat007.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-    if (prevTime != NULL) {\n+    if (prevTime != nullptr) {\n@@ -150,1 +150,1 @@\n-        if (!checkCpuTime(jvmti, testAgentThread, &prevAgentThreadTime, NULL, \"agent thread\")) {\n+        if (!checkCpuTime(jvmti, testAgentThread, &prevAgentThreadTime, nullptr, \"agent thread\")) {\n@@ -160,1 +160,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -187,1 +187,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -217,1 +217,1 @@\n-        if (!checkCpuTime(jvmti, thread, &time, NULL, \"VM_INIT callback\")) {\n+        if (!checkCpuTime(jvmti, thread, &time, nullptr, \"VM_INIT callback\")) {\n@@ -233,1 +233,1 @@\n-        if (!checkCpuTime(jvmti, NULL, &time, NULL, \"VM_DEATH callback\")) {\n+        if (!checkCpuTime(jvmti, nullptr, &time, nullptr, \"VM_DEATH callback\")) {\n@@ -240,1 +240,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -269,1 +269,1 @@\n-    if (threadInfo.name != NULL && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n+    if (threadInfo.name != nullptr && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n@@ -271,1 +271,1 @@\n-        if (!checkCpuTime(jvmti, thread, &prevTestedThreadTime, NULL, \"THREAD_START callback\")) {\n+        if (!checkCpuTime(jvmti, thread, &prevTestedThreadTime, nullptr, \"THREAD_START callback\")) {\n@@ -292,1 +292,1 @@\n-    if (threadInfo.name != NULL && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n+    if (threadInfo.name != nullptr && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n@@ -316,1 +316,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -328,1 +328,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -358,1 +358,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -362,1 +362,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTime\/curthrcputime001\/curthrcputime001.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-    if (initInfo != NULL) {\n+    if (initInfo != nullptr) {\n@@ -135,1 +135,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -146,1 +146,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -166,1 +166,1 @@\n-        if (!checkTimerInfo(jvmti, &initInfo, NULL, \"VM_INIT callback\")) {\n+        if (!checkTimerInfo(jvmti, &initInfo, nullptr, \"VM_INIT callback\")) {\n@@ -186,1 +186,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -245,1 +245,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -253,1 +253,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -285,1 +285,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -289,1 +289,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTimerInfo\/curthrtimerinfo001\/curthrtimerinfo001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-    if (vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1) != JNI_OK || jvmti == NULL) {\n+    if (vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1) != JNI_OK || jvmti == nullptr) {\n@@ -112,1 +112,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetEnv\/GetEnv001\/GetEnv001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    void* storage = NULL;\n+    void* storage = nullptr;\n@@ -61,2 +61,2 @@\n-    if (storage != NULL) {\n-        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT NULL storage in %s:\\n\"\n+    if (storage != nullptr) {\n+        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT null storage in %s:\\n\"\n@@ -116,1 +116,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -143,1 +143,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -151,1 +151,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -166,1 +166,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -175,1 +175,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetEnvironmentLocalStorage\/getenvstor001\/getenvstor001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -256,1 +256,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -268,1 +268,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -293,1 +293,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -298,1 +298,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -302,1 +302,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetErrorName\/geterrname001\/geterrname001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-                               jvmti->GetErrorName(JVMTI_ERROR_NONE, NULL)))\n+                               jvmti->GetErrorName(JVMTI_ERROR_NONE, nullptr)))\n@@ -79,1 +79,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -92,1 +92,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -96,1 +96,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetErrorName\/geterrname002\/geterrname002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    jvmtiExtensionEventInfo* extList = NULL;\n+    jvmtiExtensionEventInfo* extList = nullptr;\n@@ -64,2 +64,2 @@\n-        if (extList == NULL) {\n-            NSK_COMPLAIN3(\"In %s phase GetExtensionEvents() returned NULL pointer:\\n\"\n+        if (extList == nullptr) {\n+            NSK_COMPLAIN3(\"In %s phase GetExtensionEvents() returned null pointer:\\n\"\n@@ -83,1 +83,1 @@\n-            if (extList[i].params != NULL) {\n+            if (extList[i].params != nullptr) {\n@@ -97,4 +97,4 @@\n-            if (extList[i].id == NULL\n-                    || extList[i].short_description == NULL\n-                    || (extList[i].params == NULL && extList[i].param_count > 0)) {\n-                NSK_COMPLAIN9(\"In %s phase GetExtensionEvents() returned event #%d with NULL attribute(s):\\n\"\n+            if (extList[i].id == nullptr\n+                    || extList[i].short_description == nullptr\n+                    || (extList[i].params == nullptr && extList[i].param_count > 0)) {\n+                NSK_COMPLAIN9(\"In %s phase GetExtensionEvents() returned event #%d with null attribute(s):\\n\"\n@@ -114,1 +114,1 @@\n-            if (extList[i].id != NULL && strlen(extList[i].id) <= 0) {\n+            if (extList[i].id != nullptr && strlen(extList[i].id) <= 0) {\n@@ -126,1 +126,1 @@\n-            } else if (strstr(extList[i].id, NAME_PREFIX) == NULL) {\n+            } else if (strstr(extList[i].id, NAME_PREFIX) == nullptr) {\n@@ -140,1 +140,1 @@\n-            if (extList[i].short_description != NULL && strlen(extList[i].short_description) <= 0) {\n+            if (extList[i].short_description != nullptr && strlen(extList[i].short_description) <= 0) {\n@@ -154,1 +154,1 @@\n-            if (extList[i].param_count > 0 && extList[i].params != NULL) {\n+            if (extList[i].param_count > 0 && extList[i].params != nullptr) {\n@@ -156,1 +156,1 @@\n-                    if (extList[i].params[j].name == NULL\n+                    if (extList[i].params[j].name == nullptr\n@@ -265,1 +265,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -273,1 +273,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -283,1 +283,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetExtensionEvents\/extevents001\/extevents001.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    jvmtiExtensionFunctionInfo* extList = NULL;\n+    jvmtiExtensionFunctionInfo* extList = nullptr;\n@@ -63,2 +63,2 @@\n-        if (extList == NULL) {\n-            NSK_COMPLAIN3(\"In %s phase GetExtensionFunctions() returned NULL pointer:\\n\"\n+        if (extList == nullptr) {\n+            NSK_COMPLAIN3(\"In %s phase GetExtensionFunctions() returned null pointer:\\n\"\n@@ -82,1 +82,1 @@\n-            if (extList[i].params != NULL) {\n+            if (extList[i].params != nullptr) {\n@@ -99,1 +99,1 @@\n-            if (extList[i].errors != NULL) {\n+            if (extList[i].errors != nullptr) {\n@@ -106,6 +106,6 @@\n-            if (extList[i].func == NULL\n-                    || extList[i].id == NULL\n-                    || extList[i].short_description == NULL\n-                    || (extList[i].params == NULL && extList[i].param_count > 0)\n-                    || (extList[i].errors == NULL && extList[i].error_count > 0)) {\n-                NSK_COMPLAIN9(\"In %s phase GetExtensionFunctions() returned function #%d with NULL attribute(s):\\n\"\n+            if (extList[i].func == nullptr\n+                    || extList[i].id == nullptr\n+                    || extList[i].short_description == nullptr\n+                    || (extList[i].params == nullptr && extList[i].param_count > 0)\n+                    || (extList[i].errors == nullptr && extList[i].error_count > 0)) {\n+                NSK_COMPLAIN9(\"In %s phase GetExtensionFunctions() returned function #%d with null attribute(s):\\n\"\n@@ -125,1 +125,1 @@\n-            if (extList[i].id != NULL && strlen(extList[i].id) <= 0) {\n+            if (extList[i].id != nullptr && strlen(extList[i].id) <= 0) {\n@@ -137,1 +137,1 @@\n-            } else if (strstr(extList[i].id, NAME_PREFIX) == NULL) {\n+            } else if (strstr(extList[i].id, NAME_PREFIX) == nullptr) {\n@@ -151,1 +151,1 @@\n-            if (extList[i].short_description != NULL && strlen(extList[i].short_description) <= 0) {\n+            if (extList[i].short_description != nullptr && strlen(extList[i].short_description) <= 0) {\n@@ -165,1 +165,1 @@\n-            if (extList[i].param_count > 0 && extList[i].params != NULL) {\n+            if (extList[i].param_count > 0 && extList[i].params != nullptr) {\n@@ -167,1 +167,1 @@\n-                    if (extList[i].params[j].name == NULL\n+                    if (extList[i].params[j].name == nullptr\n@@ -276,1 +276,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -284,1 +284,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -294,1 +294,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetExtensionFunctions\/extfuncs001\/extfuncs001.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -60,1 +60,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -76,1 +76,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -87,1 +87,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldDeclaringClass\/getfldecl001\/getfldecl001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -60,1 +60,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -76,1 +76,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -87,1 +87,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldDeclaringClass\/getfldecl002\/getfldecl002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -74,1 +74,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -79,1 +79,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -95,1 +95,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -106,1 +106,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldDeclaringClass\/getfldecl004\/getfldecl004.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetFieldModifiers(NULL, fid, &modifiers);\n+    err = jvmti->GetFieldModifiers(nullptr, fid, &modifiers);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetFieldModifiers(cls, NULL, &modifiers);\n+    err = jvmti->GetFieldModifiers(cls, nullptr, &modifiers);\n@@ -107,1 +107,1 @@\n-    err = jvmti->GetFieldModifiers(cls, fid, NULL);\n+    err = jvmti->GetFieldModifiers(cls, fid, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldModifiers\/getfldmdf003\/getfldmdf003.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -123,1 +123,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -128,1 +128,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -158,1 +158,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -169,1 +169,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldModifiers\/getfldmdf004\/getfldmdf004.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (field == NULL) {\n+    if (field == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetFieldName(NULL, field, &name, &sig, &generic);\n+    err = jvmti->GetFieldName(nullptr, field, &name, &sig, &generic);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetFieldName(cls, NULL, &name, &sig, &generic);\n+    err = jvmti->GetFieldName(cls, nullptr, &name, &sig, &generic);\n@@ -107,1 +107,1 @@\n-    err = jvmti->GetFieldName(cls, field, NULL, &sig, &generic);\n+    err = jvmti->GetFieldName(cls, field, nullptr, &sig, &generic);\n@@ -116,1 +116,1 @@\n-        if (sig == NULL || strcmp(sig, \"I\") != 0) {\n+        if (sig == nullptr || strcmp(sig, \"I\") != 0) {\n@@ -125,1 +125,1 @@\n-    err = jvmti->GetFieldName(cls, field, &name, NULL, &generic);\n+    err = jvmti->GetFieldName(cls, field, &name, nullptr, &generic);\n@@ -134,1 +134,1 @@\n-        if (name == NULL || strcmp(name, \"fld\") != 0) {\n+        if (name == nullptr || strcmp(name, \"fld\") != 0) {\n@@ -143,1 +143,1 @@\n-    err = jvmti->GetFieldName(cls, field, &name, &sig, NULL);\n+    err = jvmti->GetFieldName(cls, field, &name, &sig, nullptr);\n@@ -152,1 +152,1 @@\n-        if (name == NULL || strcmp(name, \"fld\") != 0) {\n+        if (name == nullptr || strcmp(name, \"fld\") != 0) {\n@@ -156,1 +156,1 @@\n-        if (sig == NULL || strcmp(sig, \"I\") != 0) {\n+        if (sig == nullptr || strcmp(sig, \"I\") != 0) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm003\/getfldnm003.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -84,1 +84,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -89,1 +89,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -105,1 +105,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -118,1 +118,1 @@\n-        if (fid == NULL) {\n+        if (fid == nullptr) {\n@@ -134,1 +134,1 @@\n-        if (name == NULL || strcmp(name, fields[i].name) != 0) {\n+        if (name == nullptr || strcmp(name, fields[i].name) != 0) {\n@@ -139,1 +139,1 @@\n-        if (sig == NULL || strcmp(sig, fields[i].sig) != 0) {\n+        if (sig == nullptr || strcmp(sig, fields[i].sig) != 0) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm004\/getfldnm004.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-      \"Lnsk\/jvmti\/GetFieldName\/getfldnm005;\", \"NULL\" },\n+      \"Lnsk\/jvmti\/GetFieldName\/getfldnm005;\", \"null\" },\n@@ -62,1 +62,1 @@\n-      \"NULL\" },\n+      \"null\" },\n@@ -65,1 +65,1 @@\n-      \"NULL\" },\n+      \"null\" },\n@@ -83,1 +83,1 @@\n-      \"NULL\" }\n+      \"null\" }\n@@ -86,1 +86,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -104,1 +104,1 @@\n-                strcmp(fld_sig[idx][3], (gen_sign == NULL) ? \"NULL\" : gen_sign) != 0) {\n+                strcmp(fld_sig[idx][3], (gen_sign == nullptr) ? \"null\" : gen_sign) != 0) {\n@@ -113,1 +113,1 @@\n-                sign, (gen_sign == NULL) ? \"NULL\" : gen_sign,\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign,\n@@ -119,1 +119,1 @@\n-                sign, (gen_sign == NULL) ? \"NULL\" : gen_sign);\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign);\n@@ -126,1 +126,1 @@\n-        if (gen_sign != NULL)\n+        if (gen_sign != nullptr)\n@@ -138,1 +138,1 @@\n-    jfieldID testedFld = NULL;\n+    jfieldID testedFld = nullptr;\n@@ -148,1 +148,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedFld = jni->GetFieldID(objCls, fld_sig[i][0], fld_sig[i][2])) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedFld = jni->GetFieldID(objCls, fld_sig[i][0], fld_sig[i][2])) != nullptr)) {\n@@ -156,1 +156,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedFld = jni->GetStaticFieldID(objCls, fld_sig[i][0], fld_sig[i][2])) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedFld = jni->GetStaticFieldID(objCls, fld_sig[i][0], fld_sig[i][2])) != nullptr)) {\n@@ -192,1 +192,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm005\/getfldnm005.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    err = jvmti->GetImplementedInterfaces(NULL, &icount, &interfaces);\n+    err = jvmti->GetImplementedInterfaces(nullptr, &icount, &interfaces);\n@@ -91,1 +91,1 @@\n-    err = jvmti->GetImplementedInterfaces(cls, NULL, &interfaces);\n+    err = jvmti->GetImplementedInterfaces(cls, nullptr, &interfaces);\n@@ -101,1 +101,1 @@\n-    err = jvmti->GetImplementedInterfaces(cls, &icount, NULL);\n+    err = jvmti->GetImplementedInterfaces(cls, &icount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetImplementedInterfaces\/getintrf005\/getintrf005.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetImplementedInterfaces\/getintrf006\/getintrf006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -71,2 +71,2 @@\n-    { \"InnerClass1\", 0, NULL },\n-    { \"InnerInterface1\", 0, NULL },\n+    { \"InnerClass1\", 0, nullptr },\n+    { \"InnerInterface1\", 0, nullptr },\n@@ -75,3 +75,3 @@\n-    { \"OuterClass1\", 0, NULL },\n-    { \"OuterClass2\", 0, NULL },\n-    { \"OuterInterface1\", 0, NULL },\n+    { \"OuterClass1\", 0, nullptr },\n+    { \"OuterClass2\", 0, nullptr },\n+    { \"OuterInterface1\", 0, nullptr },\n@@ -81,1 +81,1 @@\n-    { \"OuterClass5\", 0, NULL }\n+    { \"OuterClass5\", 0, nullptr }\n@@ -98,1 +98,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -103,1 +103,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -119,1 +119,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -144,1 +144,1 @@\n-        if (interfaces[j] == NULL) {\n+        if (interfaces[j] == nullptr) {\n@@ -156,1 +156,1 @@\n-                if ((j < classes[i].icount) && (sig == NULL ||\n+                if ((j < classes[i].icount) && (sig == nullptr ||\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetImplementedInterfaces\/getintrf007\/getintrf007.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -172,1 +172,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -202,1 +202,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -207,1 +207,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -211,1 +211,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJLocationFormat\/getjlocfmt001\/getjlocfmt001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,2 +48,2 @@\n-    NSK_DISPLAY0(\"Check if GetJLocationFormat(NULL) returns JVMTI_ERROR_NULL_POINTER\\n\");\n-    if (!NSK_JVMTI_VERIFY_CODE(JVMTI_ERROR_NULL_POINTER, jvmti->GetJLocationFormat(NULL)))\n+    NSK_DISPLAY0(\"Check if GetJLocationFormat(null) returns JVMTI_ERROR_NULL_POINTER\\n\");\n+    if (!NSK_JVMTI_VERIFY_CODE(JVMTI_ERROR_NULL_POINTER, jvmti->GetJLocationFormat(nullptr)))\n@@ -72,1 +72,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -85,1 +85,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -89,1 +89,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJLocationFormat\/getjlocfmt002\/getjlocfmt002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -48,1 +48,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -51,1 +51,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -123,1 +123,1 @@\n-    jniNativeInterface *tested_jni_functions = NULL;\n+    jniNativeInterface *tested_jni_functions = nullptr;\n@@ -159,1 +159,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -194,1 +194,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -201,1 +201,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJNIFunctionTable\/getjniftab001\/getjniftab001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -49,1 +49,1 @@\n-    err = jvmti->GetJNIFunctionTable((exError == JVMTI_ERROR_NULL_POINTER) ? NULL : &orig_jni_functions);\n+    err = jvmti->GetJNIFunctionTable((exError == JVMTI_ERROR_NULL_POINTER) ? nullptr : &orig_jni_functions);\n@@ -64,1 +64,1 @@\n-    JNIEnv *nextEnv = NULL;\n+    JNIEnv *nextEnv = nullptr;\n@@ -66,1 +66,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -118,1 +118,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -125,1 +125,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJNIFunctionTable\/getjniftab002\/getjniftab002.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,2 +70,2 @@\n-    if (mid == NULL) {\n-        printf(\"Name = %s, sig = %s: mid = NULL\\n\", name, sig);\n+    if (mid == nullptr) {\n+        printf(\"Name = %s, sig = %s: mid = null\\n\", name, sig);\n@@ -135,1 +135,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab001\/linetab001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -111,1 +111,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -119,1 +119,1 @@\n-    err = jvmti->GetLineNumberTable(NULL, &entryCount, &table);\n+    err = jvmti->GetLineNumberTable(nullptr, &entryCount, &table);\n@@ -129,1 +129,1 @@\n-    err = jvmti->GetLineNumberTable(mid, NULL, &table);\n+    err = jvmti->GetLineNumberTable(mid, nullptr, &table);\n@@ -139,1 +139,1 @@\n-    err = jvmti->GetLineNumberTable(mid, &entryCount, NULL);\n+    err = jvmti->GetLineNumberTable(mid, &entryCount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab002\/linetab002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -102,1 +102,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -112,1 +112,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab003\/linetab003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->GetLoadedClasses(NULL, &classes);\n+    err = jvmti->GetLoadedClasses(nullptr, &classes);\n@@ -90,1 +90,1 @@\n-    err = jvmti->GetLoadedClasses(&classCount, NULL);\n+    err = jvmti->GetLoadedClasses(&classCount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLoadedClasses\/loadedclss001\/loadedclss001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-static jobject testedClassLoader = NULL;\n-static jclass testedClass = NULL;\n-static jfieldID testedFieldID = NULL;\n+static jobject testedClassLoader = nullptr;\n+static jclass testedClass = nullptr;\n+static jfieldID testedFieldID = nullptr;\n@@ -66,1 +66,1 @@\n-        if (signature != NULL && strcmp(signature, exp_sig) == 0) {\n+        if (signature != nullptr && strcmp(signature, exp_sig) == 0) {\n@@ -71,1 +71,1 @@\n-        if (signature != NULL)\n+        if (signature != nullptr)\n@@ -74,1 +74,1 @@\n-        if (generic != NULL)\n+        if (generic != nullptr)\n@@ -103,1 +103,1 @@\n-    if (!NSK_VERIFY(classes != NULL)) {\n+    if (!NSK_VERIFY(classes != nullptr)) {\n@@ -124,1 +124,1 @@\n-    if (classes != NULL)\n+    if (classes != nullptr)\n@@ -146,1 +146,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -156,1 +156,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -159,1 +159,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLoadedClasses\/loadedclss002\/loadedclss002.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-    jobject ob1 = NULL, ob2 = NULL;\n+    jobject ob1 = nullptr, ob2 = nullptr;\n@@ -174,1 +174,1 @@\n-            if (fid == NULL) {\n+            if (fid == nullptr) {\n@@ -287,1 +287,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -310,1 +310,1 @@\n-            mid2 = NULL;\n+            mid2 = nullptr;\n@@ -323,1 +323,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -335,1 +335,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -379,1 +379,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -403,1 +403,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -408,1 +408,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -477,1 +477,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -490,1 +490,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariable\/getlocal001\/getlocal001.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,1 +41,1 @@\n-static jmethodID mid = NULL;\n+static jmethodID mid = nullptr;\n@@ -55,1 +55,1 @@\n-            JVMTI_EVENT_METHOD_EXIT, NULL);\n+            JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -101,1 +101,1 @@\n-                err = jvmti->GetLocalFloat(thr, 0, table[i].slot, NULL);\n+                err = jvmti->GetLocalFloat(thr, 0, table[i].slot, nullptr);\n@@ -132,1 +132,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -137,1 +137,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -184,1 +184,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -194,1 +194,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -201,1 +201,1 @@\n-        JVMTI_EVENT_METHOD_EXIT, NULL);\n+        JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -218,1 +218,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -223,1 +223,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariable\/getlocal002\/getlocal002.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,4 @@\n-    { 0, 21, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", NULL, 0 },\n-    { 4, 17, (char*) \"l\",    (char*) \"J\", NULL, 1 },\n-    { 7, 14, (char*) \"f\",    (char*) \"F\", NULL, 2 },\n-    { 12, 9, (char*) \"d\",    (char*) \"D\", NULL, 3 }\n+    { 0, 21, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", nullptr, 0 },\n+    { 4, 17, (char*) \"l\",    (char*) \"J\", nullptr, 1 },\n+    { 7, 14, (char*) \"f\",    (char*) \"F\", nullptr, 2 },\n+    { 12, 9, (char*) \"d\",    (char*) \"D\", nullptr, 3 }\n@@ -51,7 +51,7 @@\n-    { 0, 32, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", NULL, 0 },\n-    { 0, 32, (char*) \"step\", (char*) \"I\", NULL, 1 },\n-    { 2, 29, (char*) \"i2\",   (char*) \"S\", NULL, 2 },\n-    { 4, 27, (char*) \"i3\",   (char*) \"C\", NULL, 3 },\n-    { 7, 24, (char*) \"i4\",   (char*) \"B\", NULL, 4 },\n-    { 10,21, (char*) \"i5\",   (char*) \"Z\", NULL, 5 },\n-    { 13,18, (char*) \"i1\",   (char*) \"I\", NULL, 6 }\n+    { 0, 32, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", nullptr, 0 },\n+    { 0, 32, (char*) \"step\", (char*) \"I\", nullptr, 1 },\n+    { 2, 29, (char*) \"i2\",   (char*) \"S\", nullptr, 2 },\n+    { 4, 27, (char*) \"i3\",   (char*) \"C\", nullptr, 3 },\n+    { 7, 24, (char*) \"i4\",   (char*) \"B\", nullptr, 4 },\n+    { 10,21, (char*) \"i5\",   (char*) \"Z\", nullptr, 5 },\n+    { 13,18, (char*) \"i1\",   (char*) \"I\", nullptr, 6 }\n@@ -60,5 +60,5 @@\n-    { 0, 70, (char*) \"ob\",  (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", NULL, 0 },\n-    { 2, 67, (char*) \"ob1\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", NULL, 1 },\n-    { 56,13, (char*) \"ob2\", (char*) \"[I\", NULL, 2 },\n-    { 61, 0, (char*) \"i\",   (char*) \"I\", NULL, 3 },\n-    { 64, 5, (char*) \"e\",   (char*) \"Ljava\/lang\/IndexOutOfBoundsException;\", NULL, 4 }\n+    { 0, 70, (char*) \"ob\",  (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", nullptr, 0 },\n+    { 2, 67, (char*) \"ob1\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", nullptr, 1 },\n+    { 56,13, (char*) \"ob2\", (char*) \"[I\", nullptr, 2 },\n+    { 61, 0, (char*) \"i\",   (char*) \"I\", nullptr, 3 },\n+    { 64, 5, (char*) \"e\",   (char*) \"Ljava\/lang\/IndexOutOfBoundsException;\", nullptr, 4 }\n@@ -67,8 +67,8 @@\n-    { 0, 33, (char*) \"i1\", (char*) \"I\", NULL, 0 },\n-    { 0, 33, (char*) \"l\",  (char*) \"J\", NULL, 1 },\n-    { 0, 33, (char*) \"i2\", (char*) \"S\", NULL, 2 },\n-    { 0, 33, (char*) \"d\",  (char*) \"D\", NULL, 3 },\n-    { 0, 33, (char*) \"i3\", (char*) \"C\", NULL, 4 },\n-    { 0, 33, (char*) \"f\",  (char*) \"F\", NULL, 5 },\n-    { 0, 33, (char*) \"i4\", (char*) \"B\", NULL, 6 },\n-    { 0, 33, (char*) \"b\",  (char*) \"Z\", NULL, 7 }\n+    { 0, 33, (char*) \"i1\", (char*) \"I\", nullptr, 0 },\n+    { 0, 33, (char*) \"l\",  (char*) \"J\", nullptr, 1 },\n+    { 0, 33, (char*) \"i2\", (char*) \"S\", nullptr, 2 },\n+    { 0, 33, (char*) \"d\",  (char*) \"D\", nullptr, 3 },\n+    { 0, 33, (char*) \"i3\", (char*) \"C\", nullptr, 4 },\n+    { 0, 33, (char*) \"f\",  (char*) \"F\", nullptr, 5 },\n+    { 0, 33, (char*) \"i4\", (char*) \"B\", nullptr, 6 },\n+    { 0, 33, (char*) \"b\",  (char*) \"Z\", nullptr, 7 }\n@@ -77,3 +77,3 @@\n-    { 0, 6, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", NULL, 0 },\n-    { 0, 6, (char*) \"i\",    (char*) \"I\", NULL, 1 },\n-    { 2, 4, (char*) \"i12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\", (char*) \"I\", NULL, 2 }\n+    { 0, 6, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", nullptr, 0 },\n+    { 0, 6, (char*) \"i\",    (char*) \"I\", nullptr, 1 },\n+    { 2, 4, (char*) \"i12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\", (char*) \"I\", nullptr, 2 }\n@@ -82,1 +82,1 @@\n-    { 0, 5, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", NULL, 0 },\n+    { 0, 5, (char*) \"this\", (char*) \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab001;\", nullptr, 0 },\n@@ -85,1 +85,1 @@\n-    { 0, NULL },\n+    { 0, nullptr },\n@@ -109,2 +109,2 @@\n-    if (mid == NULL) {\n-        printf(\"Name = %s, sig = %s: mid = NULL\\n\", name, sig);\n+    if (mid == nullptr) {\n+        printf(\"Name = %s, sig = %s: mid = null\\n\", name, sig);\n@@ -197,1 +197,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab001\/localtab001.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -109,1 +109,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -117,1 +117,1 @@\n-    err = jvmti->GetLocalVariableTable(NULL, &entryCount, &table);\n+    err = jvmti->GetLocalVariableTable(nullptr, &entryCount, &table);\n@@ -127,1 +127,1 @@\n-    err = jvmti->GetLocalVariableTable(mid, NULL, &table);\n+    err = jvmti->GetLocalVariableTable(mid, nullptr, &table);\n@@ -137,1 +137,1 @@\n-    err = jvmti->GetLocalVariableTable(mid, &entryCount, NULL);\n+    err = jvmti->GetLocalVariableTable(mid, &entryCount, nullptr);\n@@ -145,1 +145,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab002\/localtab002.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -102,1 +102,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -110,1 +110,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab003\/localtab003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,3 +84,3 @@\n-    { 1, (char*) \"<init>\", (char*) \"()V\", 6, constr_lv, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 7, finMeth_lv, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, statMeth_lv, NULL }\n+    { 1, (char*) \"<init>\", (char*) \"()V\", 6, constr_lv, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 7, finMeth_lv, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, statMeth_lv, nullptr }\n@@ -89,1 +89,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -105,1 +105,1 @@\n-        if (methInfo[i].mid == NULL) {\n+        if (methInfo[i].mid == nullptr) {\n@@ -199,1 +199,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab004\/localtab004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"NULL\" },\n+    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"null\" },\n@@ -51,1 +51,1 @@\n-    { \"constr_i\", \"I\", \"NULL\" },\n+    { \"constr_i\", \"I\", \"null\" },\n@@ -54,2 +54,2 @@\n-    { \"constr_f\", \"F\", \"NULL\" },\n-    { \"constr_ch\", \"C\", \"NULL\" },\n+    { \"constr_f\", \"F\", \"null\" },\n+    { \"constr_ch\", \"C\", \"null\" },\n@@ -61,3 +61,3 @@\n-    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"NULL\" },\n-    { \"ins_c\", \"C\", \"NULL\" },\n-    { \"ins_i\", \"J\", \"NULL\" },\n+    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"null\" },\n+    { \"ins_c\", \"C\", \"null\" },\n+    { \"ins_i\", \"J\", \"null\" },\n@@ -66,2 +66,2 @@\n-    { \"ins_k\", \"J\", \"NULL\" },\n-    { \"ins_l\", \"J\", \"NULL\" },\n+    { \"ins_k\", \"J\", \"null\" },\n+    { \"ins_l\", \"J\", \"null\" },\n@@ -73,4 +73,4 @@\n-    { \"stat_x\", \"I\", \"NULL\" },\n-    { \"stat_y\", \"I\", \"NULL\" },\n-    { \"stat_z\", \"I\", \"NULL\" },\n-    { \"stat_j\", \"D\", \"NULL\" },\n+    { \"stat_x\", \"I\", \"null\" },\n+    { \"stat_y\", \"I\", \"null\" },\n+    { \"stat_z\", \"I\", \"null\" },\n+    { \"stat_j\", \"D\", \"null\" },\n@@ -92,3 +92,3 @@\n-    { 1, (char*) \"<init>\", (char*) \"()V\", 7, constr_lv, NULL },\n-    { 1, (char*) \"insMethod\", (char*) \"(CJLnsk\/jvmti\/GetLocalVariableTable\/localtab005d;J)V\", 7, insMeth_lv, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, statMeth_lv, NULL }\n+    { 1, (char*) \"<init>\", (char*) \"()V\", 7, constr_lv, nullptr },\n+    { 1, (char*) \"insMethod\", (char*) \"(CJLnsk\/jvmti\/GetLocalVariableTable\/localtab005d;J)V\", 7, insMeth_lv, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, statMeth_lv, nullptr }\n@@ -97,1 +97,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -113,1 +113,1 @@\n-        if (methInfo[i].mid == NULL) {\n+        if (methInfo[i].mid == nullptr) {\n@@ -140,1 +140,1 @@\n-                       (lv_table[j].generic_signature == NULL) ? \"NULL\" : lv_table[j].generic_signature);\n+                       (lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature);\n@@ -158,1 +158,1 @@\n-                            (strcmp((lv_table[j].generic_signature == NULL) ? \"NULL\" : lv_table[j].generic_signature,\n+                            (strcmp((lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature,\n@@ -168,1 +168,1 @@\n-                               (lv_table[j].generic_signature == NULL) ? \"NULL\" : lv_table[j].generic_signature,\n+                               (lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature,\n@@ -170,1 +170,1 @@\n-                               (methInfo[i].vars[k].v_gen_sign == NULL) ? \"NULL\" : methInfo[i].vars[k].v_gen_sign);\n+                               (methInfo[i].vars[k].v_gen_sign == nullptr) ? \"null\" : methInfo[i].vars[k].v_gen_sign);\n@@ -178,1 +178,1 @@\n-                               (lv_table[j].generic_signature == NULL) ? \"NULL\" : lv_table[j].generic_signature);\n+                               (lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature);\n@@ -223,1 +223,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab005\/localtab005.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,1 +41,1 @@\n-    jmethodID mid = NULL;\n+    jmethodID mid = nullptr;\n@@ -49,1 +49,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -80,1 +80,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMaxLocals\/maxloc001\/maxloc001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetMaxLocals(NULL, &max);\n+    err = jvmti->GetMaxLocals(nullptr, &max);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetMaxLocals(mid, NULL);\n+    err = jvmti->GetMaxLocals(mid, nullptr);\n@@ -105,1 +105,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMaxLocals\/maxloc002\/maxloc002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-    if (mid == NULL) {\n-        printf(\"%s.%s%s: mid = NULL\\n\", cl_name, name, sig);\n+    if (mid == nullptr) {\n+        printf(\"%s.%s%s: mid = null\\n\", cl_name, name, sig);\n@@ -98,1 +98,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls001\/declcls001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetMethodDeclaringClass(NULL, &declaringClass);\n+    err = jvmti->GetMethodDeclaringClass(nullptr, &declaringClass);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetMethodDeclaringClass(mid, NULL);\n+    err = jvmti->GetMethodDeclaringClass(mid, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls002\/declcls002.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,2 +58,2 @@\n-    if (mid == NULL) {\n-        printf(\"%s.%s%s: mid = NULL\\n\", name, meth, sig);\n+    if (mid == nullptr) {\n+        printf(\"%s.%s%s: mid = null\\n\", name, meth, sig);\n@@ -108,1 +108,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -113,1 +113,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls003\/declcls003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,2 @@\n-    if (mid == NULL) {\n-        printf(\"Name = %s, sig = %s: mid = NULL\\n\", name, sig);\n+    if (mid == nullptr) {\n+        printf(\"Name = %s, sig = %s: mid = null\\n\", name, sig);\n@@ -106,1 +106,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodLocation\/methloc001\/methloc001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -88,1 +88,1 @@\n-    err = jvmti->GetMethodLocation(NULL, &startLocation, &endLocation);\n+    err = jvmti->GetMethodLocation(nullptr, &startLocation, &endLocation);\n@@ -98,1 +98,1 @@\n-    err = jvmti->GetMethodLocation(mid, NULL, &endLocation);\n+    err = jvmti->GetMethodLocation(mid, nullptr, &endLocation);\n@@ -108,1 +108,1 @@\n-    err = jvmti->GetMethodLocation(mid, &startLocation, NULL);\n+    err = jvmti->GetMethodLocation(mid, &startLocation, nullptr);\n@@ -116,1 +116,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodLocation\/methloc002\/methloc002.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -73,1 +73,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -138,1 +138,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -143,1 +143,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -157,1 +157,1 @@\n-        JVMTI_EVENT_CLASS_LOAD, NULL);\n+        JVMTI_EVENT_CLASS_LOAD, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodModifiers\/methmod001\/methmod001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetMethodModifiers(NULL, &modifiers);\n+    err = jvmti->GetMethodModifiers(nullptr, &modifiers);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetMethodModifiers(mid, NULL);\n+    err = jvmti->GetMethodModifiers(mid, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodModifiers\/methmod002\/methmod002.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -118,1 +118,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -123,1 +123,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -137,1 +137,1 @@\n-        JVMTI_EVENT_CLASS_LOAD, NULL);\n+        JVMTI_EVENT_CLASS_LOAD, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname001\/methname001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->GetMethodName(NULL, &name, &sig, &generic);\n+    err = jvmti->GetMethodName(nullptr, &name, &sig, &generic);\n@@ -97,1 +97,1 @@\n-    err = jvmti->GetMethodName(mid, NULL, &sig, &generic);\n+    err = jvmti->GetMethodName(mid, nullptr, &sig, &generic);\n@@ -106,1 +106,1 @@\n-        if (sig == NULL || strcmp(sig, \"()V\") != 0) {\n+        if (sig == nullptr || strcmp(sig, \"()V\") != 0) {\n@@ -115,1 +115,1 @@\n-    err = jvmti->GetMethodName(mid, &name, NULL, &generic);\n+    err = jvmti->GetMethodName(mid, &name, nullptr, &generic);\n@@ -124,1 +124,1 @@\n-        if (name == NULL || strcmp(name, \"<init>\") != 0) {\n+        if (name == nullptr || strcmp(name, \"<init>\") != 0) {\n@@ -133,1 +133,1 @@\n-    err = jvmti->GetMethodName(mid, &name, &sig, NULL);\n+    err = jvmti->GetMethodName(mid, &name, &sig, nullptr);\n@@ -142,1 +142,1 @@\n-        if (name == NULL || strcmp(name, \"<init>\") != 0) {\n+        if (name == nullptr || strcmp(name, \"<init>\") != 0) {\n@@ -146,1 +146,1 @@\n-        if (sig == NULL || strcmp(sig, \"()V\") != 0) {\n+        if (sig == nullptr || strcmp(sig, \"()V\") != 0) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname002\/methname002.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        \"NULL\" },\n+        \"null\" },\n@@ -66,1 +66,1 @@\n-       \"NULL\" } },\n+       \"null\" } },\n@@ -70,1 +70,1 @@\n-        \"NULL\" },\n+        \"null\" },\n@@ -83,1 +83,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -101,1 +101,1 @@\n-                strcmp(meth_sig[clsIdx][methIdx][3], (gen_sign == NULL) ? \"NULL\" : gen_sign) != 0) {\n+                strcmp(meth_sig[clsIdx][methIdx][3], (gen_sign == nullptr) ? \"null\" : gen_sign) != 0) {\n@@ -105,1 +105,1 @@\n-                sign, (gen_sign == NULL) ? \"NULL\" : gen_sign,\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign,\n@@ -111,1 +111,1 @@\n-                sign, (gen_sign == NULL) ? \"NULL\" : gen_sign);\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign);\n@@ -120,1 +120,1 @@\n-        if (gen_sign != NULL)\n+        if (gen_sign != nullptr)\n@@ -133,1 +133,1 @@\n-    jmethodID testedMeth = NULL;\n+    jmethodID testedMeth = nullptr;\n@@ -143,1 +143,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedMeth = jni->GetMethodID(objCls, meth_sig[clsIdx][i][0], meth_sig[clsIdx][i][2])) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedMeth = jni->GetMethodID(objCls, meth_sig[clsIdx][i][0], meth_sig[clsIdx][i][2])) != nullptr)) {\n@@ -151,1 +151,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedMeth = jni->GetStaticMethodID(objCls, meth_sig[clsIdx][i][0], meth_sig[clsIdx][i][2])) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedMeth = jni->GetStaticMethodID(objCls, meth_sig[clsIdx][i][0], meth_sig[clsIdx][i][2])) != nullptr)) {\n@@ -187,1 +187,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname003\/methname003.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        jobject testedObject = NULL;\n+        jobject testedObject = nullptr;\n@@ -59,2 +59,2 @@\n-            jclass debugeeClass = NULL;\n-            jfieldID objectField = NULL;\n+            jclass debugeeClass = nullptr;\n+            jfieldID objectField = nullptr;\n@@ -63,1 +63,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -71,1 +71,1 @@\n-                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != NULL)) {\n+                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -79,1 +79,1 @@\n-                    jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                    jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -86,1 +86,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr)) {\n@@ -183,1 +183,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -193,1 +193,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -197,1 +197,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectHashCode\/objhashcode001\/objhashcode001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -120,1 +120,1 @@\n-        if (inf.owner == NULL) {\n+        if (inf.owner == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage001\/objmonusage001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -108,1 +108,1 @@\n-    err = jvmti->GetObjectMonitorUsage(NULL, &inf);\n+    err = jvmti->GetObjectMonitorUsage(nullptr, &inf);\n@@ -121,1 +121,1 @@\n-    err = jvmti->GetObjectMonitorUsage(obj, NULL);\n+    err = jvmti->GetObjectMonitorUsage(obj, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage002\/objmonusage002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,1 +57,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -119,1 +119,1 @@\n-        if (inf.owner == NULL) {\n+        if (inf.owner == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage003\/objmonusage003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,1 +57,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -119,1 +119,1 @@\n-        if (inf.owner == NULL) {\n+        if (inf.owner == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage004\/objmonusage004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage005\/objmonusage005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage006\/objmonusage006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        jobject testedObject = NULL;\n+        jobject testedObject = nullptr;\n@@ -56,2 +56,2 @@\n-            jclass debugeeClass = NULL;\n-            jfieldID objectField = NULL;\n+            jclass debugeeClass = nullptr;\n+            jfieldID objectField = nullptr;\n@@ -60,1 +60,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -68,1 +68,1 @@\n-                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != NULL)) {\n+                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -76,1 +76,1 @@\n-                    jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                    jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -83,1 +83,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr)) {\n@@ -183,1 +183,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -191,1 +191,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -194,1 +194,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectSize\/objsize001\/objsize001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,3 +59,3 @@\n-    jclass debugeeClass = NULL;\n-    jfieldID objectField = NULL;\n-    jobjectArray arrayObject = NULL;\n+    jclass debugeeClass = nullptr;\n+    jfieldID objectField = nullptr;\n+    jobjectArray arrayObject = nullptr;\n@@ -81,1 +81,1 @@\n-            (*objects)[k] = NULL;\n+            (*objects)[k] = nullptr;\n@@ -90,1 +90,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -98,1 +98,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECTS_FIELD_NAME, OBJECTS_FIELD_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECTS_FIELD_NAME, OBJECTS_FIELD_SIG)) != nullptr)) {\n@@ -106,1 +106,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -124,1 +124,1 @@\n-            jobject object = NULL;\n+            jobject object = nullptr;\n@@ -126,1 +126,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (object = jni->GetObjectArrayElement(arrayObject, k)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (object = jni->GetObjectArrayElement(arrayObject, k)) != nullptr)) {\n@@ -130,1 +130,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (object = jni->NewGlobalRef(object)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (object = jni->NewGlobalRef(object)) != nullptr)) {\n@@ -149,1 +149,1 @@\n-    if (objects == NULL)\n+    if (objects == nullptr)\n@@ -154,1 +154,1 @@\n-        if (objects[k] != NULL) {\n+        if (objects[k] != nullptr) {\n@@ -166,1 +166,1 @@\n-    if (tags == NULL)\n+    if (tags == nullptr)\n@@ -183,2 +183,2 @@\n-    jobject* taggedObjectsList = NULL;\n-    jlong* taggedObjectsTags = NULL;\n+    jobject* taggedObjectsList = nullptr;\n+    jlong* taggedObjectsTags = nullptr;\n@@ -204,2 +204,2 @@\n-    if (taggedObjectsList == NULL && taggedObjectsCount > 0) {\n-        NSK_COMPLAIN2(\"GetObjectsWithTags() returns NULL list of objects %s: 0x%p\\n\",\n+    if (taggedObjectsList == nullptr && taggedObjectsCount > 0) {\n+        NSK_COMPLAIN2(\"GetObjectsWithTags() returns null list of objects %s: 0x%p\\n\",\n@@ -211,2 +211,2 @@\n-    if (taggedObjectsTags == NULL && taggedObjectsCount > 0) {\n-        NSK_COMPLAIN2(\"GetObjectsWithTags() returns NULL list of tags for objects %s: 0x%p\\n\",\n+    if (taggedObjectsTags == nullptr && taggedObjectsCount > 0) {\n+        NSK_COMPLAIN2(\"GetObjectsWithTags() returns null list of tags for objects %s: 0x%p\\n\",\n@@ -226,2 +226,2 @@\n-        if (object == NULL) {\n-            NSK_COMPLAIN3(\"GetObjectsWithTags() returns NULL for object #%d %s: 0x%p\\n\",\n+        if (object == nullptr) {\n+            NSK_COMPLAIN3(\"GetObjectsWithTags() returns null for object #%d %s: 0x%p\\n\",\n@@ -309,2 +309,2 @@\n-        jobject* objects = NULL;\n-        jlong* tags = NULL;\n+        jobject* objects = nullptr;\n+        jlong* tags = nullptr;\n@@ -420,1 +420,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -436,1 +436,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -451,1 +451,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectsWithTags\/objwithtags001\/objwithtags001.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -92,1 +92,1 @@\n-    jobject *owned_monitors = NULL;\n+    jobject *owned_monitors = nullptr;\n@@ -103,1 +103,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -109,1 +109,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -126,1 +126,1 @@\n-    if (monitors == NULL) {\n+    if (monitors == nullptr) {\n@@ -140,1 +140,1 @@\n-    if (monitors == NULL) {\n+    if (monitors == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetOwnedMonitorInfo\/ownmoninf001\/ownmoninf001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetOwnedMonitorInfo\/ownmoninf002\/ownmoninf002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -123,1 +123,1 @@\n-    err = jvmti->GetOwnedMonitorInfo(thr, NULL, &owned_monitors);\n+    err = jvmti->GetOwnedMonitorInfo(thr, nullptr, &owned_monitors);\n@@ -136,1 +136,1 @@\n-    err = jvmti->GetOwnedMonitorInfo(thr, &owned_monitor_count, NULL);\n+    err = jvmti->GetOwnedMonitorInfo(thr, &owned_monitor_count, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetOwnedMonitorInfo\/ownmoninf003\/ownmoninf003.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,1 +271,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -287,1 +287,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -322,1 +322,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr)))\n@@ -327,1 +327,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -332,1 +332,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr)))\n@@ -337,1 +337,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -342,1 +342,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -346,1 +346,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPhase\/getphase001\/getphase001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    NSK_DISPLAY0(\"Check if GetPhase(NULL) returns JVMTI_ERROR_NULL_POINTER\\n\");\n+    NSK_DISPLAY0(\"Check if GetPhase(null) returns JVMTI_ERROR_NULL_POINTER\\n\");\n@@ -50,1 +50,1 @@\n-            jvmti->GetPhase(NULL)))\n+            jvmti->GetPhase(nullptr)))\n@@ -73,1 +73,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -86,1 +86,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -90,1 +90,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPhase\/getphase002\/getphase002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,1 +191,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -218,1 +218,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -226,1 +226,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -242,1 +242,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -251,1 +251,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPotentialCapabilities\/getpotcaps001\/getpotcaps001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -93,1 +93,1 @@\n-    char *srcDebugX = NULL;\n+    char *srcDebugX = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex001\/srcdebugex001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -93,1 +93,1 @@\n-    char *srcDebugX = NULL;\n+    char *srcDebugX = nullptr;\n@@ -99,2 +99,2 @@\n-        case 1: \/* NULL pointer in test debug mode *\/\n-            printf(\"\\nInvoke GetSourceDebugExtension() with NULL pointer...\\n\");\n+        case 1: \/* nullptr pointer in test debug mode *\/\n+            printf(\"\\nInvoke GetSourceDebugExtension() with null pointer...\\n\");\n@@ -103,2 +103,2 @@\n-        case 0: \/* NULL pointer *\/\n-            err = jvmti->GetSourceDebugExtension(cls, NULL);\n+        case 0: \/* nullptr pointer *\/\n+            err = jvmti->GetSourceDebugExtension(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex002\/srcdebugex002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -95,1 +95,1 @@\n-    char *srcDebugX = NULL;\n+    char *srcDebugX = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex003\/srcdebugex003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (code != JNI_OK || jvmti == NULL) {\n+    if (code != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    err = jvmti->GetSourceFileName(NULL, &name);\n+    err = jvmti->GetSourceFileName(nullptr, &name);\n@@ -121,1 +121,1 @@\n-    err = jvmti->GetSourceFileName(cls, NULL);\n+    err = jvmti->GetSourceFileName(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceFileName\/getsrcfn004\/getsrcfn004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (code != JNI_OK || jvmti == NULL) {\n+    if (code != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceFileName\/getsrcfn005\/getsrcfn005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,1 +62,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -67,1 +67,1 @@\n-    if (code != JNI_OK || jvmti == NULL) {\n+    if (code != JNI_OK || jvmti == nullptr) {\n@@ -105,1 +105,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceFileName\/getsrcfn006\/getsrcfn006.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    char** properties = NULL;\n+    char** properties = nullptr;\n@@ -59,2 +59,2 @@\n-    if (properties == NULL) {\n-        NSK_COMPLAIN2(\"In %s phase GetSystemProperties() returned NULL pointer for properties list: 0x%p\\n\",\n+    if (properties == nullptr) {\n+        NSK_COMPLAIN2(\"In %s phase GetSystemProperties() returned null pointer for properties list: 0x%p\\n\",\n@@ -69,2 +69,2 @@\n-            if (properties[i] == NULL) {\n-                NSK_COMPLAIN3(\"In %s phase GetSystemProperties() returned NULL for property #%d: 0x%p\\n\",\n+            if (properties[i] == nullptr) {\n+                NSK_COMPLAIN3(\"In %s phase GetSystemProperties() returned null for property #%d: 0x%p\\n\",\n@@ -121,1 +121,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -129,1 +129,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -137,1 +137,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperties\/getsysprops001\/getsysprops001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    char** properties = NULL;\n+    char** properties = nullptr;\n@@ -64,1 +64,1 @@\n-    if (!NSK_VERIFY(properties != NULL)) {\n+    if (!NSK_VERIFY(properties != nullptr)) {\n@@ -80,1 +80,1 @@\n-            if (properties[i] != NULL) {\n+            if (properties[i] != nullptr) {\n@@ -153,1 +153,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -169,1 +169,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperties\/getsysprops002\/getsysprops002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    char** properties = NULL;\n+    char** properties = nullptr;\n@@ -50,1 +50,1 @@\n-    if (!NSK_VERIFY(properties != NULL)) {\n+    if (!NSK_VERIFY(properties != nullptr)) {\n@@ -59,1 +59,1 @@\n-            char* value = NULL;\n+            char* value = nullptr;\n@@ -62,1 +62,1 @@\n-            if (!NSK_VERIFY(properties[i] != NULL)) {\n+            if (!NSK_VERIFY(properties[i] != nullptr)) {\n@@ -74,2 +74,2 @@\n-            if (value == NULL) {\n-                NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned NULL for property #%d:\\n\"\n+            if (value == nullptr) {\n+                NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned null for property #%d:\\n\"\n@@ -134,1 +134,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -142,1 +142,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -150,1 +150,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperty\/getsysprop001\/getsysprop001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    char* value = NULL;\n+    char* value = nullptr;\n@@ -61,2 +61,2 @@\n-    if (value == NULL) {\n-        NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned NULL value for property:\\n\"\n+    if (value == nullptr) {\n+        NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned null value for property:\\n\"\n@@ -133,1 +133,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -141,1 +141,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -149,1 +149,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperty\/getsysprop002\/getsysprop002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        jobject testedObject = NULL;\n+        jobject testedObject = nullptr;\n@@ -59,2 +59,2 @@\n-            jclass debugeeClass = NULL;\n-            jfieldID objectField = NULL;\n+            jclass debugeeClass = nullptr;\n+            jfieldID objectField = nullptr;\n@@ -64,1 +64,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -72,1 +72,1 @@\n-                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != NULL)) {\n+                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -80,1 +80,1 @@\n-                    jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                    jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -88,1 +88,1 @@\n-                    jni->NewGlobalRef(testedObject)) != NULL)) {\n+                    jni->NewGlobalRef(testedObject)) != nullptr)) {\n@@ -145,1 +145,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -155,1 +155,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -171,1 +171,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTag\/gettag001\/gettag001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    NSK_DISPLAY1(\"GetThreadCpuTime() for current thread (passing NULL): 0x%p\\n\", (void*)thread);\n+    NSK_DISPLAY1(\"GetThreadCpuTime() for current thread (passing null): 0x%p\\n\", (void*)thread);\n@@ -74,1 +74,1 @@\n-            jvmti->GetThreadCpuTime(NULL, (jlong *)time))) {\n+            jvmti->GetThreadCpuTime(nullptr, (jlong *)time))) {\n@@ -84,1 +84,1 @@\n-    if (prevTime != NULL) {\n+    if (prevTime != nullptr) {\n@@ -151,1 +151,1 @@\n-        if (!checkCpuTime(jvmti, testAgentThread, &prevAgentThreadTime, NULL, \"agent thread\")) {\n+        if (!checkCpuTime(jvmti, testAgentThread, &prevAgentThreadTime, nullptr, \"agent thread\")) {\n@@ -161,1 +161,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -188,1 +188,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -218,1 +218,1 @@\n-        if (!checkCpuTime(jvmti, thread, &time, NULL, \"VM_INIT callback\")) {\n+        if (!checkCpuTime(jvmti, thread, &time, nullptr, \"VM_INIT callback\")) {\n@@ -234,1 +234,1 @@\n-        if (!checkCpuTime(jvmti, NULL, &time, NULL, \"VM_DEATH callback\")) {\n+        if (!checkCpuTime(jvmti, nullptr, &time, nullptr, \"VM_DEATH callback\")) {\n@@ -241,1 +241,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -271,1 +271,1 @@\n-    if (threadInfo.name != NULL && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n+    if (threadInfo.name != nullptr && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n@@ -273,1 +273,1 @@\n-        if (!checkCpuTime(jvmti, thread, &prevTestedThreadTime, NULL, \"THREAD_START callback\")) {\n+        if (!checkCpuTime(jvmti, thread, &prevTestedThreadTime, nullptr, \"THREAD_START callback\")) {\n@@ -295,1 +295,1 @@\n-    if (threadInfo.name != NULL && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n+    if (threadInfo.name != nullptr && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n@@ -319,1 +319,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -331,1 +331,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -363,1 +363,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -367,1 +367,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/thrcputime001.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,2 @@\n-static jthread testedThread = NULL;\n-static jthread testAgentThread = NULL;\n+static jthread testedThread = nullptr;\n+static jthread testAgentThread = nullptr;\n@@ -86,1 +86,1 @@\n-    if (prevTime != NULL) {\n+    if (prevTime != nullptr) {\n@@ -153,1 +153,1 @@\n-        if (!checkCpuTime(jvmti, testAgentThread, &prevAgentThreadTime, NULL, \"agent thread\")) {\n+        if (!checkCpuTime(jvmti, testAgentThread, &prevAgentThreadTime, nullptr, \"agent thread\")) {\n@@ -163,1 +163,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -183,1 +183,1 @@\n-        if (testedThread != NULL) {\n+        if (testedThread != nullptr) {\n@@ -201,1 +201,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -231,1 +231,1 @@\n-        if (!checkCpuTime(jvmti, thread, &time, NULL, \"VM_INIT callback\")) {\n+        if (!checkCpuTime(jvmti, thread, &time, nullptr, \"VM_INIT callback\")) {\n@@ -245,1 +245,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -282,2 +282,2 @@\n-    if (threadInfo.name != NULL && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n-        if (!NSK_JNI_VERIFY(jni, (testedThread = jni->NewGlobalRef(thread)) != NULL)) {\n+    if (threadInfo.name != nullptr && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n+        if (!NSK_JNI_VERIFY(jni, (testedThread = jni->NewGlobalRef(thread)) != nullptr)) {\n@@ -288,1 +288,1 @@\n-        if (!checkCpuTime(jvmti, thread, &prevTestedThreadTime, NULL, \"THREAD_START callback\")) {\n+        if (!checkCpuTime(jvmti, thread, &prevTestedThreadTime, nullptr, \"THREAD_START callback\")) {\n@@ -317,1 +317,1 @@\n-    if (threadInfo.name != NULL && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n+    if (threadInfo.name != nullptr && strcmp(threadInfo.name, TESTED_THREAD_NAME) == 0) {\n@@ -324,1 +324,1 @@\n-        testedThread = NULL;\n+        testedThread = nullptr;\n@@ -343,1 +343,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -355,1 +355,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -385,1 +385,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -389,1 +389,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime002\/thrcputime002.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-    if (initInfo != NULL) {\n+    if (initInfo != nullptr) {\n@@ -135,1 +135,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_ENABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -146,1 +146,1 @@\n-        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, NULL)) {\n+        if (nsk_jvmti_enableEvents(JVMTI_DISABLE, THREAD_EVENTS_COUNT, threadEvents, nullptr)) {\n@@ -166,1 +166,1 @@\n-        if (!checkTimerInfo(jvmti, &initInfo, NULL, \"VM_INIT callback\")) {\n+        if (!checkTimerInfo(jvmti, &initInfo, nullptr, \"VM_INIT callback\")) {\n@@ -186,1 +186,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -245,1 +245,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -253,1 +253,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -285,1 +285,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -289,1 +289,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTimerInfo\/thrtimerinfo001\/thrtimerinfo001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -72,4 +72,4 @@\n-        jthreadGroup rootGroup = NULL;\n-        jthreadGroup runningGroup = NULL;\n-        jthreadGroup notStartedGroup = NULL;\n-        jthreadGroup finishedGroup = NULL;\n+        jthreadGroup rootGroup = nullptr;\n+        jthreadGroup runningGroup = nullptr;\n+        jthreadGroup notStartedGroup = nullptr;\n+        jthreadGroup finishedGroup = nullptr;\n@@ -80,1 +80,1 @@\n-            jthreadGroup* topGroups = NULL;\n+            jthreadGroup* topGroups = nullptr;\n@@ -90,1 +90,1 @@\n-            if (!NSK_VERIFY(topGroupsCount > 0 && topGroups != NULL))\n+            if (!NSK_VERIFY(topGroupsCount > 0 && topGroups != nullptr))\n@@ -96,1 +96,1 @@\n-                                            topGroupsCount, topGroups)) != NULL)) {\n+                                            topGroupsCount, topGroups)) != nullptr)) {\n@@ -108,2 +108,2 @@\n-            jthread* threads = NULL;\n-            jthreadGroup* groups = NULL;\n+            jthread* threads = nullptr;\n+            jthreadGroup* groups = nullptr;\n@@ -153,1 +153,1 @@\n-                            if (runningGroup != NULL) {\n+                            if (runningGroup != nullptr) {\n@@ -171,1 +171,1 @@\n-                            if (notStartedGroup != NULL) {\n+                            if (notStartedGroup != nullptr) {\n@@ -189,1 +189,1 @@\n-                            if (finishedGroup != NULL) {\n+                            if (finishedGroup != nullptr) {\n@@ -246,1 +246,1 @@\n-    if (group == NULL) {\n+    if (group == nullptr) {\n@@ -256,2 +256,2 @@\n-        jthread* threads = NULL;\n-        jthreadGroup* groups = NULL;\n+        jthread* threads = nullptr;\n+        jthreadGroup* groups = nullptr;\n@@ -299,1 +299,1 @@\n-                if (info.name == NULL ||\n+                if (info.name == nullptr ||\n@@ -330,1 +330,1 @@\n-    jthreadGroup foundGroup = NULL;\n+    jthreadGroup foundGroup = nullptr;\n@@ -333,1 +333,1 @@\n-    for (i = 0; i < count && foundGroup == NULL; i++) {\n+    for (i = 0; i < count && foundGroup == nullptr; i++) {\n@@ -336,2 +336,2 @@\n-        jthread* threads = NULL;\n-        jthreadGroup * groups = NULL;\n+        jthread* threads = nullptr;\n+        jthreadGroup * groups = nullptr;\n@@ -342,1 +342,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -348,2 +348,2 @@\n-            if (!NSK_VERIFY(groups != NULL))\n-                return NULL;\n+            if (!NSK_VERIFY(groups != nullptr))\n+                return nullptr;\n@@ -354,1 +354,1 @@\n-                if (groups[j] != NULL) {\n+                if (groups[j] != nullptr) {\n@@ -369,1 +369,1 @@\n-            if (foundGroup == NULL) {\n+            if (foundGroup == nullptr) {\n@@ -403,1 +403,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -418,1 +418,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -422,1 +422,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadGroupChildren\/getthrdgrpchld001\/getthrdgrpchld001.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -75,1 +75,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (inf.name == NULL || strcmp(inf.name, expName) != 0) {\n+    if (inf.name == nullptr || strcmp(inf.name, expName) != 0) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadGroupInfo\/thrgrpinfo001\/thrgrpinfo001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -92,1 +92,1 @@\n-    err = jvmti->GetThreadGroupInfo(NULL, &inf);\n+    err = jvmti->GetThreadGroupInfo(nullptr, &inf);\n@@ -102,1 +102,1 @@\n-    err = jvmti->GetThreadGroupInfo(*groups, NULL);\n+    err = jvmti->GetThreadGroupInfo(*groups, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadGroupInfo\/thrgrpinfo002\/thrgrpinfo002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-        jthread testedThread = NULL;\n-        void* storage = NULL;\n+        jthread testedThread = nullptr;\n+        void* storage = nullptr;\n@@ -56,1 +56,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -68,3 +68,3 @@\n-        NSK_DISPLAY0(\"Check obtained storage pointer against NULL\\n\");\n-        if (storage != NULL) {\n-            NSK_COMPLAIN2(\"GetThreadLocalStorage() returned NOT NULL storage for tested thread:\\n\"\n+        NSK_DISPLAY0(\"Check obtained storage pointer against null\\n\");\n+        if (storage != nullptr) {\n+            NSK_COMPLAIN2(\"GetThreadLocalStorage() returned NOT null storage for tested thread:\\n\"\n@@ -79,1 +79,1 @@\n-                jvmti->GetThreadLocalStorage(NULL, &storage))) {\n+                jvmti->GetThreadLocalStorage(nullptr, &storage))) {\n@@ -85,3 +85,3 @@\n-        NSK_DISPLAY0(\"Check obtained storage pointer against NULL\\n\");\n-        if (storage != NULL) {\n-            NSK_COMPLAIN1(\"GetThreadLocalStorage() returned NOT NULL storage for current agent thread:\\n\"\n+        NSK_DISPLAY0(\"Check obtained storage pointer against null\\n\");\n+        if (storage != nullptr) {\n+            NSK_COMPLAIN1(\"GetThreadLocalStorage() returned NOT null storage for current agent thread:\\n\"\n@@ -117,1 +117,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -127,1 +127,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -131,1 +131,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadLocalStorage\/getthrdstor001\/getthrdstor001.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-    if (prevTime != NULL) {\n+    if (prevTime != nullptr) {\n@@ -144,1 +144,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -171,1 +171,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -179,1 +179,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -195,1 +195,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -200,1 +200,1 @@\n-        if (!checkTime(jvmti, &prevTime, NULL, \"Agent_OnLoad()\")) {\n+        if (!checkTime(jvmti, &prevTime, nullptr, \"Agent_OnLoad()\")) {\n@@ -206,1 +206,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTime\/gettime001\/gettime001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    if (initInfo != NULL) {\n+    if (initInfo != nullptr) {\n@@ -161,1 +161,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -188,1 +188,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -196,1 +196,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -212,1 +212,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -217,1 +217,1 @@\n-        if (!checkTimerInfo(jvmti, &initInfo, NULL, \"Agent_OnLoad()\")) {\n+        if (!checkTimerInfo(jvmti, &initInfo, nullptr, \"Agent_OnLoad()\")) {\n@@ -223,1 +223,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTimerInfo\/timerinfo001\/timerinfo001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    jthreadGroup *groups = NULL;\n+    jthreadGroup *groups = nullptr;\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -108,1 +108,1 @@\n-            if (inf.parent != NULL) {\n+            if (inf.parent != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTopThreadGroups\/topthrgrp001\/topthrgrp001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    err = jvmti->GetTopThreadGroups(NULL, &groups);\n+    err = jvmti->GetTopThreadGroups(nullptr, &groups);\n@@ -91,1 +91,1 @@\n-    err = jvmti->GetTopThreadGroups(&groupCount, NULL);\n+    err = jvmti->GetTopThreadGroups(&groupCount, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetTopThreadGroups\/topthrgrp002\/topthrgrp002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -93,1 +93,1 @@\n-    err = jvmti->GetVersionNumber(NULL);\n+    err = jvmti->GetVersionNumber(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetVersionNumber\/getvern001\/getvern001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-static jthread runningThread = NULL;\n-static jthread waitingThread = NULL;\n-static jthread sleepingThread = NULL;\n+static jthread runningThread = nullptr;\n+static jthread waitingThread = nullptr;\n+static jthread sleepingThread = nullptr;\n@@ -52,1 +52,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -63,1 +63,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -68,1 +68,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -79,1 +79,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -112,1 +112,1 @@\n-    if (!NSK_VERIFY(runningThread != NULL)) {\n+    if (!NSK_VERIFY(runningThread != nullptr)) {\n@@ -120,1 +120,1 @@\n-    if (!NSK_VERIFY(waitingThread != NULL)) {\n+    if (!NSK_VERIFY(waitingThread != nullptr)) {\n@@ -128,1 +128,1 @@\n-    if (!NSK_VERIFY(sleepingThread != NULL)) {\n+    if (!NSK_VERIFY(sleepingThread != nullptr)) {\n@@ -154,1 +154,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -165,1 +165,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -168,1 +168,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd001\/intrpthrd001.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd002\/intrpthrd002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd003\/intrpthrd003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->IsArrayClass(NULL, &isArrayClass);\n+    err = jvmti->IsArrayClass(nullptr, &isArrayClass);\n@@ -90,1 +90,1 @@\n-    err = jvmti->IsArrayClass(cls, NULL);\n+    err = jvmti->IsArrayClass(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsArrayClass\/isarray004\/isarray004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -78,1 +78,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsArrayClass\/isarray005\/isarray005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -106,1 +106,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n@@ -114,1 +114,1 @@\n-    err = jvmti->IsFieldSynthetic(NULL, fid, &isSynthetic);\n+    err = jvmti->IsFieldSynthetic(nullptr, fid, &isSynthetic);\n@@ -127,1 +127,1 @@\n-    err = jvmti->IsFieldSynthetic(cls, NULL, &isSynthetic);\n+    err = jvmti->IsFieldSynthetic(cls, nullptr, &isSynthetic);\n@@ -140,1 +140,1 @@\n-    err = jvmti->IsFieldSynthetic(cls, fid, NULL);\n+    err = jvmti->IsFieldSynthetic(cls, fid, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsFieldSynthetic\/isfldsin002\/isfldsin002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -67,1 +67,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -72,1 +72,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -117,1 +117,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -124,1 +124,1 @@\n-        if (fid == NULL) {\n+        if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsFieldSynthetic\/isfldsin003\/isfldsin003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->IsInterface(NULL, &isInterface);\n+    err = jvmti->IsInterface(nullptr, &isInterface);\n@@ -90,1 +90,1 @@\n-    err = jvmti->IsInterface(cls, NULL);\n+    err = jvmti->IsInterface(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsInterface\/isintrf004\/isintrf004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -77,1 +77,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsInterface\/isintrf005\/isintrf005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -82,1 +82,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -119,1 +119,1 @@\n-    if (clsId == NULL) {\n+    if (clsId == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodNative\/isnative001\/isnative001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -79,1 +79,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -87,1 +87,1 @@\n-    err = jvmti->IsMethodNative(NULL, &isNative);\n+    err = jvmti->IsMethodNative(nullptr, &isNative);\n@@ -97,1 +97,1 @@\n-    err = jvmti->IsMethodNative(mid, NULL);\n+    err = jvmti->IsMethodNative(mid, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodNative\/isnative002\/isnative002.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,4 +98,4 @@\n-            char* name = NULL;\n-            char* signature = NULL;\n-            char* generic = NULL;\n-            char* kind = NULL;\n+            char* name = nullptr;\n+            char* signature = nullptr;\n+            char* generic = nullptr;\n+            char* kind = nullptr;\n@@ -113,1 +113,1 @@\n-            if (name != NULL\n+            if (name != nullptr\n@@ -169,3 +169,3 @@\n-    jclass debugeeClass = NULL;\n-    jfieldID fieldID = NULL;\n-    jbyteArray array = NULL;\n+    jclass debugeeClass = nullptr;\n+    jfieldID fieldID = nullptr;\n+    jbyteArray array = nullptr;\n@@ -177,1 +177,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -185,1 +185,1 @@\n-            jni->GetStaticFieldID(debugeeClass, CLASSFILE_FIELD_NAME, CLASSFILE_FIELD_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, CLASSFILE_FIELD_NAME, CLASSFILE_FIELD_SIG)) != nullptr)) {\n@@ -193,1 +193,1 @@\n-            jni->GetStaticObjectField(debugeeClass, fieldID)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, fieldID)) != nullptr)) {\n@@ -209,1 +209,1 @@\n-                jni->GetByteArrayElements(array, &isCopy)) != NULL)) {\n+                jni->GetByteArrayElements(array, &isCopy)) != nullptr)) {\n@@ -245,5 +245,5 @@\n-        jclass testedClass = NULL;\n-        jobject testedThread = NULL;\n-        jmethodID staticMethodID = NULL;\n-        jmethodID instanceMethodID = NULL;\n-        unsigned char* classfileBytes = NULL;\n+        jclass testedClass = nullptr;\n+        jobject testedThread = nullptr;\n+        jmethodID staticMethodID = nullptr;\n+        jmethodID instanceMethodID = nullptr;\n+        unsigned char* classfileBytes = nullptr;\n@@ -262,1 +262,1 @@\n-                    jni->FindClass(TESTED_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(TESTED_CLASS_NAME)) != nullptr)) {\n@@ -270,1 +270,1 @@\n-                    jni->NewGlobalRef(testedClass)) != NULL)) {\n+                    jni->NewGlobalRef(testedClass)) != nullptr)) {\n@@ -278,1 +278,1 @@\n-                    jni->GetStaticMethodID(testedClass, STATIC_METHOD_NAME, STATIC_METHOD_SIG)) != NULL)) {\n+                    jni->GetStaticMethodID(testedClass, STATIC_METHOD_NAME, STATIC_METHOD_SIG)) != nullptr)) {\n@@ -286,1 +286,1 @@\n-                    jni->GetMethodID(testedClass, INSTANCE_METHOD_NAME, INSTANCE_METHOD_SIG)) != NULL)) {\n+                    jni->GetMethodID(testedClass, INSTANCE_METHOD_NAME, INSTANCE_METHOD_SIG)) != nullptr)) {\n@@ -294,1 +294,1 @@\n-                    nsk_jvmti_threadByName(TESTED_THREAD_NAME)) != NULL)) {\n+                    nsk_jvmti_threadByName(TESTED_THREAD_NAME)) != nullptr)) {\n@@ -370,1 +370,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -380,1 +380,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -396,1 +396,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodObsolete\/isobsolete001\/isobsolete001.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -79,1 +79,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -84,1 +84,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -142,1 +142,1 @@\n-        if (mid == NULL) {\n+        if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodSynthetic\/issynth001\/issynth001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -106,1 +106,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -114,1 +114,1 @@\n-    err = jvmti->IsMethodSynthetic(NULL, &isSynthetic);\n+    err = jvmti->IsMethodSynthetic(nullptr, &isSynthetic);\n@@ -127,1 +127,1 @@\n-    err = jvmti->IsMethodSynthetic(mid, NULL);\n+    err = jvmti->IsMethodSynthetic(mid, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodSynthetic\/issynth002\/issynth002.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -85,1 +85,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -95,1 +95,1 @@\n-            jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+            jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -121,3 +121,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -125,4 +125,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -130,1 +130,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -154,1 +154,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -162,1 +162,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -170,1 +170,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -178,1 +178,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -186,1 +186,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -194,1 +194,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -202,1 +202,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -210,1 +210,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -305,1 +305,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -325,1 +325,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -327,1 +327,1 @@\n-                    tag_ptr != NULL && *tag_ptr != 0) {\n+                    tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -344,2 +344,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN3(\"NULL tag_ptr is passed to heapObjectCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n@@ -414,1 +414,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -435,1 +435,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -490,1 +490,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -499,1 +499,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -526,1 +526,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -550,1 +550,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap001\/iterheap001.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -85,1 +85,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -95,1 +95,1 @@\n-            jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+            jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -121,3 +121,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -125,4 +125,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -130,1 +130,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -154,1 +154,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -162,1 +162,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -170,1 +170,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -178,1 +178,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -186,1 +186,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -194,1 +194,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -202,1 +202,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -210,1 +210,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -305,1 +305,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -325,1 +325,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -327,1 +327,1 @@\n-                    tag_ptr != NULL && *tag_ptr != 0) {\n+                    tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -344,2 +344,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN3(\"NULL tag_ptr is passed to heapObjectCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n@@ -422,1 +422,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -443,1 +443,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -498,1 +498,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -507,1 +507,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -534,1 +534,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -558,1 +558,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap002\/iterheap002.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -85,1 +85,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -95,1 +95,1 @@\n-            jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+            jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -121,3 +121,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -125,4 +125,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -130,1 +130,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -154,1 +154,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -162,1 +162,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -170,1 +170,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -178,1 +178,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -186,1 +186,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -194,1 +194,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -202,1 +202,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -210,1 +210,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -305,1 +305,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -325,1 +325,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -327,1 +327,1 @@\n-                    tag_ptr != NULL && *tag_ptr != 0) {\n+                    tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -344,2 +344,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN3(\"NULL tag_ptr is passed to heapObjectCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n@@ -423,1 +423,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -444,1 +444,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -499,1 +499,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -508,1 +508,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -535,1 +535,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -559,1 +559,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap003\/iterheap003.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -129,1 +129,1 @@\n-            objectDescList = NULL;\n+            objectDescList = nullptr;\n@@ -173,1 +173,1 @@\n-            if (!NSK_VERIFY(objectDesc == NULL)) {\n+            if (!NSK_VERIFY(objectDesc == nullptr)) {\n@@ -245,1 +245,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -261,1 +261,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap004\/iterheap004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -47,1 +47,1 @@\n-    jrawMonitorID monitor_ptr = NULL;\n+    jrawMonitorID monitor_ptr = nullptr;\n@@ -153,1 +153,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -178,1 +178,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap005\/iterheap005.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -37,1 +37,1 @@\n-static void *storage_ptr = NULL;\n+static void *storage_ptr = nullptr;\n@@ -114,1 +114,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -122,1 +122,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -139,1 +139,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap006\/iterheap006.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -138,1 +138,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -146,1 +146,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -163,1 +163,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap007\/iterheap007.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -85,1 +85,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -95,1 +95,1 @@\n-            jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+            jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -122,3 +122,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -126,4 +126,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -131,1 +131,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -156,1 +156,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -164,1 +164,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -172,1 +172,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -180,1 +180,1 @@\n-            jni->NewGlobalRef(chainObjectClass)) != NULL)) {\n+            jni->NewGlobalRef(chainObjectClass)) != nullptr)) {\n@@ -188,1 +188,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -196,1 +196,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -204,1 +204,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -212,1 +212,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -220,1 +220,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -323,1 +323,1 @@\n-    if (testedClass != NULL) {\n+    if (testedClass != nullptr) {\n@@ -328,1 +328,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -348,1 +348,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -362,2 +362,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN3(\"NULL tag_ptr is passed to heapObjectCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n@@ -422,1 +422,1 @@\n-        jclass testedClass = NULL;\n+        jclass testedClass = nullptr;\n@@ -434,1 +434,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -455,1 +455,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -511,1 +511,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -520,1 +520,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -545,1 +545,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -569,1 +569,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls001\/iterinstcls001.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -85,1 +85,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -95,1 +95,1 @@\n-            jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+            jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -122,3 +122,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -126,4 +126,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -131,1 +131,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -156,1 +156,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -164,1 +164,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -172,1 +172,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -180,1 +180,1 @@\n-            jni->NewGlobalRef(chainObjectClass)) != NULL)) {\n+            jni->NewGlobalRef(chainObjectClass)) != nullptr)) {\n@@ -188,1 +188,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -196,1 +196,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -204,1 +204,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -212,1 +212,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -220,1 +220,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -323,1 +323,1 @@\n-    if (testedClass != NULL) {\n+    if (testedClass != nullptr) {\n@@ -328,1 +328,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -348,1 +348,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -362,2 +362,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN3(\"NULL tag_ptr is passed to heapObjectCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n@@ -430,1 +430,1 @@\n-        jclass testedClass = NULL;\n+        jclass testedClass = nullptr;\n@@ -442,1 +442,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -463,1 +463,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -519,1 +519,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -528,1 +528,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -553,1 +553,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -577,1 +577,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls002\/iterinstcls002.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -85,1 +85,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -95,1 +95,1 @@\n-            jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+            jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -122,3 +122,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -126,4 +126,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -131,1 +131,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -156,1 +156,1 @@\n-            jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -164,1 +164,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -172,1 +172,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -180,1 +180,1 @@\n-            jni->NewGlobalRef(chainObjectClass)) != NULL)) {\n+            jni->NewGlobalRef(chainObjectClass)) != nullptr)) {\n@@ -188,1 +188,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -196,1 +196,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -204,1 +204,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -212,1 +212,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -220,1 +220,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -323,1 +323,1 @@\n-    if (testedClass != NULL) {\n+    if (testedClass != nullptr) {\n@@ -328,1 +328,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -348,1 +348,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -362,2 +362,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN3(\"NULL tag_ptr is passed to heapObjectCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n@@ -431,1 +431,1 @@\n-        jclass testedClass = NULL;\n+        jclass testedClass = nullptr;\n@@ -443,1 +443,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr)))\n@@ -464,1 +464,1 @@\n-            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL)))\n+            if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr)))\n@@ -520,1 +520,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -529,1 +529,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -554,1 +554,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -578,1 +578,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls003\/iterinstcls003.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -102,1 +102,1 @@\n-        jclass debugeeClass = NULL;\n+        jclass debugeeClass = nullptr;\n@@ -107,1 +107,1 @@\n-            if (debugeeClass == NULL) {\n+            if (debugeeClass == nullptr) {\n@@ -170,1 +170,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -178,1 +178,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -195,1 +195,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls004\/iterinstcls004.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -48,1 +48,1 @@\n-    jrawMonitorID monitor_ptr = NULL;\n+    jrawMonitorID monitor_ptr = nullptr;\n@@ -109,1 +109,1 @@\n-        jclass debugeeClass = NULL;\n+        jclass debugeeClass = nullptr;\n@@ -113,1 +113,1 @@\n-        if (debugeeClass == NULL) {\n+        if (debugeeClass == nullptr) {\n@@ -155,1 +155,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -163,1 +163,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -179,1 +179,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls005\/iterinstcls005.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -37,1 +37,1 @@\n-static void *storage_ptr = NULL;\n+static void *storage_ptr = nullptr;\n@@ -71,1 +71,1 @@\n-        jclass debugeeClass = NULL;\n+        jclass debugeeClass = nullptr;\n@@ -75,1 +75,1 @@\n-        if (debugeeClass == NULL) {\n+        if (debugeeClass == nullptr) {\n@@ -124,1 +124,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -132,1 +132,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -148,1 +148,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls006\/iterinstcls006.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -112,1 +112,1 @@\n-            jclass debugeeClass = NULL;\n+            jclass debugeeClass = nullptr;\n@@ -116,1 +116,1 @@\n-            if (debugeeClass == NULL) {\n+            if (debugeeClass == nullptr) {\n@@ -151,1 +151,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -159,1 +159,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -176,1 +176,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls007\/iterinstcls007.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -79,1 +79,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -88,1 +88,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -113,3 +113,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -117,4 +117,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -144,1 +144,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -151,1 +151,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -159,1 +159,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -167,1 +167,1 @@\n-            debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -175,1 +175,1 @@\n-            rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -183,1 +183,1 @@\n-            rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -191,1 +191,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -199,1 +199,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -205,1 +205,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (*rootObject = jni->NewGlobalRef(*rootObject)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (*rootObject = jni->NewGlobalRef(*rootObject)) != nullptr)) {\n@@ -293,1 +293,1 @@\n-    if (rootObject != NULL) {\n+    if (rootObject != nullptr) {\n@@ -298,1 +298,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -321,1 +321,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr),\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr),\n@@ -325,2 +325,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN6(\"NULL tag_ptr is passed to objectReferenceCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN6(\"null tag_ptr is passed to objectReferenceCallback:\\n\"\n@@ -342,1 +342,1 @@\n-    if (tag_ptr != NULL && *tag_ptr != 0) {\n+    if (tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -415,1 +415,1 @@\n-        jobject rootObject = NULL;\n+        jobject rootObject = nullptr;\n@@ -477,1 +477,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -486,1 +486,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -511,1 +511,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -524,1 +524,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj001\/iterobjreachobj001.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -111,3 +111,3 @@\n-        jclass debugeeClass = NULL;\n-        jfieldID objectField = NULL;\n-        jobject object = NULL;\n+        jclass debugeeClass = nullptr;\n+        jfieldID objectField = nullptr;\n+        jobject object = nullptr;\n@@ -118,1 +118,1 @@\n-            if (debugeeClass == NULL) {\n+            if (debugeeClass == nullptr) {\n@@ -125,1 +125,1 @@\n-                    debugeeClass, objectFieldName, debugeeClassSignature)) != NULL)) {\n+                    debugeeClass, objectFieldName, debugeeClassSignature)) != nullptr)) {\n@@ -132,1 +132,1 @@\n-                    jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                    jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -193,1 +193,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -201,1 +201,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -217,1 +217,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj002\/iterobjreachobj002.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -52,1 +52,1 @@\n-    jrawMonitorID monitor_ptr = NULL;\n+    jrawMonitorID monitor_ptr = nullptr;\n@@ -113,3 +113,3 @@\n-        jclass debugeeClass = NULL;\n-        jfieldID objectField = NULL;\n-        jobject object = NULL;\n+        jclass debugeeClass = nullptr;\n+        jfieldID objectField = nullptr;\n+        jobject object = nullptr;\n@@ -119,1 +119,1 @@\n-        if (debugeeClass == NULL) {\n+        if (debugeeClass == nullptr) {\n@@ -126,1 +126,1 @@\n-                debugeeClass, objectFieldName, debugeeClassSignature)) != NULL)) {\n+                debugeeClass, objectFieldName, debugeeClassSignature)) != nullptr)) {\n@@ -133,1 +133,1 @@\n-                jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -172,1 +172,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -180,1 +180,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -196,1 +196,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj003\/iterobjreachobj003.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static void *storage_ptr = NULL;\n+static void *storage_ptr = nullptr;\n@@ -78,3 +78,3 @@\n-        jclass debugeeClass = NULL;\n-        jfieldID objectField = NULL;\n-        jobject object = NULL;\n+        jclass debugeeClass = nullptr;\n+        jfieldID objectField = nullptr;\n+        jobject object = nullptr;\n@@ -84,1 +84,1 @@\n-        if (debugeeClass == NULL) {\n+        if (debugeeClass == nullptr) {\n@@ -91,1 +91,1 @@\n-                debugeeClass, objectFieldName, debugeeClassSignature)) != NULL)) {\n+                debugeeClass, objectFieldName, debugeeClassSignature)) != nullptr)) {\n@@ -98,1 +98,1 @@\n-                jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -149,1 +149,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -157,1 +157,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -173,1 +173,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj004\/iterobjreachobj004.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -118,3 +118,3 @@\n-            jclass debugeeClass = NULL;\n-            jfieldID objectField = NULL;\n-            jobject object = NULL;\n+            jclass debugeeClass = nullptr;\n+            jfieldID objectField = nullptr;\n+            jobject object = nullptr;\n@@ -124,1 +124,1 @@\n-            if (debugeeClass == NULL) {\n+            if (debugeeClass == nullptr) {\n@@ -131,1 +131,1 @@\n-                    debugeeClass, objectFieldName, debugeeClassSignature)) != NULL)) {\n+                    debugeeClass, objectFieldName, debugeeClassSignature)) != nullptr)) {\n@@ -138,1 +138,1 @@\n-                    jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                    jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -178,1 +178,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -186,1 +186,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -203,1 +203,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj005\/iterobjreachobj005.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -81,1 +81,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -90,1 +90,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -115,3 +115,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -119,4 +119,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -124,1 +124,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -148,1 +148,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -155,1 +155,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -163,1 +163,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -171,1 +171,1 @@\n-            debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -179,1 +179,1 @@\n-            rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -187,1 +187,1 @@\n-            rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -195,1 +195,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -203,1 +203,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -279,1 +279,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -300,1 +300,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr));\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr));\n@@ -303,2 +303,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN4(\"NULL tag_ptr is passed to heapRootCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN4(\"null tag_ptr is passed to heapRootCallback:\\n\"\n@@ -316,1 +316,1 @@\n-    if (tag_ptr != NULL && *tag_ptr != 0) {\n+    if (tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -392,1 +392,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr),\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr),\n@@ -396,2 +396,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN8(\"NULL tag_ptr is passed to stackReferenceCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN8(\"null tag_ptr is passed to stackReferenceCallback:\\n\"\n@@ -417,1 +417,1 @@\n-    if (tag_ptr != NULL && *tag_ptr != 0) {\n+    if (tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -517,1 +517,1 @@\n-                        (long)(tag_ptr == NULL ? (jlong)0 : *tag_ptr),\n+                        (long)(tag_ptr == nullptr ? (jlong)0 : *tag_ptr),\n@@ -521,2 +521,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN6(\"NULL tag_ptr is passed to objectReferenceCallback:\\n\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN6(\"null tag_ptr is passed to objectReferenceCallback:\\n\"\n@@ -538,1 +538,1 @@\n-    if (tag_ptr != NULL && *tag_ptr != 0) {\n+    if (tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -673,1 +673,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -682,1 +682,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -707,1 +707,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -720,1 +720,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj001\/iterreachobj001.cpp","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -449,1 +449,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -480,1 +480,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -484,1 +484,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj002\/iterreachobj002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-    jrawMonitorID monitor_ptr = NULL;\n+    jrawMonitorID monitor_ptr = nullptr;\n@@ -117,1 +117,1 @@\n-    jrawMonitorID monitor_ptr = NULL;\n+    jrawMonitorID monitor_ptr = nullptr;\n@@ -180,1 +180,1 @@\n-    jrawMonitorID monitor_ptr = NULL;\n+    jrawMonitorID monitor_ptr = nullptr;\n@@ -288,1 +288,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -296,1 +296,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -312,1 +312,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj003\/iterreachobj003.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-static void *storage_ptr = NULL;\n+static void *storage_ptr = nullptr;\n@@ -229,1 +229,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -237,1 +237,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -253,1 +253,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj004\/iterreachobj004.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv* st_jvmti = NULL;\n+static jvmtiEnv* st_jvmti = nullptr;\n@@ -298,1 +298,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -306,1 +306,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -323,1 +323,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj005\/iterreachobj005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr))) {\n@@ -98,1 +98,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, NULL, &primitive_callbacks, &invocations))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, nullptr, &primitive_callbacks, &invocations))) {\n@@ -130,1 +130,1 @@\n-  if (!NSK_VERIFY(jvmti != NULL)) {\n+  if (!NSK_VERIFY(jvmti != nullptr)) {\n@@ -151,1 +151,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/abort\/Abort.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -371,1 +371,1 @@\n-  if (!NSK_VERIFY(NULL != (debugee = jni->FindClass(className))))\n+  if (!NSK_VERIFY(nullptr != (debugee = jni->FindClass(className))))\n@@ -374,1 +374,1 @@\n-  if (!NSK_VERIFY(NULL != (testObjectsField = jni->GetStaticFieldID(debugee, fieldName, fieldSig))))\n+  if (!NSK_VERIFY(nullptr != (testObjectsField = jni->GetStaticFieldID(debugee, fieldName, fieldSig))))\n@@ -377,1 +377,1 @@\n-  if (!NSK_VERIFY(NULL != (testObjects = (jobjectArray)(jni->GetStaticObjectField(\n+  if (!NSK_VERIFY(nullptr != (testObjects = (jobjectArray)(jni->GetStaticObjectField(\n@@ -389,1 +389,1 @@\n-    if (!NSK_VERIFY(NULL != (target = jni->GetObjectArrayElement(testObjects, object))))\n+    if (!NSK_VERIFY(nullptr != (target = jni->GetObjectArrayElement(testObjects, object))))\n@@ -392,1 +392,1 @@\n-    if (!NSK_VERIFY(NULL != (targetClass = jni->GetObjectClass(target))))\n+    if (!NSK_VERIFY(nullptr != (targetClass = jni->GetObjectClass(target))))\n@@ -395,1 +395,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(targetClass, &(objects_info[object].name), NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(targetClass, &(objects_info[object].name), nullptr)))\n@@ -410,1 +410,1 @@\n-                                                NULL)))\n+                                                nullptr)))\n@@ -423,1 +423,1 @@\n-          if (!NSK_VERIFY(NULL != (value = jni->GetStaticObjectField(targetClass,\n+          if (!NSK_VERIFY(nullptr != (value = jni->GetStaticObjectField(targetClass,\n@@ -428,1 +428,1 @@\n-          if (!NSK_VERIFY(NULL != (value = jni->GetObjectField(target, targetFields[field])))) {\n+          if (!NSK_VERIFY(nullptr != (value = jni->GetObjectField(target, targetFields[field])))) {\n@@ -518,1 +518,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr))) {\n@@ -537,1 +537,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, NULL, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, nullptr, &primitive_callbacks, nullptr))) {\n@@ -554,1 +554,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, NULL, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, nullptr, &primitive_callbacks, nullptr))) {\n@@ -562,1 +562,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_DISABLE, 1, &event, nullptr))) {\n@@ -589,1 +589,1 @@\n-  if (!NSK_VERIFY(jvmti != NULL)) {\n+  if (!NSK_VERIFY(jvmti != nullptr)) {\n@@ -611,1 +611,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/callbacks\/Callbacks.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,1 +155,1 @@\n-  if (!NSK_VERIFY(NULL != (debugee = jni->FindClass(className))))\n+  if (!NSK_VERIFY(nullptr != (debugee = jni->FindClass(className))))\n@@ -158,1 +158,1 @@\n-  if (!NSK_VERIFY(NULL != (testObjectField = jni->GetStaticFieldID(debugee, fieldName, fieldSig))))\n+  if (!NSK_VERIFY(nullptr != (testObjectField = jni->GetStaticFieldID(debugee, fieldName, fieldSig))))\n@@ -161,1 +161,1 @@\n-  if (!NSK_VERIFY(NULL != (testObject = (jni->GetStaticObjectField(debugee, testObjectField)))))\n+  if (!NSK_VERIFY(nullptr != (testObject = (jni->GetStaticObjectField(debugee, testObjectField)))))\n@@ -164,1 +164,1 @@\n-  if (!NSK_VERIFY(NULL != (testObjectClass = (jni->GetObjectClass(testObject)))))\n+  if (!NSK_VERIFY(nullptr != (testObjectClass = (jni->GetObjectClass(testObject)))))\n@@ -200,1 +200,1 @@\n-  if (!NSK_VERIFY(NULL != (klass = jni->FindClass(testClassName)))) {\n+  if (!NSK_VERIFY(nullptr != (klass = jni->FindClass(testClassName)))) {\n@@ -207,1 +207,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr))) {\n@@ -226,1 +226,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, nullptr))) {\n@@ -243,1 +243,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, nullptr))) {\n@@ -272,1 +272,1 @@\n-  if (!NSK_VERIFY(jvmti != NULL)) {\n+  if (!NSK_VERIFY(jvmti != nullptr)) {\n@@ -294,1 +294,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/concrete-klass-filter\/ConcreteKlassFilter.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -297,1 +297,1 @@\n-  if (!NSK_VERIFY(NULL != (debugee = jni->FindClass(className))))\n+  if (!NSK_VERIFY(nullptr != (debugee = jni->FindClass(className))))\n@@ -300,1 +300,1 @@\n-  if (!NSK_VERIFY(NULL != (testObjectsField = jni->GetStaticFieldID(debugee, fieldName, fieldSig))))\n+  if (!NSK_VERIFY(nullptr != (testObjectsField = jni->GetStaticFieldID(debugee, fieldName, fieldSig))))\n@@ -303,1 +303,1 @@\n-  if (!NSK_VERIFY(NULL != (testObjects = (jobjectArray)(jni->GetStaticObjectField(\n+  if (!NSK_VERIFY(nullptr != (testObjects = (jobjectArray)(jni->GetStaticObjectField(\n@@ -316,1 +316,1 @@\n-    if (!NSK_VERIFY(NULL != (target = jni->GetObjectArrayElement(testObjects, object))))\n+    if (!NSK_VERIFY(nullptr != (target = jni->GetObjectArrayElement(testObjects, object))))\n@@ -319,1 +319,1 @@\n-    if (!NSK_VERIFY(NULL != (targetClass = jni->GetObjectClass(target))))\n+    if (!NSK_VERIFY(nullptr != (targetClass = jni->GetObjectClass(target))))\n@@ -322,1 +322,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(targetClass, &(objects_info[object].name), NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(targetClass, &(objects_info[object].name), nullptr)))\n@@ -340,1 +340,1 @@\n-                                                NULL)))\n+                                                nullptr)))\n@@ -365,1 +365,1 @@\n-          if (!NSK_VERIFY(NULL != (value = jni->GetStaticObjectField(\n+          if (!NSK_VERIFY(nullptr != (value = jni->GetStaticObjectField(\n@@ -370,1 +370,1 @@\n-          if (!NSK_VERIFY(NULL != (value = jni->GetObjectField(target, targetFields[field])))) {\n+          if (!NSK_VERIFY(nullptr != (value = jni->GetObjectField(target, targetFields[field])))) {\n@@ -459,1 +459,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr))) {\n@@ -478,1 +478,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(filter_type, NULL, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(filter_type, nullptr, &primitive_callbacks, nullptr))) {\n@@ -495,1 +495,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(filter_type, NULL, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(filter_type, nullptr, &primitive_callbacks, nullptr))) {\n@@ -536,1 +536,1 @@\n-  if (!NSK_VERIFY(jvmti != NULL)) {\n+  if (!NSK_VERIFY(jvmti != nullptr)) {\n@@ -543,1 +543,1 @@\n-  if (type != NULL) {\n+  if (type != nullptr) {\n@@ -577,1 +577,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/filter-tagged\/HeapFilter.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, &event, nullptr))) {\n@@ -159,1 +159,1 @@\n-    if (!NSK_VERIFY(NULL != (klass = jni->FindClass(types[i])))) {\n+    if (!NSK_VERIFY(nullptr != (klass = jni->FindClass(types[i])))) {\n@@ -165,1 +165,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, nullptr))) {\n@@ -173,1 +173,1 @@\n-  if (!NSK_VERIFY(NULL != (klass = jni->FindClass(\"java\/lang\/Class\")))) {\n+  if (!NSK_VERIFY(nullptr != (klass = jni->FindClass(\"java\/lang\/Class\")))) {\n@@ -178,1 +178,1 @@\n-  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, NULL))) {\n+  if (!NSK_JVMTI_VERIFY(jvmti->IterateThroughHeap(0, klass, &primitive_callbacks, nullptr))) {\n@@ -212,1 +212,1 @@\n-  if (!NSK_VERIFY(jvmti != NULL)) {\n+  if (!NSK_VERIFY(jvmti != nullptr)) {\n@@ -233,1 +233,1 @@\n-  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, NULL))) {\n+  if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agent, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateThroughHeap\/non-concrete-klass-filter\/NonConcreteKlassFilter.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -42,3 +42,3 @@\n-static jthread currThread = NULL, popThread = NULL;\n-static jclass currClass = NULL, popClass = NULL;\n-static jmethodID currMethod = NULL, popMethod = NULL;\n+static jthread currThread = nullptr, popThread = nullptr;\n+static jclass currClass = nullptr, popClass = nullptr;\n+static jmethodID currMethod = nullptr, popMethod = nullptr;\n@@ -136,1 +136,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -193,1 +193,1 @@\n-            JVMTI_EVENT_FRAME_POP, NULL);\n+            JVMTI_EVENT_FRAME_POP, nullptr);\n@@ -203,1 +203,1 @@\n-    if (mid1 == NULL) {\n+    if (mid1 == nullptr) {\n@@ -210,1 +210,1 @@\n-    if (mid2 == NULL) {\n+    if (mid2 == nullptr) {\n@@ -218,1 +218,1 @@\n-            JVMTI_EVENT_EXCEPTION_CATCH, NULL);\n+            JVMTI_EVENT_EXCEPTION_CATCH, nullptr);\n@@ -248,1 +248,1 @@\n-    if (currClass == NULL) {\n+    if (currClass == nullptr) {\n@@ -256,1 +256,1 @@\n-    if (currMethod == NULL) {\n+    if (currMethod == nullptr) {\n@@ -322,3 +322,3 @@\n-    currThread = NULL; popThread = NULL;\n-    currClass = NULL; popClass = NULL;\n-    currMethod = NULL; popMethod = NULL;\n+    currThread = nullptr; popThread = nullptr;\n+    currClass = nullptr; popClass = nullptr;\n+    currMethod = nullptr; popMethod = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop001\/nframepop001.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -94,1 +94,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop002\/nframepop002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -94,1 +94,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop003\/nframepop003.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -134,1 +134,1 @@\n-    LocalStorage* obtainedData = NULL;\n+    LocalStorage* obtainedData = nullptr;\n@@ -256,1 +256,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -285,1 +285,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -289,1 +289,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ObjectFree\/objfree001\/objfree001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -164,1 +164,1 @@\n-    LocalStorage* obtainedData = NULL;\n+    LocalStorage* obtainedData = nullptr;\n@@ -276,1 +276,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -305,1 +305,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -309,1 +309,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ObjectFree\/objfree002\/objfree002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -178,1 +178,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe001\/popframe001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-    \/* NULL pointer to the thread*\/\n+    \/* nullptr pointer to the thread*\/\n@@ -107,1 +107,1 @@\n-        printf(\"\\nInvoke PopFrame() with NULL pointer to a thread...\\n\");\n+        printf(\"\\nInvoke PopFrame() with null pointer to a thread...\\n\");\n@@ -110,1 +110,1 @@\n-        err = (jvmti->PopFrame(NULL)); \/* explode the bomb *\/\n+        err = (jvmti->PopFrame(nullptr)); \/* explode the bomb *\/\n@@ -196,1 +196,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe002\/popframe002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe003\/popframe003.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,1 +222,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -289,1 +289,1 @@\n-    jmethodID mid = NULL;\n+    jmethodID mid = nullptr;\n@@ -292,1 +292,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe004\/popframe004.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    if (p != NULL)                 \\\n+    if (p != nullptr)                 \\\n@@ -109,1 +109,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &class_signature, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &class_signature, nullptr)))\n@@ -114,1 +114,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(method, &entry_name, &entry_sig, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(method, &entry_name, &entry_sig, nullptr)))\n@@ -122,1 +122,1 @@\n-                    , thr_info.name == NULL ? \"<Unnamed>\" : thr_info.name\n+                    , thr_info.name == nullptr ? \"<Unnamed>\" : thr_info.name\n@@ -257,1 +257,1 @@\n-            (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL\n+            (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe005\/popframe005.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -112,1 +112,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, checks[i].cls) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, checks[i].cls) != 0) {\n@@ -117,1 +117,1 @@\n-    if (name == NULL || strcmp(name, checks[i].name) != 0) {\n+    if (name == nullptr || strcmp(name, checks[i].name) != 0) {\n@@ -122,1 +122,1 @@\n-    if (sig == NULL || strcmp(sig, checks[i].sig) != 0) {\n+    if (sig == nullptr || strcmp(sig, checks[i].sig) != 0) {\n@@ -352,1 +352,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -357,1 +357,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -412,1 +412,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -427,1 +427,1 @@\n-    if (clazz == NULL) {\n+    if (clazz == nullptr) {\n@@ -434,1 +434,1 @@\n-    if (mid_run == NULL) {\n+    if (mid_run == nullptr) {\n@@ -441,1 +441,1 @@\n-    if (mid_A == NULL) {\n+    if (mid_A == nullptr) {\n@@ -448,1 +448,1 @@\n-    if (mid_B == NULL) {\n+    if (mid_B == nullptr) {\n@@ -455,1 +455,1 @@\n-    if (mid_C == NULL) {\n+    if (mid_C == nullptr) {\n@@ -470,1 +470,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -484,1 +484,1 @@\n-        JVMTI_EVENT_FRAME_POP, NULL);\n+        JVMTI_EVENT_FRAME_POP, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe006\/popframe006.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -89,1 +89,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -94,1 +94,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -145,1 +145,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -156,1 +156,1 @@\n-    if (clazz == NULL) {\n+    if (clazz == nullptr) {\n@@ -163,1 +163,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -178,1 +178,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -193,1 +193,1 @@\n-    if (mid != NULL) {\n+    if (mid != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe007\/popframe007.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -48,2 +48,2 @@\n-static jmethodID midD = NULL;\n-static jmethodID midRun = NULL;\n+static jmethodID midD = nullptr;\n+static jmethodID midRun = nullptr;\n@@ -86,1 +86,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, frames[i].cls) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, frames[i].cls) != 0) {\n@@ -91,1 +91,1 @@\n-    if (name == NULL || strcmp(name, frames[i].name) != 0) {\n+    if (name == nullptr || strcmp(name, frames[i].name) != 0) {\n@@ -96,1 +96,1 @@\n-    if (sig == NULL || strcmp(sig, frames[i].sig) != 0) {\n+    if (sig == nullptr || strcmp(sig, frames[i].sig) != 0) {\n@@ -198,1 +198,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -203,1 +203,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -256,1 +256,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -269,1 +269,1 @@\n-    if (clazz == NULL) {\n+    if (clazz == nullptr) {\n@@ -276,1 +276,1 @@\n-    if (midD == NULL) {\n+    if (midD == nullptr) {\n@@ -283,1 +283,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -298,1 +298,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe008\/popframe008.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,3 +40,3 @@\n-static jrawMonitorID breakpointLock = NULL;\n-static jrawMonitorID popFrameLock = NULL;\n-static jrawMonitorID suspendLock = NULL;\n+static jrawMonitorID breakpointLock = nullptr;\n+static jrawMonitorID popFrameLock = nullptr;\n+static jrawMonitorID suspendLock = nullptr;\n@@ -46,2 +46,2 @@\n-static jmethodID midCheckPoint = NULL;\n-static jmethodID midRun = NULL;\n+static jmethodID midCheckPoint = nullptr;\n+static jmethodID midRun = nullptr;\n@@ -168,1 +168,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -173,1 +173,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -228,1 +228,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -241,1 +241,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -264,1 +264,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -334,1 +334,1 @@\n-    jmethodID method = NULL;\n+    jmethodID method = nullptr;\n@@ -341,1 +341,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -415,1 +415,1 @@\n-    if (midFibonacci == NULL) {\n+    if (midFibonacci == nullptr) {\n@@ -421,1 +421,1 @@\n-    if (clazz == NULL) {\n+    if (clazz == nullptr) {\n@@ -427,1 +427,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe009\/popframe009.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,2 +41,2 @@\n-static jmethodID midCheckPoint = NULL;\n-static jmethodID midRun = NULL;\n+static jmethodID midCheckPoint = nullptr;\n+static jmethodID midRun = nullptr;\n@@ -55,1 +55,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -88,1 +88,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -108,1 +108,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -113,1 +113,1 @@\n-    if (name == NULL || strcmp(name, name_exp) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp) != 0) {\n@@ -118,1 +118,1 @@\n-    if (sig == NULL || strcmp(sig, sig_exp) != 0) {\n+    if (sig == nullptr || strcmp(sig, sig_exp) != 0) {\n@@ -135,1 +135,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -138,1 +138,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -141,1 +141,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -144,1 +144,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -235,1 +235,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -240,1 +240,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -291,1 +291,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -304,1 +304,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -311,1 +311,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -326,1 +326,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe010\/popframe010.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-\/* NULL pointer to the thread in debug mode *\/\n+\/* nullptr pointer to the thread in debug mode *\/\n@@ -116,1 +116,1 @@\n-        printf(\"\\nInvoke PopFrame() with NULL pointer to a thread...\\n\");\n+        printf(\"\\nInvoke PopFrame() with null pointer to a thread...\\n\");\n@@ -119,1 +119,1 @@\n-\/* NULL pointer to the thread *\/\n+\/* nullptr pointer to the thread *\/\n@@ -122,1 +122,1 @@\n-        popframe_err = (jvmti->PopFrame(NULL)); \/* explode the bomb *\/\n+        popframe_err = (jvmti->PopFrame(nullptr)); \/* explode the bomb *\/\n@@ -248,1 +248,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe011\/popframe011.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -105,1 +105,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -110,1 +110,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -124,1 +124,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter001\/rawmonenter001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->RawMonitorEnter(NULL);\n+    err = jvmti->RawMonitorEnter(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter002\/rawmonenter002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter003\/rawmonenter003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,1 +60,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -65,1 +65,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -134,1 +134,1 @@\n-        err = jvmti->RunAgentThread(thr, increment_thread, NULL,\n+        err = jvmti->RunAgentThread(thr, increment_thread, nullptr,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter004\/rawmonenter004.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -118,1 +118,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -123,1 +123,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -137,1 +137,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit001\/rawmonexit001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->RawMonitorExit(NULL);\n+    err = jvmti->RawMonitorExit(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit002\/rawmonexit002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit003\/rawmonexit003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit005\/rawmonexit005.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -131,1 +131,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -136,1 +136,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -150,1 +150,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy001\/rawmnntfy001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->RawMonitorNotify(NULL);\n+    err = jvmti->RawMonitorNotify(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy002\/rawmnntfy002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy003\/rawmnntfy003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy004\/rawmnntfy004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -131,1 +131,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -136,1 +136,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -150,1 +150,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall001\/rawmnntfyall001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -71,1 +71,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -80,1 +80,1 @@\n-    err = jvmti->RawMonitorNotifyAll(NULL);\n+    err = jvmti->RawMonitorNotifyAll(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall002\/rawmnntfyall002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall003\/rawmnntfyall003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall004\/rawmnntfyall004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -132,1 +132,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -137,1 +137,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -151,1 +151,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait001\/rawmnwait001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -60,1 +60,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -72,1 +72,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -81,1 +81,1 @@\n-    err = jvmti->RawMonitorWait(NULL, MONITOR_WAIT_TIMEOUT);\n+    err = jvmti->RawMonitorWait(nullptr, MONITOR_WAIT_TIMEOUT);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait002\/rawmnwait002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,1 +57,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -74,1 +74,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait003\/rawmnwait003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -60,1 +60,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -73,1 +73,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait004\/rawmnwait004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,1 +60,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -65,1 +65,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -209,1 +209,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -264,1 +264,1 @@\n-    err = jvmti->RunAgentThread(thr, test_thread, NULL,\n+    err = jvmti->RunAgentThread(thr, test_thread, nullptr,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait005\/rawmnwait005.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -83,1 +83,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -95,1 +95,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/StressRedefine\/stressRedefine.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -94,1 +94,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -106,1 +106,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass001\/redefclass001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -136,1 +136,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -148,1 +148,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass002\/redefclass002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -97,1 +97,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -109,1 +109,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n@@ -143,1 +143,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n@@ -151,1 +151,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass003\/redefclass003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -102,1 +102,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -114,1 +114,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n@@ -149,1 +149,1 @@\n-    const char *strFld = NULL;\n+    const char *strFld = nullptr;\n@@ -153,1 +153,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n@@ -162,1 +162,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n@@ -171,1 +171,1 @@\n-    if (fid == NULL) {\n+    if (fid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass004\/redefclass004.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,1 +62,1 @@\n-    if (watch_ev && class_being_redefined != NULL) {\n+    if (watch_ev && class_being_redefined != nullptr) {\n@@ -167,1 +167,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -183,1 +183,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr);\n@@ -205,1 +205,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass005\/redefclass005.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -93,1 +93,1 @@\n-    jvmtiClassDefinition* classDefPtr = NULL;\n+    jvmtiClassDefinition* classDefPtr = nullptr;\n@@ -95,1 +95,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -105,1 +105,1 @@\n-\/* NULL pointer to the jvmtiClassDefinition *\/\n+\/* nullptr pointer to the jvmtiClassDefinition *\/\n@@ -108,1 +108,1 @@\n-\/* NULL pointer to the jvmtiClassDefinition in debug mode *\/\n+\/* nullptr pointer to the jvmtiClassDefinition in debug mode *\/\n@@ -110,1 +110,1 @@\n-            printf(\"Invoke RedefineClasses() with NULL pointer to the structure jvmtiClassDefinition\\n\");\n+            printf(\"Invoke RedefineClasses() with null pointer to the structure jvmtiClassDefinition\\n\");\n@@ -113,1 +113,1 @@\n-\/* NULL pointer to the jvmtiClassDefinition->class_bytes in debug mode *\/\n+\/* nullptr pointer to the jvmtiClassDefinition->class_bytes in debug mode *\/\n@@ -115,1 +115,1 @@\n-            printf(\"Invoke RedefineClasses() with NULL pointer to the field jvmtiClassDefinition->class_bytes\\n\");\n+            printf(\"Invoke RedefineClasses() with null pointer to the field jvmtiClassDefinition->class_bytes\\n\");\n@@ -118,1 +118,1 @@\n-\/* NULL pointer to the jvmtiClassDefinition->class_bytes *\/\n+\/* nullptr pointer to the jvmtiClassDefinition->class_bytes *\/\n@@ -123,1 +123,1 @@\n-            classDef.class_bytes = NULL;\n+            classDef.class_bytes = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass006\/redefclass006.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,5 +48,5 @@\n-    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 0, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(JIJ)V\", 5, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(JIJ)V\", 4, NULL },\n-    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 1, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)I\", 1, NULL }\n+    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 0, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(JIJ)V\", 5, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(JIJ)V\", 4, nullptr },\n+    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 1, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)I\", 1, nullptr }\n@@ -57,1 +57,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -144,1 +144,1 @@\n-            if (breakpoints[i].mid == NULL) {\n+            if (breakpoints[i].mid == nullptr) {\n@@ -153,1 +153,1 @@\n-            if (breakpoints[i].mid == NULL) {\n+            if (breakpoints[i].mid == nullptr) {\n@@ -177,1 +177,1 @@\n-        err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+        err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -196,1 +196,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -208,1 +208,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n@@ -246,1 +246,1 @@\n-            if (breakpoints[i].mid == NULL) {\n+            if (breakpoints[i].mid == nullptr) {\n@@ -256,1 +256,1 @@\n-            if (breakpoints[i].mid == NULL) {\n+            if (breakpoints[i].mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass008\/redefclass008.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-\/* list of original methods with NULL pointers to localVar *\/\n+\/* list of original methods with nullptr pointers to localVar *\/\n@@ -85,4 +85,4 @@\n-    { 1, (char*) \"<init>\", (char*) \"()V\", 1, NULL, NULL },\n-    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 4, NULL, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 5, NULL, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 3, NULL, NULL }\n+    { 1, (char*) \"<init>\", (char*) \"()V\", 1, nullptr, nullptr },\n+    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 4, nullptr, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 5, nullptr, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 3, nullptr, nullptr }\n@@ -93,4 +93,4 @@\n-    { 1, (char*) \"<init>\", (char*) \"()V\", 6, constr_lv, NULL },\n-    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 3, checkIt_lv, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 7, finMeth_lv, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, statMeth_lv, NULL }\n+    { 1, (char*) \"<init>\", (char*) \"()V\", 6, constr_lv, nullptr },\n+    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 3, checkIt_lv, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 7, finMeth_lv, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, statMeth_lv, nullptr }\n@@ -99,1 +99,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -177,1 +177,1 @@\n-        if (methodsInfo[i].mid == NULL) {\n+        if (methodsInfo[i].mid == nullptr) {\n@@ -253,1 +253,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -265,1 +265,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass009\/redefclass009.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,4 +64,4 @@\n-    { 1, (char*) \"<init>\", (char*) \"()V\", 1, NULL },\n-    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 3, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 1, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, NULL }\n+    { 1, (char*) \"<init>\", (char*) \"()V\", 1, nullptr },\n+    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 3, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 1, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 5, nullptr }\n@@ -72,4 +72,4 @@\n-    { 1, (char*) \"<init>\", (char*) \"()V\", 8, NULL },\n-    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 3, NULL },\n-    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 7, NULL },\n-    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 1, NULL }\n+    { 1, (char*) \"<init>\", (char*) \"()V\", 8, nullptr },\n+    { 1, (char*) \"checkIt\", (char*) \"(Ljava\/io\/PrintStream;Z)I\", 3, nullptr },\n+    { 1, (char*) \"finMethod\", (char*) \"(CJIJ)V\", 7, nullptr },\n+    { 0, (char*) \"statMethod\", (char*) \"(III)D\", 1, nullptr }\n@@ -78,1 +78,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -155,1 +155,1 @@\n-        if (methodsInfo[i].mid == NULL) {\n+        if (methodsInfo[i].mid == nullptr) {\n@@ -230,1 +230,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -242,1 +242,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass010\/redefclass010.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -105,1 +105,1 @@\n-    classDef.klass = NULL;\n+    classDef.klass = nullptr;\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass011\/redefclass011.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -108,1 +108,1 @@\n-    bytes = (unsigned char *) env->GetByteArrayElements(jbytes, NULL);\n+    bytes = (unsigned char *) env->GetByteArrayElements(jbytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass012\/redefclass012.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -101,1 +101,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -108,1 +108,1 @@\n-    bytes = (unsigned char *) env->GetByteArrayElements(jbytes, NULL);\n+    bytes = (unsigned char *) env->GetByteArrayElements(jbytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass013\/redefclass013.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -114,1 +114,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass014\/redefclass014.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass015\/redefclass015.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,1 +41,1 @@\n-static jmethodID mid = NULL;\n+static jmethodID mid = nullptr;\n@@ -51,1 +51,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -80,1 +80,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -105,1 +105,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -108,1 +108,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -111,1 +111,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -114,1 +114,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -151,1 +151,1 @@\n-    bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n@@ -205,1 +205,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -210,1 +210,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -267,1 +267,1 @@\n-    jvmtiLineNumberEntry *lines = NULL;\n+    jvmtiLineNumberEntry *lines = nullptr;\n@@ -270,1 +270,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -282,1 +282,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -298,1 +298,1 @@\n-    if (lines != NULL && entryCount > 0) {\n+    if (lines != nullptr && entryCount > 0) {\n@@ -321,1 +321,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass016\/redefclass016.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,1 +41,1 @@\n-static jmethodID mid = NULL;\n+static jmethodID mid = nullptr;\n@@ -67,1 +67,1 @@\n-        env->GetByteArrayElements(classBytes, NULL);\n+        env->GetByteArrayElements(classBytes, nullptr);\n@@ -96,1 +96,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -101,1 +101,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -151,1 +151,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -161,1 +161,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -178,1 +178,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass017\/redefclass017.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -52,1 +52,1 @@\n-            JVMTI_EVENT_EXCEPTION, NULL);\n+            JVMTI_EVENT_EXCEPTION, nullptr);\n@@ -69,1 +69,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n@@ -98,1 +98,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -103,1 +103,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -154,1 +154,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass018\/redefclass018.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,2 +57,2 @@\n-static jmethodID midCheckPoint = NULL;\n-static jmethodID midRun = NULL;\n+static jmethodID midCheckPoint = nullptr;\n+static jmethodID midRun = nullptr;\n@@ -99,1 +99,1 @@\n-    char *sigClass, *name = NULL, *sig = NULL, *generic;\n+    char *sigClass, *name = nullptr, *sig = nullptr, *generic;\n@@ -101,2 +101,2 @@\n-    jvmtiLineNumberEntry *lines = NULL;\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLineNumberEntry *lines = nullptr;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -138,1 +138,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -141,1 +141,1 @@\n-        if (sigClass != NULL) {\n+        if (sigClass != nullptr) {\n@@ -170,1 +170,1 @@\n-        if (name == NULL || strcmp(name, frames[i].name) != 0) {\n+        if (name == nullptr || strcmp(name, frames[i].name) != 0) {\n@@ -175,1 +175,1 @@\n-        if (sig == NULL || strcmp(sig, frames[i].sig) != 0) {\n+        if (sig == nullptr || strcmp(sig, frames[i].sig) != 0) {\n@@ -190,1 +190,1 @@\n-        if (lines != NULL && entryCount > 0) {\n+        if (lines != nullptr && entryCount > 0) {\n@@ -219,1 +219,1 @@\n-        if (table != NULL) {\n+        if (table != nullptr) {\n@@ -259,1 +259,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -262,1 +262,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -265,1 +265,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -268,1 +268,1 @@\n-    if (lines != NULL) {\n+    if (lines != nullptr) {\n@@ -271,1 +271,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -314,1 +314,1 @@\n-        env->GetByteArrayElements(classBytes, NULL);\n+        env->GetByteArrayElements(classBytes, nullptr);\n@@ -371,1 +371,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -376,1 +376,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -436,1 +436,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -451,1 +451,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -458,1 +458,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -473,1 +473,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -482,1 +482,1 @@\n-        JVMTI_EVENT_FRAME_POP, NULL);\n+        JVMTI_EVENT_FRAME_POP, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass019\/redefclass019.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass020\/redefclass020.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass021\/redefclass021.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass022\/redefclass022.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass023\/redefclass023.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass024\/redefclass024.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass025\/redefclass025.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass026\/redefclass026.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -59,5 +59,5 @@\n-static jmethodID midRun = NULL;\n-static jmethodID mid1 = NULL;\n-static jmethodID mid2 = NULL;\n-static jfieldID fid1 = NULL;\n-static jfieldID fid2 = NULL;\n+static jmethodID midRun = nullptr;\n+static jmethodID mid1 = nullptr;\n+static jmethodID mid2 = nullptr;\n+static jfieldID fid1 = nullptr;\n+static jfieldID fid2 = nullptr;\n@@ -121,1 +121,1 @@\n-    char *sigClass, *name = NULL, *sig = NULL, *generic;\n+    char *sigClass, *name = nullptr, *sig = nullptr, *generic;\n@@ -124,2 +124,2 @@\n-    jvmtiLineNumberEntry *lines = NULL;\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLineNumberEntry *lines = nullptr;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -147,1 +147,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -150,1 +150,1 @@\n-        if (sigClass != NULL) {\n+        if (sigClass != nullptr) {\n@@ -179,1 +179,1 @@\n-        if (name == NULL || strcmp(name, frames[i].name) != 0) {\n+        if (name == nullptr || strcmp(name, frames[i].name) != 0) {\n@@ -184,1 +184,1 @@\n-        if (sig == NULL || strcmp(sig, frames[i].sig) != 0) {\n+        if (sig == nullptr || strcmp(sig, frames[i].sig) != 0) {\n@@ -198,1 +198,1 @@\n-        if (lines != NULL && entryCount > 0) {\n+        if (lines != nullptr && entryCount > 0) {\n@@ -226,1 +226,1 @@\n-        if (table != NULL) {\n+        if (table != nullptr) {\n@@ -275,1 +275,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -278,1 +278,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -281,1 +281,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -284,1 +284,1 @@\n-    if (lines != NULL) {\n+    if (lines != nullptr) {\n@@ -287,1 +287,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -302,1 +302,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n@@ -534,1 +534,1 @@\n-            JVMTI_EVENT_FRAME_POP, NULL);\n+            JVMTI_EVENT_FRAME_POP, nullptr);\n@@ -599,1 +599,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -604,1 +604,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -690,1 +690,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -703,1 +703,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -709,1 +709,1 @@\n-    if (mid1 == NULL) {\n+    if (mid1 == nullptr) {\n@@ -715,1 +715,1 @@\n-    if (mid2 == NULL) {\n+    if (mid2 == nullptr) {\n@@ -720,1 +720,1 @@\n-    if (caps.can_generate_breakpoint_events && midRun != NULL) {\n+    if (caps.can_generate_breakpoint_events && midRun != nullptr) {\n@@ -728,1 +728,1 @@\n-                JVMTI_EVENT_BREAKPOINT, NULL);\n+                JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -740,1 +740,1 @@\n-    if (fid1 == NULL) {\n+    if (fid1 == nullptr) {\n@@ -745,1 +745,1 @@\n-    if (caps.can_generate_field_modification_events && fid1 != NULL) {\n+    if (caps.can_generate_field_modification_events && fid1 != nullptr) {\n@@ -753,1 +753,1 @@\n-                JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+                JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -765,1 +765,1 @@\n-    if (fid2 == NULL) {\n+    if (fid2 == nullptr) {\n@@ -770,1 +770,1 @@\n-    if (caps.can_generate_field_access_events && fid2 != NULL) {\n+    if (caps.can_generate_field_access_events && fid2 != nullptr) {\n@@ -778,1 +778,1 @@\n-                JVMTI_EVENT_FIELD_ACCESS, NULL);\n+                JVMTI_EVENT_FIELD_ACCESS, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass027\/redefclass027.cpp","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -103,1 +103,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, nullptr))) {\n@@ -136,1 +136,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -191,1 +191,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, nullptr))) {\n@@ -252,1 +252,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -272,1 +272,1 @@\n-            eventsList, NULL))\n+            eventsList, nullptr))\n@@ -277,1 +277,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass028\/redefclass028.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -102,1 +102,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, nullptr))) {\n@@ -135,1 +135,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -190,1 +190,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, nullptr))) {\n@@ -251,1 +251,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -271,1 +271,1 @@\n-            eventsList, NULL))\n+            eventsList, nullptr))\n@@ -276,1 +276,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass029\/redefclass029.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -103,1 +103,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, nullptr))) {\n@@ -136,1 +136,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -191,1 +191,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, nullptr))) {\n@@ -252,1 +252,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -272,1 +272,1 @@\n-            eventsList, NULL))\n+            eventsList, nullptr))\n@@ -277,1 +277,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass030\/redefclass030.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -42,1 +42,1 @@\n-static jthread test_thread = NULL;\n+static jthread test_thread = nullptr;\n@@ -57,1 +57,1 @@\n-    } else if (test_thread != NULL) {\n+    } else if (test_thread != nullptr) {\n@@ -59,1 +59,1 @@\n-        test_thread = NULL;\n+        test_thread = nullptr;\n@@ -88,1 +88,1 @@\n-                if (inf.thread_group != NULL) {\n+                if (inf.thread_group != nullptr) {\n@@ -91,1 +91,1 @@\n-                if (inf.context_class_loader != NULL) {\n+                if (inf.context_class_loader != nullptr) {\n@@ -171,1 +171,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -180,1 +180,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n@@ -190,1 +190,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass031\/redefclass031.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -305,1 +305,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -332,1 +332,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -340,1 +340,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -355,1 +355,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -378,1 +378,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RelinquishCapabilities\/relcaps001\/relcaps001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -304,1 +304,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -331,1 +331,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -339,1 +339,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -354,1 +354,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -367,1 +367,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RelinquishCapabilities\/relcaps002\/relcaps002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* gJvmti = NULL;\n+static jvmtiEnv* gJvmti = nullptr;\n@@ -83,1 +83,1 @@\n-    if (!NSK_VERIFY((gJvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL))\n+    if (!NSK_VERIFY((gJvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr))\n@@ -99,1 +99,1 @@\n-                                                           NULL)))\n+                                                           nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResourceExhausted\/resexhausted.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        jthread testedThread = NULL;\n+        jthread testedThread = nullptr;\n@@ -56,1 +56,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -121,1 +121,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -131,1 +131,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -144,1 +144,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThread\/resumethrd001\/resumethrd001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jthread testedThread = NULL;\n+static jthread testedThread = nullptr;\n@@ -65,1 +65,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -71,1 +71,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -105,1 +105,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -127,1 +127,1 @@\n-    if (thread != NULL &&\n+    if (thread != nullptr &&\n@@ -151,1 +151,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -183,1 +183,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThread\/resumethrd002\/resumethrd002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-        jthread* threads = NULL;\n-        jvmtiError* results = NULL;\n+        jthread* threads = nullptr;\n+        jvmtiError* results = nullptr;\n@@ -141,1 +141,1 @@\n-            if (threads[i] != NULL)\n+            if (threads[i] != nullptr)\n@@ -167,1 +167,1 @@\n-    jthread* threads = NULL;\n+    jthread* threads = nullptr;\n@@ -174,1 +174,1 @@\n-        foundThreads[i] = NULL;\n+        foundThreads[i] = nullptr;\n@@ -191,1 +191,1 @@\n-        if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+        if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -219,1 +219,1 @@\n-                    jni->NewGlobalRef(foundThreads[i])) != NULL)) {\n+                    jni->NewGlobalRef(foundThreads[i])) != nullptr)) {\n@@ -244,1 +244,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -259,1 +259,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -272,1 +272,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThreadList\/resumethrdlst001\/resumethrdlst001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-static jthread* threads = NULL;\n+static jthread* threads = nullptr;\n@@ -70,1 +70,1 @@\n-        jvmtiError* results = NULL;\n+        jvmtiError* results = nullptr;\n@@ -109,1 +109,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -148,1 +148,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -157,1 +157,1 @@\n-            if (threads[i] != NULL)\n+            if (threads[i] != nullptr)\n@@ -183,1 +183,1 @@\n-    jthread* threads = NULL;\n+    jthread* threads = nullptr;\n@@ -190,1 +190,1 @@\n-        foundThreads[i] = NULL;\n+        foundThreads[i] = nullptr;\n@@ -207,1 +207,1 @@\n-        if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+        if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -235,1 +235,1 @@\n-                    jni->NewGlobalRef(foundThreads[i])) != NULL)) {\n+                    jni->NewGlobalRef(foundThreads[i])) != nullptr)) {\n@@ -260,1 +260,1 @@\n-        if (thread != NULL &&\n+        if (thread != nullptr &&\n@@ -288,1 +288,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -303,1 +303,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -332,1 +332,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResumeThreadList\/resumethrdlst002\/resumethrdlst002.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -104,1 +104,1 @@\n-                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL\n+                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr\n@@ -128,1 +128,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform002\/retransform002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -96,1 +96,1 @@\n-    if (name == NULL || strncmp(TRIGGER, name,strlen(name) < strlen(TRIGGER) ? strlen(name) : strlen(TRIGGER)))\n+    if (name == nullptr || strncmp(TRIGGER, name,strlen(name) < strlen(TRIGGER) ? strlen(name) : strlen(TRIGGER)))\n@@ -102,1 +102,1 @@\n-    if (!NSK_VERIFY((loader_class = jni->GetObjectClass(loader)) != NULL))\n+    if (!NSK_VERIFY((loader_class = jni->GetObjectClass(loader)) != nullptr))\n@@ -106,1 +106,1 @@\n-            loader_class, \"loadClass\", \"(Ljava\/lang\/String;)Ljava\/lang\/Class;\")) != NULL))\n+            loader_class, \"loadClass\", \"(Ljava\/lang\/String;)Ljava\/lang\/Class;\")) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_VERIFY((class_name_string = jni->NewStringUTF(CALLBACK_CLASS_NAME)) != NULL))\n+    if (!NSK_VERIFY((class_name_string = jni->NewStringUTF(CALLBACK_CLASS_NAME)) != nullptr))\n@@ -113,1 +113,1 @@\n-            loader, method_id, class_name_string)) != NULL))\n+            loader, method_id, class_name_string)) != nullptr))\n@@ -117,1 +117,1 @@\n-            callback_class, \"callback\", \"(Ljava\/lang\/String;I)V\")) != NULL))\n+            callback_class, \"callback\", \"(Ljava\/lang\/String;I)V\")) != nullptr))\n@@ -120,1 +120,1 @@\n-    if (!NSK_VERIFY((class_name_string = jni->NewStringUTF(name)) != NULL))\n+    if (!NSK_VERIFY((class_name_string = jni->NewStringUTF(name)) != nullptr))\n@@ -154,1 +154,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL))\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr))\n@@ -182,1 +182,1 @@\n-                                                NULL)))\n+                                                nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform003\/retransform003.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL\n+                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr\n@@ -134,1 +134,1 @@\n-                                                NULL)))\n+                                                nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform004\/retransform004.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -95,1 +95,1 @@\n-    err = jvmti->RunAgentThread(jthr(jni), sys_thread_4, NULL,\n+    err = jvmti->RunAgentThread(jthr(jni), sys_thread_4, nullptr,\n@@ -181,1 +181,1 @@\n-            JVMTI_EVENT_THREAD_START, NULL);\n+            JVMTI_EVENT_THREAD_START, nullptr);\n@@ -209,1 +209,1 @@\n-            sys_thread_1, NULL, JVMTI_THREAD_MAX_PRIORITY);\n+            sys_thread_1, nullptr, JVMTI_THREAD_MAX_PRIORITY);\n@@ -216,1 +216,1 @@\n-            sys_thread_2, NULL, JVMTI_THREAD_NORM_PRIORITY);\n+            sys_thread_2, nullptr, JVMTI_THREAD_NORM_PRIORITY);\n@@ -223,1 +223,1 @@\n-            sys_thread_3, NULL, JVMTI_THREAD_MIN_PRIORITY);\n+            sys_thread_3, nullptr, JVMTI_THREAD_MIN_PRIORITY);\n@@ -247,1 +247,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -252,1 +252,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -274,1 +274,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n@@ -288,1 +288,1 @@\n-    err = jvmti->RunAgentThread(jthr(env), sys_thread_5, NULL,\n+    err = jvmti->RunAgentThread(jthr(env), sys_thread_5, nullptr,\n@@ -311,1 +311,1 @@\n-            JVMTI_EVENT_THREAD_START, NULL);\n+            JVMTI_EVENT_THREAD_START, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr001\/agentthr001.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -60,1 +60,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -97,1 +97,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -112,1 +112,1 @@\n-    err = jvmti->RunAgentThread(thr, debug_thread, NULL,\n+    err = jvmti->RunAgentThread(thr, debug_thread, nullptr,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr002\/agentthr002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -78,1 +78,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -86,1 +86,1 @@\n-    err = jvmti->RunAgentThread(NULL, agent_thread, NULL,\n+    err = jvmti->RunAgentThread(nullptr, agent_thread, nullptr,\n@@ -97,1 +97,1 @@\n-    err = jvmti->RunAgentThread(thr, NULL, NULL,\n+    err = jvmti->RunAgentThread(thr, nullptr, nullptr,\n@@ -108,1 +108,1 @@\n-    err = jvmti->RunAgentThread(thr, agent_thread, NULL,\n+    err = jvmti->RunAgentThread(thr, agent_thread, nullptr,\n@@ -119,1 +119,1 @@\n-    err = jvmti->RunAgentThread(thr, agent_thread, NULL,\n+    err = jvmti->RunAgentThread(thr, agent_thread, nullptr,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr003\/agentthr003.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -110,1 +110,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk002\/setbrk002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -109,1 +109,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk003\/setbrk003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -109,1 +109,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk005\/setbrk005.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -117,1 +117,1 @@\n-    err = jvmti->SetBreakpoint(NULL, 0);\n+    err = jvmti->SetBreakpoint(nullptr, 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk007\/setbrk007.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -85,1 +85,1 @@\n-    if (name == NULL || strcmp(cls_sig, exp_csig) != 0) {\n+    if (name == nullptr || strcmp(cls_sig, exp_csig) != 0) {\n@@ -90,1 +90,1 @@\n-    if (name == NULL || strcmp(name, exp_name) != 0) {\n+    if (name == nullptr || strcmp(name, exp_name) != 0) {\n@@ -95,1 +95,1 @@\n-    if (sig == NULL || strcmp(sig, exp_sig) != 0) {\n+    if (sig == nullptr || strcmp(sig, exp_sig) != 0) {\n@@ -122,1 +122,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -127,1 +127,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -174,1 +174,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -185,1 +185,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -204,1 +204,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk008\/setbrk008.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-    StorageStructure* storage = NULL;\n+    StorageStructure* storage = nullptr;\n@@ -173,1 +173,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -200,1 +200,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -208,1 +208,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -223,1 +223,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -240,1 +240,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEnvironmentLocalStorage\/setenvstor001\/setenvstor001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-    StorageStructure* storage = NULL;\n+    StorageStructure* storage = nullptr;\n@@ -178,1 +178,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -205,1 +205,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -213,1 +213,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -228,1 +228,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -235,1 +235,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEnvironmentLocalStorage\/setenvstor002\/setenvstor002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-    StorageStructure* storage = NULL;\n+    StorageStructure* storage = nullptr;\n@@ -181,1 +181,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -208,1 +208,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -216,1 +216,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -231,1 +231,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -238,1 +238,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEnvironmentLocalStorage\/setenvstor003\/setenvstor003.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-    nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -149,1 +149,1 @@\n-            nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT - 1, eventsList + 1, NULL);\n+            nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT - 1, eventsList + 1, nullptr);\n@@ -169,1 +169,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -177,1 +177,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -180,1 +180,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -194,1 +194,1 @@\n-            nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, eventsList, NULL);\n+            nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, eventsList, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb001\/setevntcallb001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            NSK_COMPLAIN2(\"# %s event callback was invoked after SetEventCallbacks(NULL):\\n\"\n+            NSK_COMPLAIN2(\"# %s event callback was invoked after SetEventCallbacks(null):\\n\"\n@@ -111,1 +111,1 @@\n-    nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -146,1 +146,1 @@\n-    NSK_DISPLAY0(\">>> Testcase #2: Set NULL for events callbacks\\n\");\n+    NSK_DISPLAY0(\">>> Testcase #2: Set null for events callbacks\\n\");\n@@ -148,1 +148,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventCallbacks(NULL, 0))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventCallbacks(nullptr, 0))) {\n@@ -152,1 +152,1 @@\n-        nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT - 1, eventsList + 1, NULL);\n+        nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT - 1, eventsList + 1, nullptr);\n@@ -171,1 +171,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -179,1 +179,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -182,1 +182,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -198,1 +198,1 @@\n-            nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, eventsList, NULL);\n+            nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, eventsList, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb002\/setevntcallb002.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-    nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL);\n+    nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr);\n@@ -158,1 +158,1 @@\n-        nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT - 1, eventsList + 1, NULL);\n+        nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT - 1, eventsList + 1, nullptr);\n@@ -177,1 +177,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -185,1 +185,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -188,1 +188,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -202,1 +202,1 @@\n-            nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, eventsList, NULL);\n+            nsk_jvmti_enableEvents(JVMTI_ENABLE, 1, eventsList, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb003\/setevntcallb003.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,1 +41,1 @@\n-static jobject notifyFramePopThread = NULL;\n+static jobject notifyFramePopThread = nullptr;\n@@ -81,1 +81,1 @@\n-        JVMTI_DISABLE, kind, NULL);\n+        JVMTI_DISABLE, kind, nullptr);\n@@ -102,1 +102,1 @@\n-        JVMTI_ENABLE, kind, NULL);\n+        JVMTI_ENABLE, kind, nullptr);\n@@ -124,2 +124,2 @@\n-    if (mid == NULL) {\n-      printf(\"(GetStaticMethodID) returns NULL\");\n+    if (mid == nullptr) {\n+      printf(\"(GetStaticMethodID) returns null\");\n@@ -312,1 +312,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -320,1 +320,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventNotificationMode\/setnotif001\/setnotif001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    jvmtiExtensionEventInfo* extList = NULL;\n+    jvmtiExtensionEventInfo* extList = nullptr;\n@@ -61,1 +61,1 @@\n-        if (!NSK_VERIFY(extList != NULL))\n+        if (!NSK_VERIFY(extList != nullptr))\n@@ -79,1 +79,1 @@\n-            NSK_DISPLAY1(\"    ... clearing callback: 0x%p\\n\", (void*)NULL);\n+            NSK_DISPLAY1(\"    ... clearing callback: 0x%p\\n\", nullptr);\n@@ -81,1 +81,1 @@\n-                    jvmti->SetExtensionEventCallback(extList[i].extension_event_index, NULL))) {\n+                    jvmti->SetExtensionEventCallback(extList[i].extension_event_index, nullptr))) {\n@@ -133,1 +133,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -141,1 +141,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -151,1 +151,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetExtensionEventCallback\/setextevent001\/setextevent001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\", \"fld0\", \"I\", 0, NULL, NULL },\n-    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\", \"fld1\", \"I\", 1, NULL, NULL },\n+    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\", \"fld0\", \"I\", 0, nullptr, nullptr },\n+    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\", \"fld1\", \"I\", 1, nullptr, nullptr },\n@@ -54,3 +54,3 @@\n-      \"Lnsk\/jvmti\/SetFieldAccessWatch\/setfldw001a;\", 0, NULL, NULL },\n-    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001a\", \"fld3\", \"[I\", 0, NULL, NULL },\n-    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001b\", \"fld4\", \"F\", 0, NULL, NULL },\n+      \"Lnsk\/jvmti\/SetFieldAccessWatch\/setfldw001a;\", 0, nullptr, nullptr },\n+    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001a\", \"fld3\", \"[I\", 0, nullptr, nullptr },\n+    { \"nsk\/jvmti\/SetFieldAccessWatch\/setfldw001b\", \"fld4\", \"F\", 0, nullptr, nullptr },\n@@ -65,1 +65,1 @@\n-    if (cls == NULL) {\n+    if (cls == nullptr) {\n@@ -70,1 +70,1 @@\n-    if (fld.fid == NULL) {\n+    if (fld.fid == nullptr) {\n@@ -93,1 +93,1 @@\n-    char *fld_name = NULL;\n+    char *fld_name = nullptr;\n@@ -97,1 +97,1 @@\n-                                                &fld_name, NULL, NULL);\n+                                                &fld_name, nullptr, nullptr);\n@@ -103,2 +103,2 @@\n-    if (fld_name == NULL) {\n-        printf(\"GetFieldName returned NULL field name\\n\");\n+    if (fld_name == nullptr) {\n+        printf(\"GetFieldName returned null field name\\n\");\n@@ -136,1 +136,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -172,1 +172,1 @@\n-                JVMTI_EVENT_FIELD_ACCESS, NULL);\n+                JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -206,1 +206,1 @@\n-        if (flag == JNI_FALSE && thrown_fid != NULL) {\n+        if (flag == JNI_FALSE && thrown_fid != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\/setfldw001.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -98,1 +98,1 @@\n-                JVMTI_EVENT_FIELD_ACCESS, NULL);\n+                JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -126,1 +126,1 @@\n-        err = jvmti->SetFieldAccessWatch(NULL, fid);\n+        err = jvmti->SetFieldAccessWatch(nullptr, fid);\n@@ -133,1 +133,1 @@\n-        err = jvmti->SetFieldAccessWatch(cls, NULL);\n+        err = jvmti->SetFieldAccessWatch(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw002\/setfldw002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-static jfieldID actual_fid = NULL;\n-static jfieldID fids[4] = { NULL, NULL, NULL, NULL };\n+static jfieldID actual_fid = nullptr;\n+static jfieldID fids[4] = { nullptr, nullptr, nullptr, nullptr };\n@@ -69,1 +69,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -74,1 +74,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -129,1 +129,1 @@\n-        if (fids[i] == NULL) {\n+        if (fids[i] == nullptr) {\n@@ -145,1 +145,1 @@\n-        JVMTI_EVENT_FIELD_ACCESS, NULL);\n+        JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -164,1 +164,1 @@\n-    actual_fid = NULL;\n+    actual_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw003\/setfldw003.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-static jfieldID actual_fid = NULL;\n-static jfieldID fids[4] = { NULL, NULL, NULL, NULL };\n+static jfieldID actual_fid = nullptr;\n+static jfieldID fids[4] = { nullptr, nullptr, nullptr, nullptr };\n@@ -69,1 +69,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -74,1 +74,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -136,1 +136,1 @@\n-        if (fids[i] == NULL) {\n+        if (fids[i] == nullptr) {\n@@ -152,1 +152,1 @@\n-        JVMTI_EVENT_FIELD_ACCESS, NULL);\n+        JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -171,1 +171,1 @@\n-    actual_fid = NULL;\n+    actual_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw004\/setfldw004.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-static jfieldID actual_fid = NULL;\n+static jfieldID actual_fid = nullptr;\n@@ -52,16 +52,16 @@\n-    { \"fld0\", \"J\", JNI_TRUE, NULL, \"static long\" },\n-    { \"fld1\", \"J\", JNI_FALSE, NULL, \"long\" },\n-    { \"fld2\", \"F\", JNI_TRUE, NULL, \"static float\" },\n-    { \"fld3\", \"F\", JNI_FALSE, NULL, \"float\" },\n-    { \"fld4\", \"D\", JNI_TRUE, NULL, \"static double\" },\n-    { \"fld5\", \"D\", JNI_FALSE, NULL, \"double\" },\n-    { \"fld6\", \"Ljava\/lang\/Object;\", JNI_TRUE, NULL, \"static Object\" },\n-    { \"fld7\", \"Ljava\/lang\/Object;\", JNI_FALSE, NULL, \"Object\" },\n-    { \"fld8\", \"Z\", JNI_TRUE, NULL, \"static boolean\" },\n-    { \"fld9\", \"Z\", JNI_FALSE, NULL, \"boolean\" },\n-    { \"fld10\", \"B\", JNI_TRUE, NULL, \"static byte\" },\n-    { \"fld11\", \"B\", JNI_FALSE, NULL, \"byte\" },\n-    { \"fld12\", \"S\", JNI_TRUE, NULL, \"static short\" },\n-    { \"fld13\", \"S\", JNI_FALSE, NULL, \"short\" },\n-    { \"fld14\", \"C\", JNI_TRUE, NULL, \"static char\" },\n-    { \"fld15\", \"C\", JNI_FALSE, NULL, \"char\" }\n+    { \"fld0\", \"J\", JNI_TRUE, nullptr, \"static long\" },\n+    { \"fld1\", \"J\", JNI_FALSE, nullptr, \"long\" },\n+    { \"fld2\", \"F\", JNI_TRUE, nullptr, \"static float\" },\n+    { \"fld3\", \"F\", JNI_FALSE, nullptr, \"float\" },\n+    { \"fld4\", \"D\", JNI_TRUE, nullptr, \"static double\" },\n+    { \"fld5\", \"D\", JNI_FALSE, nullptr, \"double\" },\n+    { \"fld6\", \"Ljava\/lang\/Object;\", JNI_TRUE, nullptr, \"static Object\" },\n+    { \"fld7\", \"Ljava\/lang\/Object;\", JNI_FALSE, nullptr, \"Object\" },\n+    { \"fld8\", \"Z\", JNI_TRUE, nullptr, \"static boolean\" },\n+    { \"fld9\", \"Z\", JNI_FALSE, nullptr, \"boolean\" },\n+    { \"fld10\", \"B\", JNI_TRUE, nullptr, \"static byte\" },\n+    { \"fld11\", \"B\", JNI_FALSE, nullptr, \"byte\" },\n+    { \"fld12\", \"S\", JNI_TRUE, nullptr, \"static short\" },\n+    { \"fld13\", \"S\", JNI_FALSE, nullptr, \"short\" },\n+    { \"fld14\", \"C\", JNI_TRUE, nullptr, \"static char\" },\n+    { \"fld15\", \"C\", JNI_FALSE, nullptr, \"char\" }\n@@ -94,1 +94,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -99,1 +99,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -162,1 +162,1 @@\n-        if (fields[i].fid == NULL) {\n+        if (fields[i].fid == nullptr) {\n@@ -179,1 +179,1 @@\n-        JVMTI_EVENT_FIELD_ACCESS, NULL);\n+        JVMTI_EVENT_FIELD_ACCESS, nullptr);\n@@ -198,1 +198,1 @@\n-    actual_fid = NULL;\n+    actual_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw005\/setfldw005.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,21 +53,21 @@\n-    { NULL, \"staticBoolean\", \"Z\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticByte\", \"B\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticShort\", \"S\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticInt\", \"I\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticLong\", \"J\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticFloat\", \"F\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticDouble\", \"D\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticChar\", \"C\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticObject\", \"Ljava\/lang\/Object;\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticArrInt\", \"[I\", JNI_TRUE, 0, 0 },\n-\n-    { NULL, \"instanceBoolean\", \"Z\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceByte\", \"B\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceShort\", \"S\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceInt\", \"I\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceLong\", \"J\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceFloat\", \"F\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceDouble\", \"D\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceChar\", \"C\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceObject\", \"Ljava\/lang\/Object;\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceArrInt\", \"[I\", JNI_FALSE, 0, 0 }\n+    { nullptr, \"staticBoolean\", \"Z\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticByte\", \"B\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticShort\", \"S\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticInt\", \"I\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticLong\", \"J\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticFloat\", \"F\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticDouble\", \"D\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticChar\", \"C\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticObject\", \"Ljava\/lang\/Object;\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticArrInt\", \"[I\", JNI_TRUE, 0, 0 },\n+\n+    { nullptr, \"instanceBoolean\", \"Z\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceByte\", \"B\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceShort\", \"S\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceInt\", \"I\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceLong\", \"J\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceFloat\", \"F\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceDouble\", \"D\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceChar\", \"C\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceObject\", \"Ljava\/lang\/Object;\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceArrInt\", \"[I\", JNI_FALSE, 0, 0 }\n@@ -106,1 +106,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -111,1 +111,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -165,1 +165,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -194,1 +194,1 @@\n-        JVMTI_EVENT_FIELD_ACCESS, NULL);\n+        JVMTI_EVENT_FIELD_ACCESS, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw006\/setfldw006.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\", \"fld0\", \"I\", 0, NULL, NULL },\n-    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\", \"fld1\", \"I\", 1, NULL, NULL },\n+    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\", \"fld0\", \"I\", 0, nullptr, nullptr },\n+    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\", \"fld1\", \"I\", 1, nullptr, nullptr },\n@@ -54,3 +54,3 @@\n-      \"Lnsk\/jvmti\/SetFieldModificationWatch\/setfmodw001a;\", 0, NULL, NULL },\n-    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001a\", \"fld3\", \"[I\", 0, NULL, NULL },\n-    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001b\", \"fld4\", \"F\", 0, NULL, NULL },\n+      \"Lnsk\/jvmti\/SetFieldModificationWatch\/setfmodw001a;\", 0, nullptr, nullptr },\n+    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001a\", \"fld3\", \"[I\", 0, nullptr, nullptr },\n+    { \"nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001b\", \"fld4\", \"F\", 0, nullptr, nullptr },\n@@ -64,1 +64,1 @@\n-    if (fields[ind].fid == NULL) {\n+    if (fields[ind].fid == nullptr) {\n@@ -87,1 +87,1 @@\n-    char *fld_name = NULL;\n+    char *fld_name = nullptr;\n@@ -91,1 +91,1 @@\n-                                                &fld_name, NULL, NULL);\n+                                                &fld_name, nullptr, nullptr);\n@@ -97,2 +97,2 @@\n-    if (fld_name == NULL) {\n-        printf(\"GetFieldName returned NULL field name\\n\");\n+    if (fld_name == nullptr) {\n+        printf(\"GetFieldName returned null field name\\n\");\n@@ -130,1 +130,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -166,1 +166,1 @@\n-                JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+                JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -198,1 +198,1 @@\n-        if (flag == JNI_FALSE && thrown_fid != NULL) {\n+        if (flag == JNI_FALSE && thrown_fid != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\/setfmodw001.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -98,1 +98,1 @@\n-                JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+                JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -118,2 +118,2 @@\n-    if (fid == NULL) {\n-      printf(\"(GetStaticFieldID) returns NULL\");\n+    if (fid == nullptr) {\n+      printf(\"(GetStaticFieldID) returns null\");\n@@ -132,1 +132,1 @@\n-        err = jvmti->SetFieldModificationWatch(NULL, fid);\n+        err = jvmti->SetFieldModificationWatch(nullptr, fid);\n@@ -139,1 +139,1 @@\n-        err = jvmti->SetFieldModificationWatch(cls, NULL);\n+        err = jvmti->SetFieldModificationWatch(cls, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw002\/setfmodw002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-static jfieldID actual_fid = NULL;\n+static jfieldID actual_fid = nullptr;\n@@ -54,4 +54,4 @@\n-    { \"fld0\", 'I', JNI_TRUE, 42, NULL },\n-    { \"fld1\", 'I', JNI_TRUE, 43, NULL },\n-    { \"fld2\", 'I', JNI_FALSE, 44, NULL },\n-    { \"fld3\", 'I', JNI_FALSE, 45, NULL }\n+    { \"fld0\", 'I', JNI_TRUE, 42, nullptr },\n+    { \"fld1\", 'I', JNI_TRUE, 43, nullptr },\n+    { \"fld2\", 'I', JNI_FALSE, 44, nullptr },\n+    { \"fld3\", 'I', JNI_FALSE, 45, nullptr }\n@@ -87,1 +87,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -92,1 +92,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -149,1 +149,1 @@\n-        if (flds[i].fid == NULL) {\n+        if (flds[i].fid == nullptr) {\n@@ -165,1 +165,1 @@\n-        JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+        JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -198,1 +198,1 @@\n-    actual_fid = NULL;\n+    actual_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw003\/setfmodw003.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-static jfieldID actual_fid = NULL;\n+static jfieldID actual_fid = nullptr;\n@@ -54,4 +54,4 @@\n-    { \"fld0\", 'I', JNI_TRUE, 96, NULL },\n-    { \"fld1\", 'I', JNI_TRUE, 97, NULL },\n-    { \"fld2\", 'I', JNI_FALSE, 98, NULL },\n-    { \"fld3\", 'I', JNI_FALSE, 99, NULL }\n+    { \"fld0\", 'I', JNI_TRUE, 96, nullptr },\n+    { \"fld1\", 'I', JNI_TRUE, 97, nullptr },\n+    { \"fld2\", 'I', JNI_FALSE, 98, nullptr },\n+    { \"fld3\", 'I', JNI_FALSE, 99, nullptr }\n@@ -87,1 +87,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -92,1 +92,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -147,1 +147,1 @@\n-        if (flds[i].fid == NULL) {\n+        if (flds[i].fid == nullptr) {\n@@ -163,1 +163,1 @@\n-        JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+        JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -196,1 +196,1 @@\n-    actual_fid = NULL;\n+    actual_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw004\/setfmodw004.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-static jfieldID actual_fid = NULL;\n+static jfieldID actual_fid = nullptr;\n@@ -55,16 +55,16 @@\n-    { \"fld0\", \"J\", JNI_TRUE, \"static long\", NULL, {} },\n-    { \"fld1\", \"J\", JNI_FALSE, \"long\", NULL, {} },\n-    { \"fld2\", \"F\", JNI_TRUE, \"static float\", NULL, {} },\n-    { \"fld3\", \"F\", JNI_FALSE, \"float\", NULL, {} },\n-    { \"fld4\", \"D\", JNI_TRUE, \"static double\", NULL, {} },\n-    { \"fld5\", \"D\", JNI_FALSE, \"double\", NULL, {} },\n-    { \"fld6\", \"Ljava\/lang\/Object;\", JNI_TRUE, \"static Object\", NULL, {} },\n-    { \"fld7\", \"Ljava\/lang\/Object;\", JNI_FALSE, \"Object\", NULL, {} },\n-    { \"fld8\", \"Z\", JNI_TRUE, \"static boolean\", NULL, {} },\n-    { \"fld9\", \"Z\", JNI_FALSE, \"boolean\", NULL, {} },\n-    { \"fld10\", \"B\", JNI_TRUE, \"static byte\", NULL, {} },\n-    { \"fld11\", \"B\", JNI_FALSE, \"byte\", NULL, {} },\n-    { \"fld12\", \"S\", JNI_TRUE, \"static short\", NULL, {} },\n-    { \"fld13\", \"S\", JNI_FALSE, \"short\", NULL, {} },\n-    { \"fld14\", \"C\", JNI_TRUE, \"static char\", NULL, {} },\n-    { \"fld15\", \"C\", JNI_FALSE, \"char\", NULL, {} }\n+    { \"fld0\", \"J\", JNI_TRUE, \"static long\", nullptr, {} },\n+    { \"fld1\", \"J\", JNI_FALSE, \"long\", nullptr, {} },\n+    { \"fld2\", \"F\", JNI_TRUE, \"static float\", nullptr, {} },\n+    { \"fld3\", \"F\", JNI_FALSE, \"float\", nullptr, {} },\n+    { \"fld4\", \"D\", JNI_TRUE, \"static double\", nullptr, {} },\n+    { \"fld5\", \"D\", JNI_FALSE, \"double\", nullptr, {} },\n+    { \"fld6\", \"Ljava\/lang\/Object;\", JNI_TRUE, \"static Object\", nullptr, {} },\n+    { \"fld7\", \"Ljava\/lang\/Object;\", JNI_FALSE, \"Object\", nullptr, {} },\n+    { \"fld8\", \"Z\", JNI_TRUE, \"static boolean\", nullptr, {} },\n+    { \"fld9\", \"Z\", JNI_FALSE, \"boolean\", nullptr, {} },\n+    { \"fld10\", \"B\", JNI_TRUE, \"static byte\", nullptr, {} },\n+    { \"fld11\", \"B\", JNI_FALSE, \"byte\", nullptr, {} },\n+    { \"fld12\", \"S\", JNI_TRUE, \"static short\", nullptr, {} },\n+    { \"fld13\", \"S\", JNI_FALSE, \"short\", nullptr, {} },\n+    { \"fld14\", \"C\", JNI_TRUE, \"static char\", nullptr, {} },\n+    { \"fld15\", \"C\", JNI_FALSE, \"char\", nullptr, {} }\n@@ -136,1 +136,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -141,1 +141,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -219,1 +219,1 @@\n-        if (flds[i].fid == NULL) {\n+        if (flds[i].fid == nullptr) {\n@@ -236,1 +236,1 @@\n-        JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+        JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n@@ -369,1 +369,1 @@\n-    actual_fid = NULL;\n+    actual_fid = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw005\/setfmodw005.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,21 +53,21 @@\n-    { NULL, \"staticBoolean\", \"Z\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticByte\", \"B\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticShort\", \"S\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticInt\", \"I\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticLong\", \"J\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticFloat\", \"F\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticDouble\", \"D\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticChar\", \"C\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticObject\", \"Ljava\/lang\/Object;\", JNI_TRUE, 0, 0 },\n-    { NULL, \"staticArrInt\", \"[I\", JNI_TRUE, 0, 0 },\n-\n-    { NULL, \"instanceBoolean\", \"Z\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceByte\", \"B\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceShort\", \"S\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceInt\", \"I\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceLong\", \"J\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceFloat\", \"F\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceDouble\", \"D\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceChar\", \"C\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceObject\", \"Ljava\/lang\/Object;\", JNI_FALSE, 0, 0 },\n-    { NULL, \"instanceArrInt\", \"[I\", JNI_FALSE, 0, 0 }\n+    { nullptr, \"staticBoolean\", \"Z\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticByte\", \"B\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticShort\", \"S\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticInt\", \"I\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticLong\", \"J\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticFloat\", \"F\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticDouble\", \"D\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticChar\", \"C\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticObject\", \"Ljava\/lang\/Object;\", JNI_TRUE, 0, 0 },\n+    { nullptr, \"staticArrInt\", \"[I\", JNI_TRUE, 0, 0 },\n+\n+    { nullptr, \"instanceBoolean\", \"Z\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceByte\", \"B\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceShort\", \"S\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceInt\", \"I\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceLong\", \"J\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceFloat\", \"F\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceDouble\", \"D\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceChar\", \"C\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceObject\", \"Ljava\/lang\/Object;\", JNI_FALSE, 0, 0 },\n+    { nullptr, \"instanceArrInt\", \"[I\", JNI_FALSE, 0, 0 }\n@@ -106,1 +106,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -111,1 +111,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -158,1 +158,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -188,1 +188,1 @@\n-        JVMTI_EVENT_FIELD_MODIFICATION, NULL);\n+        JVMTI_EVENT_FIELD_MODIFICATION, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw006\/setfmodw006.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,1 +62,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -65,1 +65,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -281,1 +281,1 @@\n-        if (THREAD_start(waitThr[i]) == NULL) {\n+        if (THREAD_start(waitThr[i]) == nullptr) {\n@@ -326,1 +326,1 @@\n-    JNIEnv *nextEnv = NULL; \/* JNI env used to verify the assertion *\/\n+    JNIEnv *nextEnv = nullptr; \/* JNI env used to verify the assertion *\/\n@@ -328,1 +328,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -335,1 +335,1 @@\n-    if (clsObj == NULL) {\n+    if (clsObj == nullptr) {\n@@ -385,1 +385,1 @@\n-    doRestore((nextEnv == NULL) ? env : nextEnv);\n+    doRestore((nextEnv == nullptr) ? env : nextEnv);\n@@ -388,1 +388,1 @@\n-    doExec((nextEnv == NULL) ? env : nextEnv, 0);\n+    doExec((nextEnv == nullptr) ? env : nextEnv, 0);\n@@ -416,1 +416,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -423,1 +423,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab001\/setjniftab001.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -48,1 +48,1 @@\n-    err = jvmti->SetJNIFunctionTable(NULL);\n+    err = jvmti->SetJNIFunctionTable(nullptr);\n@@ -63,1 +63,1 @@\n-    JNIEnv *nextEnv = NULL;\n+    JNIEnv *nextEnv = nullptr;\n@@ -65,1 +65,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -117,1 +117,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -124,1 +124,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab002\/setjniftab002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -237,1 +237,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -262,1 +262,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -311,1 +311,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -341,1 +341,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/setlocal001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -102,1 +102,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -112,1 +112,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal002\/setlocal002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -142,1 +142,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -147,1 +147,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -195,1 +195,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -205,1 +205,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -219,1 +219,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/setlocal003.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -148,1 +148,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -153,1 +153,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -201,1 +201,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -225,1 +225,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/setlocal004.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -123,1 +123,1 @@\n-    char *str = NULL;\n+    char *str = nullptr;\n@@ -125,2 +125,2 @@\n-    if (prefix != NULL) {\n-        if (!NSK_VERIFY((str = (char *) jni->GetStringUTFChars(prefix, 0)) != NULL))\n+    if (prefix != nullptr) {\n+        if (!NSK_VERIFY((str = (char *) jni->GetStringUTFChars(prefix, 0)) != nullptr))\n@@ -133,1 +133,1 @@\n-    if (str != NULL) {\n+    if (str != nullptr) {\n@@ -142,1 +142,1 @@\n-    if (str != NULL) {\n+    if (str != nullptr) {\n@@ -159,1 +159,1 @@\n-    char *str = NULL;\n+    char *str = nullptr;\n@@ -161,2 +161,2 @@\n-    if (prefix != NULL) {\n-        if (!NSK_VERIFY((str = (char *) jni->GetStringUTFChars(prefix, 0)) != NULL))\n+    if (prefix != nullptr) {\n+        if (!NSK_VERIFY((str = (char *) jni->GetStringUTFChars(prefix, 0)) != nullptr))\n@@ -173,1 +173,1 @@\n-        prefixes[0] = NULL;\n+        prefixes[0] = nullptr;\n@@ -182,1 +182,1 @@\n-    if (str != NULL) {\n+    if (str != nullptr) {\n@@ -212,1 +212,1 @@\n-    if (!NSK_VERIFY((method.name = (char *) jni->GetStringUTFChars(method_name_obj, 0)) != NULL)) {\n+    if (!NSK_VERIFY((method.name = (char *) jni->GetStringUTFChars(method_name_obj, 0)) != nullptr)) {\n@@ -216,1 +216,1 @@\n-    if (!NSK_VERIFY((method.signature = (char *) jni->GetStringUTFChars(method_sig_obj, 0)) != NULL)) {\n+    if (!NSK_VERIFY((method.signature = (char *) jni->GetStringUTFChars(method_sig_obj, 0)) != nullptr)) {\n@@ -229,1 +229,1 @@\n-        if (jni->ExceptionOccurred() != NULL) {\n+        if (jni->ExceptionOccurred() != nullptr) {\n@@ -240,1 +240,1 @@\n-    if (method.name != NULL) {\n+    if (method.name != nullptr) {\n@@ -244,1 +244,1 @@\n-    if (method.signature != NULL) {\n+    if (method.signature != nullptr) {\n@@ -276,1 +276,1 @@\n-                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL\n+                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetNativeMethodPrefix\/SetNativeMethodPrefix001\/SetNativeMethodPrefix001.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static char *prefix = NULL;\n+static char *prefix = nullptr;\n@@ -45,1 +45,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -98,1 +98,1 @@\n-    if (prefix != NULL) {\n+    if (prefix != nullptr) {\n@@ -106,1 +106,1 @@\n-                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL\n+                (jvmti = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetNativeMethodPrefix\/SetNativeMethodPrefix002\/SetNativeMethodPrefix002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-    char* value = NULL;\n+    char* value = nullptr;\n@@ -84,1 +84,1 @@\n-    if (value == NULL\n+    if (value == nullptr\n@@ -177,1 +177,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -185,1 +185,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -193,1 +193,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetSystemProperty\/setsysprop002\/setsysprop002.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -90,1 +90,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetSystemProperty\/setsysprop003\/setsysprop003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        jobject testedObject = NULL;\n+        jobject testedObject = nullptr;\n@@ -59,2 +59,2 @@\n-            jclass debugeeClass = NULL;\n-            jfieldID objectField = NULL;\n+            jclass debugeeClass = nullptr;\n+            jfieldID objectField = nullptr;\n@@ -64,1 +64,1 @@\n-                    jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+                    jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -72,1 +72,1 @@\n-                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != NULL)) {\n+                    jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -80,1 +80,1 @@\n-                    jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+                    jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -87,1 +87,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr)) {\n@@ -183,1 +183,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -193,1 +193,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -208,1 +208,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetTag\/settag001\/settag001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-        jthread testedThread = NULL;\n+        jthread testedThread = nullptr;\n@@ -64,1 +64,1 @@\n-        StorageStructure* obtainedStorage = NULL;\n+        StorageStructure* obtainedStorage = nullptr;\n@@ -70,1 +70,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -151,1 +151,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetThreadLocalStorage\/setthrdstor001\/setthrdstor001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        StorageStructure* obtainedStorage = NULL;\n+        StorageStructure* obtainedStorage = nullptr;\n@@ -69,1 +69,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetThreadLocalStorage(NULL, (void*)initialStorage))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetThreadLocalStorage(nullptr, (void*)initialStorage))) {\n@@ -83,1 +83,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->GetThreadLocalStorage(NULL, (void**)&obtainedStorage))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->GetThreadLocalStorage(nullptr, (void**)&obtainedStorage))) {\n@@ -136,1 +136,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -146,1 +146,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -150,1 +150,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetThreadLocalStorage\/setthrdstor002\/setthrdstor002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -93,1 +93,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -120,1 +120,1 @@\n-    if (thread != NULL) {\n+    if (thread != nullptr) {\n@@ -128,1 +128,1 @@\n-        if (info.name != NULL && strcmp(info.name, THREAD_NAME) == 0) {\n+        if (info.name != nullptr && strcmp(info.name, THREAD_NAME) == 0) {\n@@ -135,1 +135,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->SetThreadLocalStorage(NULL, (void*)initialStorage))) {\n+            if (!NSK_JVMTI_VERIFY(jvmti->SetThreadLocalStorage(nullptr, (void*)initialStorage))) {\n@@ -148,1 +148,1 @@\n-    if (thread != NULL) {\n+    if (thread != nullptr) {\n@@ -156,1 +156,1 @@\n-        if (info.name != NULL && strcmp(info.name, THREAD_NAME) == 0) {\n+        if (info.name != nullptr && strcmp(info.name, THREAD_NAME) == 0) {\n@@ -163,1 +163,1 @@\n-                StorageStructure* obtainedStorage = NULL;\n+                StorageStructure* obtainedStorage = nullptr;\n@@ -167,1 +167,1 @@\n-                        jvmti->GetThreadLocalStorage(NULL, (void**)&obtainedStorage))) {\n+                        jvmti->GetThreadLocalStorage(nullptr, (void**)&obtainedStorage))) {\n@@ -222,1 +222,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -232,1 +232,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -246,1 +246,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetThreadLocalStorage\/setthrdstor003\/setthrdstor003.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -172,1 +172,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -197,1 +197,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -202,1 +202,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -206,1 +206,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetVerboseFlag\/setvrbflag001\/setvrbflag001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -86,1 +86,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -90,1 +90,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetVerboseFlag\/setvrbflag002\/setvrbflag002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,1 +56,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -61,1 +61,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -107,1 +107,1 @@\n-    err = jvmti->StopThread(NULL, ex);\n+    err = jvmti->StopThread(nullptr, ex);\n@@ -120,1 +120,1 @@\n-    err = jvmti->StopThread(thr, NULL);\n+    err = jvmti->StopThread(thr, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd006\/stopthrd006.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,4 +41,4 @@\n-static jobject threadDeath = NULL;\n-static jthread runningThread = NULL;\n-static jthread waitingThread = NULL;\n-static jthread sleepingThread = NULL;\n+static jobject threadDeath = nullptr;\n+static jthread runningThread = nullptr;\n+static jthread waitingThread = nullptr;\n+static jthread sleepingThread = nullptr;\n@@ -56,1 +56,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -58,2 +58,2 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n@@ -68,1 +68,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -73,1 +73,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -83,1 +83,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -99,1 +99,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -103,1 +103,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -106,1 +106,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadDeath = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (threadDeath = jni->NewObject(cls, ctor)) != nullptr))\n@@ -127,1 +127,1 @@\n-    if (!NSK_VERIFY(runningThread != NULL)) {\n+    if (!NSK_VERIFY(runningThread != nullptr)) {\n@@ -135,1 +135,1 @@\n-    if (!NSK_VERIFY(waitingThread != NULL)) {\n+    if (!NSK_VERIFY(waitingThread != nullptr)) {\n@@ -143,1 +143,1 @@\n-    if (!NSK_VERIFY(sleepingThread != NULL)) {\n+    if (!NSK_VERIFY(sleepingThread != nullptr)) {\n@@ -169,1 +169,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -180,1 +180,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -183,1 +183,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd007\/stopthrd007.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        jthread testedThread = NULL;\n+        jthread testedThread = nullptr;\n@@ -56,1 +56,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -121,1 +121,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -131,1 +131,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -144,1 +144,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThread\/suspendthrd001\/suspendthrd001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-static jthread testedThread = NULL;\n+static jthread testedThread = nullptr;\n@@ -68,1 +68,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -74,1 +74,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -102,1 +102,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -129,1 +129,1 @@\n-    if (thread != NULL &&\n+    if (thread != nullptr &&\n@@ -153,1 +153,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -163,1 +163,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -185,1 +185,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThread\/suspendthrd002\/suspendthrd002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        jthread testedThread = NULL;\n+        jthread testedThread = nullptr;\n@@ -59,1 +59,1 @@\n-                nsk_jvmti_threadByName(THREAD_NAME)) != NULL))\n+                nsk_jvmti_threadByName(THREAD_NAME)) != nullptr))\n@@ -153,1 +153,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -163,1 +163,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -176,1 +176,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThread\/suspendthrd003\/suspendthrd003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-        jthread* threads = NULL;\n-        jvmtiError* results = NULL;\n+        jthread* threads = nullptr;\n+        jvmtiError* results = nullptr;\n@@ -133,1 +133,1 @@\n-            if (threads[i] != NULL)\n+            if (threads[i] != nullptr)\n@@ -159,1 +159,1 @@\n-    jthread* threads = NULL;\n+    jthread* threads = nullptr;\n@@ -166,1 +166,1 @@\n-        foundThreads[i] = NULL;\n+        foundThreads[i] = nullptr;\n@@ -183,1 +183,1 @@\n-        if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+        if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -211,1 +211,1 @@\n-                    jni->NewGlobalRef(foundThreads[i])) != NULL)) {\n+                    jni->NewGlobalRef(foundThreads[i])) != nullptr)) {\n@@ -236,1 +236,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -251,1 +251,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -264,1 +264,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThreadList\/suspendthrdlst001\/suspendthrdlst001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-static jthread* threads = NULL;\n+static jthread* threads = nullptr;\n@@ -72,1 +72,1 @@\n-        jvmtiError* results = NULL;\n+        jvmtiError* results = nullptr;\n@@ -111,1 +111,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -134,1 +134,1 @@\n-        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+        if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -149,1 +149,1 @@\n-            if (threads[i] != NULL)\n+            if (threads[i] != nullptr)\n@@ -175,1 +175,1 @@\n-    jthread* threads = NULL;\n+    jthread* threads = nullptr;\n@@ -182,1 +182,1 @@\n-        foundThreads[i] = NULL;\n+        foundThreads[i] = nullptr;\n@@ -199,1 +199,1 @@\n-        if (info.name != NULL && strncmp(name, info.name, len) == 0) {\n+        if (info.name != nullptr && strncmp(name, info.name, len) == 0) {\n@@ -227,1 +227,1 @@\n-                    jni->NewGlobalRef(foundThreads[i])) != NULL)) {\n+                    jni->NewGlobalRef(foundThreads[i])) != nullptr)) {\n@@ -246,1 +246,1 @@\n-        if (thread != NULL &&\n+        if (thread != nullptr &&\n@@ -272,1 +272,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -287,1 +287,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -309,1 +309,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SuspendThreadList\/suspendthrdlst002\/suspendthrdlst002.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -84,1 +84,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -94,1 +94,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/VMDeath\/vmdeath001\/vmdeath001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,1 +55,1 @@\n-            JVMTI_EVENT_THREAD_START, NULL);\n+            JVMTI_EVENT_THREAD_START, nullptr);\n@@ -110,1 +110,1 @@\n-    if (inf.name != NULL && strcmp(name, inf.name) == 0) {\n+    if (inf.name != nullptr && strcmp(name, inf.name) == 0) {\n@@ -135,1 +135,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -140,1 +140,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -155,1 +155,1 @@\n-            JVMTI_EVENT_VM_INIT, NULL);\n+            JVMTI_EVENT_VM_INIT, nullptr);\n@@ -167,1 +167,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/VMInit\/vminit001\/vminit001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -149,2 +149,2 @@\n-    if (!NSK_JNI_VERIFY(jni, (cid = jni->GetMethodID(cls, \"<init>\", \"()V\")) != NULL)) {\n-         NSK_COMPLAIN0(\"newObject: GetMethodID returned NULL\\n\\n\");\n+    if (!NSK_JNI_VERIFY(jni, (cid = jni->GetMethodID(cls, \"<init>\", \"()V\")) != nullptr)) {\n+         NSK_COMPLAIN0(\"newObject: GetMethodID returned null\\n\\n\");\n@@ -152,1 +152,1 @@\n-         return NULL;\n+         return nullptr;\n@@ -155,1 +155,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (result = jni->NewObject(cls, cid)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (result = jni->NewObject(cls, cid)) != nullptr)) {\n@@ -157,1 +157,1 @@\n-         NSK_COMPLAIN0(\"newObject: NewObject returned NULL\\n\\n\");\n+         NSK_COMPLAIN0(\"newObject: NewObject returned null\\n\\n\");\n@@ -159,1 +159,1 @@\n-         return NULL;\n+         return nullptr;\n@@ -170,1 +170,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cid = jni->GetMethodID(cls, \"<init>\", \"()V\")) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (cid = jni->GetMethodID(cls, \"<init>\", \"()V\")) != nullptr)) {\n@@ -172,1 +172,1 @@\n-         NSK_COMPLAIN0(\"allocObject: GetMethodID returned NULL\\n\\n\");\n+         NSK_COMPLAIN0(\"allocObject: GetMethodID returned null\\n\\n\");\n@@ -174,1 +174,1 @@\n-         return NULL;\n+         return nullptr;\n@@ -177,1 +177,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (result = jni->AllocObject(cls)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (result = jni->AllocObject(cls)) != nullptr)) {\n@@ -179,1 +179,1 @@\n-         NSK_COMPLAIN0(\"allocObject: AllocObject returned NULL\\n\\n\");\n+         NSK_COMPLAIN0(\"allocObject: AllocObject returned null\\n\\n\");\n@@ -181,1 +181,1 @@\n-         return NULL;\n+         return nullptr;\n@@ -188,1 +188,1 @@\n-         return NULL;\n+         return nullptr;\n@@ -199,1 +199,1 @@\n-                                                          NULL))) {\n+                                                          nullptr))) {\n@@ -207,1 +207,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -215,1 +215,1 @@\n-    if (debugeeClass == NULL) {\n+    if (debugeeClass == nullptr) {\n@@ -316,1 +316,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -346,1 +346,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -350,1 +350,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -354,1 +354,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP01\/ap01t001\/ap01t001.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-static jclass testedClass = NULL;\n+static jclass testedClass = nullptr;\n@@ -145,1 +145,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->IterateOverReachableObjects(NULL \/*heapRootCallback*\/,\n+    if (!NSK_JVMTI_VERIFY(jvmti->IterateOverReachableObjects(nullptr \/*heapRootCallback*\/,\n@@ -147,1 +147,1 @@\n-                                                             NULL \/*objectReferenceCallback*\/,\n+                                                             nullptr \/*objectReferenceCallback*\/,\n@@ -176,1 +176,1 @@\n-    if (testedClass == NULL) {\n+    if (testedClass == nullptr) {\n@@ -181,1 +181,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass)jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass)jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -225,1 +225,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -239,1 +239,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP02\/ap02t001\/ap02t001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -101,1 +101,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -113,1 +113,1 @@\n-        if (debugeeClass == NULL) {\n+        if (debugeeClass == nullptr) {\n@@ -163,1 +163,1 @@\n-                jni->GetStaticFieldID(debugeeClass, \"catcher\", DEBUGEE_SIGNATURE)) != NULL)) {\n+                jni->GetStaticFieldID(debugeeClass, \"catcher\", DEBUGEE_SIGNATURE)) != nullptr)) {\n@@ -169,2 +169,2 @@\n-                jni->GetStaticObjectField(debugeeClass, fid)) != NULL)) {\n-            NSK_COMPLAIN0(\"GetStaticObjectField returned NULL for 'catcher' field value\\n\\n\");\n+                jni->GetStaticObjectField(debugeeClass, fid)) != nullptr)) {\n+            NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'catcher' field value\\n\\n\");\n@@ -218,1 +218,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -247,1 +247,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -251,1 +251,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP03\/ap03t001\/ap03t001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -55,3 +55,3 @@\n-static jclass debugeeClass = NULL;\n-static jfieldID rootFieldID = NULL;\n-static jmethodID unlockSecondaryID = NULL;\n+static jclass debugeeClass = nullptr;\n+static jfieldID rootFieldID = nullptr;\n+static jmethodID unlockSecondaryID = nullptr;\n@@ -65,1 +65,1 @@\n-static jrawMonitorID counterMonitor_ptr = NULL;\n+static jrawMonitorID counterMonitor_ptr = nullptr;\n@@ -272,1 +272,1 @@\n-                                                 NULL \/*user_data*\/))) {\n+                                                 nullptr \/*user_data*\/))) {\n@@ -301,1 +301,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -330,1 +330,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -350,1 +350,1 @@\n-    jobject root = NULL;\n+    jobject root = nullptr;\n@@ -354,2 +354,2 @@\n-            jni->GetStaticObjectField(debugeeClass, rootFieldID)) != NULL)) {\n-        NSK_COMPLAIN0(\"GetStaticObjectField returned NULL for 'root' field value\\n\\n\");\n+            jni->GetStaticObjectField(debugeeClass, rootFieldID)) != nullptr)) {\n+        NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'root' field value\\n\\n\");\n@@ -370,1 +370,1 @@\n-                                                                       NULL \/*user_data*\/))) {\n+                                                                       nullptr \/*user_data*\/))) {\n@@ -395,1 +395,1 @@\n-    if (debugeeClass == NULL) {\n+    if (debugeeClass == nullptr) {\n@@ -400,1 +400,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != nullptr))\n@@ -405,1 +405,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"root\", ROOT_SIGNATURE)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, \"root\", ROOT_SIGNATURE)) != nullptr)) {\n@@ -412,1 +412,1 @@\n-            jni->GetStaticMethodID(debugeeClass, \"unlockSecondary\", \"()V\")) != NULL)) {\n+            jni->GetStaticMethodID(debugeeClass, \"unlockSecondary\", \"()V\")) != nullptr)) {\n@@ -426,1 +426,1 @@\n-    nsk_jvmti_enableEvents(JVMTI_DISABLE, eventsCount, events, NULL);\n+    nsk_jvmti_enableEvents(JVMTI_DISABLE, eventsCount, events, nullptr);\n@@ -454,1 +454,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -492,1 +492,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, eventsCount, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, eventsCount, events, nullptr)) {\n@@ -497,1 +497,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t001\/ap04t001.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -52,1 +52,1 @@\n-static jclass debugeeClass = NULL;\n+static jclass debugeeClass = nullptr;\n@@ -58,1 +58,1 @@\n-static jrawMonitorID counterMonitor_ptr = NULL;\n+static jrawMonitorID counterMonitor_ptr = nullptr;\n@@ -252,1 +252,1 @@\n-                                                 NULL \/*user_data*\/))) {\n+                                                 nullptr \/*user_data*\/))) {\n@@ -282,1 +282,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -312,1 +312,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -332,1 +332,1 @@\n-    jobject root = NULL;\n+    jobject root = nullptr;\n@@ -336,2 +336,2 @@\n-                jni->GetStaticObjectField(debugeeClass, rootFieldID)) != NULL)) {\n-        NSK_COMPLAIN0(\"GetStaticObjectField returned NULL for 'root' field value\\n\\n\");\n+                jni->GetStaticObjectField(debugeeClass, rootFieldID)) != nullptr)) {\n+        NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'root' field value\\n\\n\");\n@@ -349,1 +349,1 @@\n-                                                                       NULL \/*user_data*\/))) {\n+                                                                       nullptr \/*user_data*\/))) {\n@@ -375,1 +375,1 @@\n-    if (debugeeClass == NULL) {\n+    if (debugeeClass == nullptr) {\n@@ -380,1 +380,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != nullptr))\n@@ -385,1 +385,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"root\", ROOT_SIGNATURE)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, \"root\", ROOT_SIGNATURE)) != nullptr)) {\n@@ -392,1 +392,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"modified\", \"I\")) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, \"modified\", \"I\")) != nullptr)) {\n@@ -437,1 +437,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -472,1 +472,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -476,1 +476,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t002\/ap04t002.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -48,1 +48,1 @@\n-static jclass debugeeClass = NULL;\n+static jclass debugeeClass = nullptr;\n@@ -51,3 +51,3 @@\n-static jrawMonitorID startLock = NULL;\n-static jrawMonitorID runLock = NULL;\n-static jrawMonitorID endLock = NULL;\n+static jrawMonitorID startLock = nullptr;\n+static jrawMonitorID runLock = nullptr;\n+static jrawMonitorID endLock = nullptr;\n@@ -60,1 +60,1 @@\n-static jrawMonitorID counterMonitor_ptr = NULL;\n+static jrawMonitorID counterMonitor_ptr = nullptr;\n@@ -213,1 +213,1 @@\n-    jobject* taggedObjectsList = NULL;\n+    jobject* taggedObjectsList = nullptr;\n@@ -222,1 +222,1 @@\n-                1, &tag, &taggedObjectsCount, &taggedObjectsList, NULL))) {\n+                1, &tag, &taggedObjectsCount, &taggedObjectsList, nullptr))) {\n@@ -318,1 +318,1 @@\n-            jvmti->RunAgentThread(threadObj, agent_start, NULL, JVMTI_THREAD_NORM_PRIORITY))) {\n+            jvmti->RunAgentThread(threadObj, agent_start, nullptr, JVMTI_THREAD_NORM_PRIORITY))) {\n@@ -351,1 +351,1 @@\n-    jthread threadObj = NULL;\n+    jthread threadObj = nullptr;\n@@ -411,1 +411,1 @@\n-                                                 NULL \/*user_data*\/))) {\n+                                                 nullptr \/*user_data*\/))) {\n@@ -442,1 +442,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -473,1 +473,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -495,1 +495,1 @@\n-    jobject root = NULL;\n+    jobject root = nullptr;\n@@ -507,1 +507,1 @@\n-                                                                       NULL \/*user_data*\/))) {\n+                                                                       nullptr \/*user_data*\/))) {\n@@ -534,1 +534,1 @@\n-    if (debugeeClass == NULL) {\n+    if (debugeeClass == nullptr) {\n@@ -582,1 +582,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -611,1 +611,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t003\/ap04t003.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,1 +44,1 @@\n-static jobject referrer = NULL;\n+static jobject referrer = nullptr;\n@@ -115,1 +115,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (referrer = jni->NewGlobalRef(ref)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (referrer = jni->NewGlobalRef(ref)) != nullptr))\n@@ -122,1 +122,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -135,1 +135,1 @@\n-                                                                 NULL \/*user_data*\/))) {\n+                                                                 nullptr \/*user_data*\/))) {\n@@ -157,1 +157,1 @@\n-                    referrer, objectReferenceCallback, NULL \/*user_data*\/))) {\n+                    referrer, objectReferenceCallback, nullptr \/*user_data*\/))) {\n@@ -203,1 +203,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -218,1 +218,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP05\/ap05t001\/ap05t001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,1 +44,1 @@\n-static jobject referrer = NULL;\n+static jobject referrer = nullptr;\n@@ -114,1 +114,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (referrer = jni->NewGlobalRef(ref)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (referrer = jni->NewGlobalRef(ref)) != nullptr))\n@@ -125,1 +125,1 @@\n-                                                             NULL \/*user_data*\/))) {\n+                                                             nullptr \/*user_data*\/))) {\n@@ -144,1 +144,1 @@\n-                                                                       NULL \/*user_data*\/))) {\n+                                                                       nullptr \/*user_data*\/))) {\n@@ -162,1 +162,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -207,1 +207,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -222,1 +222,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP05\/ap05t002\/ap05t002.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -137,1 +137,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -150,1 +150,1 @@\n-        if (debugeeClass == NULL) {\n+        if (debugeeClass == nullptr) {\n@@ -156,1 +156,1 @@\n-                jni->GetStaticFieldID(debugeeClass, \"thread\", THREAD_CLS_SIGNATURE)) != NULL)) {\n+                jni->GetStaticFieldID(debugeeClass, \"thread\", THREAD_CLS_SIGNATURE)) != nullptr)) {\n@@ -162,2 +162,2 @@\n-                jni->GetStaticObjectField(debugeeClass, fid)) != NULL)) {\n-            NSK_COMPLAIN0(\"GetStaticObjectField returned NULL for 'thread' field value\\n\\n\");\n+                jni->GetStaticObjectField(debugeeClass, fid)) != nullptr)) {\n+            NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'thread' field value\\n\\n\");\n@@ -168,1 +168,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (globalRefThread = jni->NewGlobalRef(localRefThread)) != NULL))\n+        if (!NSK_JNI_VERIFY(jni, (globalRefThread = jni->NewGlobalRef(localRefThread)) != nullptr))\n@@ -175,1 +175,1 @@\n-                                                                 NULL \/*user_data*\/))) {\n+                                                                 nullptr \/*user_data*\/))) {\n@@ -223,1 +223,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -238,1 +238,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP06\/ap06t001\/ap06t001.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,1 +44,1 @@\n-static jobject root = NULL;\n+static jobject root = nullptr;\n@@ -121,1 +121,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (root = jni->NewGlobalRef(obj)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (root = jni->NewGlobalRef(obj)) != nullptr))\n@@ -128,1 +128,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -140,1 +140,1 @@\n-                                                                 NULL \/*user_data*\/))) {\n+                                                                 nullptr \/*user_data*\/))) {\n@@ -148,1 +148,1 @@\n-                    root, objectReferenceCallback, NULL \/*user_data*\/))) {\n+                    root, objectReferenceCallback, nullptr \/*user_data*\/))) {\n@@ -181,1 +181,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -196,1 +196,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP07\/ap07t001\/ap07t001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,1 +44,1 @@\n-static jobject root = NULL;\n+static jobject root = nullptr;\n@@ -122,1 +122,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -134,1 +134,1 @@\n-                                                                 NULL \/*user_data*\/))) {\n+                                                                 nullptr \/*user_data*\/))) {\n@@ -164,1 +164,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -179,1 +179,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP07\/ap07t002\/ap07t002.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,1 +44,1 @@\n-static jobject referrer = NULL;\n+static jobject referrer = nullptr;\n@@ -142,1 +142,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (referrer = jni->NewGlobalRef(ref)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (referrer = jni->NewGlobalRef(ref)) != nullptr))\n@@ -149,1 +149,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -159,1 +159,1 @@\n-                                                                           NULL \/*user_data*\/))) {\n+                                                                           nullptr \/*user_data*\/))) {\n@@ -217,1 +217,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -234,1 +234,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP09\/ap09t001\/ap09t001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -59,1 +59,1 @@\n-    LocalStorage* obtainedData = NULL;\n+    LocalStorage* obtainedData = nullptr;\n@@ -262,1 +262,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -299,1 +299,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -303,1 +303,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -307,1 +307,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -311,1 +311,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP10\/ap10t001\/ap10t001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        if (signature != NULL && strcmp(signature, exp_sig) == 0) {\n+        if (signature != nullptr && strcmp(signature, exp_sig) == 0) {\n@@ -53,1 +53,1 @@\n-        if (signature != NULL)\n+        if (signature != nullptr)\n@@ -56,1 +56,1 @@\n-        if (generic != NULL)\n+        if (generic != nullptr)\n@@ -144,1 +144,1 @@\n-        if (classes != NULL)\n+        if (classes != nullptr)\n@@ -177,1 +177,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -180,1 +180,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -213,1 +213,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -226,1 +226,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -242,1 +242,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, nullptr)))\n@@ -246,1 +246,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP11\/ap11t001\/ap11t001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -92,1 +92,1 @@\n-                                                          NULL))) {\n+                                                          nullptr))) {\n@@ -100,1 +100,1 @@\n-    jclass debugeeClass = NULL;\n+    jclass debugeeClass = nullptr;\n@@ -135,1 +135,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -165,1 +165,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -169,1 +169,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -173,1 +173,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP12\/ap12t001\/ap12t001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-    if (name == NULL || strcmp(name, TESTED_CLASS_NAME)) {\n+    if (name == nullptr || strcmp(name, TESTED_CLASS_NAME)) {\n@@ -178,1 +178,1 @@\n-                                                          NULL))) {\n+                                                          nullptr))) {\n@@ -243,1 +243,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -270,1 +270,1 @@\n-                                                          NULL))) {\n+                                                          nullptr))) {\n@@ -275,1 +275,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI01\/bi01t001\/bi01t001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -112,1 +112,1 @@\n-    if (name == NULL || strcmp(name, TESTED_CLASS_NAME)) {\n+    if (name == nullptr || strcmp(name, TESTED_CLASS_NAME)) {\n@@ -186,1 +186,1 @@\n-                                                          NULL))) {\n+                                                          nullptr))) {\n@@ -256,1 +256,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -283,1 +283,1 @@\n-                                                          NULL))) {\n+                                                          nullptr))) {\n@@ -288,1 +288,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI01\/bi01t002\/bi01t002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static jclass debugeeClass = NULL;\n-static jbyteArray classBytes = NULL;\n+static jclass debugeeClass = nullptr;\n+static jbyteArray classBytes = nullptr;\n@@ -58,1 +58,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -62,1 +62,1 @@\n-        if (class_being_redefined == NULL) {\n+        if (class_being_redefined == nullptr) {\n@@ -72,1 +72,1 @@\n-                    jni_env->GetByteArrayElements(classBytes, NULL)) != NULL)) {\n+                    jni_env->GetByteArrayElements(classBytes, nullptr)) != nullptr)) {\n@@ -85,1 +85,1 @@\n-    jfieldID field = NULL;\n+    jfieldID field = nullptr;\n@@ -88,1 +88,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -91,1 +91,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != nullptr))\n@@ -95,1 +95,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != nullptr))\n@@ -99,1 +99,1 @@\n-            jni->GetStaticObjectField(debugeeClass, field)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, field)) != nullptr))\n@@ -102,1 +102,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != nullptr))\n@@ -107,1 +107,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -140,1 +140,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -165,1 +165,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -177,1 +177,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -185,1 +185,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI02\/bi02t001\/bi02t001.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-static jclass debugeeClass = NULL;\n-static jclass testedClass = NULL;\n-static jbyteArray classBytes = NULL;\n+static jclass debugeeClass = nullptr;\n+static jclass testedClass = nullptr;\n+static jbyteArray classBytes = nullptr;\n@@ -52,1 +52,1 @@\n-    jfieldID field = NULL;\n+    jfieldID field = nullptr;\n@@ -55,1 +55,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -58,1 +58,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != nullptr))\n@@ -62,1 +62,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != nullptr))\n@@ -66,1 +66,1 @@\n-            jni->GetStaticObjectField(debugeeClass, field)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, field)) != nullptr))\n@@ -69,1 +69,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != nullptr))\n@@ -73,1 +73,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -76,1 +76,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass)jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass)jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -93,1 +93,1 @@\n-            jni->GetByteArrayElements(classBytes, NULL)) != NULL))\n+            jni->GetByteArrayElements(classBytes, nullptr)) != nullptr))\n@@ -149,1 +149,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -160,1 +160,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -168,1 +168,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI02\/bi02t002\/bi02t002.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static jclass debugeeClass = NULL;\n-static jbyteArray classBytes = NULL;\n+static jclass debugeeClass = nullptr;\n+static jbyteArray classBytes = nullptr;\n@@ -58,1 +58,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -62,1 +62,1 @@\n-        if (class_being_redefined == NULL) {\n+        if (class_being_redefined == nullptr) {\n@@ -72,1 +72,1 @@\n-                    jni_env->GetByteArrayElements(classBytes, NULL)) != NULL)) {\n+                    jni_env->GetByteArrayElements(classBytes, nullptr)) != nullptr)) {\n@@ -85,1 +85,1 @@\n-    jfieldID field = NULL;\n+    jfieldID field = nullptr;\n@@ -88,1 +88,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -91,1 +91,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != nullptr))\n@@ -95,1 +95,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != nullptr))\n@@ -99,1 +99,1 @@\n-            jni->GetStaticObjectField(debugeeClass, field)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, field)) != nullptr))\n@@ -102,1 +102,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != nullptr))\n@@ -107,1 +107,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -140,1 +140,1 @@\n-                                                          NULL)))\n+                                                          nullptr)))\n@@ -165,1 +165,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -177,1 +177,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -185,1 +185,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI03\/bi03t001\/bi03t001.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-static jclass debugeeClass = NULL;\n-static jclass testedClass = NULL;\n-static jbyteArray classBytes = NULL;\n+static jclass debugeeClass = nullptr;\n+static jclass testedClass = nullptr;\n+static jbyteArray classBytes = nullptr;\n@@ -52,1 +52,1 @@\n-    jfieldID field = NULL;\n+    jfieldID field = nullptr;\n@@ -55,1 +55,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -58,1 +58,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = (jclass)jni->NewGlobalRef(debugeeClass)) != nullptr))\n@@ -62,1 +62,1 @@\n-            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, \"newClassBytes\", \"[B\")) != nullptr))\n@@ -66,1 +66,1 @@\n-            jni->GetStaticObjectField(debugeeClass, field)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, field)) != nullptr))\n@@ -69,1 +69,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (classBytes = (jbyteArray)jni->NewGlobalRef(classBytes)) != nullptr))\n@@ -73,1 +73,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -76,1 +76,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass)jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass)jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -93,1 +93,1 @@\n-            jni->GetByteArrayElements(classBytes, NULL)) != NULL))\n+            jni->GetByteArrayElements(classBytes, nullptr)) != nullptr))\n@@ -149,1 +149,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -160,1 +160,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -168,1 +168,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI03\/bi03t002\/bi03t002.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    if (bytecode == NULL) {\n+    if (bytecode == nullptr) {\n@@ -140,1 +140,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -148,1 +148,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -164,1 +164,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI04\/bi04t002\/bi04t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -65,4 +65,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -75,1 +75,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -85,1 +85,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -90,1 +90,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -100,1 +100,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -110,1 +110,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -114,1 +114,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -119,1 +119,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -159,3 +159,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -163,1 +163,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -167,1 +167,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -170,1 +170,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -189,1 +189,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -202,1 +202,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -254,2 +254,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -298,1 +298,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -368,1 +368,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -396,1 +396,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -568,1 +568,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -572,1 +572,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t001\/cm01t001.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,4 +58,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -68,1 +68,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -78,1 +78,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -83,1 +83,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -93,1 +93,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -102,1 +102,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -108,1 +108,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -112,1 +112,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -117,1 +117,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -157,3 +157,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -161,1 +161,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -165,1 +165,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -168,1 +168,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -187,1 +187,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -200,1 +200,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -252,2 +252,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -306,1 +306,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -376,1 +376,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -404,1 +404,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -577,1 +577,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -581,1 +581,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t002\/cm01t002.cpp","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -80,1 +80,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -85,1 +85,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -95,1 +95,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -114,1 +114,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -154,3 +154,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -162,1 +162,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -184,1 +184,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -197,1 +197,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -249,2 +249,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -303,1 +303,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -373,1 +373,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -401,1 +401,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -571,1 +571,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -575,1 +575,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t003\/cm01t003.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,4 +58,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -68,1 +68,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -78,1 +78,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -83,1 +83,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -93,1 +93,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -103,1 +103,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -112,1 +112,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -152,3 +152,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -156,1 +156,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -160,1 +160,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -163,1 +163,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -182,1 +182,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -194,1 +194,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -246,2 +246,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -300,1 +300,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -370,1 +370,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -398,1 +398,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -570,1 +570,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -574,1 +574,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t004\/cm01t004.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,4 +58,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -68,1 +68,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -78,1 +78,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -83,1 +83,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -93,1 +93,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -103,1 +103,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -112,1 +112,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -152,3 +152,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -156,1 +156,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -160,1 +160,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -163,1 +163,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -182,1 +182,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -195,1 +195,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -246,2 +246,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -300,1 +300,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -370,1 +370,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -398,1 +398,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -570,1 +570,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -574,1 +574,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t005\/cm01t005.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,4 +58,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -68,1 +68,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -78,1 +78,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -83,1 +83,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -93,1 +93,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -103,1 +103,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -112,1 +112,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -152,3 +152,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -156,1 +156,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -160,1 +160,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -163,1 +163,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -182,1 +182,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -195,1 +195,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -247,2 +247,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -301,1 +301,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -371,1 +371,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -399,1 +399,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -570,1 +570,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -574,1 +574,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t006\/cm01t006.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -58,4 +58,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -68,1 +68,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -78,1 +78,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -83,1 +83,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -93,1 +93,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -103,1 +103,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -111,1 +111,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"waitingFlag\", \"Z\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"waitingFlag\", \"Z\")) != nullptr))\n@@ -151,3 +151,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -155,1 +155,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -159,1 +159,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -162,1 +162,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -181,1 +181,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -194,1 +194,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -268,2 +268,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -324,1 +324,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -394,1 +394,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -422,1 +422,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -594,1 +594,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -598,1 +598,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t007\/cm01t007.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -65,1 +65,1 @@\n-static unsigned char *klass_bytes = NULL;\n+static unsigned char *klass_bytes = nullptr;\n@@ -72,1 +72,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -82,1 +82,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -87,1 +87,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -97,1 +97,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -111,1 +111,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -116,1 +116,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -156,3 +156,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -160,1 +160,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -164,1 +164,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -167,1 +167,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -186,1 +186,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -199,1 +199,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -251,2 +251,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -305,1 +305,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -375,1 +375,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -508,1 +508,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -517,1 +517,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL));\n+            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr));\n@@ -603,1 +603,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -607,1 +607,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -677,1 +677,1 @@\n-        jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+        jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t008\/cm01t008.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -80,1 +80,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -85,1 +85,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -95,1 +95,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -114,1 +114,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -154,3 +154,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -162,1 +162,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -183,1 +183,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -196,1 +196,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -248,2 +248,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -302,1 +302,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -372,1 +372,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -400,1 +400,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -572,1 +572,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -576,1 +576,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t009\/cm01t009.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -59,4 +59,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -69,1 +69,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -79,1 +79,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -84,1 +84,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -94,1 +94,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -104,1 +104,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -108,1 +108,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -113,1 +113,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -153,3 +153,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -157,1 +157,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -161,1 +161,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -164,1 +164,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -183,1 +183,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -196,1 +196,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -248,2 +248,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -302,1 +302,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -372,1 +372,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -399,1 +399,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -571,1 +571,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -575,1 +575,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t010\/cm01t010.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -69,4 +69,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -79,1 +79,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -89,1 +89,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -94,1 +94,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -104,1 +104,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -114,1 +114,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -118,1 +118,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -123,1 +123,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -163,3 +163,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -167,1 +167,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -171,1 +171,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -174,1 +174,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -193,1 +193,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -206,1 +206,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -258,2 +258,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -312,1 +312,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -402,1 +402,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -430,1 +430,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -602,1 +602,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -606,1 +606,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t011\/cm01t011.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,4 +62,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -72,1 +72,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -82,1 +82,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -87,1 +87,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -97,1 +97,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -111,1 +111,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -116,1 +116,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -154,3 +154,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -162,1 +162,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -184,1 +184,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -197,1 +197,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -249,2 +249,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -303,1 +303,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -373,1 +373,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -401,1 +401,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -573,1 +573,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -577,1 +577,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t012\/cm01t012.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -59,4 +59,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -69,1 +69,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -79,1 +79,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -84,1 +84,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -94,1 +94,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -104,1 +104,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -108,1 +108,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -113,1 +113,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -153,3 +153,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -157,1 +157,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -161,1 +161,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -164,1 +164,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -183,1 +183,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -196,1 +196,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -248,2 +248,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -302,1 +302,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -372,1 +372,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -399,1 +399,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -571,1 +571,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -575,1 +575,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t013\/cm01t013.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -80,1 +80,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -85,1 +85,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -95,1 +95,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -114,1 +114,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -219,3 +219,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -223,1 +223,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -227,1 +227,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -230,1 +230,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -249,1 +249,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -262,1 +262,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -314,2 +314,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -368,1 +368,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -438,1 +438,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -466,1 +466,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -697,1 +697,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -701,1 +701,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t014\/cm01t014.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,4 +62,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -72,1 +72,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -82,1 +82,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -87,1 +87,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -97,1 +97,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -111,1 +111,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -116,1 +116,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -221,3 +221,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -225,1 +225,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -229,1 +229,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -232,1 +232,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -251,1 +251,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -264,1 +264,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -316,2 +316,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -370,1 +370,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -440,1 +440,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -468,1 +468,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -701,1 +701,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -705,1 +705,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t015\/cm01t015.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -80,1 +80,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -85,1 +85,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -95,1 +95,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -114,1 +114,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -219,3 +219,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -223,1 +223,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -227,1 +227,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -230,1 +230,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -249,1 +249,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -262,1 +262,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -314,2 +314,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -368,1 +368,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -438,1 +438,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -466,1 +466,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -695,1 +695,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -699,1 +699,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t016\/cm01t016.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -62,4 +62,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -72,1 +72,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -82,1 +82,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -87,1 +87,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -97,1 +97,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -111,1 +111,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -116,1 +116,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -221,3 +221,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -225,1 +225,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -229,1 +229,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -232,1 +232,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -262,1 +262,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -275,1 +275,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -327,2 +327,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -381,1 +381,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -451,1 +451,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -479,1 +479,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -702,1 +702,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -706,1 +706,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t017\/cm01t017.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -64,4 +64,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -74,1 +74,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -84,1 +84,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -89,1 +89,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -99,1 +99,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -113,1 +113,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -118,1 +118,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -243,3 +243,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -247,1 +247,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -251,1 +251,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -254,1 +254,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -273,1 +273,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -286,1 +286,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -338,2 +338,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -392,1 +392,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -462,1 +462,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -490,1 +490,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -713,1 +713,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -717,1 +717,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t018\/cm01t018.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -59,4 +59,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -69,1 +69,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -79,1 +79,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -84,1 +84,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -94,1 +94,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -104,1 +104,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -108,1 +108,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -113,1 +113,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -153,3 +153,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -157,1 +157,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -161,1 +161,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -164,1 +164,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -183,1 +183,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -196,1 +196,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -248,2 +248,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -302,1 +302,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -372,1 +372,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -400,1 +400,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -572,1 +572,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -576,1 +576,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t019\/cm01t019.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -80,1 +80,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -85,1 +85,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -95,1 +95,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -114,1 +114,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -154,3 +154,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -162,1 +162,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -184,1 +184,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -197,1 +197,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -249,2 +249,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -303,1 +303,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -373,1 +373,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -401,1 +401,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -571,1 +571,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -575,1 +575,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t020\/cm01t020.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -60,4 +60,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -80,1 +80,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -85,1 +85,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -95,1 +95,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -109,1 +109,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -114,1 +114,1 @@\n-            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != NULL))\n+            jni->GetFieldID(klass, \"waitingMonitor\", \"Ljava\/lang\/Object;\")) != nullptr))\n@@ -154,3 +154,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -162,1 +162,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -165,1 +165,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -184,1 +184,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -197,1 +197,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -249,2 +249,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -303,1 +303,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -373,1 +373,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -401,1 +401,1 @@\n-    class_def.class_bytes = NULL;\n+    class_def.class_bytes = nullptr;\n@@ -571,1 +571,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -575,1 +575,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM01\/cm01t021\/cm01t021.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,3 +61,3 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jobject testedObject = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jobject testedObject = nullptr;\n@@ -101,2 +101,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -106,1 +106,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -112,1 +112,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -114,1 +114,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -121,2 +121,2 @@\n-    char *name = NULL;\n-    char *sig = NULL;\n+    char *name = nullptr;\n+    char *sig = nullptr;\n@@ -128,1 +128,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -209,1 +209,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(object_klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(object_klass, &signature, nullptr))) {\n@@ -214,1 +214,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -222,2 +222,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -235,1 +235,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -242,1 +242,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -244,1 +244,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -277,1 +277,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -287,1 +287,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -292,1 +292,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -302,1 +302,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -307,1 +307,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -315,1 +315,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -369,1 +369,1 @@\n-    jobject *monitors = NULL;\n+    jobject *monitors = nullptr;\n@@ -381,1 +381,1 @@\n-    jobject monitor = NULL;\n+    jobject monitor = nullptr;\n@@ -436,1 +436,1 @@\n-    _jni->PopLocalFrame(NULL);\n+    _jni->PopLocalFrame(nullptr);\n@@ -443,2 +443,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -449,1 +449,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewStringUTF(\"abcde\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewStringUTF(\"abcde\")) != nullptr))\n@@ -471,2 +471,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -496,2 +496,2 @@\n-    jobject *res_objects = NULL;\n-    jlong *res_tags = NULL;\n+    jobject *res_objects = nullptr;\n+    jlong *res_tags = nullptr;\n@@ -740,1 +740,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -753,1 +753,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -794,1 +794,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -797,1 +797,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)))\n@@ -800,1 +800,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, nullptr)))\n@@ -803,1 +803,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -806,1 +806,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -809,1 +809,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -812,1 +812,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n@@ -815,1 +815,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, nullptr)))\n@@ -818,1 +818,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr)))\n@@ -821,1 +821,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, nullptr)))\n@@ -824,1 +824,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr)))\n@@ -827,1 +827,1 @@\n-            JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL)))\n+            JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr)))\n@@ -831,1 +831,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM02\/cm02t001\/cm02t001.cpp","additions":50,"deletions":50,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,4 +65,4 @@\n-static jthread thread = NULL;\n-static jclass klass = NULL;\n-static jmethodID method = NULL;\n-static jfieldID field = NULL;\n+static jthread thread = nullptr;\n+static jclass klass = nullptr;\n+static jmethodID method = nullptr;\n+static jfieldID field = nullptr;\n@@ -70,1 +70,1 @@\n-static unsigned char *klass_bytes = NULL;\n+static unsigned char *klass_bytes = nullptr;\n@@ -96,1 +96,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -106,1 +106,1 @@\n-                JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL));\n+                JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr));\n@@ -114,2 +114,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -122,1 +122,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetFieldName(field_klass, field, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetFieldName(field_klass, field, &name, &signature, nullptr))) {\n@@ -127,1 +127,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -129,1 +129,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -138,2 +138,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -143,1 +143,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetFieldName(field_klass, field, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetFieldName(field_klass, field, &name, &signature, nullptr))) {\n@@ -148,1 +148,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -150,1 +150,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -157,2 +157,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -164,1 +164,1 @@\n-            JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL));\n+            JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr));\n@@ -166,1 +166,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -171,1 +171,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -173,1 +173,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -181,2 +181,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -186,1 +186,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -190,1 +190,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -195,1 +195,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -202,2 +202,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -207,1 +207,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -211,1 +211,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -216,1 +216,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -223,2 +223,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -227,1 +227,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -232,1 +232,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -234,1 +234,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -244,2 +244,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -248,1 +248,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -253,1 +253,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -255,1 +255,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -262,2 +262,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -266,1 +266,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -271,1 +271,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -273,1 +273,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -281,2 +281,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -285,1 +285,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -290,1 +290,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -292,1 +292,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -301,1 +301,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -311,1 +311,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -316,1 +316,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -326,1 +326,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -331,1 +331,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -339,1 +339,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -343,1 +343,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = (jclass)jni->NewGlobalRef(klass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = (jclass)jni->NewGlobalRef(klass)) != nullptr))\n@@ -347,1 +347,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"delay\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"delay\", \"()V\")) != nullptr))\n@@ -351,1 +351,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"waitingFlag\", \"Z\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"waitingFlag\", \"Z\")) != nullptr))\n@@ -361,1 +361,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"letItGo\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"letItGo\", \"()V\")) != nullptr))\n@@ -365,1 +365,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"waitingFlag\", \"Z\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"waitingFlag\", \"Z\")) != nullptr))\n@@ -379,1 +379,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -382,1 +382,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -385,1 +385,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr)))\n@@ -486,1 +486,1 @@\n-    if (!NSK_VERIFY(klass_byte_count != 0 && klass_bytes != NULL))\n+    if (!NSK_VERIFY(klass_byte_count != 0 && klass_bytes != nullptr))\n@@ -519,1 +519,1 @@\n-    jvmtiLineNumberEntry *line_number_table = NULL;\n+    jvmtiLineNumberEntry *line_number_table = nullptr;\n@@ -545,1 +545,1 @@\n-    jvmtiLocalVariableEntry *local_variable_table = NULL;\n+    jvmtiLocalVariableEntry *local_variable_table = nullptr;\n@@ -683,3 +683,3 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n-    jobject exception = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n+    jobject exception = nullptr;\n@@ -687,1 +687,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -691,1 +691,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -694,1 +694,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (exception = jni->NewObject(cls, ctor)) != nullptr))\n@@ -851,1 +851,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -864,1 +864,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -907,1 +907,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -910,1 +910,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr)))\n@@ -913,1 +913,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, nullptr)))\n@@ -916,1 +916,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr)))\n@@ -919,1 +919,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr)))\n@@ -923,1 +923,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/capability\/CM03\/cm03t001\/cm03t001.cpp","additions":85,"deletions":85,"binary":false,"changes":170,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-static jthread thread = NULL;\n-static jobject object_M1 = NULL;\n-static jobject object_M2 = NULL;\n+static jthread thread = nullptr;\n+static jobject object_M1 = nullptr;\n+static jobject object_M2 = nullptr;\n@@ -48,1 +48,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -50,2 +50,2 @@\n-    jfieldID field = NULL;\n-    jclass klass = NULL;\n+    jfieldID field = nullptr;\n+    jclass klass = nullptr;\n@@ -60,1 +60,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -65,1 +65,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -75,1 +75,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -79,1 +79,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -90,1 +90,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -94,1 +94,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M1\", FIELD_SIG)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M1\", FIELD_SIG)) != nullptr))\n@@ -97,1 +97,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M1 = jni->GetObjectField(thread, field)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M1 = jni->GetObjectField(thread, field)) != nullptr))\n@@ -101,1 +101,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M2\", FIELD_SIG)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M2\", FIELD_SIG)) != nullptr))\n@@ -104,1 +104,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M2 = jni->GetObjectField(thread, field)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M2 = jni->GetObjectField(thread, field)) != nullptr))\n@@ -124,1 +124,1 @@\n-        if (inf.owner == NULL) {\n+        if (inf.owner == nullptr) {\n@@ -131,1 +131,1 @@\n-                if (tinf.name != NULL) {\n+                if (tinf.name != nullptr) {\n@@ -148,1 +148,1 @@\n-                    if (tinf.name != NULL) {\n+                    if (tinf.name != nullptr) {\n@@ -165,1 +165,1 @@\n-                    if (tinf.name != NULL) {\n+                    if (tinf.name != nullptr) {\n@@ -188,1 +188,1 @@\n-    if (inf.waiters != NULL) {\n+    if (inf.waiters != nullptr) {\n@@ -192,1 +192,1 @@\n-    if (inf.notify_waiters != NULL) {\n+    if (inf.notify_waiters != nullptr) {\n@@ -245,1 +245,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -257,1 +257,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -267,1 +267,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC01\/tc01t001\/tc01t001.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-static jthread thread = NULL;\n-static jobject object_M = NULL;\n+static jthread thread = nullptr;\n+static jobject object_M = nullptr;\n@@ -48,1 +48,1 @@\n-    jmethodID method = NULL;\n+    jmethodID method = nullptr;\n@@ -50,1 +50,1 @@\n-    jvmtiLineNumberEntry* table = NULL;\n+    jvmtiLineNumberEntry* table = nullptr;\n@@ -58,1 +58,1 @@\n-    if (!NSK_VERIFY(method != NULL))\n+    if (!NSK_VERIFY(method != nullptr))\n@@ -67,1 +67,1 @@\n-    if (!NSK_VERIFY(table != NULL))\n+    if (!NSK_VERIFY(table != nullptr))\n@@ -81,1 +81,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -95,1 +95,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -101,1 +101,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -140,1 +140,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -146,1 +146,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -187,1 +187,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -189,2 +189,2 @@\n-    jfieldID field = NULL;\n-    jclass klass = NULL;\n+    jfieldID field = nullptr;\n+    jclass klass = nullptr;\n@@ -199,1 +199,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -204,1 +204,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -214,1 +214,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -218,1 +218,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -228,1 +228,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -234,1 +234,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -238,1 +238,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -242,1 +242,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M\", FIELD_SIG)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M\", FIELD_SIG)) != nullptr))\n@@ -245,1 +245,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M = jni->GetObjectField(thread, field)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M = jni->GetObjectField(thread, field)) != nullptr))\n@@ -249,1 +249,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M = jni->NewGlobalRef(object_M)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M = jni->NewGlobalRef(object_M)) != nullptr))\n@@ -255,1 +255,1 @@\n-                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -261,1 +261,1 @@\n-                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -272,1 +272,1 @@\n-                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -337,1 +337,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -350,1 +350,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -367,1 +367,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC02\/tc02t001\/tc02t001.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static threadDesc *threadList = NULL;\n+static threadDesc *threadList = nullptr;\n@@ -51,2 +51,2 @@\n-    jobject monitor = NULL;\n-    jclass klass = NULL;\n+    jobject monitor = nullptr;\n+    jclass klass = nullptr;\n@@ -63,2 +63,2 @@\n-        if (monitor != NULL) {\n-            if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(monitor)) != NULL))\n+        if (monitor != nullptr) {\n+            if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(monitor)) != nullptr))\n@@ -66,1 +66,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &name, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &name, nullptr)))\n@@ -75,1 +75,1 @@\n-        if (usageInfo.owner == NULL)\n+        if (usageInfo.owner == nullptr)\n@@ -81,1 +81,1 @@\n-        if (usageInfo.waiters != NULL) {\n+        if (usageInfo.waiters != nullptr) {\n@@ -84,1 +84,1 @@\n-        if (usageInfo.notify_waiters != NULL) {\n+        if (usageInfo.notify_waiters != nullptr) {\n@@ -100,2 +100,2 @@\n-    jthread *threads = NULL;\n-    jobject monitor = NULL;\n+    jthread *threads = nullptr;\n+    jobject monitor = nullptr;\n@@ -113,1 +113,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -121,1 +121,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -147,1 +147,1 @@\n-                if (monitor == NULL)\n+                if (monitor == nullptr)\n@@ -151,1 +151,1 @@\n-                if (usageInfo.owner == NULL)\n+                if (usageInfo.owner == nullptr)\n@@ -157,1 +157,1 @@\n-                if (usageInfo.waiters != NULL) {\n+                if (usageInfo.waiters != nullptr) {\n@@ -160,1 +160,1 @@\n-                if (usageInfo.notify_waiters != NULL) {\n+                if (usageInfo.notify_waiters != nullptr) {\n@@ -183,1 +183,1 @@\n-        if (threadList[i].name != NULL) {\n+        if (threadList[i].name != nullptr) {\n@@ -231,1 +231,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -243,1 +243,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -254,1 +254,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t001\/tc03t001.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static threadDesc *threadList = NULL;\n+static threadDesc *threadList = nullptr;\n@@ -51,2 +51,2 @@\n-    jobject monitor = NULL;\n-    jclass klass = NULL;\n+    jobject monitor = nullptr;\n+    jclass klass = nullptr;\n@@ -63,2 +63,2 @@\n-        if (monitor != NULL) {\n-            if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(monitor)) != NULL))\n+        if (monitor != nullptr) {\n+            if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(monitor)) != nullptr))\n@@ -66,1 +66,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &name, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &name, nullptr)))\n@@ -75,1 +75,1 @@\n-        if (usageInfo.owner == NULL)\n+        if (usageInfo.owner == nullptr)\n@@ -81,1 +81,1 @@\n-        if (usageInfo.waiters != NULL) {\n+        if (usageInfo.waiters != nullptr) {\n@@ -84,1 +84,1 @@\n-        if (usageInfo.notify_waiters != NULL) {\n+        if (usageInfo.notify_waiters != nullptr) {\n@@ -100,2 +100,2 @@\n-    jthread *threads = NULL;\n-    jobject monitor = NULL;\n+    jthread *threads = nullptr;\n+    jobject monitor = nullptr;\n@@ -113,1 +113,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -121,1 +121,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -147,1 +147,1 @@\n-                if (monitor == NULL)\n+                if (monitor == nullptr)\n@@ -151,1 +151,1 @@\n-                if (usageInfo.owner == NULL)\n+                if (usageInfo.owner == nullptr)\n@@ -157,1 +157,1 @@\n-                if (usageInfo.waiters != NULL) {\n+                if (usageInfo.waiters != nullptr) {\n@@ -160,1 +160,1 @@\n-                if (usageInfo.notify_waiters != NULL) {\n+                if (usageInfo.notify_waiters != nullptr) {\n@@ -183,1 +183,1 @@\n-        if (threadList[i].name != NULL) {\n+        if (threadList[i].name != nullptr) {\n@@ -231,1 +231,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -243,1 +243,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -254,1 +254,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t002\/tc03t002.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jclass object_M = NULL;\n+static jclass object_M = nullptr;\n@@ -43,1 +43,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -65,1 +65,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -70,1 +70,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -88,1 +88,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -93,1 +93,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -110,1 +110,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -115,1 +115,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -132,1 +132,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -137,1 +137,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -161,1 +161,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M = (jclass)jni->NewGlobalRef(object_M)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M = (jclass)jni->NewGlobalRef(object_M)) != nullptr))\n@@ -169,1 +169,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -174,1 +174,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n@@ -180,1 +180,1 @@\n-                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -186,1 +186,1 @@\n-                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+                JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -196,1 +196,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -201,1 +201,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n@@ -207,1 +207,1 @@\n-                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -213,1 +213,1 @@\n-                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -299,1 +299,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -312,1 +312,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -332,1 +332,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC04\/tc04t001\/tc04t001.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-static jthread thread = NULL;\n-static jobject object_M = NULL;\n+static jthread thread = nullptr;\n+static jobject object_M = nullptr;\n@@ -68,1 +68,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -73,1 +73,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -107,1 +107,1 @@\n-    if (!NSK_VERIFY(thr != NULL)) {\n+    if (!NSK_VERIFY(thr != nullptr)) {\n@@ -112,1 +112,1 @@\n-    if (!NSK_VERIFY(obj != NULL)) {\n+    if (!NSK_VERIFY(obj != nullptr)) {\n@@ -143,1 +143,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -145,2 +145,2 @@\n-    jfieldID field = NULL;\n-    jclass klass = NULL;\n+    jfieldID field = nullptr;\n+    jclass klass = nullptr;\n@@ -155,1 +155,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -160,1 +160,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -170,1 +170,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -174,1 +174,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -184,1 +184,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -190,1 +190,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -194,1 +194,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -198,1 +198,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M\", FIELD_SIG)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"M\", FIELD_SIG)) != nullptr))\n@@ -201,1 +201,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M = jni->GetObjectField(thread, field)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M = jni->GetObjectField(thread, field)) != nullptr))\n@@ -205,1 +205,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (object_M = jni->NewGlobalRef(object_M)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (object_M = jni->NewGlobalRef(object_M)) != nullptr))\n@@ -210,1 +210,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -215,1 +215,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n@@ -225,1 +225,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -230,1 +230,1 @@\n-            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+            jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n@@ -313,1 +313,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -326,1 +326,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -343,1 +343,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC05\/tc05t001\/tc05t001.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -130,1 +130,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -181,1 +181,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -285,1 +285,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, nullptr))) {\n@@ -430,1 +430,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -455,1 +455,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM01\/em01t001\/em01t001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -190,1 +190,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -242,1 +242,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -353,1 +353,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, nullptr))) {\n@@ -497,1 +497,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -522,1 +522,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM01\/em01t002\/em01t002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -51,4 +51,4 @@\n-static jthread mainThread = NULL;\n-static jthread debuggeeThread = NULL;\n-static jobject startObject = NULL;\n-static jobject endObject = NULL;\n+static jthread mainThread = nullptr;\n+static jthread debuggeeThread = nullptr;\n+static jobject startObject = nullptr;\n+static jobject endObject = nullptr;\n@@ -66,1 +66,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -68,1 +68,1 @@\n-    jthread returnValue = NULL;\n+    jthread returnValue = nullptr;\n@@ -73,1 +73,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -75,2 +75,2 @@\n-    if (!NSK_VERIFY(threads != NULL))\n-        return NULL;\n+    if (!NSK_VERIFY(threads != nullptr))\n+        return nullptr;\n@@ -80,1 +80,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -88,1 +88,1 @@\n-        if (info.name != NULL && (strcmp(info.name, threadName) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, threadName) == 0)) {\n@@ -95,1 +95,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -108,1 +108,1 @@\n-    jclass klass = NULL;\n+    jclass klass = nullptr;\n@@ -121,1 +121,1 @@\n-    if (!NSK_VERIFY(mainThread != NULL)) {\n+    if (!NSK_VERIFY(mainThread != nullptr)) {\n@@ -129,1 +129,1 @@\n-    if (!NSK_VERIFY(startObject != NULL))\n+    if (!NSK_VERIFY(startObject != nullptr))\n@@ -136,1 +136,1 @@\n-    if (!NSK_VERIFY(endObject != NULL))\n+    if (!NSK_VERIFY(endObject != nullptr))\n@@ -145,1 +145,1 @@\n-    if (!NSK_VERIFY(debuggeeThread != NULL))\n+    if (!NSK_VERIFY(debuggeeThread != nullptr))\n@@ -161,1 +161,1 @@\n-                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+                JVMTI_DISABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -170,4 +170,4 @@\n-    startObject = NULL;\n-    endObject = NULL;\n-    debuggeeThread = NULL;\n-    mainThread = NULL;\n+    startObject = nullptr;\n+    endObject = nullptr;\n+    debuggeeThread = nullptr;\n+    mainThread = nullptr;\n@@ -399,1 +399,1 @@\n-    if (expectedThread == NULL || expectedObject == NULL)\n+    if (expectedThread == nullptr || expectedObject == nullptr)\n@@ -486,1 +486,1 @@\n-    if (expectedThread == NULL || expectedObject == NULL)\n+    if (expectedThread == nullptr || expectedObject == nullptr)\n@@ -556,1 +556,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -562,1 +562,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -746,1 +746,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -773,1 +773,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t001\/em02t001.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -347,1 +347,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -353,1 +353,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -512,1 +512,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -539,1 +539,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t002\/em02t002.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -283,1 +283,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -349,1 +349,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -381,1 +381,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -387,1 +387,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -551,1 +551,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -578,1 +578,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t003\/em02t003.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -337,1 +337,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -377,1 +377,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -390,1 +390,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -396,1 +396,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -557,1 +557,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -584,1 +584,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t004\/em02t004.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -329,1 +329,1 @@\n-    if (gen_ptr != NULL)\n+    if (gen_ptr != nullptr)\n@@ -369,1 +369,1 @@\n-    if (gen_ptr != NULL)\n+    if (gen_ptr != nullptr)\n@@ -382,1 +382,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -388,1 +388,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -537,1 +537,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -563,1 +563,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t005\/em02t005.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -331,1 +331,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -337,1 +337,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -488,1 +488,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -514,1 +514,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t006\/em02t006.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -203,1 +203,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -233,1 +233,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -360,1 +360,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -366,1 +366,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -524,1 +524,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -549,1 +549,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t007\/em02t007.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -380,1 +380,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -386,1 +386,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -536,1 +536,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -561,1 +561,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t008\/em02t008.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -38,1 +38,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -246,1 +246,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -288,1 +288,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -387,1 +387,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -393,1 +393,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -543,1 +543,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -569,1 +569,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t009\/em02t009.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -39,1 +39,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -343,1 +343,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -349,1 +349,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -519,1 +519,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -545,1 +545,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t010\/em02t010.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -39,1 +39,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -329,1 +329,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -335,1 +335,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -500,1 +500,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -525,1 +525,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t011\/em02t011.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -333,1 +333,1 @@\n-                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -339,1 +339,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -506,1 +506,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -532,1 +532,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t012\/em02t012.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-const void *plist = NULL;\n+const void *plist = nullptr;\n@@ -51,1 +51,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -125,1 +125,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, nullptr))) {\n@@ -215,1 +215,1 @@\n-    if (!NSK_VERIFY(jvmti != NULL))\n+    if (!NSK_VERIFY(jvmti != nullptr))\n@@ -224,1 +224,1 @@\n-    if (!NSK_VERIFY(plist != NULL))\n+    if (!NSK_VERIFY(plist != nullptr))\n@@ -239,1 +239,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM04\/em04t001\/em04t001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -68,2 +68,2 @@\n-    { \"javaMethod\", \"(I)I\", NULL, 0, 0, 0 },\n-    { \"nativeMethod\", \"(I)I\", NULL, 0, 0, 0 }\n+    { \"javaMethod\", \"(I)I\", nullptr, 0, 0, 0 },\n+    { \"nativeMethod\", \"(I)I\", nullptr, 0, 0, 0 }\n@@ -130,1 +130,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, eventsList[i], NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, eventsList[i], nullptr))) {\n@@ -145,4 +145,4 @@\n-    jclass debugeeClass = NULL;\n-    jclass threadClass = NULL;\n-    jfieldID threadFieldID = NULL;\n-    jthread thread = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass threadClass = nullptr;\n+    jfieldID threadFieldID = nullptr;\n+    jthread thread = nullptr;\n@@ -152,1 +152,1 @@\n-        methodsDesc[i].method = (jmethodID)NULL;\n+        methodsDesc[i].method = (jmethodID)nullptr;\n@@ -157,1 +157,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -161,1 +161,1 @@\n-            jni->GetStaticFieldID(debugeeClass, THREAD_FIELD_NAME, THREAD_FIELD_SIG)) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, THREAD_FIELD_NAME, THREAD_FIELD_SIG)) != nullptr))\n@@ -165,1 +165,1 @@\n-            jni->GetStaticObjectField(debugeeClass, threadFieldID)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, threadFieldID)) != nullptr))\n@@ -168,1 +168,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadClass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (threadClass = jni->GetObjectClass(thread)) != nullptr))\n@@ -174,1 +174,1 @@\n-                jni->GetMethodID(threadClass, methodsDesc[i].methodName, methodsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadClass, methodsDesc[i].methodName, methodsDesc[i].methodSig)) != nullptr))\n@@ -181,1 +181,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -223,1 +223,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -317,1 +317,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -337,1 +337,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM05\/em05t001\/em05t001.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -74,2 +74,2 @@\n-    { \"javaMethod\", \"(I)I\", NULL, 0, {}, {} },\n-    { \"nativeMethod\", \"(I)I\", NULL, 0, {}, {} }\n+    { \"javaMethod\", \"(I)I\", nullptr, 0, {}, {} },\n+    { \"nativeMethod\", \"(I)I\", nullptr, 0, {}, {} }\n@@ -169,4 +169,4 @@\n-    jclass debugeeClass = NULL;\n-    jclass threadClass = NULL;\n-    jfieldID threadFieldID = NULL;\n-    jthread thread = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass threadClass = nullptr;\n+    jfieldID threadFieldID = nullptr;\n+    jthread thread = nullptr;\n@@ -177,1 +177,1 @@\n-        methodsDesc[i].method = (jmethodID)NULL;\n+        methodsDesc[i].method = (jmethodID)nullptr;\n@@ -185,1 +185,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -189,1 +189,1 @@\n-            jni->GetStaticFieldID(debugeeClass, THREAD_FIELD_NAME, THREAD_FIELD_SIG)) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, THREAD_FIELD_NAME, THREAD_FIELD_SIG)) != nullptr))\n@@ -193,1 +193,1 @@\n-            jni->GetStaticObjectField(debugeeClass, threadFieldID)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, threadFieldID)) != nullptr))\n@@ -196,1 +196,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadClass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (threadClass = jni->GetObjectClass(thread)) != nullptr))\n@@ -202,1 +202,1 @@\n-                jni->GetMethodID(threadClass, methodsDesc[i].methodName, methodsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadClass, methodsDesc[i].methodName, methodsDesc[i].methodSig)) != nullptr))\n@@ -209,1 +209,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -285,1 +285,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -386,1 +386,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -406,1 +406,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM05\/em05t002\/em05t002.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -39,1 +39,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -63,1 +63,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (classObject = jni_env->GetObjectClass(klass)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (classObject = jni_env->GetObjectClass(klass)) != nullptr)) {\n@@ -69,1 +69,1 @@\n-            jni_env->GetMethodID(classObject, \"getName\", \"()Ljava\/lang\/String;\")) != NULL)) {\n+            jni_env->GetMethodID(classObject, \"getName\", \"()Ljava\/lang\/String;\")) != nullptr)) {\n@@ -78,1 +78,1 @@\n-    if (className != NULL && (strcmp(className, EXPECTED_CLASS_NAME) == 0)) {\n+    if (className != nullptr && (strcmp(className, EXPECTED_CLASS_NAME) == 0)) {\n@@ -117,1 +117,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, nullptr))) {\n@@ -252,1 +252,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -255,1 +255,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM06\/em06t001\/em06t001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-static jvmtiEnv *jvmti = NULL;\n-static jrawMonitorID syncLock = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n+static jrawMonitorID syncLock = nullptr;\n@@ -236,1 +236,1 @@\n-                    jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, NULL))) {\n+                    jvmti->SetEventNotificationMode(JVMTI_ENABLE, event, nullptr))) {\n@@ -358,1 +358,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -376,1 +376,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t001\/em07t001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -40,1 +40,1 @@\n-static jrawMonitorID syncLock = NULL;\n+static jrawMonitorID syncLock = nullptr;\n@@ -46,1 +46,1 @@\n-const void *plist = NULL;\n+const void *plist = nullptr;\n@@ -112,1 +112,1 @@\n-    if (genc != NULL)\n+    if (genc != nullptr)\n@@ -158,1 +158,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, event, nullptr))) {\n@@ -267,1 +267,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -275,1 +275,1 @@\n-    if (!NSK_VERIFY((plist = (const void *)nsk_list_create()) != NULL))\n+    if (!NSK_VERIFY((plist = (const void *)nsk_list_create()) != nullptr))\n@@ -296,1 +296,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t002\/em07t002.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,2 @@\n-static JNIEnv *jni = NULL;\n-static jvmtiEnv* jvmti = NULL;\n+static JNIEnv *jni = nullptr;\n+static jvmtiEnv* jvmti = nullptr;\n@@ -45,1 +45,1 @@\n-    JNIEnv *jni_env = NULL;\n+    JNIEnv *jni_env = nullptr;\n@@ -54,1 +54,1 @@\n-    if (name == NULL) {\n+    if (name == nullptr) {\n@@ -56,1 +56,1 @@\n-        NSK_COMPLAIN0(\"ClassUnload: 'name' input parameter is NULL.\\n\");\n+        NSK_COMPLAIN0(\"ClassUnload: 'name' input parameter is null.\\n\");\n@@ -155,1 +155,1 @@\n-                                                     enable ? (jvmtiExtensionEvent)ClassUnload : NULL))) {\n+                                                     enable ? (jvmtiExtensionEvent)ClassUnload : nullptr))) {\n@@ -160,1 +160,1 @@\n-                    jvmti->SetEventNotificationMode(mode, (jvmtiEvent)extList[i].extension_event_index, NULL))) {\n+                    jvmti->SetEventNotificationMode(mode, (jvmtiEvent)extList[i].extension_event_index, nullptr))) {\n@@ -284,1 +284,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -291,1 +291,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/extension\/EX03\/ex03t001\/ex03t001.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,1 +175,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -188,1 +188,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -190,1 +190,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF01\/gf01t001\/gf01t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static const char* segment = NULL;\n+static const char* segment = nullptr;\n@@ -52,1 +52,1 @@\n-    void* storage = NULL;\n+    void* storage = nullptr;\n@@ -100,1 +100,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_LOAD, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_LOAD, nullptr))) {\n@@ -126,1 +126,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_PREPARE, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_PREPARE, nullptr))) {\n@@ -151,1 +151,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -158,2 +158,2 @@\n-    segment = nsk_jvmti_findOptionStringValue(\"segment\", NULL);\n-    if (!NSK_VERIFY(segment != NULL))\n+    segment = nsk_jvmti_findOptionStringValue(\"segment\", nullptr);\n+    if (!NSK_VERIFY(segment != nullptr))\n@@ -163,1 +163,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -189,1 +189,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr))) {\n@@ -194,1 +194,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF04\/gf04t001\/gf04t001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-    void* storage = NULL;\n+    void* storage = nullptr;\n@@ -83,2 +83,2 @@\n-    if (storage != NULL) {\n-        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT NULL storage in %s:\\n\"\n+    if (storage != nullptr) {\n+        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT null storage in %s:\\n\"\n@@ -137,1 +137,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -152,1 +152,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, nullptr)) {\n@@ -180,1 +180,1 @@\n-    jvmtiEnv* jvmti_1 = NULL;\n+    jvmtiEnv* jvmti_1 = nullptr;\n@@ -202,1 +202,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -229,1 +229,1 @@\n-    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, NULL)) {\n+    if (nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, events, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF06\/gf06t001\/gf06t001.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static const char* setVerboseMode = NULL;\n+static const char* setVerboseMode = nullptr;\n@@ -57,1 +57,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -67,1 +67,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -70,1 +70,1 @@\n-    setVerboseMode = nsk_jvmti_findOptionStringValue(\"setVerboseMode\", NULL);\n+    setVerboseMode = nsk_jvmti_findOptionStringValue(\"setVerboseMode\", nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t001\/gf08t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static const char* setVerboseMode = NULL;\n+static const char* setVerboseMode = nullptr;\n@@ -57,1 +57,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -67,1 +67,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -70,1 +70,1 @@\n-    setVerboseMode = nsk_jvmti_findOptionStringValue(\"setVerboseMode\", NULL);\n+    setVerboseMode = nsk_jvmti_findOptionStringValue(\"setVerboseMode\", nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t002\/gf08t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-static const char* setVerboseMode = NULL;\n+static const char* setVerboseMode = nullptr;\n@@ -57,1 +57,1 @@\n-    jvmtiEnv *jvmti = NULL;\n+    jvmtiEnv *jvmti = nullptr;\n@@ -67,1 +67,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -70,1 +70,1 @@\n-    setVerboseMode = nsk_jvmti_findOptionStringValue(\"setVerboseMode\", NULL);\n+    setVerboseMode = nsk_jvmti_findOptionStringValue(\"setVerboseMode\", nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t003\/gf08t003.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    setRedefinitionFailed = jni->GetStaticMethodID(testClass, \"setRedefinitionFailed\", \"()V\")) != NULL))\n+    setRedefinitionFailed = jni->GetStaticMethodID(testClass, \"setRedefinitionFailed\", \"()V\")) != nullptr))\n@@ -66,1 +66,1 @@\n-    setRedefinitionDone = jni->GetStaticMethodID(testClass, \"setRedefinitionDone\", \"()V\")) != NULL))\n+    setRedefinitionDone = jni->GetStaticMethodID(testClass, \"setRedefinitionDone\", \"()V\")) != nullptr))\n@@ -145,1 +145,1 @@\n-  if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(clas, \"<init>\", \"(Ljava\/lang\/String;)V\")) != NULL)) {\n+  if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(clas, \"<init>\", \"(Ljava\/lang\/String;)V\")) != nullptr)) {\n@@ -152,1 +152,1 @@\n-  err = jvmti->RunAgentThread(testAgentThread, &doRedefineInNativeThread, NULL,\n+  err = jvmti->RunAgentThread(testAgentThread, &doRedefineInNativeThread, nullptr,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS103\/hs103t002\/hs103t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-            if (nsk_jvmti_disableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+            if (nsk_jvmti_disableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n@@ -99,1 +99,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS104\/hs104t001\/hs104t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cla = jni->FindClass(SEARCH_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (cla = jni->FindClass(SEARCH_NAME)) != nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS104\/hs104t002\/hs104t002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -67,1 +67,1 @@\n-            jni_env->GetStaticFieldID(testClass, \"currentStep\", \"I\")) != NULL)) {\n+            jni_env->GetStaticFieldID(testClass, \"currentStep\", \"I\")) != nullptr)) {\n@@ -105,1 +105,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, nullptr))) {\n@@ -168,1 +168,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (mid = jni_env->GetMethodID(klass, METHOD_NAME, METHOD_SIG)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni_env, (mid = jni_env->GetMethodID(klass, METHOD_NAME, METHOD_SIG)) != nullptr))\n@@ -203,1 +203,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -235,1 +235,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &methodName, NULL, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &methodName, nullptr, nullptr))) {\n@@ -247,1 +247,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(declaringClass, &declaringClassName, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(declaringClass, &declaringClassName, nullptr))) {\n@@ -338,1 +338,1 @@\n-        if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -369,1 +369,1 @@\n-        if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -400,1 +400,1 @@\n-    if (bytecode == NULL) {\n+    if (bytecode == nullptr) {\n@@ -433,1 +433,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(thread)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(thread)) != nullptr)) {\n@@ -439,1 +439,1 @@\n-            jni_env->GetMethodID(klass, \"getName\", \"()Ljava\/lang\/String;\")) != NULL)) {\n+            jni_env->GetMethodID(klass, \"getName\", \"()Ljava\/lang\/String;\")) != nullptr)) {\n@@ -465,1 +465,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(object)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(object)) != nullptr)) {\n@@ -481,1 +481,1 @@\n-    if (generic != NULL)\n+    if (generic != nullptr)\n@@ -494,1 +494,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -504,1 +504,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -543,1 +543,1 @@\n-    if (!NSK_JNI_VERIFY(env, (testClass = (jclass) env->NewGlobalRef(cls)) != NULL))\n+    if (!NSK_JNI_VERIFY(env, (testClass = (jclass) env->NewGlobalRef(cls)) != nullptr))\n@@ -546,1 +546,1 @@\n-    if (!NSK_JNI_VERIFY(env, (testedThread = env->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(env, (testedThread = env->NewGlobalRef(thread)) != nullptr))\n@@ -635,1 +635,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -673,1 +673,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t001\/hs201t001.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -69,1 +69,1 @@\n-            jni_env->GetStaticFieldID(testClass, \"currentStep\", \"I\")) != NULL)) {\n+            jni_env->GetStaticFieldID(testClass, \"currentStep\", \"I\")) != nullptr)) {\n@@ -108,1 +108,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, nullptr))) {\n@@ -173,1 +173,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (mid = jni_env->GetMethodID(klass, METHOD_NAME, METHOD_SIG)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni_env, (mid = jni_env->GetMethodID(klass, METHOD_NAME, METHOD_SIG)) != nullptr))\n@@ -192,1 +192,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, nullptr))) {\n@@ -233,1 +233,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &methodName, NULL, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &methodName, nullptr, nullptr))) {\n@@ -245,1 +245,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(declaringClass, &declaringClassName, NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(declaringClass, &declaringClassName, nullptr))) {\n@@ -350,1 +350,1 @@\n-    if (className != NULL && strcmp(EXPECTED_CLASS_SIGN, className) == 0) {\n+    if (className != nullptr && strcmp(EXPECTED_CLASS_SIGN, className) == 0) {\n@@ -355,1 +355,1 @@\n-            className, threadName != NULL ? threadName : \"NULL\");\n+            className, threadName != nullptr ? threadName : \"null\");\n@@ -357,1 +357,1 @@\n-        if (threadName != NULL) {\n+        if (threadName != nullptr) {\n@@ -362,1 +362,1 @@\n-        if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+        if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -393,1 +393,1 @@\n-    if (bytecode == NULL) {\n+    if (bytecode == nullptr) {\n@@ -411,1 +411,1 @@\n-        *newClassBytes = NULL;\n+        *newClassBytes = nullptr;\n@@ -425,1 +425,1 @@\n-    unsigned char *result = NULL;\n+    unsigned char *result = nullptr;\n@@ -428,1 +428,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(thread)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(thread)) != nullptr)) {\n@@ -430,1 +430,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -434,1 +434,1 @@\n-            jni_env->GetMethodID(klass, \"getName\", \"()Ljava\/lang\/String;\")) != NULL)) {\n+            jni_env->GetMethodID(klass, \"getName\", \"()Ljava\/lang\/String;\")) != nullptr)) {\n@@ -436,1 +436,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -445,1 +445,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -464,1 +464,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(object)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(object)) != nullptr)) {\n@@ -466,1 +466,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -469,1 +469,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, nullptr))) {\n@@ -471,1 +471,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -482,1 +482,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -492,1 +492,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -531,1 +531,1 @@\n-    if (!NSK_JNI_VERIFY(env, (testClass = (jclass) env->NewGlobalRef(cls)) != NULL))\n+    if (!NSK_JNI_VERIFY(env, (testClass = (jclass) env->NewGlobalRef(cls)) != nullptr))\n@@ -534,1 +534,1 @@\n-    if (!NSK_JNI_VERIFY(env, (testedThread = env->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(env, (testedThread = env->NewGlobalRef(thread)) != nullptr))\n@@ -627,1 +627,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -660,1 +660,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t002\/hs201t002.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -77,1 +77,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &sig, nullptr))) {\n@@ -110,1 +110,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(decl_cls, &cls_sig, nullptr))) {\n@@ -146,1 +146,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(tMethodID, &name, &sig, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(tMethodID, &name, &sig, nullptr))) {\n@@ -199,1 +199,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr)))\n@@ -301,1 +301,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -327,1 +327,1 @@\n-            eventsList, NULL))\n+            eventsList, nullptr))\n@@ -333,1 +333,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t003\/hs201t003.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        if (method == NULL) {\n+        if (method == nullptr) {\n@@ -76,1 +76,1 @@\n-                    if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT, NULL)) {\n+                    if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT, nullptr)) {\n@@ -119,1 +119,1 @@\n-    if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_SINGLE_STEP, NULL)) {\n+    if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_SINGLE_STEP, nullptr)) {\n@@ -123,1 +123,1 @@\n-            JVMTI_EVENT_BREAKPOINT, NULL);\n+            JVMTI_EVENT_BREAKPOINT, nullptr);\n@@ -175,1 +175,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS202\/hs202t001\/hs202t001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static jvmtiEnv * jvmti = NULL;\n+static jvmtiEnv * jvmti = nullptr;\n@@ -122,1 +122,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_METHOD_EXIT, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_METHOD_EXIT, nullptr)) {\n@@ -163,1 +163,1 @@\n-    if (nsk_jvmti_disableNotification(jvmti,JVMTI_EVENT_METHOD_EXIT, NULL)) {\n+    if (nsk_jvmti_disableNotification(jvmti,JVMTI_EVENT_METHOD_EXIT, nullptr)) {\n@@ -197,1 +197,1 @@\n-    \/\/ No errors possible here: thread is valid, and state is not NULL\n+    \/\/ No errors possible here: thread is valid, and state is not nullptr\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS202\/hs202t002\/hs202t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-            if (method != NULL) {\n+            if (method != nullptr) {\n@@ -169,2 +169,2 @@\n-        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_LOAD, NULL) &&\n-                nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT,NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_LOAD, nullptr) &&\n+                nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT,nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t001\/hs203t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        if (method != NULL) {\n+        if (method != nullptr) {\n@@ -171,2 +171,2 @@\n-        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_LOAD, NULL) &&\n-                nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_LOAD, nullptr) &&\n+                nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t002\/hs203t002.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,2 +61,2 @@\n-    className=NULL;\n-    generic=NULL;\n+    className=nullptr;\n+    generic=nullptr;\n@@ -70,1 +70,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, FIELDNAME, TYPE)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, FIELDNAME, TYPE)) != nullptr)) {\n@@ -96,1 +96,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (clas = jni->FindClass(SEARCH_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (clas = jni->FindClass(SEARCH_NAME)) != nullptr)) {\n@@ -158,2 +158,2 @@\n-        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, NULL) &&\n-                nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_FIELD_ACCESS, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, nullptr) &&\n+                nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_FIELD_ACCESS, nullptr)) {\n@@ -205,1 +205,1 @@\n-                        jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FIELD_ACCESS, NULL))) {\n+                        jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t003\/hs203t003.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    className=NULL;\n+    className=nullptr;\n@@ -48,1 +48,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &className, nullptr))) {\n@@ -53,1 +53,1 @@\n-            if (nsk_jvmti_enableNotification(jvmti_env, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)) {\n+            if (nsk_jvmti_enableNotification(jvmti_env, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)) {\n@@ -86,2 +86,2 @@\n-            className = NULL;\n-            methodName = NULL;\n+            className = nullptr;\n+            methodName = nullptr;\n@@ -89,1 +89,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(threadClass, &className, NULL))) {\n+            if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(threadClass, &className, nullptr))) {\n@@ -95,1 +95,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &methodName, NULL, NULL))) {\n+            if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &methodName, nullptr, nullptr))) {\n@@ -118,1 +118,1 @@\n-            if (className != NULL) {\n+            if (className != nullptr) {\n@@ -124,1 +124,1 @@\n-            if (methodName != NULL) {\n+            if (methodName != nullptr) {\n@@ -174,1 +174,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n@@ -217,1 +217,1 @@\n-                                                        JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL))) {\n+                                                        JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t004\/hs203t004.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-        if (cls == NULL) {\n+        if (cls == nullptr) {\n@@ -65,1 +65,1 @@\n-            if (method == NULL) {\n+            if (method == nullptr) {\n@@ -161,2 +161,2 @@\n-        nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE , NULL);\n-        nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_BREAKPOINT, NULL);\n+        nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE , nullptr);\n+        nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS204\/hs204t002\/hs204t002.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    className = NULL;\n-    generic   = NULL;\n+    className = nullptr;\n+    generic   = nullptr;\n@@ -60,1 +60,1 @@\n-            if (!NSK_JNI_VERIFY(jni, (fieldId = jni->GetStaticFieldID(klass, FIELDNAME, TYPE)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni, (fieldId = jni->GetStaticFieldID(klass, FIELDNAME, TYPE)) != nullptr)) {\n@@ -68,2 +68,2 @@\n-                    nsk_jvmti_enableNotification(jvmti_env, JVMTI_EVENT_FIELD_ACCESS, NULL);\n-                    if (!NSK_JNI_VERIFY(jni, (watchFieldClass = (jclass) jni->NewGlobalRef(klass)) != NULL)) {\n+                    nsk_jvmti_enableNotification(jvmti_env, JVMTI_EVENT_FIELD_ACCESS, nullptr);\n+                    if (!NSK_JNI_VERIFY(jni, (watchFieldClass = (jclass) jni->NewGlobalRef(klass)) != nullptr)) {\n@@ -80,1 +80,1 @@\n-    if (className != NULL) {\n+    if (className != nullptr) {\n@@ -87,1 +87,1 @@\n-    if (generic != NULL) {\n+    if (generic != nullptr) {\n@@ -108,2 +108,2 @@\n-    className = NULL;\n-    generic   = NULL;\n+    className = nullptr;\n+    generic   = nullptr;\n@@ -142,1 +142,1 @@\n-    if (className != NULL) {\n+    if (className != nullptr) {\n@@ -149,1 +149,1 @@\n-    if (generic != NULL) {\n+    if (generic != nullptr) {\n@@ -195,1 +195,1 @@\n-        nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -222,1 +222,1 @@\n-                    if (!NSK_JNI_VERIFY(jni, fieldId != NULL)) {\n+                    if (!NSK_JNI_VERIFY(jni, fieldId != nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS204\/hs204t003\/hs204t003.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        if (klass != NULL) {\n+        if (klass != nullptr) {\n@@ -62,1 +62,1 @@\n-            if (method != NULL) {\n+            if (method != nullptr) {\n@@ -161,2 +161,2 @@\n-          nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_LOAD, NULL);\n-          nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT, NULL);\n+          nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_CLASS_LOAD, nullptr);\n+          nsk_jvmti_enableNotification(jvmti,JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS204\/hs204t004\/hs204t004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-    if (!NSK_JNI_VERIFY(jni, cls != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, cls != nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t001\/hs301t001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(SEARCH_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(SEARCH_NAME)) != nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t002\/hs301t002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-                  JVMTI_EVENT_CLASS_LOAD, NULL);\n+                  JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -95,1 +95,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t003\/hs301t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+            nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -96,1 +96,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t004\/hs301t004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        nsk_jvmti_disableNotification(jvmti, JVMTI_EVENT_CLASS_LOAD, NULL);\n+        nsk_jvmti_disableNotification(jvmti, JVMTI_EVENT_CLASS_LOAD, nullptr);\n@@ -91,1 +91,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS301\/hs301t005\/hs301t005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -91,1 +91,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t001\/hs302t001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-      nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+      nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -97,1 +97,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t002\/hs302t002.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-      nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+      nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -96,1 +96,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t003\/hs302t003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -91,1 +91,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t004\/hs302t004.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -93,1 +93,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t005\/hs302t005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -92,1 +92,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t006\/hs302t006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -89,1 +89,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t007\/hs302t007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+    nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -92,1 +92,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t008\/hs302t008.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -92,1 +92,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t009\/hs302t009.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -91,1 +91,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t010\/hs302t010.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -92,1 +92,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t011\/hs302t011.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, NULL);\n+        nsk_jvmti_disableNotification(jvmti_env, JVMTI_EVENT_CLASS_PREPARE, nullptr);\n@@ -94,1 +94,1 @@\n-        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, NULL)) {\n+        if (nsk_jvmti_enableNotification(jvmti, JVMTI_EVENT_CLASS_PREPARE, nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS302\/hs302t012\/hs302t012.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -49,1 +49,1 @@\n-static jthread testThread = NULL;\n+static jthread testThread = nullptr;\n@@ -52,1 +52,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -55,1 +55,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -61,1 +61,1 @@\n-    jthread curThread = NULL;\n+    jthread curThread = nullptr;\n@@ -68,1 +68,1 @@\n-     testThread = NULL;\n+     testThread = nullptr;\n@@ -72,1 +72,1 @@\n-    jthread curThread = NULL;\n+    jthread curThread = nullptr;\n@@ -332,1 +332,1 @@\n-    if (!NSK_VERIFY(jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1) == JNI_OK && jvmti != NULL))\n+    if (!NSK_VERIFY(jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1) == JNI_OK && jvmti != nullptr))\n@@ -357,1 +357,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -361,1 +361,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI01\/ji01t001\/ji01t001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -46,1 +46,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -118,1 +118,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -186,1 +186,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -193,1 +193,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t001\/ji03t001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -56,2 +56,2 @@\n-    { 0, \"statMeth\", \"(I)D\", NULL, \"statMeth_calls\", NULL, 0, 0 },\n-    { 1, \"voidMeth\", \"()V\", NULL, \"voidMeth_calls\", NULL, 0, 0 }\n+    { 0, \"statMeth\", \"(I)D\", nullptr, \"statMeth_calls\", nullptr, 0, 0 },\n+    { 1, \"voidMeth\", \"()V\", nullptr, \"voidMeth_calls\", nullptr, 0, 0 }\n@@ -61,1 +61,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -64,1 +64,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -130,1 +130,1 @@\n-        if (meth_info[i].mid == NULL) {\n+        if (meth_info[i].mid == nullptr) {\n@@ -273,1 +273,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -312,1 +312,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -319,1 +319,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t002\/ji03t002.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,1 +43,1 @@\n-static jthread testThread = NULL;\n+static jthread testThread = nullptr;\n@@ -50,1 +50,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -53,1 +53,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -61,1 +61,1 @@\n-    jthread curThread = NULL;\n+    jthread curThread = nullptr;\n@@ -68,1 +68,1 @@\n-     testThread = NULL;\n+     testThread = nullptr;\n@@ -72,1 +72,1 @@\n-    jthread curThread = NULL;\n+    jthread curThread = nullptr;\n@@ -293,1 +293,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -360,1 +360,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -367,1 +367,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t003\/ji03t003.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -47,1 +47,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -50,1 +50,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -137,1 +137,1 @@\n-    if (allObj == NULL) {\n+    if (allObj == nullptr) {\n@@ -153,1 +153,1 @@\n-    if (newObj == NULL) {\n+    if (newObj == nullptr) {\n@@ -211,1 +211,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -218,1 +218,1 @@\n-    if (objCls == NULL) {\n+    if (objCls == nullptr) {\n@@ -225,1 +225,1 @@\n-    if (ctorId == NULL) {\n+    if (ctorId == nullptr) {\n@@ -262,1 +262,1 @@\n-    if (options != NULL && strcmp(options, \"-verbose\") == 0)\n+    if (options != nullptr && strcmp(options, \"-verbose\") == 0)\n@@ -269,1 +269,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t004\/ji03t004.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,1 +182,1 @@\n-    if (res != JNI_OK || jvmti[indx] == NULL) {\n+    if (res != JNI_OK || jvmti[indx] == nullptr) {\n@@ -210,1 +210,1 @@\n-    err = jvmti[indx]->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    err = jvmti[indx]->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -230,1 +230,1 @@\n-    if (THREAD_start(agentThr[indx]) == NULL) {\n+    if (THREAD_start(agentThr[indx]) == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI05\/ji05t001\/ji05t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -75,1 +75,1 @@\n-static jniNativeInterface *orig_jni_functions = NULL;\n+static jniNativeInterface *orig_jni_functions = nullptr;\n@@ -78,1 +78,1 @@\n-static jniNativeInterface *redir_jni_functions = NULL;\n+static jniNativeInterface *redir_jni_functions = nullptr;\n@@ -318,2 +318,2 @@\n-    void *ownThr = NULL;\n-    void *redirThr = NULL;\n+    void *ownThr = nullptr;\n+    void *redirThr = nullptr;\n@@ -325,1 +325,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -332,1 +332,1 @@\n-    if (clsObj == NULL) {\n+    if (clsObj == nullptr) {\n@@ -340,1 +340,1 @@\n-    if (THREAD_start(ownThr) == NULL) {\n+    if (THREAD_start(ownThr) == nullptr) {\n@@ -363,1 +363,1 @@\n-        if (THREAD_start(waitThr[i]) == NULL) {\n+        if (THREAD_start(waitThr[i]) == nullptr) {\n@@ -387,1 +387,1 @@\n-    if (THREAD_start(redirThr) == NULL) {\n+    if (THREAD_start(redirThr) == nullptr) {\n@@ -434,1 +434,1 @@\n-    if (THREAD_start(waitThr[MAX_THREADS-1]) == NULL) {\n+    if (THREAD_start(waitThr[MAX_THREADS-1]) == nullptr) {\n@@ -485,1 +485,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI06\/ji06t001\/ji06t001.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -74,1 +74,1 @@\n-    const char* name = NULL;\n+    const char* name = nullptr;\n@@ -100,1 +100,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -103,1 +103,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA01\/ma01t001\/ma01t001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -74,1 +74,1 @@\n-    const char* name = NULL;\n+    const char* name = nullptr;\n@@ -100,1 +100,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -103,1 +103,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA01\/ma01t001\/ma01t001a.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -105,1 +105,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -108,1 +108,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -117,1 +117,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -120,1 +120,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA02\/ma02t001\/ma02t001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -105,1 +105,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -108,1 +108,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -117,1 +117,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -120,1 +120,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA02\/ma02t001\/ma02t001a.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -116,1 +116,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -119,1 +119,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -129,1 +129,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -132,1 +132,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -135,1 +135,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA03\/ma03t001\/ma03t001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -117,1 +117,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -120,1 +120,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA03\/ma03t001\/ma03t001a.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jobject testedObject = NULL;\n+static jobject testedObject = nullptr;\n@@ -50,2 +50,2 @@\n-    jclass cls = NULL;\n-    jfieldID fid = NULL;\n+    jclass cls = nullptr;\n+    jfieldID fid = nullptr;\n@@ -56,1 +56,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -61,1 +61,1 @@\n-            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -64,1 +64,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != nullptr))\n@@ -67,1 +67,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr))\n@@ -203,1 +203,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -215,1 +215,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -224,1 +224,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t001\/ma04t001.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jobject testedObject = NULL;\n+static jobject testedObject = nullptr;\n@@ -50,2 +50,2 @@\n-    jclass cls = NULL;\n-    jfieldID fid = NULL;\n+    jclass cls = nullptr;\n+    jfieldID fid = nullptr;\n@@ -56,1 +56,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -61,1 +61,1 @@\n-            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -64,1 +64,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != nullptr))\n@@ -67,1 +67,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr))\n@@ -203,1 +203,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -215,1 +215,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -224,1 +224,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t001\/ma04t001a.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,3 +42,3 @@\n-static jobject testedObject = NULL;\n-static jobject testedInstance = NULL;\n-static jclass testedClass = NULL;\n+static jobject testedObject = nullptr;\n+static jobject testedInstance = nullptr;\n+static jclass testedClass = nullptr;\n@@ -79,1 +79,1 @@\n-    jfieldID fid = NULL;\n+    jfieldID fid = nullptr;\n@@ -84,1 +84,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -87,1 +87,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -92,1 +92,1 @@\n-            jni->GetStaticFieldID(testedClass, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(testedClass, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -95,1 +95,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(testedClass, fid)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(testedClass, fid)) != nullptr))\n@@ -101,1 +101,1 @@\n-            jni->GetStaticFieldID(testedClass, INSTANCE_NAME, INSTANCE_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(testedClass, INSTANCE_NAME, INSTANCE_SIGNATURE)) != nullptr))\n@@ -105,1 +105,1 @@\n-            jni->GetStaticObjectField(testedClass, fid)) != NULL))\n+            jni->GetStaticObjectField(testedClass, fid)) != nullptr))\n@@ -308,1 +308,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -320,1 +320,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -330,1 +330,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -337,1 +337,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t002\/ma04t002.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,3 +42,3 @@\n-static jobject testedObject = NULL;\n-static jobject testedInstance = NULL;\n-static jclass testedClass = NULL;\n+static jobject testedObject = nullptr;\n+static jobject testedInstance = nullptr;\n+static jclass testedClass = nullptr;\n@@ -79,1 +79,1 @@\n-    jfieldID fid = NULL;\n+    jfieldID fid = nullptr;\n@@ -84,1 +84,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -87,1 +87,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -92,1 +92,1 @@\n-            jni->GetStaticFieldID(testedClass, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(testedClass, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -95,1 +95,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(testedClass, fid)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(testedClass, fid)) != nullptr))\n@@ -101,1 +101,1 @@\n-            jni->GetStaticFieldID(testedClass, INSTANCE_NAME, INSTANCE_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(testedClass, INSTANCE_NAME, INSTANCE_SIGNATURE)) != nullptr))\n@@ -105,1 +105,1 @@\n-            jni->GetStaticObjectField(testedClass, fid)) != NULL))\n+            jni->GetStaticObjectField(testedClass, fid)) != nullptr))\n@@ -306,1 +306,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -318,1 +318,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -328,1 +328,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -335,1 +335,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t002\/ma04t002a.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jobject testedObject = NULL;\n+static jobject testedObject = nullptr;\n@@ -85,2 +85,2 @@\n-    jclass cls = NULL;\n-    jfieldID fid = NULL;\n+    jclass cls = nullptr;\n+    jfieldID fid = nullptr;\n@@ -91,1 +91,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -96,1 +96,1 @@\n-            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -99,1 +99,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != nullptr))\n@@ -102,1 +102,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr))\n@@ -149,1 +149,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -171,1 +171,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -180,1 +180,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr)))\n@@ -183,1 +183,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t003\/ma04t003.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static jobject testedObject = NULL;\n+static jobject testedObject = nullptr;\n@@ -85,2 +85,2 @@\n-    jclass cls = NULL;\n-    jfieldID fid = NULL;\n+    jclass cls = nullptr;\n+    jfieldID fid = nullptr;\n@@ -91,1 +91,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -96,1 +96,1 @@\n-            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != NULL))\n+            jni->GetStaticFieldID(cls, FIELD_NAME, FIELD_SIGNATURE)) != nullptr))\n@@ -99,1 +99,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->GetStaticObjectField(cls, fid)) != nullptr))\n@@ -102,1 +102,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedObject = jni->NewGlobalRef(testedObject)) != nullptr))\n@@ -149,1 +149,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -161,1 +161,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -171,1 +171,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -180,1 +180,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr)))\n@@ -183,1 +183,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA04\/ma04t003\/ma04t003a.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static jthread thread = NULL;\n-static jmethodID method = NULL;\n+static jthread thread = nullptr;\n+static jmethodID method = nullptr;\n@@ -53,2 +53,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -57,1 +57,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -63,1 +63,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -65,1 +65,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -96,2 +96,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -100,1 +100,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -107,1 +107,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -109,1 +109,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -118,2 +118,2 @@\n-    jthread *threads = NULL;\n-    jclass klass = NULL;\n+    jthread *threads = nullptr;\n+    jclass klass = nullptr;\n@@ -129,1 +129,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -134,1 +134,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -144,1 +144,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -148,1 +148,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -158,1 +158,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -163,1 +163,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -167,1 +167,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -171,1 +171,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"checkPoint\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"checkPoint\", \"()V\")) != nullptr))\n@@ -178,1 +178,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr)))\n@@ -180,1 +180,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr)))\n@@ -215,1 +215,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, nullptr)))\n@@ -240,1 +240,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -252,1 +252,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -261,1 +261,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA05\/ma05t001\/ma05t001.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static jthread thread = NULL;\n-static jmethodID midCheckPoint = NULL;\n+static jthread thread = nullptr;\n+static jmethodID midCheckPoint = nullptr;\n@@ -53,2 +53,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -60,1 +60,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -67,1 +67,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -69,1 +69,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -85,1 +85,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_FRAME_POP, nullptr)))\n@@ -102,2 +102,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -106,1 +106,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -113,1 +113,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -115,1 +115,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -145,2 +145,2 @@\n-    jthread *threads = NULL;\n-    jclass klass = NULL;\n+    jthread *threads = nullptr;\n+    jclass klass = nullptr;\n@@ -156,1 +156,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -161,1 +161,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -171,1 +171,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -175,1 +175,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -185,1 +185,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -190,1 +190,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -194,1 +194,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -198,1 +198,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (midCheckPoint = jni->GetMethodID(klass, \"checkPoint\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (midCheckPoint = jni->GetMethodID(klass, \"checkPoint\", \"()V\")) != nullptr))\n@@ -202,1 +202,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr)))\n@@ -204,1 +204,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr)))\n@@ -236,1 +236,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr)))\n@@ -258,1 +258,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -270,1 +270,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -279,1 +279,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA05\/ma05t001\/ma05t001a.cpp","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jclass testedClass = NULL;\n+static jclass testedClass = nullptr;\n@@ -43,1 +43,1 @@\n-static unsigned char *klass_bytes = NULL;\n+static unsigned char *klass_bytes = nullptr;\n@@ -62,1 +62,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -66,1 +66,1 @@\n-        if (class_being_redefined == NULL) {\n+        if (class_being_redefined == nullptr) {\n@@ -96,1 +96,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -99,1 +99,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -110,1 +110,1 @@\n-    if (!NSK_VERIFY(klass_byte_count != 0 && klass_bytes != NULL))\n+    if (!NSK_VERIFY(klass_byte_count != 0 && klass_bytes != nullptr))\n@@ -181,1 +181,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -205,1 +205,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -217,1 +217,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -225,1 +225,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -233,1 +233,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA06\/ma06t001\/ma06t001.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jclass testedClass = NULL;\n+static jclass testedClass = nullptr;\n@@ -43,1 +43,1 @@\n-static unsigned char *klass_bytes = NULL;\n+static unsigned char *klass_bytes = nullptr;\n@@ -62,1 +62,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -66,1 +66,1 @@\n-        if (class_being_redefined == NULL) {\n+        if (class_being_redefined == nullptr) {\n@@ -96,1 +96,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = jni->FindClass(CLASS_NAME)) != nullptr))\n@@ -99,1 +99,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (testedClass = (jclass) jni->NewGlobalRef(testedClass)) != nullptr))\n@@ -110,1 +110,1 @@\n-    if (!NSK_VERIFY(klass_byte_count != 0 && klass_bytes != NULL))\n+    if (!NSK_VERIFY(klass_byte_count != 0 && klass_bytes != nullptr))\n@@ -181,1 +181,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -205,1 +205,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -217,1 +217,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -225,1 +225,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -233,1 +233,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA06\/ma06t001\/ma06t001a.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static unsigned char *klass_bytes = NULL;\n+static unsigned char *klass_bytes = nullptr;\n@@ -65,1 +65,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -69,1 +69,1 @@\n-        if (!NSK_VERIFY(class_being_redefined == NULL)) {\n+        if (!NSK_VERIFY(class_being_redefined == nullptr)) {\n@@ -154,1 +154,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -165,1 +165,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -168,1 +168,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -176,1 +176,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA07\/ma07t001\/ma07t001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-static unsigned char *klass_bytes = NULL;\n+static unsigned char *klass_bytes = nullptr;\n@@ -65,1 +65,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -69,1 +69,1 @@\n-        if (!NSK_VERIFY(class_being_redefined == NULL)) {\n+        if (!NSK_VERIFY(class_being_redefined == nullptr)) {\n@@ -155,1 +155,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -166,1 +166,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -169,1 +169,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -177,1 +177,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA07\/ma07t001\/ma07t001a.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-static jobject threadDeath = NULL;\n-static jthread threadForStop = NULL;\n-static jthread threadForInterrupt = NULL;\n+static jobject threadDeath = nullptr;\n+static jthread threadForStop = nullptr;\n+static jthread threadForInterrupt = nullptr;\n@@ -54,1 +54,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -56,2 +56,2 @@\n-    jclass cls = NULL;\n-    jmethodID ctor = NULL;\n+    jclass cls = nullptr;\n+    jmethodID ctor = nullptr;\n@@ -66,1 +66,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -71,1 +71,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -81,1 +81,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -94,1 +94,1 @@\n-    if (threadForStop == NULL) {\n+    if (threadForStop == nullptr) {\n@@ -99,1 +99,1 @@\n-    if (threadForInterrupt == NULL) {\n+    if (threadForInterrupt == nullptr) {\n@@ -106,1 +106,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (cls = jni->FindClass(THREAD_DEATH_CLASS_NAME)) != nullptr))\n@@ -110,1 +110,1 @@\n-            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != NULL))\n+            jni->GetMethodID(cls, THREAD_DEATH_CTOR_NAME, THREAD_DEATH_CTOR_SIGNATURE)) != nullptr))\n@@ -113,1 +113,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadDeath = jni->NewObject(cls, ctor)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (threadDeath = jni->NewObject(cls, ctor)) != nullptr))\n@@ -134,1 +134,1 @@\n-    if (!NSK_VERIFY(threadForStop != NULL)) {\n+    if (!NSK_VERIFY(threadForStop != nullptr)) {\n@@ -142,1 +142,1 @@\n-    if (!NSK_VERIFY(threadForInterrupt != NULL)) {\n+    if (!NSK_VERIFY(threadForInterrupt != nullptr)) {\n@@ -174,1 +174,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -186,1 +186,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -189,1 +189,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA08\/ma08t001\/ma08t001.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static jthread threadForStop = NULL;\n-static jthread threadForInterrupt = NULL;\n+static jthread threadForStop = nullptr;\n+static jthread threadForInterrupt = nullptr;\n@@ -56,2 +56,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -59,1 +59,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -64,1 +64,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -69,1 +69,1 @@\n-    if (!NSK_VERIFY(signature != NULL)) {\n+    if (!NSK_VERIFY(signature != nullptr)) {\n@@ -103,1 +103,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -113,1 +113,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -118,1 +118,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -128,1 +128,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -141,1 +141,1 @@\n-    if (threadForStop == NULL) {\n+    if (threadForStop == nullptr) {\n@@ -146,1 +146,1 @@\n-    if (threadForInterrupt == NULL) {\n+    if (threadForInterrupt == nullptr) {\n@@ -151,1 +151,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadForStop = jni->NewGlobalRef(threadForStop)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (threadForStop = jni->NewGlobalRef(threadForStop)) != nullptr))\n@@ -154,1 +154,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadForInterrupt = jni->NewGlobalRef(threadForInterrupt)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (threadForInterrupt = jni->NewGlobalRef(threadForInterrupt)) != nullptr))\n@@ -158,1 +158,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -194,1 +194,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -219,1 +219,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -231,1 +231,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -234,1 +234,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA08\/ma08t001\/ma08t001a.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    if (info->thread_group != NULL) {\n+    if (info->thread_group != nullptr) {\n@@ -54,1 +54,1 @@\n-    if (info->context_class_loader != NULL) {\n+    if (info->context_class_loader != nullptr) {\n@@ -83,2 +83,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -92,1 +92,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -96,1 +96,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -101,1 +101,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -108,2 +108,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -117,1 +117,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -121,1 +121,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -126,1 +126,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -139,1 +139,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -141,1 +141,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr)))\n@@ -150,1 +150,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -152,1 +152,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr)))\n@@ -184,1 +184,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -196,1 +196,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -199,1 +199,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t001\/ma10t001.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -57,1 +57,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -61,1 +61,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -66,1 +66,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -73,2 +73,2 @@\n-    jclass klass = NULL;\n-    char *signature = NULL;\n+    jclass klass = nullptr;\n+    char *signature = nullptr;\n@@ -78,1 +78,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -82,1 +82,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -87,1 +87,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -135,1 +135,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -147,1 +147,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -150,1 +150,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t001\/ma10t001a.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jthread thread = NULL;\n+static jthread thread = nullptr;\n@@ -53,2 +53,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -57,1 +57,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -62,1 +62,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -64,1 +64,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -73,1 +73,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -83,1 +83,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -88,1 +88,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -98,1 +98,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -103,1 +103,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -162,1 +162,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -174,1 +174,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -177,1 +177,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t002\/ma10t002.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -54,1 +54,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -59,1 +59,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -61,1 +61,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -104,1 +104,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -116,1 +116,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -119,1 +119,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t002\/ma10t002a.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jthread thread = NULL;\n+static jthread thread = nullptr;\n@@ -54,2 +54,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -58,1 +58,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -63,1 +63,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -65,1 +65,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -74,1 +74,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -84,1 +84,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -89,1 +89,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -99,1 +99,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -104,1 +104,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -163,1 +163,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -175,1 +175,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -178,1 +178,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t003\/ma10t003.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -55,1 +55,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -60,1 +60,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -62,1 +62,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -105,1 +105,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -117,1 +117,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -120,1 +120,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t003\/ma10t003a.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-static jthread thread = NULL;\n+static jthread thread = nullptr;\n@@ -53,2 +53,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -59,1 +59,1 @@\n-    NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL));\n+    NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr));\n@@ -61,1 +61,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -67,1 +67,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -69,1 +69,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -78,1 +78,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -88,1 +88,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -93,1 +93,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -103,1 +103,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -108,1 +108,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr))\n@@ -167,1 +167,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -179,1 +179,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -182,1 +182,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t004\/ma10t004.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -56,1 +56,1 @@\n-    NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL));\n+    NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr));\n@@ -58,1 +58,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -64,1 +64,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -66,1 +66,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -109,1 +109,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -121,1 +121,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -124,1 +124,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t004\/ma10t004a.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(object_klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(object_klass, &signature, nullptr))) {\n@@ -60,1 +60,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -97,1 +97,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -112,1 +112,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -126,1 +126,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t005\/ma10t005.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(object_klass, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(object_klass, &signature, nullptr))) {\n@@ -60,1 +60,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -97,1 +97,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -109,1 +109,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -112,1 +112,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t005\/ma10t005a.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -57,1 +57,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -63,1 +63,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -65,1 +65,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -72,2 +72,2 @@\n-    char *name = NULL;\n-    char *sig = NULL;\n+    char *name = nullptr;\n+    char *sig = nullptr;\n@@ -79,1 +79,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -130,1 +130,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -142,1 +142,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -145,1 +145,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -160,1 +160,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)))\n@@ -162,1 +162,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t006\/ma10t006.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -57,1 +57,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -63,1 +63,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -65,1 +65,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -72,2 +72,2 @@\n-    char *name = NULL;\n-    char *sig = NULL;\n+    char *name = nullptr;\n+    char *sig = nullptr;\n@@ -80,1 +80,1 @@\n-    err = jvmti_env->GetMethodName(method, &name, &sig, NULL);\n+    err = jvmti_env->GetMethodName(method, &name, &sig, nullptr);\n@@ -127,1 +127,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -139,1 +139,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -142,1 +142,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t006\/ma10t006a.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -110,1 +110,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -113,1 +113,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -128,1 +128,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, nullptr)))\n@@ -130,1 +130,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t007\/ma10t007.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -110,1 +110,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -113,1 +113,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t007\/ma10t007a.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -180,1 +180,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -183,1 +183,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -201,1 +201,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -203,1 +203,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -205,1 +205,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -207,1 +207,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t008\/ma10t008.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -180,1 +180,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -183,1 +183,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t008\/ma10t008a.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -117,3 +117,3 @@\n-    jclass debugeeClass = NULL;\n-    jfieldID threadsFieldID = NULL;\n-    jobjectArray threadsArray = NULL;\n+    jclass debugeeClass = nullptr;\n+    jfieldID threadsFieldID = nullptr;\n+    jobjectArray threadsArray = nullptr;\n@@ -124,1 +124,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -129,1 +129,1 @@\n-            jni->GetStaticFieldID(debugeeClass, THREADS_FIELD_NAME, THREADS_FIELD_SIG)) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, THREADS_FIELD_NAME, THREADS_FIELD_SIG)) != nullptr))\n@@ -134,1 +134,1 @@\n-            jni->GetStaticObjectField(debugeeClass, threadsFieldID)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, threadsFieldID)) != nullptr))\n@@ -145,1 +145,1 @@\n-                jni->GetObjectArrayElement(threadsArray, i)) != NULL))\n+                jni->GetObjectArrayElement(threadsArray, i)) != nullptr))\n@@ -152,1 +152,1 @@\n-                jni->NewGlobalRef(threadsList[i])) != NULL))\n+                jni->NewGlobalRef(threadsList[i])) != nullptr))\n@@ -263,1 +263,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -267,1 +267,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t001\/sp01t001.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -145,1 +145,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -154,1 +154,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -161,1 +161,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -168,1 +168,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -176,1 +176,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -196,1 +196,1 @@\n-        if (threadsList[i] == NULL) {\n+        if (threadsList[i] == nullptr) {\n@@ -208,1 +208,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (threadsList[i] = jni->NewGlobalRef(threadsList[i])) != NULL))\n+        if (!NSK_JNI_VERIFY(jni, (threadsList[i] = jni->NewGlobalRef(threadsList[i])) != nullptr))\n@@ -437,1 +437,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -450,1 +450,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t002\/sp01t002.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -145,1 +145,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -154,1 +154,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -161,1 +161,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -168,1 +168,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -176,1 +176,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -196,1 +196,1 @@\n-        if (threadsList[i] == NULL) {\n+        if (threadsList[i] == nullptr) {\n@@ -208,1 +208,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (threadsList[i] = jni->NewGlobalRef(threadsList[i])) != NULL))\n+        if (!NSK_JNI_VERIFY(jni, (threadsList[i] = jni->NewGlobalRef(threadsList[i])) != nullptr))\n@@ -448,1 +448,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -461,1 +461,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t003\/sp01t003.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -53,6 +53,6 @@\n-    { \"threadRunning\", 2, NULL },\n-    { \"threadEntering\", 2, NULL },\n-    { \"threadWaiting\", 2, NULL },\n-    { \"threadSleeping\", 2, NULL },\n-    { \"threadRunningInterrupted\", 2, NULL },\n-    { \"threadRunningNative\", 2, NULL }\n+    { \"threadRunning\", 2, nullptr },\n+    { \"threadEntering\", 2, nullptr },\n+    { \"threadWaiting\", 2, nullptr },\n+    { \"threadSleeping\", 2, nullptr },\n+    { \"threadRunningInterrupted\", 2, nullptr },\n+    { \"threadRunningNative\", 2, nullptr }\n@@ -126,1 +126,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -135,1 +135,1 @@\n-        threadsDesc[i].thread = (jthread)NULL;\n+        threadsDesc[i].thread = (jthread)nullptr;\n@@ -142,1 +142,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -149,1 +149,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -157,1 +157,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -177,1 +177,1 @@\n-        if (threadsDesc[i].thread == NULL) {\n+        if (threadsDesc[i].thread == nullptr) {\n@@ -190,1 +190,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].thread)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].thread)) != nullptr))\n@@ -359,1 +359,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -372,1 +372,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t001\/sp02t001.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,6 +57,6 @@\n-    { \"threadRunning\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadEntering\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadWaiting\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadSleeping\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadRunningInterrupted\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadRunningNative\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION }\n+    { \"threadRunning\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadEntering\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadWaiting\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadSleeping\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadRunningInterrupted\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadRunningNative\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION }\n@@ -146,1 +146,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -155,2 +155,2 @@\n-        threadsDesc[i].thread = (jthread)NULL;\n-        threadsDesc[i].method = (jmethodID)NULL;\n+        threadsDesc[i].thread = (jthread)nullptr;\n+        threadsDesc[i].method = (jmethodID)nullptr;\n@@ -164,1 +164,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -171,1 +171,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -179,1 +179,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -199,1 +199,1 @@\n-        if (threadsDesc[i].thread == NULL) {\n+        if (threadsDesc[i].thread == nullptr) {\n@@ -214,1 +214,1 @@\n-                jni->GetObjectClass(threadsDesc[i].thread)) != NULL))\n+                jni->GetObjectClass(threadsDesc[i].thread)) != nullptr))\n@@ -218,1 +218,1 @@\n-                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != nullptr))\n@@ -230,1 +230,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].thread)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].thread)) != nullptr))\n@@ -233,1 +233,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].cls)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].cls)) != nullptr))\n@@ -316,2 +316,2 @@\n-            if (frameStack[j].method == NULL) {\n-                NSK_COMPLAIN3(\"NULL methodID in stack for %s thread #%d (%s)\\n\",\n+            if (frameStack[j].method == nullptr) {\n+                NSK_COMPLAIN3(\"null methodID in stack for %s thread #%d (%s)\\n\",\n@@ -422,1 +422,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -435,1 +435,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t002\/sp02t002.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,6 +57,6 @@\n-    { \"threadRunning\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadEntering\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadWaiting\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadSleeping\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadRunningInterrupted\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION },\n-    { \"threadRunningNative\", \"testedMethod\", \"()V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION }\n+    { \"threadRunning\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadEntering\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadWaiting\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadSleeping\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadRunningInterrupted\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION },\n+    { \"threadRunningNative\", \"testedMethod\", \"()V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION }\n@@ -147,1 +147,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -156,2 +156,2 @@\n-        threadsDesc[i].thread = (jthread)NULL;\n-        threadsDesc[i].method = (jmethodID)NULL;\n+        threadsDesc[i].thread = (jthread)nullptr;\n+        threadsDesc[i].method = (jmethodID)nullptr;\n@@ -165,1 +165,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -172,1 +172,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -180,1 +180,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -200,1 +200,1 @@\n-        if (threadsDesc[i].thread == NULL) {\n+        if (threadsDesc[i].thread == nullptr) {\n@@ -215,1 +215,1 @@\n-                jni->GetObjectClass(threadsDesc[i].thread)) != NULL))\n+                jni->GetObjectClass(threadsDesc[i].thread)) != nullptr))\n@@ -219,1 +219,1 @@\n-                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != nullptr))\n@@ -231,1 +231,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].thread)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].thread)) != nullptr))\n@@ -234,1 +234,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].cls)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].cls)) != nullptr))\n@@ -300,1 +300,1 @@\n-            jmethodID qMethod = (jmethodID)NULL;\n+            jmethodID qMethod = (jmethodID)nullptr;\n@@ -435,1 +435,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -447,1 +447,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t003\/sp02t003.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -149,1 +149,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -159,1 +159,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -166,1 +166,1 @@\n-            threadsList[i][j] = NULL;\n+            threadsList[i][j] = nullptr;\n@@ -174,1 +174,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -181,1 +181,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -189,1 +189,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -225,1 +225,1 @@\n-                    jni->NewGlobalRef(threadsList[i][j])) != NULL))\n+                    jni->NewGlobalRef(threadsList[i][j])) != nullptr))\n@@ -238,1 +238,1 @@\n-    jvmtiError* results = NULL;\n+    jvmtiError* results = nullptr;\n@@ -371,1 +371,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -446,1 +446,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -459,1 +459,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP03\/sp03t001\/sp03t001.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -152,1 +152,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -162,1 +162,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -169,1 +169,1 @@\n-            threadsList[i][j] = NULL;\n+            threadsList[i][j] = nullptr;\n@@ -177,1 +177,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -184,1 +184,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -192,1 +192,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -228,1 +228,1 @@\n-                    jni->NewGlobalRef(threadsList[i][j])) != NULL))\n+                    jni->NewGlobalRef(threadsList[i][j])) != nullptr))\n@@ -241,1 +241,1 @@\n-    jvmtiError* results = NULL;\n+    jvmtiError* results = nullptr;\n@@ -374,1 +374,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -449,1 +449,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -462,1 +462,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP03\/sp03t002\/sp03t002.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -149,1 +149,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -159,1 +159,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -166,1 +166,1 @@\n-            threadsList[i][j] = NULL;\n+            threadsList[i][j] = nullptr;\n@@ -174,1 +174,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -181,1 +181,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -189,1 +189,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -225,1 +225,1 @@\n-                    jni->NewGlobalRef(threadsList[i][j])) != NULL))\n+                    jni->NewGlobalRef(threadsList[i][j])) != nullptr))\n@@ -238,1 +238,1 @@\n-    jvmtiError* results = NULL;\n+    jvmtiError* results = nullptr;\n@@ -371,1 +371,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -446,1 +446,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -459,1 +459,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP04\/sp04t001\/sp04t001.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -149,1 +149,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -159,1 +159,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -166,1 +166,1 @@\n-            threadsList[i][j] = NULL;\n+            threadsList[i][j] = nullptr;\n@@ -174,1 +174,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -181,1 +181,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -189,1 +189,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -225,1 +225,1 @@\n-                    jni->NewGlobalRef(threadsList[i][j])) != NULL))\n+                    jni->NewGlobalRef(threadsList[i][j])) != nullptr))\n@@ -238,1 +238,1 @@\n-    jvmtiError* results = NULL;\n+    jvmtiError* results = nullptr;\n@@ -371,1 +371,1 @@\n-        threadsList[i] = NULL;\n+        threadsList[i] = nullptr;\n@@ -446,1 +446,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -459,1 +459,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP04\/sp04t002\/sp04t002.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -146,1 +146,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, eventsList[i], NULL))) {\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(enable, eventsList[i], nullptr))) {\n@@ -162,3 +162,3 @@\n-    jclass debugeeClass = NULL;\n-    jfieldID threadsFieldID = NULL;\n-    jobjectArray threadsArray = NULL;\n+    jclass debugeeClass = nullptr;\n+    jfieldID threadsFieldID = nullptr;\n+    jobjectArray threadsArray = nullptr;\n@@ -169,1 +169,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -174,1 +174,1 @@\n-            jni->GetStaticFieldID(debugeeClass, THREADS_FIELD_NAME, THREADS_FIELD_SIG)) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, THREADS_FIELD_NAME, THREADS_FIELD_SIG)) != nullptr))\n@@ -179,1 +179,1 @@\n-            jni->GetStaticObjectField(debugeeClass, threadsFieldID)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, threadsFieldID)) != nullptr))\n@@ -190,1 +190,1 @@\n-                jni->GetObjectArrayElement(threadsArray, i)) != NULL))\n+                jni->GetObjectArrayElement(threadsArray, i)) != nullptr))\n@@ -197,1 +197,1 @@\n-                jni->NewGlobalRef(threadsList[i])) != NULL))\n+                jni->NewGlobalRef(threadsList[i])) != nullptr))\n@@ -282,2 +282,2 @@\n-    \/* check if thread is not NULL *\/\n-    if (!NSK_VERIFY(thread != NULL)) {\n+    \/* check if thread is not nullptr *\/\n+    if (!NSK_VERIFY(thread != nullptr)) {\n@@ -309,2 +309,2 @@\n-    \/* check if thread is not NULL *\/\n-    if (!NSK_VERIFY(thread != NULL)) {\n+    \/* check if thread is not nullptr *\/\n+    if (!NSK_VERIFY(thread != nullptr)) {\n@@ -391,1 +391,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -405,1 +405,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP05\/sp05t002\/sp05t002.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -104,1 +104,1 @@\n-                    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL))) {\n+                    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr))) {\n@@ -125,1 +125,1 @@\n-                    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, NULL))) {\n+                    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_START, nullptr))) {\n@@ -159,1 +159,1 @@\n-                    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, NULL))) {\n+                    jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, nullptr))) {\n@@ -180,1 +180,1 @@\n-                    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_END, NULL))) {\n+                    jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_THREAD_END, nullptr))) {\n@@ -270,3 +270,3 @@\n-    jclass debugeeClass = NULL;\n-    jfieldID threadsFieldID = NULL;\n-    jobjectArray threadsArray = NULL;\n+    jclass debugeeClass = nullptr;\n+    jfieldID threadsFieldID = nullptr;\n+    jobjectArray threadsArray = nullptr;\n@@ -277,1 +277,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr))\n@@ -282,1 +282,1 @@\n-            jni->GetStaticFieldID(debugeeClass, THREADS_FIELD_NAME, THREADS_FIELD_SIG)) != NULL))\n+            jni->GetStaticFieldID(debugeeClass, THREADS_FIELD_NAME, THREADS_FIELD_SIG)) != nullptr))\n@@ -287,1 +287,1 @@\n-            jni->GetStaticObjectField(debugeeClass, threadsFieldID)) != NULL))\n+            jni->GetStaticObjectField(debugeeClass, threadsFieldID)) != nullptr))\n@@ -298,1 +298,1 @@\n-                jni->GetObjectArrayElement(threadsArray, i)) != NULL))\n+                jni->GetObjectArrayElement(threadsArray, i)) != nullptr))\n@@ -305,1 +305,1 @@\n-                jni->NewGlobalRef(threadsList[i])) != NULL))\n+                jni->NewGlobalRef(threadsList[i])) != nullptr))\n@@ -401,2 +401,2 @@\n-    \/* check if thread is not NULL *\/\n-    if (!NSK_VERIFY(thread != NULL)) {\n+    \/* check if thread is not nullptr *\/\n+    if (!NSK_VERIFY(thread != nullptr)) {\n@@ -436,2 +436,2 @@\n-    \/* check if thread is not NULL *\/\n-    if (!NSK_VERIFY(thread != NULL)) {\n+    \/* check if thread is not nullptr *\/\n+    if (!NSK_VERIFY(thread != nullptr)) {\n@@ -526,1 +526,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -549,1 +549,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP05\/sp05t003\/sp05t003.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -65,6 +65,6 @@\n-    { \"threadRunning\", \"testedMethod\", \"(ZI)V\", 2, NULL, NULL, NULL, NSK_FALSE },\n-    { \"threadEntering\", \"testedMethod\", \"(ZI)V\", 2, NULL, NULL, NULL, NSK_FALSE },\n-    { \"threadWaiting\", \"testedMethod\", \"(ZI)V\", 2, NULL, NULL, NULL, NSK_FALSE },\n-    { \"threadSleeping\", \"testedMethod\", \"(ZI)V\", 2, NULL, NULL, NULL, NSK_FALSE },\n-    { \"threadRunningInterrupted\", \"testedMethod\", \"(ZI)V\", 2, NULL, NULL, NULL, NSK_FALSE },\n-    { \"threadRunningNative\", \"testedMethod\", \"(ZI)V\", 2, NULL, NULL, NULL, NSK_FALSE }\n+    { \"threadRunning\", \"testedMethod\", \"(ZI)V\", 2, nullptr, nullptr, nullptr, NSK_FALSE },\n+    { \"threadEntering\", \"testedMethod\", \"(ZI)V\", 2, nullptr, nullptr, nullptr, NSK_FALSE },\n+    { \"threadWaiting\", \"testedMethod\", \"(ZI)V\", 2, nullptr, nullptr, nullptr, NSK_FALSE },\n+    { \"threadSleeping\", \"testedMethod\", \"(ZI)V\", 2, nullptr, nullptr, nullptr, NSK_FALSE },\n+    { \"threadRunningInterrupted\", \"testedMethod\", \"(ZI)V\", 2, nullptr, nullptr, nullptr, NSK_FALSE },\n+    { \"threadRunningNative\", \"testedMethod\", \"(ZI)V\", 2, nullptr, nullptr, nullptr, NSK_FALSE }\n@@ -155,1 +155,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -164,2 +164,2 @@\n-        threadsDesc[i].thread = (jthread)NULL;\n-        threadsDesc[i].method = (jmethodID)NULL;\n+        threadsDesc[i].thread = (jthread)nullptr;\n+        threadsDesc[i].method = (jmethodID)nullptr;\n@@ -173,1 +173,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -180,1 +180,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -186,1 +186,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -206,1 +206,1 @@\n-        if (threadsDesc[i].thread == NULL) {\n+        if (threadsDesc[i].thread == nullptr) {\n@@ -221,1 +221,1 @@\n-                jni->GetObjectClass(threadsDesc[i].thread)) != NULL))\n+                jni->GetObjectClass(threadsDesc[i].thread)) != nullptr))\n@@ -225,1 +225,1 @@\n-                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != nullptr))\n@@ -237,1 +237,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].thread)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].thread)) != nullptr))\n@@ -240,1 +240,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].cls)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].cls)) != nullptr))\n@@ -245,1 +245,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -346,1 +346,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -477,1 +477,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -498,1 +498,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t001\/sp06t001.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -65,6 +65,6 @@\n-    { \"threadRunning\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadEntering\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadWaiting\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadSleeping\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadRunningInterrupted\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadRunningNative\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE }\n+    { \"threadRunning\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadEntering\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadWaiting\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadSleeping\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadRunningInterrupted\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadRunningNative\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE }\n@@ -163,1 +163,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -172,2 +172,2 @@\n-        threadsDesc[i].thread = (jthread)NULL;\n-        threadsDesc[i].method = (jmethodID)NULL;\n+        threadsDesc[i].thread = (jthread)nullptr;\n+        threadsDesc[i].method = (jmethodID)nullptr;\n@@ -182,1 +182,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -189,1 +189,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -195,1 +195,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -215,1 +215,1 @@\n-        if (threadsDesc[i].thread == NULL) {\n+        if (threadsDesc[i].thread == nullptr) {\n@@ -230,1 +230,1 @@\n-                jni->GetObjectClass(threadsDesc[i].thread)) != NULL))\n+                jni->GetObjectClass(threadsDesc[i].thread)) != nullptr))\n@@ -234,1 +234,1 @@\n-                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != nullptr))\n@@ -246,1 +246,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].thread)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].thread)) != nullptr))\n@@ -249,1 +249,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].cls)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].cls)) != nullptr))\n@@ -254,1 +254,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -340,2 +340,2 @@\n-            if (frameStack[j].method == NULL) {\n-                NSK_COMPLAIN3(\"NULL methodID in stack for %s thread #%d (%s)\\n\",\n+            if (frameStack[j].method == nullptr) {\n+                NSK_COMPLAIN3(\"null methodID in stack for %s thread #%d (%s)\\n\",\n@@ -375,1 +375,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -506,1 +506,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -527,1 +527,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t002\/sp06t002.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-static JNIEnv* jni = NULL;\n-static jvmtiEnv *jvmti = NULL;\n+static JNIEnv* jni = nullptr;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -65,6 +65,6 @@\n-    { \"threadRunning\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadEntering\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadWaiting\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadSleeping\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadRunningInterrupted\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n-    { \"threadRunningNative\", \"testedMethod\", \"(ZI)V\", NULL, NULL, NULL, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE }\n+    { \"threadRunning\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadEntering\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadWaiting\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadSleeping\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadRunningInterrupted\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE },\n+    { \"threadRunningNative\", \"testedMethod\", \"(ZI)V\", nullptr, nullptr, nullptr, NSK_JVMTI_INVALID_JLOCATION, NSK_FALSE }\n@@ -163,1 +163,1 @@\n-    jthread *allThreadsList = NULL;\n+    jthread *allThreadsList = nullptr;\n@@ -172,2 +172,2 @@\n-        threadsDesc[i].thread = (jthread)NULL;\n-        threadsDesc[i].method = (jmethodID)NULL;\n+        threadsDesc[i].thread = (jthread)nullptr;\n+        threadsDesc[i].method = (jmethodID)nullptr;\n@@ -182,1 +182,1 @@\n-    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != NULL))\n+    if (!NSK_VERIFY(allThreadsCount > 0 && allThreadsList != nullptr))\n@@ -189,1 +189,1 @@\n-        if (!NSK_VERIFY(allThreadsList[i] != NULL))\n+        if (!NSK_VERIFY(allThreadsList[i] != nullptr))\n@@ -195,1 +195,1 @@\n-        if (threadInfo.name != NULL) {\n+        if (threadInfo.name != nullptr) {\n@@ -215,1 +215,1 @@\n-        if (threadsDesc[i].thread == NULL) {\n+        if (threadsDesc[i].thread == nullptr) {\n@@ -230,1 +230,1 @@\n-                jni->GetObjectClass(threadsDesc[i].thread)) != NULL))\n+                jni->GetObjectClass(threadsDesc[i].thread)) != nullptr))\n@@ -234,1 +234,1 @@\n-                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != NULL))\n+                jni->GetMethodID(threadsDesc[i].cls, threadsDesc[i].methodName, threadsDesc[i].methodSig)) != nullptr))\n@@ -246,1 +246,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].thread)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].thread)) != nullptr))\n@@ -249,1 +249,1 @@\n-                jni->NewGlobalRef(threadsDesc[i].cls)) != NULL))\n+                jni->NewGlobalRef(threadsDesc[i].cls)) != nullptr))\n@@ -254,1 +254,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_ENABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -323,1 +323,1 @@\n-            jmethodID qMethod = (jmethodID)NULL;\n+            jmethodID qMethod = (jmethodID)nullptr;\n@@ -387,1 +387,1 @@\n-    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, NULL))\n+    if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, eventsList, nullptr))\n@@ -518,1 +518,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -539,1 +539,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t003\/sp06t003.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,3 @@\n-static jthread thread = NULL;\n-static jrawMonitorID waitLock = NULL;\n-static jrawMonitorID frameLock = NULL;\n+static jthread thread = nullptr;\n+static jrawMonitorID waitLock = nullptr;\n+static jrawMonitorID frameLock = nullptr;\n@@ -58,1 +58,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -68,1 +68,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -73,1 +73,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -83,1 +83,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -87,1 +87,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -97,1 +97,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -126,2 +126,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -129,1 +129,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, nullptr)))\n@@ -134,1 +134,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -136,1 +136,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -139,1 +139,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(sampleStack[i].method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(sampleStack[i].method, &name, &signature, nullptr)))\n@@ -144,1 +144,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -146,1 +146,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -154,2 +154,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -157,1 +157,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, nullptr)))\n@@ -162,1 +162,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -164,1 +164,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -167,1 +167,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(sampleStack[i].method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(sampleStack[i].method, &name, &signature, nullptr)))\n@@ -172,1 +172,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -174,1 +174,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -260,2 +260,2 @@\n-    jclass klass = NULL;\n-    jmethodID method = NULL;\n+    jclass klass = nullptr;\n+    jmethodID method = nullptr;\n@@ -272,1 +272,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetFrameLocation(NULL, 1, &sampleStack[depth].method, &sampleStack[depth].location))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetFrameLocation(nullptr, 1, &sampleStack[depth].method, &sampleStack[depth].location))) {\n@@ -279,1 +279,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetFrameLocation(NULL, 0, &sampleStack[depth].method, &sampleStack[depth].location))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetFrameLocation(nullptr, 0, &sampleStack[depth].method, &sampleStack[depth].location))) {\n@@ -289,1 +289,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(obj)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(obj)) != nullptr)) {\n@@ -294,1 +294,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"fibonacci\", \"(I)I\")) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (method = jni->GetMethodID(klass, \"fibonacci\", \"(I)I\")) != nullptr)) {\n@@ -328,1 +328,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -339,1 +339,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -346,1 +346,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP07\/sp07t001\/sp07t001.cpp","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,6 +44,6 @@\n-static jthread thread = NULL;\n-static jrawMonitorID waitLock = NULL;\n-static jfieldID field = NULL;\n-static jmethodID methodRun = NULL;\n-static jmethodID methodCatcher = NULL;\n-static jmethodID methodThrower = NULL;\n+static jthread thread = nullptr;\n+static jrawMonitorID waitLock = nullptr;\n+static jfieldID field = nullptr;\n+static jmethodID methodRun = nullptr;\n+static jmethodID methodCatcher = nullptr;\n+static jmethodID methodThrower = nullptr;\n@@ -60,1 +60,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -62,2 +62,2 @@\n-    jclass klass = NULL;\n-    jfieldID fid = NULL;\n+    jclass klass = nullptr;\n+    jfieldID fid = nullptr;\n@@ -72,1 +72,1 @@\n-    if (!NSK_VERIFY(threads_count > 0 && threads != NULL))\n+    if (!NSK_VERIFY(threads_count > 0 && threads != nullptr))\n@@ -77,1 +77,1 @@\n-        if (!NSK_VERIFY(threads[i] != NULL))\n+        if (!NSK_VERIFY(threads[i] != nullptr))\n@@ -87,1 +87,1 @@\n-        if (info.name != NULL && (strcmp(info.name, THREAD_NAME) == 0)) {\n+        if (info.name != nullptr && (strcmp(info.name, THREAD_NAME) == 0)) {\n@@ -91,1 +91,1 @@\n-        if (info.name != NULL) {\n+        if (info.name != nullptr) {\n@@ -101,1 +101,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -107,1 +107,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->GetObjectClass(thread)) != nullptr))\n@@ -111,1 +111,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (fid = jni->GetStaticFieldID(klass, \"MAX_LADDER\", \"I\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (fid = jni->GetStaticFieldID(klass, \"MAX_LADDER\", \"I\")) != nullptr))\n@@ -118,1 +118,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"depth\", \"I\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (field = jni->GetFieldID(klass, \"depth\", \"I\")) != nullptr))\n@@ -122,1 +122,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (methodRun = jni->GetMethodID(klass, \"run\", \"()V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (methodRun = jni->GetMethodID(klass, \"run\", \"()V\")) != nullptr))\n@@ -127,1 +127,1 @@\n-            jni->GetMethodID(klass, \"catcher\", \"(II)V\")) != NULL))\n+            jni->GetMethodID(klass, \"catcher\", \"(II)V\")) != nullptr))\n@@ -131,1 +131,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (methodThrower= jni->GetMethodID(klass, \"thrower\", \"(I)V\")) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (methodThrower= jni->GetMethodID(klass, \"thrower\", \"(I)V\")) != nullptr))\n@@ -158,2 +158,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -161,1 +161,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, nullptr)))\n@@ -166,1 +166,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -168,1 +168,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -176,2 +176,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -179,1 +179,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(frameBuffer[frameCount-1-i].method, &name, &signature, nullptr)))\n@@ -184,1 +184,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -186,1 +186,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -189,1 +189,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(method, &name, &signature, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetMethodName(method, &name, &signature, nullptr)))\n@@ -199,1 +199,1 @@\n-    jmethodID method = NULL;\n+    jmethodID method = nullptr;\n@@ -291,1 +291,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -303,1 +303,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -312,1 +312,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP07\/sp07t002\/sp07t002.cpp","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -98,2 +98,0 @@\n-#define DEREF(ptr) (((ptr) == NULL ? 0 : *(ptr)))\n-\n@@ -178,1 +176,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (*debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (*debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -187,1 +185,1 @@\n-            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -203,1 +201,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -230,1 +228,1 @@\n-    jfieldID rootObjectField = NULL;\n+    jfieldID rootObjectField = nullptr;\n@@ -233,1 +231,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -242,1 +240,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -251,1 +249,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -261,1 +259,1 @@\n-            jni->GetFieldID(chainObjectClass, NEXT_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, NEXT_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -270,1 +268,1 @@\n-            jni->GetStaticObjectField(debugeeClass, rootObjectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, rootObjectField)) != nullptr)) {\n@@ -277,1 +275,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (*rootObjectPtr = jni->NewGlobalRef(*rootObjectPtr)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (*rootObjectPtr = jni->NewGlobalRef(*rootObjectPtr)) != nullptr)) {\n@@ -299,1 +297,1 @@\n-    jobject nextObj = NULL;\n+    jobject nextObj = nullptr;\n@@ -309,1 +307,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (nextObj = jni->GetObjectField(currObj, refField)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (nextObj = jni->GetObjectField(currObj, refField)) != nullptr)) {\n@@ -353,3 +351,3 @@\n-    jclass   debugeeClass          = NULL;\n-    jclass   rootObjectClass       = NULL;\n-    jclass   chainObjectClass      = NULL;\n+    jclass   debugeeClass          = nullptr;\n+    jclass   rootObjectClass       = nullptr;\n+    jclass   chainObjectClass      = nullptr;\n@@ -357,3 +355,3 @@\n-    jfieldID reachableChainField   = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID nextField             = NULL;\n+    jfieldID reachableChainField   = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID nextField             = nullptr;\n@@ -507,1 +505,1 @@\n-    if (rootObject != NULL) {\n+    if (rootObject != nullptr) {\n@@ -512,1 +510,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -580,1 +578,1 @@\n-    if (tag_ptr != NULL && *tag_ptr != 0) {\n+    if (tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -727,1 +725,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -763,1 +761,1 @@\n-                                                  (jclass) NULL, \/* class          *\/\n+                                                  (jclass) nullptr, \/* class          *\/\n@@ -806,1 +804,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -817,1 +815,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL)) {\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr)) {\n@@ -832,1 +830,1 @@\n-    heapCallbacks.heap_iteration_callback         = NULL;\n+    heapCallbacks.heap_iteration_callback         = nullptr;\n@@ -838,1 +836,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL))) {\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref001\/followref001.cpp","additions":29,"deletions":31,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -95,2 +95,0 @@\n-#define DEREF(ptr) (((ptr) == NULL ? 0 : *(ptr)))\n-\n@@ -113,1 +111,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -122,1 +120,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -162,3 +160,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -166,4 +164,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -197,1 +195,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -205,1 +203,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -219,1 +217,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -233,1 +231,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -242,1 +240,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -251,1 +249,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -260,1 +258,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -269,1 +267,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -276,1 +274,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (*rootObject = jni->NewGlobalRef(*rootObject)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (*rootObject = jni->NewGlobalRef(*rootObject)) != nullptr)) {\n@@ -397,1 +395,1 @@\n-    if (rootObject != NULL) {\n+    if (rootObject != nullptr) {\n@@ -402,1 +400,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -463,2 +461,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN1(\"NULL tag_ptr is passed to heapReferenceCallback:\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN1(\"null tag_ptr is passed to heapReferenceCallback:\"\n@@ -469,1 +467,1 @@\n-    if (tag_ptr != NULL && *tag_ptr != 0) {\n+    if (tag_ptr != nullptr && *tag_ptr != 0) {\n@@ -604,1 +602,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -638,1 +636,1 @@\n-                                                      (jclass) NULL, \/* class          *\/\n+                                                      (jclass) nullptr, \/* class          *\/\n@@ -671,1 +669,1 @@\n-                                                      (jclass) NULL, \/* class          *\/\n+                                                      (jclass) nullptr, \/* class          *\/\n@@ -717,1 +715,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -729,1 +727,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -743,1 +741,1 @@\n-    heapCallbacks.heap_iteration_callback         = NULL;\n+    heapCallbacks.heap_iteration_callback         = nullptr;\n@@ -749,1 +747,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref002\/followref002.cpp","additions":32,"deletions":34,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-static ObjectDesc* objectDescList = NULL;\n+static ObjectDesc* objectDescList = nullptr;\n@@ -121,3 +121,0 @@\n-#define DEREF(ptr) (((ptr) == NULL ? 0 : *(ptr)))\n-\n-\n@@ -132,1 +129,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -141,1 +138,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (obj = jni->GetObjectField(firstObject, firstField)) != nullptr)) {\n@@ -167,3 +164,3 @@\n-    jclass debugeeClass = NULL;\n-    jclass rootObjectClass = NULL;\n-    jclass chainObjectClass = NULL;\n+    jclass debugeeClass = nullptr;\n+    jclass rootObjectClass = nullptr;\n+    jclass chainObjectClass = nullptr;\n@@ -171,4 +168,4 @@\n-    jfieldID objectField = NULL;\n-    jfieldID reachableChainField = NULL;\n-    jfieldID unreachableChainField = NULL;\n-    jfieldID tailField = NULL;\n+    jfieldID objectField = nullptr;\n+    jfieldID reachableChainField = nullptr;\n+    jfieldID unreachableChainField = nullptr;\n+    jfieldID tailField = nullptr;\n@@ -201,1 +198,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (debugeeClass = jni->FindClass(DEBUGEE_CLASS_NAME)) != nullptr)) {\n@@ -209,1 +206,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (rootObjectClass = jni->FindClass(ROOT_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -224,1 +221,1 @@\n-            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(CHAIN_OBJECT_CLASS_NAME)) != nullptr)) {\n@@ -240,1 +237,1 @@\n-            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetStaticFieldID(debugeeClass, OBJECT_FIELD_NAME, ROOT_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -249,1 +246,1 @@\n-            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, REACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -258,1 +255,1 @@\n-            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(rootObjectClass, UNREACHABLE_CHAIN_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -267,1 +264,1 @@\n-            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != NULL)) {\n+            jni->GetFieldID(chainObjectClass, TAIL_FIELD_NAME, CHAIN_OBJECT_CLASS_SIG)) != nullptr)) {\n@@ -276,1 +273,1 @@\n-            jni->GetStaticObjectField(debugeeClass, objectField)) != NULL)) {\n+            jni->GetStaticObjectField(debugeeClass, objectField)) != nullptr)) {\n@@ -283,1 +280,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (*rootObject = jni->NewGlobalRef(*rootObject)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (*rootObject = jni->NewGlobalRef(*rootObject)) != nullptr)) {\n@@ -397,1 +394,1 @@\n-    if (rootObject != NULL) {\n+    if (rootObject != nullptr) {\n@@ -402,1 +399,1 @@\n-    if (objectDescList != NULL) {\n+    if (objectDescList != nullptr) {\n@@ -472,2 +469,2 @@\n-    if (method == NULL && ref_kind != JVMTI_HEAP_REFERENCE_JNI_LOCAL) {\n-        NSK_COMPLAIN0(\"methodID must not be NULL\\n\");\n+    if (method == nullptr && ref_kind != JVMTI_HEAP_REFERENCE_JNI_LOCAL) {\n+        NSK_COMPLAIN0(\"methodID must not be null\\n\");\n@@ -593,1 +590,1 @@\n-    jmethodID method   = (jmethodID) NULL;\n+    jmethodID method   = (jmethodID) nullptr;\n@@ -673,2 +670,2 @@\n-    if (tag_ptr == NULL) {\n-        NSK_COMPLAIN1(\"NULL tag_ptr is passed to heapReferenceCallback:\"\n+    if (tag_ptr == nullptr) {\n+        NSK_COMPLAIN1(\"null tag_ptr is passed to heapReferenceCallback:\"\n@@ -679,1 +676,1 @@\n-    if (tag_ptr != NULL && tag != 0) {\n+    if (tag_ptr != nullptr && tag != 0) {\n@@ -881,1 +878,1 @@\n-    jthread *threads = NULL;\n+    jthread *threads = nullptr;\n@@ -894,1 +891,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -905,1 +902,1 @@\n-    jobject rootObject = NULL;\n+    jobject rootObject = nullptr;\n@@ -942,2 +939,2 @@\n-                                                      (jclass)  NULL, \/* class          *\/\n-                                                      (jobject) NULL, \/* initial_object *\/\n+                                                      (jclass)  nullptr, \/* class          *\/\n+                                                      (jobject) nullptr, \/* initial_object *\/\n@@ -980,2 +977,2 @@\n-                                                      (jclass)  NULL, \/* class          *\/\n-                                                      (jobject) NULL, \/* initial_object *\/\n+                                                      (jclass)  nullptr, \/* class          *\/\n+                                                      (jobject) nullptr, \/* initial_object *\/\n@@ -1029,1 +1026,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -1038,1 +1035,1 @@\n-        if (infoOpt != NULL) {\n+        if (infoOpt != nullptr) {\n@@ -1064,1 +1061,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -1078,1 +1075,1 @@\n-    heapCallbacks.heap_iteration_callback         = NULL;\n+    heapCallbacks.heap_iteration_callback         = nullptr;\n@@ -1084,1 +1081,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref003\/followref003.cpp","additions":40,"deletions":43,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-    if  (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(JAVA_LANG_STRING_CLASS_NAME)) != NULL)) {\n+    if  (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(JAVA_LANG_STRING_CLASS_NAME)) != nullptr)) {\n@@ -154,1 +154,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (g_jniGlobalRef = jni->NewGlobalRef(klass)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (g_jniGlobalRef = jni->NewGlobalRef(klass)) != nullptr)) {\n@@ -158,1 +158,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (g_jniWeakGlobalRef = jni->NewWeakGlobalRef(klass)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (g_jniWeakGlobalRef = jni->NewWeakGlobalRef(klass)) != nullptr)) {\n@@ -183,2 +183,2 @@\n-                                      NULL,                     \/* class *\/\n-                                      NULL,                     \/* inital object *\/\n+                                      nullptr,                     \/* class *\/\n+                                      nullptr,                     \/* inital object *\/\n@@ -221,1 +221,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -229,1 +229,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL)) {\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr)) {\n@@ -235,1 +235,1 @@\n-    g_heapCallbacks.heap_iteration_callback         = NULL;\n+    g_heapCallbacks.heap_iteration_callback         = nullptr;\n@@ -253,1 +253,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL))) {\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref004\/followref004.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,2 +49,2 @@\n-                                      NULL,                     \/* class *\/\n-                                      NULL,                     \/* inital object *\/\n+                                      nullptr,                     \/* class *\/\n+                                      nullptr,                     \/* inital object *\/\n@@ -60,1 +60,1 @@\n-                                        NULL,                     \/* class *\/\n+                                        nullptr,                     \/* class *\/\n@@ -118,1 +118,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -126,1 +126,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL)) {\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr)) {\n@@ -140,1 +140,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL))) {\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref005\/followref005.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-                                      NULL,                     \/* inital object *\/\n+                                      nullptr,                     \/* inital object *\/\n@@ -66,1 +66,1 @@\n-    \/\/ Or it may treat the object as NULL, and follow all references.\n+    \/\/ Or it may treat the object as nullptr, and follow all references.\n@@ -71,5 +71,5 @@\n-    emptyHeapCallbacks.heap_iteration_callback = NULL;\n-    emptyHeapCallbacks.heap_reference_callback = NULL;\n-    emptyHeapCallbacks.primitive_field_callback = NULL;\n-    emptyHeapCallbacks.array_primitive_value_callback = NULL;\n-    emptyHeapCallbacks.string_primitive_value_callback = NULL;\n+    emptyHeapCallbacks.heap_iteration_callback = nullptr;\n+    emptyHeapCallbacks.heap_reference_callback = nullptr;\n+    emptyHeapCallbacks.primitive_field_callback = nullptr;\n+    emptyHeapCallbacks.array_primitive_value_callback = nullptr;\n+    emptyHeapCallbacks.string_primitive_value_callback = nullptr;\n@@ -77,1 +77,1 @@\n-                                      NULL,                   \/\/ class\n+                                      nullptr,                   \/\/ class\n@@ -90,3 +90,3 @@\n-                                      NULL,         \/* class *\/\n-                                      NULL,         \/* inital object *\/\n-                                      NULL,\n+                                      nullptr,         \/* class *\/\n+                                      nullptr,         \/* inital object *\/\n+                                      nullptr,\n@@ -108,1 +108,1 @@\n-    NSK_DISPLAY0(\"GetTag: NULL object pointer:\");\n+    NSK_DISPLAY0(\"GetTag: null object pointer:\");\n@@ -110,1 +110,1 @@\n-    retCode = jvmti->GetTag(NULL, &tag);\n+    retCode = jvmti->GetTag(nullptr, &tag);\n@@ -116,1 +116,1 @@\n-    NSK_DISPLAY0(\"GetTag: NULL tag pointer:\");\n+    NSK_DISPLAY0(\"GetTag: null tag pointer:\");\n@@ -118,1 +118,1 @@\n-    retCode = jvmti->GetTag((jobject) &g_wrongHeapCallbacks, NULL);\n+    retCode = jvmti->GetTag((jobject) &g_wrongHeapCallbacks, nullptr);\n@@ -134,1 +134,1 @@\n-    NSK_DISPLAY0(\"SetTag: NULL object pointer:\");\n+    NSK_DISPLAY0(\"SetTag: null object pointer:\");\n@@ -136,1 +136,1 @@\n-    retCode = jvmti->GetTag(NULL, &tag);\n+    retCode = jvmti->GetTag(nullptr, &tag);\n@@ -142,1 +142,1 @@\n-    NSK_DISPLAY0(\"GetTag: NULL tag pointer:\");\n+    NSK_DISPLAY0(\"GetTag: null tag pointer:\");\n@@ -154,1 +154,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(szClassName)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(szClassName)) != nullptr)) {\n@@ -161,1 +161,1 @@\n-                                      NULL,         \/* inital object *\/\n+                                      nullptr,         \/* inital object *\/\n@@ -214,1 +214,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -222,1 +222,1 @@\n-    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL)) {\n+    if (!NSK_VERIFY((jvmti = nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr)) {\n@@ -238,1 +238,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL))) {\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref006\/followref006.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-static jmethodID midActiveMethod = NULL;\n+static jmethodID midActiveMethod = nullptr;\n@@ -87,1 +87,1 @@\n-    if (clazz == NULL) {\n+    if (clazz == nullptr) {\n@@ -93,1 +93,1 @@\n-    if (midActiveMethod == NULL) {\n+    if (midActiveMethod == nullptr) {\n@@ -140,1 +140,1 @@\n-        JVMTI_EVENT_METHOD_EXIT, NULL);\n+        JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -150,1 +150,1 @@\n-        JVMTI_EVENT_FRAME_POP, NULL);\n+        JVMTI_EVENT_FRAME_POP, nullptr);\n@@ -200,1 +200,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretbase\/earlyretbase.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,4 +44,4 @@\n-static jmethodID midCheckPoint      = NULL;\n-static jmethodID midRun             = NULL;\n-static jmethodID midCountDownFloat  = NULL;\n-static jmethodID midCountDownDouble = NULL;\n+static jmethodID midCheckPoint      = nullptr;\n+static jmethodID midRun             = nullptr;\n+static jmethodID midCountDownFloat  = nullptr;\n+static jmethodID midCountDownDouble = nullptr;\n@@ -73,1 +73,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -108,1 +108,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -128,1 +128,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -133,1 +133,1 @@\n-    if (name == NULL || strcmp(name, name_exp[methidx]) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp[methidx]) != 0) {\n@@ -138,1 +138,1 @@\n-    if (sig == NULL || strcmp(sig, sig_exp[methidx]) != 0) {\n+    if (sig == nullptr || strcmp(sig, sig_exp[methidx]) != 0) {\n@@ -156,1 +156,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -159,1 +159,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -162,1 +162,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -165,1 +165,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -310,1 +310,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -317,1 +317,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -373,1 +373,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -386,1 +386,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -392,1 +392,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -398,1 +398,1 @@\n-    if (midCountDownFloat == NULL) {\n+    if (midCountDownFloat == nullptr) {\n@@ -404,1 +404,1 @@\n-    if (midCountDownDouble == NULL) {\n+    if (midCountDownDouble == nullptr) {\n@@ -417,1 +417,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretfp\/earlyretfp.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,2 +44,2 @@\n-static jmethodID midCheckPoint = NULL;\n-static jmethodID midRun        = NULL;\n+static jmethodID midCheckPoint = nullptr;\n+static jmethodID midRun        = nullptr;\n@@ -47,5 +47,5 @@\n-static jmethodID midCountDownInt     = NULL;\n-static jmethodID midCountDownShort   = NULL;\n-static jmethodID midCountDownChar    = NULL;\n-static jmethodID midCountDownByte    = NULL;\n-static jmethodID midCountDownBoolean = NULL;\n+static jmethodID midCountDownInt     = nullptr;\n+static jmethodID midCountDownShort   = nullptr;\n+static jmethodID midCountDownChar    = nullptr;\n+static jmethodID midCountDownByte    = nullptr;\n+static jmethodID midCountDownBoolean = nullptr;\n@@ -81,1 +81,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -109,1 +109,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -114,1 +114,1 @@\n-    if (name == NULL || strcmp(name, name_exp[methidx]) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp[methidx]) != 0) {\n@@ -119,1 +119,1 @@\n-    if (sig == NULL || strcmp(sig, sign_exp[methidx]) != 0) {\n+    if (sig == nullptr || strcmp(sig, sign_exp[methidx]) != 0) {\n@@ -139,1 +139,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -165,1 +165,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -168,1 +168,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -171,1 +171,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -174,1 +174,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -316,1 +316,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -323,1 +323,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -378,1 +378,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -391,1 +391,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -397,1 +397,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -403,1 +403,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -409,1 +409,1 @@\n-    if (midCountDownShort == NULL) {\n+    if (midCountDownShort == nullptr) {\n@@ -415,1 +415,1 @@\n-    if (midCountDownChar == NULL) {\n+    if (midCountDownChar == nullptr) {\n@@ -421,1 +421,1 @@\n-    if (midCountDownByte == NULL) {\n+    if (midCountDownByte == nullptr) {\n@@ -427,1 +427,1 @@\n-    if (midCountDownBoolean == NULL) {\n+    if (midCountDownBoolean == nullptr) {\n@@ -440,1 +440,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretint\/earlyretint.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -45,3 +45,3 @@\n-static jmethodID midRun            = NULL;\n-static jmethodID midCountDownLong  = NULL;\n-static jmethodID midCheckPoint     = NULL;\n+static jmethodID midRun            = nullptr;\n+static jmethodID midCountDownLong  = nullptr;\n+static jmethodID midCheckPoint     = nullptr;\n@@ -67,1 +67,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -102,1 +102,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -122,1 +122,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -127,1 +127,1 @@\n-    if (name == NULL || strcmp(name, name_exp) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp) != 0) {\n@@ -132,1 +132,1 @@\n-    if (sig == NULL || strcmp(sig, sig_exp) != 0) {\n+    if (sig == nullptr || strcmp(sig, sig_exp) != 0) {\n@@ -149,1 +149,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -152,1 +152,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -155,1 +155,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -158,1 +158,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -297,1 +297,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -304,1 +304,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -360,1 +360,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -373,1 +373,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -379,1 +379,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -385,1 +385,1 @@\n-    if (midCountDownLong == NULL) {\n+    if (midCountDownLong == nullptr) {\n@@ -398,1 +398,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretlong\/earlyretlong.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -45,3 +45,3 @@\n-static jmethodID midRun             = NULL;\n-static jmethodID midCountDownObject = NULL;\n-static jmethodID midCheckPoint      = NULL;\n+static jmethodID midRun             = nullptr;\n+static jmethodID midCountDownObject = nullptr;\n+static jmethodID midCheckPoint      = nullptr;\n@@ -55,1 +55,1 @@\n-static jobject val_exp = NULL;\n+static jobject val_exp = nullptr;\n@@ -67,1 +67,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -102,1 +102,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -122,1 +122,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -127,1 +127,1 @@\n-    if (name == NULL || strcmp(name, name_exp) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp) != 0) {\n@@ -132,1 +132,1 @@\n-    if (sig == NULL || strcmp(sig, sig_exp) != 0) {\n+    if (sig == nullptr || strcmp(sig, sig_exp) != 0) {\n@@ -149,1 +149,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -152,1 +152,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -155,1 +155,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -158,1 +158,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -295,1 +295,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -302,1 +302,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -357,1 +357,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -370,1 +370,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -376,1 +376,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -382,1 +382,1 @@\n-    if (midCountDownObject == NULL) {\n+    if (midCountDownObject == nullptr) {\n@@ -395,1 +395,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretobj\/earlyretobj.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -44,3 +44,3 @@\n-static jmethodID midRun             = NULL;\n-static jmethodID midCountDownString = NULL;\n-static jmethodID midCheckPoint      = NULL;\n+static jmethodID midRun             = nullptr;\n+static jmethodID midCountDownString = nullptr;\n+static jmethodID midCheckPoint      = nullptr;\n@@ -54,1 +54,1 @@\n-static jstring str_exp = NULL;\n+static jstring str_exp = nullptr;\n@@ -66,1 +66,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -101,1 +101,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -121,1 +121,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -126,1 +126,1 @@\n-    if (name == NULL || strcmp(name, name_exp) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp) != 0) {\n@@ -131,1 +131,1 @@\n-    if (sig == NULL || strcmp(sig, sig_exp) != 0) {\n+    if (sig == nullptr || strcmp(sig, sig_exp) != 0) {\n@@ -148,1 +148,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -151,1 +151,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -154,1 +154,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -157,1 +157,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -294,1 +294,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -301,1 +301,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -356,1 +356,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -369,1 +369,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -375,1 +375,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -381,1 +381,1 @@\n-    if (midCountDownString == NULL) {\n+    if (midCountDownString == nullptr) {\n@@ -394,1 +394,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretstr\/earlyretstr.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -43,2 +43,2 @@\n-static jmethodID midCheckPoint = NULL;\n-static jmethodID midRun = NULL;\n+static jmethodID midCheckPoint = nullptr;\n+static jmethodID midRun = nullptr;\n@@ -60,1 +60,1 @@\n-    jvmtiLocalVariableEntry *table = NULL;\n+    jvmtiLocalVariableEntry *table = nullptr;\n@@ -95,1 +95,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -115,1 +115,1 @@\n-    if (sigClass == NULL || strcmp(sigClass, cls_exp) != 0) {\n+    if (sigClass == nullptr || strcmp(sigClass, cls_exp) != 0) {\n@@ -120,1 +120,1 @@\n-    if (name == NULL || strcmp(name, name_exp) != 0) {\n+    if (name == nullptr || strcmp(name, name_exp) != 0) {\n@@ -125,1 +125,1 @@\n-    if (sig == NULL || strcmp(sig, sig_exp) != 0) {\n+    if (sig == nullptr || strcmp(sig, sig_exp) != 0) {\n@@ -142,1 +142,1 @@\n-    if (sigClass != NULL) {\n+    if (sigClass != nullptr) {\n@@ -145,1 +145,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -148,1 +148,1 @@\n-    if (sig != NULL) {\n+    if (sig != nullptr) {\n@@ -151,1 +151,1 @@\n-    if (table != NULL) {\n+    if (table != nullptr) {\n@@ -244,1 +244,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -251,1 +251,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -303,1 +303,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -315,1 +315,1 @@\n-    if (midRun == NULL) {\n+    if (midRun == nullptr) {\n@@ -321,1 +321,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -334,1 +334,1 @@\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+        JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretvoid\/earlyretvoid.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,4 +67,4 @@\n-static jvmtiStackInfo  *stack_buf1    = NULL;\n-static jvmtiStackInfo  *stack_buf2    = NULL;\n-static jthread         *thread_list   = NULL;\n-static jvmtiThreadInfo *thread_info   = NULL;\n+static jvmtiStackInfo  *stack_buf1    = nullptr;\n+static jvmtiStackInfo  *stack_buf2    = nullptr;\n+static jthread         *thread_list   = nullptr;\n+static jvmtiThreadInfo *thread_info   = nullptr;\n@@ -194,1 +194,1 @@\n-    if (thr_info->name != NULL) {\n+    if (thr_info->name != nullptr) {\n@@ -197,1 +197,1 @@\n-        printf(\"compare stack #%d: thread is NULL\\n\", ti);\n+        printf(\"compare stack #%d: thread is null\\n\", ti);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetAllStackTraces\/getallstktr001\/getallstktr001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-static jvmtiEnv *jvmti         = NULL;\n-static jmethodID midCheckPoint = NULL;\n+static jvmtiEnv *jvmti         = nullptr;\n+static jmethodID midCheckPoint = nullptr;\n@@ -54,1 +54,1 @@\n-    unsigned char *cp_bytes    = NULL;\n+    unsigned char *cp_bytes    = nullptr;\n@@ -105,1 +105,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -154,1 +154,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -166,1 +166,1 @@\n-    if (midCheckPoint == NULL) {\n+    if (midCheckPoint == nullptr) {\n@@ -178,1 +178,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetConstantPool\/getcpool001\/getcpool001.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -59,1 +59,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -64,1 +64,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -100,1 +100,1 @@\n-    jvmtiLineNumberEntry *table = NULL;\n+    jvmtiLineNumberEntry *table = nullptr;\n@@ -135,1 +135,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -148,1 +148,1 @@\n-    if (interf == NULL) {\n+    if (interf == nullptr) {\n@@ -154,1 +154,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -162,1 +162,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -173,1 +173,1 @@\n-    if (abstr == NULL) {\n+    if (abstr == nullptr) {\n@@ -179,1 +179,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -187,1 +187,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -198,1 +198,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -206,1 +206,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -214,1 +214,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -225,1 +225,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -233,1 +233,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLineNumberTable\/linetab004\/linetab004.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -41,2 +41,2 @@\n-static jmethodID mid = NULL;\n-static jvmtiLocalVariableEntry *table = NULL;\n+static jmethodID mid = nullptr;\n+static jvmtiLocalVariableEntry *table = nullptr;\n@@ -143,1 +143,1 @@\n-    jmethodID frame_method = NULL;\n+    jmethodID frame_method = nullptr;\n@@ -184,1 +184,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -189,1 +189,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -236,1 +236,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -241,1 +241,1 @@\n-    err = jvmti->GetLocalInstance(NULL, 0, &obj);\n+    err = jvmti->GetLocalInstance(nullptr, 0, &obj);\n@@ -253,1 +253,1 @@\n-    err = jvmti->GetLocalInstance(NULL, 1, &obj);\n+    err = jvmti->GetLocalInstance(nullptr, 1, &obj);\n@@ -269,1 +269,1 @@\n-    jobject obj = NULL;\n+    jobject obj = nullptr;\n@@ -273,1 +273,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -280,1 +280,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -294,1 +294,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, nullptr);\n@@ -302,1 +302,1 @@\n-    err = jvmti->GetLocalInstance(NULL, 0, &obj);\n+    err = jvmti->GetLocalInstance(nullptr, 0, &obj);\n@@ -310,1 +310,1 @@\n-    err = jvmti->GetLocalInstance(NULL, 1, &obj);\n+    err = jvmti->GetLocalInstance(nullptr, 1, &obj);\n@@ -332,1 +332,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -340,1 +340,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal003\/getlocal003.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -64,1 +64,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -69,1 +69,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -108,1 +108,1 @@\n-    jmethodID mid = NULL;\n+    jmethodID mid = nullptr;\n@@ -110,1 +110,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -117,1 +117,1 @@\n-    if (mid == NULL) {\n+    if (mid == nullptr) {\n@@ -159,1 +159,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal004\/getlocal004.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -57,1 +57,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -62,1 +62,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -105,3 +105,3 @@\n-    jmethodID* methods_ptr = NULL;\n-    char* name_ptr = NULL;\n-    char* sign_ptr = NULL;\n+    jmethodID* methods_ptr = nullptr;\n+    char* name_ptr = nullptr;\n+    char* sign_ptr = nullptr;\n@@ -121,1 +121,1 @@\n-                                    &sign_ptr, (char **) NULL);\n+                                    &sign_ptr, nullptr);\n@@ -163,3 +163,3 @@\n-    jfieldID* fields_ptr = NULL;\n-    char* name_ptr = NULL;\n-    char* sign_ptr = NULL;\n+    jfieldID* fields_ptr = nullptr;\n+    char* name_ptr = nullptr;\n+    char* sign_ptr = nullptr;\n@@ -168,1 +168,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -184,1 +184,1 @@\n-                                    &sign_ptr, (char **) NULL);\n+                                    &sign_ptr, nullptr);\n@@ -225,1 +225,1 @@\n-    char* class_sign = NULL;\n+    char* class_sign = nullptr;\n@@ -231,1 +231,1 @@\n-    err = jvmti->GetClassSignature(cls, &class_sign, (char **) NULL);\n+    err = jvmti->GetClassSignature(cls, &class_sign, nullptr);\n@@ -252,1 +252,1 @@\n-    err = jvmti->GetClassSignature(klass, &class_sign, (char **) NULL);\n+    err = jvmti->GetClassSignature(klass, &class_sign, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/IsSynthetic\/issynth001\/issynth001.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-  const char* sname = env->GetStringUTFChars(name, NULL);\n+  const char* sname = env->GetStringUTFChars(name, nullptr);\n@@ -105,1 +105,1 @@\n-    ret = jvmti_env->GetMethodName(mid, &mname, &signature, NULL);\n+    ret = jvmti_env->GetMethodName(mid, &mname, &signature, nullptr);\n@@ -164,1 +164,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -167,1 +167,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -170,1 +170,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n@@ -278,1 +278,1 @@\n-    ret = jvmti->GetClassSignature(klass, &clname, NULL);\n+    ret = jvmti->GetClassSignature(klass, &clname, nullptr);\n@@ -285,1 +285,1 @@\n-    ret = jvmti->GetMethodName(mid, &mname, &signature, NULL);\n+    ret = jvmti->GetMethodName(mid, &mname, &signature, nullptr);\n@@ -299,1 +299,1 @@\n-    jvmtiFrameInfo *stack_buffer = NULL;\n+    jvmtiFrameInfo *stack_buffer = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/MethodBind\/JvmtiTest\/JvmtiTest.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,2 +198,2 @@\n-    jvmtiFrameInfo *stack_buffer = NULL;\n-    jvmtiFrameInfo *compare_buffer = NULL;\n+    jvmtiFrameInfo *stack_buffer = nullptr;\n+    jvmtiFrameInfo *compare_buffer = nullptr;\n@@ -294,1 +294,1 @@\n-        ret = jvmti->GetClassSignature(klass, &clname, NULL);\n+        ret = jvmti->GetClassSignature(klass, &clname, nullptr);\n@@ -301,1 +301,1 @@\n-        ret = jvmti->GetMethodName(stack_buffer[i].method, &mname, &signature, NULL);\n+        ret = jvmti->GetMethodName(stack_buffer[i].method, &mname, &signature, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/StackTrace\/JvmtiTest\/JvmtiTest.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -124,1 +124,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -130,1 +130,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -143,1 +143,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/agentthr\/agentthr.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -54,1 +54,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -59,1 +59,1 @@\n-    if (res != JNI_OK || jvmti == NULL) {\n+    if (res != JNI_OK || jvmti == nullptr) {\n@@ -77,1 +77,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -89,2 +89,2 @@\n-    if (appClassloader == NULL) {\n-        printf(\"(GetClassLoader app) unexpected loader - NULL\\n\");\n+    if (appClassloader == nullptr) {\n+        printf(\"(GetClassLoader app) unexpected loader - null\\n\");\n@@ -102,2 +102,2 @@\n-    if (objClassloader != NULL) {\n-        printf(\"(GetClassLoader obj) unexpected loader - !NULL\\n\");\n+    if (objClassloader != nullptr) {\n+        printf(\"(GetClassLoader obj) unexpected loader - !null\\n\");\n@@ -120,1 +120,1 @@\n-          err = jvmti->GetClassSignature(k, &classSig, NULL);\n+          err = jvmti->GetClassSignature(k, &classSig, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/clsldrclss00x\/clsldrclss00x.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -66,1 +66,1 @@\n-    if (name != NULL && (strcmp(name, CLASS_NAME) == 0)) {\n+    if (name != nullptr && (strcmp(name, CLASS_NAME) == 0)) {\n@@ -71,1 +71,1 @@\n-        if (redefined_class != NULL) {\n+        if (redefined_class != nullptr) {\n@@ -109,1 +109,1 @@\n-    if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+    if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -153,1 +153,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -160,1 +160,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr);\n@@ -176,1 +176,1 @@\n-    if (jvmti == NULL) {\n+    if (jvmti == nullptr) {\n@@ -188,1 +188,1 @@\n-    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/events\/redefineCFLH\/JvmtiTest\/JvmtiTest.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-                enable ? (jvmtiExtensionEvent)ClassUnload : NULL);\n+                enable ? (jvmtiExtensionEvent)ClassUnload : nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/extmech\/extmech.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-    if (name != NULL && (strcmp(name, BOOT_CLASS) == 0)) {\n+    if (name != nullptr && (strcmp(name, BOOT_CLASS) == 0)) {\n@@ -152,1 +152,1 @@\n-      if (loader == NULL) {\n+      if (loader == nullptr) {\n@@ -195,1 +195,1 @@\n-        if (idx != NULL) *idx = 0;\n+        if (idx != nullptr) *idx = 0;\n@@ -217,1 +217,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr);\n@@ -220,1 +220,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -223,1 +223,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr);\n@@ -226,1 +226,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -229,1 +229,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/AddToBootstrapClassLoaderSearch\/JvmtiTest\/JvmtiTest.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/Dispose\/JvmtiTest\/JvmtiTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -140,1 +140,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -143,1 +143,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, nullptr);\n@@ -146,1 +146,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/ForceGarbageCollection\/gc\/gc.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -140,1 +140,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/nosuspendMonitorInfo\/JvmtiTest\/JvmtiTest.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -139,1 +139,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -236,1 +236,1 @@\n-    jvmtiFrameInfo *stack_buffer = NULL;\n+    jvmtiFrameInfo *stack_buffer = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/nosuspendStackTrace\/JvmtiTest\/JvmtiTest.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -224,1 +224,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -227,1 +227,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n@@ -230,1 +230,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/rawmonitor\/rawmonitor.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -73,2 +73,2 @@\n-static MyTag *fakeRoot = NULL;\n-static MyTag *missed = NULL;\n+static MyTag *fakeRoot = nullptr;\n+static MyTag *missed = nullptr;\n@@ -85,1 +85,1 @@\n-  MyTag* new_tag = NULL;\n+  MyTag* new_tag = nullptr;\n@@ -88,1 +88,1 @@\n-  if (NULL == new_tag) {\n+  if (nullptr == new_tag) {\n@@ -98,1 +98,1 @@\n-  new_tag->ref = NULL;\n+  new_tag->ref = nullptr;\n@@ -106,2 +106,2 @@\n-  MyTag *new_tag = NULL;\n-  MyTag *class_tag = NULL;\n+  MyTag *new_tag = nullptr;\n+  MyTag *class_tag = nullptr;\n@@ -110,1 +110,1 @@\n-  jclass obj_class = NULL;\n+  jclass obj_class = nullptr;\n@@ -127,1 +127,1 @@\n-  if (class_tag != NULL && class_tag->kind != rclass) {\n+  if (class_tag != nullptr && class_tag->kind != rclass) {\n@@ -145,1 +145,1 @@\n-  if (NULL == new_ref) {\n+  if (nullptr == new_ref) {\n@@ -218,1 +218,1 @@\n-  const char* const cname = ctag != NULL ? ctag->name : \"\";\n+  const char* const cname = ctag != nullptr ? ctag->name : \"\";\n@@ -261,1 +261,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -266,1 +266,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -284,1 +284,1 @@\n-  const MyTag* const tag = newTag(rmark, (const MyTag*)(intptr_t)class_tag, size, NULL);\n+  const MyTag* const tag = newTag(rmark, (const MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -303,1 +303,1 @@\n-    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, NULL);\n+    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -329,1 +329,1 @@\n-    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, NULL);\n+    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -350,1 +350,1 @@\n-  MyTag* referrer = NULL;\n+  MyTag* referrer = nullptr;\n@@ -360,1 +360,1 @@\n-    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, NULL);\n+    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -385,1 +385,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -390,2 +390,2 @@\n-  fakeRoot = newTag(rother, (const MyTag *)NULL, 0, \"FAKE_ROOT\");\n-  missed = newTag(rother, (const MyTag *)NULL, 0, \"MISSED\");\n+  fakeRoot = newTag(rother, nullptr, 0, \"FAKE_ROOT\");\n+  missed = newTag(rother, nullptr, 0, \"MISSED\");\n@@ -407,1 +407,1 @@\n-    err = jvmti->GetClassSignature(k, &classSig, NULL);\n+    err = jvmti->GetClassSignature(k, &classSig, nullptr);\n@@ -417,1 +417,1 @@\n-      if (*classSig == 'L' && slash != NULL) {\n+      if (*classSig == 'L' && slash != nullptr) {\n@@ -442,1 +442,1 @@\n-  env->PopLocalFrame(NULL);\n+  env->PopLocalFrame(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/heapref\/heapref.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-static jvmtiEnv *jvmti = NULL;\n+static jvmtiEnv *jvmti = nullptr;\n@@ -73,2 +73,2 @@\n-static MyTag *fakeRoot = NULL;\n-static MyTag *missed = NULL;\n+static MyTag *fakeRoot = nullptr;\n+static MyTag *missed = nullptr;\n@@ -85,1 +85,1 @@\n-  MyTag* new_tag = NULL;\n+  MyTag* new_tag = nullptr;\n@@ -88,1 +88,1 @@\n-  if (NULL == new_tag) {\n+  if (nullptr == new_tag) {\n@@ -98,1 +98,1 @@\n-  new_tag->ref = NULL;\n+  new_tag->ref = nullptr;\n@@ -106,2 +106,2 @@\n-  MyTag *new_tag = NULL;\n-  MyTag *class_tag = NULL;\n+  MyTag *new_tag = nullptr;\n+  MyTag *class_tag = nullptr;\n@@ -110,1 +110,1 @@\n-  jclass obj_class = NULL;\n+  jclass obj_class = nullptr;\n@@ -127,1 +127,1 @@\n-  if (class_tag != NULL && class_tag->kind != rclass) {\n+  if (class_tag != nullptr && class_tag->kind != rclass) {\n@@ -145,1 +145,1 @@\n-  if (NULL == new_ref) {\n+  if (nullptr == new_ref) {\n@@ -218,1 +218,1 @@\n-  const char* const cname = ctag != NULL ? ctag->name : \"\";\n+  const char* const cname = ctag != nullptr ? ctag->name : \"\";\n@@ -259,1 +259,1 @@\n-  if (options != NULL && strcmp(options, \"printdump\") == 0) {\n+  if (options != nullptr && strcmp(options, \"printdump\") == 0) {\n@@ -264,1 +264,1 @@\n-  if (res != JNI_OK || jvmti == NULL) {\n+  if (res != JNI_OK || jvmti == nullptr) {\n@@ -282,1 +282,1 @@\n-  const MyTag* const tag = newTag(rmark, (const MyTag*)(intptr_t)class_tag, size, NULL);\n+  const MyTag* const tag = newTag(rmark, (const MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -301,1 +301,1 @@\n-    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, NULL);\n+    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -327,1 +327,1 @@\n-    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, NULL);\n+    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -348,1 +348,1 @@\n-  MyTag* referrer = NULL;\n+  MyTag* referrer = nullptr;\n@@ -358,1 +358,1 @@\n-    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, NULL);\n+    MyTag* tag = newTag(kind, (MyTag*)(intptr_t)class_tag, size, nullptr);\n@@ -383,1 +383,1 @@\n-  if (jvmti == NULL) {\n+  if (jvmti == nullptr) {\n@@ -388,2 +388,2 @@\n-  fakeRoot = newTag(rother, (const MyTag *)NULL, 0, \"FAKE_ROOT\");\n-  missed = newTag(rother, (const MyTag *)NULL, 0, \"MISSED\");\n+  fakeRoot = newTag(rother, nullptr, 0, \"FAKE_ROOT\");\n+  missed = newTag(rother, nullptr, 0, \"MISSED\");\n@@ -405,1 +405,1 @@\n-    err = jvmti->GetClassSignature(k, &classSig, NULL);\n+    err = jvmti->GetClassSignature(k, &classSig, nullptr);\n@@ -415,1 +415,1 @@\n-      if (*classSig == 'L' && slash != NULL) {\n+      if (*classSig == 'L' && slash != nullptr) {\n@@ -440,1 +440,1 @@\n-  env->PopLocalFrame(NULL);\n+  env->PopLocalFrame(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/refignore\/refignore.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-           value to be set to NULL.\n+           value to be set to nullptr.\n@@ -108,1 +108,1 @@\n-  check_val(get_thread_local(NULL), 0, \"thread initial\");\n+  check_val(get_thread_local(nullptr), 0, \"thread initial\");\n@@ -111,2 +111,2 @@\n-  check_val(get_thread_local(NULL), 35, \"thread set non-zero\");\n-  set_thread_local(NULL, 0);\n+  check_val(get_thread_local(nullptr), 35, \"thread set non-zero\");\n+  set_thread_local(nullptr, 0);\n@@ -114,1 +114,1 @@\n-  check_val(get_thread_local(NULL), 0, \"thread set zero\");\n+  check_val(get_thread_local(nullptr), 0, \"thread set zero\");\n@@ -164,1 +164,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT,nullptr);\n@@ -178,1 +178,1 @@\n-  check_val(get_thread_local(NULL), 0, \"thread check\");\n+  check_val(get_thread_local(nullptr), 0, \"thread check\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/setNullVMInit\/JvmtiTest\/JvmtiTest.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n@@ -149,1 +149,1 @@\n-    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/timers\/JvmtiTest\/JvmtiTest.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-            env->GetObjectClass(_obj)) != NULL))\\\n+            env->GetObjectClass(_obj)) != nullptr))\\\n@@ -42,1 +42,1 @@\n-            env->GetStaticMethodID(_class, _methodName, _sig)) != NULL))\\\n+            env->GetStaticMethodID(_class, _methodName, _sig)) != nullptr))\\\n@@ -47,1 +47,1 @@\n-            env->GetMethodID(_class, _methodName, _sig)) != NULL))\\\n+            env->GetMethodID(_class, _methodName, _sig)) != nullptr))\\\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/StackTraceController.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-            env->FindClass(_className)) != NULL))\\\n+            env->FindClass(_className)) != nullptr))\\\n@@ -39,1 +39,1 @@\n-            env->GetObjectClass(_obj)) != NULL))\\\n+            env->GetObjectClass(_obj)) != nullptr))\\\n@@ -44,1 +44,1 @@\n-            env->GetStaticFieldID(_class, _fieldName, _fieldSig)) != NULL))\\\n+            env->GetStaticFieldID(_class, _fieldName, _fieldSig)) != nullptr))\\\n@@ -57,1 +57,1 @@\n-            env->GetFieldID(_class, _fieldName, _fieldSig)) != NULL))\\\n+            env->GetFieldID(_class, _fieldName, _fieldSig)) != nullptr))\\\n@@ -93,1 +93,1 @@\n-            env->GetStaticMethodID(_class, _methodName, _sig)) != NULL))\\\n+            env->GetStaticMethodID(_class, _methodName, _sig)) != nullptr))\\\n@@ -98,1 +98,1 @@\n-            env->GetMethodID(_class, _methodName, _sig)) != NULL))\\\n+            env->GetMethodID(_class, _methodName, _sig)) != nullptr))\\\n@@ -137,1 +137,1 @@\n-            env->NewObject(_class, method, _params)) != NULL))\\\n+            env->NewObject(_class, method, _params)) != nullptr))\\\n@@ -490,1 +490,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -494,1 +494,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -498,1 +498,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -502,2 +502,2 @@\n-        if (!NSK_JNI_VERIFY(env, (ThreadState = env->FindClass(\"java\/lang\/Thread$State\")) != NULL))\n-            return NULL;\n+        if (!NSK_JNI_VERIFY(env, (ThreadState = env->FindClass(\"java\/lang\/Thread$State\")) != nullptr))\n+            return nullptr;\n@@ -505,2 +505,2 @@\n-        if (!NSK_JNI_VERIFY(env, (method = env->GetStaticMethodID(ThreadState, \"valueOf\", \"(Ljava\/lang\/String;)Ljava\/lang\/Thread$State;\")) != NULL))\n-            return NULL;\n+        if (!NSK_JNI_VERIFY(env, (method = env->GetStaticMethodID(ThreadState, \"valueOf\", \"(Ljava\/lang\/String;)Ljava\/lang\/Thread$State;\")) != nullptr))\n+            return nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/ThreadController.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-             env->FindClass(_className)) != NULL))\\\n+             env->FindClass(_className)) != nullptr))\\\n@@ -35,1 +35,1 @@\n-             env->GetObjectClass(_obj)) != NULL))\\\n+             env->GetObjectClass(_obj)) != nullptr))\\\n@@ -44,1 +44,1 @@\n-             env->GetFieldID(_class, _fieldName, _fieldSig)) != NULL))\\\n+             env->GetFieldID(_class, _fieldName, _fieldSig)) != nullptr))\\\n@@ -49,1 +49,1 @@\n-             env->GetMethodID(_class, _methodName, _sig)) != NULL)) \\\n+             env->GetMethodID(_class, _methodName, _sig)) != nullptr)) \\\n@@ -75,1 +75,1 @@\n-        if (step1 == NULL) {\n+        if (step1 == nullptr) {\n@@ -80,1 +80,1 @@\n-        if (step2 == NULL) {\n+        if (step2 == nullptr) {\n@@ -85,1 +85,1 @@\n-        if (step3 == NULL) {\n+        if (step3 == nullptr) {\n@@ -91,1 +91,1 @@\n-                if (inner == NULL) {\n+                if (inner == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/Deadlock.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-             env->FindClass(_className)) != NULL))\\\n+             env->FindClass(_className)) != nullptr))\\\n@@ -35,1 +35,1 @@\n-             env->GetObjectClass(_obj)) != NULL))\\\n+             env->GetObjectClass(_obj)) != nullptr))\\\n@@ -44,1 +44,1 @@\n-             env->GetFieldID(_class, _fieldName, _fieldSig)) != NULL))\\\n+             env->GetFieldID(_class, _fieldName, _fieldSig)) != nullptr))\\\n@@ -49,1 +49,1 @@\n-             env->GetMethodID(_class, _methodName, _sig)) != NULL))\\\n+             env->GetMethodID(_class, _methodName, _sig)) != nullptr))\\\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/LockingThreads.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-            env->FindClass(_className)) != NULL))\\\n+            env->FindClass(_className)) != nullptr))\\\n@@ -37,1 +37,1 @@\n-            env->GetObjectClass(_obj)) != NULL))\\\n+            env->GetObjectClass(_obj)) != nullptr))\\\n@@ -42,1 +42,1 @@\n-            env->GetStaticFieldID(_class, _fieldName, _fieldSig)) != NULL))\\\n+            env->GetStaticFieldID(_class, _fieldName, _fieldSig)) != nullptr))\\\n@@ -55,1 +55,1 @@\n-            env->GetFieldID(_class, _fieldName, _fieldSig)) != NULL))\\\n+            env->GetFieldID(_class, _fieldName, _fieldSig)) != nullptr))\\\n@@ -87,1 +87,1 @@\n-            env->GetStaticMethodID(_class, _methodName, _sig)) != NULL))\\\n+            env->GetStaticMethodID(_class, _methodName, _sig)) != nullptr))\\\n@@ -92,1 +92,1 @@\n-            env->GetMethodID(_class, _methodName, _sig)) != NULL))\\\n+            env->GetMethodID(_class, _methodName, _sig)) != nullptr))\\\n@@ -127,1 +127,1 @@\n-            env->NewObject(_class, method, _params)) != NULL))\\\n+            env->NewObject(_class, method, _params)) != nullptr))\\\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/RecursiveMonitoringThread.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    \"JNI method GetFieldID : Return is NULL from exceptionjni001.cpp : \";\n+    \"JNI method GetFieldID : Return is null from exceptionjni001.cpp : \";\n@@ -38,1 +38,1 @@\n-    \"JNI method GetFieldID : Return is NULL from Unknown File : \";\n+    \"JNI method GetFieldID : Return is null from Unknown File : \";\n@@ -55,1 +55,1 @@\n-  char* end_ptr = NULL;\n+  char* end_ptr = nullptr;\n@@ -58,2 +58,2 @@\n-  if (end_ptr == NULL || *end_ptr != '\\0') {\n-    fprintf(stderr, \"end_ptr == NULL or *end_ptr terminating from %s\\n\", message);\n+  if (end_ptr == nullptr || *end_ptr != '\\0') {\n+    fprintf(stderr, \"end_ptr == null or *end_ptr terminating from %s\\n\", message);\n@@ -104,1 +104,1 @@\n-  ec_jni->GetFieldID(cls, \"whatever\", \"does not matter\", __LINE__, NULL);\n+  ec_jni->GetFieldID(cls, \"whatever\", \"does not matter\", __LINE__, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/ExceptionCheckingJniEnv\/exceptionjni001\/exceptionjni001.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-static jvmtiEnv *jvmti = NULL; \/* JVMTI env *\/\n+static jvmtiEnv *jvmti = nullptr; \/* JVMTI env *\/\n@@ -109,1 +109,1 @@\n-static const char *shortTestName = NULL; \/* name of the test without package prefix *\/\n+static const char *shortTestName = nullptr; \/* name of the test without package prefix *\/\n@@ -111,1 +111,1 @@\n-static class_info *clsInfo = NULL, *clsInfoFst = NULL;\n+static class_info *clsInfo = nullptr, *clsInfoFst = nullptr;\n@@ -163,1 +163,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &cls_sig, \/*&generic*\/NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &cls_sig, \/*&generic*\/nullptr)))\n@@ -166,2 +166,2 @@\n-            if (shortTestName != NULL) {\n-                if (strstr((const char*) cls_sig, shortTestName) != NULL) {\n+            if (shortTestName != nullptr) {\n+                if (strstr((const char*) cls_sig, shortTestName) != nullptr) {\n@@ -201,1 +201,1 @@\n-    getVerdict(NULL, \"CompiledMethodLoad\");\n+    getVerdict(nullptr, \"CompiledMethodLoad\");\n@@ -210,1 +210,1 @@\n-    getVerdict(NULL, \"CompiledMethodUnload\");\n+    getVerdict(nullptr, \"CompiledMethodUnload\");\n@@ -218,1 +218,1 @@\n-    getVerdict(NULL, \"DataDumpRequest\");\n+    getVerdict(nullptr, \"DataDumpRequest\");\n@@ -229,1 +229,1 @@\n-    getVerdict(NULL, \"DynamicCodeGenerated\");\n+    getVerdict(nullptr, \"DynamicCodeGenerated\");\n@@ -289,1 +289,1 @@\n-    getVerdict(NULL, \"GarbageCollectionFinish\");\n+    getVerdict(nullptr, \"GarbageCollectionFinish\");\n@@ -297,1 +297,1 @@\n-    getVerdict(NULL, \"GarbageCollectionStart\");\n+    getVerdict(nullptr, \"GarbageCollectionStart\");\n@@ -350,1 +350,1 @@\n-    getVerdict(NULL, \"ObjectFree\");\n+    getVerdict(nullptr, \"ObjectFree\");\n@@ -492,1 +492,1 @@\n-    jmethodID mid = NULL;\n+    jmethodID mid = nullptr;\n@@ -494,2 +494,2 @@\n-    if (jvmti == NULL) {\n-        printf(\"ERROR(%s,%d): JVMTIagent was not properly loaded: JVMTI env = NULL\\n\",\n+    if (jvmti == nullptr) {\n+        printf(\"ERROR(%s,%d): JVMTIagent was not properly loaded: JVMTI env = null\\n\",\n@@ -557,1 +557,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (shortTestName = jni_env->GetStringUTFChars(shortName, NULL)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (shortTestName = jni_env->GetStringUTFChars(shortName, nullptr)) != nullptr)) {\n@@ -564,1 +564,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (rasCls = jni_env->NewGlobalRef(cls)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, (rasCls = jni_env->NewGlobalRef(cls)) != nullptr)) {\n@@ -579,2 +579,2 @@\n-    class_info *_clsInfo = NULL;\n-    jmethodID mid = NULL;\n+    class_info *_clsInfo = nullptr;\n+    jmethodID mid = nullptr;\n@@ -585,1 +585,1 @@\n-    if (_clsInfo == NULL)\n+    if (_clsInfo == nullptr)\n@@ -591,1 +591,1 @@\n-    if (!NSK_JNI_VERIFY(jni_env, ((*_clsInfo).cls = jni_env->NewGlobalRef(clazz)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni_env, ((*_clsInfo).cls = jni_env->NewGlobalRef(clazz)) != nullptr)) {\n@@ -600,1 +600,1 @@\n-        jni_env->GetStaticMethodID(rasCls, \"loadFromClassFile\", \"(Ljava\/lang\/String;)[B\")) != NULL))\n+        jni_env->GetStaticMethodID(rasCls, \"loadFromClassFile\", \"(Ljava\/lang\/String;)[B\")) != nullptr))\n@@ -612,1 +612,1 @@\n-    _clsInfo->next = NULL;\n+    _clsInfo->next = nullptr;\n@@ -614,1 +614,1 @@\n-    if (clsInfo != NULL) {\n+    if (clsInfo != nullptr) {\n@@ -630,1 +630,1 @@\n-    while (clsInfoCurr != NULL) {\n+    while (clsInfoCurr != nullptr) {\n@@ -643,1 +643,1 @@\n-    clsInfoFst = NULL;\n+    clsInfoFst = nullptr;\n@@ -648,1 +648,1 @@\n-    char *clazzsig = NULL;\n+    char *clazzsig = nullptr;\n@@ -652,1 +652,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(clazz, &clazzsig, \/*&generic*\/NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(clazz, &clazzsig, \/*&generic*\/nullptr)))\n@@ -662,1 +662,1 @@\n-        while (clsInfoCurr != NULL) {\n+        while (clsInfoCurr != nullptr) {\n@@ -738,1 +738,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -754,1 +754,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr)))\n@@ -764,1 +764,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_EXIT, nullptr)))\n@@ -780,1 +780,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, NULL)))\n+            if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION_CATCH, nullptr)))\n@@ -825,1 +825,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr)))\n@@ -834,1 +834,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -843,1 +843,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_LOAD, nullptr)))\n@@ -852,1 +852,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_PREPARE, nullptr)))\n@@ -861,1 +861,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)))\n@@ -870,1 +870,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_UNLOAD, nullptr)))\n@@ -879,1 +879,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DATA_DUMP_REQUEST, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DATA_DUMP_REQUEST, nullptr)))\n@@ -888,1 +888,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_DYNAMIC_CODE_GENERATED, nullptr)))\n@@ -897,1 +897,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -906,1 +906,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_ACCESS, nullptr)))\n@@ -915,1 +915,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FIELD_MODIFICATION, nullptr)))\n@@ -924,1 +924,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_FRAME_POP, nullptr)))\n@@ -933,1 +933,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, nullptr)))\n@@ -942,1 +942,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, nullptr)))\n@@ -951,1 +951,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr)))\n@@ -960,1 +960,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr)))\n@@ -969,1 +969,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAIT, nullptr)))\n@@ -978,1 +978,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_MONITOR_WAITED, nullptr)))\n@@ -987,1 +987,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr)))\n@@ -996,1 +996,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr)))\n@@ -1005,1 +1005,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_END, nullptr)))\n@@ -1014,1 +1014,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_THREAD_START, nullptr)))\n@@ -1023,1 +1023,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr)))\n@@ -1032,1 +1032,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr)))\n@@ -1041,1 +1041,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, nullptr)))\n@@ -1050,1 +1050,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_OBJECT_ALLOC, nullptr)))\n@@ -1156,1 +1156,1 @@\n-        if (jni_env == NULL) { \/* some event callbacks have no pointer to jni *\/\n+        if (jni_env == nullptr) { \/* some event callbacks have no pointer to jni *\/\n@@ -1184,1 +1184,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -1201,1 +1201,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/JVMTIagent.cpp","additions":64,"deletions":64,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-  if (options != NULL) {\n+  if (options != nullptr) {\n@@ -50,1 +50,1 @@\n-      if (options->names[i] != NULL) {\n+      if (options->names[i] != nullptr) {\n@@ -53,1 +53,1 @@\n-      if (options->values[i] != NULL) {\n+      if (options->values[i] != nullptr) {\n@@ -74,1 +74,1 @@\n-    if (optionsString == NULL) {\n+    if (optionsString == nullptr) {\n@@ -76,1 +76,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -82,1 +82,1 @@\n-    while (name != NULL && i < NSK_AOD_MAX_OPTIONS) {\n+    while (name != nullptr && i < NSK_AOD_MAX_OPTIONS) {\n@@ -84,1 +84,1 @@\n-      if (sep == NULL) { \/\/ name not found\n+      if (sep == nullptr) { \/\/ name not found\n@@ -87,1 +87,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -95,1 +95,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -98,1 +98,1 @@\n-      if (sep != NULL) {\n+      if (sep != nullptr) {\n@@ -108,1 +108,1 @@\n-        name = NULL;\n+        name = nullptr;\n@@ -111,1 +111,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -122,2 +122,2 @@\n-    if (!NSK_VERIFY((options = (Options*) nsk_aod_createOptionsObject(optionsString)) != NULL))\n-        return NULL;\n+    if (!NSK_VERIFY((options = (Options*) nsk_aod_createOptionsObject(optionsString)) != nullptr))\n+        return nullptr;\n@@ -127,1 +127,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -146,3 +146,3 @@\n-    if (!NSK_VERIFY(options != NULL)) {\n-        NSK_COMPLAIN0(\"Options NULL\\n\");\n-        return NULL;\n+    if (!NSK_VERIFY(options != nullptr)) {\n+        NSK_COMPLAIN0(\"Options null\\n\");\n+        return nullptr;\n@@ -159,1 +159,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -165,2 +165,2 @@\n-    if (!NSK_VERIFY(options != NULL)) {\n-        NSK_COMPLAIN0(\"Options NULL\\n\");\n+    if (!NSK_VERIFY(options != nullptr)) {\n+        NSK_COMPLAIN0(\"Options null\\n\");\n@@ -191,3 +191,3 @@\n-static jclass targetAppClass = NULL;\n-static jmethodID agentLoadedMethod = NULL;\n-static jmethodID agentFinishedMethod = NULL;\n+static jclass targetAppClass = nullptr;\n+static jmethodID agentLoadedMethod = nullptr;\n+static jmethodID agentFinishedMethod = nullptr;\n@@ -201,1 +201,1 @@\n-    if (targetAppClass == NULL) {\n+    if (targetAppClass == nullptr) {\n@@ -208,1 +208,1 @@\n-            jni->FindClass(TARGET_APP_CLASS_NAME)) != NULL)) {\n+            jni->FindClass(TARGET_APP_CLASS_NAME)) != nullptr)) {\n@@ -213,1 +213,1 @@\n-            jni->NewGlobalRef(localTargetAppClass)) != NULL)) {\n+            jni->NewGlobalRef(localTargetAppClass)) != nullptr)) {\n@@ -218,1 +218,1 @@\n-    if (agentLoadedMethod == NULL) {\n+    if (agentLoadedMethod == nullptr) {\n@@ -220,1 +220,1 @@\n-            jni->GetStaticMethodID(targetAppClass, AGENT_LOADED_METHOD_NAME, AGENT_LOADED_METHOD_SIGNATURE)) != NULL))\n+            jni->GetStaticMethodID(targetAppClass, AGENT_LOADED_METHOD_NAME, AGENT_LOADED_METHOD_SIGNATURE)) != nullptr))\n@@ -225,1 +225,1 @@\n-        jni->NewStringUTF(agentName)) != NULL))\n+        jni->NewStringUTF(agentName)) != nullptr))\n@@ -255,1 +255,1 @@\n-    if (agentFinishedMethod == NULL) {\n+    if (agentFinishedMethod == nullptr) {\n@@ -257,1 +257,1 @@\n-            jni->GetStaticMethodID(targetAppClass, AGENT_FINISHED_METHOD_NAME, AGENT_FINISHED_METHOD_SIGNATURE)) != NULL))\n+            jni->GetStaticMethodID(targetAppClass, AGENT_FINISHED_METHOD_NAME, AGENT_FINISHED_METHOD_SIGNATURE)) != nullptr))\n@@ -261,1 +261,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (agentNameString = jni->NewStringUTF(agentName)) != NULL))\n+    if (!NSK_JNI_VERIFY(jni, (agentNameString = jni->NewStringUTF(agentName)) != nullptr))\n@@ -279,1 +279,1 @@\n-    NSK_VERIFY(jni != NULL);\n+    NSK_VERIFY(jni != nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/aod.cpp","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jboolean*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jboolean*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/BooleanArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -47,1 +47,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -52,1 +52,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -55,1 +55,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -60,2 +60,2 @@\n-    pa = (jbyte*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jbyte*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -66,1 +66,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -71,1 +71,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ByteArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jchar*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jchar*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/CharArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jdouble*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jdouble*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/DoubleArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jfloat*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jfloat*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/FloatArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jint*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jint*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/IntArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jlong*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jlong*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/LongArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = (jshort*) ec_jni->GetPrimitiveArrayCritical(arr, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = (jshort*) ec_jni->GetPrimitiveArrayCritical(arr, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned NULL\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ShortArrayCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -48,1 +48,1 @@\n-  if (objFieldId == NULL) {\n+  if (objFieldId == nullptr) {\n@@ -53,1 +53,1 @@\n-  ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+  ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -56,1 +56,1 @@\n-  start_time = time(NULL);\n+  start_time = time(nullptr);\n@@ -61,2 +61,2 @@\n-    pa = ec_jni->GetStringCritical(str, NULL, TRACE_JNI_CALL);\n-    if (pa != NULL) {\n+    pa = ec_jni->GetStringCritical(str, nullptr, TRACE_JNI_CALL);\n+    if (pa != nullptr) {\n@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetStringCritical returned NULL\");\n+      jni_env->FatalError(\"GetStringCritical returned null\");\n@@ -72,1 +72,1 @@\n-    current_time = time(NULL);\n+    current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/StringCriticalLocker.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -47,1 +47,1 @@\n-        if (objFieldId == NULL) {\n+        if (objFieldId == nullptr) {\n@@ -52,2 +52,2 @@\n-        ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n-        start_time = time(NULL);\n+        ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n+        start_time = time(nullptr);\n@@ -61,1 +61,1 @@\n-                current_time = time(NULL);\n+                current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIGlobalRefLocker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -46,1 +46,1 @@\n-        if (objFieldId == NULL) {\n+        if (objFieldId == nullptr) {\n@@ -51,2 +51,2 @@\n-        ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n-        start_time = time(NULL);\n+        ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n+        start_time = time(nullptr);\n@@ -60,1 +60,1 @@\n-                current_time = time(NULL);\n+                current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNILocalRefLocker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -46,1 +46,1 @@\n-        if (objFieldId == NULL) {\n+        if (objFieldId == nullptr) {\n@@ -52,1 +52,1 @@\n-        ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+        ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -54,1 +54,1 @@\n-        start_time = time(NULL);\n+        start_time = time(nullptr);\n@@ -66,1 +66,1 @@\n-                current_time = time(NULL);\n+                current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIRefLocker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static jfieldID objFieldId = NULL;\n+static jfieldID objFieldId = nullptr;\n@@ -46,1 +46,1 @@\n-        if (objFieldId == NULL) {\n+        if (objFieldId == nullptr) {\n@@ -51,1 +51,1 @@\n-        ec_jni->SetObjectField(o, objFieldId, NULL, TRACE_JNI_CALL);\n+        ec_jni->SetObjectField(o, objFieldId, nullptr, TRACE_JNI_CALL);\n@@ -53,1 +53,1 @@\n-        start_time = time(NULL);\n+        start_time = time(nullptr);\n@@ -61,1 +61,1 @@\n-                current_time = time(NULL);\n+                current_time = time(nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIWeakGlobalRefLocker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-  if (fullname == NULL) {\n-    return NULL;\n+  if (fullname == nullptr) {\n+    return nullptr;\n@@ -55,1 +55,1 @@\n-      : _env(env), _base_message(base_message), _error_message(NULL),\n+      : _env(env), _base_message(base_message), _error_message(nullptr),\n@@ -64,1 +64,1 @@\n-      : _env(env), _base_message(base_message), _error_message(NULL),\n+      : _env(env), _base_message(base_message), _error_message(nullptr),\n@@ -74,1 +74,1 @@\n-      : _env(env), _base_message(base_message), _error_message(NULL),\n+      : _env(env), _base_message(base_message), _error_message(nullptr),\n@@ -83,1 +83,1 @@\n-      : _env(env), _base_message(base_message), _error_message(NULL),\n+      : _env(env), _base_message(base_message), _error_message(nullptr),\n@@ -96,1 +96,1 @@\n-    if (_error_message != NULL) {\n+    if (_error_message != nullptr) {\n@@ -176,1 +176,1 @@\n-    if (full_message == NULL) {\n+    if (full_message == nullptr) {\n@@ -202,2 +202,2 @@\n-    if (ptr == NULL) {\n-      _error_message = \"Return is NULL\";\n+    if (ptr == nullptr) {\n+      _error_message = \"Return is null\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/ExceptionCheckingJniEnv.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n- *  if (klass == NULL) {\n- *      printf(\"Error: GetObjectClass returned NULL\\n\");\n+ *  if (klass == nullptr) {\n+ *      printf(\"Error: GetObjectClass returned null\\n\");\n@@ -51,1 +51,1 @@\n- *  Where now the JNI Exception checking and the NULL return checking are done\n+ *  Where now the JNI Exception checking and the null return checking are done\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/ExceptionCheckingJniEnv.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n-static jobject* globalReferences = NULL;\n-static jweak* weakReferences = NULL;\n+static jobject* globalReferences = nullptr;\n+static jweak* weakReferences = nullptr;\n@@ -40,1 +40,1 @@\n-        if (globalReferences == NULL)\n+        if (globalReferences == nullptr)\n@@ -44,1 +44,1 @@\n-                if (globalReferences == NULL)\n+                if (globalReferences == nullptr)\n@@ -46,1 +46,1 @@\n-                        NSK_COMPLAIN0(\"malloc return NULL\\n\");\n+                        NSK_COMPLAIN0(\"malloc return null\\n\");\n@@ -52,1 +52,1 @@\n-                        globalReferences[i] = NULL;\n+                        globalReferences[i] = nullptr;\n@@ -60,1 +60,1 @@\n-                if (reference == NULL)\n+                if (reference == nullptr)\n@@ -64,1 +64,1 @@\n-                        if (reference == NULL)\n+                        if (reference == nullptr)\n@@ -66,1 +66,1 @@\n-                                NSK_COMPLAIN0(\"NewGlobalRef return NULL\\n\");\n+                                NSK_COMPLAIN0(\"NewGlobalRef return null\\n\");\n@@ -70,1 +70,1 @@\n-                                    \"NewGlobalRef return NULL\");\n+                                    \"NewGlobalRef return null\");\n@@ -90,1 +90,1 @@\n-        if (reference == NULL)\n+        if (reference == nullptr)\n@@ -92,1 +92,1 @@\n-                NSK_COMPLAIN1(\"globalReferences[%d] = NULL, possible wrong index is passed\\n\", index);\n+                NSK_COMPLAIN1(\"globalReferences[%d] = null, possible wrong index is passed\\n\", index);\n@@ -96,1 +96,1 @@\n-                    \"Requested globalReferences[] element is NULL, possible wrong index is passed\");\n+                    \"Requested globalReferences[] element is null, possible wrong index is passed\");\n@@ -101,1 +101,1 @@\n-        globalReferences[index] = NULL;\n+        globalReferences[index] = nullptr;\n@@ -112,1 +112,1 @@\n-        if (reference == NULL)\n+        if (reference == nullptr)\n@@ -114,1 +114,1 @@\n-                NSK_COMPLAIN0(\"NewLocalRef return NULL\\n\");\n+                NSK_COMPLAIN0(\"NewLocalRef return null\\n\");\n@@ -118,1 +118,1 @@\n-                    \"NewLocalRef return NULL\");\n+                    \"NewLocalRef return null\");\n@@ -139,1 +139,1 @@\n-        if (weakReferences == NULL)\n+        if (weakReferences == nullptr)\n@@ -143,1 +143,1 @@\n-                if (weakReferences == NULL)\n+                if (weakReferences == nullptr)\n@@ -145,1 +145,1 @@\n-                        NSK_COMPLAIN0(\"malloc return NULL\\n\");\n+                        NSK_COMPLAIN0(\"malloc return null\\n\");\n@@ -152,1 +152,1 @@\n-                        weakReferences[i] = NULL;\n+                        weakReferences[i] = nullptr;\n@@ -160,1 +160,1 @@\n-                if (reference == NULL)\n+                if (reference == nullptr)\n@@ -164,1 +164,1 @@\n-                        if (reference == NULL)\n+                        if (reference == nullptr)\n@@ -166,1 +166,1 @@\n-                                NSK_COMPLAIN0(\"NewWeakGlobalRef return NULL\\n\");\n+                                NSK_COMPLAIN0(\"NewWeakGlobalRef return null\\n\");\n@@ -170,1 +170,1 @@\n-                                    \"NewWeakGlobalRef return NULL\");\n+                                    \"NewWeakGlobalRef return null\");\n@@ -190,1 +190,1 @@\n-        if (reference == NULL)\n+        if (reference == nullptr)\n@@ -192,1 +192,1 @@\n-                NSK_COMPLAIN1(\"weakReferences[%d] = NULL, possible wrong index is passed\\n\", index);\n+                NSK_COMPLAIN1(\"weakReferences[%d] = null, possible wrong index is passed\\n\", index);\n@@ -196,1 +196,1 @@\n-                    \"Requested weakReferences[] element is NULL, possible wrong index is passed\");\n+                    \"Requested weakReferences[] element is null, possible wrong index is passed\");\n@@ -199,1 +199,1 @@\n-        if (env->IsSameObject(reference, NULL) == JNI_TRUE)\n+        if (env->IsSameObject(reference, nullptr) == JNI_TRUE)\n@@ -210,1 +210,1 @@\n-        weakReferences[index] = NULL;\n+        weakReferences[index] = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/JNIreferences.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    if (throwable != NULL) {\n+    if (throwable != nullptr) {\n@@ -110,1 +110,1 @@\n-   select(0, NULL, NULL, NULL, &timeout);\n+   select(0, nullptr, nullptr, nullptr, &timeout);\n@@ -134,1 +134,1 @@\n-   JavaVMOption *options = NULL;\n+   JavaVMOption *options = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/jni_tools.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,2 +159,2 @@\n-    jvmti = NULL;\n-    p_segment1 = p_segment2 = phase_to_check = NULL;\n+    jvmti = nullptr;\n+    p_segment1 = p_segment2 = phase_to_check = nullptr;\n@@ -167,2 +167,2 @@\n-    p_segment1 = nsk_jvmti_findOptionStringValue(\"segment1\", NULL);\n-    if (!NSK_VERIFY(p_segment1 != NULL)) {\n+    p_segment1 = nsk_jvmti_findOptionStringValue(\"segment1\", nullptr);\n+    if (!NSK_VERIFY(p_segment1 != nullptr)) {\n@@ -176,2 +176,2 @@\n-    p_segment2 = nsk_jvmti_findOptionStringValue(\"segment2\", NULL);\n-    if (p_segment2 != NULL) {\n+    p_segment2 = nsk_jvmti_findOptionStringValue(\"segment2\", nullptr);\n+    if (p_segment2 != nullptr) {\n@@ -184,1 +184,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -188,2 +188,2 @@\n-    phase_to_check = nsk_jvmti_findOptionStringValue(\"phasetocheck\", NULL);\n-    if (!NSK_VERIFY(phase_to_check != NULL)) {\n+    phase_to_check = nsk_jvmti_findOptionStringValue(\"phasetocheck\", nullptr);\n+    if (!NSK_VERIFY(phase_to_check != nullptr)) {\n@@ -230,1 +230,1 @@\n-                     JVMTI_ENABLE, sizeof(eventsList)\/sizeof(jvmtiEvent), eventsList, NULL))) {\n+                     JVMTI_ENABLE, sizeof(eventsList)\/sizeof(jvmtiEvent), eventsList, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/AddToBootstrapClassLoaderSearch\/bootclssearch_agent.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,2 +159,2 @@\n-    jvmti = NULL;\n-    p_segment1 = p_segment2 = phase_to_check = NULL;\n+    jvmti = nullptr;\n+    p_segment1 = p_segment2 = phase_to_check = nullptr;\n@@ -167,2 +167,2 @@\n-    p_segment1 = nsk_jvmti_findOptionStringValue(\"segment1\", NULL);\n-    if (!NSK_VERIFY(p_segment1 != NULL)) {\n+    p_segment1 = nsk_jvmti_findOptionStringValue(\"segment1\", nullptr);\n+    if (!NSK_VERIFY(p_segment1 != nullptr)) {\n@@ -176,2 +176,2 @@\n-    p_segment2 = nsk_jvmti_findOptionStringValue(\"segment2\", NULL);\n-    if (p_segment2 != NULL) {\n+    p_segment2 = nsk_jvmti_findOptionStringValue(\"segment2\", nullptr);\n+    if (p_segment2 != nullptr) {\n@@ -184,1 +184,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -188,2 +188,2 @@\n-    phase_to_check = nsk_jvmti_findOptionStringValue(\"phasetocheck\", NULL);\n-    if (!NSK_VERIFY(phase_to_check != NULL)) {\n+    phase_to_check = nsk_jvmti_findOptionStringValue(\"phasetocheck\", nullptr);\n+    if (!NSK_VERIFY(phase_to_check != nullptr)) {\n@@ -230,1 +230,1 @@\n-                     JVMTI_ENABLE, sizeof(eventsList)\/sizeof(jvmtiEvent), eventsList, NULL))) {\n+                     JVMTI_ENABLE, sizeof(eventsList)\/sizeof(jvmtiEvent), eventsList, nullptr))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/AddToSystemClassLoaderSearch\/systemclssearch_agent.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -224,1 +224,1 @@\n-        if (!NSK_VERIFY(constantPool != NULL)) {\n+        if (!NSK_VERIFY(constantPool != nullptr)) {\n@@ -265,1 +265,1 @@\n-                if (!NSK_VERIFY(utf8 != NULL)) {\n+                if (!NSK_VERIFY(utf8 != nullptr)) {\n@@ -298,1 +298,1 @@\n-            if (constantPool[i] != NULL) {\n+            if (constantPool[i] != nullptr) {\n@@ -1141,1 +1141,1 @@\n-        if (!NSK_VERIFY(gen != NULL)) {\n+        if (!NSK_VERIFY(gen != nullptr)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/Injector.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,3 +40,3 @@\n-static jthread agentThread = NULL;\n-static jvmtiStartFunction agentThreadProc = NULL;\n-static void* agentThreadArg = NULL;\n+static jthread agentThread = nullptr;\n+static jvmtiStartFunction agentThreadProc = nullptr;\n+static void* agentThreadArg = nullptr;\n@@ -55,3 +55,3 @@\n-static jvmtiEnv* jvmti_env = NULL;\n-static JavaVM* jvm = NULL;\n-static JNIEnv* jni_env = NULL;\n+static jvmtiEnv* jvmti_env = nullptr;\n+static JavaVM* jvm = nullptr;\n+static JNIEnv* jni_env = nullptr;\n@@ -104,1 +104,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -109,1 +109,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -117,1 +117,1 @@\n-    if (jvmti_env != NULL) {\n+    if (jvmti_env != nullptr) {\n@@ -156,1 +156,1 @@\n-    agentThread = NULL;\n+    agentThread = nullptr;\n@@ -170,5 +170,5 @@\n-    jobject threadName = NULL;\n-    jclass threadClass = NULL;\n-    jmethodID threadCtor = NULL;\n-    jobject threadObject = NULL;\n-    jobject threadGlobalRef = NULL;\n+    jobject threadName = nullptr;\n+    jclass threadClass = nullptr;\n+    jmethodID threadCtor = nullptr;\n+    jobject threadObject = nullptr;\n+    jobject threadGlobalRef = nullptr;\n@@ -176,2 +176,2 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (threadClass = jni_env->FindClass(THREAD_CLASS_NAME)) != NULL)) {\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(jni_env, (threadClass = jni_env->FindClass(THREAD_CLASS_NAME)) != nullptr)) {\n+        return nullptr;\n@@ -181,2 +181,2 @@\n-            jni_env->GetMethodID(threadClass, THREAD_CTOR_NAME, THREAD_CTOR_SIGNATURE)) != NULL))\n-        return NULL;\n+            jni_env->GetMethodID(threadClass, THREAD_CTOR_NAME, THREAD_CTOR_SIGNATURE)) != nullptr))\n+        return nullptr;\n@@ -184,2 +184,2 @@\n-    if (!NSK_JNI_VERIFY(jni_env, (threadName = jni_env->NewStringUTF(THREAD_NAME)) != NULL))\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(jni_env, (threadName = jni_env->NewStringUTF(THREAD_NAME)) != nullptr))\n+        return nullptr;\n@@ -188,2 +188,2 @@\n-            jni_env->NewObject(threadClass, threadCtor, threadName)) != NULL))\n-        return NULL;\n+            jni_env->NewObject(threadClass, threadCtor, threadName)) != nullptr))\n+        return nullptr;\n@@ -192,1 +192,1 @@\n-            jni_env->NewGlobalRef(threadObject)) != NULL)) {\n+            jni_env->NewGlobalRef(threadObject)) != nullptr)) {\n@@ -194,1 +194,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -202,1 +202,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -223,1 +223,1 @@\n-    if (thread == NULL) {\n+    if (thread == nullptr) {\n@@ -225,1 +225,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -250,1 +250,1 @@\n-        if (nsk_jvmti_runAgentThread(jni_env, jvmti_env) == NULL)\n+        if (nsk_jvmti_runAgentThread(jni_env, jvmti_env) == nullptr)\n@@ -374,1 +374,1 @@\n-    jclass* classes = NULL;\n+    jclass* classes = nullptr;\n@@ -376,1 +376,1 @@\n-    jclass foundClass = NULL;\n+    jclass foundClass = nullptr;\n@@ -379,1 +379,1 @@\n-    if (!NSK_VERIFY(signature != NULL)) {\n+    if (!NSK_VERIFY(signature != nullptr)) {\n@@ -381,1 +381,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -386,1 +386,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -390,2 +390,2 @@\n-        char* sig = NULL;\n-        char* generic = NULL;\n+        char* sig = nullptr;\n+        char* generic = nullptr;\n@@ -398,1 +398,1 @@\n-        if (sig != NULL && strcmp(signature, sig) == 0) {\n+        if (sig != nullptr && strcmp(signature, sig) == 0) {\n@@ -408,1 +408,1 @@\n-        if (foundClass != NULL)\n+        if (foundClass != nullptr)\n@@ -414,1 +414,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -418,1 +418,1 @@\n-                jni_env->NewGlobalRef(foundClass)) != NULL)) {\n+                jni_env->NewGlobalRef(foundClass)) != nullptr)) {\n@@ -420,1 +420,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -428,1 +428,1 @@\n-    jthread* threads = NULL;\n+    jthread* threads = nullptr;\n@@ -430,1 +430,1 @@\n-    jthread foundThread = NULL;\n+    jthread foundThread = nullptr;\n@@ -433,1 +433,1 @@\n-    if (!NSK_VERIFY(name != NULL)) {\n+    if (!NSK_VERIFY(name != nullptr)) {\n@@ -435,1 +435,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -440,1 +440,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -451,1 +451,1 @@\n-        if (info.name != NULL && strcmp(name, info.name) == 0) {\n+        if (info.name != nullptr && strcmp(name, info.name) == 0) {\n@@ -456,1 +456,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -458,1 +458,1 @@\n-        if (foundThread != NULL) {\n+        if (foundThread != nullptr) {\n@@ -465,1 +465,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -469,1 +469,1 @@\n-                jni_env->NewGlobalRef(foundThread)) != NULL)) {\n+                jni_env->NewGlobalRef(foundThread)) != nullptr)) {\n@@ -471,1 +471,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -510,1 +510,1 @@\n-    jvmtiLineNumberEntry* table = NULL;\n+    jvmtiLineNumberEntry* table = nullptr;\n@@ -577,1 +577,1 @@\n-static checkStatus_type checkStatus_func = NULL;\n+static checkStatus_type checkStatus_func = nullptr;\n@@ -603,3 +603,3 @@\n-    char *class_sig = NULL;\n-    char *name = NULL;\n-    char *sig = NULL;\n+    char *class_sig = nullptr;\n+    char *name = nullptr;\n+    char *sig = nullptr;\n@@ -615,1 +615,1 @@\n-    if (NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(mid, &name, &sig, NULL))) {\n+    if (NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(mid, &name, &sig, nullptr))) {\n@@ -620,1 +620,1 @@\n-             && NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(cls, &class_sig, NULL))\n+             && NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(cls, &class_sig, nullptr))\n@@ -629,1 +629,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -632,1 +632,1 @@\n-    if (sig != NULL)\n+    if (sig != nullptr)\n@@ -635,1 +635,1 @@\n-    if (class_sig != NULL)\n+    if (class_sig != nullptr)\n@@ -645,2 +645,2 @@\n-    if (callbacks == NULL) {\n-        NSK_COMPLAIN0(\"callbacks should not be NULL\\n\");\n+    if (callbacks == nullptr) {\n+        NSK_COMPLAIN0(\"callbacks should not be null\\n\");\n@@ -651,2 +651,2 @@\n-    if (callbacks->NativeMethodBind != NULL) {\n-        NSK_COMPLAIN0(\"callbacks.NativeMethodBind should be NULL\\n\");\n+    if (callbacks->NativeMethodBind != nullptr) {\n+        NSK_COMPLAIN0(\"callbacks.NativeMethodBind should be null\\n\");\n@@ -670,1 +670,1 @@\n-            jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL)))\n+            jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/agent_tools.cpp","additions":68,"deletions":68,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -104,1 +104,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &className, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti->GetClassSignature(klass, &className, nullptr))) {\n@@ -164,1 +164,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(\"java\/lang\/Thread\")) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(\"java\/lang\/Thread\")) != nullptr)) {\n@@ -166,1 +166,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -169,1 +169,1 @@\n-            (threadConstructor = jni->GetMethodID(klass, \"<init>\", \"()V\")) != NULL)) {\n+            (threadConstructor = jni->GetMethodID(klass, \"<init>\", \"()V\")) != nullptr)) {\n@@ -171,1 +171,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -175,1 +175,1 @@\n-            (thread = jni->NewObject(klass, threadConstructor, NULL)) != NULL)) {\n+            (thread = jni->NewObject(klass, threadConstructor, nullptr)) != nullptr)) {\n@@ -177,1 +177,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -180,1 +180,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr)) {\n@@ -182,1 +182,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -194,2 +194,2 @@\n-    if (!NSK_JNI_VERIFY(jni, (threadNameString = jni->NewStringUTF(threadName)) != NULL))\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(jni, (threadNameString = jni->NewStringUTF(threadName)) != nullptr))\n+        return nullptr;\n@@ -197,1 +197,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(\"java\/lang\/Thread\")) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (klass = jni->FindClass(\"java\/lang\/Thread\")) != nullptr)) {\n@@ -199,1 +199,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -202,1 +202,1 @@\n-            (threadConstructor = jni->GetMethodID(klass, \"<init>\", \"(Ljava\/lang\/String;)V\")) != NULL)) {\n+            (threadConstructor = jni->GetMethodID(klass, \"<init>\", \"(Ljava\/lang\/String;)V\")) != nullptr)) {\n@@ -204,1 +204,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -208,1 +208,1 @@\n-            (thread = jni->NewObject(klass, threadConstructor, threadNameString)) != NULL)) {\n+            (thread = jni->NewObject(klass, threadConstructor, threadNameString)) != nullptr)) {\n@@ -210,1 +210,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -213,1 +213,1 @@\n-    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != NULL)) {\n+    if (!NSK_JNI_VERIFY(jni, (thread = jni->NewGlobalRef(thread)) != nullptr)) {\n@@ -215,1 +215,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -233,2 +233,2 @@\n-    if (fileName == NULL) {\n-        NSK_COMPLAIN0(\"File name is NULL\\n\");\n+    if (fileName == nullptr) {\n+        NSK_COMPLAIN0(\"File name is null\\n\");\n@@ -253,1 +253,1 @@\n-            if (bytecode == NULL) {\n+            if (bytecode == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/aod\/jvmti_aod.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,2 @@\n-static jclass profile_klass = NULL;\n-static jfieldID count_field = NULL;\n+static jclass profile_klass = nullptr;\n+static jfieldID count_field = nullptr;\n@@ -67,3 +67,3 @@\n-static char** names = NULL;\n-static jvmtiClassDefinition* old_class_def = NULL;\n-static jvmtiClassDefinition* new_class_def = NULL;\n+static char** names = nullptr;\n+static jvmtiClassDefinition* old_class_def = nullptr;\n+static jvmtiClassDefinition* new_class_def = nullptr;\n@@ -72,1 +72,1 @@\n-static jrawMonitorID classLoadLock = NULL;\n+static jrawMonitorID classLoadLock = nullptr;\n@@ -102,2 +102,2 @@\n-    if (name != NULL &&\n-            class_being_redefined == NULL &&\n+    if (name != nullptr &&\n+            class_being_redefined == nullptr &&\n@@ -142,2 +142,2 @@\n-    char *name = NULL;\n-    char *signature = NULL;\n+    char *name = nullptr;\n+    char *signature = nullptr;\n@@ -147,1 +147,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, NULL))) {\n+    if (!NSK_JVMTI_VERIFY(jvmti_env->GetMethodName(method, &name, &signature, nullptr))) {\n@@ -153,1 +153,1 @@\n-    if (name != NULL)\n+    if (name != nullptr)\n@@ -155,1 +155,1 @@\n-    if (signature != NULL)\n+    if (signature != nullptr)\n@@ -178,2 +178,2 @@\n-            jclass klass = NULL;\n-            char *signature = NULL;\n+            jclass klass = nullptr;\n+            char *signature = nullptr;\n@@ -181,1 +181,1 @@\n-            if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != NULL)) {\n+            if (!NSK_JNI_VERIFY(jni_env, (klass = jni_env->GetObjectClass(exception)) != nullptr)) {\n@@ -185,1 +185,1 @@\n-            if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, NULL))) {\n+            if (!NSK_JVMTI_VERIFY(jvmti_env->GetClassSignature(klass, &signature, nullptr))) {\n@@ -191,1 +191,1 @@\n-            if (signature != NULL)\n+            if (signature != nullptr)\n@@ -203,1 +203,1 @@\n-                    JVMTI_EVENT_SINGLE_STEP, NULL)))\n+                    JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -220,1 +220,1 @@\n-static jrawMonitorID waitLock = NULL;\n+static jrawMonitorID waitLock = nullptr;\n@@ -225,1 +225,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -229,1 +229,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -238,1 +238,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (old_class_def[i].klass = jni->FindClass(names[i])) != NULL))\n+        if (!NSK_JNI_VERIFY(jni, (old_class_def[i].klass = jni->FindClass(names[i])) != nullptr))\n@@ -242,1 +242,1 @@\n-                jni->NewGlobalRef(old_class_def[i].klass)) != NULL))\n+                jni->NewGlobalRef(old_class_def[i].klass)) != nullptr))\n@@ -248,1 +248,1 @@\n-        if (!NSK_JNI_VERIFY(jni, (profile_klass = jni->FindClass(PROFILE_CLASS_NAME)) != NULL))\n+        if (!NSK_JNI_VERIFY(jni, (profile_klass = jni->FindClass(PROFILE_CLASS_NAME)) != nullptr))\n@@ -252,1 +252,1 @@\n-                jni->NewGlobalRef(profile_klass)) != NULL))\n+                jni->NewGlobalRef(profile_klass)) != nullptr))\n@@ -258,1 +258,1 @@\n-                                      \"I\")) != NULL))\n+                                      \"I\")) != nullptr))\n@@ -276,1 +276,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -321,1 +321,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_EXCEPTION, nullptr)))\n@@ -336,1 +336,1 @@\n-                        JVMTI_EVENT_SINGLE_STEP, NULL)))\n+                        JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -351,1 +351,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -363,1 +363,1 @@\n-    jvmtiEnv* jvmti = NULL;\n+    jvmtiEnv* jvmti = nullptr;\n@@ -391,1 +391,1 @@\n-    if (!NSK_VERIFY(package_name != NULL))\n+    if (!NSK_VERIFY(package_name != nullptr))\n@@ -406,1 +406,1 @@\n-    if (optValue != NULL) {\n+    if (optValue != nullptr) {\n@@ -420,1 +420,1 @@\n-    if (optValue != NULL) {\n+    if (optValue != nullptr) {\n@@ -440,1 +440,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n@@ -467,1 +467,1 @@\n-    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, NULL)))\n+    if (!NSK_VERIFY(nsk_jvmti_setAgentProc(agentProc, nullptr)))\n@@ -484,1 +484,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, nullptr)))\n@@ -486,1 +486,1 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, NULL)))\n+    if (!NSK_JVMTI_VERIFY(jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_COMPILED_METHOD_LOAD, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/hotswap\/HotSwap.cpp","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,1 +134,1 @@\n-        if (!NSK_VERIFY((s = jni->GetStringUTFChars(sInfo, &fCopy)) != NULL)) {\n+        if (!NSK_VERIFY((s = jni->GetStringUTFChars(sInfo, &fCopy)) != nullptr)) {\n@@ -140,1 +140,1 @@\n-            NSK_COMPLAIN1(\"Can't get string at %#p: NULL\\n\", sInfo);\n+            NSK_COMPLAIN1(\"Can't get string at %#p: null\\n\", sInfo);\n@@ -196,1 +196,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -241,1 +241,1 @@\n-    if (pRefRec != NULL) {\n+    if (pRefRec != nullptr) {\n@@ -254,1 +254,1 @@\n-    if (pRefRec != NULL) {\n+    if (pRefRec != nullptr) {\n@@ -383,1 +383,1 @@\n-    g_wrongHeapCallbacks.heap_iteration_callback         = NULL;\n+    g_wrongHeapCallbacks.heap_iteration_callback         = nullptr;\n@@ -389,2 +389,2 @@\n-    Java_nsk_jvmti_unit_FollowReferences_FollowRefObjects_resetTags(NULL, NULL);\n-    Java_nsk_jvmti_unit_FollowReferences_FollowRefObjects_resetRefsToVerify(NULL, NULL);\n+    Java_nsk_jvmti_unit_FollowReferences_FollowRefObjects_resetTags(nullptr, nullptr);\n+    Java_nsk_jvmti_unit_FollowReferences_FollowRefObjects_resetRefsToVerify(nullptr, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_FollowRefObjects.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-            char* end = NULL;\n+            char* end = nullptr;\n@@ -105,1 +105,1 @@\n-            if (end == NULL || end == value || *end != '\\0') {\n+            if (end == nullptr || end == value || *end != '\\0') {\n@@ -143,1 +143,1 @@\n-    if (name == NULL || value == NULL) {\n+    if (name == nullptr || value == nullptr) {\n@@ -171,1 +171,1 @@\n-        if (name != NULL)\n+        if (name != nullptr)\n@@ -173,1 +173,1 @@\n-        if (value != NULL)\n+        if (value != nullptr)\n@@ -189,1 +189,1 @@\n-    if (context.options.string != NULL) {\n+    if (context.options.string != nullptr) {\n@@ -191,1 +191,1 @@\n-        context.options.string = NULL;\n+        context.options.string = nullptr;\n@@ -203,2 +203,2 @@\n-  if (s == NULL || *s == NULL) {\n-    return NULL;\n+  if (s == nullptr || *s == nullptr) {\n+    return nullptr;\n@@ -208,1 +208,1 @@\n-  if (p != NULL) {\n+  if (p != nullptr) {\n@@ -214,1 +214,1 @@\n-    *s = NULL;\n+    *s = nullptr;\n@@ -223,3 +223,3 @@\n-    char *str = NULL;\n-    char *name = NULL;\n-    char *value = NULL;\n+    char *str = nullptr;\n+    char *name = nullptr;\n+    char *value = nullptr;\n@@ -227,1 +227,1 @@\n-    if (options == NULL)\n+    if (options == nullptr)\n@@ -238,1 +238,1 @@\n-    while ((name = token(&str, delimiters)) != NULL) {\n+    while ((name = token(&str, delimiters)) != nullptr) {\n@@ -241,1 +241,1 @@\n-        if (value != NULL) {\n+        if (value != nullptr) {\n@@ -253,1 +253,1 @@\n-    if (str != NULL) {\n+    if (str != nullptr) {\n@@ -262,2 +262,2 @@\n- * Returns value of given option name; or NULL if no such option found.\n- * If search name is NULL then complains an error and returns NULL.\n+ * Returns value of given option name; or nullptr if no such option found.\n+ * If search name is nullptr then complains an error and returns nullptr.\n@@ -268,3 +268,3 @@\n-    if (name == NULL) {\n-        nsk_complain(\"nsk_jvmti_findOptionValue(): option name is NULL\\n\");\n-        return NULL;\n+    if (name == nullptr) {\n+        nsk_complain(\"nsk_jvmti_findOptionValue(): option name is null\\n\");\n+        return nullptr;\n@@ -277,1 +277,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -282,1 +282,1 @@\n- * If options is specified but has empty value then complains an error and returns NULL.\n+ * If options is specified but has empty value then complains an error and returns nullptr.\n@@ -287,3 +287,3 @@\n-    if (name == NULL) {\n-        nsk_complain(\"nsk_jvmti_findOptionStringValue(): option name is NULL\\n\");\n-        return NULL;\n+    if (name == nullptr) {\n+        nsk_complain(\"nsk_jvmti_findOptionStringValue(): option name is null\\n\");\n+        return nullptr;\n@@ -293,1 +293,1 @@\n-    if (value == NULL) {\n+    if (value == nullptr) {\n@@ -300,1 +300,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -312,2 +312,2 @@\n-    if (name == NULL) {\n-        nsk_complain(\"nsk_jvmti_findOptionIntValue(): option name is NULL\\n\");\n+    if (name == nullptr) {\n+        nsk_complain(\"nsk_jvmti_findOptionIntValue(): option name is null\\n\");\n@@ -318,1 +318,1 @@\n-    if (value == NULL) {\n+    if (value == nullptr) {\n@@ -329,1 +329,1 @@\n-        char* endptr = NULL;\n+        char* endptr = nullptr;\n@@ -332,1 +332,1 @@\n-        if (endptr == NULL || *endptr != '\\0') {\n+        if (endptr == nullptr || *endptr != '\\0') {\n@@ -350,1 +350,1 @@\n- * If no such option then complains an error and returns NULL.\n+ * If no such option then complains an error and returns nullptr.\n@@ -355,1 +355,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -362,1 +362,1 @@\n- * If no such option then complains an error and returns NULL.\n+ * If no such option then complains an error and returns nullptr.\n@@ -367,1 +367,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -419,1 +419,1 @@\n-    jstring str_obj = NULL;\n+    jstring str_obj = nullptr;\n@@ -421,2 +421,2 @@\n-    if (!NSK_JNI_VERIFY(jni, (str_obj = jni->NewStringUTF(context.options.string)) != NULL)) {\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(jni, (str_obj = jni->NewStringUTF(context.options.string)) != nullptr)) {\n+        return nullptr;\n@@ -458,1 +458,1 @@\n-    if (nsk_jvmti_findOptionValue(NSK_JVMTI_OPT_PATH_TO_NEW_BYTE_CODE) == NULL) {\n+    if (nsk_jvmti_findOptionValue(NSK_JVMTI_OPT_PATH_TO_NEW_BYTE_CODE) == nullptr) {\n@@ -464,1 +464,1 @@\n-    if (fileName == NULL) {\n+    if (fileName == nullptr) {\n@@ -484,1 +484,1 @@\n-            if (bytecode == NULL) {\n+            if (bytecode == nullptr) {\n@@ -599,1 +599,1 @@\n-    jmethodID method = NULL;\n+    jmethodID method = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_tools.cpp","additions":47,"deletions":47,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    if (object_free_callback != NULL) {\n+    if (object_free_callback != nullptr) {\n@@ -61,3 +61,3 @@\n-static jvmtiHeapRootCallback heap_root_callback = NULL;\n-static jvmtiStackReferenceCallback stack_ref_callback = NULL;\n-static jvmtiObjectReferenceCallback object_ref_callback = NULL;\n+static jvmtiHeapRootCallback heap_root_callback = nullptr;\n+static jvmtiStackReferenceCallback stack_ref_callback = nullptr;\n+static jvmtiObjectReferenceCallback object_ref_callback = nullptr;\n@@ -185,1 +185,1 @@\n-    if (object_results_ref != NULL) {\n+    if (object_results_ref != nullptr) {\n@@ -187,1 +187,1 @@\n-        object_results_ref = NULL;\n+        object_results_ref = nullptr;\n@@ -189,1 +189,1 @@\n-    if (tag_results_ref != NULL) {\n+    if (tag_results_ref != nullptr) {\n@@ -191,1 +191,1 @@\n-        tag_results_ref = NULL;\n+        tag_results_ref = nullptr;\n@@ -213,1 +213,1 @@\n-    object_array = env->NewObjectArray(count, cls, NULL);\n+    object_array = env->NewObjectArray(count, cls, nullptr);\n@@ -336,1 +336,1 @@\n-        if (method == NULL) {\n+        if (method == nullptr) {\n@@ -365,2 +365,2 @@\n-    stack_ref_callback = NULL;\n-    object_ref_callback = NULL;\n+    stack_ref_callback = nullptr;\n+    object_ref_callback = nullptr;\n@@ -372,1 +372,1 @@\n-    heap_root_callback = NULL;\n+    heap_root_callback = nullptr;\n@@ -374,1 +374,1 @@\n-    object_ref_callback = NULL;\n+    object_ref_callback = nullptr;\n@@ -380,2 +380,2 @@\n-    heap_root_callback = NULL;\n-    stack_ref_callback = NULL;\n+    heap_root_callback = nullptr;\n+    stack_ref_callback = nullptr;\n@@ -453,1 +453,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_OBJECT_FREE, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/unit\/Heap.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n- * Return a new thread mirror, or NULL if failed.\n+ * Return a new thread mirror, or nullptr if failed.\n@@ -80,2 +80,2 @@\n-    if (thread == NULL)\n-        return NULL;\n+    if (thread == nullptr)\n+        return nullptr;\n@@ -105,1 +105,1 @@\n- * Return the thread if started OK, or NULL if failed.\n+ * Return the thread if started OK, or nullptr if failed.\n@@ -109,2 +109,2 @@\n-    if (thread == NULL)\n-        return NULL;\n+    if (thread == nullptr)\n+        return nullptr;\n@@ -112,1 +112,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -119,1 +119,1 @@\n-    uintptr_t result = _beginthreadex(NULL,0,procedure,thread,0,&(thread->id));\n+    uintptr_t result = _beginthreadex(nullptr,0,procedure,thread,0,&(thread->id));\n@@ -122,1 +122,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -125,1 +125,1 @@\n-    int result = thr_create(NULL,0,procedure,thread,0,&(thread->id));\n+    int result = thr_create(nullptr,0,procedure,thread,0,&(thread->id));\n@@ -128,1 +128,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -138,1 +138,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -150,1 +150,1 @@\n- * or -1 if thread == NULL.\n+ * or -1 if thread == nullptr.\n@@ -154,1 +154,1 @@\n-    if (thread == NULL)\n+    if (thread == nullptr)\n@@ -162,1 +162,1 @@\n- * or -1 if thread == NULL.\n+ * or -1 if thread == nullptr.\n@@ -166,1 +166,1 @@\n-    if (thread == NULL)\n+    if (thread == nullptr)\n@@ -174,1 +174,1 @@\n- * or retuen -1 if thread == NULL.\n+ * or retuen -1 if thread == nullptr.\n@@ -178,1 +178,1 @@\n-    if (thread == NULL)\n+    if (thread == nullptr)\n@@ -187,1 +187,1 @@\n- * or return immediately, if thread == NULL.\n+ * or return immediately, if thread == nullptr.\n@@ -191,1 +191,1 @@\n-    if (thread == NULL)\n+    if (thread == nullptr)\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/native_thread.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    if (list_info == NULL) {\n-        return NULL;\n+    if (list_info == nullptr) {\n+        return nullptr;\n@@ -58,1 +58,1 @@\n-    if (list_info->arr == NULL) {\n+    if (list_info->arr == nullptr) {\n@@ -60,1 +60,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -87,1 +87,1 @@\n-        if (list_info->arr == NULL) {\n+        if (list_info->arr == nullptr) {\n@@ -134,1 +134,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_list.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-                pthread_mutex_init((pthread_mutex_t*)mutex, NULL);\n+                pthread_mutex_init((pthread_mutex_t*)mutex, nullptr);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_mutex.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,2 +70,2 @@\n-    if (fullname == NULL)\n-        return NULL;\n+    if (fullname == nullptr)\n+        return nullptr;\n@@ -85,1 +85,1 @@\n-    nsk_lvdisplay(NULL,0,format,ap);\n+    nsk_lvdisplay(nullptr,0,format,ap);\n@@ -97,1 +97,1 @@\n-    nsk_lvdisplay(NULL,0,format,ap);\n+    nsk_lvdisplay(nullptr,0,format,ap);\n@@ -104,1 +104,1 @@\n-    if (file != NULL)\n+    if (file != nullptr)\n@@ -114,1 +114,1 @@\n-    nsk_lvcomplain(NULL,0,format,ap);\n+    nsk_lvcomplain(nullptr,0,format,ap);\n@@ -127,1 +127,1 @@\n-    nsk_lvcomplain(NULL,0,format,ap);\n+    nsk_lvcomplain(nullptr,0,format,ap);\n@@ -160,1 +160,1 @@\n-      if (nl_ptr != NULL) {\n+      if (nl_ptr != nullptr) {\n@@ -168,1 +168,1 @@\n-      if (file != NULL) {\n+      if (file != nullptr) {\n@@ -175,1 +175,1 @@\n-    if (file != NULL) {\n+    if (file != nullptr) {\n@@ -268,1 +268,1 @@\n-    if (size <= 0 || bytes == NULL)\n+    if (size <= 0 || bytes == nullptr)\n@@ -301,1 +301,1 @@\n-    return (str == NULL)? \"<NULL>\" : str;\n+    return (str == nullptr)? \"<null>\" : str;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_tools.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n-  jchar *nativeStr = NULL;                                                  \\\n-  type *nativeArray = NULL;                                                 \\\n+  jchar *nativeStr = nullptr;                                                  \\\n+  type *nativeArray = nullptr;                                                 \\\n@@ -46,1 +46,1 @@\n-  nativeArray = (type *)env->GetPrimitiveArrayCritical(array, NULL); CE     \\\n+  nativeArray = (type *)env->GetPrimitiveArrayCritical(array, nullptr); CE     \\\n@@ -49,1 +49,1 @@\n-  nativeStr = (jchar *)env->GetStringCritical(str, NULL); CE                \\\n+  nativeStr = (jchar *)env->GetStringCritical(str, nullptr); CE                \\\n@@ -55,1 +55,1 @@\n-  nativeStr = (jchar *)env->GetStringCritical(str, NULL); CE                \\\n+  nativeStr = (jchar *)env->GetStringCritical(str, nullptr); CE                \\\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/gclocker\/libgcl001.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,2 +111,2 @@\n-        element->str[j] = NULL;\n-        element->checkstr[j] = NULL;\n+        element->str[j] = nullptr;\n+        element->checkstr[j] = nullptr;\n@@ -220,2 +220,2 @@\n-        javachars->str[j] = NULL;\n-        javachars->checkstr[j] = NULL;\n+        javachars->str[j] = nullptr;\n+        javachars->checkstr[j] = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress001.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,2 +144,2 @@\n-  if ((orig == NULL) || (clone == NULL)) {\n-    fprintf(stderr, \"JNI received a NULL array from Java\\n\");\n+  if ((orig == nullptr) || (clone == nullptr)) {\n+    fprintf(stderr, \"JNI received a null array from Java\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    if (stackOverflowErrorClass == NULL) {\n+    if (stackOverflowErrorClass == nullptr) {\n@@ -59,1 +59,1 @@\n-        if (stackOverflowErrorClass != NULL) {\n+        if (stackOverflowErrorClass != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    if (stackOverflowErrorClass == NULL) {\n+    if (stackOverflowErrorClass == nullptr) {\n@@ -61,1 +61,1 @@\n-        if (stackOverflowErrorClass != NULL) {\n+        if (stackOverflowErrorClass != nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace006.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* gJvmtiEnv = NULL;\n+static jvmtiEnv* gJvmtiEnv = nullptr;\n@@ -91,1 +91,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -97,1 +97,1 @@\n-        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+        if (!NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n@@ -135,1 +135,1 @@\n-    free(mn); mn = NULL;\n+    free(mn); mn = nullptr;\n@@ -171,1 +171,1 @@\n-    if (locStr == NULL) {\n+    if (locStr == nullptr) {\n@@ -189,1 +189,1 @@\n-    if (!NSK_VERIFY((gJvmtiEnv = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL))\n+    if (!NSK_VERIFY((gJvmtiEnv = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr))\n@@ -213,1 +213,1 @@\n-    if (!NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL)))\n+    if (!NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr)))\n@@ -216,1 +216,1 @@\n-    if (!NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL)))\n+    if (!NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/func\/jvmti\/share\/IndyRedefineClass.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static jvmtiEnv* gJvmtiEnv = NULL;\n+static jvmtiEnv* gJvmtiEnv = nullptr;\n@@ -92,1 +92,1 @@\n-                NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, NULL));\n+                NSK_JVMTI_VERIFY(jvmti_env->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_SINGLE_STEP, nullptr));\n@@ -111,1 +111,1 @@\n-    if (locStr == NULL) {\n+    if (locStr == nullptr) {\n@@ -119,1 +119,1 @@\n-    NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, NULL));\n+    NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_SINGLE_STEP, nullptr));\n@@ -125,1 +125,1 @@\n-        NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL));\n+        NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, nullptr));\n@@ -153,1 +153,1 @@\n-    if (locStr == NULL) {\n+    if (locStr == nullptr) {\n@@ -162,1 +162,1 @@\n-    NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_BREAKPOINT, NULL));\n+    NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_DISABLE, JVMTI_EVENT_BREAKPOINT, nullptr));\n@@ -176,1 +176,1 @@\n-    if (!NSK_VERIFY((gJvmtiEnv = nsk_jvmti_createJVMTIEnv(vm, reserved)) != NULL))\n+    if (!NSK_VERIFY((gJvmtiEnv = nsk_jvmti_createJVMTIEnv(vm, reserved)) != nullptr))\n@@ -201,1 +201,1 @@\n-    if (!NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, NULL)))\n+    if (!NSK_JVMTI_VERIFY(gJvmtiEnv->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_METHOD_ENTRY, nullptr)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/func\/jvmti\/stepBreakPopReturn\/stepBreakPopReturn.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-    if (!NSK_JNI_VERIFY(pEnv, (mhClass = pEnv->GetObjectClass(mhToCall)) != NULL))\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(pEnv, (mhClass = pEnv->GetObjectClass(mhToCall)) != nullptr))\n+        return nullptr;\n@@ -54,2 +54,2 @@\n-    if (!NSK_JNI_VERIFY(pEnv, NULL != (mid = pEnv->GetMethodID(mhClass, \"invokeWithArguments\", \"([Ljava\/lang\/Object;)Ljava\/lang\/Object;\"))))\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(pEnv, nullptr != (mid = pEnv->GetMethodID(mhClass, \"invokeWithArguments\", \"([Ljava\/lang\/Object;)Ljava\/lang\/Object;\"))))\n+        return nullptr;\n@@ -57,1 +57,1 @@\n-    NSK_JNI_VERIFY(pEnv, NULL != (objectClass = pEnv->FindClass(\"java\/lang\/Object\")));\n+    NSK_JNI_VERIFY(pEnv, nullptr != (objectClass = pEnv->FindClass(\"java\/lang\/Object\")));\n@@ -59,2 +59,2 @@\n-    if (!NSK_JNI_VERIFY(pEnv, NULL != (arguments = pEnv->NewObjectArray(ARGS_COUNT, objectClass, NULL))))\n-        return NULL;\n+    if (!NSK_JNI_VERIFY(pEnv, nullptr != (arguments = pEnv->NewObjectArray(ARGS_COUNT, objectClass, nullptr))))\n+        return nullptr;\n@@ -70,1 +70,1 @@\n-    NSK_JNI_VERIFY(pEnv, NULL != (result = pEnv->CallObjectMethod(mhToCall, mid, arguments)));\n+    NSK_JNI_VERIFY(pEnv, nullptr != (result = pEnv->CallObjectMethod(mhToCall, mid, arguments)));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/jni\/nativeAndMH\/nativeAndMH.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    if (!NSK_VERIFY((pStr = pEnv->GetStringUTFChars(src, NULL)) != NULL)) {\n+    if (!NSK_VERIFY((pStr = pEnv->GetStringUTFChars(src, nullptr)) != nullptr)) {\n@@ -73,2 +73,2 @@\n-    if (!NSK_JVMTI_VERIFY(pJvmtiEnv->GetMethodName(method, &szName, NULL, NULL))) {\n-        return NULL;\n+    if (!NSK_JVMTI_VERIFY(pJvmtiEnv->GetMethodName(method, &szName, nullptr, nullptr))) {\n+        return nullptr;\n@@ -80,1 +80,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -83,2 +83,2 @@\n-    if (!NSK_JVMTI_VERIFY(pJvmtiEnv->GetClassSignature(clazz, &szSignature, NULL))) {\n-        return NULL;\n+    if (!NSK_JVMTI_VERIFY(pJvmtiEnv->GetClassSignature(clazz, &szSignature, nullptr))) {\n+        return nullptr;\n@@ -91,1 +91,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -95,2 +95,2 @@\n-    if (mn == NULL) {\n-      return NULL;\n+    if (mn == nullptr) {\n+      return nullptr;\n@@ -118,1 +118,1 @@\n-    len = snprintf(NULL, 0, format, pMN->classSig, pMN->methodName, location) + 1;\n+    len = snprintf(nullptr, 0, format, pMN->classSig, pMN->methodName, location) + 1;\n@@ -122,1 +122,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -126,1 +126,1 @@\n-    if (result == NULL) {\n+    if (result == nullptr) {\n@@ -128,1 +128,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -140,1 +140,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -143,2 +143,2 @@\n-        if (!NSK_VERIFY((tls = malloc(sizeToAllocate)) != NULL))\n-            return NULL;\n+        if (!NSK_VERIFY((tls = malloc(sizeToAllocate)) != nullptr))\n+            return nullptr;\n@@ -149,1 +149,1 @@\n-            return NULL;\n+            return nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/share\/mlvmJvmtiUtils.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-static jvmtiEnv *test_jvmti = NULL;\n+static jvmtiEnv *test_jvmti = nullptr;\n@@ -53,1 +53,1 @@\n-    if (!NSK_VERIFY(env != NULL) || !NSK_VERIFY(clazzToRedefine != NULL) || !NSK_VERIFY(bytecodeArray != NULL)) {\n+    if (!NSK_VERIFY(env != nullptr) || !NSK_VERIFY(clazzToRedefine != nullptr) || !NSK_VERIFY(bytecodeArray != nullptr)) {\n@@ -64,1 +64,1 @@\n-            (classDef.class_bytes = (const unsigned char *) \/* jbyte* *\/ env->GetByteArrayElements(bytecodeArray, NULL)) != NULL)) {\n+            (classDef.class_bytes = (const unsigned char *) \/* jbyte* *\/ env->GetByteArrayElements(bytecodeArray, nullptr)) != nullptr)) {\n@@ -89,1 +89,1 @@\n-            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != NULL))\n+            nsk_jvmti_createJVMTIEnv(jvm, reserved)) != nullptr))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/runtime\/defmeth\/shared\/redefineClasses.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-                                NULL,\n+                                nullptr,\n@@ -57,1 +57,1 @@\n-                                NULL\n+                                nullptr\n@@ -85,1 +85,1 @@\n-                                NULL,\n+                                nullptr,\n@@ -90,1 +90,1 @@\n-                                NULL\n+                                nullptr\n@@ -114,1 +114,1 @@\n-                                NULL,\n+                                nullptr,\n@@ -119,1 +119,1 @@\n-                                NULL);\n+                                nullptr);\n@@ -155,1 +155,1 @@\n-                if (dbghelp == NULL)\n+                if (dbghelp == nullptr)\n@@ -162,1 +162,1 @@\n-        if (dbghelp == NULL) {\n+        if (dbghelp == nullptr) {\n@@ -168,1 +168,1 @@\n-                        if (dbghelp == NULL) {\n+                        if (dbghelp == nullptr) {\n@@ -173,1 +173,1 @@\n-        if (dbghelp == NULL) {\n+        if (dbghelp == nullptr) {\n@@ -183,1 +183,1 @@\n-        if (_MiniDumpWriteDump == NULL) {\n+        if (_MiniDumpWriteDump == nullptr) {\n@@ -196,1 +196,1 @@\n-        dumpFile = CreateFile(\"core.mdmp\", GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);\n+        dumpFile = CreateFile(\"core.mdmp\", GENERIC_WRITE, 0, nullptr, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, nullptr);\n@@ -202,1 +202,1 @@\n-        pmei = NULL;\n+        pmei = nullptr;\n@@ -207,2 +207,2 @@\n-        if (_MiniDumpWriteDump(hProcess, processId, dumpFile, dumpType, pmei, NULL, NULL) == FALSE &&\n-                        _MiniDumpWriteDump(hProcess, processId, dumpFile, (MINIDUMP_TYPE)MiniDumpWithFullMemory, pmei, NULL, NULL) == FALSE) {\n+        if (_MiniDumpWriteDump(hProcess, processId, dumpFile, dumpType, pmei, nullptr, nullptr) == FALSE &&\n+                        _MiniDumpWriteDump(hProcess, processId, dumpFile, (MINIDUMP_TYPE)MiniDumpWithFullMemory, pmei, nullptr, nullptr) == FALSE) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/share\/ProcessUtils.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-    if (ds == NULL) {\n-        printf(\"NULL drawing surface\\n\");\n+    if (ds == nullptr) {\n+        printf(\"null drawing surface\\n\");\n@@ -70,1 +70,1 @@\n-    if (dsi == NULL) {\n+    if (dsi == nullptr) {\n","filename":"test\/jdk\/java\/awt\/JAWT\/myfile.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-    jvm->AttachCurrentThread((void**)&env, NULL);\n+    jvm->AttachCurrentThread((void**)&env, nullptr);\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/org\/openjdk\/foreigntest\/libLinkerInvokerUnnamed.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    context->jvm->AttachCurrentThread((void**)&env, NULL);\n+    context->jvm->AttachCurrentThread((void**)&env, nullptr);\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/libLinkerInvokerModule.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    context->jvm->AttachCurrentThread((void**)&env, NULL);\n+    context->jvm->AttachCurrentThread((void**)&env, nullptr);\n","filename":"test\/jdk\/java\/foreign\/loaderLookup\/libLoaderLookupInvoker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        classname(cname), method(mname), signature(sig), m(NULL), env(e) {\n+        classname(cname), method(mname), signature(sig), m(nullptr), env(e) {\n@@ -42,1 +42,1 @@\n-        assert (c != NULL);\n+        assert (c != nullptr);\n@@ -56,1 +56,1 @@\n-        if (obj != NULL) {\n+        if (obj != nullptr) {\n@@ -64,1 +64,1 @@\n-        if (obj == NULL) {\n+        if (obj == nullptr) {\n@@ -72,1 +72,1 @@\n-        if (env->ExceptionOccurred() != NULL) {\n+        if (env->ExceptionOccurred() != nullptr) {\n@@ -82,1 +82,1 @@\n-         assert(expected != NULL);\n+         assert(expected != nullptr);\n@@ -109,1 +109,1 @@\n-        assert(m != NULL);\n+        assert(m != nullptr);\n@@ -171,1 +171,1 @@\n-        assert(m != NULL);\n+        assert(m != nullptr);\n","filename":"test\/jdk\/jni\/nullCaller\/CallHelper.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,1 +134,1 @@\n-    assert(class_OpenResources != NULL);\n+    assert(class_OpenResources != nullptr);\n@@ -136,1 +136,1 @@\n-    assert(class_ClosedResources != NULL);\n+    assert(class_ClosedResources != nullptr);\n@@ -205,1 +205,1 @@\n-    pthread_join(id, NULL);\n+    pthread_join(id, nullptr);\n","filename":"test\/jdk\/jni\/nullCaller\/exeNullCallerTest.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}