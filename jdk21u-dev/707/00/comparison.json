{"files":[{"patch":"@@ -2751,1 +2751,1 @@\n-        Node* in1 = first->in(1);\n+        Node* in1 = vector_opd(p, 1);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @bug 8183390 8332905\n@@ -51,0 +52,1 @@\n+    private static       int size = 543;\n@@ -74,1 +76,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx512f\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n@@ -87,1 +89,17 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx512f\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx2\", \"true\"},\n+        counts = {IRNode.STORE_VECTOR, \">0\"})\n+    @IR(applyIfCPUFeature = {\"avx512f\", \"true\"},\n+        counts = {IRNode.ROTATE_RIGHT_V, \">0\"})\n+    \/\/ Requires size to not be known at compile time, otherwise the shift\n+    \/\/ can get constant folded with the (iv + const) pattern from the\n+    \/\/ PopulateIndex.\n+    public int[] intCombinedRotateShiftWithPopulateIndex() {\n+        int[] res = new int[size];\n+        for (int i = 0; i < size; i++) {\n+            res[i] = (i << 14) | (i >>> 18);\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayShiftOpTest.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"}]}