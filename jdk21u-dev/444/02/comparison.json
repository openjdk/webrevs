{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,1 +155,1 @@\n-        if (System.getProperty(\"main.wrapper\") != null) {\n+        if (System.getProperty(\"test.thread.factory\") != null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor001\/monitor001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads003\/threads003.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -189,1 +189,1 @@\n-        if (System.getProperty(\"main.wrapper\") != null) {\n+        if (System.getProperty(\"test.thread.factory\") != null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -194,1 +194,1 @@\n-        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/_bounds_\/bounds002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,2 +137,2 @@\n-        boolean usingWrapper = System.getProperty(\"main.wrapper\") != null;\n-        boolean usingVThreadWrapper = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+        boolean usingTTF = System.getProperty(\"test.thread.factory\") != null;\n+        boolean usingVirtualTTF = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n@@ -256,1 +256,1 @@\n-                if (usingVThreadWrapper) {\n+                if (usingVirtualTTF) {\n@@ -259,1 +259,1 @@\n-                    expectedNumThreads = usingWrapper ? 3 : 2;\n+                    expectedNumThreads = usingTTF ? 3 : 2;\n@@ -280,1 +280,1 @@\n-                if (nMain != 1 && !usingVThreadWrapper) {\n+                if (nMain != 1 && !usingVirtualTTF) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadGroupReference\/threads\/threads001.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop001a.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+    static final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002t.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-                                      if ((System.getProperty(\"main.wrapper\") != null) &&\n+                                      if ((System.getProperty(\"test.thread.factory\") != null) &&\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartEvent\/thread\/thread001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        System.setProperty(\"main.wrapper\", wrapperName);\n+        System.setProperty(\"test.thread.factory\", wrapperName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/MainWrapper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-            boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+            boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n@@ -233,2 +233,2 @@\n-                if (System.getProperty(\"main.wrapper\") != null) {\n-                    cmdline = MainWrapper.class.getName() + \" \" + System.getProperty(\"main.wrapper\") +  \" \" + cmdline;\n+                if (System.getProperty(\"test.thread.factory\") != null) {\n+                    cmdline = MainWrapper.class.getName() + \" \" + System.getProperty(\"test.thread.factory\") +  \" \" + cmdline;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Launcher.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -711,2 +711,2 @@\n-        if(System.getProperty(\"main.wrapper\") != null) {\n-            cmdline = MainWrapper.class.getName() + \" \" + System.getProperty(\"main.wrapper\") + \" \" + cmdline;\n+        if (System.getProperty(\"test.thread.factory\") != null) {\n+            cmdline = MainWrapper.class.getName() + \" \" + System.getProperty(\"test.thread.factory\") + \" \" + cmdline;\n@@ -752,1 +752,1 @@\n-        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n+        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Binder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-        if (\"Virtual\".equals(System.getProperty(\"main.wrapper\"))) {\n+        if (\"Virtual\".equals(System.getProperty(\"test.thread.factory\"))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Debugee.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private static ThreadFactory threadFactory = \"Virtual\".equals(System.getProperty(\"main.wrapper\"))\n+    private static ThreadFactory threadFactory = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/JDIThreadFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-        if(System.getProperty(\"main.wrapper\") != null) {\n+        if (System.getProperty(\"test.thread.factory\") != null) {\n@@ -355,1 +355,1 @@\n-            args.add(System.getProperty(\"main.wrapper\"));\n+            args.add(System.getProperty(\"test.thread.factory\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeBinder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -228,1 +228,1 @@\n-                if(System.getProperty(\"main.wrapper\") != null && System.getProperty(\"main.wrapper\").equals(\"Virtual\")) {\n+                if (\"Virtual\".equals(System.getProperty(\"test.thread.factory\"))) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/runner\/RunParams.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-    public static String PROPERTY_NAME = \"main.wrapper\";\n+    public static String PROPERTY_NAME = \"test.thread.factory\";\n@@ -35,1 +35,1 @@\n-    private static final String wrapperName = System.getProperty(PROPERTY_NAME);\n+    private static final String testThreadFactoryName = System.getProperty(PROPERTY_NAME);\n@@ -37,2 +37,2 @@\n-    public static String getWrapperName() {\n-        return wrapperName;\n+    public static String getTestThreadFactoryName() {\n+        return testThreadFactoryName;\n@@ -42,1 +42,1 @@\n-        return \"Virtual\".equals(wrapperName);\n+        return \"Virtual\".equals(testThreadFactoryName);\n@@ -88,1 +88,1 @@\n-        } else if (getWrapperName().equals(\"Kernel\")) {\n+        } else if (getTestThreadFactoryName().equals(\"Kernel\")) {\n","filename":"test\/jdk\/com\/sun\/jdi\/DebuggeeWrapper.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -515,1 +515,1 @@\n-        \/\/     argInfo.targetVMArgs : -Xss4M -Dmain.wrapper=Virtual\n+        \/\/     argInfo.targetVMArgs : -Xss4M -Dtest.thread.factory=Virtual\n@@ -551,4 +551,4 @@\n-        \/\/ and set property 'main.wrapper' so test could use DebuggeeWrapper.isVirtual() method\n-        String mainWrapper = DebuggeeWrapper.getWrapperName();\n-        if (mainWrapper != null && !argInfo.targetAppCommandLine.isEmpty()) {\n-            argInfo.targetVMArgs += \"-D\" + DebuggeeWrapper.PROPERTY_NAME + \"=\" + mainWrapper;\n+        \/\/ and set property 'test.thread.factory' so test could use DebuggeeWrapper.isVirtual() method\n+        String testThreadFactoryName = DebuggeeWrapper.getTestThreadFactoryName();\n+        if (testThreadFactoryName != null && !argInfo.targetAppCommandLine.isEmpty()) {\n+            argInfo.targetVMArgs += \"-D\" + DebuggeeWrapper.PROPERTY_NAME + \"=\" + testThreadFactoryName;\n","filename":"test\/jdk\/com\/sun\/jdi\/TestScaffold.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-            System.setProperty(\"main.wrapper\", \"Virtual\");\n+            System.setProperty(\"test.thread.factory\", \"Virtual\");\n","filename":"test\/jtreg_test_thread_factory\/src\/share\/classes\/Virtual.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.lang.Thread.State;\n@@ -381,2 +380,2 @@\n-      Convert arguments for tests running with virtual threads main wrapper\n-      When test is executed with process wrapper the line is changed from\n+      Convert arguments for tests running with virtual threads test thread factory.\n+      When test is executed with test thread factory the line is changed from\n@@ -385,1 +384,1 @@\n-      java <jvm-args> -Dmain.wrapper=<wrapper-name> jdk.test.lib.process.ProcessTools <wrapper-name> <test-class> <test-args>\n+      java <jvm-args> -Dtest.thread.factory=<test-thread-factory-name> jdk.test.lib.process.ProcessTools <test-thread-factory-name> <test-class> <test-args>\n@@ -388,1 +387,1 @@\n-    private static List<String> addMainWrapperArgs(String mainWrapper, List<String> command) {\n+    private static List<String> addTestThreadFactoryArgs(String testThreadFactoryName, List<String> command) {\n@@ -401,1 +400,1 @@\n-        boolean isWrapperClassAdded = false;\n+        boolean isTestThreadFactoryAdded = false;\n@@ -403,1 +402,1 @@\n-            if (isWrapperClassAdded) {\n+            if (isTestThreadFactoryAdded) {\n@@ -436,1 +435,1 @@\n-            args.add(\"-Dmain.wrapper=\" + mainWrapper);\n+            args.add(\"-Dtest.thread.factory=\" + testThreadFactoryName);\n@@ -438,2 +437,2 @@\n-            args.add(mainWrapper);\n-            isWrapperClassAdded = true;\n+            args.add(testThreadFactoryName);\n+            isTestThreadFactoryAdded = true;\n@@ -464,3 +463,3 @@\n-        String mainWrapper = System.getProperty(\"main.wrapper\");\n-        if (mainWrapper != null) {\n-            args.addAll(addMainWrapperArgs(mainWrapper, Arrays.asList(command)));\n+        String testThreadFactoryName = System.getProperty(\"test.thread.factory\");\n+        if (testThreadFactoryName != null) {\n+            args.addAll(addTestThreadFactoryArgs(testThreadFactoryName, Arrays.asList(command)));\n@@ -916,1 +915,1 @@\n-    \/\/ ProcessTools as a wrapper\n+    \/\/ ProcessTools as a wrapper for test execution\n@@ -919,1 +918,1 @@\n-        String wrapper = args[0];\n+        String testThreadFactoryName = args[0];\n@@ -927,1 +926,1 @@\n-        if (wrapper.equals(\"Virtual\")) {\n+        if (testThreadFactoryName.equals(\"Virtual\")) {\n@@ -947,1 +946,1 @@\n-        } else if (wrapper.equals(\"Kernel\")) {\n+        } else if (testThreadFactoryName.equals(\"Kernel\")) {\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"}]}