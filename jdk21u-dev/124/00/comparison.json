{"files":[{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.Shape;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.Element;\n+import javax.swing.text.Position;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.View;\n+import javax.swing.text.ViewFactory;\n+import javax.swing.text.html.HTML;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.ParagraphView;\n+\n+\/*\n+ * @test\n+ * @bug 4398059\n+ * @key headful\n+ * @summary Tests that CompositeView doesn't throw NPE.\n+ *\/\n+\n+public class bug4398059 {\n+    private static JFrame jFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            SwingUtilities.invokeAndWait(bug4398059::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (jFrame != null) {\n+                    jFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        String text = \"<H1>text\";\n+        jFrame = new JFrame(\"CompositeView Test\");\n+        JEditorPane jep = new JEditorPane();\n+        jep.setEditorKit(new MyHTMLEditorKit());\n+        jep.setText(text);\n+\n+        Document doc = jep.getDocument();\n+        jep.setCaretPosition(doc.getLength() - 1);\n+\n+        jFrame.getContentPane().add(jep);\n+        jFrame.setSize(200,200);\n+        jFrame.setVisible(true);\n+    }\n+\n+    static class MyHTMLEditorKit extends HTMLEditorKit {\n+        private static final ViewFactory defaultFactory = new MyHTMLFactory();\n+\n+        public ViewFactory getViewFactory() {\n+            return defaultFactory;\n+        }\n+\n+        static class MyHTMLFactory extends HTMLEditorKit.HTMLFactory {\n+            public View create(Element elem) {\n+                Object obj = elem.getAttributes().getAttribute(StyleConstants.NameAttribute);\n+                if (obj instanceof HTML.Tag kind) {\n+                    if (kind == HTML.Tag.H1) {\n+                        return new MyParagraphView(elem);\n+                    }\n+                }\n+                return super.create(elem);\n+            }\n+        }\n+\n+        static class MyParagraphView extends ParagraphView {\n+            public MyParagraphView(Element elem) {\n+                super(elem);\n+            }\n+\n+            public Shape getChildAllocation(int index, Shape a) {\n+                return null;\n+            }\n+\n+            public Shape modelToView(int pos, Shape a, Position.Bias b)\n+                                      throws BadLocationException {\n+                return super.modelToView(pos, a, b);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/CompositeView\/bug4398059.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4197894\n+ * @key headful\n+ * @summary Tests if shift-click adjusts selection in text areas.\n+ *\/\n+\n+public class bug4197894 {\n+    private static JFrame jFrame;\n+    private static JTextArea ta;\n+\n+    private static volatile Point point = null;\n+    private static volatile Rectangle bounds;\n+\n+    private static volatile boolean passed = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(50);\n+            robot.setAutoWaitForIdle(true);\n+\n+            SwingUtilities.invokeAndWait(bug4197894::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                point = ta.getLocationOnScreen();\n+                bounds = ta.getBounds();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(300);\n+\n+            robot.mouseMove((point.x + bounds.width \/ 4),\n+                    (point.y + bounds.height \/ 4));\n+\n+            robot.keyPress(KeyEvent.VK_SHIFT);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.keyRelease(KeyEvent.VK_SHIFT);\n+            robot.delay(300);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed.\" +\n+                        \" Shift-Click Text Selection does not work!\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (jFrame != null) {\n+                    jFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        jFrame = new JFrame(\"Shift-Click Text Selection\");\n+        ta = new JTextArea();\n+        ta.addKeyListener(new KeyAdapter() {\n+            public void keyReleased(KeyEvent e) {\n+                String selText = ta.getSelectedText();\n+                passed = !(selText == null || (selText.length() == 0));\n+            }\n+        });\n+        ta.setText(\"12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\");\n+        ta.setCaretPosition(ta.getDocument().getLength());\n+        jFrame.getContentPane().add(ta);\n+        jFrame.pack();\n+        jFrame.setLocationRelativeTo(null);\n+        jFrame.setAlwaysOnTop(true);\n+        jFrame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/DefaultCaret\/bug4197894.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Container;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.BoxLayout;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4203175\n+ * @key headful\n+ * @summary Tests that double-click on disabled JTextField doesn't\n+ *          cause other text-field to select content.\n+ *\/\n+\n+public class bug4203175 {\n+    private static JFrame jFrame;\n+    private static JTextField tf1, tf2;\n+    private static JButton b;\n+    private static volatile Point point;\n+    private static volatile boolean passed = true;\n+    private static int clicks = 0;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(50);\n+            robot.setAutoWaitForIdle(true);\n+\n+            SwingUtilities.invokeAndWait(bug4203175::createAndShowUI);\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> point = tf1.getLocationOnScreen());\n+            robot.mouseMove(point.x, point.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(200);\n+\n+            SwingUtilities.invokeAndWait(() -> point = b.getLocationOnScreen());\n+            robot.mouseMove(point.x, point.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(200);\n+\n+            SwingUtilities.invokeAndWait(() -> point = tf2.getLocationOnScreen());\n+            robot.mouseMove(point.x, point.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(200);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed!! Text selection on disabled\" +\n+                                           \" TextField does not work as expected!\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (jFrame != null) {\n+                    jFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        jFrame = new JFrame(\"JTextField Text Selection\");\n+        Container cont = jFrame.getContentPane();\n+        cont.setLayout(new BoxLayout(cont, BoxLayout.Y_AXIS));\n+\n+        tf1 = new JTextField(20);\n+        tf1.setText(\"sometext\");\n+        tf1.setName(\"Field 1\");\n+        tf1.setCaretPosition(tf1.getDocument().getLength());\n+        cont.add(tf1);\n+\n+        tf2 = new JTextField(20);\n+        tf2.setName(\"Field 2\");\n+        tf2.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                super.mouseClicked(e);\n+                clicks++;\n+                if (clicks == 2) {\n+                    String selText = tf1.getSelectedText();\n+                    passed = (selText == null || (selText.length() == 0));\n+                }\n+            }\n+        });\n+        cont.add(tf2);\n+\n+        b = new JButton(\"Toggle Enabled\");\n+        cont.add(b);\n+        b.addActionListener(e -> {\n+            if (e.getSource() == b) {\n+                boolean b = tf1.isEnabled();\n+                tf1.setEnabled(!b);\n+                tf2.setEnabled(!b);\n+            }\n+        });\n+\n+        jFrame.pack();\n+        jFrame.setLocationRelativeTo(null);\n+        jFrame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/DefaultCaret\/bug4203175.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.ActionEvent;\n+import javax.swing.Action;\n+import javax.swing.JTextPane;\n+import javax.swing.text.DefaultEditorKit;\n+\n+\/*\n+ * @test\n+ * @bug 4265242\n+ * @summary Tests endParagraphAction in JTextPane\n+ *\/\n+\n+public class bug4265242 {\n+    public static void main(String[] args) {\n+        JTextPane jTextPane = new JTextPane();\n+        jTextPane.setText(\"Merry sparrow\");\n+\n+        Action[] actions = jTextPane.getActions();\n+        Action endPara = null;\n+        for (Action action : actions) {\n+            String name = (String) action.getValue(Action.NAME);\n+            if (name.equals(DefaultEditorKit.endParagraphAction)) {\n+                endPara = action;\n+            }\n+        }\n+        endPara.actionPerformed(new ActionEvent(jTextPane,\n+                ActionEvent.ACTION_PERFORMED,\n+                DefaultEditorKit.endParagraphAction));\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/DefaultEditorKit\/bug4265242.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import javax.swing.text.DefaultStyledDocument;\n+import javax.swing.text.Element;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyledDocument;\n+\n+\/*\n+ * @test\n+ * @bug 4472852\n+ * @summary Tests DefaultStyledDocument.split(int, int)\n+ *\/\n+\n+public class bug4472852 {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ create a Document and insert some text there\n+        StyledDocument doc = new DefaultStyledDocument();\n+        doc.insertString(0, \"this\", null);\n+\n+        \/\/ add style to the last word\n+        Element root = doc.getDefaultRootElement();\n+        int end = root.getEndOffset();\n+        MutableAttributeSet as = new SimpleAttributeSet();\n+        StyleConstants.setBackground(as, Color.BLUE);\n+        doc.setCharacterAttributes(end-5, 5, as, true);\n+\n+        \/\/ inspect Elements of the only Paragraph --\n+        \/\/ there should be no empty Elements\n+        Element para = root.getElement(0);\n+        for (int i = 0; i < para.getElementCount(); i++) {\n+            Element el = para.getElement(i);\n+            if (el.getStartOffset() == el.getEndOffset()) {\n+                throw new RuntimeException(\"Failed: empty Element found\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/DefaultStyledDocument\/bug4472852.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}