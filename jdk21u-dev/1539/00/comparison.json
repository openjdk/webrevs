{"files":[{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4180943\n+ * @summary Extra borders created by DefaultListCellRenderer\n+ * @run main bug4180943\n+ *\/\n+\n+import javax.swing.DefaultListCellRenderer;\n+\n+public class bug4180943 {\n+    public static void main(String[] argv) {\n+        DefaultListCellRenderer lcr1 = new DefaultListCellRenderer();\n+        DefaultListCellRenderer lcr2 = new DefaultListCellRenderer();\n+        if (lcr1.getBorder() != lcr2.getBorder()) {\n+            throw new RuntimeException(\"Extra borders created by DefaultListCellRenderer\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/DefaultListCellRenderer\/4180943\/bug4180943.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4466250\n+ * @summary DefaultListModel.removeRange does not throw IllegalArgumentException\n+ * @run main bug4466250\n+*\/\n+\n+import javax.swing.DefaultListModel;\n+import javax.swing.JLabel;\n+\n+public class bug4466250 {\n+    public static void main(String[] args) {\n+        DefaultListModel model = new DefaultListModel();\n+        int size = 16;\n+        for (int i = 0; i < size; i++ ) {\n+            model.addElement(new JLabel(\"wow\"));\n+        }\n+\n+        try {\n+            model.removeRange(3, 1);\n+            throw new RuntimeException(\"IllegalArgumentException has not been thrown\");\n+        } catch (IllegalArgumentException e) {\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/DefaultListModel\/4466250\/bug4466250.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4140619\n+ * @summary Breaks SINGLE_SELECTION in DefaultListSelectionModel.setLeadSelectionIndex()\n+ * @run main bug4140619\n+ *\/\n+\n+import javax.swing.DefaultListSelectionModel;\n+import javax.swing.ListSelectionModel;\n+\n+public class bug4140619 {\n+    public static void main(String[] args) {\n+        DefaultListSelectionModel selection = new DefaultListSelectionModel();\n+        selection.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n+        selection.setSelectionInterval(10, 10);\n+        selection.removeSelectionInterval(10, 10);\n+        selection.setLeadSelectionIndex(2);\n+        selection.setLeadSelectionIndex(30);\n+        selection.setLeadSelectionIndex(5);\n+\n+        if (selection.getMinSelectionIndex()!=5\n+                || selection.getMaxSelectionIndex()!=5) {\n+            throw new RuntimeException(\"DefaultListSelectionModel: breaks SINGLE_SELECTION \"\n+                    + \"in setLeadSelectionIndex()\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/DefaultListSelectionModel\/4140619\/bug4140619.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4177723\n+ * @summary ListSelectionEvents fired on model changes affecting JList selection\n+ * @run main bug4177723\n+ *\/\n+\n+import javax.swing.DefaultListModel;\n+import javax.swing.JList;\n+\n+public class bug4177723 {\n+    static int count = 0;\n+\n+    public static void main (String[] args) {\n+        DefaultListModel model = new DefaultListModel();\n+        for (int i = 0; i < 10; i++) {\n+            model.addElement(\"item \" + i);\n+        }\n+\n+        JList list = new JList(model);\n+        list.addListSelectionListener(e -> count++);\n+\n+        list.getSelectionModel().setSelectionInterval(3, 8);\n+        model.removeRange(4, 7);\n+        if (count != 2) {\n+            throw new RuntimeException(\"ListSelectionEvent wasn't generated\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/DefaultListSelectionModel\/4177723\/bug4177723.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4827074\n+ * @summary ImageIcon serialization does not preload restored images\n+ * @run main bug4827074\n+ *\/\n+\n+import javax.swing.ImageIcon;\n+import java.awt.Image;\n+import java.awt.Panel;\n+import java.awt.image.MemoryImageSource;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+\n+public class bug4827074 extends Panel {\n+\n+    static ImageIcon testIcon = null;\n+    private volatile static boolean passed = false;\n+\n+    public void init() {\n+        testIcon = new TestImageIcon();\n+        ImageIcon icon = saveAndLoad(testIcon);\n+\n+        if (!passed) {\n+            throw new RuntimeException(\"Image was not loaded properly\");\n+        }\n+    }\n+\n+    synchronized static void setPassed(boolean p) {\n+        passed = p;\n+    }\n+\n+    static ImageIcon saveAndLoad(ImageIcon ii) {\n+        ImageIcon _ii = null;\n+        try {\n+            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+            ObjectOutputStream out = new ObjectOutputStream(baos);\n+            out.writeObject(ii);\n+            out.flush();\n+            ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());\n+            ObjectInputStream in = new ObjectInputStream(bais);\n+            _ii = (ImageIcon)in.readObject();\n+        } catch (Exception ex) {\n+            ex.printStackTrace();\n+        }\n+        return _ii;\n+    }\n+\n+    class TestImageIcon extends ImageIcon {\n+        public TestImageIcon() {\n+            super();\n+            setImage(buildImage());\n+        }\n+\n+        private Image buildImage() {\n+            int w = 32, h = 32;\n+            float halfW = w \/ 2 , halfH = h \/ 2;\n+            int col = 0xff0000;\n+            int[] pixels = new int[w * h];\n+            for(int y = 0; y < h; y++) {\n+                for(int x = 0; x < w; x++) {\n+                    float cx = 1f - (float)x \/ halfW;\n+                    float cy = 1f - (float)y \/ halfH;\n+                    double ray = Math.sqrt(cx * cx + cy * cy);\n+                    pixels[y * w + x] = ray < 1 ? col | (255 - (int)(ray * 255)) << 24:0;\n+                }\n+            }\n+            MemoryImageSource mis = new MemoryImageSource(w, h, pixels, 0, w);\n+            Image image = createImage(mis);\n+            return image;\n+        }\n+\n+        protected void loadImage(Image image) {\n+            super.loadImage(image);\n+            if (testIcon != null && image != testIcon.getImage()) {\n+                setPassed(true);\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        bug4827074 bug = new bug4827074();\n+        bug.init();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/ImageIcon\/4827074\/bug4827074.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"}]}