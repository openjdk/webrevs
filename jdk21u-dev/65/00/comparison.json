{"files":[{"patch":"@@ -101,0 +101,1 @@\n+        System.out.println(\"Terminating all processes\");\n@@ -141,1 +142,1 @@\n-            System.out.println(\"realeaseStarted(\" + ids + \")\");\n+            System.out.println(\"releaseStarted(\" + ids + \")\");\n@@ -152,1 +153,1 @@\n-                    System.out.println(\"RELEASED (id=\" + jp.getId() + \", args=\" + jp.getMainArgsIdentifier() + \")\");\n+                    System.out.println(\"RELEASED started (id=\" + jp.getId() + \", args=\" + jp.getMainArgsIdentifier() + \")\");\n@@ -157,0 +158,1 @@\n+            System.out.println(\"releaseStarted: not a test pid: \" + id);\n@@ -169,1 +171,1 @@\n-                    System.out.println(\"RELEASED (id=\" + jp.getId() + \", args=\" + jp.getMainArgsIdentifier() + \")\");\n+                    System.out.println(\"RELEASED terminated (id=\" + jp.getId() + \", args=\" + jp.getMainArgsIdentifier() + \")\");\n@@ -176,0 +178,2 @@\n+        private static final int ARGS_ATTEMPTS = 3;\n+\n@@ -177,0 +181,1 @@\n+            VmIdentifier vmid = null;\n@@ -178,5 +183,25 @@\n-                VmIdentifier vmid = new VmIdentifier(\"\/\/\" + id.intValue());\n-                MonitoredVm target = host.getMonitoredVm(vmid);\n-                String monitoredArgs = MonitoredVmUtil.mainArgs(target);\n-                if (monitoredArgs != null && monitoredArgs.contains(args)) {\n-                    return true;\n+                vmid = new VmIdentifier(\"\/\/\" + id.intValue());\n+            } catch (URISyntaxException e) {\n+                System.out.println(\"hasMainArgs(\" + id + \"): \" + e);\n+                return false;\n+            }\n+            \/\/ Retry a failing attempt to check arguments for a match,\n+            \/\/ as not recognizing a test process will cause timeout and failure.\n+            for (int i = 0; i < ARGS_ATTEMPTS; i++) {\n+                try {\n+                    MonitoredVm target = host.getMonitoredVm(vmid);\n+                    String monitoredArgs = MonitoredVmUtil.mainArgs(target);\n+                    System.out.println(\"hasMainArgs(\" + id + \"): has main args: '\" + monitoredArgs + \"'\");\n+                    if (monitoredArgs == null || monitoredArgs.equals(\"Unknown\")) {\n+                        System.out.println(\"hasMainArgs(\" + id + \"): retry\" );\n+                        takeNap();\n+                        continue;\n+                    } else if (monitoredArgs.contains(args)) {\n+                        return true;\n+                    } else {\n+                        return false;\n+                    }\n+                } catch (MonitorException e) {\n+                    \/\/ Process probably not running or not ours, e.g.\n+                    \/\/ sun.jvmstat.monitor.MonitorException: Could not attach to PID\n+                    System.out.println(\"hasMainArgs(\" + id + \"): \" + e);\n@@ -184,2 +209,0 @@\n-            } catch (URISyntaxException | MonitorException e) {\n-                \/\/ ok. process probably not running\n@@ -250,8 +273,0 @@\n-        private static void takeNap() {\n-            try {\n-                Thread.sleep(100);\n-            } catch (InterruptedException e) {\n-                \/\/ ignore\n-            }\n-        }\n-\n@@ -326,0 +341,8 @@\n+\n+    public static void takeNap() {\n+        try {\n+            Thread.sleep(1000);\n+        } catch (InterruptedException e) {\n+            \/\/ ignore\n+        }\n+    }\n","filename":"test\/jdk\/sun\/jvmstat\/monitor\/MonitoredVm\/MonitorVmStartTerminate.java","additions":41,"deletions":18,"binary":false,"changes":59,"status":"modified"}]}