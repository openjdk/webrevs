{"files":[{"patch":"@@ -1572,2 +1572,9 @@\n-                if (frameStack.head.tree.hasTag(LAMBDA)) {\n-                    lambdaContext.addSymbol(tree.sym, LOCAL_VAR);\n+                for (Frame frame : frameStack) {\n+                    if (frame.tree.hasTag(VARDEF)) {\n+                        \/\/skip variable frames inside a lambda:\n+                        continue;\n+                    } else if (frame.tree.hasTag(LAMBDA)) {\n+                        lambdaContext.addSymbol(tree.sym, LOCAL_VAR);\n+                    } else {\n+                        break;\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+ \/*\n+ * @test\n+ * @bug 8312229\n+ * @summary Ensure javac does not crash when a variable is used from an anonymous class\n+ * @compile T8312229.java\n+ *\/\n+public class T8312229 {\n+    void test(Object o) {\n+        Runnable r = () -> {\n+            var l = switch (o) {\n+                default -> {\n+                    Integer i = 42;\n+                    yield new Runnable() {\n+                        public void run() {\n+                            i.toString(); \/\/ should not crash here\n+                        }\n+                    };\n+                }\n+            };\n+        };\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8312229.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"}]}