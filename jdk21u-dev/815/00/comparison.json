{"files":[{"patch":"@@ -793,3 +793,4 @@\n-  GrowableArray<int>* bcis = new (C->node_arena()) GrowableArray<int>(C->node_arena(), 8, 0, -1);\n-  GrowableArray<const Type*>* extypes = new (C->node_arena()) GrowableArray<const Type*>(C->node_arena(), 8, 0, nullptr);\n-  GrowableArray<int>* saw_unloaded = new (C->node_arena()) GrowableArray<int>(C->node_arena(), 8, 0, 0);\n+  Arena tmp_mem{mtCompiler};\n+  GrowableArray<int> bcis(&tmp_mem, 8, 0, -1);\n+  GrowableArray<const Type*> extypes(&tmp_mem, 8, 0, nullptr);\n+  GrowableArray<int> saw_unloaded(&tmp_mem, 8, 0, -1);\n@@ -799,3 +800,3 @@\n-    ciExceptionHandler* h        = handlers.handler();\n-    int                 h_bci    = h->handler_bci();\n-    ciInstanceKlass*    h_klass  = h->is_catch_all() ? env()->Throwable_klass() : h->catch_klass();\n+    ciExceptionHandler* h       = handlers.handler();\n+    int                 h_bci   = h->handler_bci();\n+    ciInstanceKlass*    h_klass = h->is_catch_all() ? env()->Throwable_klass() : h->catch_klass();\n@@ -804,1 +805,1 @@\n-      if (saw_unloaded->contains(h_bci)) {\n+      if (saw_unloaded.contains(h_bci)) {\n@@ -810,1 +811,1 @@\n-        saw_unloaded->append(h_bci);\n+        saw_unloaded.append(h_bci);\n@@ -813,1 +814,1 @@\n-    const Type*         h_extype = TypeOopPtr::make_from_klass(h_klass);\n+    const Type* h_extype = TypeOopPtr::make_from_klass(h_klass);\n@@ -817,3 +818,3 @@\n-    \/\/ Note:  It's OK if the BCIs repeat themselves.\n-    bcis->append(h_bci);\n-    extypes->append(h_extype);\n+    \/\/ Note: It's OK if the BCIs repeat themselves.\n+    bcis.append(h_bci);\n+    extypes.append(h_extype);\n@@ -826,1 +827,1 @@\n-    bcis->append(-1);\n+    bcis.append(-1);\n@@ -829,1 +830,1 @@\n-    extypes->append(extype);\n+    extypes.append(extype);\n@@ -832,1 +833,1 @@\n-  int len = bcis->length();\n+  int len = bcis.length();\n@@ -843,1 +844,1 @@\n-    int handler_bci = bcis->at(i);\n+    int handler_bci = bcis.at(i);\n@@ -850,2 +851,2 @@\n-    const TypeInstPtr* extype = extypes->at(i)->is_instptr();\n-    Node *ex_oop = _gvn.transform(new CreateExNode(extypes->at(i), ctrl, i_o));\n+    const TypeInstPtr* extype = extypes.at(i)->is_instptr();\n+    Node* ex_oop = _gvn.transform(new CreateExNode(extypes.at(i), ctrl, i_o));\n@@ -854,1 +855,1 @@\n-    if (saw_unloaded->contains(handler_bci)) {\n+    if (saw_unloaded.contains(handler_bci)) {\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":20,"deletions":19,"binary":false,"changes":39,"status":"modified"}]}