{"files":[{"patch":"@@ -865,9 +865,0 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xclang; then\n-    NO_DELETE_NULL_POINTER_CHECKS_CFLAG=\"-fno-delete-null-pointer-checks\"\n-    FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [$NO_DELETE_NULL_POINTER_CHECKS_CFLAG],\n-        PREFIX: $3,\n-        IF_FALSE: [\n-            NO_DELETE_NULL_POINTER_CHECKS_CFLAG=\n-        ]\n-    )\n-    $1_TOOLCHAIN_CFLAGS=\"${NO_DELETE_NULL_POINTER_CHECKS_CFLAG}\"\n@@ -1011,7 +1002,2 @@\n-  # These flags are required for GCC 6 builds as undefined behavior in OpenJDK code\n-  # runs afoul of the more aggressive versions of these optimizations.\n-  # Notably, value range propagation now assumes that the this pointer of C++\n-  # member functions is non-null.\n-  NO_DELETE_NULL_POINTER_CHECKS_CFLAG=\"-fno-delete-null-pointer-checks\"\n-  FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [$NO_DELETE_NULL_POINTER_CHECKS_CFLAG],\n-      PREFIX: $2, IF_FALSE: [NO_DELETE_NULL_POINTER_CHECKS_CFLAG=\"\"])\n+  # This flag is required for GCC 6 builds as undefined behavior in OpenJDK code\n+  # runs afoul of the more aggressive versions of this optimization.\n@@ -1021,1 +1007,1 @@\n-  $1_GCC6_CFLAGS=\"${NO_DELETE_NULL_POINTER_CHECKS_CFLAG} ${NO_LIFETIME_DSE_CFLAG}\"\n+  $1_GCC6_CFLAGS=\"${NO_LIFETIME_DSE_CFLAG}\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"}]}