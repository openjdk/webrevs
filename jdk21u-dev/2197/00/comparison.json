{"files":[{"patch":"@@ -135,2 +135,3 @@\n-                                    \"EC\",\n-                                    ProtocolVersion.PROTOCOLS_TO_13),\n+                                    \"EC\", null, null, -1,\n+                                    ProtocolVersion.PROTOCOLS_TO_13,\n+                                    ProtocolVersion.PROTOCOLS_TO_12),\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SignatureScheme.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -787,1 +787,2 @@\n-    ECDH, TLS_RSA_*\n+    ECDH, TLS_RSA_*, rsa_pkcs1_sha1 usage HandshakeSignature, \\\n+    ecdsa_sha1 usage HandshakeSignature, dsa_sha1 usage HandshakeSignature\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340321\n+ * @summary Disable SHA-1 in TLS\/DTLS 1.2 signatures.\n+ *          This test only covers DTLS 1.2.\n+ * @library \/javax\/net\/ssl\/templates\n+ *          \/test\/lib\n+ * @run main\/othervm DisableSHA1inHandshakeSignatureDTLS12\n+ *\/\n+\n+public class DisableSHA1inHandshakeSignatureDTLS12 extends\n+        DisableSHA1inHandshakeSignatureTLS12 {\n+\n+    protected DisableSHA1inHandshakeSignatureDTLS12() throws Exception {\n+        super();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        new DisableSHA1inHandshakeSignatureDTLS12().run();\n+    }\n+\n+    @Override\n+    protected String getProtocol() {\n+        return \"DTLSv1.2\";\n+    }\n+\n+    \/\/ No CertificateRequest in DTLS server flight.\n+    @Override\n+    protected void checkCertificateRequest() {\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSHA1inHandshakeSignatureDTLS12.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340321\n+ * @summary Disable SHA-1 in TLS\/DTLS 1.2 signatures.\n+ *          This test only covers TLS 1.2.\n+ * @library \/javax\/net\/ssl\/templates\n+ *          \/test\/lib\n+ * @run main\/othervm DisableSHA1inHandshakeSignatureTLS12\n+ *\/\n+\n+import static jdk.test.lib.Asserts.assertFalse;\n+import static jdk.test.lib.Asserts.assertTrue;\n+\n+import java.util.List;\n+\n+public class DisableSHA1inHandshakeSignatureTLS12 extends\n+        AbstractCheckSignatureSchemes {\n+\n+    protected DisableSHA1inHandshakeSignatureTLS12() throws Exception {\n+        super();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        new DisableSHA1inHandshakeSignatureTLS12().run();\n+    }\n+\n+    @Override\n+    protected String getProtocol() {\n+        return \"TLSv1.2\";\n+    }\n+\n+    \/\/ Run things in TLS handshake order.\n+    protected void run() throws Exception {\n+\n+        \/\/ Produce client_hello\n+        clientEngine.wrap(clientOut, cTOs);\n+        cTOs.flip();\n+\n+        checkClientHello();\n+\n+        \/\/ Consume client_hello.\n+        serverEngine.unwrap(cTOs, serverIn);\n+        runDelegatedTasks(serverEngine);\n+\n+        \/\/ Produce server_hello.\n+        serverEngine.wrap(serverOut, sTOc);\n+        sTOc.flip();\n+\n+        checkCertificateRequest();\n+    }\n+\n+    \/\/ Returns SHA-1 signature schemes supported for TLSv1.2 handshake\n+    protected List<String> getDisabledSignatureSchemes() {\n+        return List.of(\n+                \"ecdsa_sha1\",\n+                \"rsa_pkcs1_sha1\",\n+                \"dsa_sha1\"\n+        );\n+    }\n+\n+    protected void checkClientHello() throws Exception {\n+        \/\/ Get signature_algorithms extension signature schemes.\n+        List<String> sigAlgsSS = getSigSchemesCliHello(\n+                extractHandshakeMsg(cTOs, TLS_HS_CLI_HELLO),\n+                SIG_ALGS_EXT);\n+\n+        \/\/ Should not be present in signature_algorithms extension.\n+        getDisabledSignatureSchemes().forEach(ss ->\n+                assertFalse(sigAlgsSS.contains(ss),\n+                        \"Signature Scheme \" + ss\n+                        + \" present in ClientHello's signature_algorithms extension\"));\n+\n+        \/\/ Get signature_algorithms_cert extension signature schemes.\n+        List<String> sigAlgsCertSS = getSigSchemesCliHello(\n+                extractHandshakeMsg(cTOs, TLS_HS_CLI_HELLO),\n+                SIG_ALGS_CERT_EXT);\n+\n+        \/\/ Should be present in signature_algorithms_cert extension.\n+        getDisabledSignatureSchemes().forEach(ss ->\n+                assertTrue(sigAlgsCertSS.contains(ss),\n+                        \"Signature Scheme \" + ss\n+                        + \" isn't present in ClientHello's\"\n+                        + \" signature_algorithms extension\"));\n+    }\n+\n+    protected void checkCertificateRequest() throws Exception {\n+        \/\/ Get CertificateRequest message signature schemes.\n+        List<String> sigAlgsCertSS = getSigSchemesCertReq(\n+                extractHandshakeMsg(sTOc, TLS_HS_CERT_REQ));\n+\n+        \/\/ Should not be present in CertificateRequest message.\n+        getDisabledSignatureSchemes().forEach(ss ->\n+                assertFalse(sigAlgsCertSS.contains(ss),\n+                        \"Signature Scheme \" + ss\n+                        + \" present in CertificateRequest\"));\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSHA1inHandshakeSignatureTLS12.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340321\n+ * @summary Disable SHA-1 in TLS\/DTLS 1.2 signatures.\n+ *          This test only covers TLS 1.3.\n+ * @library \/javax\/net\/ssl\/templates\n+ *          \/test\/lib\n+ * @run main\/othervm DisableSHA1inHandshakeSignatureTLS13\n+ *\/\n+\n+import java.security.Security;\n+import java.util.List;\n+\n+public class DisableSHA1inHandshakeSignatureTLS13 extends\n+        DisableSHA1inHandshakeSignatureTLS12 {\n+\n+    protected DisableSHA1inHandshakeSignatureTLS13() throws Exception {\n+        super();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ SHA-1 algorithm MUST NOT be used in any TLSv1.3 handshake signatures.\n+        \/\/ This is regardless of jdk.tls.disabledAlgorithms configuration.\n+        Security.setProperty(\"jdk.tls.disabledAlgorithms\", \"\");\n+        new DisableSHA1inHandshakeSignatureTLS13().run();\n+    }\n+\n+    @Override\n+    protected String getProtocol() {\n+        return \"TLSv1.3\";\n+    }\n+\n+    \/\/ Returns SHA-1 signature schemes NOT supported for TLSv1.3 handshake\n+    \/\/ signatures, but supported for TLSv1.3 certificate signatures.\n+    @Override\n+    protected List<String> getDisabledSignatureSchemes() {\n+        return List.of(\"ecdsa_sha1\", \"rsa_pkcs1_sha1\");\n+    }\n+\n+    \/\/ TLSv1.3 sends CertificateRequest signature schemes in\n+    \/\/ signature_algorithms and signature_algorithms_cert extensions. Same as\n+    \/\/ ClientHello, but they are encrypted. So we skip CertificateRequest\n+    \/\/ signature schemes verification for TLSv1.3.\n+    @Override\n+    protected void checkCertificateRequest() {\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSHA1inHandshakeSignatureTLS13.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}