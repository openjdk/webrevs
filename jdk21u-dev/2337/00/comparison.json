{"files":[{"patch":"@@ -39,1 +39,0 @@\n-import java.awt.event.InputEvent;\n@@ -43,0 +42,3 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n@@ -45,1 +47,0 @@\n-    final MouseEnterExitListener mouseEnterExitListener = new MouseEnterExitListener();\n@@ -49,0 +50,7 @@\n+    private static final int X_OFFSET = 30;\n+    private static final int Y_OFFSET = 40;\n+    private static final int LATCH_TIMEOUT = 3;\n+\n+    private final CountDownLatch mouseEnterLatch = new CountDownLatch(1);\n+    private final CountDownLatch mouseExitLatch = new CountDownLatch(1);\n+\n@@ -60,1 +68,5 @@\n-                list.addMouseListener(mouseEnterExitListener);\n+                list.add(\"Item 3\");\n+                list.add(\"Item 4\");\n+                list.add(\"Item 5\");\n+                list.add(\"Item 6\");\n+                list.addMouseListener(new MouseEnterExitListener());\n@@ -69,1 +81,1 @@\n-            robot.delay(1000);\n+            robot.setAutoDelay(100);\n@@ -71,0 +83,1 @@\n+            robot.delay(1000);\n@@ -75,2 +88,1 @@\n-            robot.mouseMove(p.x + 10, p.y + 10);\n-            robot.delay(100);\n+            robot.mouseMove(p.x + X_OFFSET, p.y + Y_OFFSET);\n@@ -78,2 +90,2 @@\n-            robot.mouseMove(p.x - 10, p.y - 10);\n-            robot.delay(100);\n+\n+            robot.mouseMove(p.x - X_OFFSET, p.y + Y_OFFSET);\n@@ -81,1 +93,0 @@\n-            robot.mouseMove(p.x + 10, p.y + 10);\n@@ -83,2 +94,6 @@\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            robot.mouseMove(p.x + X_OFFSET, p.y + Y_OFFSET);\n+            robot.waitForIdle();\n+\n+            if (!mouseEnterLatch.await(LATCH_TIMEOUT, TimeUnit.SECONDS)) {\n+                throw new RuntimeException(\"Mouse enter event timeout\");\n+            }\n@@ -86,2 +101,2 @@\n-            synchronized (mouseEnterExitListener) {\n-                mouseEnterExitListener.wait(2000);\n+            if (!mouseExitLatch.await(LATCH_TIMEOUT, TimeUnit.SECONDS)) {\n+                throw new RuntimeException(\"Mouse exit event timeout\");\n@@ -96,5 +111,0 @@\n-        System.out.println(\"mouseEnterExitListener.isPassed() : \" + mouseEnterExitListener.isPassed());\n-        if (!mouseEnterExitListener.isPassed()) {\n-            throw new RuntimeException(\"Haven't receive mouse enter\/exit events\");\n-        }\n-\n@@ -103,21 +113,5 @@\n-}\n-\n-class MouseEnterExitListener extends MouseAdapter {\n-\n-    volatile boolean passed_1 = false;\n-    volatile boolean passed_2 = false;\n-\n-    public void mouseEntered(MouseEvent e) {\n-        passed_1 = true;\n-        System.out.println(\"passed_1 is: \" + passed_1);\n-    }\n-\n-    public void mouseExited(MouseEvent e) {\n-        passed_2 = true;\n-        System.out.println(\"passed_2 is: \" + passed_2);\n-    }\n-\n-    public void mousePressed(MouseEvent e) {\n-        synchronized (this) {\n-            System.out.println(\"mouse pressed\");\n-            this.notifyAll();\n+    private class MouseEnterExitListener extends MouseAdapter {\n+        @Override\n+        public void mouseEntered(MouseEvent e) {\n+            System.out.println(\"Mouse Entered Event\");\n+            mouseEnterLatch.countDown();\n@@ -125,1 +119,0 @@\n-    }\n@@ -127,2 +120,5 @@\n-    public boolean isPassed() {\n-        return passed_1 & passed_2;\n+        @Override\n+        public void mouseExited(MouseEvent e) {\n+            System.out.println(\"Mouse Exited Event\");\n+            mouseExitLatch.countDown();\n+        }\n","filename":"test\/jdk\/java\/awt\/List\/ListEnterExitTest.java","additions":38,"deletions":42,"binary":false,"changes":80,"status":"modified"}]}