{"files":[{"patch":"@@ -51,2 +51,3 @@\n-  if (n->Opcode() == Op_ConvI2L && n->bottom_type() != TypeLong::LONG) {\n-    \/\/ ConvI2L may have type information on it which is unsafe to push up\n+  if ((n->Opcode() == Op_ConvI2L && n->bottom_type() != TypeLong::LONG) ||\n+      (n->Opcode() == Op_ConvL2I && n->bottom_type() != TypeInt::INT)) {\n+    \/\/ ConvI2L\/ConvL2I may have type information on it which is unsafe to push up\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8331575\n+ * @summary C2: crash when ConvL2I is split thru phi at LongCountedLoop\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=92643864 TestLongCountedLoopConvL2I\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM TestLongCountedLoopConvL2I\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM TestLongCountedLoopConvL2I\n+ *\/\n+\n+public class TestLongCountedLoopConvL2I {\n+    private static volatile int volatileField;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            testHelper1(42);\n+            test1(0);\n+        }\n+    }\n+\n+    private static int test1(int res) {\n+        int k = 1;\n+        for (; k < 2; k *= 2) {\n+        }\n+        long i = testHelper1(k);\n+        for (; i > 0; i--) {\n+            res += 42 \/ ((int) i);\n+            for (int j = 1; j < 10; j *= 2) {\n+\n+            }\n+        }\n+        return res;\n+    }\n+\n+    private static long testHelper1(int k) {\n+        if (k == 2) {\n+            return 100;\n+        } else {\n+            return 99;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestLongCountedLoopConvL2I.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8331575\n+ * @summary C2: crash when ConvL2I is split thru phi at LongCountedLoop\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=TestLongCountedLoopConvL2I2.* TestLongCountedLoopConvL2I2\n+ *\/\n+\n+public class TestLongCountedLoopConvL2I2 {\n+    static int x = 34;\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 2; i++) {\n+            test();\n+        }\n+    }\n+\n+    static int test() {\n+        int a = 5, b = 6;\n+        long lArr[] = new long[2];\n+\n+        for (long i = 159; i > 1; i -= 3) {\n+            a += 3;\n+            for (int j = 1; j < 4; j++) {\n+                if (a == 9) {\n+                    if (x == 73) {\n+                        try {\n+                            b = 10 \/ (int) i;\n+                        } catch (ArithmeticException a_e) {\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return b;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestLongCountedLoopConvL2I2.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}