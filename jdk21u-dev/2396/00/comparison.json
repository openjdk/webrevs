{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,0 +176,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -212,3 +213,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -234,1 +232,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -244,1 +241,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,2 @@\n+    static Thread test_thread = null;\n+\n@@ -101,2 +103,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadinvokemethod001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadinvokemethod001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod001a.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -187,0 +187,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -219,2 +220,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -231,1 +230,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -240,15 +238,1 @@\n-\n-                log2(\"......getting Thread thread2 - 1-st argument\");\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance001.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,1 @@\n+    static Thread test_thread = null;\n@@ -99,2 +100,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadnewinstance001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadnewinstance001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance001a.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,0 +184,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -216,2 +217,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -228,1 +227,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -237,14 +235,1 @@\n-\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance002.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+    static Threadnewinstance002a test_thread = null;\n@@ -100,1 +101,1 @@\n-                         Threadnewinstance002a test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance002a.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,0 +171,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -202,2 +203,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -214,1 +213,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -223,13 +221,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/getValue\/getvalue001.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadgetvalue001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadgetvalue001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/getValue\/getvalue001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,0 +175,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -207,2 +208,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -219,1 +218,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -228,15 +226,1 @@\n-\n-                log2(\"......getting Thread thread2 - 1-st argument\");\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/getValue\/getvalue002.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+    static getvalue002aThread test_thread = null;\n@@ -100,2 +101,1 @@\n-                         getvalue002aThread test_thread =\n-                             new getvalue002aThread(\"testedThread\");\n+                         test_thread = new getvalue002aThread(\"testedThread\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/getValue\/getvalue002a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,0 +179,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -236,19 +237,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n-\n-                if (thread2 == null) {\n-                    log3(\"ERROR: didn't find thread '\" + threadName + \"'\");\n-                    expresult = returnCode1;\n-                    break label0;\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod001.java","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,3 @@\n+\n+    static Threadinvokemethod001a test_thread = null;\n+\n@@ -98,2 +101,1 @@\n-                         Threadinvokemethod001a test_thread =\n-                             new Threadinvokemethod001a(\"testedThread\");\n+                         test_thread = new Threadinvokemethod001a(\"testedThread\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod001a.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,0 +156,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -182,5 +183,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n-\n-\n@@ -189,22 +185,1 @@\n-                log2(\"getting ThreadReference object\");\n-                try {\n-                    allThreads  = vm.allThreads();\n-                } catch ( Exception e) {\n-                    log3(\"ERROR: Exception at very beginning !? : \" + e);\n-                    expresult = returnCode1;\n-                    break label0;\n-                }\n-\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/referenceType\/referencetype001.java","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,3 @@\n+\n+    static Threadreferencetype001a test_thread = null;\n+\n@@ -98,2 +101,1 @@\n-                         Threadreferencetype001a test_thread =\n-                             new Threadreferencetype001a(\"testedThread\");\n+                         test_thread = new Threadreferencetype001a(\"testedThread\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/referenceType\/referencetype001a.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,0 +171,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -207,3 +208,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -227,1 +225,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -236,1 +233,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,1 +99,1 @@\n-                         Thread test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue001a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,0 +177,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -214,2 +215,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -233,1 +232,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -242,1 +240,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue002.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadgetvalue002a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadgetvalue002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue002a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -208,3 +209,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -228,1 +226,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -237,1 +234,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadgetvalues001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadgetvalues001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,0 +179,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -215,3 +216,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -235,1 +233,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -244,1 +241,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues002.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadgetvalues002a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadgetvalues002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues002a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,0 +177,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -213,3 +214,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -233,1 +231,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -242,1 +239,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/location\/location001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadlocation001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadlocation001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/location\/location001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,0 +255,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -292,3 +293,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -312,1 +310,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -321,1 +318,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue001\/setvalue001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,4 @@\n-    \/\/----------------------------------------------------   main method\n+\n+    static Thread test_thread = null;\n+\n+   \/\/----------------------------------------------------   main method\n@@ -96,1 +99,1 @@\n-                         Thread test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue001\/setvalue001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -269,0 +269,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -305,3 +306,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -325,1 +323,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -334,1 +331,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue002\/setvalue002.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    static public Thread test_thread = null;\n+    static Thread test_thread = null;\n@@ -100,1 +100,1 @@\n-                                 JDIThreadFactory.newThread(new Threadsetvalue002a(\"testedThread\"));\n+                             JDIThreadFactory.newThread(new Threadsetvalue002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue002\/setvalue002a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,0 +263,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -299,3 +300,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -319,1 +317,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -328,1 +325,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue003\/setvalue003.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -95,2 +98,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadsetvalue003a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadsetvalue003a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue003\/setvalue003a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -256,0 +256,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -292,3 +293,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -312,1 +310,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -321,1 +318,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue004\/setvalue004.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -95,2 +98,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadsetvalue004a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadsetvalue004a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue004\/setvalue004a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,0 +173,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -209,3 +210,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -229,1 +227,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -238,1 +235,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thisObject\/thisobject001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,3 @@\n+\n+    static Threadthisobject001a test_thread = null;\n+\n@@ -97,2 +100,1 @@\n-                         Threadthisobject001a test_thread =\n-                             new Threadthisobject001a(\"testedThread\");\n+                         test_thread = new Threadthisobject001a(\"testedThread\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thisObject\/thisobject001a.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -208,3 +209,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -228,1 +226,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -237,1 +234,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thisObject\/thisobject002.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -97,2 +100,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadthisobject002a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadthisobject002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thisObject\/thisobject002a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -206,3 +207,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -226,1 +224,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -235,1 +232,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thread\/thread001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadthread001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadthread001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thread\/thread001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,0 +175,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -211,3 +212,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -231,1 +229,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -240,1 +237,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariableByName\/visiblevarbyname001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadvisiblevarbyname001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadvisiblevarbyname001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariableByName\/visiblevarbyname001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,0 +166,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -202,3 +203,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -222,1 +220,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -231,1 +228,2 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariableByName\/visiblevarbyname002.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadvisiblevarbyname002a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadvisiblevarbyname002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariableByName\/visiblevarbyname002a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -206,3 +207,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -226,1 +224,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -235,1 +232,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariables\/visiblevariables001.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadvisiblevariables001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadvisiblevariables001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariables\/visiblevariables001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,0 +167,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -203,3 +204,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -223,1 +221,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -232,1 +229,1 @@\n-                thread2 = debuggee.threadByName(threadName);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariables\/visiblevariables002.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,1 +99,1 @@\n-                         Thread test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariables\/visiblevariables002a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeClassName());\n@@ -119,1 +120,2 @@\n-        ThreadReference threadReference = debuggee.threadByName(forceEarlyReturn002a.mainThreadName);\n+        ThreadReference threadReference =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\", forceEarlyReturn002a.mainThreadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/forceEarlyReturn\/forceEarlyReturn002\/forceEarlyReturn002.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,2 @@\n-        Thread.currentThread().setName(mainThreadName);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(mainThreadName);\n@@ -68,0 +69,1 @@\n+    public static Thread mainThread = null;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/forceEarlyReturn\/forceEarlyReturn002\/forceEarlyReturn002a.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -187,0 +187,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -224,3 +225,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -246,1 +244,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -255,13 +252,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frame\/frame001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadframe001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadframe001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frame\/frame001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,0 +178,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -215,3 +216,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -235,1 +233,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -244,13 +241,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frameCount\/framecount001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadframecount001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadframecount001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frameCount\/framecount001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -192,0 +192,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -229,3 +230,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -251,1 +249,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -260,13 +257,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames\/frames001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,3 @@\n+\n+    static Threadframes001a test_thread = null;\n+\n@@ -97,1 +100,1 @@\n-                         Threadframes001a test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames\/frames001a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,0 +193,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -231,3 +232,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -253,1 +251,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -262,13 +259,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames_ii\/frames_ii001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,1 +99,1 @@\n-                         Thread test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames_ii\/frames_ii001a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,0 +176,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -214,3 +215,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -237,1 +235,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -246,13 +243,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames_ii\/frames_ii002.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,3 @@\n+\n+    static Threadframes_ii002a test_thread = null;\n+\n@@ -97,1 +100,1 @@\n-                         Threadframes_ii002a test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames_ii\/frames_ii002a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -207,3 +208,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -223,1 +221,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -232,13 +229,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isAtBreakpoint\/isatbreakpoint001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,1 +99,1 @@\n-                         Thread test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isAtBreakpoint\/isatbreakpoint001a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,1 +132,0 @@\n-    ThreadReference   mainThread   = null;\n@@ -176,0 +175,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -215,3 +215,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -232,1 +229,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -241,28 +237,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n-\n-                log2(\"getting ThreadReference objects for main thread\");\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next() for 'mainThread'\");\n-                        log3(\"ERROR: NO MAIN THREAD ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended001.java","additions":3,"deletions":34,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadissuspended001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadissuspended001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,0 +176,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -213,3 +214,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -230,1 +228,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -239,13 +236,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n@@ -254,13 +239,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next() for 'mainThread'\");\n-                        log3(\"ERROR: NO MAIN THREAD ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                mainThread = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\", \"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended002.java","additions":4,"deletions":31,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,4 @@\n+\n+    static Thread test_thread = null;\n+    static Thread mainThread = null;\n+\n@@ -65,0 +69,2 @@\n+        mainThread = Thread.currentThread();\n+\n@@ -94,2 +100,2 @@\n-                    Thread test_thread =\n-                            JDIThreadFactory.newThread(new Threadissuspended002a(\"testedThread\"));\n+                    test_thread =\n+                        JDIThreadFactory.newThread(new Threadissuspended002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended002a.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,1 +130,0 @@\n-    ThreadReference   mainThread   = null;\n@@ -174,0 +173,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -210,3 +210,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -226,1 +223,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -235,28 +231,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n-\n-                log2(\"getting ThreadReference objects for main thread\");\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next() for 'mainThread'\");\n-                        log3(\"ERROR: NO MAIN THREAD ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended003.java","additions":3,"deletions":34,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadissuspended003a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadissuspended003a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended003a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,0 @@\n-    ThreadReference   mainThread   = null;\n@@ -172,0 +171,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -208,3 +208,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -225,1 +222,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -234,28 +230,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n-\n-                log2(\"getting ThreadReference objects for main thread\");\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next() for 'mainThread'\");\n-                        log3(\"ERROR: NO MAIN THREAD ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended004.java","additions":3,"deletions":34,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadissuspended004a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadissuspended004a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended004a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,0 +165,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -202,3 +203,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -216,1 +214,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -225,13 +222,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/name\/name001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,2 +99,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadname001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadname001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/name\/name001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,0 +169,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -206,3 +207,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -222,1 +220,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -231,13 +228,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/resume\/resume001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -102,2 +105,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadresume001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadresume001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/resume\/resume001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -199,2 +200,0 @@\n-            List            allThreads    = null;\n-            ListIterator    listIterator  = null;\n@@ -210,1 +209,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -219,13 +217,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"thread2\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop001.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -208,3 +209,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -222,1 +220,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -231,13 +228,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/suspend\/suspend001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -95,2 +98,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threadsuspend001a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threadsuspend001a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/suspend\/suspend001a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,0 +169,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -206,3 +207,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -220,1 +218,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -229,13 +226,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/suspendCount\/suspendcount001.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -96,1 +99,1 @@\n-                         Thread test_thread =\n+                         test_thread =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/suspendCount\/suspendcount001a.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,0 +168,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -192,3 +193,0 @@\n-            String threadName = \"testedThread\";\n-\n-            List            allThreads   = null;\n@@ -196,1 +194,0 @@\n-            ListIterator    listIterator = null;\n@@ -204,1 +201,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -213,13 +209,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO 'main' thread  ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                mainThread = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\", \"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetCurrentContendedMonitor\/cangccm001.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+    static Thread mainThread = null;\n@@ -68,0 +69,2 @@\n+        mainThread = Thread.currentThread();\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetCurrentContendedMonitor\/cangccm001a.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,0 +176,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -202,1 +203,0 @@\n-            List            allThreads   = null;\n@@ -204,1 +204,0 @@\n-            ListIterator    listIterator = null;\n@@ -212,1 +211,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -221,13 +219,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO 'main' thread  ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"thread2\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetMonitorInfo\/cangetmonitorinfo001.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,0 +168,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -194,1 +195,0 @@\n-            List            allThreads   = null;\n@@ -196,1 +196,0 @@\n-            ListIterator    listIterator = null;\n@@ -204,1 +203,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -213,13 +211,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO 'main' thread  ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                mainThread = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\", \"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetOwnedMonitorInfo\/cangetinfo001.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+    static Thread mainThread = null;\n@@ -68,0 +69,2 @@\n+        mainThread = Thread.currentThread();\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetOwnedMonitorInfo\/cangetinfo001a.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,0 +168,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -206,2 +207,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -219,1 +218,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -228,13 +226,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose002.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -97,2 +100,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threaddispose002a(\"testedThread\"));\n+                        test_thread =\n+                            JDIThreadFactory.newThread(new Threaddispose002a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose002a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,0 +161,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -188,2 +189,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -197,1 +196,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -206,13 +204,1 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose003.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,3 @@\n+\n+    static Thread test_thread = null;\n+\n@@ -97,2 +100,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threaddispose003a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threaddispose003a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose003a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,0 +162,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -188,2 +189,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -197,1 +196,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -206,26 +204,2 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO MAIN THREAD ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"test_thread\", threadName);\n+                mainThread = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\", \"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose004.java","additions":4,"deletions":30,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,4 @@\n+\n+    static Thread mainThread = null;\n+    static Thread test_thread = null;\n+\n@@ -67,0 +71,2 @@\n+        mainThread = Thread.currentThread();\n+\n@@ -98,2 +104,2 @@\n-                         Thread test_thread =\n-                                 JDIThreadFactory.newThread(new Threaddispose004a(\"testedThread\"));\n+                         test_thread =\n+                             JDIThreadFactory.newThread(new Threaddispose004a(\"testedThread\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose004a.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,0 +209,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -245,3 +246,0 @@\n-\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -262,1 +260,0 @@\n-                    allThreads  = vm.allThreads();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose005.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,0 +173,1 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n@@ -209,2 +210,0 @@\n-            List            allThreads   = null;\n-            ListIterator    listIterator = null;\n@@ -221,1 +220,0 @@\n-                    allThreads  = vm.allThreads();\n@@ -230,26 +228,2 @@\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        thread2 = (ThreadReference) listIterator.next();\n-                        if (thread2.name().equals(threadName))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO THREAD2 ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n-                listIterator = allThreads.listIterator();\n-                for (;;) {\n-                    try {\n-                        mainThread = (ThreadReference) listIterator.next();\n-                        if (mainThread.name().equals(\"main\"))\n-                            break ;\n-                    } catch ( NoSuchElementException e ) {\n-                        log3(\"ERROR: NoSuchElementException for listIterator.next()\");\n-                        log3(\"ERROR: NO MAIN THREAD ?????????!!!!!!!\");\n-                        expresult = returnCode1;\n-                        break label0;\n-                    }\n-                }\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"thread2\", threadName);\n+                mainThread = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\", \"main\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/suspend\/suspend001.java","additions":4,"deletions":30,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,4 @@\n+\n+    static Thread mainThread = null;\n+    static Thread thread2 = null;\n+\n@@ -64,0 +68,2 @@\n+        mainThread = Thread.currentThread();\n+\n@@ -95,1 +101,1 @@\n-                         Thread thread2 =\n+                         thread2 =\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/suspend\/suspend001a.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -273,0 +273,7 @@\n+        return threadByFieldNameOrThrow(debuggeeClass, threadFieldName, threadFieldName);\n+    }\n+\n+    public ThreadReference threadByFieldNameOrThrow(ReferenceType debuggeeClass,\n+                                                    String threadFieldName,\n+                                                    String threadName)\n+            throws JDITestRuntimeException {\n@@ -277,1 +284,1 @@\n-                                              + threadFieldName);\n+                                              + debuggeeClass.name() + \".\" + threadFieldName);\n@@ -283,1 +290,1 @@\n-                                              + threadFieldName);\n+                                              + debuggeeClass.name() + \".\" + threadFieldName);\n@@ -286,1 +293,1 @@\n-        if (!thread.name().equals(threadFieldName)) {\n+        if (!thread.name().equals(threadName)) {\n@@ -288,1 +295,1 @@\n-                                              + threadFieldName + \" vs. \" + thread.name());\n+                                              + threadName + \" vs. \" + thread.name());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Debugee.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"}]}