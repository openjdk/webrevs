{"files":[{"patch":"@@ -1,144 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Shell script for a fast parallel forest command\n-command=\"$1\"\n-pull_extra_base=\"$2\"\n-\n-tmp=\/tmp\/forest.$$\n-rm -f -r ${tmp}\n-mkdir -p ${tmp}\n-\n-# Remove tmp area on A. B. Normal termination\n-trap 'rm -f -r ${tmp}' KILL\n-trap 'rm -f -r ${tmp}' EXIT\n-\n-# Only look in specific locations for possible forests (avoids long searches)\n-pull_default=\"\"\n-repos=\"\"\n-repos_extra=\"\"\n-if [ \"${command}\" = \"clone\" -o \"${command}\" = \"fclone\" ] ; then\n-  subrepos=\"corba jaxp jaxws langtools jdk hotspot nashorn\"\n-  if [ -f .hg\/hgrc ] ; then\n-    pull_default=`hg paths default`\n-    if [ \"${pull_default}\" = \"\" ] ; then\n-      echo \"ERROR: Need initial clone with 'hg paths default' defined\"\n-      exit 1\n-    fi\n-  fi\n-  if [ \"${pull_default}\" = \"\" ] ; then\n-    echo \"ERROR: Need initial repository to use this script\"\n-    exit 1\n-  fi\n-  for i in ${subrepos} ; do\n-    if [ ! -f ${i}\/.hg\/hgrc ] ; then\n-      repos=\"${repos} ${i}\"\n-    fi\n-  done\n-  if [ \"${pull_extra_base}\" != \"\" ] ; then\n-    subrepos_extra=\"jdk\/src\/closed jdk\/make\/closed jdk\/test\/closed hotspot\/make\/closed hotspot\/src\/closed hotspot\/test\/closed deploy install sponsors pubs\"\n-    pull_default_tail=`echo ${pull_default} | sed -e 's@^.*:\/\/[^\/]*\/\\(.*\\)@\\1@'`\n-    pull_extra=\"${pull_extra_base}\/${pull_default_tail}\"\n-    for i in ${subrepos_extra} ; do\n-      if [ ! -f ${i}\/.hg\/hgrc ] ; then\n-        repos_extra=\"${repos_extra} ${i}\"\n-      fi\n-    done\n-  fi\n-  at_a_time=2\n-  # Any repos to deal with?\n-  if [ \"${repos}\" = \"\" -a \"${repos_extra}\" = \"\" ] ; then\n-    echo \"No repositories to clone.\"\n-    exit\n-  fi\n-else\n-  hgdirs=`ls -d .\/.hg .\/*\/.hg .\/*\/*\/.hg .\/*\/*\/*\/.hg .\/*\/*\/*\/*\/.hg 2>\/dev\/null`\n-  # Derive repository names from the .hg directory locations\n-  for i in ${hgdirs} ; do\n-    repos=\"${repos} `echo ${i} | sed -e 's@\/.hg$@@'`\"\n-  done\n-  at_a_time=8\n-  # Any repos to deal with?\n-  if [ \"${repos}\" = \"\" ] ; then\n-    echo \"No repositories to process.\"\n-    exit\n-  fi\n-fi\n-\n-# Echo out what repositories we will clone\n-echo \"# Repos: ${repos} ${repos_extra}\"\n-\n-# Run the supplied command on all repos in parallel, save output until end\n-n=0\n-for i in ${repos} ; do\n-  echo \"Starting on ${i}\"\n-  n=`expr ${n} '+' 1`\n-  (\n-    (\n-      if [ \"${command}\" = \"clone\" -o \"${command}\" = \"fclone\" ] ; then\n-        pull_newrepo=\"`echo ${pull_default}\/${i} | sed -e 's@\\([^:]\/\\)\/\/*@\\1@g'`\"\n-        cline=\"hg clone ${pull_newrepo} ${i}\"\n-        echo \"# ${cline}\"\n-        ( eval \"${cline}\" )\n-      else\n-        cline=\"hg $*\"\n-        echo \"# cd ${i} && ${cline}\"\n-        ( cd ${i} && eval \"${cline}\" )\n-      fi\n-      echo \"# exit code $?\"\n-    ) > ${tmp}\/repo.${n} 2>&1 ; cat ${tmp}\/repo.${n} ) &\n-  if [ `expr ${n} '%' ${at_a_time}` -eq 0 ] ; then\n-    sleep 5\n-  fi\n-done\n-# Wait for all hg commands to complete\n-wait\n-\n-if [ \"${repos_extra}\" != \"\" ] ; then\n-  for i in ${repos_extra} ; do\n-    echo \"Starting on ${i}\"\n-    n=`expr ${n} '+' 1`\n-    (\n-      (\n-          pull_newextrarepo=\"`echo ${pull_extra}\/${i} | sed -e 's@\\([^:]\/\\)\/\/*@\\1@g'`\"\n-          cline=\"hg clone ${pull_newextrarepo} ${i}\"\n-          echo \"# ${cline}\"\n-          ( eval \"${cline}\" )\n-        echo \"# exit code $?\"\n-      ) > ${tmp}\/repo.${n} 2>&1 ; cat ${tmp}\/repo.${n} ) &\n-    if [ `expr ${n} '%' ${at_a_time}` -eq 0 ] ; then\n-      sleep 5\n-    fi\n-  done\n-  # Wait for all hg commands to complete\n-  wait\n-fi\n-\n-# Cleanup\n-rm -f -r ${tmp}\n-\n-# Terminate with exit 0 all the time (hard to know when to say \"failed\")\n-exit 0\n-\n","filename":"make\/scripts\/hgforest.sh","additions":0,"deletions":144,"binary":false,"changes":144,"status":"deleted"},{"patch":"@@ -1,2783 +0,0 @@\n-#!\/bin\/ksh -p\n-#\n-# CDDL HEADER START\n-#\n-# The contents of this file are subject to the terms of the\n-# Common Development and Distribution License (the \"License\").\n-# You may not use this file except in compliance with the License.\n-#\n-# You can obtain a copy of the license at usr\/src\/OPENSOLARIS.LICENSE\n-# or http:\/\/www.opensolaris.org\/os\/licensing.\n-# See the License for the specific language governing permissions\n-# and limitations under the License.\n-#\n-# When distributing Covered Code, include this CDDL HEADER in each\n-# file and include the License file at usr\/src\/OPENSOLARIS.LICENSE.\n-# If applicable, add the following below this CDDL HEADER, with the\n-# fields enclosed by brackets \"[]\" replaced with your own identifying\n-# information: Portions Copyright [yyyy] [name of copyright owner]\n-#\n-# CDDL HEADER END\n-#\n-# Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# Use is subject to license terms.\n-#\n-# This script takes a file list and a workspace and builds a set of html files\n-# suitable for doing a code review of source changes via a web page.\n-# Documentation is available via 'webrev -h'.\n-#\n-\n-WEBREV_UPDATED=25.1-hg+openjdk.java.net\n-\n-HTML='<?xml version=\"1.0\"?>\n-<!DOCTYPE html PUBLIC \"-\/\/W3C\/\/DTD XHTML 1.0 Transitional\/\/EN\"\n-    \"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd\">\n-<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\" xml:lang=\"en\" lang=\"en\">\\n'\n-\n-FRAMEHTML='<?xml version=\"1.0\"?>\n-<!DOCTYPE html PUBLIC \"-\/\/W3C\/\/DTD XHTML 1.0 Frameset\/\/EN\"\n-    \"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-frameset.dtd\">\n-<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\" xml:lang=\"en\" lang=\"en\">\\n'\n-\n-STDHEAD='<meta charset=\"utf-8\">\n-<meta http-equiv=\"cache-control\" content=\"no-cache\" \/>\n-<meta http-equiv=\"Pragma\" content=\"no-cache\" \/>\n-<meta http-equiv=\"Expires\" content=\"-1\" \/>\n-<!--\n-   Note to customizers: the body of the webrev is IDed as SUNWwebrev\n-   to allow easy overriding by users of webrev via the userContent.css\n-   mechanism available in some browsers.\n-\n-   For example, to have all \"removed\" information be red instead of\n-   brown, set a rule in your userContent.css file like:\n-\n-       body#SUNWwebrev span.removed { color: red ! important; }\n--->\n-<style type=\"text\/css\" media=\"screen\">\n-body {\n-    background-color: #eeeeee;\n-}\n-hr {\n-    border: none 0;\n-    border-top: 1px solid #aaa;\n-    height: 1px;\n-}\n-div.summary {\n-    font-size: .8em;\n-    border-bottom: 1px solid #aaa;\n-    padding-left: 1em;\n-    padding-right: 1em;\n-}\n-div.summary h2 {\n-    margin-bottom: 0.3em;\n-}\n-div.summary table th {\n-    text-align: right;\n-    vertical-align: top;\n-    white-space: nowrap;\n-}\n-span.lineschanged {\n-    font-size: 0.7em;\n-}\n-span.oldmarker {\n-    color: red;\n-    font-size: large;\n-    font-weight: bold;\n-}\n-span.newmarker {\n-    color: green;\n-    font-size: large;\n-    font-weight: bold;\n-}\n-span.removed {\n-    color: brown;\n-}\n-span.changed {\n-    color: blue;\n-}\n-span.new {\n-    color: blue;\n-    font-weight: bold;\n-}\n-a.print { font-size: x-small; }\n-\n-<\/style>\n-\n-<style type=\"text\/css\" media=\"print\">\n-pre { font-size: 0.8em; font-family: courier, monospace; }\n-span.removed { color: #444; font-style: italic }\n-span.changed { font-weight: bold; }\n-span.new { font-weight: bold; }\n-span.newmarker { font-size: 1.2em; font-weight: bold; }\n-span.oldmarker { font-size: 1.2em; font-weight: bold; }\n-a.print {display: none}\n-hr { border: none 0; border-top: 1px solid #aaa; height: 1px; }\n-<\/style>\n-'\n-\n-#\n-# UDiffs need a slightly different CSS rule for 'new' items (we don't\n-# want them to be bolded as we do in cdiffs or sdiffs).\n-#\n-UDIFFCSS='\n-<style type=\"text\/css\" media=\"screen\">\n-span.new {\n-    color: blue;\n-    font-weight: normal;\n-}\n-<\/style>\n-'\n-\n-#\n-# input_cmd | html_quote | output_cmd\n-# or\n-# html_quote filename | output_cmd\n-#\n-# Make a piece of source code safe for display in an HTML <pre> block.\n-#\n-html_quote()\n-{\n-\tsed -e \"s\/&\/\\&amp;\/g\" -e \"s\/&amp;#\\([x]*[0-9A-Fa-f]\\{2,5\\}\\);\/\\&#\\1;\/g\" -e \"s\/<\/\\&lt;\/g\" -e \"s\/>\/\\&gt;\/g\" \"$@\" | expand\n-}\n-\n-#\n-# input_cmd | html_quote | output_cmd\n-# or\n-# html_dequote filename | output_cmd\n-#\n-# Replace HTML entities with literals\n-#\n-html_dequote()\n-{\n-\tsed -e \"s\/&quot;\/\\\"\/g\" -e \"s\/&apos;\/\\'\/g\" -e \"s\/&amp;\/\\&\/g\" -e \"s\/&lt;\/<'\/g\" -e \"s\/&gt;\/>\/g\" \"$@\" | expand\n-}\n-\n-#\n-# input_cmd | bug2url | output_cmd\n-#\n-# Scan for bugids and insert <a> links to the relevent bug database.\n-#\n-bug2url()\n-{\n-\tsed -e 's|[0-9]\\{5,\\}|<a href=\\\"'$BUGURL$IDPREFIX'&\\\">&<\/a>|g'\n-}\n-\n-#\n-# strip_unchanged <infile> | output_cmd\n-#\n-# Removes chunks of sdiff documents that have not changed. This makes it\n-# easier for a code reviewer to find the bits that have changed.\n-#\n-# Deleted lines of text are replaced by a horizontal rule. Some\n-# identical lines are retained before and after the changed lines to\n-# provide some context.  The number of these lines is controlled by the\n-# variable C in the $AWK script below.\n-#\n-# The script detects changed lines as any line that has a \"<span class=\"\n-# string embedded (unchanged lines have no particular class and are not\n-# part of a <span>).  Blank lines (without a sequence number) are also\n-# detected since they flag lines that have been inserted or deleted.\n-#\n-strip_unchanged()\n-{\n-\t$AWK '\n-\tBEGIN\t{ C = c = 20 }\n-\tNF == 0 || \/span class=\/ {\n-\t\tif (c > C) {\n-\t\t\tc -= C\n-\t\t\tinx = 0\n-\t\t\tif (c > C) {\n-\t\t\t\tprint \"\\n<\/pre><hr><\/hr><pre>\"\n-\t\t\t\tinx = c % C\n-\t\t\t\tc = C\n-\t\t\t}\n-\n-\t\t\tfor (i = 0; i < c; i++)\n-\t\t\t\tprint ln[(inx + i) % C]\n-\t\t}\n-\t\tc = 0;\n-\t\tprint\n-\t\tnext\n-\t}\n-\t{\tif (c >= C) {\n-\t\t\tln[c % C] = $0\n-\t\t\tc++;\n-\t\t\tnext;\n-\t\t}\n-\t\tc++;\n-\t\tprint\n-\t}\n-\tEND\t{ if (c > (C * 2)) print \"\\n<\/pre><hr><\/hr>\" }\n-\n-\t' $1\n-}\n-\n-#\n-# sdiff_to_html\n-#\n-# This function takes two files as arguments, obtains their diff, and\n-# processes the diff output to present the files as an HTML document with\n-# the files displayed side-by-side, differences shown in color.  It also\n-# takes a delta comment, rendered as an HTML snippet, as the third\n-# argument.  The function takes two files as arguments, then the name of\n-# file, the path, and the comment.  The HTML will be delivered on stdout,\n-# e.g.\n-#\n-#   $ sdiff_to_html old\/usr\/src\/tools\/scripts\/webrev.sh \\\n-#         new\/usr\/src\/tools\/scripts\/webrev.sh \\\n-#         webrev.sh usr\/src\/tools\/scripts \\\n-#         '<a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-1234567\">\n-#          JDK-1234567<\/a> my bugid' > <file>.html\n-#\n-# framed_sdiff() is then called which creates $2.frames.html\n-# in the webrev tree.\n-#\n-# FYI: This function is rather unusual in its use of awk.  The initial\n-# diff run produces conventional diff output showing changed lines mixed\n-# with editing codes.  The changed lines are ignored - we're interested in\n-# the editing codes, e.g.\n-#\n-#      8c8\n-#      57a61\n-#      63c66,76\n-#      68,93d80\n-#      106d90\n-#      108,110d91\n-#\n-#  These editing codes are parsed by the awk script and used to generate\n-#  another awk script that generates HTML, e.g the above lines would turn\n-#  into something like this:\n-#\n-#      BEGIN { printf \"<pre>\\n\" }\n-#      function sp(n) {for (i=0;i<n;i++)printf \"\\n\"}\n-#      function wl(n) {printf \"<font color=%s>%4d %s <\/font>\\n\", n, NR, $0}\n-#      NR==8           {wl(\"#7A7ADD\");next}\n-#      NR==54          {wl(\"#7A7ADD\");sp(3);next}\n-#      NR==56          {wl(\"#7A7ADD\");next}\n-#      NR==57          {wl(\"black\");printf \"\\n\"; next}\n-#        :               :\n-#\n-#  This script is then run on the original source file to generate the\n-#  HTML that corresponds to the source file.\n-#\n-#  The two HTML files are then combined into a single piece of HTML that\n-#  uses an HTML table construct to present the files side by side.  You'll\n-#  notice that the changes are color-coded:\n-#\n-#   black     - unchanged lines\n-#   blue      - changed lines\n-#   bold blue - new lines\n-#   brown     - deleted lines\n-#\n-#  Blank lines are inserted in each file to keep unchanged lines in sync\n-#  (side-by-side).  This format is familiar to users of sdiff(1) or\n-#  Teamware's filemerge tool.\n-#\n-sdiff_to_html()\n-{\n-\tdiff -b $1 $2 > \/tmp\/$$.diffs\n-\n-\tTNAME=$3\n-\tTPATH=$4\n-\tCOMMENT=$5\n-\n-\t#\n-\t#  Now we have the diffs, generate the HTML for the old file.\n-\t#\n-\t$AWK '\n-\tBEGIN\t{\n-\t\tprintf \"function sp(n) {for (i=0;i<n;i++)printf \\\"\\\\n\\\"}\\n\"\n-\t\tprintf \"function removed() \"\n-\t\tprintf \"{printf \\\"<span class=\\\\\\\"removed\\\\\\\">%%4d %%s<\/span>\\\\n\\\", NR, $0}\\n\"\n-\t\tprintf \"function changed() \"\n-\t\tprintf \"{printf \\\"<span class=\\\\\\\"changed\\\\\\\">%%4d %%s<\/span>\\\\n\\\", NR, $0}\\n\"\n-\t\tprintf \"function bl() {printf \\\"%%4d %%s\\\\n\\\", NR, $0}\\n\"\n-}\n-\t\/^<\/\t{next}\n-\t\/^>\/\t{next}\n-\t\/^---\/\t{next}\n-\n-\t{\n-\tsplit($1, a, \/[cad]\/) ;\n-\tif (index($1, \"a\")) {\n-\t\tif (a[1] == 0) {\n-\t\t\tn = split(a[2], r, \/,\/);\n-\t\t\tif (n == 1)\n-\t\t\t\tprintf \"BEGIN\\t\\t{sp(1)}\\n\"\n-\t\t\telse\n-\t\t\t\tprintf \"BEGIN\\t\\t{sp(%d)}\\n\",\\\n-\t\t\t\t(r[2] - r[1]) + 1\n-\t\t\tnext\n-\t\t}\n-\n-\t\tprintf \"NR==%s\\t\\t{\", a[1]\n-\t\tn = split(a[2], r, \/,\/);\n-\t\ts = r[1];\n-\t\tif (n == 1)\n-\t\t\tprintf \"bl();printf \\\"\\\\n\\\"; next}\\n\"\n-\t\telse {\n-\t\t\tn = r[2] - r[1]\n-\t\t\tprintf \"bl();sp(%d);next}\\n\",\\\n-\t\t\t(r[2] - r[1]) + 1\n-\t\t}\n-\t\tnext\n-\t}\n-\tif (index($1, \"d\")) {\n-\t\tn = split(a[1], r, \/,\/);\n-\t\tn1 = r[1]\n-\t\tn2 = r[2]\n-\t\tif (n == 1)\n-\t\t\tprintf \"NR==%s\\t\\t{removed(); next}\\n\" , n1\n-\t\telse\n-\t\t\tprintf \"NR==%s,NR==%s\\t{removed(); next}\\n\" , n1, n2\n-\t\tnext\n-\t}\n-\tif (index($1, \"c\")) {\n-\t\tn = split(a[1], r, \/,\/);\n-\t\tn1 = r[1]\n-\t\tn2 = r[2]\n-\t\tfinal = n2\n-\t\td1 = 0\n-\t\tif (n == 1)\n-\t\t\tprintf \"NR==%s\\t\\t{changed();\" , n1\n-\t\telse {\n-\t\t\td1 = n2 - n1\n-\t\t\tprintf \"NR==%s,NR==%s\\t{changed();\" , n1, n2\n-\t\t}\n-\t\tm = split(a[2], r, \/,\/);\n-\t\tn1 = r[1]\n-\t\tn2 = r[2]\n-\t\tif (m > 1) {\n-\t\t\td2  = n2 - n1\n-\t\t\tif (d2 > d1) {\n-\t\t\t\tif (n > 1) printf \"if (NR==%d)\", final\n-\t\t\t\tprintf \"sp(%d);\", d2 - d1\n-\t\t\t}\n-\t\t}\n-\t\tprintf \"next}\\n\" ;\n-\n-\t\tnext\n-\t}\n-\t}\n-\n-\tEND\t{ printf \"{printf \\\"%%4d %%s\\\\n\\\", NR, $0 }\\n\" }\n-\t' \/tmp\/$$.diffs > \/tmp\/$$.file1\n-\n-\t#\n-\t#  Now generate the HTML for the new file\n-\t#\n-\t$AWK '\n-\tBEGIN\t{\n-\t\tprintf \"function sp(n) {for (i=0;i<n;i++)printf \\\"\\\\n\\\"}\\n\"\n-\t\tprintf \"function new() \"\n-\t\tprintf \"{printf \\\"<span class=\\\\\\\"new\\\\\\\">%%4d %%s<\/span>\\\\n\\\", NR, $0}\\n\"\n-\t\tprintf \"function changed() \"\n-\t\tprintf \"{printf \\\"<span class=\\\\\\\"changed\\\\\\\">%%4d %%s<\/span>\\\\n\\\", NR, $0}\\n\"\n-\t\tprintf \"function bl() {printf \\\"%%4d %%s\\\\n\\\", NR, $0}\\n\"\n-\t}\n-\n-\t\/^<\/\t{next}\n-\t\/^>\/\t{next}\n-\t\/^---\/\t{next}\n-\n-\t{\n-\tsplit($1, a, \/[cad]\/) ;\n-\tif (index($1, \"d\")) {\n-\t\tif (a[2] == 0) {\n-\t\t\tn = split(a[1], r, \/,\/);\n-\t\t\tif (n == 1)\n-\t\t\t\tprintf \"BEGIN\\t\\t{sp(1)}\\n\"\n-\t\t\telse\n-\t\t\t\tprintf \"BEGIN\\t\\t{sp(%d)}\\n\",\\\n-\t\t\t\t(r[2] - r[1]) + 1\n-\t\t\tnext\n-\t\t}\n-\n-\t\tprintf \"NR==%s\\t\\t{\", a[2]\n-\t\tn = split(a[1], r, \/,\/);\n-\t\ts = r[1];\n-\t\tif (n == 1)\n-\t\t\tprintf \"bl();printf \\\"\\\\n\\\"; next}\\n\"\n-\t\telse {\n-\t\t\tn = r[2] - r[1]\n-\t\t\tprintf \"bl();sp(%d);next}\\n\",\\\n-\t\t\t(r[2] - r[1]) + 1\n-\t\t}\n-\t\tnext\n-\t}\n-\tif (index($1, \"a\")) {\n-\t\tn = split(a[2], r, \/,\/);\n-\t\tn1 = r[1]\n-\t\tn2 = r[2]\n-\t\tif (n == 1)\n-\t\t\tprintf \"NR==%s\\t\\t{new() ; next}\\n\" , n1\n-\t\telse\n-\t\t\tprintf \"NR==%s,NR==%s\\t{new() ; next}\\n\" , n1, n2\n-\t\tnext\n-\t}\n-\tif (index($1, \"c\")) {\n-\t\tn = split(a[2], r, \/,\/);\n-\t\tn1 = r[1]\n-\t\tn2 = r[2]\n-\t\tfinal = n2\n-\t\td2 = 0;\n-\t\tif (n == 1) {\n-\t\t\tfinal = n1\n-\t\t\tprintf \"NR==%s\\t\\t{changed();\" , n1\n-\t\t} else {\n-\t\t\td2 = n2 - n1\n-\t\t\tprintf \"NR==%s,NR==%s\\t{changed();\" , n1, n2\n-\t\t}\n-\t\tm = split(a[1], r, \/,\/);\n-\t\tn1 = r[1]\n-\t\tn2 = r[2]\n-\t\tif (m > 1) {\n-\t\t\td1  = n2 - n1\n-\t\t\tif (d1 > d2) {\n-\t\t\t\tif (n > 1) printf \"if (NR==%d)\", final\n-\t\t\t\tprintf \"sp(%d);\", d1 - d2\n-\t\t\t}\n-\t\t}\n-\t\tprintf \"next}\\n\" ;\n-\t\tnext\n-\t}\n-\t}\n-\tEND\t{ printf \"{printf \\\"%%4d %%s\\\\n\\\", NR, $0 }\\n\" }\n-\t' \/tmp\/$$.diffs > \/tmp\/$$.file2\n-\n-\t#\n-\t# Post-process the HTML files by running them back through $AWK\n-\t#\n-\thtml_quote < $1 | $AWK -f \/tmp\/$$.file1 > \/tmp\/$$.file1.html\n-\n-\thtml_quote < $2 | $AWK -f \/tmp\/$$.file2 > \/tmp\/$$.file2.html\n-\n-\t#\n-\t# Now combine into a valid HTML file and side-by-side into a table\n-\t#\n-\tprint \"$HTML<head>$STDHEAD\"\n-\tprint \"<title>$WNAME Sdiff $TPATH <\/title>\"\n-\tprint \"<\/head><body id=\\\"SUNWwebrev\\\">\"\n-\tprint \"<h2>$TPATH\/$TNAME<\/h2>\"\n-        print \"<a class=\\\"print\\\" href=\\\"javascript:print()\\\">Print this page<\/a>\"\n-\tprint \"<pre>$COMMENT<\/pre>\\n\"\n-\tprint \"<table><tr valign=\\\"top\\\">\"\n-\tprint \"<td><pre>\"\n-\n-\tstrip_unchanged \/tmp\/$$.file1.html\n-\n-\tprint \"<\/pre><\/td><td><pre>\"\n-\n-\tstrip_unchanged \/tmp\/$$.file2.html\n-\n-\tprint \"<\/pre><\/td>\"\n-\tprint \"<\/tr><\/table>\"\n-\tprint \"<\/body><\/html>\"\n-\n-\tframed_sdiff $TNAME $TPATH \/tmp\/$$.file1.html \/tmp\/$$.file2.html \\\n-\t    \"$COMMENT\"\n-}\n-\n-\n-#\n-# framed_sdiff <filename> <filepath> <lhsfile> <rhsfile> <comment>\n-#\n-# Expects lefthand and righthand side html files created by sdiff_to_html.\n-# We use insert_anchors() to augment those with HTML navigation anchors,\n-# and then emit the main frame.  Content is placed into:\n-#\n-#    $WDIR\/DIR\/$TNAME.lhs.html\n-#    $WDIR\/DIR\/$TNAME.rhs.html\n-#    $WDIR\/DIR\/$TNAME.frames.html\n-#\n-# NOTE: We rely on standard usage of $WDIR and $DIR.\n-#\n-function framed_sdiff\n-{\n-\ttypeset TNAME=$1\n-\ttypeset TPATH=$2\n-\ttypeset lhsfile=$3\n-\ttypeset rhsfile=$4\n-\ttypeset comments=$5\n-\ttypeset RTOP\n-\n-\t# Enable html files to access WDIR via a relative path.\n-\tRTOP=$(relative_dir $TPATH $WDIR)\n-\n-\t# Make the rhs\/lhs files and output the frameset file.\n-\tprint \"$HTML<head>$STDHEAD\" > $WDIR\/$DIR\/$TNAME.lhs.html\n-\n-\tcat >> $WDIR\/$DIR\/$TNAME.lhs.html <<-EOF\n-\t    <script type=\"text\/javascript\" src=\"$RTOP\/ancnav.js\"><\/script>\n-\t    <\/head>\n-\t    <body id=\"SUNWwebrev\" onkeypress=\"keypress(event);\">\n-\t    <a name=\"0\"><\/a>\n-\t    <pre>$comments<\/pre><hr><\/hr>\n-\tEOF\n-\n-\tcp $WDIR\/$DIR\/$TNAME.lhs.html $WDIR\/$DIR\/$TNAME.rhs.html\n-\n-\tinsert_anchors $lhsfile >> $WDIR\/$DIR\/$TNAME.lhs.html\n-\tinsert_anchors $rhsfile >> $WDIR\/$DIR\/$TNAME.rhs.html\n-\n-\tclose='<\/body><\/html>'\n-\n-\tprint $close >> $WDIR\/$DIR\/$TNAME.lhs.html\n-\tprint $close >> $WDIR\/$DIR\/$TNAME.rhs.html\n-\n-\tprint \"$FRAMEHTML<head>$STDHEAD\" > $WDIR\/$DIR\/$TNAME.frames.html\n-\tprint \"<title>$WNAME Framed-Sdiff \" \\\n-\t    \"$TPATH\/$TNAME<\/title> <\/head>\" >> $WDIR\/$DIR\/$TNAME.frames.html\n-\tcat >> $WDIR\/$DIR\/$TNAME.frames.html <<-EOF\n-\t  <frameset rows=\"*,60\">\n-\t    <frameset cols=\"50%,50%\">\n-\t      <frame src=\"$TNAME.lhs.html\" scrolling=\"auto\" name=\"lhs\" \/>\n-\t      <frame src=\"$TNAME.rhs.html\" scrolling=\"auto\" name=\"rhs\" \/>\n-\t    <\/frameset>\n-\t  <frame src=\"$RTOP\/ancnav.html\" scrolling=\"no\" marginwidth=\"0\"\n-\t   marginheight=\"0\" name=\"nav\" \/>\n-\t  <noframes>\n-            <body id=\"SUNWwebrev\">\n-\t      Alas 'frames' webrev requires that your browser supports frames\n-\t      and has the feature enabled.\n-            <\/body>\n-\t  <\/noframes>\n-\t  <\/frameset>\n-\t<\/html>\n-\tEOF\n-}\n-\n-\n-#\n-# fix_postscript\n-#\n-# Merge codereview output files to a single conforming postscript file, by:\n-# \t- removing all extraneous headers\/trailers\n-#\t- making the page numbers right\n-#\t- removing pages devoid of contents which confuse some\n-#\t  postscript readers.\n-#\n-# From Casper.\n-#\n-function fix_postscript\n-{\n-\tinfile=$1\n-\n-\tcat > \/tmp\/$$.crmerge.pl << \\EOF\n-\n-\tprint scalar(<>);\t\t# %!PS-Adobe---\n-\tprint \"%%Orientation: Landscape\\n\";\n-\n-\t$pno = 0;\n-\t$doprint = 1;\n-\n-\t$page = \"\";\n-\n-\twhile (<>) {\n-\t\tnext if (\/^%%Pages:\\s*\\d+\/);\n-\n-\t\tif (\/^%%Page:\/) {\n-\t\t\tif ($pno == 0 || $page =~ \/\\)S\/) {\n-\t\t\t\t# Header or single page containing text\n-\t\t\t\tprint \"%%Page: ? $pno\\n\" if ($pno > 0);\n-\t\t\t\tprint $page;\n-\t\t\t\t$pno++;\n-\t\t\t} else {\n-\t\t\t\t# Empty page, skip it.\n-\t\t\t}\n-\t\t\t$page = \"\";\n-\t\t\t$doprint = 1;\n-\t\t\tnext;\n-\t\t}\n-\n-\t\t# Skip from %%Trailer of one document to Endprolog\n-\t\t# %%Page of the next\n-\t\t$doprint = 0 if (\/^%%Trailer\/);\n-\t\t$page .= $_ if ($doprint);\n-\t}\n-\n-\tif ($page =~ \/\\)S\/) {\n-\t\tprint \"%%Page: ? $pno\\n\";\n-\t\tprint $page;\n-\t} else {\n-\t\t$pno--;\n-\t}\n-\tprint \"%%Trailer\\n%%Pages: $pno\\n\";\n-EOF\n-\n-\t$PERL \/tmp\/$$.crmerge.pl < $infile\n-}\n-\n-\n-#\n-# input_cmd | insert_anchors | output_cmd\n-#\n-# Flag blocks of difference with sequentially numbered invisible\n-# anchors.  These are used to drive the frames version of the\n-# sdiffs output.\n-#\n-# NOTE: Anchor zero flags the top of the file irrespective of changes,\n-# an additional anchor is also appended to flag the bottom.\n-#\n-# The script detects changed lines as any line that has a \"<span\n-# class=\" string embedded (unchanged lines have no class set and are\n-# not part of a <span>.  Blank lines (without a sequence number)\n-# are also detected since they flag lines that have been inserted or\n-# deleted.\n-#\n-function insert_anchors\n-{\n-\t$AWK '\n-\tfunction ia() {\n-\t\t# This should be able to be a singleton <a \/> but that\n-\t\t# seems to trigger a bug in firefox a:hover rule processing\n-\t\tprintf \"<a name=\\\"%d\\\" id=\\\"anc%d\\\"><\/a>\", anc, anc++;\n-\t}\n-\n-\tBEGIN {\n-\t\tanc=1;\n-\t\tinblock=1;\n-\t\tprintf \"<pre>\\n\";\n-\t}\n-\tNF == 0 || \/^<span class=\/ {\n-\t\tif (inblock == 0) {\n-\t\t\tia();\n-\t\t\tinblock=1;\n-\t\t}\n-\t\tprint;\n-\t\tnext;\n-\t}\n-\t{\n-\t\tinblock=0;\n-\t\tprint;\n-\t}\n-\tEND {\n-\t\tia();\n-\n-\t\tprintf \"<b style=\\\"font-size: large; color: red\\\">\";\n-\t\tprintf \"--- EOF ---<\/b>\"\n-        \tfor(i=0;i<8;i++) printf \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n-\t\tprintf \"<\/pre>\"\n-\t\tprintf \"<form name=\\\"eof\\\">\";\n-\t\tprintf \"<input name=\\\"value\\\" value=\\\"%d\\\" type=\\\"hidden\\\" \/>\",\n-\t\t    anc - 1;\n-\t\tprintf \"<\/form>\";\n-\t}\n-\t' $1\n-}\n-\n-\n-#\n-# relative_dir\n-#\n-# Print a relative return path from $1 to $2.  For example if\n-# $1=\/tmp\/myreview\/raw_files\/usr\/src\/tools\/scripts and $2=\/tmp\/myreview,\n-# this function would print \"..\/..\/..\/..\/\".\n-#\n-# In the event that $1 is not in $2 a warning is printed to stderr,\n-# and $2 is returned-- the result of this is that the resulting webrev\n-# is not relocatable.\n-#\n-function relative_dir\n-{\n-    d1=$1\n-    d2=$2\n-    if [[ \"$d1\" == \".\" ]]; then\n-\tprint \".\"\n-    else\n-\ttypeset cur=\"${d1##$d2?(\/)}\"\n-\ttypeset ret=\"\"\n-\tif [[ $d2 == $cur ]]; then   # Should never happen.\n-\t\t# Should never happen.\n-\t\tprint -u2 \"\\nWARNING: relative_dir: \\\"$1\\\" not relative \"\n-\t\tprint -u2 \"to \\\"$2\\\".  Check input paths.  Framed webrev \"\n-\t\tprint -u2 \"will not be relocatable!\"\n-\t\tprint $2\n-\t\treturn\n-\tfi\n-\n-\twhile [[ -n ${cur} ]];\n-\tdo\n-\t\tcur=${cur%%*(\/)*([!\/])}\n-\t\tif [[ -z $ret ]]; then\n-\t\t\tret=\"..\"\n-\t\telse\n-\t\t\tret=\"..\/$ret\"\n-\t\tfi\n-\tdone\n-\tprint $ret\n-    fi\n-}\n-\n-\n-#\n-# frame_nav_js\n-#\n-# Emit javascript for frame navigation\n-#\n-function frame_nav_js\n-{\n-cat << \\EOF\n-var myInt;\n-var scrolling=0;\n-var sfactor = 3;\n-var scount=10;\n-\n-function scrollByPix() {\n-\tif (scount<=0) {\n-\t\tsfactor*=1.2;\n-\t\tscount=10;\n-\t}\n-\tparent.lhs.scrollBy(0,sfactor);\n-\tparent.rhs.scrollBy(0,sfactor);\n-\tscount--;\n-}\n-\n-function scrollToAnc(num) {\n-\n-\t\/\/ Update the value of the anchor in the form which we use as\n-\t\/\/ storage for this value.  setAncValue() will take care of\n-\t\/\/ correcting for overflow and underflow of the value and return\n-\t\/\/ us the new value.\n-\tnum = setAncValue(num);\n-\n-\t\/\/ Set location and scroll back a little to expose previous\n-\t\/\/ lines.\n-\t\/\/\n-\t\/\/ Note that this could be improved: it is possible although\n-\t\/\/ complex to compute the x and y position of an anchor, and to\n-\t\/\/ scroll to that location directly.\n-\t\/\/\n-\tparent.lhs.location.replace(parent.lhs.location.pathname + \"#\" + num);\n-\tparent.rhs.location.replace(parent.rhs.location.pathname + \"#\" + num);\n-\n-\tparent.lhs.scrollBy(0,-30);\n-\tparent.rhs.scrollBy(0,-30);\n-}\n-\n-function getAncValue()\n-{\n-\treturn (parseInt(parent.nav.document.diff.real.value));\n-}\n-\n-function setAncValue(val)\n-{\n-\tif (val <= 0) {\n-\t\tval = 0;\n-\t\tparent.nav.document.diff.real.value = val;\n-\t\tparent.nav.document.diff.display.value = \"BOF\";\n-\t\treturn (val);\n-\t}\n-\n-\t\/\/\n-\t\/\/ The way we compute the max anchor value is to stash it\n-\t\/\/ inline in the left and right hand side pages-- it's the same\n-\t\/\/ on each side, so we pluck from the left.\n-\t\/\/\n-\tmaxval = parent.lhs.document.eof.value.value;\n-\tif (val < maxval) {\n-\t\tparent.nav.document.diff.real.value = val;\n-\t\tparent.nav.document.diff.display.value = val.toString();\n-\t\treturn (val);\n-\t}\n-\n-\t\/\/ this must be: val >= maxval\n-\tval = maxval;\n-\tparent.nav.document.diff.real.value = val;\n-\tparent.nav.document.diff.display.value = \"EOF\";\n-\treturn (val);\n-}\n-\n-function stopScroll() {\n-\tif (scrolling==1) {\n-\t\tclearInterval(myInt);\n-\t\tscrolling=0;\n-\t}\n-}\n-\n-function startScroll() {\n-\tstopScroll();\n-\tscrolling=1;\n-\tmyInt=setInterval(\"scrollByPix()\",10);\n-}\n-\n-function handlePress(b) {\n-\n-\tswitch (b) {\n-\t    case 1 :\n-\t\tscrollToAnc(-1);\n-\t\tbreak;\n-\t    case 2 :\n-\t\tscrollToAnc(getAncValue() - 1);\n-\t\tbreak;\n-\t    case 3 :\n-\t\tsfactor=-3;\n-\t\tstartScroll();\n-\t\tbreak;\n-\t    case 4 :\n-\t\tsfactor=3;\n-\t\tstartScroll();\n-\t\tbreak;\n-\t    case 5 :\n-\t\tscrollToAnc(getAncValue() + 1);\n-\t\tbreak;\n-\t    case 6 :\n-\t\tscrollToAnc(999999);\n-\t\tbreak;\n-\t}\n-}\n-\n-function handleRelease(b) {\n-\tstopScroll();\n-}\n-\n-function keypress(ev) {\n-\tvar keynum;\n-\tvar keychar;\n-\n-\tif (window.event) { \/\/ IE\n-\t\tkeynum = ev.keyCode;\n-\t} else if (ev.which) { \/\/ non-IE\n-\t\tkeynum = ev.which;\n-\t}\n-\n-\tkeychar = String.fromCharCode(keynum);\n-\n-\tif (keychar == \"k\") {\n-\t\thandlePress(2);\n-\t\treturn (0);\n-\t} else if (keychar == \"j\" || keychar == \" \") {\n-\t\thandlePress(5);\n-\t\treturn (0);\n-\t}\n-\treturn (1);\n-}\n-\n-function ValidateDiffNum(){\n-\tval = parent.nav.document.diff.display.value;\n-\tif (val == \"EOF\") {\n-\t\tscrollToAnc(999999);\n-\t\treturn;\n-\t}\n-\n-\tif (val == \"BOF\") {\n-\t\tscrollToAnc(0);\n-\t\treturn;\n-\t}\n-\n-        i=parseInt(val);\n-        if (isNaN(i)) {\n-                parent.nav.document.diff.display.value = getAncValue();\n-        } else {\n-                scrollToAnc(i);\n-        }\n-        return false;\n-}\n-\n-EOF\n-}\n-\n-#\n-# frame_navigation\n-#\n-# Output anchor navigation file for framed sdiffs.\n-#\n-function frame_navigation\n-{\n-\tprint \"$HTML<head>$STDHEAD\"\n-\n-\tcat << \\EOF\n-<title>Anchor Navigation<\/title>\n-<meta http-equiv=\"Content-Script-Type\" content=\"text\/javascript\" \/>\n-<meta http-equiv=\"Content-Type\" content=\"text\/html\" \/>\n-\n-<style type=\"text\/css\">\n-    div.button td { padding-left: 5px; padding-right: 5px;\n-\t\t    background-color: #eee; text-align: center;\n-\t\t    border: 1px #444 outset; cursor: pointer; }\n-    div.button a { font-weight: bold; color: black }\n-    div.button td:hover { background: #ffcc99; }\n-<\/style>\n-EOF\n-\n-\tprint \"<script type=\\\"text\/javascript\\\" src=\\\"ancnav.js\\\"><\/script>\"\n-\n-\tcat << \\EOF\n-<\/head>\n-<body id=\"SUNWwebrev\" bgcolor=\"#eeeeee\" onload=\"document.diff.real.focus();\"\n-\tonkeypress=\"keypress(event);\">\n-    <noscript lang=\"javascript\">\n-      <center>\n-\t<p><big>Framed Navigation controls require Javascript<\/big><br \/>\n-\tEither this browser is incompatable or javascript is not enabled<\/p>\n-      <\/center>\n-    <\/noscript>\n-    <table width=\"100%\" border=\"0\" align=\"center\">\n-\t<tr>\n-          <td valign=\"middle\" width=\"25%\">Diff navigation:\n-          Use 'j' and 'k' for next and previous diffs; or use buttons\n-          at right<\/td>\n-\t  <td align=\"center\" valign=\"top\" width=\"50%\">\n-\t    <div class=\"button\">\n-\t      <table border=\"0\" align=\"center\">\n-                  <tr>\n-\t\t    <td>\n-\t\t      <a onMouseDown=\"handlePress(1);return true;\"\n-\t\t\t onMouseUp=\"handleRelease(1);return true;\"\n-\t\t\t onMouseOut=\"handleRelease(1);return true;\"\n-\t\t\t onClick=\"return false;\"\n-\t\t\t title=\"Go to Beginning Of file\">BOF<\/a><\/td>\n-\t\t    <td>\n-\t\t      <a onMouseDown=\"handlePress(3);return true;\"\n-\t\t\t onMouseUp=\"handleRelease(3);return true;\"\n-\t\t\t onMouseOut=\"handleRelease(3);return true;\"\n-\t\t\t title=\"Scroll Up: Press and Hold to accelerate\"\n-\t\t\t onClick=\"return false;\">Scroll Up<\/a><\/td>\n-\t\t    <td>\n-\t\t      <a onMouseDown=\"handlePress(2);return true;\"\n-\t\t\t onMouseUp=\"handleRelease(2);return true;\"\n-\t\t\t onMouseOut=\"handleRelease(2);return true;\"\n-\t\t\t title=\"Go to previous Diff\"\n-\t\t\t onClick=\"return false;\">Prev Diff<\/a>\n-\t\t    <\/td><\/tr>\n-\n-\t\t  <tr>\n-\t\t    <td>\n-\t\t      <a onMouseDown=\"handlePress(6);return true;\"\n-\t\t\t onMouseUp=\"handleRelease(6);return true;\"\n-\t\t\t onMouseOut=\"handleRelease(6);return true;\"\n-\t\t\t onClick=\"return false;\"\n-\t\t\t title=\"Go to End Of File\">EOF<\/a><\/td>\n-\t\t    <td>\n-\t\t      <a onMouseDown=\"handlePress(4);return true;\"\n-\t\t\t onMouseUp=\"handleRelease(4);return true;\"\n-\t\t\t onMouseOut=\"handleRelease(4);return true;\"\n-\t\t\t title=\"Scroll Down: Press and Hold to accelerate\"\n-\t\t\t onClick=\"return false;\">Scroll Down<\/a><\/td>\n-\t\t    <td>\n-\t\t      <a onMouseDown=\"handlePress(5);return true;\"\n-\t\t\t onMouseUp=\"handleRelease(5);return true;\"\n-\t\t\t onMouseOut=\"handleRelease(5);return true;\"\n-\t\t\t title=\"Go to next Diff\"\n-\t\t\t onClick=\"return false;\">Next Diff<\/a><\/td>\n-\t\t  <\/tr>\n-              <\/table>\n-\t    <\/div>\n-\t  <\/td>\n-\t  <th valign=\"middle\" width=\"25%\">\n-\t    <form action=\"\" name=\"diff\" onsubmit=\"return ValidateDiffNum();\">\n-\t\t<input name=\"display\" value=\"BOF\" size=\"8\" type=\"text\" \/>\n-\t\t<input name=\"real\" value=\"0\" size=\"8\" type=\"hidden\" \/>\n-\t    <\/form>\n-\t  <\/th>\n-\t<\/tr>\n-    <\/table>\n-  <\/body>\n-<\/html>\n-EOF\n-}\n-\n-\n-\n-#\n-# diff_to_html <filename> <filepath> { U | C } <comment>\n-#\n-# Processes the output of diff to produce an HTML file representing either\n-# context or unified diffs.\n-#\n-diff_to_html()\n-{\n-\tTNAME=$1\n-\tTPATH=$2\n-\tDIFFTYPE=$3\n-\tCOMMENT=$4\n-\n-\tprint \"$HTML<head>$STDHEAD\"\n-\tprint \"<title>$WNAME ${DIFFTYPE}diff $TPATH<\/title>\"\n-\n-\tif [[ $DIFFTYPE == \"U\" ]]; then\n-\t\tprint \"$UDIFFCSS\"\n-\tfi\n-\n-\tcat <<-EOF\n-\t<\/head>\n-\t<body id=\"SUNWwebrev\">\n-\t<h2>$TPATH<\/h2>\n-        <a class=\"print\" href=\"javascript:print()\">Print this page<\/a>\n-\t<pre>$COMMENT<\/pre>\n-        <pre>\n-EOF\n-\n-\thtml_quote | $AWK '\n-\t\/^--- new\/\t{ next }\n-\t\/^\\+\\+\\+ new\/\t{ next }\n-\t\/^--- old\/\t{ next }\n-\t\/^\\*\\*\\* old\/\t{ next }\n-\t\/^\\*\\*\\*\\*\/\t{ next }\n-\t\/^-------\/\t{ printf \"<center><h1>%s<\/h1><\/center>\\n\", $0; next }\n-\t\/^\\@\\@.*\\@\\@$\/\t{ printf \"<\/pre><hr \/><pre>\\n\";\n-\t\t\t  printf \"<span class=\\\"newmarker\\\">%s<\/span>\\n\", $0;\n-\t\t\t  next}\n-\n-\t\/^\\*\\*\\*\/\t{ printf \"<hr \/><span class=\\\"oldmarker\\\">%s<\/span>\\n\", $0;\n-\t\t\t  next}\n-\t\/^---\/\t\t{ printf \"<span class=\\\"newmarker\\\">%s<\/span>\\n\", $0;\n-\t\t\t  next}\n-\t\/^\\+\/\t\t{printf \"<span class=\\\"new\\\">%s<\/span>\\n\", $0; next}\n-\t\/^!\/\t\t{printf \"<span class=\\\"changed\\\">%s<\/span>\\n\", $0; next}\n-\t\/^-\/\t\t{printf \"<span class=\\\"removed\\\">%s<\/span>\\n\", $0; next}\n-\t\t\t{printf \"%s\\n\", $0; next}\n-\t'\n-\n-\tprint \"<\/pre><\/body><\/html>\\n\"\n-}\n-\n-\n-#\n-# source_to_html { new | old } <filename>\n-#\n-# Process a plain vanilla source file to transform it into an HTML file.\n-#\n-source_to_html()\n-{\n-\tWHICH=$1\n-\tTNAME=$2\n-\n-\tprint \"$HTML<head>$STDHEAD\"\n-\tprint \"<title>$WHICH $TNAME<\/title>\"\n-\tprint \"<body id=\\\"SUNWwebrev\\\">\"\n-\tprint \"<pre>\"\n-\thtml_quote | $AWK '{line += 1 ; printf \"%4d %s\\n\", line, $0 }'\n-\tprint \"<\/pre><\/body><\/html>\"\n-}\n-\n-comments_from_mercurial()\n-{\n-\tfmt=$1\n-\tpfile=$PWS\/$2\n-\tcfile=$CWS\/$3\n-\n-        logdir=`dirname $cfile`\n-        logf=`basename $cfile`\n-        if [ -d $logdir ]; then\n-            ( cd $logdir;\n-\t        active=`hg status $logf 2>\/dev\/null`\n-                # If the output from 'hg status' is not empty, it means the file\n-                # hasn't been committed, so don't fetch comments.\n-\t        if [[ -z $active ]] ; then\n-                    if [[ -n $ALL_CREV ]]; then\n-                        rev_opt=\n-                        for rev in $ALL_CREV; do\n-                            rev_opt=\"$rev_opt --rev $rev\"\n-                        done\n-                        comm=`hg log $rev_opt --follow --template 'rev {rev} : {desc}\\n' $logf`\n-                    elif [[ -n $FIRST_CREV ]]; then\n-\t\t        comm=`hg log --rev $FIRST_CREV:tip --follow --template 'rev {rev} : {desc}\\n' $logf`\n-                    else\n-\t\t        comm=`hg log -l1 --follow --template 'rev {rev} : {desc}\\n' $logf`\n-                    fi\n-\t        else\n-\t            comm=\"\"\n-\t        fi\n-\t        if [[ $fmt == \"text\" ]]; then\n-\t            print \"$comm\"\n-\t            return\n-\t        fi\n-\n-\t        print \"$comm\" | html_quote | bug2url\n-                )\n-        fi\n-}\n-\n-\n-#\n-# getcomments {text|html} filepath parentpath\n-#\n-# Fetch the comments depending on what SCM mode we're in.\n-#\n-getcomments()\n-{\n-\ttypeset fmt=$1\n-\ttypeset p=$2\n-\ttypeset pp=$3\n-\n-\tcomments_from_mercurial $fmt $pp $p\n-}\n-\n-#\n-# printCI <total-changed> <inserted> <deleted> <modified> <unchanged>\n-#\n-# Print out Code Inspection figures similar to sccs-prt(1) format.\n-#\n-function printCI\n-{\n-\tinteger tot=$1 ins=$2 del=$3 mod=$4 unc=$5\n-\ttypeset str\n-\tif (( tot == 1 )); then\n-\t\tstr=\"line\"\n-\telse\n-\t\tstr=\"lines\"\n-\tfi\n-\tprintf '%d %s changed: %d ins; %d del; %d mod; %d unchg' \\\n-\t    $tot $str $ins $del $mod $unc\n-}\n-\n-\n-#\n-# difflines <oldfile> <newfile>\n-#\n-# Calculate and emit number of added, removed, modified and unchanged lines,\n-# and total lines changed, the sum of added + removed + modified.\n-#\n-function difflines\n-{\n-\tinteger tot mod del ins unc err\n-\ttypeset filename\n-\n-\teval $( diff -e $1 $2 | $AWK '\n-\t# Change range of lines: N,Nc\n-\t\/^[0-9]*,[0-9]*c$\/ {\n-\t\tn=split(substr($1,1,length($1)-1), counts, \",\");\n-\t\tif (n != 2) {\n-\t\t    error=2\n-\t\t    exit;\n-\t\t}\n-\t\t#\n-\t\t# 3,5c means lines 3 , 4 and 5 are changed, a total of 3 lines.\n-\t\t# following would be 5 - 3 = 2! Hence +1 for correction.\n-\t\t#\n-\t\tr=(counts[2]-counts[1])+1;\n-\n-\t\t#\n-\t\t# Now count replacement lines: each represents a change instead\n-\t\t# of a delete, so increment c and decrement r.\n-\t\t#\n-\t\twhile (getline != \/^\\.$\/) {\n-\t\t\tc++;\n-\t\t\tr--;\n-\t\t}\n-\t\t#\n-\t\t# If there were more replacement lines than original lines,\n-\t\t# then r will be negative; in this case there are no deletions,\n-\t\t# but there are r changes that should be counted as adds, and\n-\t\t# since r is negative, subtract it from a and add it to c.\n-\t\t#\n-\t\tif (r < 0) {\n-\t\t\ta-=r;\n-\t\t\tc+=r;\n-\t\t}\n-\n-\t\t#\n-\t\t# If there were more original lines than replacement lines, then\n-\t\t# r will be positive; in this case, increment d by that much.\n-\t\t#\n-\t\tif (r > 0) {\n-\t\t\td+=r;\n-\t\t}\n-\t\tnext;\n-\t}\n-\n-\t# Change lines: Nc\n-\t\/^[0-9].*c$\/ {\n-\t\t# The first line is a replacement; any more are additions.\n-\t\tif (getline != \/^\\.$\/) {\n-\t\t\tc++;\n-\t\t\twhile (getline != \/^\\.$\/) a++;\n-\t\t}\n-\t\tnext;\n-\t}\n-\n-\t# Add lines: both Na and N,Na\n-\t\/^[0-9].*a$\/ {\n-\t\twhile (getline != \/^\\.$\/) a++;\n-\t\tnext;\n-\t}\n-\n-\t# Delete range of lines: N,Nd\n-\t\/^[0-9]*,[0-9]*d$\/ {\n-\t\tn=split(substr($1,1,length($1)-1), counts, \",\");\n-\t\tif (n != 2) {\n-\t\t\terror=2\n-\t\t\texit;\n-\t\t}\n-\t\t#\n-\t\t# 3,5d means lines 3 , 4 and 5 are deleted, a total of 3 lines.\n-\t\t# following would be 5 - 3 = 2! Hence +1 for correction.\n-\t\t#\n-\t\tr=(counts[2]-counts[1])+1;\n-\t\td+=r;\n-\t\tnext;\n-\t}\n-\n-\t# Delete line: Nd.   For example 10d says line 10 is deleted.\n-\t\/^[0-9]*d$\/ {d++; next}\n-\n-\t# Should not get here!\n-\t{\n-\t\terror=1;\n-\t\texit;\n-\t}\n-\n-\t# Finish off - print results\n-\tEND {\n-\t\tprintf(\"tot=%d;mod=%d;del=%d;ins=%d;err=%d\\n\",\n-\t\t    (c+d+a), c, d, a, error);\n-\t}' )\n-\n-\t# End of $AWK, Check to see if any trouble occurred.\n-\tif (( $? > 0 || err > 0 )); then\n-\t\tprint \"Unexpected Error occurred reading\" \\\n-\t\t    \"\\`diff -e $1 $2\\`: \\$?=$?, err=\" $err\n-\t\treturn\n-\tfi\n-\n-\t# Accumulate totals\n-\t(( TOTL += tot ))\n-\t(( TMOD += mod ))\n-\t(( TDEL += del ))\n-\t(( TINS += ins ))\n-\t# Calculate unchanged lines\n-\tunc=`wc -l < $1`\n-\tif (( unc > 0 )); then\n-\t\t(( unc -= del + mod ))\n-\t\t(( TUNC += unc ))\n-\tfi\n-\t# print summary\n-\tprint \"<span class=\\\"lineschanged\\\">\\c\"\n-\tprintCI $tot $ins $del $mod $unc\n-\tprint \"<\/span>\"\n-}\n-\n-function outgoing_from_mercurial_forest\n-{\n-    hg foutgoing --template 'rev: {rev}\\n' $OUTPWS | $FILTER | $AWK '\n-        BEGIN           {ntree=0}\n-        \/^comparing\/    {next}\n-        \/^no changes\/   {next}\n-        \/^searching\/    {next}\n-\t\/^\\[.*\\]$\/\t{tree=substr($1,2,length($1)-2);\n-                         trees[ntree++] = tree;\n-                         revs[tree]=-1;\n-                         next}\n-        \/^rev:\/   {rev=$2+0;\n-                   if (revs[tree] == -1 || rev < revs[tree])\n-                        { revs[tree] = rev; };\n-                  next;}\n-        END       {for (tree in trees)\n-                        { rev=revs[trees[tree]];\n-                          if (rev > 0)\n-                                {printf(\"%s %d\\n\",trees[tree],rev-1)}\n-                        }}' | while read LINE\n-    do\n-        set - $LINE\n-        TREE=$1\n-        REV=$2\n-        A=`hg -R $CWS\/$TREE log --rev $REV --template '{node}'`\n-        FSTAT_OPT=\"--rev $A\"\n-        print \"Revision: $A $REV\" >> $FLIST\n-        treestatus $TREE\n-    done\n-}\n-\n-function flist_from_mercurial_forest\n-{\n-    rm -f $FLIST\n-    if [ -z \"$Nflag\" ]; then\n-        print \" File list from hg foutgoing $PWS ...\"\n-        outgoing_from_mercurial_forest\n-        HG_LIST_FROM_COMMIT=1\n-    fi\n-    if [ ! -f $FLIST ]; then\n-        # hg commit hasn't been run see what is lying around\n-        print \"\\n No outgoing, perhaps you haven't commited.\"\n-        print \" File list from hg fstatus -mard ...\\c\"\n-        FSTAT_OPT=\n-        fstatus\n-        HG_LIST_FROM_COMMIT=\n-    fi\n-    print \" Done.\"\n-}\n-\n-#\n-# Used when dealing with the result of 'hg foutgoing'\n-# When now go down the tree and generate the change list\n-#\n-function treestatus\n-{\n-    TREE=$1\n-    HGCMD=\"hg -R $CWS\/$TREE status $FSTAT_OPT\"\n-\n-    $HGCMD -mdn 2>\/dev\/null | $FILTER | while read F\n-    do\n-        echo $TREE\/$F\n-    done >> $FLIST\n-\n-    # Then all the added files\n-    # But some of these could have been \"moved\" or renamed ones or copied ones\n-    # so let's make sure we get the proper info\n-    # hg status -aC will produce something like:\n-    #\tA subdir\/File3\n-    #\tA subdir\/File4\n-    #\t  File4\n-    #\tA subdir\/File5\n-    # The first and last are simple addition while the middle one\n-    # is a move\/rename or a copy.  We can't distinguish from a rename vs a copy\n-    # without also getting the status of removed files.  The middle case above\n-    # is a rename if File4 is also shown a being removed.  If File4 is not a\n-    # removed file, then the middle case is a copy from File4 to subdir\/File4\n-    # FIXME - we're not distinguishing copy from rename\n-    $HGCMD -aC | $FILTER | while read LINE; do\n-\tldone=\"\"\n-\twhile [ -z \"$ldone\" ]; do\n-\t    ldone=\"1\"\n-\t    set - $LINE\n-\t    if [ $# -eq 2 -a \"$1\" == \"A\" ]; then\n-\t\tAFILE=$2\n-\t\tif read LINE2; then\n-\t\t    set - $LINE2\n-\t\t    if [ $# -eq 1 ]; then\n-\t\t\techo $TREE\/$AFILE $TREE\/$1 >>$FLIST\n-\t\t    elif [ $# -eq 2 ]; then\n-\t\t\techo $TREE\/$AFILE >>$FLIST\n-\t\t\tLINE=$LINE2\n-\t\t\tldone=\"\"\n-\t\t    fi\n-\t\telse\n-\t\t    echo $TREE\/$AFILE >>$FLIST\n-\t\tfi\n-\t    fi\n-\tdone\n-    done\n-    $HGCMD -rn | $FILTER | while read RFILE; do\n-\tgrep \"$TREE\/$RFILE\" $FLIST >\/dev\/null\n-\tif [ $? -eq 1 ]; then\n-\t    echo $TREE\/$RFILE >>$FLIST\n-\tfi\n-    done\n-}\n-\n-function fstatus\n-{\n-    #\n-    # forest extension is still being changed. For instance the output\n-    # of fstatus used to no prepend the tree path to filenames, but\n-    # this has changed recently. AWK code below does try to handle both\n-    # cases\n-    #\n-    hg fstatus -mdn $FSTAT_OPT 2>\/dev\/null | $FILTER | $AWK '\n-\t\/^\\[.*\\]$\/\t{tree=substr($1,2,length($1)-2); next}\n-\t$1 != \"\"\t{n=index($1,tree);\n-\t\t\t if (n == 0)\n-\t\t\t\t{ printf(\"%s\/%s\\n\",tree,$1)}\n-\t\t\t else\n-\t\t\t\t{ printf(\"%s\\n\",$1)}}' >> $FLIST\n-\n-    #\n-    # There is a bug in the output of fstatus -aC on recent versions: it\n-    # inserts a space between the name of the tree and the filename of the\n-    # old file. e.g.:\n-    #\n-    # $ hg fstatus -aC\n-    # [.]\n-    #\n-    # [MyWS]\n-    # A MyWS\/subdir\/File2\n-    #  MyWS\/ File2\n-    #\n-    # [MyWS2]\n-    #\n-\n-    hg fstatus -aC $FSTAT_OPT 2>\/dev\/null | $FILTER | $AWK '\n-\t\/^\\[.*\\]$\/\t{tree=substr($1,2,length($1)-2); next}\n-\t\/^A .*\/\t\t{n=index($2,tree);\n-\t\t\t if (n == 0)\n-\t\t\t\t{ printf(\"A %s\/%s\\n\",tree,$2)}\n-\t\t\t else\n-\t\t\t\t{ printf(\"A %s\\n\",$2)};\n-\t\t\t next}\n-\t\/^ \/\t\t{n=index($1,tree);\n-\t\t\t if (n == 0)\n-\t\t\t\t{ printf(\"%s\/%s\\n\",tree,$1)}\n-\t\t\t else\n-\t\t\t\t{ if (NF == 2)\n-\t\t\t\t\tprintf(\"%s\/%s\\n\",tree,$2)\n-\t\t\t\t  else\n-\t\t\t\t\tprintf(\"%s\\n\",$1)\n-\t\t\t\t};\n-\t\t\t next}\n-\t' | while read LINE; do\n-\tldone=\"\"\n-\twhile [ -z \"$ldone\" ]; do\n-\t    ldone=\"1\"\n-\t    set - $LINE\n-\t    if [ $# -eq 2 -a \"$1\" == \"A\" ]; then\n-\t\tAFILE=$2\n-\t\tif read LINE2; then\n-\t\t    set - $LINE2\n-\t\t    if [ $# -eq 1 ]; then\n-\t\t\techo $AFILE $1 >>$FLIST\n-\t\t    elif [ $# -eq 2 ]; then\n-\t\t\techo $AFILE >>$FLIST\n-\t\t\tLINE=$LINE2\n-\t\t\tldone=\"\"\n-\t\t    fi\n-\t\telse\n-\t\t    echo $AFILE >>$FLIST\n-\t\tfi\n-\t    fi\n-\tdone\n-    done\n-    hg fstatus -rn $FSTAT_OPT 2>\/dev\/null | $FILTER | $AWK '\n-\t\/^\\[.*\\]$\/\t{tree=substr($1,2,length($1)-2); next}\n-\t$1 != \"\"\t{n=index($1,tree);\n-\t\t\t if (n == 0)\n-\t\t\t\t{ printf(\"%s\/%s\\n\",tree,$1)}\n-\t\t\t else\n-\t\t\t\t{ printf(\"%s\\n\",$1)}}' | while read RFILE; do\n-\tgrep \"$RFILE\" $FLIST >\/dev\/null\n-\tif [ $? -eq 1 ]; then\n-\t    echo $RFILE >>$FLIST\n-\tfi\n-    done\n-}\n-\n-#\n-# flist_from_mercurial $PWS\n-#\n-# Only local file based repositories are supported at present\n-# since even though we can determine the list from the parent finding\n-# the changes is harder.\n-#\n-# We first look for any outgoing files, this is for when the user has\n-# run hg commit.  If we don't find any then we look with hg status.\n-#\n-# We need at least one of default-push or default paths set in .hg\/hgrc\n-# If neither are set we don't know who to compare with.\n-\n-function flist_from_mercurial\n-{\n-#\tif [ \"${PWS##ssh:\/\/}\" != \"$PWS\" -o \\\n-#\t     \"${PWS##http:\/\/}\" != \"$PWS\" -o \\\n-#\t     \"${PWS##https:\/\/}\" != \"$PWS\" ]; then\n-#\t\tprint \"Remote Mercurial repositories not currently supported.\"\n-#\t\tprint \"Set default and\/or default-push to a local repository\"\n-#\t\texit\n-#\tfi\n-    if [[ -n $forestflag ]]; then\n-        HG_LIST_FROM_COMMIT=\n-\tflist_from_mercurial_forest\n-    else\n-        STATUS_REV=\n-        if [[ -n $rflag ]]; then\n-            STATUS_REV=\"--rev $PARENT_REV\"\n-        elif [[ -n $OUTREV ]]; then\n-            STATUS_REV=\"--rev $OUTREV\"\n-        else\n-            # hg commit hasn't been run see what is lying around\n-            print \"\\n No outgoing, perhaps you haven't commited.\"\n-        fi\n-\t# First let's list all the modified or deleted files\n-\n-\thg status $STATUS_REV -mdn | $FILTER > $FLIST\n-\n-\t# Then all the added files\n-\t# But some of these could have been \"moved\" or renamed ones\n-\t# so let's make sure we get the proper info\n-\t# hg status -aC will produce something like:\n-\t#\tA subdir\/File3\n-\t#\tA subdir\/File4\n-\t#\t  File4\n-\t#\tA subdir\/File5\n-        # The first and last are simple addition while the middle one\n-        # is a move\/rename or a copy.  We can't distinguish from a rename vs a copy\n-        # without also getting the status of removed files.  The middle case above\n-        # is a rename if File4 is also shown a being removed.  If File4 is not a\n-        # removed file, then the middle case is a copy from File4 to subdir\/File4\n-        # FIXME - we're not distinguishing copy from rename\n-\n-\thg status $STATUS_REV -aC | $FILTER >$FLIST.temp\n-\twhile read LINE; do\n-\t    ldone=\"\"\n-\t    while [ -z \"$ldone\" ]; do\n-\t\tldone=\"1\"\n-\t\tset - $LINE\n-\t\tif [ $# -eq 2 -a \"$1\" == \"A\" ]; then\n-\t\t    AFILE=$2\n-\t\t    if read LINE2; then\n-\t\t\tset - $LINE2\n-\t\t\tif [ $# -eq 1 ]; then\n-\t\t\t    echo $AFILE $1 >>$FLIST\n-\t\t\telif [ $# -eq 2 ]; then\n-\t\t\t    echo $AFILE >>$FLIST\n-\t\t\t    LINE=$LINE2\n-\t\t\t    ldone=\"\"\n-\t\t\tfi\n-\t\t    else\n-\t\t\techo $AFILE >>$FLIST\n-\t\t    fi\n-\t\tfi\n-\t    done\n-\tdone < $FLIST.temp\n-\thg status $STATUS_REV -rn | $FILTER > $FLIST.temp\n-\twhile read RFILE; do\n-\t    grep \"$RFILE\" $FLIST >\/dev\/null\n-\t    if [ $? -eq 1 ]; then\n-\t\techo $RFILE >>$FLIST\n-\t    fi\n-\tdone < $FLIST.temp\n-\trm -f $FLIST.temp\n-    fi\n-}\n-\n-function env_from_flist\n-{\n-\t[[ -r $FLIST ]] || return\n-\n-\t#\n-\t# Use \"eval\" to set env variables that are listed in the file\n-\t# list.  Then copy those into our local versions of those\n-\t# variables if they have not been set already.\n-\t#\n-\teval `sed -e \"s\/#.*$\/\/\" $FLIST | grep = `\n-\n-\t[[ -z $codemgr_ws && -n $CODEMGR_WS ]] && codemgr_ws=$CODEMGR_WS\n-\n-\t#\n-\t# Check to see if CODEMGR_PARENT is set in the flist file.\n-\t#\n-\t[[ -z $codemgr_parent && -n $CODEMGR_PARENT ]] && \\\n-\t    codemgr_parent=$CODEMGR_PARENT\n-}\n-\n-#\n-# detect_scm\n-#\n-# We dynamically test the SCM type; this allows future extensions to\n-# new SCM types\n-#\n-function detect_scm\n-{\n-\tif hg root >\/dev\/null ; then\n-\t\tprint \"mercurial\"\n-\telse\n-\t\tprint \"unknown\"\n-\tfi\n-}\n-\n-function look_for_prog\n-{\n-\ttypeset path\n-\ttypeset ppath\n-\ttypeset progname=$1\n-\n-\tDEVTOOLS=\n-\tOS=`uname`\n-\tif [[ \"$OS\" == \"SunOS\" ]]; then\n-\t    DEVTOOLS=\"\/java\/devtools\/`uname -p`\/bin\"\n-\telif [[ \"$OS\" == \"Linux\" ]]; then\n-\t    DEVTOOLS=\"\/java\/devtools\/linux\/bin\"\n-\tfi\n-\n-\tppath=$PATH\n-\tppath=$ppath:\/usr\/sfw\/bin:\/usr\/bin:\/usr\/sbin\n-\tppath=$ppath:\/opt\/teamware\/bin:\/opt\/onbld\/bin\n-\tppath=$ppath:\/opt\/onbld\/bin\/`uname -p`\n-\tppath=$ppath:\/java\/devtools\/share\/bin:$DEVTOOLS\n-\n-\tPATH=$ppath prog=`whence $progname`\n-\tif [[ -n $prog ]]; then\n-\t\tprint $prog\n-\tfi\n-}\n-\n-#\n-# Find the parent for $1\n-#\n-function find_outrev\n-{\n-    crev=$1\n-    prev=`hg log -r $crev --template '{parents}\\n'`\n-    if [[ -z \"$prev\" ]]\n-    then\n-\t# No specific parent means previous changeset is parent\n-\tprev=`expr $crev - 1`\n-    else\n-\t# Format is either of the following two:\n-\t# 546:7df6fcf1183b\n-\t# 548:16f1915bb5cd 547:ffaa4e775815\n-\tprev=`echo $prev | sed -e 's\/\\([0-9]*\\):.*\/\\1\/'`\n-    fi\n-    print $prev\n-}\n-\n-function extract_ssh_infos\n-{\n-    CMD=$1\n-    if expr \"$CMD\" : 'ssh:\/\/[^\/]*@' >\/dev\/null; then\n-\tssh_user=`echo $CMD | sed -e 's\/ssh:\\\/\\\/\\(.*\\)@.*\/\\1\/'`\n-\tssh_host=`echo $CMD | sed -e 's\/ssh:\\\/\\\/.*@\\([^\/]*\\)\\\/.*\/\\1\/'`\n-\tssh_dir=`echo $CMD | sed -e 's\/ssh:\\\/\\\/.*@[^\/]*\\\/\\(.*\\)\/\\1\/'`\n-    else\n-\tssh_user=\n-\tssh_host=`echo $CMD | sed -e 's\/ssh:\\\/\\\/\\([^\/]*\\)\\\/.*\/\\1\/'`\n-\tssh_dir=`echo $CMD | sed -e 's\/ssh:\\\/\\\/[^\/]*\\\/\\(.*\\)\/\\1\/'`\n-    fi\n-\n-}\n-\n-function build_old_new_mercurial\n-{\n-\tolddir=$1\n-\tnewdir=$2\n-\tDIR=$3\n-\tF=$4\n-\t#\n-\t# new version of the file.\n-\t#\n-\trm -rf $newdir\/$DIR\/$F\n-\tif [ -f $F ]; then\n-\t    cp $F  $newdir\/$DIR\/$F\n-\tfi\n-\n-\t#\n-\t# Old version of the file.\n-\t#\n-\trm -rf $olddir\/$DIR\/$F\n-\n-\tif [ -n \"$PWS\" ]; then\n-\t    if expr \"$PWS\" : 'ssh:\/\/' >\/dev\/null\n-\t    then\n-\t\textract_ssh_infos $PWS\n-\t\tif [ -n \"$ssh_user\" ]; then\n-\t\t    parent=\"ssh -l $ssh_user $ssh_host hg -R $ssh_dir --cwd $ssh_dir\"\n-\t\telse\n-\t\t    parent=\"ssh $ssh_host hg -R $ssh_dir --cwd $ssh_dir\"\n-\t\tfi\n-\t    else\n-\t\tparent=\"hg -R $PWS --cwd $PWS\"\n-\t    fi\n-\telse\n-\t    parent=\"\"\n-\tfi\n-\n-\tif [ -z \"$rename\" ]; then\n-\t    if [ -n \"$rflag\" ]; then\n-\t\tparentrev=$PARENT_REV\n-\t    elif [ \"$HG_LIST_FROM_COMMIT\" -eq 1 ]; then\n-                parentrev=$OUTREV\n-\t    else\n-                if [[ -n $HG_BRANCH ]]; then\n-                    parentrev=$HG_BRANCH\n-                else\n-\t\t    parentrev=\"tip\"\n-                fi\n-\t    fi\n-\n-\t    if [ -n \"$parentrev\" ]; then\n-\t\tif [ -z \"$parent\" ]; then\n-\t\t    hg cat --rev $parentrev --output $olddir\/$DIR\/$F $F 2>\/dev\/null\n-\t\telse\n-\t\t    # when specifying a workspace we have to provide\n-\t\t    # the full path\n-\t\t    $parent cat --rev $parentrev --output $olddir\/$DIR\/$F $DIR\/$F 2>\/dev\/null\n-\t\tfi\n-\t    fi\n-\telse\n-\t    # It's a rename (or a move), or a copy, so let's make sure we move\n-\t    # to the right directory first, then restore it once done\n-\t    current_dir=`pwd`\n-\t    hg_root=`hg root`\n-\t    cd $CWS\n-\t    if [ -n \"$rflag\" ]; then\n-\t\tparentrev=$PARENT_REV\n-\t    elif [ \"$HG_LIST_FROM_COMMIT\" -eq 1 ]; then\n-                parentrev=$OUTREV\n-\t    fi\n-\t    if [ -z \"$parentrev\" ]; then\n-\t\tparentrev=`hg log -l1 $PDIR\/$PF | $AWK -F: '\/changeset\/ {print $2}'`\n-\t    fi\n-\t    if [ -n \"$parentrev\" ]; then\n-\t\tmkdir -p $olddir\/$PDIR\n-\t\tif [ -z \"$parent\" ]; then\n-\t\t    hg cat -R $hg_root --rev $parentrev --output $olddir\/$PDIR\/$PF $PDIR\/$PF 2>\/dev\/null\n-\t\telse\n-\t\t    $parent cat --rev $parentrev --output $olddir\/$PDIR\/$PF $PDIR\/$PF 2>\/dev\/null\n-\t\tfi\n-\t    fi\n-\t    cd $current_dir\n-\tfi\n-}\n-\n-function build_old_new\n-{\n-\tif [[ $SCM_MODE == \"mercurial\" ]]; then\n-\t\tbuild_old_new_mercurial $@\n-\tfi\n-}\n-\n-\n-#\n-# Usage message.\n-#\n-function usage\n-{\n-\tprint \"Usage:\\twebrev [options]\n-\twebrev [options] ( <file> | - )\n-\n-Options:\n-\t-v: Print the version of this tool.\n-        -b: Do not ignore changes in the amount of white space.\n-        -c <CR#>: Include link to CR (aka bugid) in the main page.\n-\t-i <filename>: Include <filename> in the index.html file.\n-\t-o <outdir>: Output webrev to specified directory.\n-\t-p <compare-against>: Use specified parent wkspc or basis for comparison\n-        -u <username>: Use that username instead of 'guessing' one.\n-\t-m: Forces the use of Mercurial\n-\n-Mercurial only options:\n-\t-r rev: Compare against a specified revision\n-\t-N: Skip 'hg outgoing', use only 'hg status'\n-\t-f: Use the forest extension\n-\n-Arguments:\n-\t<file>: Optional file containing list of files to include in webrev\n-        -: read list of files to include in webrev from standard input\n-\n-Environment:\n-\tWDIR: Control the output directory.\n-\tWEBREV_BUGURL: Control the URL prefix for bugids.\n-\n-\"\n-\n-\texit 2\n-}\n-\n-#\n-#\n-# Main program starts here\n-#\n-#\n-LANG=\"C\"\n-LC_ALL=\"C\"\n-export LANG LC_ALL\n-trap \"rm -f \/tmp\/$$.* ; exit\" 0 1 2 3 15\n-\n-set +o noclobber\n-\n-[[ -z $WDIFF ]] && WDIFF=`look_for_prog wdiff`\n-[[ -z $CODEREVIEW ]] && CODEREVIEW=`look_for_prog codereview`\n-[[ -z $PS2PDF ]] && PS2PDF=`look_for_prog ps2pdf`\n-[[ -z $PERL ]] && PERL=`look_for_prog perl`\n-[[ -z $SCCS ]] && SCCS=`look_for_prog sccs`\n-[[ -z $AWK ]] && AWK=`look_for_prog nawk`\n-[[ -z $AWK ]] && AWK=`look_for_prog gawk`\n-[[ -z $AWK ]] && AWK=`look_for_prog awk`\n-[[ -z $JAR ]] && JAR=`look_for_prog jar`\n-[[ -z $ZIP ]] && ZIP=`look_for_prog zip`\n-[[ -z $GETENT ]] && GETENT=`look_for_prog getent`\n-[[ -z $WGET ]] && WGET=`look_for_prog wget`\n-\n-if uname | grep CYGWIN >\/dev\/null\n-then\n-        ISWIN=1\n-        # Under windows mercurial outputs '\\' instead of '\/'\n-        FILTER=\"tr '\\\\\\\\' '\/'\"\n-else\n-        FILTER=\"cat\"\n-fi\n-\n-if [[ ! -x $PERL ]]; then\n-\tprint -u2 \"Error: No perl interpreter found.  Exiting.\"\n-\texit 1\n-fi\n-\n-#\n-# These aren't fatal, but we want to note them to the user.\n-#\n-# [[ ! -x $CODEREVIEW ]] && print -u2 \"WARNING: codereview(1) not found.\"\n-# [[ ! -x $PS2PDF ]] && print -u2 \"WARNING: ps2pdf(1) not found.\"\n-# [[ ! -x $WDIFF ]] && print -u2 \"WARNING: wdiff not found.\"\n-\n-# Declare global total counters.\n-integer TOTL TINS TDEL TMOD TUNC\n-\n-flist_mode=\n-flist_file=\n-bflag=\n-iflag=\n-oflag=\n-pflag=\n-uflag=\n-Oflag=\n-rflag=\n-Nflag=\n-forestflag=\n-while getopts \"c:i:o:p:r:u:mONvfb\" opt\n-do\n-\tcase $opt in\n-        b)      bflag=1;;\n-\n-\ti)\tiflag=1\n-\t\tINCLUDE_FILE=$OPTARG;;\n-\n-\to)\toflag=1\n-\t\tWDIR=$OPTARG;;\n-\n-\tp)\tpflag=1\n-\t\tcodemgr_parent=$OPTARG;;\n-\n-\tu)      uflag=1\n-\t\tusername=$OPTARG;;\n-\n-        c)      if [[ -z $CRID ]]; then\n-                   CRID=$OPTARG\n-                else\n-                   CRID=\"$CRID $OPTARG\"\n-                fi;;\n-\n-\tm)\tSCM_MODE=\"mercurial\";;\n-\n-\tO)\tOflag=1;; # ignored (bugs are now all visible at bugs.openjdk.java.net)\n-\n-\tN)\tNflag=1;;\n-\n-\tf)\tforestflag=1;;\n-\n-\tr)\trflag=1\n-\t\tPARENT_REV=$OPTARG;;\n-\n-\tv)\tprint \"$0 version: $WEBREV_UPDATED\";;\n-\n-\n-\t?)\tusage;;\n-\tesac\n-done\n-\n-FLIST=\/tmp\/$$.flist\n-HG_LIST_FROM_COMMIT=\n-\n-if [[ -n $forestflag && -n $rflag ]]; then\n-    print \"The -r <rev> flag is incompatible with the use of forests\"\n-    exit 2\n-fi\n-\n-#\n-# If this manually set as the parent, and it appears to be an earlier webrev,\n-# then note that fact and set the parent to the raw_files\/new subdirectory.\n-#\n-if [[ -n $pflag && -d $codemgr_parent\/raw_files\/new ]]; then\n-\tparent_webrev=\"$codemgr_parent\"\n-\tcodemgr_parent=\"$codemgr_parent\/raw_files\/new\"\n-fi\n-\n-shift $(($OPTIND - 1))\n-\n-if [[ $1 == \"-\" ]]; then\n-\tcat > $FLIST\n-\tflist_mode=\"stdin\"\n-\tflist_done=1\n-\tshift\n-elif [[ -n $1 ]]; then\n-\tif [[ ! -r $1 ]]; then\n-\t\tprint -u2 \"$1: no such file or not readable\"\n-\t\tusage\n-\tfi\n-\tcat $1 > $FLIST\n-\tflist_mode=\"file\"\n-\tflist_file=$1\n-\tflist_done=1\n-\tshift\n-else\n-\tflist_mode=\"auto\"\n-fi\n-\n-#\n-# Before we go on to further consider -l and -w, work out which SCM we think\n-# is in use.\n-#\n-if [[ -z $SCM_MODE ]]; then\n-    SCM_MODE=`detect_scm $FLIST`\n-fi\n-if [[ $SCM_MODE == \"unknown\" ]]; then\n-       print -u2 \"Unable to determine SCM type currently in use.\"\n-       print -u2 \"For mercurial: webrev runs 'hg root'.\"\n-       exit 1\n-fi\n-\n-print -u2 \"   SCM detected: $SCM_MODE\"\n-\n-\n-if [[ $SCM_MODE == \"mercurial\" ]]; then\n-    #\n-    # determine Workspace and parent workspace paths\n-    #\n-    CWS=`hg root | $FILTER`\n-    if [[ -n $pflag && -z \"$PWS\" ]]; then\n-\tOUTPWS=$codemgr_parent\n-        # Let's try to expand it if it's an alias defined in [paths]\n-        tmp=`hg path $OUTPWS 2>\/dev\/null | $FILTER`\n-        if [[ -n $tmp ]]; then\n-            OUTPWS=\"$tmp\"\n-        fi\n-        if [[ -n $rflag ]]; then\n-\t    if expr \"$codemgr_parent\" : 'ssh:\/\/.*' >\/dev\/null; then\n-\t        PWS=$codemgr_parent\n-\t    else\n-\t        PWS=`hg -R \"$codemgr_parent\" root 2>\/dev\/null | $FILTER`\n-\t    fi\n-        fi\n-    fi\n-    #\n-    # OUTPWS is the parent repository to use when using 'hg outgoing'\n-    #\n-    if [[ -z $Nflag ]]; then\n-        if [[ -n $forestflag ]]; then\n-            #\n-            # for forest we have to rely on properly set default and\n-            # default-push because they can be different from the top one.\n-            # unless of course it was explicitly specified with -p\n-            if [[ -z $pflag ]]; then\n-                OUTPWS=\n-            fi\n-        else\n-            #\n-            # Unfortunately mercurial is bugged and doesn't handle\n-            # aliases correctly in 'hg path default'\n-            # So let's do it ourselves. Sigh...\n-            if [[ -z \"$OUTPWS\" ]]; then\n-                OUTPWS=`grep default-push $CWS\/.hg\/hgrc | $AWK '{print $3}' | $FILTER`\n-            fi\n-            # Still empty, means no default-push\n-            if [[ -z \"$OUTPWS\" ]]; then\n-                OUTPWS=`grep 'default =' $CWS\/.hg\/hgrc | $AWK '{print $3}' | $FILTER`\n-            fi\n-            # Let's try to expand it if it's an alias defined in [paths]\n-            tmp=`hg path $OUTPWS 2>\/dev\/null | $FILTER`\n-            if [[ -n $tmp ]]; then\n-                OUTPWS=\"$tmp\"\n-            fi\n-        fi\n-    fi\n-    #\n-    # OUTPWS may contain username:password, let's make sure we remove the\n-    # sensitive information before we print out anything in the HTML\n-    #\n-    OUTPWS2=$OUTPWS\n-    if [[ -n $OUTPWS ]]; then\n-\tif [[ `expr \"$OUTPWS\" : '.*:\/\/[^\/]*@.*'` -gt 0 ]]; then\n-\t    # Remove everything between ':\/\/' and '@'\n-\t    OUTPWS2=`echo $OUTPWS | sed -e 's\/\\(.*:\\\/\\\/\\).*@\\(.*\\)\/\\1\\2\/'`\n-\tfi\n-    fi\n-\n-    if [[ -z $HG_BRANCH ]]; then\n-        HG_BRANCH=`hg branch`\n-        if [ \"$HG_BRANCH\" == \"default\" ]; then\n-            #\n-            # 'default' means no particular branch, so let's cancel that\n-            #\n-            HG_BRANCH=\n-        fi\n-    fi\n-\n-    if [[ -z $forestflag ]]; then\n-        if [[ -z $Nflag ]]; then\n-            #\n-            # If no \"-N\", always do \"hg outgoing\" against parent\n-            # repository to determine list of outgoing revisions.\n-            #\n-            ALL_CREV=`hg outgoing -q --template '{rev}\\n' $OUTPWS | sort -n`\n-            if [[ -n $ALL_CREV ]]; then\n-                FIRST_CREV=`echo \"$ALL_CREV\" | head -1`\n-                #\n-                # If no \"-r\", choose revision to compare against by\n-                # finding the latest revision not in the outgoing list.\n-                #\n-                if [[ -z $rflag ]]; then\n-                    OUTREV=`find_outrev \"$FIRST_CREV\"`\n-                    if [[ -n $OUTREV ]]; then\n-                        HG_LIST_FROM_COMMIT=1\n-                    fi\n-                fi\n-            fi\n-        elif [[ -n $rflag ]]; then\n-            #\n-            # If skipping \"hg outgoing\" but still comparing against a\n-            # specific revision (not the tip), set revision for comment\n-            # accumulation.\n-            #\n-            FIRST_CREV=`hg log --rev $PARENT_REV --template '{rev}'`\n-            FIRST_CREV=`expr $FIRST_CREV + 1`\n-        fi\n-    fi\n-    #Let's check if a merge is needed, if so, issue a warning\n-    PREV=`hg parent | grep '^tag:.*tip$'`\n-    if [[ -z $PREV ]]; then\n-        print \"WARNING: parent rev is not tip. Maybe an update or merge is needed\"\n-    fi\n-fi\n-\n-if [[ $flist_mode == \"stdin\" ]]; then\n-\tprint -u2 \" File list from: standard input\"\n-elif [[ $flist_mode == \"file\" ]]; then\n-\tprint -u2 \" File list from: $flist_file\"\n-fi\n-\n-if [[ $# -gt 0 ]]; then\n-\tprint -u2 \"WARNING: unused arguments: $*\"\n-fi\n-\n-if [[ $SCM_MODE == \"mercurial\" ]]; then\n-    if [[ -z $flist_done ]]; then\n-\tflist_from_mercurial $PWS\n-    fi\n-fi\n-\n-#\n-# If the user didn't specify a -i option, check to see if there is a\n-# webrev-info file in the workspace directory.\n-#\n-if [[ -z $iflag && -r \"$CWS\/webrev-info\" ]]; then\n-\tiflag=1\n-\tINCLUDE_FILE=\"$CWS\/webrev-info\"\n-fi\n-\n-if [[ -n $iflag ]]; then\n-\tif [[ ! -r $INCLUDE_FILE ]]; then\n-\t\tprint -u2 \"include file '$INCLUDE_FILE' does not exist or is\" \\\n-\t\t    \"not readable.\"\n-\t\texit 1\n-\telse\n-\t\t#\n-\t\t# $INCLUDE_FILE may be a relative path, and the script alters\n-\t\t# PWD, so we just stash a copy in \/tmp.\n-\t\t#\n-\t\tcp $INCLUDE_FILE \/tmp\/$$.include\n-\tfi\n-fi\n-\n-#\n-# Output directory.\n-#\n-if [[ -z $WDIR ]]; then\n-    WDIR=$CWS\/webrev\n-else\n-    # If the output directory doesn't end with '\/webrev' or '\/webrev\/'\n-    # then add '\/webrev'. This is for backward compatibility\n-    if ! expr $WDIR : '.*\/webrev\/\\?$' >\/dev\/null\n-    then\n-\tWDIR=$WDIR\/webrev\n-    fi\n-fi\n-# WDIR=${WDIR:-$CWS\/webrev}\n-\n-#\n-# Name of the webrev, derived from the workspace name; in the\n-# future this could potentially be an option.\n-#\n-# Let's keep what's after the last '\/'\n-WNAME=${CWS##*\/}\n-\n-#\n-# If WDIR doesn't start with '\/' or 'x:' prepend the current dir\n-#\n-if [ ${WDIR%%\/*} ]; then\n-    if [[ -n $ISWIN ]]; then\n-        if [ ${WDIR%%[A-Za-z]:*} ]; then\n-\t    WDIR=$PWD\/$WDIR\n-        fi\n-    else\n-\tWDIR=$PWD\/$WDIR\n-    fi\n-fi\n-\n-if [[ ! -d $WDIR ]]; then\n-\tmkdir -p $WDIR\n-\t[[ $? != 0 ]] && exit 1\n-fi\n-\n-#\n-# Summarize what we're going to do.\n-#\n-print \"      Workspace: $CWS\"\n-if [[ -n $parent_webrev ]]; then\n-    print \"Compare against: webrev at $parent_webrev\"\n-elif [[ -n $OUTPWS2 ]]; then\n-    print \"Compare against: $OUTPWS2\"\n-fi\n-if [[ -n $HG_BRANCH ]]; then\n-    print \"         Branch: $HG_BRANCH\"\n-fi\n-if [[ -n $rflag ]]; then\n-        print \"Compare against version: $PARENT_REV\"\n-fi\n-[[ -n $INCLUDE_FILE ]] && print \"      Including: $INCLUDE_FILE\"\n-print \"      Output to: $WDIR\"\n-\n-#\n-# Save the file list in the webrev dir\n-#\n-[[ ! $FLIST -ef $WDIR\/file.list ]] && cp $FLIST $WDIR\/file.list\n-\n-#\n-#    Bug IDs will be replaced by a URL.  Order of precedence\n-#    is: default location, $WEBREV_BUGURL\n-#\n-BUGURL='https:\/\/bugs.openjdk.java.net\/browse\/'\n-[[ -n $WEBREV_BUGURL ]] && BUGURL=\"$WEBREV_BUGURL\"\n-IDPREFIX='JDK-'\n-\n-\n-rm -f $WDIR\/$WNAME.patch\n-rm -f $WDIR\/$WNAME.changeset\n-rm -f $WDIR\/$WNAME.ps\n-rm -f $WDIR\/$WNAME.pdf\n-\n-touch $WDIR\/$WNAME.patch\n-\n-print \"   Output Files:\"\n-\n-#\n-# Clean up the file list: Remove comments, blank lines and env variables.\n-#\n-sed -e \"s\/#.*$\/\/\" -e \"\/=\/d\" -e \"\/^[   ]*$\/d\" $FLIST > \/tmp\/$$.flist.clean\n-FLIST=\/tmp\/$$.flist.clean\n-\n-#\n-# Clean up residual raw files\n-#\n-if [ -d $WDIR\/raw_files ]; then\n-    rm -rf $WDIR\/raw_files 2>\/dev\/null\n-fi\n-\n-#\n-# Should we ignore changes in white spaces when generating diffs?\n-#\n-if [[ -n $bflag ]]; then\n-    DIFFOPTS=\"-t\"\n-else\n-    DIFFOPTS=\"-bt\"\n-fi\n-#\n-# First pass through the files: generate the per-file webrev HTML-files.\n-#\n-while read LINE\n-do\n-\tset - $LINE\n-\tP=$1\n-\n-        if [[ $1 == \"Revision:\" ]]; then\n-            OUTREV=$2\n-            continue\n-        fi\n-\t#\n-\t# Normally, each line in the file list is just a pathname of a\n-\t# file that has been modified or created in the child.  A file\n-\t# that is renamed in the child workspace has two names on the\n-\t# line: new name followed by the old name.\n-\t#\n-\toldname=\"\"\n-\toldpath=\"\"\n-\trename=\n-\tif [[ $# -eq 2 ]]; then\n-\t\tPP=$2\t\t\t# old filename\n-\t\toldname=\" (was $PP)\"\n-\t\toldpath=\"$PP\"\n-\t\trename=1\n-        \tPDIR=${PP%\/*}\n-        \tif [[ $PDIR == $PP ]]; then\n-\t\t\tPDIR=\".\"   # File at root of workspace\n-\t\tfi\n-\n-\t\tPF=${PP##*\/}\n-\n-\t        DIR=${P%\/*}\n-\t        if [[ $DIR == $P ]]; then\n-\t\t\tDIR=\".\"   # File at root of workspace\n-\t\tfi\n-\n-\t\tF=${P##*\/}\n-        else\n-\t        DIR=${P%\/*}\n-\t        if [[ \"$DIR\" == \"$P\" ]]; then\n-\t\t\tDIR=\".\"   # File at root of workspace\n-\t\tfi\n-\n-\t\tF=${P##*\/}\n-\n-\t\tPP=$P\n-\t\tPDIR=$DIR\n-\t\tPF=$F\n-\tfi\n-\n-        # Make the webrev directory if necessary as it may have been\n-        # removed because it was empty\n-        if [ ! -d $CWS\/$DIR ]; then\n-\t    mkdir -p $CWS\/$DIR\n-        fi\n-\n-\tCOMM=`getcomments html $P $PP`\n-\n-\tprint \"\\t$P$oldname\\n\\t\\t\\c\"\n-\n-\t# Make the webrev mirror directory if necessary\n-\tmkdir -p $WDIR\/$DIR\n-\n-\t# cd to the directory so the names are short\n-\tcd $CWS\/$DIR\n-\n-\t#\n-\t# We stash old and new files into parallel directories in \/tmp\n-\t# and do our diffs there.  This makes it possible to generate\n-\t# clean looking diffs which don't have absolute paths present.\n-\t#\n-\tolddir=$WDIR\/raw_files\/old\n-\tnewdir=$WDIR\/raw_files\/new\n-\tmkdir -p $olddir\n-\tmkdir -p $newdir\n-\tmkdir -p $olddir\/$PDIR\n-\tmkdir -p $newdir\/$DIR\n-\n-\tbuild_old_new $olddir $newdir $DIR $F\n-\n-\tif [[ ! -f $F && ! -f $olddir\/$DIR\/$F ]]; then\n-\t\tprint \"*** Error: file not in parent or child\"\n-\t\tcontinue\n-\tfi\n-\n-\tcd $WDIR\/raw_files\n-\tofile=old\/$PDIR\/$PF\n-\tnfile=new\/$DIR\/$F\n-\n-\tmv_but_nodiff=\n-\tcmp $ofile $nfile > \/dev\/null 2>&1\n-\tif [[ $? == 0 && $rename == 1 ]]; then\n-\t\tmv_but_nodiff=1\n-\tfi\n-\n-        #\n-        # Cleaning up\n-        #\n-        rm -f $WDIR\/$DIR\/$F.cdiff.html\n-        rm -f $WDIR\/$DIR\/$F.udiff.html\n-        rm -f $WDIR\/$DIR\/$F.wdiff.html\n-        rm -f $WDIR\/$DIR\/$F.sdiff.html\n-        rm -f $WDIR\/$DIR\/$F-.html\n-        rm -f $WDIR\/$DIR\/$F.html\n-\n-\tits_a_jar=\n-\tif expr $F : '.*\\.jar' \\| $F : '.*\\.zip' >\/dev\/null; then\n-\t    its_a_jar=1\n-\t    # It's a JAR or ZIP file, let's do it differently\n-\t    if [[ -z $JAR ]]; then\n-\t\tprint \"No access to jar, so can't produce diffs for jar or zip files\"\n-\t    else\n-\t\tif [ -f $ofile ]; then\n-\t\t    $JAR -tvf $ofile >\"$ofile\".lst\n-\t\tfi\n-\t\tif [ -f $nfile ]; then\n-\t\t    $JAR -tvf $nfile >\"$nfile\".lst\n-\t\tfi\n-\n-\t\tif [[ -f $ofile && -f $nfile && -z $mv_but_nodiff ]]; then\n-\n-\t\t    ${CDIFFCMD:-diff -bt -C 5} $ofile.lst $nfile.lst > $WDIR\/$DIR\/$F.cdiff\n-\t\t    diff_to_html $F $DIR\/$F \"C\" \"$COMM\" < $WDIR\/$DIR\/$F.cdiff \\\n-\t\t\t> $WDIR\/$DIR\/$F.cdiff.html\n-\t\t    print \" cdiffs\\c\"\n-\n-\t\t    ${UDIFFCMD:-diff -bt -U 5} $ofile.lst $nfile.lst > $WDIR\/$DIR\/$F.udiff\n-\t\t    diff_to_html $F $DIR\/$F \"U\" \"$COMM\" < $WDIR\/$DIR\/$F.udiff \\\n-\t\t\t> $WDIR\/$DIR\/$F.udiff.html\n-\n-\t\t    print \" udiffs\\c\"\n-\n-\t\t    if [[ -x $WDIFF ]]; then\n-\t\t\t$WDIFF -c \"$COMM\" \\\n-\t\t\t    -t \"$WNAME Wdiff $DIR\/$F\" $ofile.lst $nfile.lst > \\\n-\t\t\t    $WDIR\/$DIR\/$F.wdiff.html 2>\/dev\/null\n-\t\t\tif [[ $? -eq 0 ]]; then\n-\t\t\t    print \" wdiffs\\c\"\n-\t\t\telse\n-\t\t\t    print \" wdiffs[fail]\\c\"\n-\t\t\tfi\n-\t\t    fi\n-\n-\t\t    sdiff_to_html $ofile $nfile $F $DIR \"$COMM\" \\\n-\t\t\t> $WDIR\/$DIR\/$F.sdiff.html\n-\t\t    print \" sdiffs\\c\"\n-\n-\t\t    print \" frames\\c\"\n-\n-\t\t    rm -f $WDIR\/$DIR\/$F.cdiff $WDIR\/$DIR\/$F.udiff\n-\n-\t\t    difflines $ofile.lst $nfile.lst > $WDIR\/$DIR\/$F.count\n-\n-\t\telif [[ -f $ofile && -f $nfile && -n $mv_but_nodiff ]]; then\n-\t\t# renamed file: may also have differences\n-\t\t    difflines $ofile.lst $nfile.lst > $WDIR\/$DIR\/$F.count\n-\t\telif [[ -f $nfile ]]; then\n-\t\t# new file: count added lines\n-\t\t    difflines \/dev\/null $nfile.lst > $WDIR\/$DIR\/$F.count\n-\t\telif [[ -f $ofile ]]; then\n-\t\t# old file: count deleted lines\n-\t\t    difflines $ofile.lst \/dev\/null > $WDIR\/$DIR\/$F.count\n-\t\tfi\n-\t    fi\n-\telse\n-\n-\t    #\n-\t    # If we have old and new versions of the file then run the\n-\t    # appropriate diffs.  This is complicated by a couple of factors:\n-\t    #\n-\t    #\t- renames must be handled specially: we emit a 'remove'\n-\t    #\t  diff and an 'add' diff\n-\t    #\t- new files and deleted files must be handled specially\n-\t    #\t- Solaris patch(1m) can't cope with file creation\n-\t    #\t  (and hence renames) as of this writing.\n-\t    #   - To make matters worse, gnu patch doesn't interpret the\n-\t    #\t  output of Solaris diff properly when it comes to\n-\t    #\t  adds and deletes.  We need to do some \"cleansing\"\n-\t    #     transformations:\n-\t    # \t    [to add a file] @@ -1,0 +X,Y @@  -->  @@ -0,0 +X,Y @@\n-\t    #\t    [to del a file] @@ -X,Y +1,0 @@  -->  @@ -X,Y +0,0 @@\n-\t    #\n-\t    cleanse_rmfile=\"sed 's\/^\\(@@ [0-9+,-]*\\) [0-9+,-]* @@$\/\\1 +0,0 @@\/'\"\n-\t    cleanse_newfile=\"sed 's\/^@@ [0-9+,-]* \\([0-9+,-]* @@\\)$\/@@ -0,0 \\1\/'\"\n-\n-            if [[ ! \"$HG_LIST_FROM_COMMIT\" -eq 1 || ! $flist_mode == \"auto\" ]];\n-            then\n-              # Only need to generate a patch file here if there are no commits in outgoing\n-              # or if we've specified a file list\n-              rm -f $WDIR\/$DIR\/$F.patch\n-              if [[ -z $rename ]]; then\n-                  if [ ! -f $ofile ]; then\n-                      diff -u \/dev\/null $nfile | sh -c \"$cleanse_newfile\" \\\n-                          > $WDIR\/$DIR\/$F.patch\n-                  elif [ ! -f $nfile ]; then\n-                      diff -u $ofile \/dev\/null | sh -c \"$cleanse_rmfile\" \\\n-                          > $WDIR\/$DIR\/$F.patch\n-                  else\n-                      diff -u $ofile $nfile > $WDIR\/$DIR\/$F.patch\n-                  fi\n-              else\n-                  diff -u $ofile \/dev\/null | sh -c \"$cleanse_rmfile\" \\\n-                      > $WDIR\/$DIR\/$F.patch\n-\n-                  diff -u \/dev\/null $nfile | sh -c \"$cleanse_newfile\" \\\n-                      >> $WDIR\/$DIR\/$F.patch\n-\n-              fi\n-\n-\n-            #\n-            # Tack the patch we just made onto the accumulated patch for the\n-            # whole wad.\n-            #\n-              cat $WDIR\/$DIR\/$F.patch >> $WDIR\/$WNAME.patch\n-            fi\n-\n-            print \" patch\\c\"\n-\n-\t    if [[ -f $ofile && -f $nfile && -z $mv_but_nodiff ]]; then\n-\n-\t\t${CDIFFCMD:-diff -bt -C 5} $ofile $nfile > $WDIR\/$DIR\/$F.cdiff\n-\t\tdiff_to_html $F $DIR\/$F \"C\" \"$COMM\" < $WDIR\/$DIR\/$F.cdiff \\\n-\t\t    > $WDIR\/$DIR\/$F.cdiff.html\n-\t\tprint \" cdiffs\\c\"\n-\n-\t\t${UDIFFCMD:-diff -bt -U 5} $ofile $nfile > $WDIR\/$DIR\/$F.udiff\n-\t\tdiff_to_html $F $DIR\/$F \"U\" \"$COMM\" < $WDIR\/$DIR\/$F.udiff \\\n-\t\t    > $WDIR\/$DIR\/$F.udiff.html\n-\n-\t\tprint \" udiffs\\c\"\n-\n-\t\tif [[ -x $WDIFF ]]; then\n-\t\t    $WDIFF -c \"$COMM\" \\\n-\t\t\t-t \"$WNAME Wdiff $DIR\/$F\" $ofile $nfile > \\\n-\t\t\t$WDIR\/$DIR\/$F.wdiff.html 2>\/dev\/null\n-\t\t    if [[ $? -eq 0 ]]; then\n-\t\t\tprint \" wdiffs\\c\"\n-\t\t    else\n-\t\t\tprint \" wdiffs[fail]\\c\"\n-\t\t    fi\n-\t\tfi\n-\n-\t\tsdiff_to_html $ofile $nfile $F $DIR \"$COMM\" \\\n-\t\t    > $WDIR\/$DIR\/$F.sdiff.html\n-\t\tprint \" sdiffs\\c\"\n-\n-\t\tprint \" frames\\c\"\n-\n-\t\trm -f $WDIR\/$DIR\/$F.cdiff $WDIR\/$DIR\/$F.udiff\n-\n-\t\tdifflines $ofile $nfile > $WDIR\/$DIR\/$F.count\n-\n-\t    elif [[ -f $ofile && -f $nfile && -n $mv_but_nodiff ]]; then\n-\t\t# renamed file: may also have differences\n-\t\tdifflines $ofile $nfile > $WDIR\/$DIR\/$F.count\n-\t    elif [[ -f $nfile ]]; then\n-\t\t# new file: count added lines\n-\t\tdifflines \/dev\/null $nfile > $WDIR\/$DIR\/$F.count\n-\t    elif [[ -f $ofile ]]; then\n-\t\t# old file: count deleted lines\n-\t\tdifflines $ofile \/dev\/null > $WDIR\/$DIR\/$F.count\n-\t    fi\n-\tfi\n-\t#\n-\t# Now we generate the postscript for this file.  We generate diffs\n-\t# only in the event that there is delta, or the file is new (it seems\n-\t# tree-killing to print out the contents of deleted files).\n-\t#\n-\tif [[ -f $nfile ]]; then\n-\t\tocr=$ofile\n-\t\t[[ ! -f $ofile ]] && ocr=\/dev\/null\n-\n-\t\tif [[ -z $mv_but_nodiff ]]; then\n-\t\t\ttextcomm=`getcomments text $P $PP`\n-\t\t\tif [[ -x $CODEREVIEW ]]; then\n-\t\t\t\t$CODEREVIEW -y \"$textcomm\" \\\n-\t\t\t\t    -e $ocr $nfile \\\n-\t\t\t\t    > \/tmp\/$$.psfile 2>\/dev\/null &&\n-\t\t\t\t    cat \/tmp\/$$.psfile >> $WDIR\/$WNAME.ps\n-\t\t\t\tif [[ $? -eq 0 ]]; then\n-\t\t\t\t\tprint \" ps\\c\"\n-\t\t\t\telse\n-\t\t\t\t\tprint \" ps[fail]\\c\"\n-\t\t\t\tfi\n-\t\t\tfi\n-\t\tfi\n-\tfi\n-\n-\tif [[ -f $ofile && -z $mv_but_nodiff ]]; then\n-\t    if [[ -n $its_a_jar ]]; then\n-\t\tsource_to_html Old $P < $ofile.lst > $WDIR\/$DIR\/$F-.html\n-\t    else\n-\t\tsource_to_html Old $P < $ofile > $WDIR\/$DIR\/$F-.html\n-\t    fi\n-\t\tprint \" old\\c\"\n-\tfi\n-\n-\tif [[ -f $nfile ]]; then\n-\t    if [[ -n $its_a_jar ]]; then\n-\t\tsource_to_html New $P < $nfile.lst > $WDIR\/$DIR\/$F.html\n-\t    else\n-\t\tsource_to_html New $P < $nfile > $WDIR\/$DIR\/$F.html\n-\t    fi\n-\t\tprint \" new\\c\"\n-\tfi\n-\n-\tprint\n-done < $FLIST\n-\n-# Create the new style mercurial patch here using hg export -r [all-revs] -g -o $CHANGESETPATH\n-if [[ $SCM_MODE == \"mercurial\" ]]; then\n-  if [[ \"$HG_LIST_FROM_COMMIT\" -eq 1 && $flist_mode == \"auto\" ]]; then\n-    EXPORTCHANGESET=\"$WNAME.changeset\"\n-    CHANGESETPATH=${WDIR}\/${EXPORTCHANGESET}\n-    rm -f $CHANGESETPATH\n-    touch $CHANGESETPATH\n-    if [[ -n $ALL_CREV ]]; then\n-      rev_opt=\n-      for rev in $ALL_CREV; do\n-        rev_opt=\"$rev_opt --rev $rev\"\n-      done\n-    elif [[ -n $FIRST_CREV ]]; then\n-      rev_opt=\"--rev $FIRST_CREV\"\n-    fi\n-\n-    if [[ -n $rev_opt ]]; then\n-      (cd $CWS;hg export -g $rev_opt -o $CHANGESETPATH)\n-      echo \"Created changeset: $CHANGESETPATH\" 1>&2\n-      # Use it in place of the jdk.patch created above\n-      rm -f $WDIR\/$WNAME.patch\n-    fi\n-  set +x\n-  fi\n-fi\n-\n-frame_nav_js > $WDIR\/ancnav.js\n-frame_navigation > $WDIR\/ancnav.html\n-\n-if [[ -f $WDIR\/$WNAME.ps && -x $CODEREVIEW && -x $PS2PDF ]]; then\n-\tprint \" Generating PDF: \\c\"\n-\tfix_postscript $WDIR\/$WNAME.ps | $PS2PDF - > $WDIR\/$WNAME.pdf\n-\tprint \"Done.\"\n-fi\n-\n-# Now build the index.html file that contains\n-# links to the source files and their diffs.\n-\n-cd $CWS\n-\n-# Save total changed lines for Code Inspection.\n-print \"$TOTL\" > $WDIR\/TotalChangedLines\n-\n-print \"     index.html: \\c\"\n-INDEXFILE=$WDIR\/index.html\n-exec 3<&1\t\t\t# duplicate stdout to FD3.\n-exec 1<&-\t\t\t# Close stdout.\n-exec > $INDEXFILE\t\t# Open stdout to index file.\n-\n-print \"$HTML<head>\"\n-print \"<meta name=\\\"scm\\\" content=\\\"$SCM_MODE\\\" \/>\"\n-print \"$STDHEAD\"\n-print \"<title>$WNAME<\/title>\"\n-print \"<\/head>\"\n-print \"<body id=\\\"SUNWwebrev\\\">\"\n-print \"<div class=\\\"summary\\\">\"\n-print \"<h2>Code Review for $WNAME<\/h2>\"\n-\n-print \"<table>\"\n-\n-if [[ -z $uflag ]]; then\n-    if [[ $SCM_MODE == \"mercurial\" ]]; then\n-        #\n-        # Let's try to extract the user name from the .hgrc file\n-        #\n-\tusername=`grep '^username' $HOME\/.hgrc | sed 's\/^username[ ]*=[ ]*\\(.*\\)\/\\1\/'`\n-    fi\n-\n-    if [[ -z $username ]]; then\n-        #\n-        # Figure out the username and gcos name.  To maintain compatibility\n-        # with passwd(4), we must support '&' substitutions.\n-        #\n-\tusername=`id | cut -d '(' -f 2 | cut -d ')' -f 1`\n-\tif [[ -x $GETENT ]]; then\n-\t    realname=`$GETENT passwd $username | cut -d':' -f 5 | cut -d ',' -f 1`\n-\tfi\n-\tuserupper=`print \"$username\" | sed 's\/\\<.\/\\u&\/g'`\n-\trealname=`print $realname | sed s\/\\&\/$userupper\/`\n-    fi\n-fi\n-\n-date=\"on `date`\"\n-\n-if [[ -n \"$username\" && -n \"$realname\" ]]; then\n-\tprint \"<tr><th>Prepared by:<\/th>\"\n-\tprint \"<td>$realname ($username) $date<\/td><\/tr>\"\n-elif [[ -n \"$username\" ]]; then\n-\tprint \"<tr><th>Prepared by:<\/th><td>$username $date<\/td><\/tr>\"\n-fi\n-\n-print \"<tr><th>Workspace:<\/th><td>$CWS<\/td><\/tr>\"\n-if [[ -n $parent_webrev ]]; then\n-        print \"<tr><th>Compare against:<\/th><td>\"\n-\tprint \"webrev at $parent_webrev\"\n-else\n-    if [[ -n $OUTPWS2 ]]; then\n-        print \"<tr><th>Compare against:<\/th><td>\"\n-\tprint \"$OUTPWS2\"\n-    fi\n-fi\n-print \"<\/td><\/tr>\"\n-if [[ -n $rflag ]]; then\n-    print \"<tr><th>Compare against version:<\/th><td>$PARENT_REV<\/td><\/tr>\"\n-elif [[ -n $OUTREV ]]; then\n-    if [[ -z $forestflag ]]; then\n-        print \"<tr><th>Compare against version:<\/th><td>$OUTREV<\/td><\/tr>\"\n-    fi\n-fi\n-if [[ -n $HG_BRANCH ]]; then\n-    print \"<tr><th>Branch:<\/th><td>$HG_BRANCH<\/td><\/tr>\"\n-fi\n-\n-print \"<tr><th>Summary of changes:<\/th><td>\"\n-printCI $TOTL $TINS $TDEL $TMOD $TUNC\n-print \"<\/td><\/tr>\"\n-\n-if [[ -f $WDIR\/$WNAME.patch ]]; then\n-  print \"<tr><th>Patch of changes:<\/th><td>\"\n-  print \"<a href=\\\"$WNAME.patch\\\">$WNAME.patch<\/a><\/td><\/tr>\"\n-elif [[ -f $CHANGESETPATH ]]; then\n-  print \"<tr><th>Changeset:<\/th><td>\"\n-  print \"<a href=\\\"$EXPORTCHANGESET\\\">$EXPORTCHANGESET<\/a><\/td><\/tr>\"\n-fi\n-\n-if [[ -f $WDIR\/$WNAME.pdf ]]; then\n-\tprint \"<tr><th>Printable review:<\/th><td>\"\n-\tprint \"<a href=\\\"$WNAME.pdf\\\">$WNAME.pdf<\/a><\/td><\/tr>\"\n-fi\n-\n-if [[ -n \"$iflag\" ]]; then\n-\tprint \"<tr><th>Author comments:<\/th><td><div>\"\n-\tcat \/tmp\/$$.include\n-\tprint \"<\/div><\/td><\/tr>\"\n-fi\n-# Add links to referenced CRs, if any\n-# URL has a <title> like:\n-# <title>[#JDK-8024688] b106-lambda: j.u.Map.merge doesn&#39;t work as specified if contains key:null pair - Java Bug System<\/title>\n-# we format this to:\n-# JDK-8024688: b106-lambda: j.u.Map.merge doesn't work as specified if contains key:null pair\n-if [[ -n $CRID ]]; then\n-    for id in $CRID\n-    do\n-        #add \"JDK-\" to raw bug id for openjdk.java.net links.\n-        id=`echo ${id} | sed 's\/^\\([0-9]\\{5,\\}\\)$\/JDK-\\1\/'`\n-\n-        print \"<tr><th>Bug id:<\/th><td>\"\n-        url=\"${BUGURL}${id}\"\n-\n-        if [[ -n $WGET ]]; then\n-            msg=`$WGET --timeout=10 --tries=1 -q $url -O - | grep '<title>' | sed 's\/<title>\\[#\\(.*\\)\\] \\(.*\\) - Java Bug System<\\\/title>\/\\1 : \\2\/' | html_dequote | html_quote`\n-        fi\n-        if [[ -z $msg ]]; then\n-            msg=\"${id}\"\n-        fi\n-\n-        print \"<a href=\\\"$url\\\">$msg<\/a>\"\n-\n-        print \"<\/td><\/tr>\"\n-    done\n-fi\n-print \"<tr><th>Legend:<\/th><td>\"\n-print \"<b>Modified file<\/b><br><font color=red><b>Deleted file<\/b><\/font><br><font color=green><b>New file<\/b><\/font><\/td><\/tr>\"\n-print \"<\/table>\"\n-print \"<\/div>\"\n-\n-#\n-# Second pass through the files: generate the rest of the index file\n-#\n-while read LINE\n-do\n-\tset - $LINE\n-        if [[ $1 == \"Revision:\" ]]; then\n-            FIRST_CREV=`expr $3 + 1`\n-            continue\n-        fi\n-\tP=$1\n-\n-\tif [[ $# == 2 ]]; then\n-\t\tPP=$2\n-\t\toldname=\" <i>(was $PP)<\/i>\"\n-\n-\telse\n-\t\tPP=$P\n-\t\toldname=\"\"\n-\tfi\n-\n-\tDIR=${P%\/*}\n-\tif [[ $DIR == $P ]]; then\n-\t\tDIR=\".\"   # File at root of workspace\n-\tfi\n-\n-\t# Avoid processing the same file twice.\n-\t# It's possible for renamed files to\n-\t# appear twice in the file list\n-\n-\tF=$WDIR\/$P\n-\n-\tprint \"<p><code>\"\n-\n-\t# If there's a diffs file, make diffs links\n-\n-        NODIFFS=\n-\tif [[ -f $F.cdiff.html ]]; then\n-\t\tprint \"<a href=\\\"$P.cdiff.html\\\">Cdiffs<\/a>\"\n-\t\tprint \"<a href=\\\"$P.udiff.html\\\">Udiffs<\/a>\"\n-\n-\t\tif [[ -f $F.wdiff.html && -x $WDIFF ]]; then\n-\t\t\tprint \"<a href=\\\"$P.wdiff.html\\\">Wdiffs<\/a>\"\n-\t\tfi\n-\n-\t\tprint \"<a href=\\\"$P.sdiff.html\\\">Sdiffs<\/a>\"\n-\n-\t\tprint \"<a href=\\\"$P.frames.html\\\">Frames<\/a>\"\n-\telse\n-                NODIFFS=1\n-\t\tprint \" ------ ------ ------\"\n-\n-\t\tif [[ -x $WDIFF ]]; then\n-\t\t\tprint \" ------\"\n-\t\tfi\n-\n-\t\tprint \" ------\"\n-\tfi\n-\n-\t# If there's an old file, make the link\n-\n-        NOOLD=\n-\tif [[ -f $F-.html ]]; then\n-\t\tprint \"<a href=\\\"$P-.html\\\">Old<\/a>\"\n-\telse\n-                NOOLD=1\n-\t\tprint \" ---\"\n-\tfi\n-\n-\t# If there's an new file, make the link\n-\n-        NONEW=\n-\tif [[ -f $F.html ]]; then\n-\t\tprint \"<a href=\\\"$P.html\\\">New<\/a>\"\n-\telse\n-                NONEW=1\n-\t\tprint \" ---\"\n-\tfi\n-\n-\tif [[ -f $F.patch ]]; then\n-\t\tprint \"<a href=\\\"$P.patch\\\">Patch<\/a>\"\n-\telse\n-\t\tprint \" -----\"\n-\tfi\n-\n-\tif [[ -f $WDIR\/raw_files\/new\/$P ]]; then\n-\t\tprint \"<a href=\\\"raw_files\/new\/$P\\\">Raw<\/a>\"\n-\telse\n-\t\tprint \" ---\"\n-\tfi\n-        print \"<\/code>\"\n-        if [[ -n $NODIFFS && -z $oldname ]]; then\n-            if [[ -n $NOOLD ]]; then\n-                print \"<font color=green><b>$P<\/b><\/font>\"\n-            elif [[ -n $NONEW ]]; then\n-                print \"<font color=red><b>$P<\/b><\/font>\"\n-            fi\n-        else\n-\t    print \"<b>$P<\/b> $oldname\"\n-        fi\n-\n-\tprint \"<\/p><blockquote>\\c\"\n-\t# Insert delta comments if any\n-\tcomments=`getcomments html $P $PP`\n-\tif [ -n \"$comments\" ]; then\n-\t    print \"<pre>$comments<\/pre>\"\n-\tfi\n-\n-\t# Add additional comments comment\n-\n-\tprint \"<!-- Add comments to explain changes in $P here -->\"\n-\n-\t# Add count of changes.\n-\n-\tif [[ -f $F.count ]]; then\n-\t    cat $F.count\n-\t    rm $F.count\n-\tfi\n-        print \"<\/blockquote>\"\n-done < $FLIST\n-\n-print\n-print\n-print \"<hr \/>\"\n-print \"<p style=\\\"font-size: small\\\">\"\n-print \"This code review page was prepared using <b>$0<\/b>\"\n-print \"(vers $WEBREV_UPDATED).\"\n-print \"<\/body>\"\n-print \"<\/html>\"\n-\n-if [[ -n $ZIP ]]; then\n-    # Let's generate a zip file for convenience\n-    cd $WDIR\/..\n-    if [ -f webrev.zip ]; then\n-\trm webrev.zip\n-    fi\n-    $ZIP -r webrev webrev >\/dev\/null 2>&1\n-fi\n-\n-exec 1<&-\t\t\t# Close FD 1.\n-exec 1<&3\t\t\t# dup FD 3 to restore stdout.\n-exec 3<&-\t\t\t# close FD 3.\n-\n-print \"Done.\"\n-print \"Output to: $WDIR\"\n","filename":"make\/scripts\/webrev.ksh","additions":0,"deletions":2783,"binary":false,"changes":2783,"status":"deleted"}]}