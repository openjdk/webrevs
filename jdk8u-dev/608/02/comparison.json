{"files":[{"patch":"@@ -78,0 +78,1 @@\n+     * kflag: keep existing file\n@@ -80,1 +81,1 @@\n-    boolean cflag, uflag, xflag, tflag, vflag, flag0, Mflag, iflag, nflag, pflag;\n+    boolean cflag, uflag, xflag, tflag, vflag, flag0, Mflag, iflag, nflag, pflag, kflag;\n@@ -400,0 +401,3 @@\n+                case 'k':\n+                    kflag = true;\n+                    break;\n@@ -434,0 +438,4 @@\n+        if (kflag && !xflag) {\n+            warn(formatMsg(\"warn.option.is.ignored\", \"k\"));\n+        }\n+\n@@ -1061,0 +1069,6 @@\n+            if (f.exists() && kflag) {\n+                if (vflag) {\n+                    output(formatMsg(\"out.kept\", name));\n+                }\n+                return rc;\n+            }\n@@ -1283,0 +1297,7 @@\n+    \/**\n+     * Print a warning message\n+     *\/\n+    void warn(String s) {\n+        err.println(s);\n+    }\n+\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/Main.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+warn.option.is.ignored=\\\n+        Warning: The {0} option is not valid with current usage, will be ignored.\n@@ -65,0 +67,2 @@\n+out.kept=\\\n+        \\ \\ skipped: {0} exists\n@@ -71,1 +75,1 @@\n-Usage: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\\n+Usage: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\\n@@ -75,1 +79,4 @@\n-\\ \\   -x  extract named (or all) files from archive\\n\\\n+\\ \\   -x, Extract named (or all) files from the archive.\\n\\\n+\\ \\       If a file with the same name appears more than once in\\n\\\n+\\ \\       the archive, each copy will be extracted, with later copies\\n\\\n+\\ \\       overwriting (replacing) earlier copies unless 'k' is specified.\\n\\\n@@ -88,0 +95,7 @@\n+Operation modifiers valid only in extract mode:\\n\\\n+\\ \\   -k  Do not overwrite existing files.\\n\\\n+\\ \\       If a Jar file entry with the same name exists in the target\\n\\\n+\\ \\       directory, the existing file will not be overwritten.\\n\\\n+\\ \\       As a result, if a file appears more than once in an\\n\\\n+\\ \\       archive, later copies will not overwrite earlier copies.\\n\\\n+\\ \\       Also note that some file system can be case insensitive.\\n\\\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=Verwendung: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] Dateien...\\nOptionen:\\n    -c  Neues Archiv erstellen\\n    -t  Inhaltsverzeichnis f\\u00FCr Archiv anzeigen\\n    -x  Benannte (oder alle) Dateien aus dem Archiv extrahieren\\n    -u  Vorhandenes Archiv aktualisieren\\n    -v  Ausgabe im Verbose-Modus aus Standard-Ausgabe generieren\\n    -f  Dateinamen f\\u00FCr Archiv angeben\\n    -m  Manifestinformationen aus angegebener Manifestdatei einschlie\\u00DFen\\n    -n  Pack200-Normalisierung nach Erstellung eines neuen Archivs ausf\\u00FChren\\n    -e  Anwendungseinstiegspunkt f\\u00FCr Standalone-Anwendung angeben \\n        in einer ausf\\u00FChrbaren JAR-Datei geb\\u00FCndelt\\n    -0  Nur speichern; keine ZIP-Komprimierung verwenden\\n    -P  Komponenten mit vorangestelltem \"\/\" (absoluter Pfad) und \"..\" (\\u00FCbergeordnetes Verzeichnis) aus Dateinamen beibehalten\\n    -M  Keine Manifest-Datei f\\u00FCr die Eintr\\u00E4ge erstellen\\n    -i  Indexinformationen f\\u00FCr die angegebenen JAR-Dateien erstellen\\n    -C  Zum angegebenen Verzeichnis wechseln und folgende Datei einschlie\\u00DFen\\nFalls eine Datei ein Verzeichnis ist, wird dieses rekursiv verarbeitet.\\nDer Name der Manifestdatei, der Name der Archivdatei und der Name des Einstiegspunkts werden\\nin derselben Reihenfolge wie die Kennzeichen \"m\", \"f\" und \"e\" angegeben.\\n\\nBeispiel 1: Archivieren Sie zwei Klassendateien in ein Archiv mit Namen \"classes.jar\": \\n       jar cvf classes.jar Foo.class Bar.class \\nBeispiel 2: Verwenden Sie die vorhandenen Manifestdatei \"mymanifest\", und archivieren Sie alle\\n           Dateien im Verzeichnis foo\/ directory in \"classes.jar\": \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=Verwendung: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] Dateien...\\nOptionen:\\n    -c  Neues Archiv erstellen\\n    -t  Inhaltsverzeichnis f\\u00FCr Archiv anzeigen\\n    -x  Benannte (oder alle) Dateien aus dem Archiv extrahieren\\n    -u  Vorhandenes Archiv aktualisieren\\n    -v  Ausgabe im Verbose-Modus aus Standard-Ausgabe generieren\\n    -f  Dateinamen f\\u00FCr Archiv angeben\\n    -m  Manifestinformationen aus angegebener Manifestdatei einschlie\\u00DFen\\n    -n  Pack200-Normalisierung nach Erstellung eines neuen Archivs ausf\\u00FChren\\n    -e  Anwendungseinstiegspunkt f\\u00FCr Standalone-Anwendung angeben \\n        in einer ausf\\u00FChrbaren JAR-Datei geb\\u00FCndelt\\n    -0  Nur speichern; keine ZIP-Komprimierung verwenden\\n    -P  Komponenten mit vorangestelltem \"\/\" (absoluter Pfad) und \"..\" (\\u00FCbergeordnetes Verzeichnis) aus Dateinamen beibehalten\\n    -M  Keine Manifest-Datei f\\u00FCr die Eintr\\u00E4ge erstellen\\n    -i  Indexinformationen f\\u00FCr die angegebenen JAR-Dateien erstellen\\n    -C  Zum angegebenen Verzeichnis wechseln und folgende Datei einschlie\\u00DFen\\nFalls eine Datei ein Verzeichnis ist, wird dieses rekursiv verarbeitet.\\nDer Name der Manifestdatei, der Name der Archivdatei und der Name des Einstiegspunkts werden\\nin derselben Reihenfolge wie die Kennzeichen \"m\", \"f\" und \"e\" angegeben.\\n\\nBeispiel 1: Archivieren Sie zwei Klassendateien in ein Archiv mit Namen \"classes.jar\": \\n       jar cvf classes.jar Foo.class Bar.class \\nBeispiel 2: Verwenden Sie die vorhandenen Manifestdatei \"mymanifest\", und archivieren Sie alle\\n           Dateien im Verzeichnis foo\/ directory in \"classes.jar\": \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_de.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=Sintaxis: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\nOpciones:\\n    -c  crear nuevo archivo\\n    -t  crear la tabla de contenido del archivo\\n    -x   extraer el archivo mencionado (o todos) del archivo\\n    -u  actualizar archivo existente\\n    -v  generar salida detallada de los datos de salida est\\u00E1ndar\\n    -f  especificar nombre de archivo de almacenamiento\\n    -m  incluir informaci\\u00F3n de manifiesto del archivo de manifiesto especificado\\n    -e  especificar punto de entrada de la aplicaci\\u00F3n para la aplicaci\\u00F3n aut\\u00F3noma \\n        que se incluye dentro de un archivo jar ejecutable\\n    -0  s\\u00F3lo almacenar; no utilizar compresi\\u00F3n ZIP\\n    -P  conservar componentes iniciales '\/' (ruta absoluta) y \"..\" (directorio principal) en los nombres de archivo\\n    -M  no crear un archivo de manifiesto para las entradas\\n    -i  generar informaci\\u00F3n de \\u00EDndice para los archivos jar especificados\\n    -C  cambiar al directorio especificado e incluir el archivo siguiente\\nSi alg\\u00FAn archivo es un directorio, se procesar\\u00E1 de forma recurrente.\\nEl nombre del archivo de manifiesto, el nombre del archivo de almacenamiento y el nombre del punto de entrada se\\nespecifican en el mismo orden que los indicadores 'm', 'f' y 'e'.\\n\\nEjemplo 1: para archivar archivos de dos clases en un archivo llamado classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nEjemplo 2: utilice un archivo de manifiesto existente 'mymanifest' y archive todos los\\n           archivos del directorio foo\/ en 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=Sintaxis: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\nOpciones:\\n    -c  crear nuevo archivo\\n    -t  crear la tabla de contenido del archivo\\n    -x   extraer el archivo mencionado (o todos) del archivo\\n    -u  actualizar archivo existente\\n    -v  generar salida detallada de los datos de salida est\\u00E1ndar\\n    -f  especificar nombre de archivo de almacenamiento\\n    -m  incluir informaci\\u00F3n de manifiesto del archivo de manifiesto especificado\\n    -e  especificar punto de entrada de la aplicaci\\u00F3n para la aplicaci\\u00F3n aut\\u00F3noma \\n        que se incluye dentro de un archivo jar ejecutable\\n    -0  s\\u00F3lo almacenar; no utilizar compresi\\u00F3n ZIP\\n    -P  conservar componentes iniciales '\/' (ruta absoluta) y \"..\" (directorio principal) en los nombres de archivo\\n    -M  no crear un archivo de manifiesto para las entradas\\n    -i  generar informaci\\u00F3n de \\u00EDndice para los archivos jar especificados\\n    -C  cambiar al directorio especificado e incluir el archivo siguiente\\nSi alg\\u00FAn archivo es un directorio, se procesar\\u00E1 de forma recurrente.\\nEl nombre del archivo de manifiesto, el nombre del archivo de almacenamiento y el nombre del punto de entrada se\\nespecifican en el mismo orden que los indicadores 'm', 'f' y 'e'.\\n\\nEjemplo 1: para archivar archivos de dos clases en un archivo llamado classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nEjemplo 2: utilice un archivo de manifiesto existente 'mymanifest' y archive todos los\\n           archivos del directorio foo\/ en 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_es.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=Syntaxe : jar {ctxui}[vfmn0PMe] [fichier-jar] [fichier-manifeste] [point-entr\\u00E9e] [-C r\\u00E9p] fichiers...\\nOptions :\\n    -c  cr\\u00E9e une archive\\n    -t  affiche la table des mati\\u00E8res de l'archive\\n    -x  extrait les fichiers nomm\\u00E9s (ou tous les fichiers) de l'archive\\n    -u  met \\u00E0 jour l'archive existante\\n    -v  g\\u00E9n\\u00E8re une version d\\u00E9taill\\u00E9e d'une sortie standard\\n    -f  sp\\u00E9cifie le nom du fichier archive\\n    -m  inclut les informations de manifeste \\u00E0 partir du fichier manifeste sp\\u00E9cifi\\u00E9\\n    -n  effectue une normalisation Pack200 apr\\u00E8s la cr\\u00E9ation d'une archive\\n    -e  sp\\u00E9cifie le point d'entr\\u00E9e d'une application en mode autonome \\n        int\\u00E9gr\\u00E9e \\u00E0 un fichier JAR ex\\u00E9cutable\\n    -0  stockage uniquement, pas de compression ZIP\\n    -P  pr\\u00E9serve les signes de d\\u00E9but '\/' (chemin absolu) et \"..\" (r\\u00E9pertoire parent) dans les noms de fichier\\n    -M  ne cr\\u00E9e pas de fichier manifeste pour les entr\\u00E9es\\n    -i  g\\u00E9n\\u00E8re les informations d'index des fichiers JAR sp\\u00E9cifi\\u00E9s\\n    -C  passe au r\\u00E9pertoire sp\\u00E9cifi\\u00E9 et inclut le fichier suivant\\nSi l'un des fichiers est un r\\u00E9pertoire, celui-ci est trait\\u00E9 r\\u00E9cursivement.\\nLes noms du fichier manifeste, du fichier archive et du point d'entr\\u00E9e sont\\nsp\\u00E9cifi\\u00E9s dans le m\\u00EAme ordre que celui des indicateurs m, f et e.\\n\\nExemple 1 : pour archiver deux fichiers de classe dans une archive intitul\\u00E9e classes.jar : \\n       jar cvf classes.jar Foo.class Bar.class \\nExemple 2 : pour utiliser un fichier manifeste existant 'monmanifeste', puis archiver tous les\\n           fichiers du r\\u00E9pertoire foo\/ dans 'classes.jar' : \\n       jar cvfm classes.jar monmanifeste -C foo\/ .\\n\n+usage=Syntaxe : jar {ctxui}[vfmn0PMek] [fichier-jar] [fichier-manifeste] [point-entr\\u00E9e] [-C r\\u00E9p] fichiers...\\nOptions :\\n    -c  cr\\u00E9e une archive\\n    -t  affiche la table des mati\\u00E8res de l'archive\\n    -x  extrait les fichiers nomm\\u00E9s (ou tous les fichiers) de l'archive\\n    -u  met \\u00E0 jour l'archive existante\\n    -v  g\\u00E9n\\u00E8re une version d\\u00E9taill\\u00E9e d'une sortie standard\\n    -f  sp\\u00E9cifie le nom du fichier archive\\n    -m  inclut les informations de manifeste \\u00E0 partir du fichier manifeste sp\\u00E9cifi\\u00E9\\n    -n  effectue une normalisation Pack200 apr\\u00E8s la cr\\u00E9ation d'une archive\\n    -e  sp\\u00E9cifie le point d'entr\\u00E9e d'une application en mode autonome \\n        int\\u00E9gr\\u00E9e \\u00E0 un fichier JAR ex\\u00E9cutable\\n    -0  stockage uniquement, pas de compression ZIP\\n    -P  pr\\u00E9serve les signes de d\\u00E9but '\/' (chemin absolu) et \"..\" (r\\u00E9pertoire parent) dans les noms de fichier\\n    -M  ne cr\\u00E9e pas de fichier manifeste pour les entr\\u00E9es\\n    -i  g\\u00E9n\\u00E8re les informations d'index des fichiers JAR sp\\u00E9cifi\\u00E9s\\n    -C  passe au r\\u00E9pertoire sp\\u00E9cifi\\u00E9 et inclut le fichier suivant\\nSi l'un des fichiers est un r\\u00E9pertoire, celui-ci est trait\\u00E9 r\\u00E9cursivement.\\nLes noms du fichier manifeste, du fichier archive et du point d'entr\\u00E9e sont\\nsp\\u00E9cifi\\u00E9s dans le m\\u00EAme ordre que celui des indicateurs m, f et e.\\n\\nExemple 1 : pour archiver deux fichiers de classe dans une archive intitul\\u00E9e classes.jar : \\n       jar cvf classes.jar Foo.class Bar.class \\nExemple 2 : pour utiliser un fichier manifeste existant 'monmanifeste', puis archiver tous les\\n           fichiers du r\\u00E9pertoire foo\/ dans 'classes.jar' : \\n       jar cvfm classes.jar monmanifeste -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_fr.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=Uso: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\nOpzioni:\\n    -c  crea un nuovo archivio\\n    -t  visualizza l'indice dell'archivio\\n    -x  estrae i file con nome (o tutti i file) dall'archivio\\n    -u  aggiorna l'archivio esistente\\n    -v  genera output commentato dall'output standard\\n    -f  specifica il nome file dell'archivio\\n    -m  include informazioni manifest dal file manifest specificato\\n    -n  esegue normalizzazione Pack200 dopo la creazione di un nuovo archivio\\n    -e  specifica il punto di ingresso per l'applicazione stand-alone \\n        inclusa nel file jar eseguibile\\n    -0  solo memorizzazione; senza compressione ZIP\\n    -P  conserva i componenti iniziali '\/' (percorso assoluto) e \\\\\"..\\\\\" (directory padre) dai nomi file\\n    -M  consente di non creare un file manifest per le voci\\n    -i  genera informazioni sull'indice per i file jar specificati\\n    -C  imposta la directory specificata e include il file seguente\\nSe un file \\u00E8 una directory, verr\\u00E0 elaborato in modo ricorsivo.\\nIl nome del file manifest, del file di archivio e del punto di ingresso devono\\nessere specificati nello stesso ordine dei flag 'm', 'f' ed 'e'.\\n\\nEsempio 1: archiviazione di due file di classe in un archivio con il nome classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nEsempio 2: utilizzo del file manifest esistente 'mymanifest' e archiviazione di tutti i\\n           file della directory foo\/ in 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=Uso: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\nOpzioni:\\n    -c  crea un nuovo archivio\\n    -t  visualizza l'indice dell'archivio\\n    -x  estrae i file con nome (o tutti i file) dall'archivio\\n    -u  aggiorna l'archivio esistente\\n    -v  genera output commentato dall'output standard\\n    -f  specifica il nome file dell'archivio\\n    -m  include informazioni manifest dal file manifest specificato\\n    -n  esegue normalizzazione Pack200 dopo la creazione di un nuovo archivio\\n    -e  specifica il punto di ingresso per l'applicazione stand-alone \\n        inclusa nel file jar eseguibile\\n    -0  solo memorizzazione; senza compressione ZIP\\n    -P  conserva i componenti iniziali '\/' (percorso assoluto) e \\\\\"..\\\\\" (directory padre) dai nomi file\\n    -M  consente di non creare un file manifest per le voci\\n    -i  genera informazioni sull'indice per i file jar specificati\\n    -C  imposta la directory specificata e include il file seguente\\nSe un file \\u00E8 una directory, verr\\u00E0 elaborato in modo ricorsivo.\\nIl nome del file manifest, del file di archivio e del punto di ingresso devono\\nessere specificati nello stesso ordine dei flag 'm', 'f' ed 'e'.\\n\\nEsempio 1: archiviazione di due file di classe in un archivio con il nome classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nEsempio 2: utilizzo del file manifest esistente 'mymanifest' e archiviazione di tutti i\\n           file della directory foo\/ in 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_it.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=\\u4F7F\\u7528\\u65B9\\u6CD5: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3:\\n    -c  \\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3092\\u65B0\\u898F\\u4F5C\\u6210\\u3059\\u308B\\n    -t  \\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u306E\\u5185\\u5BB9\\u3092\\u4E00\\u89A7\\u8868\\u793A\\u3059\\u308B\\n    -x  \\u6307\\u5B9A\\u306E(\\u307E\\u305F\\u306F\\u3059\\u3079\\u3066\\u306E)\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u304B\\u3089\\u62BD\\u51FA\\u3059\\u308B\\n    -u  \\u65E2\\u5B58\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3092\\u66F4\\u65B0\\u3059\\u308B\\n    -v  \\u6A19\\u6E96\\u51FA\\u529B\\u306B\\u8A73\\u7D30\\u306A\\u51FA\\u529B\\u3092\\u751F\\u6210\\u3059\\u308B\\n    -f  \\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u3092\\u6307\\u5B9A\\u3059\\u308B\\n    -m  \\u6307\\u5B9A\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u304B\\u3089\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u60C5\\u5831\\u3092\\u53D6\\u308A\\u8FBC\\u3080\\n    -n  \\u65B0\\u898F\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u306E\\u4F5C\\u6210\\u5F8C\\u306BPack200\\u6B63\\u898F\\u5316\\u3092\\u5B9F\\u884C\\u3059\\u308B\\n    -e  \\u5B9F\\u884C\\u53EF\\u80FDjar\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u30D0\\u30F3\\u30C9\\u30EB\\u3055\\u308C\\u305F\\u30B9\\u30BF\\u30F3\\u30C9\\u30A2\\u30ED\\u30F3\\u30FB\\n        \\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306E\\u30A8\\u30F3\\u30C8\\u30EA\\u30FB\\u30DD\\u30A4\\u30F3\\u30C8\\u3092\\u6307\\u5B9A\\u3059\\u308B\\n    -0  \\u683C\\u7D0D\\u306E\\u307F\\u3002ZIP\\u5727\\u7E2E\\u3092\\u4F7F\\u7528\\u3057\\u306A\\u3044\\n    -P  \\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u306E\\u5148\\u982D\\u306E'\/' (\\u7D76\\u5BFE\\u30D1\\u30B9)\\u304A\\u3088\\u3073\\\\\"..\\\\\" (\\u89AA\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA)\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u3092\\u4FDD\\u6301\\u3059\\u308B\\n    -M  \\u30A8\\u30F3\\u30C8\\u30EA\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u4F5C\\u6210\\u3057\\u306A\\u3044\\n    -i  \\u6307\\u5B9A\\u306Ejar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u7D22\\u5F15\\u60C5\\u5831\\u3092\\u751F\\u6210\\u3059\\u308B\\n    -C  \\u6307\\u5B9A\\u306E\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306B\\u5909\\u66F4\\u3057\\u3001\\u6B21\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u53D6\\u308A\\u8FBC\\u3080\\n\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E\\u5834\\u5408\\u306F\\u518D\\u5E30\\u7684\\u306B\\u51E6\\u7406\\u3055\\u308C\\u307E\\u3059\\u3002\\n\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u3001\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u304A\\u3088\\u3073\\u30A8\\u30F3\\u30C8\\u30EA\\u30FB\\u30DD\\u30A4\\u30F3\\u30C8\\u540D\\u306F\\u3001\\n\\u30D5\\u30E9\\u30B0'm'\\u3001'f'\\u3001'e'\\u306E\\u6307\\u5B9A\\u3068\\u540C\\u3058\\u9806\\u756A\\u3067\\u6307\\u5B9A\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n\\n\\u4F8B1: 2\\u3064\\u306E\\u30AF\\u30E9\\u30B9\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6classes.jar\\u306B\\u4FDD\\u5B58\\u3059\\u308B: \\n       jar cvf classes.jar Foo.class Bar.class \\n\\u4F8B2: \\u65E2\\u5B58\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB'mymanifest'\\u3092\\u4F7F\\u7528\\u3057\\u3001foo\/\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E\\n           \\u5168\\u30D5\\u30A1\\u30A4\\u30EB\\u3092'classes.jar'\\u306B\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3059\\u308B: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=\\u4F7F\\u7528\\u65B9\\u6CD5: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3:\\n    -c  \\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3092\\u65B0\\u898F\\u4F5C\\u6210\\u3059\\u308B\\n    -t  \\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u306E\\u5185\\u5BB9\\u3092\\u4E00\\u89A7\\u8868\\u793A\\u3059\\u308B\\n    -x  \\u6307\\u5B9A\\u306E(\\u307E\\u305F\\u306F\\u3059\\u3079\\u3066\\u306E)\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u304B\\u3089\\u62BD\\u51FA\\u3059\\u308B\\n    -u  \\u65E2\\u5B58\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3092\\u66F4\\u65B0\\u3059\\u308B\\n    -v  \\u6A19\\u6E96\\u51FA\\u529B\\u306B\\u8A73\\u7D30\\u306A\\u51FA\\u529B\\u3092\\u751F\\u6210\\u3059\\u308B\\n    -f  \\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u3092\\u6307\\u5B9A\\u3059\\u308B\\n    -m  \\u6307\\u5B9A\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u304B\\u3089\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u60C5\\u5831\\u3092\\u53D6\\u308A\\u8FBC\\u3080\\n    -n  \\u65B0\\u898F\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u306E\\u4F5C\\u6210\\u5F8C\\u306BPack200\\u6B63\\u898F\\u5316\\u3092\\u5B9F\\u884C\\u3059\\u308B\\n    -e  \\u5B9F\\u884C\\u53EF\\u80FDjar\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u30D0\\u30F3\\u30C9\\u30EB\\u3055\\u308C\\u305F\\u30B9\\u30BF\\u30F3\\u30C9\\u30A2\\u30ED\\u30F3\\u30FB\\n        \\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306E\\u30A8\\u30F3\\u30C8\\u30EA\\u30FB\\u30DD\\u30A4\\u30F3\\u30C8\\u3092\\u6307\\u5B9A\\u3059\\u308B\\n    -0  \\u683C\\u7D0D\\u306E\\u307F\\u3002ZIP\\u5727\\u7E2E\\u3092\\u4F7F\\u7528\\u3057\\u306A\\u3044\\n    -P  \\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u306E\\u5148\\u982D\\u306E'\/' (\\u7D76\\u5BFE\\u30D1\\u30B9)\\u304A\\u3088\\u3073\\\\\"..\\\\\" (\\u89AA\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA)\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u3092\\u4FDD\\u6301\\u3059\\u308B\\n    -M  \\u30A8\\u30F3\\u30C8\\u30EA\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u4F5C\\u6210\\u3057\\u306A\\u3044\\n    -i  \\u6307\\u5B9A\\u306Ejar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u7D22\\u5F15\\u60C5\\u5831\\u3092\\u751F\\u6210\\u3059\\u308B\\n    -C  \\u6307\\u5B9A\\u306E\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306B\\u5909\\u66F4\\u3057\\u3001\\u6B21\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u53D6\\u308A\\u8FBC\\u3080\\n\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E\\u5834\\u5408\\u306F\\u518D\\u5E30\\u7684\\u306B\\u51E6\\u7406\\u3055\\u308C\\u307E\\u3059\\u3002\\n\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u3001\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u304A\\u3088\\u3073\\u30A8\\u30F3\\u30C8\\u30EA\\u30FB\\u30DD\\u30A4\\u30F3\\u30C8\\u540D\\u306F\\u3001\\n\\u30D5\\u30E9\\u30B0'm'\\u3001'f'\\u3001'e'\\u306E\\u6307\\u5B9A\\u3068\\u540C\\u3058\\u9806\\u756A\\u3067\\u6307\\u5B9A\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n\\n\\u4F8B1: 2\\u3064\\u306E\\u30AF\\u30E9\\u30B9\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6classes.jar\\u306B\\u4FDD\\u5B58\\u3059\\u308B: \\n       jar cvf classes.jar Foo.class Bar.class \\n\\u4F8B2: \\u65E2\\u5B58\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB'mymanifest'\\u3092\\u4F7F\\u7528\\u3057\\u3001foo\/\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E\\n           \\u5168\\u30D5\\u30A1\\u30A4\\u30EB\\u3092'classes.jar'\\u306B\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3059\\u308B: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=\\uC0AC\\uC6A9\\uBC95: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\uC635\\uC158:\\n    -c  \\uC0C8 \\uC544\\uCE74\\uC774\\uBE0C\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    -t  \\uC544\\uCE74\\uC774\\uBE0C\\uC5D0 \\uB300\\uD55C \\uBAA9\\uCC28\\uB97C \\uB098\\uC5F4\\uD569\\uB2C8\\uB2E4.\\n    -x  \\uBA85\\uBA85\\uB41C(\\uB610\\uB294 \\uBAA8\\uB4E0) \\uD30C\\uC77C\\uC744 \\uC544\\uCE74\\uC774\\uBE0C\\uC5D0\\uC11C \\uCD94\\uCD9C\\uD569\\uB2C8\\uB2E4.\\n    -u  \\uAE30\\uC874 \\uC544\\uCE74\\uC774\\uBE0C\\uB97C \\uC5C5\\uB370\\uC774\\uD2B8\\uD569\\uB2C8\\uB2E4.\\n    -v  \\uD45C\\uC900 \\uCD9C\\uB825\\uC5D0 \\uC0C1\\uC138 \\uC815\\uBCF4 \\uCD9C\\uB825\\uC744 \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    -f  \\uC544\\uCE74\\uC774\\uBE0C \\uD30C\\uC77C \\uC774\\uB984\\uC744 \\uC9C0\\uC815\\uD569\\uB2C8\\uB2E4.\\n    -m  \\uC9C0\\uC815\\uB41C Manifest \\uD30C\\uC77C\\uC758 Manifest \\uC815\\uBCF4\\uB97C \\uD3EC\\uD568\\uD569\\uB2C8\\uB2E4.\\n    -n  \\uC0C8 \\uC544\\uCE74\\uC774\\uBE0C\\uB97C \\uC0DD\\uC131\\uD55C \\uD6C4 Pack200 \\uC815\\uADDC\\uD654\\uB97C \\uC218\\uD589\\uD569\\uB2C8\\uB2E4.\\n    -e  jar \\uC2E4\\uD589 \\uD30C\\uC77C\\uC5D0 \\uBC88\\uB4E4\\uB85C \\uC81C\\uACF5\\uB41C \\uB3C5\\uB9BD\\uD615 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC758 \\n        \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158 \\uC2DC\\uC791 \\uC9C0\\uC810\\uC744 \\uC9C0\\uC815\\uD569\\uB2C8\\uB2E4.\\n    -0  \\uC800\\uC7A5 \\uC804\\uC6A9: ZIP \\uC555\\uCD95\\uC744 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\\n    -P  \\uD30C\\uC77C \\uC774\\uB984\\uC5D0\\uC11C \\uC120\\uD589 '\/'(\\uC808\\uB300 \\uACBD\\uB85C) \\uBC0F \"..\"(\\uC0C1\\uC704 \\uB514\\uB809\\uD1A0\\uB9AC) \\uAD6C\\uC131\\uC694\\uC18C\\uB97C \\uC720\\uC9C0\\uD569\\uB2C8\\uB2E4.\\n    -M  \\uD56D\\uBAA9\\uC5D0 \\uB300\\uD574 Manifest \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\\n    -i  \\uC9C0\\uC815\\uB41C jar \\uD30C\\uC77C\\uC5D0 \\uB300\\uD55C \\uC778\\uB371\\uC2A4 \\uC815\\uBCF4\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    -C  \\uC9C0\\uC815\\uB41C \\uB514\\uB809\\uD1A0\\uB9AC\\uB85C \\uBCC0\\uACBD\\uD558\\uACE0 \\uB2E4\\uC74C \\uD30C\\uC77C\\uC744 \\uD3EC\\uD568\\uD569\\uB2C8\\uB2E4.\\n\\uD2B9\\uC815 \\uD30C\\uC77C\\uC774 \\uB514\\uB809\\uD1A0\\uB9AC\\uC77C \\uACBD\\uC6B0 \\uC21C\\uD658\\uC801\\uC73C\\uB85C \\uCC98\\uB9AC\\uB429\\uB2C8\\uB2E4.\\nManifest \\uD30C\\uC77C \\uC774\\uB984, \\uC544\\uCE74\\uC774\\uBE0C \\uD30C\\uC77C \\uC774\\uB984 \\uBC0F \\uC2DC\\uC791 \\uC9C0\\uC810 \\uC774\\uB984\\uC740\\n'm', 'f' \\uBC0F 'e' \\uD50C\\uB798\\uADF8\\uC640 \\uB3D9\\uC77C\\uD55C \\uC21C\\uC11C\\uB85C \\uC9C0\\uC815\\uB429\\uB2C8\\uB2E4.\\n\\n\\uC608 1: classes.jar\\uB77C\\uB294 \\uC544\\uCE74\\uC774\\uBE0C\\uC5D0 \\uB450 \\uD074\\uB798\\uC2A4 \\uD30C\\uC77C\\uC744 \\uC544\\uCE74\\uC774\\uBE0C\\uD558\\uB294 \\uBC29\\uBC95: \\n       jar cvf classes.jar Foo.class Bar.class \\n\\uC608 2: \\uAE30\\uC874 Manifest \\uD30C\\uC77C 'mymanifest'\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC\\n           foo\/ \\uB514\\uB809\\uD1A0\\uB9AC\\uC758 \\uBAA8\\uB4E0 \\uD30C\\uC77C\\uC744 'classes.jar'\\uB85C \\uC544\\uCE74\\uC774\\uBE0C\\uD558\\uB294 \\uBC29\\uBC95: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\n+usage=\\uC0AC\\uC6A9\\uBC95: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\uC635\\uC158:\\n    -c  \\uC0C8 \\uC544\\uCE74\\uC774\\uBE0C\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    -t  \\uC544\\uCE74\\uC774\\uBE0C\\uC5D0 \\uB300\\uD55C \\uBAA9\\uCC28\\uB97C \\uB098\\uC5F4\\uD569\\uB2C8\\uB2E4.\\n    -x  \\uBA85\\uBA85\\uB41C(\\uB610\\uB294 \\uBAA8\\uB4E0) \\uD30C\\uC77C\\uC744 \\uC544\\uCE74\\uC774\\uBE0C\\uC5D0\\uC11C \\uCD94\\uCD9C\\uD569\\uB2C8\\uB2E4.\\n    -u  \\uAE30\\uC874 \\uC544\\uCE74\\uC774\\uBE0C\\uB97C \\uC5C5\\uB370\\uC774\\uD2B8\\uD569\\uB2C8\\uB2E4.\\n    -v  \\uD45C\\uC900 \\uCD9C\\uB825\\uC5D0 \\uC0C1\\uC138 \\uC815\\uBCF4 \\uCD9C\\uB825\\uC744 \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    -f  \\uC544\\uCE74\\uC774\\uBE0C \\uD30C\\uC77C \\uC774\\uB984\\uC744 \\uC9C0\\uC815\\uD569\\uB2C8\\uB2E4.\\n    -m  \\uC9C0\\uC815\\uB41C Manifest \\uD30C\\uC77C\\uC758 Manifest \\uC815\\uBCF4\\uB97C \\uD3EC\\uD568\\uD569\\uB2C8\\uB2E4.\\n    -n  \\uC0C8 \\uC544\\uCE74\\uC774\\uBE0C\\uB97C \\uC0DD\\uC131\\uD55C \\uD6C4 Pack200 \\uC815\\uADDC\\uD654\\uB97C \\uC218\\uD589\\uD569\\uB2C8\\uB2E4.\\n    -e  jar \\uC2E4\\uD589 \\uD30C\\uC77C\\uC5D0 \\uBC88\\uB4E4\\uB85C \\uC81C\\uACF5\\uB41C \\uB3C5\\uB9BD\\uD615 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC758 \\n        \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158 \\uC2DC\\uC791 \\uC9C0\\uC810\\uC744 \\uC9C0\\uC815\\uD569\\uB2C8\\uB2E4.\\n    -0  \\uC800\\uC7A5 \\uC804\\uC6A9: ZIP \\uC555\\uCD95\\uC744 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\\n    -P  \\uD30C\\uC77C \\uC774\\uB984\\uC5D0\\uC11C \\uC120\\uD589 '\/'(\\uC808\\uB300 \\uACBD\\uB85C) \\uBC0F \"..\"(\\uC0C1\\uC704 \\uB514\\uB809\\uD1A0\\uB9AC) \\uAD6C\\uC131\\uC694\\uC18C\\uB97C \\uC720\\uC9C0\\uD569\\uB2C8\\uB2E4.\\n    -M  \\uD56D\\uBAA9\\uC5D0 \\uB300\\uD574 Manifest \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\\n    -i  \\uC9C0\\uC815\\uB41C jar \\uD30C\\uC77C\\uC5D0 \\uB300\\uD55C \\uC778\\uB371\\uC2A4 \\uC815\\uBCF4\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    -C  \\uC9C0\\uC815\\uB41C \\uB514\\uB809\\uD1A0\\uB9AC\\uB85C \\uBCC0\\uACBD\\uD558\\uACE0 \\uB2E4\\uC74C \\uD30C\\uC77C\\uC744 \\uD3EC\\uD568\\uD569\\uB2C8\\uB2E4.\\n\\uD2B9\\uC815 \\uD30C\\uC77C\\uC774 \\uB514\\uB809\\uD1A0\\uB9AC\\uC77C \\uACBD\\uC6B0 \\uC21C\\uD658\\uC801\\uC73C\\uB85C \\uCC98\\uB9AC\\uB429\\uB2C8\\uB2E4.\\nManifest \\uD30C\\uC77C \\uC774\\uB984, \\uC544\\uCE74\\uC774\\uBE0C \\uD30C\\uC77C \\uC774\\uB984 \\uBC0F \\uC2DC\\uC791 \\uC9C0\\uC810 \\uC774\\uB984\\uC740\\n'm', 'f' \\uBC0F 'e' \\uD50C\\uB798\\uADF8\\uC640 \\uB3D9\\uC77C\\uD55C \\uC21C\\uC11C\\uB85C \\uC9C0\\uC815\\uB429\\uB2C8\\uB2E4.\\n\\n\\uC608 1: classes.jar\\uB77C\\uB294 \\uC544\\uCE74\\uC774\\uBE0C\\uC5D0 \\uB450 \\uD074\\uB798\\uC2A4 \\uD30C\\uC77C\\uC744 \\uC544\\uCE74\\uC774\\uBE0C\\uD558\\uB294 \\uBC29\\uBC95: \\n       jar cvf classes.jar Foo.class Bar.class \\n\\uC608 2: \\uAE30\\uC874 Manifest \\uD30C\\uC77C 'mymanifest'\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC\\n           foo\/ \\uB514\\uB809\\uD1A0\\uB9AC\\uC758 \\uBAA8\\uB4E0 \\uD30C\\uC77C\\uC744 'classes.jar'\\uB85C \\uC544\\uCE74\\uC774\\uBE0C\\uD558\\uB294 \\uBC29\\uBC95: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_ko.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=Uso: jar {ctxui}[vfmn0Me] [jar-file] [manifest-file] [entry-point] [-C dir] arquivos ...\\nOp\\u00E7\\u00F5es:\\n    -c  cria novo arquivo compactado\\n    -t  lista o sum\\u00E1rio do arquivo compactado\\n    -x  extrai arquivos com o nome (ou todos) do arquivo compactado\\n    -u  atualiza o arquivo compactado existente\\n    -v  gera sa\\u00EDda detalhada na sa\\u00EDda padr\\u00E3o\\n    -f  especifica o nome do arquivo do arquivo compactado\\n    -m  inclui as informa\\u00E7\\u00F5es do manifesto do arquivo de manifesto especificado\\n    -n   executa a normaliza\\u00E7\\u00E3o Pack200 ap\\u00F3s a cria\\u00E7\\u00E3o de um novo arquivo compactado\\n    -e  especifica o ponto de entrada da aplicativo para aplicativo stand-alone \\n        empacotada em um arquivo jar execut\\u00E1vel\\n    -0  armazena somente; n\\u00E3o usa compacta\\u00E7\\u00E3o ZIP\\n    -P  preserva os componentes '\/' inicial (caminho absoluto) e \"..\" (diret\\u00F3rio pai) nos nomes dos arquivos\\n    -M  n\\u00E3o cria um arquivo de manifesto para as entradas\\n    -i  gera informa\\u00E7\\u00F5es de \\u00EDndice para os arquivos especificados\\n    -C  passa para o diret\\u00F3rio especificado e inclui o arquivo a seguir\\nSe um arquivo tamb\\u00E9m for um diret\\u00F3rio, ele ser\\u00E1 processado repetidamente.\\nO nome do arquivo de manifesto, o nome do arquivo compactado e o nome do ponto de entrada s\\u00E3o\\nespecificados na mesma ordem dos flags 'm', 'f' e 'e'.\\n\\nExemplo 1: para arquivar dois arquivos de classe em um arquivo compactado denominado classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nExemplo 2: use um arquivo de manifesto existente 'mymanifest' e arquive todos os\\n           arquivos no diret\\u00F3rio foo\/ na 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=Uso: jar {ctxui}[vfmn0Mek] [jar-file] [manifest-file] [entry-point] [-C dir] arquivos ...\\nOp\\u00E7\\u00F5es:\\n    -c  cria novo arquivo compactado\\n    -t  lista o sum\\u00E1rio do arquivo compactado\\n    -x  extrai arquivos com o nome (ou todos) do arquivo compactado\\n    -u  atualiza o arquivo compactado existente\\n    -v  gera sa\\u00EDda detalhada na sa\\u00EDda padr\\u00E3o\\n    -f  especifica o nome do arquivo do arquivo compactado\\n    -m  inclui as informa\\u00E7\\u00F5es do manifesto do arquivo de manifesto especificado\\n    -n   executa a normaliza\\u00E7\\u00E3o Pack200 ap\\u00F3s a cria\\u00E7\\u00E3o de um novo arquivo compactado\\n    -e  especifica o ponto de entrada da aplicativo para aplicativo stand-alone \\n        empacotada em um arquivo jar execut\\u00E1vel\\n    -0  armazena somente; n\\u00E3o usa compacta\\u00E7\\u00E3o ZIP\\n    -P  preserva os componentes '\/' inicial (caminho absoluto) e \"..\" (diret\\u00F3rio pai) nos nomes dos arquivos\\n    -M  n\\u00E3o cria um arquivo de manifesto para as entradas\\n    -i  gera informa\\u00E7\\u00F5es de \\u00EDndice para os arquivos especificados\\n    -C  passa para o diret\\u00F3rio especificado e inclui o arquivo a seguir\\nSe um arquivo tamb\\u00E9m for um diret\\u00F3rio, ele ser\\u00E1 processado repetidamente.\\nO nome do arquivo de manifesto, o nome do arquivo compactado e o nome do ponto de entrada s\\u00E3o\\nespecificados na mesma ordem dos flags 'm', 'f' e 'e'.\\n\\nExemplo 1: para arquivar dois arquivos de classe em um arquivo compactado denominado classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nExemplo 2: use um arquivo de manifesto existente 'mymanifest' e arquive todos os\\n           arquivos no diret\\u00F3rio foo\/ na 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_pt_BR.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=Syntax: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\nAlternativ:\\n    -c  skapa nytt arkiv\\n    -t  lista inneh\\u00E5llsf\\u00F6rteckning f\\u00F6r arkiv\\n    -x  extrahera namngivna (eller alla) filer fr\\u00E5n arkivet\\n    -u  uppdatera befintligt arkiv\\n    -v  generera utf\\u00F6rliga utdata vid standardutmatning\\n    -f  ange arkivfilens namn\\n    -m  inkludera manifestinformation fr\\u00E5n angivet manifest\\n    -n  utf\\u00F6r Pack200-normalisering efter att ett nytt arkiv har skapats\\n    -e  ange programstartpunkt f\\u00F6r frist\\u00E5ende applikation \\n        som medf\\u00F6ljer i en jar-programfil\\n    -0  lagra endast; anv\\u00E4nd inte zip-komprimering\\n    -P  beh\\u00E5ll komponenter f\\u00F6r inledande '\/' (absolut s\\u00F6kv\\u00E4g) och \"..\" (\\u00F6verordnad  katalog) fr\\u00E5n filnamn\\n    -M  skapa inte n\\u00E5gon manifestfil f\\u00F6r posterna\\n    -i  generera indexinformation f\\u00F6r de angivna jar-filerna\\n    -C  \\u00E4ndra till den angivna katalogen och inkludera f\\u00F6ljande fil\\nOm en fil \\u00E4r en katalog bearbetas den rekursivt.\\nNamnen p\\u00E5 manifestfilen, arkivfilen och startpunkten anges i samma\\nordning som flaggorna 'm', 'f' och 'e'.\\n\\nExempel 1: S\\u00E5 h\\u00E4r arkiverar du tv\\u00E5 klassfiler i ett arkiv med namnet classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nExempel 2: Anv\\u00E4nd en befintlig manifestfil (mymanifest) och arkivera alla\\n           filer fr\\u00E5n katalogen 'foo\/' till 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=Syntax: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\nAlternativ:\\n    -c  skapa nytt arkiv\\n    -t  lista inneh\\u00E5llsf\\u00F6rteckning f\\u00F6r arkiv\\n    -x  extrahera namngivna (eller alla) filer fr\\u00E5n arkivet\\n    -u  uppdatera befintligt arkiv\\n    -v  generera utf\\u00F6rliga utdata vid standardutmatning\\n    -f  ange arkivfilens namn\\n    -m  inkludera manifestinformation fr\\u00E5n angivet manifest\\n    -n  utf\\u00F6r Pack200-normalisering efter att ett nytt arkiv har skapats\\n    -e  ange programstartpunkt f\\u00F6r frist\\u00E5ende applikation \\n        som medf\\u00F6ljer i en jar-programfil\\n    -0  lagra endast; anv\\u00E4nd inte zip-komprimering\\n    -P  beh\\u00E5ll komponenter f\\u00F6r inledande '\/' (absolut s\\u00F6kv\\u00E4g) och \"..\" (\\u00F6verordnad  katalog) fr\\u00E5n filnamn\\n    -M  skapa inte n\\u00E5gon manifestfil f\\u00F6r posterna\\n    -i  generera indexinformation f\\u00F6r de angivna jar-filerna\\n    -C  \\u00E4ndra till den angivna katalogen och inkludera f\\u00F6ljande fil\\nOm en fil \\u00E4r en katalog bearbetas den rekursivt.\\nNamnen p\\u00E5 manifestfilen, arkivfilen och startpunkten anges i samma\\nordning som flaggorna 'm', 'f' och 'e'.\\n\\nExempel 1: S\\u00E5 h\\u00E4r arkiverar du tv\\u00E5 klassfiler i ett arkiv med namnet classes.jar: \\n       jar cvf classes.jar Foo.class Bar.class \\nExempel 2: Anv\\u00E4nd en befintlig manifestfil (mymanifest) och arkivera alla\\n           filer fr\\u00E5n katalogen 'foo\/' till 'classes.jar': \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_sv.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=\\u7528\\u6CD5: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\u9009\\u9879:\\n    -c  \\u521B\\u5EFA\\u65B0\\u6863\\u6848\\n    -t  \\u5217\\u51FA\\u6863\\u6848\\u76EE\\u5F55\\n    -x  \\u4ECE\\u6863\\u6848\\u4E2D\\u63D0\\u53D6\\u6307\\u5B9A\\u7684 (\\u6216\\u6240\\u6709) \\u6587\\u4EF6\\n    -u  \\u66F4\\u65B0\\u73B0\\u6709\\u6863\\u6848\\n    -v  \\u5728\\u6807\\u51C6\\u8F93\\u51FA\\u4E2D\\u751F\\u6210\\u8BE6\\u7EC6\\u8F93\\u51FA\\n    -f  \\u6307\\u5B9A\\u6863\\u6848\\u6587\\u4EF6\\u540D\\n    -m  \\u5305\\u542B\\u6307\\u5B9A\\u6E05\\u5355\\u6587\\u4EF6\\u4E2D\\u7684\\u6E05\\u5355\\u4FE1\\u606F\\n    -n  \\u521B\\u5EFA\\u65B0\\u6863\\u6848\\u540E\\u6267\\u884C Pack200 \\u89C4\\u8303\\u5316\\n    -e  \\u4E3A\\u6346\\u7ED1\\u5230\\u53EF\\u6267\\u884C jar \\u6587\\u4EF6\\u7684\\u72EC\\u7ACB\\u5E94\\u7528\\u7A0B\\u5E8F\\n        \\u6307\\u5B9A\\u5E94\\u7528\\u7A0B\\u5E8F\\u5165\\u53E3\\u70B9\\n    -0  \\u4EC5\\u5B58\\u50A8; \\u4E0D\\u4F7F\\u7528\\u4EFB\\u4F55 ZIP \\u538B\\u7F29\\n    -P  \\u4FDD\\u7559\\u6587\\u4EF6\\u540D\\u4E2D\\u7684\\u524D\\u5BFC '\/' (\\u7EDD\\u5BF9\\u8DEF\\u5F84) \\u548C \"..\" (\\u7236\\u76EE\\u5F55) \\u7EC4\\u4EF6\\n    -M  \\u4E0D\\u521B\\u5EFA\\u6761\\u76EE\\u7684\\u6E05\\u5355\\u6587\\u4EF6\\n    -i  \\u4E3A\\u6307\\u5B9A\\u7684 jar \\u6587\\u4EF6\\u751F\\u6210\\u7D22\\u5F15\\u4FE1\\u606F\\n    -C  \\u66F4\\u6539\\u4E3A\\u6307\\u5B9A\\u7684\\u76EE\\u5F55\\u5E76\\u5305\\u542B\\u4EE5\\u4E0B\\u6587\\u4EF6\\n\\u5982\\u679C\\u4EFB\\u4F55\\u6587\\u4EF6\\u4E3A\\u76EE\\u5F55, \\u5219\\u5BF9\\u5176\\u8FDB\\u884C\\u9012\\u5F52\\u5904\\u7406\\u3002\\n\\u6E05\\u5355\\u6587\\u4EF6\\u540D, \\u6863\\u6848\\u6587\\u4EF6\\u540D\\u548C\\u5165\\u53E3\\u70B9\\u540D\\u79F0\\u7684\\u6307\\u5B9A\\u987A\\u5E8F\\n\\u4E0E 'm', 'f' \\u548C 'e' \\u6807\\u8BB0\\u7684\\u6307\\u5B9A\\u987A\\u5E8F\\u76F8\\u540C\\u3002\\n\\n\\u793A\\u4F8B 1: \\u5C06\\u4E24\\u4E2A\\u7C7B\\u6587\\u4EF6\\u5F52\\u6863\\u5230\\u4E00\\u4E2A\\u540D\\u4E3A classes.jar \\u7684\\u6863\\u6848\\u4E2D: \\n       jar cvf classes.jar Foo.class Bar.class \\n\\u793A\\u4F8B 2: \\u4F7F\\u7528\\u73B0\\u6709\\u7684\\u6E05\\u5355\\u6587\\u4EF6 'mymanifest' \\u5E76\\n           \\u5C06 foo\/ \\u76EE\\u5F55\\u4E2D\\u7684\\u6240\\u6709\\u6587\\u4EF6\\u5F52\\u6863\\u5230 'classes.jar' \\u4E2D: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=\\u7528\\u6CD5: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\n\\u9009\\u9879:\\n    -c  \\u521B\\u5EFA\\u65B0\\u6863\\u6848\\n    -t  \\u5217\\u51FA\\u6863\\u6848\\u76EE\\u5F55\\n    -x  \\u4ECE\\u6863\\u6848\\u4E2D\\u63D0\\u53D6\\u6307\\u5B9A\\u7684 (\\u6216\\u6240\\u6709) \\u6587\\u4EF6\\n    -u  \\u66F4\\u65B0\\u73B0\\u6709\\u6863\\u6848\\n    -v  \\u5728\\u6807\\u51C6\\u8F93\\u51FA\\u4E2D\\u751F\\u6210\\u8BE6\\u7EC6\\u8F93\\u51FA\\n    -f  \\u6307\\u5B9A\\u6863\\u6848\\u6587\\u4EF6\\u540D\\n    -m  \\u5305\\u542B\\u6307\\u5B9A\\u6E05\\u5355\\u6587\\u4EF6\\u4E2D\\u7684\\u6E05\\u5355\\u4FE1\\u606F\\n    -n  \\u521B\\u5EFA\\u65B0\\u6863\\u6848\\u540E\\u6267\\u884C Pack200 \\u89C4\\u8303\\u5316\\n    -e  \\u4E3A\\u6346\\u7ED1\\u5230\\u53EF\\u6267\\u884C jar \\u6587\\u4EF6\\u7684\\u72EC\\u7ACB\\u5E94\\u7528\\u7A0B\\u5E8F\\n        \\u6307\\u5B9A\\u5E94\\u7528\\u7A0B\\u5E8F\\u5165\\u53E3\\u70B9\\n    -0  \\u4EC5\\u5B58\\u50A8; \\u4E0D\\u4F7F\\u7528\\u4EFB\\u4F55 ZIP \\u538B\\u7F29\\n    -P  \\u4FDD\\u7559\\u6587\\u4EF6\\u540D\\u4E2D\\u7684\\u524D\\u5BFC '\/' (\\u7EDD\\u5BF9\\u8DEF\\u5F84) \\u548C \"..\" (\\u7236\\u76EE\\u5F55) \\u7EC4\\u4EF6\\n    -M  \\u4E0D\\u521B\\u5EFA\\u6761\\u76EE\\u7684\\u6E05\\u5355\\u6587\\u4EF6\\n    -i  \\u4E3A\\u6307\\u5B9A\\u7684 jar \\u6587\\u4EF6\\u751F\\u6210\\u7D22\\u5F15\\u4FE1\\u606F\\n    -C  \\u66F4\\u6539\\u4E3A\\u6307\\u5B9A\\u7684\\u76EE\\u5F55\\u5E76\\u5305\\u542B\\u4EE5\\u4E0B\\u6587\\u4EF6\\n\\u5982\\u679C\\u4EFB\\u4F55\\u6587\\u4EF6\\u4E3A\\u76EE\\u5F55, \\u5219\\u5BF9\\u5176\\u8FDB\\u884C\\u9012\\u5F52\\u5904\\u7406\\u3002\\n\\u6E05\\u5355\\u6587\\u4EF6\\u540D, \\u6863\\u6848\\u6587\\u4EF6\\u540D\\u548C\\u5165\\u53E3\\u70B9\\u540D\\u79F0\\u7684\\u6307\\u5B9A\\u987A\\u5E8F\\n\\u4E0E 'm', 'f' \\u548C 'e' \\u6807\\u8BB0\\u7684\\u6307\\u5B9A\\u987A\\u5E8F\\u76F8\\u540C\\u3002\\n\\n\\u793A\\u4F8B 1: \\u5C06\\u4E24\\u4E2A\\u7C7B\\u6587\\u4EF6\\u5F52\\u6863\\u5230\\u4E00\\u4E2A\\u540D\\u4E3A classes.jar \\u7684\\u6863\\u6848\\u4E2D: \\n       jar cvf classes.jar Foo.class Bar.class \\n\\u793A\\u4F8B 2: \\u4F7F\\u7528\\u73B0\\u6709\\u7684\\u6E05\\u5355\\u6587\\u4EF6 'mymanifest' \\u5E76\\n           \\u5C06 foo\/ \\u76EE\\u5F55\\u4E2D\\u7684\\u6240\\u6709\\u6587\\u4EF6\\u5F52\\u6863\\u5230 'classes.jar' \\u4E2D: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-usage=\\u7528\\u6CD5: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] \\u6A94\\u6848 ...\\n\\u9078\\u9805:\\n    -c  \\u5EFA\\u7ACB\\u65B0\\u7684\\u6B78\\u6A94\\n    -t  \\u5217\\u51FA\\u6B78\\u6A94\\u7684\\u76EE\\u9304\\n    -x  \\u5F9E\\u6B78\\u6A94\\u4E2D\\u64F7\\u53D6\\u6307\\u5B9A (\\u6216\\u6240\\u6709) \\u6A94\\u6848\\n    -u  \\u66F4\\u65B0\\u73FE\\u6709\\u6B78\\u6A94\\n    -v  \\u5728\\u6A19\\u6E96\\u8F38\\u51FA\\u4E2D\\u7522\\u751F\\u8A73\\u7D30\\u8F38\\u51FA\\n    -f  \\u6307\\u5B9A\\u6B78\\u6A94\\u6A94\\u6848\\u540D\\u7A31\\n    -m  \\u5305\\u542B\\u6307\\u5B9A\\u8CC7\\u8A0A\\u6E05\\u55AE\\u4E2D\\u7684\\u8CC7\\u8A0A\\u6E05\\u55AE\\u8CC7\\u8A0A\\n    -n  \\u5728\\u5EFA\\u7ACB\\u65B0\\u6B78\\u6A94\\u4E4B\\u5F8C\\u57F7\\u884C Pack200 \\u6B63\\u898F\\u5316\\n    -e  \\u70BA\\u5DF2\\u96A8\\u9644\\u65BC\\u53EF\\u57F7\\u884C jar \\u6A94\\u6848\\u4E2D\\u7684\\u7368\\u7ACB\\u61C9\\u7528\\u7A0B\\u5F0F\\n        \\u6307\\u5B9A\\u61C9\\u7528\\u7A0B\\u5F0F\\u9032\\u5165\\u9EDE\\n    -0  \\u50C5\\u5132\\u5B58; \\u4E0D\\u4F7F\\u7528 ZIP \\u58D3\\u7E2E\\u65B9\\u5F0F\\n    -P  \\u4FDD\\u7559\\u6A94\\u6848\\u540D\\u7A31\\u524D\\u9762\\u7684 '\/' (\\u7D55\\u5C0D\\u8DEF\\u5F91) \\u548C \"..\" (\\u4E0A\\u5C64\\u76EE\\u9304) \\u5143\\u4EF6\\n    -M  \\u4E0D\\u70BA\\u9805\\u76EE\\u5EFA\\u7ACB\\u8CC7\\u8A0A\\u6E05\\u55AE\\u6A94\\u6848\\n    -i  \\u70BA\\u6307\\u5B9A\\u7684 jar \\u6A94\\u6848\\u7522\\u751F\\u7D22\\u5F15\\u8CC7\\u8A0A\\n    -C  \\u8B8A\\u66F4\\u81F3\\u6307\\u5B9A\\u76EE\\u9304\\u4E26\\u5305\\u542B\\u5F8C\\u9762\\u6240\\u5217\\u7684\\u6A94\\u6848\\n\\u5982\\u679C\\u6709\\u4EFB\\u4F55\\u6A94\\u6848\\u662F\\u76EE\\u9304\\uFF0C\\u5247\\u6703\\u5C0D\\u5176\\u9032\\u884C\\u905E\\u8FF4\\u8655\\u7406\\u3002\\n\\u8CC7\\u8A0A\\u6E05\\u55AE\\u6A94\\u6848\\u540D\\u7A31\\u3001\\u6B78\\u6A94\\u6A94\\u6848\\u540D\\u7A31\\u548C\\u9032\\u5165\\u9EDE\\u540D\\u7A31\\n\\u7684\\u6307\\u5B9A\\u9806\\u5E8F\\u8207\\u6307\\u5B9A 'm' \\u65D7\\u6A19\\u3001'f' \\u65D7\\u6A19\\u548C 'e' \\u65D7\\u6A19\\u7684\\u9806\\u5E8F\\u76F8\\u540C\\u3002\\n\\n\\u7BC4\\u4F8B 1: \\u5C07\\u5169\\u500B\\u985E\\u5225\\u6A94\\u6848\\u6B78\\u6A94\\u81F3\\u540D\\u70BA classes.jar \\u7684\\u6B78\\u6A94\\u4E2D: \\n       jar cvf classes.jar Foo.class Bar.class\\n\\u7BC4\\u4F8B 2: \\u4F7F\\u7528\\u73FE\\u6709\\u8CC7\\u8A0A\\u6E05\\u55AE\\u6A94\\u6848 'mymanifest' \\u4E26\\u5C07\\n           foo\/ \\u76EE\\u9304\\u4E2D\\u7684\\u6240\\u6709\\u6A94\\u6848\\u6B78\\u6A94\\u81F3 'classes.jar' \\u4E2D: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage=\\u7528\\u6CD5: jar {ctxui}[vfmn0PMek] [jar-file] [manifest-file] [entry-point] [-C dir] \\u6A94\\u6848 ...\\n\\u9078\\u9805:\\n    -c  \\u5EFA\\u7ACB\\u65B0\\u7684\\u6B78\\u6A94\\n    -t  \\u5217\\u51FA\\u6B78\\u6A94\\u7684\\u76EE\\u9304\\n    -x  \\u5F9E\\u6B78\\u6A94\\u4E2D\\u64F7\\u53D6\\u6307\\u5B9A (\\u6216\\u6240\\u6709) \\u6A94\\u6848\\n    -u  \\u66F4\\u65B0\\u73FE\\u6709\\u6B78\\u6A94\\n    -v  \\u5728\\u6A19\\u6E96\\u8F38\\u51FA\\u4E2D\\u7522\\u751F\\u8A73\\u7D30\\u8F38\\u51FA\\n    -f  \\u6307\\u5B9A\\u6B78\\u6A94\\u6A94\\u6848\\u540D\\u7A31\\n    -m  \\u5305\\u542B\\u6307\\u5B9A\\u8CC7\\u8A0A\\u6E05\\u55AE\\u4E2D\\u7684\\u8CC7\\u8A0A\\u6E05\\u55AE\\u8CC7\\u8A0A\\n    -n  \\u5728\\u5EFA\\u7ACB\\u65B0\\u6B78\\u6A94\\u4E4B\\u5F8C\\u57F7\\u884C Pack200 \\u6B63\\u898F\\u5316\\n    -e  \\u70BA\\u5DF2\\u96A8\\u9644\\u65BC\\u53EF\\u57F7\\u884C jar \\u6A94\\u6848\\u4E2D\\u7684\\u7368\\u7ACB\\u61C9\\u7528\\u7A0B\\u5F0F\\n        \\u6307\\u5B9A\\u61C9\\u7528\\u7A0B\\u5F0F\\u9032\\u5165\\u9EDE\\n    -0  \\u50C5\\u5132\\u5B58; \\u4E0D\\u4F7F\\u7528 ZIP \\u58D3\\u7E2E\\u65B9\\u5F0F\\n    -P  \\u4FDD\\u7559\\u6A94\\u6848\\u540D\\u7A31\\u524D\\u9762\\u7684 '\/' (\\u7D55\\u5C0D\\u8DEF\\u5F91) \\u548C \"..\" (\\u4E0A\\u5C64\\u76EE\\u9304) \\u5143\\u4EF6\\n    -M  \\u4E0D\\u70BA\\u9805\\u76EE\\u5EFA\\u7ACB\\u8CC7\\u8A0A\\u6E05\\u55AE\\u6A94\\u6848\\n    -i  \\u70BA\\u6307\\u5B9A\\u7684 jar \\u6A94\\u6848\\u7522\\u751F\\u7D22\\u5F15\\u8CC7\\u8A0A\\n    -C  \\u8B8A\\u66F4\\u81F3\\u6307\\u5B9A\\u76EE\\u9304\\u4E26\\u5305\\u542B\\u5F8C\\u9762\\u6240\\u5217\\u7684\\u6A94\\u6848\\n\\u5982\\u679C\\u6709\\u4EFB\\u4F55\\u6A94\\u6848\\u662F\\u76EE\\u9304\\uFF0C\\u5247\\u6703\\u5C0D\\u5176\\u9032\\u884C\\u905E\\u8FF4\\u8655\\u7406\\u3002\\n\\u8CC7\\u8A0A\\u6E05\\u55AE\\u6A94\\u6848\\u540D\\u7A31\\u3001\\u6B78\\u6A94\\u6A94\\u6848\\u540D\\u7A31\\u548C\\u9032\\u5165\\u9EDE\\u540D\\u7A31\\n\\u7684\\u6307\\u5B9A\\u9806\\u5E8F\\u8207\\u6307\\u5B9A 'm' \\u65D7\\u6A19\\u3001'f' \\u65D7\\u6A19\\u548C 'e' \\u65D7\\u6A19\\u7684\\u9806\\u5E8F\\u76F8\\u540C\\u3002\\n\\n\\u7BC4\\u4F8B 1: \\u5C07\\u5169\\u500B\\u985E\\u5225\\u6A94\\u6848\\u6B78\\u6A94\\u81F3\\u540D\\u70BA classes.jar \\u7684\\u6B78\\u6A94\\u4E2D: \\n       jar cvf classes.jar Foo.class Bar.class\\n\\u7BC4\\u4F8B 2: \\u4F7F\\u7528\\u73FE\\u6709\\u8CC7\\u8A0A\\u6E05\\u55AE\\u6A94\\u6848 'mymanifest' \\u4E26\\u5C07\\n           foo\/ \\u76EE\\u9304\\u4E2D\\u7684\\u6240\\u6709\\u6A94\\u6848\\u6B78\\u6A94\\u81F3 'classes.jar' \\u4E2D: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/resources\/jar_zh_TW.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,241 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8335912\n+ * @summary test extract jar files overwrite existing files behavior\n+ * @library \/test\/lib \/lib\/testlibrary\n+ * @build jdk.test.lib.Platform\n+ *        jdk.testlibrary.FileUtils\n+ * @run junit\/othervm ExtractFilesTest\n+ *\/\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.api.TestInstance.Lifecycle;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.stream.Stream;\n+\n+import jdk.testlibrary.FileUtils;\n+import sun.tools.jar.Main;\n+\n+@TestInstance(Lifecycle.PER_CLASS)\n+public class ExtractFilesTest {\n+    private final String nl = System.lineSeparator();\n+    private final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+    private final PrintStream out = new PrintStream(baos);\n+\n+    @BeforeAll\n+    public void setupJar() throws IOException {\n+        mkdir(\"test1 test2\");\n+        echo(\"testfile1\", \"test1\/testfile1\");\n+        echo(\"testfile2\", \"test2\/testfile2\");\n+        jar(\"cf test.jar -C test1 . -C test2 .\");\n+        rm(\"test1 test2\");\n+    }\n+\n+    @AfterAll\n+    public void cleanup() {\n+        rm(\"test.jar\");\n+    }\n+\n+    \/**\n+     * Regular clean extract with expected output.\n+     *\/\n+    @Test\n+    public void testExtract() throws IOException {\n+        jar(\"xvf test.jar\");\n+        println();\n+        String output = \"  created: META-INF\/\" + nl +\n+                \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \" inflated: testfile1\" + nl +\n+                \" inflated: testfile2\" + nl;\n+        rm(\"META-INF testfile1 testfile2\");\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+    }\n+\n+    \/**\n+     * Extract should overwrite existing file as default behavior.\n+     *\/\n+    @Test\n+    public void testOverwrite() throws IOException {\n+        touch(\"testfile1\");\n+        jar(\"xvf test.jar\");\n+        println();\n+        String output = \"  created: META-INF\/\" + nl +\n+                \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \" inflated: testfile1\" + nl +\n+                \" inflated: testfile2\" + nl;\n+        Assertions.assertEquals(\"testfile1\", cat(\"testfile1\"));\n+        rm(\"META-INF testfile1 testfile2\");\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+    }\n+\n+    \/**\n+     * Extract with legacy style option `k` should preserve existing files.\n+     *\/\n+    @Test\n+    public void testKeptOldFile() throws IOException {\n+        touch(\"testfile1\");\n+        jar(\"xkvf test.jar\");\n+        println();\n+        String output = \"  created: META-INF\/\" + nl +\n+                \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \"  skipped: testfile1 exists\" + nl +\n+                \" inflated: testfile2\" + nl;\n+        Assertions.assertEquals(\"\", cat(\"testfile1\"));\n+        Assertions.assertEquals(\"testfile2\", cat(\"testfile2\"));\n+        rm(\"META-INF testfile1 testfile2\");\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+    }\n+\n+    \/**\n+     * Extract with gnu style -k should preserve existing files.\n+     *\/\n+    @Test\n+    public void testGnuOptionsKeptOldFile() throws IOException {\n+        touch(\"testfile1 testfile2\");\n+        jar(\"-xkvf test.jar\");\n+        println();\n+        String output = \"  created: META-INF\/\" + nl +\n+                \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \"  skipped: testfile1 exists\" + nl +\n+                \"  skipped: testfile2 exists\" + nl;\n+        Assertions.assertEquals(\"\", cat(\"testfile1\"));\n+        Assertions.assertEquals(\"\", cat(\"testfile2\"));\n+        rm(\"META-INF testfile1 testfile2\");\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+    }\n+\n+    \/**\n+     * Test jar will issue warning when use keep option in non-extraction mode.\n+     *\/\n+    @Test\n+    public void testWarningOnInvalidKeepOption() throws IOException {\n+        String err = jar(\"tkf test.jar\");\n+        println();\n+\n+        String output = \"META-INF\/\" + nl +\n+                \"META-INF\/MANIFEST.MF\" + nl +\n+                \"testfile1\" + nl +\n+                \"testfile2\" + nl;\n+\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+        Assertions.assertEquals(\"Warning: The -k\/k option is not valid with current usage, will be ignored.\" + nl, err);\n+    }\n+\n+    private Stream<Path> mkpath(String... args) {\n+        return Arrays.stream(args).map(d -> Paths.get(\".\", d.split(\"\/\")));\n+    }\n+\n+    private void mkdir(String cmdline) {\n+        System.out.println(\"mkdir -p \" + cmdline);\n+        mkpath(cmdline.split(\" +\")).forEach(p -> {\n+            try {\n+                Files.createDirectories(p);\n+            } catch (IOException x) {\n+                throw new UncheckedIOException(x);\n+            }\n+        });\n+    }\n+\n+    private void touch(String cmdline) {\n+        System.out.println(\"touch \" + cmdline);\n+        mkpath(cmdline.split(\" +\")).forEach(p -> {\n+            try {\n+                Files.createFile(p);\n+            } catch (IOException x) {\n+                throw new UncheckedIOException(x);\n+            }\n+        });\n+    }\n+\n+    private void echo(String text, String path) {\n+        System.out.println(\"echo '\" + text + \"' > \" + path);\n+        try {\n+            Path p = Paths.get(\".\", path.split(\"\/\"));\n+            Files.write(p, text.getBytes());\n+        } catch (IOException x) {\n+            throw new UncheckedIOException(x);\n+        }\n+    }\n+\n+    private String cat(String path) {\n+        System.out.println(\"cat \" + path);\n+        try {\n+            return new String(Files.readAllBytes(Paths.get(path)));\n+        } catch (IOException x) {\n+            throw new UncheckedIOException(x);\n+        }\n+    }\n+\n+    private void rm(String cmdline) {\n+        System.out.println(\"rm -rf \" + cmdline);\n+        mkpath(cmdline.split(\" +\")).forEach(p -> {\n+            try {\n+                if (Files.isDirectory(p)) {\n+                    FileUtils.deleteFileTreeWithRetry(p);\n+                } else {\n+                    FileUtils.deleteFileIfExistsWithRetry(p);\n+                }\n+            } catch (IOException x) {\n+                throw new UncheckedIOException(x);\n+            }\n+        });\n+    }\n+\n+    private String jar(String cmdline) throws IOException {\n+        System.out.println(\"jar \" + cmdline);\n+        baos.reset();\n+\n+        \/\/ the run method catches IOExceptions, we need to expose them\n+        ByteArrayOutputStream baes = new ByteArrayOutputStream();\n+        PrintStream err = new PrintStream(baes);\n+        PrintStream saveErr = System.err;\n+        System.setErr(err);\n+        try {\n+            if (!new Main(out, err, \"jar\").run(cmdline.split(\" +\"))) {\n+                throw new IOException(baes.toString());\n+            }\n+        } finally {\n+            System.setErr(saveErr);\n+        }\n+        return baes.toString();\n+    }\n+\n+    private void println() throws IOException {\n+        System.out.println(new String(baos.toByteArray()));\n+    }\n+}\n","filename":"jdk\/test\/tools\/jar\/ExtractFilesTest.java","additions":241,"deletions":0,"binary":false,"changes":241,"status":"added"},{"patch":"@@ -0,0 +1,219 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8335912\n+ * @summary test extract jar with multpile manifest files\n+ * @library \/test\/lib \/lib\/testlibrary\n+ * @build jdk.test.lib.Platform\n+ *        jdk.testlibrary.FileUtils\n+ * @run junit\/othervm MultipleManifestTest\n+ *\/\n+\n+import java.io.ByteArrayOutputStream;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.api.TestInstance.Lifecycle;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.PrintStream;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.jar.Attributes;\n+import java.util.jar.JarFile;\n+import java.util.jar.Manifest;\n+import java.util.stream.Stream;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+\n+import jdk.testlibrary.FileUtils;\n+import sun.tools.jar.Main;\n+\n+@TestInstance(Lifecycle.PER_CLASS)\n+class MultipleManifestTest {\n+    private final String nl = System.lineSeparator();\n+    private final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+    private final PrintStream jarOut = new PrintStream(baos);\n+\n+    static final Path zip = Paths.get(\"MultipleManifestTest.jar\");\n+    static final String jdkVendor = System.getProperty(\"java.vendor\");\n+    static final String jdkVersion = System.getProperty(\"java.version\");\n+    static final String MANIFEST1 = \"Manifest-Version: 1.0\"\n+            + System.lineSeparator()\n+            + \"Created-By: \" + jdkVersion + \" (\" + jdkVendor + \")\";\n+    static final String MANIFEST2 = \"Manifest-Version: 2.0\"\n+            + System.lineSeparator()\n+            + \"Created-By: \" + jdkVersion + \" (\" + jdkVendor + \")\";\n+    static final String MANIFEST3 = \"Manifest-Version: 3.0\"\n+            + System.lineSeparator()\n+            + \"Created-By: \" + jdkVersion + \" (\" + jdkVendor + \")\";\n+    private static final String META_INF = \"META-INF\/\";\n+\n+    \/**\n+     * Delete the ZIP file produced by this test\n+     *\n+     * @throws IOException if an unexpected IOException occurs\n+     *\/\n+    @AfterAll\n+    public void cleanup() throws IOException {\n+        Files.deleteIfExists(zip);\n+    }\n+\n+    \/**\n+     * Create a JAR with the Manifest as the 1st, 2nd and 4th entry\n+     *\n+     * @throws IOException if an error occurs\n+     *\/\n+    @BeforeAll\n+    public void writeManifestAsFirstSecondAndFourthEntry() throws IOException {\n+        int locPosA, locPosB, cenPos;\n+        System.out.printf(\"%n%n*****Creating Jar with the Manifest as the 1st, 2nd and 4th entry*****%n%n\");\n+        ByteArrayOutputStream out = new ByteArrayOutputStream(1024);\n+        try (ZipOutputStream zos = new ZipOutputStream(out)) {\n+            zos.putNextEntry(new ZipEntry(JarFile.MANIFEST_NAME));\n+            zos.write(MANIFEST1.getBytes(StandardCharsets.UTF_8));\n+            zos.closeEntry();\n+            locPosA = out.size();\n+            zos.putNextEntry(new ZipEntry(META_INF + \"AANIFEST.MF\"));\n+            zos.write(MANIFEST2.getBytes(StandardCharsets.UTF_8));\n+            zos.putNextEntry(new ZipEntry(\"entry1.txt\"));\n+            zos.write(\"entry1\".getBytes(StandardCharsets.UTF_8));\n+            zos.closeEntry();\n+            locPosB = out.size();\n+            zos.putNextEntry(new ZipEntry(META_INF + \"BANIFEST.MF\"));\n+            zos.write(MANIFEST3.getBytes(StandardCharsets.UTF_8));\n+            zos.putNextEntry(new ZipEntry(\"entry2.txt\"));\n+            zos.write(\"hello entry2\".getBytes(StandardCharsets.UTF_8));\n+            zos.flush();\n+            cenPos = out.size();\n+        }\n+        byte[] template = out.toByteArray();\n+        \/\/ ISO_8859_1 to keep the 8-bit value\n+        String s = new String(template, StandardCharsets.ISO_8859_1);\n+        \/\/ change META-INF\/AANIFEST.MF to META-INF\/MANIFEST.MF\n+        int loc = s.indexOf(\"AANIFEST.MF\", locPosA);\n+        int cen = s.indexOf(\"AANIFEST.MF\", cenPos);\n+        template[loc] = template[cen] = (byte) 'M';\n+        \/\/ change META-INF\/BANIFEST.MF to META-INF\/MANIFEST.MF\n+        loc = s.indexOf(\"BANIFEST.MF\", locPosB);\n+        cen = s.indexOf(\"BANIFEST.MF\", cenPos);\n+        template[loc] = template[cen] = (byte) 'M';\n+        Files.write(zip, template);\n+    }\n+\n+    @AfterEach\n+    public void removeExtractedFiles() {\n+        rm(\"META-INF entry1.txt entry2.txt\");\n+    }\n+\n+    \/**\n+     * Extract by default should have the last manifest.\n+     *\/\n+    @Test\n+    public void testOverwrite() throws IOException {\n+        jar(\"xvf \" + zip.toString());\n+        println();\n+        Assertions.assertEquals(\"3.0\", getManifestVersion());\n+        String output = \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \" inflated: entry1.txt\" + nl +\n+                \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \" inflated: entry2.txt\" + nl;\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+    }\n+\n+    \/**\n+     * Extract with k option should have first manifest.\n+     *\/\n+    @Test\n+    public void testKeptOldFile() throws IOException {\n+        jar(\"xkvf \" + zip.toString());\n+        println();\n+        Assertions.assertEquals(\"1.0\", getManifestVersion());\n+        String output = \" inflated: META-INF\/MANIFEST.MF\" + nl +\n+                \"  skipped: META-INF\/MANIFEST.MF exists\" + nl +\n+                \" inflated: entry1.txt\" + nl +\n+                \"  skipped: META-INF\/MANIFEST.MF exists\" + nl +\n+                \" inflated: entry2.txt\" + nl;\n+        Assertions.assertArrayEquals(baos.toByteArray(), output.getBytes());\n+    }\n+\n+    private String getManifestVersion() throws IOException {\n+        try (InputStream is = Files.newInputStream(Paths.get(JarFile.MANIFEST_NAME))) {\n+            Manifest manifest = new Manifest(is);\n+            return manifest.getMainAttributes().getValue(Attributes.Name.MANIFEST_VERSION);\n+        }\n+    }\n+\n+    private void jar(String cmdline) throws IOException {\n+        System.out.println(\"jar \" + cmdline);\n+        baos.reset();\n+\n+        \/\/ the run method catches IOExceptions, we need to expose them\n+        ByteArrayOutputStream baes = new ByteArrayOutputStream();\n+        PrintStream err = new PrintStream(baes);\n+        PrintStream saveErr = System.err;\n+        System.setErr(err);\n+        try {\n+            if (!new Main(jarOut, err, \"jar\").run(cmdline.split(\" +\"))) {\n+                throw new IOException(baes.toString());\n+            }\n+        } finally {\n+            System.setErr(saveErr);\n+        }\n+    }\n+\n+    private void println() throws IOException {\n+        System.out.println(new String(baos.toByteArray()));\n+    }\n+\n+    private Stream<Path> mkpath(String... args) {\n+        return Arrays.stream(args).map(d -> Paths.get(\".\", d.split(\"\/\")));\n+    }\n+\n+    private void rm(String cmdline) {\n+        System.out.println(\"rm -rf \" + cmdline);\n+        mkpath(cmdline.split(\" +\")).forEach(p -> {\n+            try {\n+                if (Files.isDirectory(p)) {\n+                    FileUtils.deleteFileTreeWithRetry(p);\n+                } else {\n+                    FileUtils.deleteFileIfExistsWithRetry(p);\n+                }\n+            } catch (IOException x) {\n+                throw new UncheckedIOException(x);\n+            }\n+        });\n+    }\n+}\n\\ No newline at end of file\n","filename":"jdk\/test\/tools\/jar\/MultipleManifestTest.java","additions":219,"deletions":0,"binary":false,"changes":219,"status":"added"}]}