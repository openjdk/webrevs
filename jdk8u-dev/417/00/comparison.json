{"files":[{"patch":"@@ -1,100 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-to_stderr() {\n-    echo \"$@\" >&2\n-}\n-\n-error() {\n-    to_stderr \"ERROR: $1\"\n-    exit ${2:-126}\n-}\n-\n-warning() {\n-    to_stderr \"WARNING: $1\"\n-}\n-\n-version_field() {\n-  # rev is typically omitted for minor and major releases\n-  field=`echo ${1}.0 | cut -f ${2} -d .`\n-  if expr 1 + $field >\/dev\/null 2> \/dev\/null; then\n-    echo $field\n-  else\n-    echo -1\n-  fi\n-}\n-\n-# Version check\n-\n-# required\n-reqdmajor=1\n-reqdminor=4\n-reqdrev=0\n-\n-# requested\n-rqstmajor=2\n-rqstminor=6\n-rqstrev=3\n-\n-\n-# installed\n-hgwhere=\"`command -v hg`\"\n-if [ \"x$hgwhere\" = \"x\" ]; then\n-  error \"Could not locate Mercurial command\"\n-fi\n-\n-hgversion=\"`LANGUAGE=en hg --version 2> \/dev\/null | sed -n -e 's@^Mercurial Distributed SCM (version \\([^+]*\\).*)\\$@\\1@p'`\"\n-if [ \"x${hgversion}\" = \"x\" ] ; then\n-  error \"Could not determine Mercurial version of $hgwhere\"\n-fi\n-\n-hgmajor=\"`version_field $hgversion 1`\"\n-hgminor=\"`version_field $hgversion 2`\"\n-hgrev=\"`version_field $hgversion 3`\"\n-\n-if [ $hgmajor -eq -1 -o $hgminor -eq -1 -o $hgrev -eq -1 ] ; then\n-  error \"Could not determine Mercurial version of $hgwhere from \\\"$hgversion\\\"\"\n-fi\n-\n-\n-# Require\n-if [ $hgmajor -lt $reqdmajor -o \\( $hgmajor -eq $reqdmajor -a $hgminor -lt $reqdminor \\) -o \\( $hgmajor -eq $reqdmajor -a $hgminor -eq $reqdminor -a $hgrev -lt $reqdrev \\) ] ; then\n-  error \"Mercurial version $reqdmajor.$reqdminor.$reqdrev or later is required. $hgwhere is version $hgversion\"\n-fi\n-\n-\n-# Request\n-if [ $hgmajor -lt $rqstmajor -o \\( $hgmajor -eq $rqstmajor -a $hgminor -lt $rqstminor \\) -o \\( $hgmajor -eq $rqstmajor -a $hgminor -eq $rqstminor -a $hgrev -lt $rqstrev \\) ] ; then\n-  warning \"Mercurial version $rqstmajor.$rqstminor.$rqstrev or later is recommended. $hgwhere is version $hgversion\"\n-fi\n-\n-\n-# Get clones of all absent nested repositories (harmless if already exist)\n-sh .\/common\/bin\/hgforest.sh clone \"$@\" || exit $?\n-\n-# Update all existing repositories to the latest sources\n-sh .\/common\/bin\/hgforest.sh pull -u\n","filename":"get_source.sh","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -1,144 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Shell script for a fast parallel forest command\n-command=\"$1\"\n-pull_extra_base=\"$2\"\n-\n-tmp=\/tmp\/forest.$$\n-rm -f -r ${tmp}\n-mkdir -p ${tmp}\n-\n-# Remove tmp area on A. B. Normal termination\n-trap 'rm -f -r ${tmp}' KILL\n-trap 'rm -f -r ${tmp}' EXIT\n-\n-# Only look in specific locations for possible forests (avoids long searches)\n-pull_default=\"\"\n-repos=\"\"\n-repos_extra=\"\"\n-if [ \"${command}\" = \"clone\" -o \"${command}\" = \"fclone\" ] ; then\n-  subrepos=\"corba jaxp jaxws langtools jdk hotspot nashorn\"\n-  if [ -f .hg\/hgrc ] ; then\n-    pull_default=`hg paths default`\n-    if [ \"${pull_default}\" = \"\" ] ; then\n-      echo \"ERROR: Need initial clone with 'hg paths default' defined\"\n-      exit 1\n-    fi\n-  fi\n-  if [ \"${pull_default}\" = \"\" ] ; then\n-    echo \"ERROR: Need initial repository to use this script\"\n-    exit 1\n-  fi\n-  for i in ${subrepos} ; do\n-    if [ ! -f ${i}\/.hg\/hgrc ] ; then\n-      repos=\"${repos} ${i}\"\n-    fi\n-  done\n-  if [ \"${pull_extra_base}\" != \"\" ] ; then\n-    subrepos_extra=\"jdk\/src\/closed jdk\/make\/closed jdk\/test\/closed hotspot\/make\/closed hotspot\/src\/closed hotspot\/test\/closed deploy install sponsors pubs\"\n-    pull_default_tail=`echo ${pull_default} | sed -e 's@^.*:\/\/[^\/]*\/\\(.*\\)@\\1@'`\n-    pull_extra=\"${pull_extra_base}\/${pull_default_tail}\"\n-    for i in ${subrepos_extra} ; do\n-      if [ ! -f ${i}\/.hg\/hgrc ] ; then\n-        repos_extra=\"${repos_extra} ${i}\"\n-      fi\n-    done\n-  fi\n-  at_a_time=2\n-  # Any repos to deal with?\n-  if [ \"${repos}\" = \"\" -a \"${repos_extra}\" = \"\" ] ; then\n-    echo \"No repositories to clone.\"\n-    exit\n-  fi\n-else\n-  hgdirs=`ls -d .\/.hg .\/*\/.hg .\/*\/*\/.hg .\/*\/*\/*\/.hg .\/*\/*\/*\/*\/.hg 2>\/dev\/null`\n-  # Derive repository names from the .hg directory locations\n-  for i in ${hgdirs} ; do\n-    repos=\"${repos} `echo ${i} | sed -e 's@\/.hg$@@'`\"\n-  done\n-  at_a_time=8\n-  # Any repos to deal with?\n-  if [ \"${repos}\" = \"\" ] ; then\n-    echo \"No repositories to process.\"\n-    exit\n-  fi\n-fi\n-\n-# Echo out what repositories we will clone\n-echo \"# Repos: ${repos} ${repos_extra}\"\n-\n-# Run the supplied command on all repos in parallel, save output until end\n-n=0\n-for i in ${repos} ; do\n-  echo \"Starting on ${i}\"\n-  n=`expr ${n} '+' 1`\n-  (\n-    (\n-      if [ \"${command}\" = \"clone\" -o \"${command}\" = \"fclone\" ] ; then\n-        pull_newrepo=\"`echo ${pull_default}\/${i} | sed -e 's@\\([^:]\/\\)\/\/*@\\1@g'`\"\n-        cline=\"hg clone ${pull_newrepo} ${i}\"\n-        echo \"# ${cline}\"\n-        ( eval \"${cline}\" )\n-      else\n-        cline=\"hg $*\"\n-        echo \"# cd ${i} && ${cline}\"\n-        ( cd ${i} && eval \"${cline}\" )\n-      fi\n-      echo \"# exit code $?\"\n-    ) > ${tmp}\/repo.${n} 2>&1 ; cat ${tmp}\/repo.${n} ) &\n-  if [ `expr ${n} '%' ${at_a_time}` -eq 0 ] ; then\n-    sleep 5\n-  fi\n-done\n-# Wait for all hg commands to complete\n-wait\n-\n-if [ \"${repos_extra}\" != \"\" ] ; then\n-  for i in ${repos_extra} ; do\n-    echo \"Starting on ${i}\"\n-    n=`expr ${n} '+' 1`\n-    (\n-      (\n-          pull_newextrarepo=\"`echo ${pull_extra}\/${i} | sed -e 's@\\([^:]\/\\)\/\/*@\\1@g'`\"\n-          cline=\"hg clone ${pull_newextrarepo} ${i}\"\n-          echo \"# ${cline}\"\n-          ( eval \"${cline}\" )\n-        echo \"# exit code $?\"\n-      ) > ${tmp}\/repo.${n} 2>&1 ; cat ${tmp}\/repo.${n} ) &\n-    if [ `expr ${n} '%' ${at_a_time}` -eq 0 ] ; then\n-      sleep 5\n-    fi\n-  done\n-  # Wait for all hg commands to complete\n-  wait\n-fi\n-\n-# Cleanup\n-rm -f -r ${tmp}\n-\n-# Terminate with exit 0 all the time (hard to know when to say \"failed\")\n-exit 0\n-\n","filename":"make\/scripts\/hgforest.sh","additions":0,"deletions":144,"binary":false,"changes":144,"status":"deleted"}]}