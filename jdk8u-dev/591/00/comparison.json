{"files":[{"patch":"@@ -24,2 +24,0 @@\n-import com.sun.management.HotSpotDiagnosticMXBean;\n-import com.sun.management.VMOption;\n@@ -27,2 +25,0 @@\n-import sun.management.ManagementFactoryHelper;\n-\n@@ -44,0 +40,1 @@\n+    private static int COMP_LEVEL_SIMPLE = 1;\n@@ -240,1 +237,1 @@\n-        if (backgroundCompilationEnabled()) {\n+        if (WHITE_BOX.getBooleanVMFlag(\"BackgroundCompilation\")) {\n@@ -260,1 +257,5 @@\n-        WHITE_BOX.enqueueMethodForCompilation(m3, COMP_LEVEL_FULL_OPTIMIZATION);\n+        if(!WHITE_BOX.enqueueMethodForCompilation(m3, COMP_LEVEL_FULL_OPTIMIZATION)) {\n+            \/\/ C2 compiler not available, compile with C1\n+            WHITE_BOX.enqueueMethodForCompilation(m3, COMP_LEVEL_SIMPLE);\n+        }\n+\n@@ -282,15 +283,0 @@\n-\n-    \/**\n-     * Checks if background compilation (-XX:+BackgroundCompilation) is enabled.\n-     * @return True if background compilation is enabled, false otherwise\n-     *\/\n-    private static boolean backgroundCompilationEnabled() {\n-      HotSpotDiagnosticMXBean diagnostic = ManagementFactoryHelper.getDiagnosticMXBean();\n-      VMOption backgroundCompilation;\n-      try {\n-          backgroundCompilation = diagnostic.getVMOption(\"BackgroundCompilation\");\n-      } catch (IllegalArgumentException e) {\n-          return false;\n-      }\n-      return Boolean.valueOf(backgroundCompilation.getValue());\n-    }\n","filename":"hotspot\/test\/compiler\/8009761\/Test8009761.java","additions":7,"deletions":21,"binary":false,"changes":28,"status":"modified"}]}