{"files":[{"patch":"@@ -69,1 +69,1 @@\n-CFLAGS_WARN = $(WARNINGS_ARE_ERRORS)\n+CFLAGS_WARN = $(WARNINGS_ARE_ERRORS) -Wno-register\n","filename":"hotspot\/make\/linux\/makefiles\/adlc.make","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2555,7 +2555,12 @@\n-          assert(o != NULL, \"must be constant\");\n-          ciInstanceKlass* k = o->as_instance()->java_lang_Class_klass()->as_instance_klass();\n-          ciField* field = k->get_field_by_offset(_offset, true);\n-          assert(field != NULL, \"missing field\");\n-          BasicType basic_elem_type = field->layout_type();\n-          _is_ptr_to_narrowoop = UseCompressedOops && (basic_elem_type == T_OBJECT ||\n-                                                       basic_elem_type == T_ARRAY);\n+          ciField* field = NULL;\n+          if (o != NULL) {\n+            ciInstanceKlass* k = o->as_instance()->java_lang_Class_klass()->as_instance_klass();\n+            field = k->get_field_by_offset(_offset, true);\n+          }\n+          if (field != NULL) {\n+            BasicType basic_elem_type = field->layout_type();\n+            _is_ptr_to_narrowoop = UseCompressedOops && is_reference_type(basic_elem_type);\n+          } else {\n+            \/\/ unsafe access\n+            _is_ptr_to_narrowoop = UseCompressedOops;\n+          }\n","filename":"hotspot\/src\/share\/vm\/opto\/type.cpp","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"}]}