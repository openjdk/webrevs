{"files":[{"patch":"@@ -2555,7 +2555,13 @@\n-          assert(o != NULL, \"must be constant\");\n-          ciInstanceKlass* k = o->as_instance()->java_lang_Class_klass()->as_instance_klass();\n-          ciField* field = k->get_field_by_offset(_offset, true);\n-          assert(field != NULL, \"missing field\");\n-          BasicType basic_elem_type = field->layout_type();\n-          _is_ptr_to_narrowoop = UseCompressedOops && (basic_elem_type == T_OBJECT ||\n-                                                       basic_elem_type == T_ARRAY);\n+          ciField* field = NULL;\n+          if (const_oop() != NULL) {\n+            ciInstanceKlass* k = const_oop()->as_instance()->java_lang_Class_klass()->as_instance_klass();\n+            field = k->get_field_by_offset(_offset, true);\n+          }\n+          if (field != NULL) {\n+            BasicType basic_elem_type = field->layout_type();\n+            _is_ptr_to_narrowoop = UseCompressedOops && (basic_elem_type == T_OBJECT ||\n+                                                         basic_elem_type == T_ARRAY);\n+          } else {\n+            \/\/ unsafe access\n+            _is_ptr_to_narrowoop = UseCompressedOops;\n+          }\n","filename":"hotspot\/src\/share\/vm\/opto\/type.cpp","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8255466\n+ * @summary unsafe access to static field causes crash\n+ *\n+ * @run main\/bootclasspath\/othervm -Xcomp -XX:CompileCommand=compileonly,TestUnsafeStaticFieldAccess::* TestUnsafeStaticFieldAccess\n+ *\n+ *\/\n+\n+import sun.misc.Unsafe;\n+import java.lang.reflect.Field;\n+\n+public class TestUnsafeStaticFieldAccess {\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n+    private static final long offset;\n+    private static volatile Class<?> clazz;\n+\n+    private static int field;\n+\n+    static {\n+        long o = 0;\n+        for (Field f : TestUnsafeStaticFieldAccess.class.getDeclaredFields()) {\n+            if (f.getName().equals(\"field\")) {\n+                o = UNSAFE.staticFieldOffset(f);\n+                break;\n+            }\n+        }\n+        offset = o;\n+        clazz = TestUnsafeStaticFieldAccess.class;\n+    }\n+\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 12000; i++) {\n+            UNSAFE.getInt(clazz, offset);\n+        }\n+    }\n+}\n","filename":"hotspot\/test\/compiler\/unsafe\/TestUnsafeStaticFieldAccess.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}