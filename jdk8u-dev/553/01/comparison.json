{"files":[{"patch":"@@ -168,0 +168,7 @@\n+\/\/ Note that GET_FIELD and SET_FIELD cast the object field's C type to\n+\/\/ volatile at the point of access. That is needed in order to ensure\n+\/\/ that the C compiler does not reorder the object field access wrt to\n+\/\/ preceding and succeeding volatile accesses to the thread flag field\n+\/\/ (made by UnsafeWrapper) which safeguard the field access. See\n+\/\/ JDK-8186787 for details.\n+\n@@ -170,1 +177,1 @@\n-  type_name v = *(type_name*)index_oop_from_field_offset_long(p, offset)\n+  type_name v = *(volatile type_name*)index_oop_from_field_offset_long(p, offset)\n@@ -174,1 +181,1 @@\n-  *(type_name*)index_oop_from_field_offset_long(p, offset) = truncate_##type_name(x)\n+  *(volatile type_name*)index_oop_from_field_offset_long(p, offset) = truncate_##type_name(x)\n","filename":"hotspot\/src\/share\/vm\/prims\/unsafe.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}