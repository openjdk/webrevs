{"files":[{"patch":"@@ -2205,0 +2205,1 @@\n+                LP64_ONLY( off->get_long() == (int) (off->get_long()) && ) \/\/ immL32\n","filename":"hotspot\/src\/share\/vm\/opto\/matcher.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8202952\n+ * @summary C2: Unexpected dead nodes after matching\n+ *\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:CompileOnly=::test\n+ *      compiler.c2.TestMatcherLargeOffset\n+ *\/\n+package compiler.c2;\n+\n+public class TestMatcherLargeOffset {\n+\n+    public static int s = 0;\n+    public static final int N = 400;\n+    public static int a[] = new int[N];\n+\n+    public static void test() {\n+        int x = -57785;\n+\n+        for (int i = 0; i < N; i++) {\n+            a[(x >>> 1) % N] &= (--x);\n+\n+            for (int j = 4; j > 1; j -= 3) {\n+                switch ((j % 9) + 119) {\n+                    case 122:\n+                        s += i;\n+                        break;\n+                    case 123:\n+                        s += i;\n+                        break;\n+                    default:\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 16000; i++) {\n+            test();\n+        }\n+\n+        System.out.println(\"s = \" + s);\n+   }\n+}\n","filename":"hotspot\/test\/compiler\/c2\/TestMatcherLargeOffset.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}