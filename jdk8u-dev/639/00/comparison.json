{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-    public synchronized boolean run(String args[]) {\n+    public synchronized boolean run(String[] args) {\n@@ -296,5 +296,3 @@\n-                    InputStream in = new FileInputStream(FileDescriptor.in);\n-                    try {\n-                        list(new BufferedInputStream(in), files);\n-                    } finally {\n-                        in.close();\n+                    try (InputStream in = new FileInputStream(FileDescriptor.in);\n+                         BufferedInputStream bis = new BufferedInputStream(in)) {\n+                        list(bis, files);\n@@ -305,1 +303,1 @@\n-                if (fname != null && files != null) {\n+                if (fname != null) {\n@@ -308,7 +306,3 @@\n-                    InputStream in = (fname == null)\n-                        ? new FileInputStream(FileDescriptor.in)\n-                        : new FileInputStream(fname);\n-                    try {\n-                        extract(new BufferedInputStream(in), files);\n-                    } finally {\n-                        in.close();\n+                    try (InputStream in = new FileInputStream(FileDescriptor.in);\n+                         BufferedInputStream bis = new BufferedInputStream(in)) {\n+                        extract(bis, files);\n@@ -338,1 +332,1 @@\n-    boolean parseArgs(String args[]) {\n+    boolean parseArgs(String[] args) {\n@@ -589,4 +583,0 @@\n-        ZipInputStream zis = new ZipInputStream(in);\n-        ZipOutputStream zos = new JarOutputStream(out);\n-        ZipEntry e = null;\n-        boolean foundManifest = false;\n@@ -594,0 +584,2 @@\n+        try (ZipInputStream zis = new ZipInputStream(in);\n+            ZipOutputStream zos = new JarOutputStream(out)) {\n@@ -595,3 +587,5 @@\n-        if (jarIndex != null) {\n-            addIndex(jarIndex, zos);\n-        }\n+            if (jarIndex != null) {\n+                addIndex(jarIndex, zos);\n+            }\n+            ZipEntry e = null;\n+            boolean foundManifest = false;\n@@ -599,3 +593,3 @@\n-        \/\/ put the old entries first, replace if necessary\n-        while ((e = zis.getNextEntry()) != null) {\n-            String name = e.getName();\n+            \/\/ put the old entries first, replace if necessary\n+            while ((e = zis.getNextEntry()) != null) {\n+                String name = e.getName();\n@@ -603,1 +597,1 @@\n-            boolean isManifestEntry = equalsIgnoreCase(name, MANIFEST_NAME);\n+                boolean isManifestEntry = equalsIgnoreCase(name, MANIFEST_NAME);\n@@ -605,4 +599,4 @@\n-            if ((jarIndex != null && equalsIgnoreCase(name, INDEX_NAME))\n-                || (Mflag && isManifestEntry)) {\n-                continue;\n-            } else if (isManifestEntry && ((newManifest != null) ||\n+                if ((jarIndex != null && equalsIgnoreCase(name, INDEX_NAME))\n+                        || (Mflag && isManifestEntry)) {\n+                    continue;\n+                } else if (isManifestEntry && ((newManifest != null) ||\n@@ -610,10 +604,10 @@\n-                foundManifest = true;\n-                if (newManifest != null) {\n-                    \/\/ Don't read from the newManifest InputStream, as we\n-                    \/\/ might need it below, and we can't re-read the same data\n-                    \/\/ twice.\n-                    FileInputStream fis = new FileInputStream(mname);\n-                    boolean ambiguous = isAmbiguousMainClass(new Manifest(fis));\n-                    fis.close();\n-                    if (ambiguous) {\n-                        return false;\n+                    foundManifest = true;\n+                    if (newManifest != null) {\n+                        \/\/ Don't read from the newManifest InputStream, as we\n+                        \/\/ might need it below, and we can't re-read the same data\n+                        \/\/ twice.\n+                        try (FileInputStream fis = new FileInputStream(mname)) {\n+                            if (isAmbiguousMainClass(new Manifest(fis))) {\n+                                return false;\n+                            }\n+                        }\n@@ -621,1 +615,0 @@\n-                }\n@@ -623,19 +616,27 @@\n-                \/\/ Update the manifest.\n-                Manifest old = new Manifest(zis);\n-                if (newManifest != null) {\n-                    old.read(newManifest);\n-                }\n-                if (!updateManifest(old, zos)) {\n-                    return false;\n-                }\n-            } else {\n-                if (!entryMap.containsKey(name)) { \/\/ copy the old stuff\n-                    \/\/ do our own compression\n-                    ZipEntry e2 = new ZipEntry(name);\n-                    e2.setMethod(e.getMethod());\n-                    e2.setTime(e.getTime());\n-                    e2.setComment(e.getComment());\n-                    e2.setExtra(e.getExtra());\n-                    if (e.getMethod() == ZipEntry.STORED) {\n-                        e2.setSize(e.getSize());\n-                        e2.setCrc(e.getCrc());\n+                    \/\/ Update the manifest.\n+                    Manifest old = new Manifest(zis);\n+                    if (newManifest != null) {\n+                        old.read(newManifest);\n+                    }\n+                    if (!updateManifest(old, zos)) {\n+                        return false;\n+                    }\n+                } else {\n+                    if (!entryMap.containsKey(name)) { \/\/ copy the old stuff\n+                        \/\/ do our own compression\n+                        ZipEntry e2 = new ZipEntry(name);\n+                        e2.setMethod(e.getMethod());\n+                        e2.setTime(e.getTime());\n+                        e2.setComment(e.getComment());\n+                        e2.setExtra(e.getExtra());\n+                        if (e.getMethod() == ZipEntry.STORED) {\n+                            e2.setSize(e.getSize());\n+                            e2.setCrc(e.getCrc());\n+                        }\n+                        zos.putNextEntry(e2);\n+                        copy(zis, zos);\n+                    } else { \/\/ replace with the new files\n+                        File f = entryMap.get(name);\n+                        addFile(zos, f);\n+                        entryMap.remove(name);\n+                        entries.remove(f);\n@@ -643,7 +644,0 @@\n-                    zos.putNextEntry(e2);\n-                    copy(zis, zos);\n-                } else { \/\/ replace with the new files\n-                    File f = entryMap.get(name);\n-                    addFile(zos, f);\n-                    entryMap.remove(name);\n-                    entries.remove(f);\n@@ -652,1 +646,0 @@\n-        }\n@@ -654,10 +647,15 @@\n-        \/\/ add the remaining new files\n-        for (File f: entries) {\n-            addFile(zos, f);\n-        }\n-        if (!foundManifest) {\n-            if (newManifest != null) {\n-                Manifest m = new Manifest(newManifest);\n-                updateOk = !isAmbiguousMainClass(m);\n-                if (updateOk) {\n-                    if (!updateManifest(m, zos)) {\n+            \/\/ add the remaining new files\n+            for (File f : entries) {\n+                addFile(zos, f);\n+            }\n+            if (!foundManifest) {\n+                if (newManifest != null) {\n+                    Manifest m = new Manifest(newManifest);\n+                    updateOk = !isAmbiguousMainClass(m);\n+                    if (updateOk) {\n+                        if (!updateManifest(m, zos)) {\n+                            updateOk = false;\n+                        }\n+                    }\n+                } else if (ename != null) {\n+                    if (!updateManifest(new Manifest(), zos)) {\n@@ -667,4 +665,0 @@\n-            } else if (ename != null) {\n-                if (!updateManifest(new Manifest(), zos)) {\n-                    updateOk = false;\n-                }\n@@ -673,2 +667,0 @@\n-        zis.close();\n-        zos.close();\n@@ -981,1 +973,1 @@\n-    void extract(InputStream in, String files[]) throws IOException {\n+    void extract(InputStream in, String[] files) throws IOException {\n@@ -984,2 +976,0 @@\n-        \/\/ Set of all directory entries specified in archive.  Disallows\n-        \/\/ null entries.  Disallows all entries if using pre-6.0 behavior.\n@@ -1011,14 +1001,16 @@\n-    void extract(String fname, String files[]) throws IOException {\n-        ZipFile zf = new ZipFile(fname);\n-        Set<ZipEntry> dirs = newDirSet();\n-        Enumeration<? extends ZipEntry> zes = zf.entries();\n-        while (zes.hasMoreElements()) {\n-            ZipEntry e = zes.nextElement();\n-            if (files == null) {\n-                dirs.add(extractFile(zf.getInputStream(e), e));\n-            } else {\n-                String name = e.getName();\n-                for (String file : files) {\n-                    if (name.startsWith(file)) {\n-                        dirs.add(extractFile(zf.getInputStream(e), e));\n-                        break;\n+    void extract(String fname, String[] files) throws IOException {\n+        final Set<ZipEntry> dirs;\n+        try (ZipFile zf = new ZipFile(fname)) {\n+            dirs = newDirSet();\n+            Enumeration<? extends ZipEntry> zes = zf.entries();\n+            while (zes.hasMoreElements()) {\n+                ZipEntry e = zes.nextElement();\n+                if (files == null) {\n+                    dirs.add(extractFile(zf.getInputStream(e), e));\n+                } else {\n+                    String name = e.getName();\n+                    for (String file : files) {\n+                        if (name.startsWith(file)) {\n+                            dirs.add(extractFile(zf.getInputStream(e), e));\n+                            break;\n+                        }\n@@ -1029,1 +1021,0 @@\n-        zf.close();\n@@ -1110,1 +1101,1 @@\n-    void list(InputStream in, String files[]) throws IOException {\n+    void list(InputStream in, String[] files) throws IOException {\n@@ -1128,5 +1119,6 @@\n-    void list(String fname, String files[]) throws IOException {\n-        ZipFile zf = new ZipFile(fname);\n-        Enumeration<? extends ZipEntry> zes = zf.entries();\n-        while (zes.hasMoreElements()) {\n-            printEntry(zes.nextElement(), files);\n+    void list(String fname, String[] files) throws IOException {\n+        try (ZipFile zf = new ZipFile(fname)) {\n+            Enumeration<? extends ZipEntry> zes = zf.entries();\n+            while (zes.hasMoreElements()) {\n+                printEntry(zes.nextElement(), files);\n+            }\n@@ -1134,1 +1126,0 @@\n-        zf.close();\n@@ -1177,4 +1168,2 @@\n-        JarFile rf = new JarFile(jar.replace('\/', File.separatorChar));\n-\n-        if (rf != null) {\n-            Manifest man = rf.getManifest();\n+        try (JarFile jarFile = new JarFile(jar.replace('\/', File.separatorChar))) {\n+            Manifest man = jarFile.getManifest();\n@@ -1201,1 +1190,0 @@\n-        rf.close();\n@@ -1307,1 +1295,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n","filename":"jdk\/src\/share\/classes\/sun\/tools\/jar\/Main.java","additions":104,"deletions":116,"binary":false,"changes":220,"status":"modified"}]}