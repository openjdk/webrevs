{"files":[{"patch":"@@ -542,1 +542,1 @@\n-{}\n+{Token tok;}\n@@ -544,2 +544,2 @@\n-  ( \"+\" | \"-\" ) UnaryExpression()\n-                        { throw new ParseException(\"operation not yet supported\"); }\n+  ( tok = \"+\" | tok = \"-\" ) UnaryExpression()\n+                { push( LValue.operation(vm, tok, pop(), frameGetter) ); }\n@@ -569,1 +569,1 @@\n-{}\n+{Token tok;}\n@@ -571,2 +571,2 @@\n-  ( \"~\" | \"!\" ) UnaryExpression()\n-                        { throw new ParseException(\"operation not yet supported\"); }\n+  ( tok = \"~\" | tok = \"!\" ) UnaryExpression()\n+                { push( LValue.operation(vm, tok, pop(), frameGetter) ); }\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/Expr.jj","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,9 +26,0 @@\n-\/*\n- * This source code is provided to illustrate the usage of a given feature\n- * or technique and has been deliberately simplified. Additional steps\n- * required for a production-quality application, such as security checks,\n- * input validation and proper error handling, might not be present in\n- * this sample code.\n- *\/\n-\n-\n@@ -39,1 +30,0 @@\n-\n@@ -46,1 +36,1 @@\n-   Stack<LValue> stack = new Stack<LValue>();\n+  Stack stack = new Stack();\n@@ -53,1 +43,1 @@\n-      return stack.peek();\n+    return (LValue)stack.peek();\n@@ -57,1 +47,1 @@\n-      return stack.pop();\n+    return (LValue)stack.pop();\n@@ -65,1 +55,1 @@\n-       return lastLValue.getMassagedValue(lastFrameGetter);\n+        return lastLValue.getMassagedValue(lastFrameGetter);\n@@ -73,2 +63,4 @@\n-         GetFrame frameGetter) throws ParseException, InvocationException,\n-         InvalidTypeException, ClassNotLoadedException,\n+                               GetFrame frameGetter) throws ParseException,\n+                                            InvocationException,\n+                                            InvalidTypeException,\n+                                            ClassNotLoadedException,\n@@ -81,0 +73,1 @@\n+        Value value = null;\n@@ -98,2 +91,2 @@\n-            System.out.println(\"Java Parser Version 1.0.2:  File \" + args[0]\n-                  + \" not found.\");\n+        System.out.println(\"Java Parser Version 1.0.2:  File \" +\n+                           args[0] + \" not found.\");\n@@ -146,1 +139,2 @@\n-      label_1: while (true) {\n+    label_1:\n+    while (true) {\n@@ -197,1 +191,2 @@\n-      label_2: while (true) {\n+    label_2:\n+    while (true) {\n@@ -205,6 +200,3 @@\n-         sb.append('.');\n-         sb.append(token);\n-      }\n-      if (true) {\n-         return sb.toString();\n-      }\n+                                    sb.append('.'); sb.append(token);\n+    }\n+          {if (true) return sb.toString();}\n@@ -216,1 +208,2 @@\n-      label_3: while (true) {\n+    label_3:\n+    while (true) {\n@@ -270,3 +263,1 @@\n-      LValue exprVal = pop();\n-      pop().setValue(exprVal);\n-      push(exprVal);\n+          LValue exprVal = pop(); pop().setValue(exprVal); push(exprVal);\n@@ -328,2 +319,1 @@\n-         LValue falseBranch = pop();\n-         LValue trueBranch = pop();\n+                  LValue falseBranch = pop(); LValue trueBranch = pop();\n@@ -332,2 +322,2 @@\n-            push(((BooleanValue) cond).booleanValue() ? trueBranch\n-                  : falseBranch);\n+                        push(((BooleanValue)cond).booleanValue()?\n+                                        trueBranch : falseBranch);\n@@ -335,5 +325,1 @@\n-            {\n-               if (true) {\n-                  throw new ParseException(\"Condition must be boolean\");\n-               }\n-            }\n+                        {if (true) throw new ParseException(\"Condition must be boolean\");}\n@@ -350,1 +336,2 @@\n-      label_4: while (true) {\n+    label_4:\n+    while (true) {\n@@ -361,5 +348,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -371,1 +354,2 @@\n-      label_5: while (true) {\n+    label_5:\n+    while (true) {\n@@ -382,5 +366,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -392,1 +372,2 @@\n-      label_6: while (true) {\n+    label_6:\n+    while (true) {\n@@ -403,5 +384,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -413,1 +390,2 @@\n-      label_7: while (true) {\n+    label_7:\n+    while (true) {\n@@ -424,5 +402,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -434,1 +408,2 @@\n-      label_8: while (true) {\n+    label_8:\n+    while (true) {\n@@ -445,5 +420,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -456,1 +427,2 @@\n-      label_9: while (true) {\n+    label_9:\n+    while (true) {\n@@ -490,5 +462,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -505,1 +473,2 @@\n-      label_10: while (true) {\n+    label_10:\n+    while (true) {\n@@ -543,1 +512,2 @@\n-      label_11: while (true) {\n+    label_11:\n+    while (true) {\n@@ -570,5 +540,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -581,1 +547,2 @@\n-      label_12: while (true) {\n+    label_12:\n+    while (true) {\n@@ -612,1 +579,2 @@\n-      label_13: while (true) {\n+    label_13:\n+    while (true) {\n@@ -645,0 +613,1 @@\n+ Token tok;\n@@ -650,1 +619,1 @@\n-        jj_consume_token(PLUS);\n+        tok = jj_consume_token(PLUS);\n@@ -653,1 +622,1 @@\n-        jj_consume_token(MINUS);\n+        tok = jj_consume_token(MINUS);\n@@ -661,5 +630,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                  push( LValue.operation(vm, tok, pop(), frameGetter) );\n@@ -699,5 +664,1 @@\n-      {\n-         if (true) {\n-            throw new ParseException(\"operation not yet supported\");\n-         }\n-      }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -709,5 +670,1 @@\n-      {\n-         if (true) {\n-            throw new ParseException(\"operation not yet supported\");\n-         }\n-      }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -717,0 +674,1 @@\n+ Token tok;\n@@ -722,1 +680,1 @@\n-        jj_consume_token(TILDE);\n+        tok = jj_consume_token(TILDE);\n@@ -725,1 +683,1 @@\n-        jj_consume_token(BANG);\n+        tok = jj_consume_token(BANG);\n@@ -733,5 +691,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                  push( LValue.operation(vm, tok, pop(), frameGetter) );\n@@ -768,4 +722,2 @@\n-   \/\/ This production is to determine lookahead only. The LOOKAHEAD\n-   \/\/ specifications\n-   \/\/ below are not used, but they are there just to indicate that we know\n-   \/\/ about\n+\/\/ This production is to determine lookahead only.  The LOOKAHEAD specifications\n+\/\/ below are not used, but they are there just to indicate that we know about\n@@ -844,5 +796,1 @@\n-            {\n-               if (true) {\n-                  throw new ParseException(\"operation not yet supported\");\n-               }\n-            }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -866,1 +814,2 @@\n-         label_14: while (true) {\n+      label_14:\n+      while (true) {\n@@ -885,1 +834,2 @@\n-            label_15: while (true) {\n+        label_15:\n+        while (true) {\n@@ -910,1 +860,2 @@\n-      label_16: while (true) {\n+    label_16:\n+    while (true) {\n@@ -949,5 +900,1 @@\n-         {\n-            if (true) {\n-               throw new ParseException(\"operation not yet supported\");\n-            }\n-         }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -971,1 +918,1 @@\n-      List<Value> argList;\n+ List argList;\n@@ -1049,2 +996,2 @@\n-   final public List<Value> Arguments() throws ParseException {\n-      List<Value> argList = new ArrayList<Value>();\n+  final public List Arguments() throws ParseException {\n+ List argList = new ArrayList();\n@@ -1078,5 +1025,1 @@\n-      {\n-         if (true) {\n-            return argList;\n-         }\n-      }\n+    {if (true) return argList;}\n@@ -1086,1 +1029,1 @@\n-   final public void ArgumentList(List<Value> argList) throws ParseException {\n+  final public void ArgumentList(List argList) throws ParseException {\n@@ -1089,1 +1032,2 @@\n-      label_17: while (true) {\n+    label_17:\n+    while (true) {\n@@ -1105,2 +1049,1 @@\n-      List<Value> argList;\n-      String className;\n+ List argList; String className;\n@@ -1123,5 +1066,1 @@\n-               {\n-                  if (true) {\n-                     throw new ParseException(\"operation not yet supported\");\n-                  }\n-               }\n+                          {if (true) throw new ParseException(\"operation not yet supported\");}\n@@ -1144,2 +1083,2 @@\n-    * The second LOOKAHEAD specification below is to parse to PrimarySuffix if\n-    * there is an expression between the \"[...]\".\n+ * The second LOOKAHEAD specification below is to parse to PrimarySuffix\n+ * if there is an expression between the \"[...]\".\n@@ -1148,1 +1087,2 @@\n-      label_18: while (true) {\n+    label_18:\n+    while (true) {\n@@ -1158,1 +1098,2 @@\n-      label_19: while (true) {\n+    label_19:\n+    while (true) {\n@@ -1169,6 +1110,5 @@\n-  final private boolean jj_2_1(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_1();\n-    jj_save(0, xla);\n-    return retval;\n+  private boolean jj_2_1(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_1(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(0, xla); }\n@@ -1177,6 +1117,5 @@\n-  final private boolean jj_2_2(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_2();\n-    jj_save(1, xla);\n-    return retval;\n+  private boolean jj_2_2(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_2(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(1, xla); }\n@@ -1185,6 +1124,5 @@\n-  final private boolean jj_2_3(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_3();\n-    jj_save(2, xla);\n-    return retval;\n+  private boolean jj_2_3(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_3(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(2, xla); }\n@@ -1193,6 +1131,5 @@\n-  final private boolean jj_2_4(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_4();\n-    jj_save(3, xla);\n-    return retval;\n+  private boolean jj_2_4(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_4(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(3, xla); }\n@@ -1201,6 +1138,5 @@\n-  final private boolean jj_2_5(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_5();\n-    jj_save(4, xla);\n-    return retval;\n+  private boolean jj_2_5(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_5(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(4, xla); }\n@@ -1209,6 +1145,5 @@\n-  final private boolean jj_2_6(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_6();\n-    jj_save(5, xla);\n-    return retval;\n+  private boolean jj_2_6(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_6(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(5, xla); }\n@@ -1217,6 +1152,5 @@\n-  final private boolean jj_2_7(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_7();\n-    jj_save(6, xla);\n-    return retval;\n+  private boolean jj_2_7(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_7(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(6, xla); }\n@@ -1225,6 +1159,5 @@\n-  final private boolean jj_2_8(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_8();\n-    jj_save(7, xla);\n-    return retval;\n+  private boolean jj_2_8(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_8(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(7, xla); }\n@@ -1233,6 +1166,5 @@\n-  final private boolean jj_2_9(int xla) {\n-      jj_la = xla;\n-      jj_lastpos = jj_scanpos = token;\n-    boolean retval = !jj_3_9();\n-    jj_save(8, xla);\n-    return retval;\n+  private boolean jj_2_9(int xla) {\n+    jj_la = xla; jj_lastpos = jj_scanpos = token;\n+    try { return !jj_3_9(); }\n+    catch(LookaheadSuccess ls) { return true; }\n+    finally { jj_save(8, xla); }\n@@ -1241,7 +1173,3 @@\n-  final private boolean jj_3R_154() {\n-      if (jj_scan_token(INCR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_94() {\n+    if (jj_scan_token(DECR)) return true;\n+    if (jj_3R_20()) return true;\n@@ -1251,14 +1179,2 @@\n-  final private boolean jj_3R_151() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_154()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_155()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_86() {\n+    if (jj_3R_24()) return true;\n@@ -1268,14 +1184,3 @@\n-  final private boolean jj_3R_148() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3_6()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_150()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_93() {\n+    if (jj_scan_token(INCR)) return true;\n+    if (jj_3R_20()) return true;\n@@ -1285,36 +1190,2 @@\n-  final private boolean jj_3_6() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_23()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_152()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      }\n-      if (jj_scan_token(RPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_115()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_91() {\n+    if (jj_3R_95()) return true;\n@@ -1324,1 +1195,1 @@\n-  final private boolean jj_3R_25() {\n+  private boolean jj_3R_23() {\n@@ -1327,1 +1198,1 @@\n-    if (jj_3R_50()) {\n+    if (jj_scan_token(10)) {\n@@ -1329,9 +1200,20 @@\n-         if (jj_3R_51()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_scan_token(15)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(12)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(45)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(34)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(36)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(27)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(21)) return true;\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n@@ -1341,7 +1223,2 @@\n-  final private boolean jj_3R_50() {\n-      if (jj_3R_67()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_90() {\n+    if (jj_3R_94()) return true;\n@@ -1351,19 +1228,2 @@\n-  final private boolean jj_3_5() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_89() {\n+    if (jj_3R_93()) return true;\n@@ -1373,7 +1233,11 @@\n-  final private boolean jj_3R_149() {\n-      if (jj_3R_20()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_85() {\n+    if (jj_3R_23()) return true;\n+    return false;\n+  }\n+\n+  private boolean jj_3R_60() {\n+    if (jj_3R_58()) return true;\n+    return false;\n+  }\n+\n+  private boolean jj_3R_88() {\n@@ -1382,5 +1246,5 @@\n-      if (jj_3R_151()) {\n-         jj_scanpos = xsp;\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_scan_token(94)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(95)) return true;\n+    }\n+    if (jj_3R_83()) return true;\n@@ -1390,19 +1254,1 @@\n-  final private boolean jj_3R_41() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_83() {\n@@ -1411,1 +1257,1 @@\n-    if (jj_3R_59()) {\n+    if (jj_3R_88()) {\n@@ -1413,1 +1259,1 @@\n-    if (jj_3R_60()) {\n+    if (jj_3R_89()) {\n@@ -1415,1 +1261,1 @@\n-    if (jj_3R_61()) {\n+    if (jj_3R_90()) {\n@@ -1417,3 +1263,11 @@\n-    if (jj_3R_62()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_63()) {\n+    if (jj_3R_91()) return true;\n+    }\n+    }\n+    }\n+    return false;\n+  }\n+\n+  private boolean jj_3R_82() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_3R_85()) {\n@@ -1421,1 +1275,18 @@\n-    if (jj_3R_64()) {\n+    if (jj_3R_86()) return true;\n+    }\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_87()) { jj_scanpos = xsp; break; }\n+    }\n+    return false;\n+  }\n+\n+  private boolean jj_3R_59() {\n+    if (jj_3R_55()) return true;\n+    return false;\n+  }\n+\n+  private boolean jj_3R_96() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(96)) {\n@@ -1423,1 +1294,1 @@\n-    if (jj_3R_65()) {\n+    if (jj_scan_token(97)) {\n@@ -1425,27 +1296,4 @@\n-                           if (jj_3R_66()) {\n-                              return true;\n-                           }\n-                           if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                              return false;\n-                           }\n-                        } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                           return false;\n-                        }\n-                     } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                        return false;\n-                     }\n-                  } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                     return false;\n-                  }\n-               } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_scan_token(101)) return true;\n+    }\n+    }\n+    if (jj_3R_83()) return true;\n@@ -1455,25 +1303,7 @@\n-  final private boolean jj_3R_40() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_80() {\n+    if (jj_3R_83()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_96()) { jj_scanpos = xsp; break; }\n+    }\n@@ -1483,13 +1313,8 @@\n-  final private boolean jj_3R_123() {\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_92() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(94)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(95)) return true;\n+    }\n+    if (jj_3R_80()) return true;\n@@ -1499,13 +1324,4 @@\n-  final private boolean jj_3_1() {\n-      if (jj_scan_token(DOT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(IDENTIFIER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_8() {\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_3R_25()) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n@@ -1515,13 +1331,11 @@\n-  final private boolean jj_3_4() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_23()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_58() {\n+    Token xsp;\n+    if (jj_3_8()) return true;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3_8()) { jj_scanpos = xsp; break; }\n+    }\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3_9()) { jj_scanpos = xsp; break; }\n+    }\n@@ -1531,1 +1345,1 @@\n-  final private boolean jj_3R_22() {\n+  private boolean jj_3R_84() {\n@@ -1534,1 +1348,1 @@\n-    if (jj_3_4()) {\n+    if (jj_scan_token(102)) {\n@@ -1536,1 +1350,1 @@\n-    if (jj_3R_40()) {\n+    if (jj_scan_token(103)) {\n@@ -1538,12 +1352,4 @@\n-            if (jj_3R_41()) {\n-               return true;\n-            }\n-            if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_scan_token(104)) return true;\n+    }\n+    }\n+    if (jj_3R_78()) return true;\n@@ -1553,7 +1359,7 @@\n-  final private boolean jj_3_3() {\n-      if (jj_3R_22()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_78() {\n+    if (jj_3R_80()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_92()) { jj_scanpos = xsp; break; }\n+    }\n@@ -1563,7 +1369,14 @@\n-  final private boolean jj_3R_24() {\n-      if (jj_scan_token(IDENTIFIER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_54() {\n+    if (jj_scan_token(NEW)) return true;\n+    if (jj_3R_24()) return true;\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_3R_59()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_60()) return true;\n+    }\n+    return false;\n+  }\n+\n+  private boolean jj_3R_76() {\n+    if (jj_3R_78()) return true;\n@@ -1573,7 +1386,1 @@\n-         if (jj_3_1()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+      if (jj_3R_84()) { jj_scanpos = xsp; break; }\n@@ -1584,7 +1391,14 @@\n-  final private boolean jj_3R_147() {\n-      if (jj_scan_token(BANG)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_81() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(81)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(80)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(87)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(88)) return true;\n+    }\n+    }\n+    }\n+    if (jj_3R_76()) return true;\n@@ -1594,7 +1408,7 @@\n-  final private boolean jj_3R_142() {\n-      if (jj_3R_149()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_43() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_3_7()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_54()) return true;\n+    }\n@@ -1604,7 +1418,4 @@\n-  final private boolean jj_3R_122() {\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_7() {\n+    if (jj_scan_token(NEW)) return true;\n+    if (jj_3R_23()) return true;\n+    if (jj_3R_58()) return true;\n@@ -1614,7 +1425,3 @@\n-  final private boolean jj_3R_49() {\n-      if (jj_scan_token(DOUBLE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_67() {\n+    if (jj_scan_token(COMMA)) return true;\n+    if (jj_3R_25()) return true;\n@@ -1624,7 +1431,7 @@\n-  final private boolean jj_3R_141() {\n-      if (jj_3R_148()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_64() {\n+    if (jj_3R_25()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_67()) { jj_scanpos = xsp; break; }\n+    }\n@@ -1634,7 +1441,2 @@\n-  final private boolean jj_3R_48() {\n-      if (jj_scan_token(FLOAT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_61() {\n+    if (jj_3R_64()) return true;\n@@ -1644,7 +1446,3 @@\n-  final private boolean jj_3R_146() {\n-      if (jj_scan_token(TILDE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_79() {\n+    if (jj_scan_token(INSTANCEOF)) return true;\n+    if (jj_3R_82()) return true;\n@@ -1654,7 +1452,7 @@\n-  final private boolean jj_3R_47() {\n-      if (jj_scan_token(LONG)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_74() {\n+    if (jj_3R_76()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_81()) { jj_scanpos = xsp; break; }\n+    }\n@@ -1664,1 +1462,2 @@\n-  final private boolean jj_3R_140() {\n+  private boolean jj_3R_55() {\n+    if (jj_scan_token(LPAREN)) return true;\n@@ -1667,17 +1466,2 @@\n-    if (jj_3R_146()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_147()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_115()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_3R_61()) jj_scanpos = xsp;\n+    if (jj_scan_token(RPAREN)) return true;\n@@ -1687,1 +1471,2 @@\n-  final private boolean jj_3R_136() {\n+  private boolean jj_3R_72() {\n+    if (jj_3R_74()) return true;\n@@ -1690,16 +1475,1 @@\n-    if (jj_3R_140()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_141()) {\n-    jj_scanpos = xsp;\n-            if (jj_3R_142()) {\n-               return true;\n-            }\n-            if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_3R_79()) jj_scanpos = xsp;\n@@ -1709,7 +1479,8 @@\n-  final private boolean jj_3R_46() {\n-      if (jj_scan_token(INT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_77() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(86)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(89)) return true;\n+    }\n+    if (jj_3R_72()) return true;\n@@ -1719,7 +1490,3 @@\n-  final private boolean jj_3R_145() {\n-      if (jj_scan_token(REM)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_75() {\n+    if (jj_scan_token(BIT_AND)) return true;\n+    if (jj_3R_70()) return true;\n@@ -1729,7 +1496,7 @@\n-  final private boolean jj_3R_45() {\n-      if (jj_scan_token(SHORT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_70() {\n+    if (jj_3R_72()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_77()) { jj_scanpos = xsp; break; }\n+    }\n@@ -1739,37 +1506,1 @@\n-  final private boolean jj_3R_44() {\n-      if (jj_scan_token(BYTE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_135() {\n-      if (jj_scan_token(DECR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_20()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_43() {\n-      if (jj_scan_token(CHAR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_23() {\n+  private boolean jj_3R_57() {\n@@ -1778,3 +1509,1 @@\n-    if (jj_3R_42()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_43()) {\n+    if (jj_scan_token(54)) {\n@@ -1782,73 +1511,2 @@\n-    if (jj_3R_44()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_45()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_46()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_47()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_48()) {\n-    jj_scanpos = xsp;\n-                           if (jj_3R_49()) {\n-                              return true;\n-                           }\n-                           if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                              return false;\n-                           }\n-                        } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                           return false;\n-                        }\n-                     } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                        return false;\n-                     }\n-                  } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                     return false;\n-                  }\n-               } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_42() {\n-      if (jj_scan_token(BOOLEAN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3_9() {\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_121() {\n-      if (jj_3R_23()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_scan_token(24)) return true;\n+    }\n@@ -1858,7 +1516,2 @@\n-  final private boolean jj_3R_144() {\n-      if (jj_scan_token(SLASH)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_53() {\n+    if (jj_scan_token(39)) return true;\n@@ -1868,13 +1521,2 @@\n-  final private boolean jj_3R_134() {\n-      if (jj_scan_token(INCR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_20()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_39() {\n+    if (jj_3R_42()) return true;\n@@ -1884,1 +1526,2 @@\n-  final private boolean jj_3R_114() {\n+  private boolean jj_3R_68() {\n+    if (jj_3R_70()) return true;\n@@ -1886,12 +1529,0 @@\n-    xsp = jj_scanpos;\n-    if (jj_3R_121()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_122()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n@@ -1900,7 +1531,1 @@\n-         if (jj_3R_123()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+      if (jj_3R_75()) { jj_scanpos = xsp; break; }\n@@ -1911,155 +1536,3 @@\n-  final private boolean jj_3R_120() {\n-      if (jj_scan_token(GE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_133() {\n-      if (jj_scan_token(MINUS)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_127() {\n-      if (jj_3R_136()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_126() {\n-      if (jj_3R_135()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_139() {\n-      if (jj_scan_token(MINUS)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_125() {\n-      if (jj_3R_134()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_132() {\n-      if (jj_scan_token(PLUS)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_143() {\n-      if (jj_scan_token(STAR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_124() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_132()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_133()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_115()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_115() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_124()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_125()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_126()) {\n-    jj_scanpos = xsp;\n-               if (jj_3R_127()) {\n-                  return true;\n-               }\n-               if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_137() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_143()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_144()) {\n-    jj_scanpos = xsp;\n-            if (jj_3R_145()) {\n-               return true;\n-            }\n-            if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_115()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_73() {\n+    if (jj_scan_token(XOR)) return true;\n+    if (jj_3R_68()) return true;\n@@ -2069,7 +1542,2 @@\n-  final private boolean jj_3R_131() {\n-      if (jj_scan_token(RUNSIGNEDSHIFT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_52() {\n+    if (jj_3R_57()) return true;\n@@ -2079,7 +1547,2 @@\n-  final private boolean jj_3R_119() {\n-      if (jj_scan_token(LE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_51() {\n+    if (jj_scan_token(STRING_LITERAL)) return true;\n@@ -2089,7 +1552,2 @@\n-  final private boolean jj_3R_138() {\n-      if (jj_scan_token(PLUS)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_50() {\n+    if (jj_scan_token(CHARACTER_LITERAL)) return true;\n@@ -2099,7 +1557,2 @@\n-  final private boolean jj_3R_112() {\n-      if (jj_3R_115()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_65() {\n+    if (jj_3R_68()) return true;\n@@ -2109,7 +1562,1 @@\n-         if (jj_3R_137()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+      if (jj_3R_73()) { jj_scanpos = xsp; break; }\n@@ -2120,7 +1567,3 @@\n-  final private boolean jj_3R_88() {\n-      if (jj_3R_86()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_71() {\n+    if (jj_scan_token(BIT_OR)) return true;\n+    if (jj_3R_65()) return true;\n@@ -2130,7 +1573,2 @@\n-  final private boolean jj_3R_130() {\n-      if (jj_scan_token(RSIGNEDSHIFT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_49() {\n+    if (jj_scan_token(FLOATING_POINT_LITERAL)) return true;\n@@ -2140,1 +1578,1 @@\n-  final private boolean jj_3R_128() {\n+  private boolean jj_3R_42() {\n@@ -2143,1 +1581,1 @@\n-    if (jj_3R_138()) {\n+    if (jj_3R_48()) {\n@@ -2145,52 +1583,1 @@\n-         if (jj_3R_139()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_112()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_87() {\n-      if (jj_3R_82()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_118() {\n-      if (jj_scan_token(GT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_129() {\n-      if (jj_scan_token(LSHIFT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_116() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_129()) {\n+    if (jj_3R_49()) {\n@@ -2198,1 +1585,1 @@\n-    if (jj_3R_130()) {\n+    if (jj_3R_50()) {\n@@ -2200,38 +1587,7 @@\n-            if (jj_3R_131()) {\n-               return true;\n-            }\n-            if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_108()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_108() {\n-      if (jj_3R_112()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_128()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+    if (jj_3R_51()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_52()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_53()) return true;\n+    }\n+    }\n@@ -2239,42 +1595,0 @@\n-    return false;\n-  }\n-\n-  final private boolean jj_3_8() {\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_86() {\n-    Token xsp;\n-      if (jj_3_8()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3_8()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n@@ -2282,9 +1596,0 @@\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3_9()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n@@ -2295,7 +1600,2 @@\n-  final private boolean jj_3R_117() {\n-      if (jj_scan_token(LT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_48() {\n+    if (jj_scan_token(INTEGER_LITERAL)) return true;\n@@ -2305,7 +1605,2 @@\n-  final private boolean jj_3R_106() {\n-      if (jj_3R_108()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_62() {\n+    if (jj_3R_65()) return true;\n@@ -2315,7 +1610,1 @@\n-         if (jj_3R_116()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+      if (jj_3R_71()) { jj_scanpos = xsp; break; }\n@@ -2326,30 +1615,3 @@\n-  final private boolean jj_3R_113() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_117()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_118()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_119()) {\n-    jj_scanpos = xsp;\n-               if (jj_3R_120()) {\n-                  return true;\n-               }\n-               if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_106()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_69() {\n+    if (jj_scan_token(SC_AND)) return true;\n+    if (jj_3R_62()) return true;\n@@ -2359,7 +1621,2 @@\n-  final private boolean jj_3R_111() {\n-      if (jj_scan_token(NE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_46() {\n+    if (jj_3R_55()) return true;\n@@ -2369,13 +1626,3 @@\n-  final private boolean jj_3R_109() {\n-      if (jj_scan_token(INSTANCEOF)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_114()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_45() {\n+    if (jj_scan_token(DOT)) return true;\n+    if (jj_scan_token(IDENTIFIER)) return true;\n@@ -2385,7 +1632,2 @@\n-  final private boolean jj_3R_104() {\n-      if (jj_3R_106()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_56() {\n+    if (jj_3R_62()) return true;\n@@ -2395,7 +1637,1 @@\n-         if (jj_3R_113()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+      if (jj_3R_69()) { jj_scanpos = xsp; break; }\n@@ -2406,26 +1642,3 @@\n-  final private boolean jj_3R_81() {\n-      if (jj_scan_token(NEW)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_87()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_88()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_66() {\n+    if (jj_scan_token(SC_OR)) return true;\n+    if (jj_3R_56()) return true;\n@@ -2435,19 +1648,4 @@\n-  final private boolean jj_3_7() {\n-      if (jj_scan_token(NEW)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_23()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_86()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_44() {\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_3R_25()) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n@@ -2457,1 +1655,1 @@\n-  final private boolean jj_3R_70() {\n+  private boolean jj_3R_38() {\n@@ -2460,1 +1658,1 @@\n-    if (jj_3_7()) {\n+    if (jj_3R_44()) {\n@@ -2462,69 +1660,1 @@\n-         if (jj_3R_81()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_97() {\n-      if (jj_scan_token(COMMA)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_39() {\n-      if (jj_scan_token(ORASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_110() {\n-      if (jj_scan_token(EQ)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_102() {\n-      if (jj_3R_104()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    xsp = jj_scanpos;\n-      if (jj_3R_109()) {\n-         jj_scanpos = xsp;\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_107() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_110()) {\n+    if (jj_3R_45()) {\n@@ -2532,35 +1662,1 @@\n-         if (jj_3R_111()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_102()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_94() {\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_97()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+    if (jj_3R_46()) return true;\n@@ -2568,79 +1664,0 @@\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_89() {\n-      if (jj_3R_94()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_38() {\n-      if (jj_scan_token(XORASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_82() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    xsp = jj_scanpos;\n-      if (jj_3R_89()) {\n-         jj_scanpos = xsp;\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_105() {\n-      if (jj_scan_token(BIT_AND)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_100()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_100() {\n-      if (jj_3R_102()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_107()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n@@ -2651,7 +1668,2 @@\n-  final private boolean jj_3R_37() {\n-      if (jj_scan_token(ANDASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_37() {\n+    if (jj_3R_43()) return true;\n@@ -2661,7 +1673,2 @@\n-  final private boolean jj_3R_85() {\n-      if (jj_scan_token(NULL)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_27() {\n+    if (jj_3R_38()) return true;\n@@ -2671,13 +1678,4 @@\n-  final private boolean jj_3R_103() {\n-      if (jj_scan_token(XOR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_98()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_36() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_25()) return true;\n+    if (jj_scan_token(RPAREN)) return true;\n@@ -2687,7 +1685,2 @@\n-  final private boolean jj_3R_98() {\n-      if (jj_3R_100()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_47() {\n+    if (jj_3R_56()) return true;\n@@ -2697,7 +1690,1 @@\n-         if (jj_3R_105()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+      if (jj_3R_66()) { jj_scanpos = xsp; break; }\n@@ -2708,17 +1695,3 @@\n-  final private boolean jj_3R_92() {\n-      if (jj_scan_token(FALSE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_36() {\n-      if (jj_scan_token(RUNSIGNEDSHIFTASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_104() {\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n@@ -2728,7 +1701,4 @@\n-  final private boolean jj_3R_91() {\n-      if (jj_scan_token(TRUE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_35() {\n+    if (jj_scan_token(SUPER)) return true;\n+    if (jj_scan_token(DOT)) return true;\n+    if (jj_scan_token(IDENTIFIER)) return true;\n@@ -2738,14 +1708,2 @@\n-  final private boolean jj_3R_84() {\n-    Token xsp;\n-    xsp = jj_scanpos;\n-    if (jj_3R_91()) {\n-    jj_scanpos = xsp;\n-         if (jj_3R_92()) {\n-            return true;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_34() {\n+    if (jj_scan_token(THIS)) return true;\n@@ -2755,13 +1713,5 @@\n-  final private boolean jj_3R_101() {\n-      if (jj_scan_token(BIT_OR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_95()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_63() {\n+    if (jj_scan_token(HOOK)) return true;\n+    if (jj_3R_25()) return true;\n+    if (jj_scan_token(COLON)) return true;\n+    if (jj_3R_41()) return true;\n@@ -2771,18 +1721,2 @@\n-  final private boolean jj_3R_95() {\n-      if (jj_3R_98()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_103()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-    }\n+  private boolean jj_3R_33() {\n+    if (jj_3R_24()) return true;\n@@ -2792,7 +1726,3 @@\n-  final private boolean jj_3R_35() {\n-      if (jj_scan_token(RSIGNEDSHIFTASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_105() {\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n@@ -2802,7 +1732,2 @@\n-  final private boolean jj_3R_80() {\n-      if (jj_3R_85()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_32() {\n+    if (jj_3R_42()) return true;\n@@ -2812,118 +1737,1 @@\n-  final private boolean jj_3R_66() {\n-      if (jj_3R_69()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_79() {\n-      if (jj_3R_84()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_78() {\n-      if (jj_scan_token(STRING_LITERAL)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_99() {\n-      if (jj_scan_token(SC_AND)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_90()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_90() {\n-      if (jj_3R_95()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_101()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-    }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_34() {\n-      if (jj_scan_token(LSHIFTASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_65() {\n-      if (jj_scan_token(NEW)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_77() {\n-      if (jj_scan_token(CHARACTER_LITERAL)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_76() {\n-      if (jj_scan_token(FLOATING_POINT_LITERAL)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_33() {\n-      if (jj_scan_token(MINUSASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_69() {\n+  private boolean jj_3R_26() {\n@@ -2932,1 +1740,1 @@\n-    if (jj_3R_75()) {\n+    if (jj_3R_32()) {\n@@ -2934,1 +1742,1 @@\n-    if (jj_3R_76()) {\n+    if (jj_3R_33()) {\n@@ -2936,1 +1744,1 @@\n-    if (jj_3R_77()) {\n+    if (jj_3R_34()) {\n@@ -2938,1 +1746,1 @@\n-    if (jj_3R_78()) {\n+    if (jj_3R_35()) {\n@@ -2940,1 +1748,1 @@\n-    if (jj_3R_79()) {\n+    if (jj_3R_36()) {\n@@ -2942,67 +1750,4 @@\n-                     if (jj_3R_80()) {\n-                        return true;\n-                     }\n-                     if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                        return false;\n-                     }\n-                  } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                     return false;\n-                  }\n-               } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_75() {\n-      if (jj_scan_token(INTEGER_LITERAL)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_96() {\n-      if (jj_scan_token(SC_OR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_83()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_83() {\n-      if (jj_3R_90()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_99()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n+    if (jj_3R_37()) return true;\n+    }\n+    }\n+    }\n@@ -3010,66 +1755,0 @@\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_64() {\n-      if (jj_scan_token(SUPER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_32() {\n-      if (jj_scan_token(PLUSASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_73() {\n-      if (jj_3R_82()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_72() {\n-      if (jj_scan_token(DOT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(IDENTIFIER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_74() {\n-      if (jj_3R_83()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_96()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n@@ -3080,17 +1759,7 @@\n-  final private boolean jj_3R_63() {\n-      if (jj_scan_token(THIS)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_31() {\n-      if (jj_scan_token(REMASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_20() {\n+    if (jj_3R_26()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_27()) { jj_scanpos = xsp; break; }\n+    }\n@@ -3100,1 +1769,2 @@\n-  final private boolean jj_3R_58() {\n+  private boolean jj_3R_41() {\n+    if (jj_3R_47()) return true;\n@@ -3103,16 +1773,1 @@\n-    if (jj_3R_71()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_72()) {\n-    jj_scanpos = xsp;\n-            if (jj_3R_73()) {\n-               return true;\n-            }\n-            if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_3R_63()) jj_scanpos = xsp;\n@@ -3122,19 +1777,2 @@\n-  final private boolean jj_3R_71() {\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_106() {\n+    if (jj_scan_token(DECR)) return true;\n@@ -3144,25 +1782,10 @@\n-  final private boolean jj_3R_93() {\n-      if (jj_scan_token(HOOK)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(COLON)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_68()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_102() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_24()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_105()) { jj_scanpos = xsp; break; }\n+    }\n+    if (jj_scan_token(RPAREN)) return true;\n+    if (jj_3R_95()) return true;\n@@ -3172,7 +1795,37 @@\n-  final private boolean jj_3R_57() {\n-      if (jj_3R_70()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_21() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(79)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(107)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(108)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(112)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(105)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(106)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(113)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(114)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(115)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(109)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(111)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(110)) return true;\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n@@ -3182,7 +1835,7 @@\n-  final private boolean jj_3R_30() {\n-      if (jj_scan_token(SLASHASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_103() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(92)) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_106()) return true;\n+    }\n@@ -3192,7 +1845,7 @@\n-  final private boolean jj_3R_27() {\n-      if (jj_3R_58()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_100() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_3_6()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_102()) return true;\n+    }\n@@ -3202,19 +1855,10 @@\n-  final private boolean jj_3R_56() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_6() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_23()) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3R_104()) { jj_scanpos = xsp; break; }\n+    }\n+    if (jj_scan_token(RPAREN)) return true;\n+    if (jj_3R_83()) return true;\n@@ -3224,13 +1868,3 @@\n-  final private boolean jj_3R_152() {\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_2() {\n+    if (jj_3R_20()) return true;\n+    if (jj_3R_21()) return true;\n@@ -3240,19 +1874,4 @@\n-  final private boolean jj_3R_55() {\n-      if (jj_scan_token(SUPER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(DOT)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(IDENTIFIER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_40() {\n+    if (jj_3R_20()) return true;\n+    if (jj_3R_21()) return true;\n+    if (jj_3R_25()) return true;\n@@ -3262,7 +1881,4 @@\n-  final private boolean jj_3R_29() {\n-      if (jj_scan_token(STARASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_5() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_24()) return true;\n+    if (jj_scan_token(LBRACKET)) return true;\n@@ -3272,7 +1888,2 @@\n-  final private boolean jj_3R_68() {\n-      if (jj_3R_74()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_101() {\n+    if (jj_3R_20()) return true;\n@@ -3281,15 +1892,1 @@\n-      if (jj_3R_93()) {\n-         jj_scanpos = xsp;\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_54() {\n-      if (jj_scan_token(THIS)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_3R_103()) jj_scanpos = xsp;\n@@ -3299,7 +1896,2 @@\n-  final private boolean jj_3R_62() {\n-      if (jj_scan_token(IDENTIFIER)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_31() {\n+    if (jj_3R_41()) return true;\n@@ -3309,7 +1901,2 @@\n-  final private boolean jj_3R_53() {\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_30() {\n+    if (jj_3R_40()) return true;\n@@ -3319,13 +1906,7 @@\n-  final private boolean jj_3R_153() {\n-      if (jj_scan_token(LBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_scan_token(RBRACKET)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_25() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_3R_30()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_31()) return true;\n+    }\n@@ -3335,1 +1916,4 @@\n-  final private boolean jj_3R_26() {\n+  private boolean jj_3R_29() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_24()) return true;\n+    if (jj_scan_token(RPAREN)) return true;\n@@ -3338,1 +1922,1 @@\n-    if (jj_3R_52()) {\n+    if (jj_scan_token(83)) {\n@@ -3340,1 +1924,1 @@\n-    if (jj_3R_53()) {\n+    if (jj_scan_token(82)) {\n@@ -3342,1 +1926,1 @@\n-    if (jj_3R_54()) {\n+    if (jj_scan_token(70)) {\n@@ -3344,1 +1928,1 @@\n-    if (jj_3R_55()) {\n+    if (jj_scan_token(67)) {\n@@ -3346,1 +1930,1 @@\n-    if (jj_3R_56()) {\n+    if (jj_scan_token(50)) {\n@@ -3348,21 +1932,12 @@\n-                     if (jj_3R_57()) {\n-                        return true;\n-                     }\n-                     if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                        return false;\n-                     }\n-                  } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                     return false;\n-                  }\n-               } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_scan_token(47)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(38)) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_39()) return true;\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n+    }\n@@ -3372,7 +1947,11 @@\n-  final private boolean jj_3R_52() {\n-      if (jj_3R_69()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_28() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_24()) return true;\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n+    return false;\n+  }\n+\n+  private boolean jj_3_4() {\n+    if (jj_scan_token(LPAREN)) return true;\n+    if (jj_3R_23()) return true;\n@@ -3382,1 +1961,1 @@\n-  final private boolean jj_3R_21() {\n+  private boolean jj_3R_22() {\n@@ -3385,19 +1964,1 @@\n-    if (jj_3R_28()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_29()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_30()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_31()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_32()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_33()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_34()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_35()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_36()) {\n-    jj_scanpos = xsp;\n-    if (jj_3R_37()) {\n+    if (jj_3_4()) {\n@@ -3405,1 +1966,1 @@\n-    if (jj_3R_38()) {\n+    if (jj_3R_28()) {\n@@ -3407,52 +1968,3 @@\n-                                       if (jj_3R_39()) {\n-                                          return true;\n-                                       }\n-                                       if (jj_la == 0\n-                                             && jj_scanpos == jj_lastpos) {\n-                                          return false;\n-                                       }\n-                                    } else if (jj_la == 0\n-                                          && jj_scanpos == jj_lastpos) {\n-                                       return false;\n-                                    }\n-                                 } else if (jj_la == 0\n-                                       && jj_scanpos == jj_lastpos) {\n-                                    return false;\n-                                 }\n-                              } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                                 return false;\n-                              }\n-                           } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                              return false;\n-                           }\n-                        } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                           return false;\n-                        }\n-                     } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                        return false;\n-                     }\n-                  } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                     return false;\n-                  }\n-               } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-                  return false;\n-               }\n-            } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-               return false;\n-            }\n-         } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      } else if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_28() {\n-      if (jj_scan_token(ASSIGN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    if (jj_3R_29()) return true;\n+    }\n+    }\n@@ -3462,7 +1974,2 @@\n-  final private boolean jj_3R_61() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_3() {\n+    if (jj_3R_22()) return true;\n@@ -3472,13 +1979,2 @@\n-  final private boolean jj_3_2() {\n-      if (jj_3R_20()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_21()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_99() {\n+    if (jj_3R_101()) return true;\n@@ -3488,18 +1984,3 @@\n-  final private boolean jj_3R_20() {\n-      if (jj_3R_26()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-    Token xsp;\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_27()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-    }\n+  private boolean jj_3R_87() {\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n@@ -3509,7 +1990,2 @@\n-  final private boolean jj_3R_60() {\n-      if (jj_scan_token(BANG)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_98() {\n+    if (jj_3R_100()) return true;\n@@ -3519,7 +1995,3 @@\n-  final private boolean jj_3R_155() {\n-      if (jj_scan_token(DECR)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_1() {\n+    if (jj_scan_token(DOT)) return true;\n+    if (jj_scan_token(IDENTIFIER)) return true;\n@@ -3529,19 +2001,3 @@\n-  final private boolean jj_3R_67() {\n-      if (jj_3R_20()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_21()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_25()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3_9() {\n+    if (jj_scan_token(LBRACKET)) return true;\n+    if (jj_scan_token(RBRACKET)) return true;\n@@ -3551,13 +2007,1 @@\n-  final private boolean jj_3R_150() {\n-      if (jj_scan_token(LPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_24()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_97() {\n@@ -3565,22 +2009,6 @@\n-    while (true) {\n-      xsp = jj_scanpos;\n-         if (jj_3R_153()) {\n-            jj_scanpos = xsp;\n-            break;\n-         }\n-         if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-            return false;\n-         }\n-      }\n-      if (jj_scan_token(RPAREN)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n-      if (jj_3R_136()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+    xsp = jj_scanpos;\n+    if (jj_scan_token(83)) {\n+    jj_scanpos = xsp;\n+    if (jj_scan_token(82)) return true;\n+    }\n+    if (jj_3R_83()) return true;\n@@ -3590,7 +2018,10 @@\n-  final private boolean jj_3R_59() {\n-      if (jj_scan_token(TILDE)) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_95() {\n+    Token xsp;\n+    xsp = jj_scanpos;\n+    if (jj_3R_97()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_98()) {\n+    jj_scanpos = xsp;\n+    if (jj_3R_99()) return true;\n+    }\n+    }\n@@ -3600,7 +2031,7 @@\n-  final private boolean jj_3R_51() {\n-      if (jj_3R_68()) {\n-         return true;\n-      }\n-      if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n-         return false;\n-      }\n+  private boolean jj_3R_24() {\n+    if (jj_scan_token(IDENTIFIER)) return true;\n+    Token xsp;\n+    while (true) {\n+      xsp = jj_scanpos;\n+      if (jj_3_1()) { jj_scanpos = xsp; break; }\n+    }\n@@ -3610,0 +2041,1 @@\n+  \/** Generated Token Manager. *\/\n@@ -3611,2 +2043,5 @@\n-  ASCII_UCodeESC_CharStream jj_input_stream;\n-  public Token token, jj_nt;\n+  JavaCharStream jj_input_stream;\n+  \/** Current token. *\/\n+  public Token token;\n+  \/** Next token. *\/\n+  public Token jj_nt;\n@@ -3616,1 +2051,0 @@\n-  public boolean lookingAhead = false;\n@@ -3619,21 +2053,23 @@\n-   final private int[] jj_la1_0 = { 0x8209400, 0x0, 0x8209400, 0x0, 0x1000000,\n-         0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-         0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x0, 0x0, 0x1000000, 0x1000000,\n-         0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x0, 0x1000000,\n-         0x1000000, 0x1000000, 0x0, 0x0, 0x0, };\n-   final private int[] jj_la1_1 = { 0x2014, 0x0, 0x2014, 0x0, 0x884480c0, 0x0,\n-         0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0,\n-         0x0, 0x0, 0x0, 0x0, 0x884480c0, 0x0, 0x0, 0x884480c0, 0x884480c0, 0x0,\n-         0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x884480c0, 0x0, 0x88400080, 0x400000,\n-         0x884480c0, 0x0, 0x0, 0x40, };\n-   final private int[] jj_la1_2 = { 0x8, 0x400, 0x0, 0x2000, 0xf00c004e,\n-         0x8000, 0x100000, 0x4000000, 0x8000000, 0x0, 0x0, 0x0, 0x2400000,\n-         0x2400000, 0x0, 0x1830000, 0x1830000, 0x0, 0x0, 0xc0000000,\n-         0xc0000000, 0x0, 0x0, 0xc0000000, 0xf00c004e, 0xc0000, 0xc0000, 0x4e,\n-         0xc004e, 0x40, 0x30000000, 0x30000000, 0x400, 0x400, 0x40, 0x4440,\n-         0x4e, 0x4440, 0x6, 0x0, 0xf00c004e, 0x2000, 0x440, 0x0, };\n-   final private int[] jj_la1_3 = { 0x0, 0x0, 0x0, 0x0, 0x0, 0xffe00, 0x0, 0x0,\n-         0x0, 0x8, 0x10, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c0, 0x1c0, 0x0, 0x0,\n-         0x23, 0x23, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-         0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, };\n-  final private JJExpressionParserCalls[] jj_2_rtns = new JJExpressionParserCalls[9];\n+  static private int[] jj_la1_0;\n+  static private int[] jj_la1_1;\n+  static private int[] jj_la1_2;\n+  static private int[] jj_la1_3;\n+  static {\n+      jj_la1_init_0();\n+      jj_la1_init_1();\n+      jj_la1_init_2();\n+      jj_la1_init_3();\n+   }\n+   private static void jj_la1_init_0() {\n+      jj_la1_0 = new int[] {0x8209400,0x0,0x8209400,0x0,0x1000000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1000000,0x0,0x0,0x1000000,0x1000000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1000000,0x0,0x1000000,0x1000000,0x1000000,0x0,0x0,0x0,};\n+   }\n+   private static void jj_la1_init_1() {\n+      jj_la1_1 = new int[] {0x2014,0x0,0x2014,0x0,0x884480c0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x884480c0,0x0,0x0,0x884480c0,0x884480c0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x884480c0,0x0,0x88400080,0x400000,0x884480c0,0x0,0x0,0x40,};\n+   }\n+   private static void jj_la1_init_2() {\n+      jj_la1_2 = new int[] {0x8,0x400,0x0,0x2000,0xf00c004e,0x8000,0x100000,0x4000000,0x8000000,0x0,0x0,0x0,0x2400000,0x2400000,0x0,0x1830000,0x1830000,0x0,0x0,0xc0000000,0xc0000000,0x0,0x0,0xc0000000,0xf00c004e,0xc0000,0xc0000,0x4e,0xc004e,0x40,0x30000000,0x30000000,0x400,0x400,0x40,0x4440,0x4e,0x4440,0x6,0x0,0xf00c004e,0x2000,0x440,0x0,};\n+   }\n+   private static void jj_la1_init_3() {\n+      jj_la1_3 = new int[] {0x0,0x0,0x0,0x0,0x0,0xffe00,0x0,0x0,0x0,0x8,0x10,0x4,0x0,0x0,0x0,0x0,0x0,0x1c0,0x1c0,0x0,0x0,0x23,0x23,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,};\n+   }\n+  final private JJCalls[] jj_2_rtns = new JJCalls[9];\n@@ -3643,0 +2079,1 @@\n+  \/** Constructor with InputStream. *\/\n@@ -3644,1 +2081,5 @@\n-    jj_input_stream = new ASCII_UCodeESC_CharStream(stream, 1, 1);\n+     this(stream, null);\n+  }\n+  \/** Constructor with InputStream and supplied encoding *\/\n+  public ExpressionParser(java.io.InputStream stream, String encoding) {\n+    try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }\n@@ -3649,6 +2090,2 @@\n-      for (int i = 0; i < 44; i++) {\n-         jj_la1[i] = -1;\n-      }\n-      for (int i = 0; i < jj_2_rtns.length; i++) {\n-         jj_2_rtns[i] = new JJExpressionParserCalls();\n-      }\n+    for (int i = 0; i < 44; i++) jj_la1[i] = -1;\n+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n@@ -3657,0 +2094,1 @@\n+  \/** Reinitialise. *\/\n@@ -3658,0 +2096,26 @@\n+     ReInit(stream, null);\n+  }\n+  \/** Reinitialise. *\/\n+  public void ReInit(java.io.InputStream stream, String encoding) {\n+    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }\n+    token_source.ReInit(jj_input_stream);\n+    token = new Token();\n+    jj_ntk = -1;\n+    jj_gen = 0;\n+    for (int i = 0; i < 44; i++) jj_la1[i] = -1;\n+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n+  }\n+\n+  \/** Constructor. *\/\n+  public ExpressionParser(java.io.Reader stream) {\n+    jj_input_stream = new JavaCharStream(stream, 1, 1);\n+    token_source = new ExpressionParserTokenManager(jj_input_stream);\n+    token = new Token();\n+    jj_ntk = -1;\n+    jj_gen = 0;\n+    for (int i = 0; i < 44; i++) jj_la1[i] = -1;\n+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n+  }\n+\n+  \/** Reinitialise. *\/\n+  public void ReInit(java.io.Reader stream) {\n@@ -3663,6 +2127,2 @@\n-      for (int i = 0; i < 44; i++) {\n-         jj_la1[i] = -1;\n-      }\n-      for (int i = 0; i < jj_2_rtns.length; i++) {\n-         jj_2_rtns[i] = new JJExpressionParserCalls();\n-      }\n+    for (int i = 0; i < 44; i++) jj_la1[i] = -1;\n+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n@@ -3671,0 +2131,1 @@\n+  \/** Constructor with generated Token Manager. *\/\n@@ -3676,6 +2137,2 @@\n-      for (int i = 0; i < 44; i++) {\n-         jj_la1[i] = -1;\n-      }\n-      for (int i = 0; i < jj_2_rtns.length; i++) {\n-         jj_2_rtns[i] = new JJExpressionParserCalls();\n-      }\n+    for (int i = 0; i < 44; i++) jj_la1[i] = -1;\n+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n@@ -3684,0 +2141,1 @@\n+  \/** Reinitialise. *\/\n@@ -3689,6 +2147,2 @@\n-      for (int i = 0; i < 44; i++) {\n-         jj_la1[i] = -1;\n-      }\n-      for (int i = 0; i < jj_2_rtns.length; i++) {\n-         jj_2_rtns[i] = new JJExpressionParserCalls();\n-      }\n+    for (int i = 0; i < 44; i++) jj_la1[i] = -1;\n+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n@@ -3697,1 +2151,1 @@\n-  final private Token jj_consume_token(int kind) throws ParseException {\n+  private Token jj_consume_token(int kind) throws ParseException {\n@@ -3699,5 +2153,2 @@\n-      if ((oldToken = token).next != null) {\n-         token = token.next;\n-      } else {\n-         token = token.next = token_source.getNextToken();\n-      }\n+    if ((oldToken = token).next != null) token = token.next;\n+    else token = token.next = token_source.getNextToken();\n@@ -3709,2 +2160,2 @@\n-            for (JJExpressionParserCalls jj_2_rtn : jj_2_rtns) {\n-               JJExpressionParserCalls c = jj_2_rtn;\n+        for (int i = 0; i < jj_2_rtns.length; i++) {\n+          JJCalls c = jj_2_rtns[i];\n@@ -3712,3 +2163,1 @@\n-                  if (c.gen < jj_gen) {\n-                     c.first = null;\n-                  }\n+            if (c.gen < jj_gen) c.first = null;\n@@ -3726,1 +2175,3 @@\n-  final private boolean jj_scan_token(int kind) {\n+  static private final class LookaheadSuccess extends java.lang.Error { }\n+  final private LookaheadSuccess jj_ls = new LookaheadSuccess();\n+  private boolean jj_scan_token(int kind) {\n@@ -3730,2 +2181,1 @@\n-            jj_lastpos = jj_scanpos = jj_scanpos.next = token_source\n-                  .getNextToken();\n+        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n@@ -3739,9 +2189,3 @@\n-         int i = 0;\n-         Token tok = token;\n-         while (tok != null && tok != jj_scanpos) {\n-            i++;\n-            tok = tok.next;\n-         }\n-         if (tok != null) {\n-            jj_add_error_token(kind, i);\n-         }\n+      int i = 0; Token tok = token;\n+      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n+      if (tok != null) jj_add_error_token(kind, i);\n@@ -3749,1 +2193,3 @@\n-    return (jj_scanpos.kind != kind);\n+    if (jj_scanpos.kind != kind) return true;\n+    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n+    return false;\n@@ -3752,0 +2198,2 @@\n+\n+\/** Get the next Token. *\/\n@@ -3753,5 +2201,2 @@\n-      if (token.next != null) {\n-         token = token.next;\n-      } else {\n-         token = token.next = token_source.getNextToken();\n-      }\n+    if (token.next != null) token = token.next;\n+    else token = token.next = token_source.getNextToken();\n@@ -3763,0 +2208,1 @@\n+\/** Get the specific Token. *\/\n@@ -3764,1 +2210,1 @@\n-    Token t = lookingAhead ? jj_scanpos : token;\n+    Token t = token;\n@@ -3766,5 +2212,2 @@\n-         if (t.next != null) {\n-            t = t.next;\n-         } else {\n-            t = t.next = token_source.getNextToken();\n-         }\n+      if (t.next != null) t = t.next;\n+      else t = t.next = token_source.getNextToken();\n@@ -3775,2 +2218,2 @@\n-  final private int jj_ntk() {\n-      if ((jj_nt = token.next) == null) {\n+  private int jj_ntk() {\n+    if ((jj_nt=token.next) == null)\n@@ -3778,1 +2221,1 @@\n-      } else {\n+    else\n@@ -3781,1 +2224,0 @@\n-   }\n@@ -3783,1 +2225,1 @@\n-   private java.util.Vector<int[]> jj_expentries = new java.util.Vector<int[]>();\n+  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();\n@@ -3790,3 +2232,1 @@\n-      if (pos >= 100) {\n-         return;\n-      }\n+    if (pos >= 100) return;\n@@ -3800,4 +2240,2 @@\n-      boolean exists = false;\n-         for (java.util.Enumeration<int[]> enum_ = jj_expentries.elements(); enum_\n-               .hasMoreElements();) {\n-            int[] oldentry = (enum_.nextElement());\n+      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {\n+        int[] oldentry = (int[])(it.next());\n@@ -3805,1 +2243,0 @@\n-          exists = true;\n@@ -3808,2 +2245,1 @@\n-              exists = false;\n-              break;\n+              continue jj_entries_loop;\n@@ -3812,11 +2248,5 @@\n-               if (exists) {\n-                  break;\n-               }\n-            }\n-         }\n-         if (!exists) {\n-            jj_expentries.addElement(jj_expentry);\n-         }\n-         if (pos != 0) {\n-            jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n-         }\n+          jj_expentries.add(jj_expentry);\n+          break jj_entries_loop;\n+        }\n+      }\n+      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n@@ -3826,2 +2256,3 @@\n-  final public ParseException generateParseException() {\n-    jj_expentries.removeAllElements();\n+  \/** Generate ParseException. *\/\n+  public ParseException generateParseException() {\n+    jj_expentries.clear();\n@@ -3829,3 +2260,0 @@\n-    for (int i = 0; i < 116; i++) {\n-      la1tokens[i] = false;\n-    }\n@@ -3858,1 +2286,1 @@\n-        jj_expentries.addElement(jj_expentry);\n+        jj_expentries.add(jj_expentry);\n@@ -3866,1 +2294,1 @@\n-         exptokseq[i] = jj_expentries.elementAt(i);\n+      exptokseq[i] = jj_expentries.get(i);\n@@ -3871,0 +2299,1 @@\n+  \/** Enable tracing. *\/\n@@ -3874,0 +2303,1 @@\n+  \/** Disable tracing. *\/\n@@ -3877,1 +2307,1 @@\n-  final private void jj_rescan_token() {\n+  private void jj_rescan_token() {\n@@ -3880,1 +2310,2 @@\n-      JJExpressionParserCalls p = jj_2_rtns[i];\n+    try {\n+      JJCalls p = jj_2_rtns[i];\n@@ -3883,2 +2314,1 @@\n-               jj_la = p.arg;\n-               jj_lastpos = jj_scanpos = p.first;\n+          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;\n@@ -3886,27 +2316,9 @@\n-               case 0:\n-                  jj_3_1();\n-                  break;\n-               case 1:\n-                  jj_3_2();\n-                  break;\n-               case 2:\n-                  jj_3_3();\n-                  break;\n-               case 3:\n-                  jj_3_4();\n-                  break;\n-               case 4:\n-                  jj_3_5();\n-                  break;\n-               case 5:\n-                  jj_3_6();\n-                  break;\n-               case 6:\n-                  jj_3_7();\n-                  break;\n-               case 7:\n-                  jj_3_8();\n-                  break;\n-               case 8:\n-                  jj_3_9();\n-                  break;\n+            case 0: jj_3_1(); break;\n+            case 1: jj_3_2(); break;\n+            case 2: jj_3_3(); break;\n+            case 3: jj_3_4(); break;\n+            case 4: jj_3_5(); break;\n+            case 5: jj_3_6(); break;\n+            case 6: jj_3_7(); break;\n+            case 7: jj_3_8(); break;\n+            case 8: jj_3_9(); break;\n@@ -3917,0 +2329,1 @@\n+      } catch(LookaheadSuccess ls) { }\n@@ -3921,2 +2334,2 @@\n-  final private void jj_save(int index, int xla) {\n-    JJExpressionParserCalls p = jj_2_rtns[index];\n+  private void jj_save(int index, int xla) {\n+    JJCalls p = jj_2_rtns[index];\n@@ -3924,4 +2337,1 @@\n-         if (p.next == null) {\n-            p = p.next = new JJExpressionParserCalls();\n-            break;\n-         }\n+      if (p.next == null) { p = p.next = new JJCalls(); break; }\n@@ -3930,3 +2340,1 @@\n-      p.gen = jj_gen + xla - jj_la;\n-      p.first = token;\n-      p.arg = xla;\n+    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;\n@@ -3935,1 +2343,6 @@\n-}\n+  static final class JJCalls {\n+    int gen;\n+    Token first;\n+    int arg;\n+    JJCalls next;\n+  }\n@@ -3937,5 +2350,0 @@\n-final class JJExpressionParserCalls {\n-  int gen;\n-  Token first;\n-  int arg;\n-  JJExpressionParserCalls next;\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/ExpressionParser.java","additions":787,"deletions":2379,"binary":false,"changes":3166,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,9 +26,0 @@\n-\/*\n- * This source code is provided to illustrate the usage of a given feature\n- * or technique and has been deliberately simplified. Additional steps\n- * required for a production-quality application, such as security checks,\n- * input validation and proper error handling, might not be present in\n- * this sample code.\n- *\/\n-\n-\n@@ -38,0 +29,5 @@\n+\n+\/**\n+ * Token literal values and constants.\n+ * Generated by org.javacc.parser.OtherFilesGen#start()\n+ *\/\n@@ -40,0 +36,1 @@\n+  \/** End of File. *\/\n@@ -41,0 +38,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -42,0 +40,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -43,0 +42,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -44,0 +44,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -45,0 +46,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -46,0 +48,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -47,0 +50,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -48,0 +52,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -49,0 +54,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -50,0 +56,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -51,0 +58,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -52,0 +60,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -53,0 +62,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -54,0 +64,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -55,0 +66,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -56,0 +68,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -57,0 +70,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -58,0 +72,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -59,0 +74,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -60,0 +76,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -61,0 +78,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -62,0 +80,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -63,0 +82,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -64,0 +84,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -65,0 +86,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -66,0 +88,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -67,0 +90,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -68,0 +92,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -69,0 +94,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -70,0 +96,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -71,0 +98,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -72,0 +100,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -73,0 +102,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -74,0 +104,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -75,0 +106,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -76,0 +108,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -77,0 +110,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -78,0 +112,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -79,0 +114,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -80,0 +116,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -81,0 +118,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -82,0 +120,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -83,0 +122,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -84,0 +124,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -85,0 +126,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -86,0 +128,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -87,0 +130,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -88,0 +132,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -89,0 +134,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -90,0 +136,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -91,0 +138,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -92,0 +140,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -93,0 +142,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -94,0 +144,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -95,0 +146,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -96,0 +148,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -97,0 +150,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -98,0 +152,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -99,0 +154,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -100,0 +156,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -101,0 +158,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -102,0 +160,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -103,0 +162,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -104,0 +164,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -105,0 +166,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -106,0 +168,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -107,0 +170,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -108,0 +172,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -109,0 +174,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -110,0 +176,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -111,0 +178,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -112,0 +180,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -113,0 +182,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -114,0 +184,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -115,0 +186,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -116,0 +188,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -117,0 +190,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -118,0 +192,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -119,0 +194,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -120,0 +196,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -121,0 +198,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -122,0 +200,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -123,0 +202,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -124,0 +204,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -125,0 +206,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -126,0 +208,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -127,0 +210,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -128,0 +212,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -129,0 +214,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -130,0 +216,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -131,0 +218,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -132,0 +220,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -133,0 +222,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -134,0 +224,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -135,0 +226,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -136,0 +228,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -137,0 +230,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -138,0 +232,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -139,0 +234,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -140,0 +236,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -141,0 +238,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -142,0 +240,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -143,0 +242,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -144,0 +244,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -145,0 +246,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -146,0 +248,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -147,0 +250,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -148,0 +252,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -149,0 +254,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -150,0 +256,1 @@\n+  \/** RegularExpression Id. *\/\n@@ -152,0 +259,1 @@\n+  \/** Lexical state. *\/\n@@ -154,0 +262,1 @@\n+  \/** Literal token values. *\/\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/ExpressionParserConstants.java","additions":119,"deletions":10,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,9 +26,0 @@\n-\/*\n- * This source code is provided to illustrate the usage of a given feature\n- * or technique and has been deliberately simplified. Additional steps\n- * required for a production-quality application, such as security checks,\n- * input validation and proper error handling, might not be present in\n- * this sample code.\n- *\/\n-\n-\n@@ -37,0 +28,4 @@\n+import com.sun.jdi.*;\n+import java.util.Stack;\n+import java.util.List;\n+import java.util.ArrayList;\n@@ -38,0 +33,1 @@\n+\/** Token Manager. *\/\n@@ -40,0 +36,5 @@\n+\n+  \/** Debug output. *\/\n+  public  java.io.PrintStream debugStream = System.out;\n+  \/** Set debug output. *\/\n+  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }\n@@ -45,1 +46,3 @@\n-         if ((active1 & 0x4000L) != 0L) {\n+         if ((active1 & 0x100200000000L) != 0L)\n+            return 49;\n+         if ((active1 & 0x4000L) != 0L)\n@@ -47,1 +50,0 @@\n-         }\n@@ -53,3 +55,0 @@\n-         if ((active1 & 0x100200000000L) != 0L) {\n-            return 49;\n-         }\n@@ -58,0 +57,2 @@\n+         if ((active0 & 0x40300000L) != 0L)\n+            return 28;\n@@ -67,3 +68,0 @@\n-         if ((active0 & 0x40300000L) != 0L) {\n-            return 28;\n-         }\n@@ -72,0 +70,2 @@\n+         if ((active0 & 0x80004c10000000L) != 0L)\n+            return 28;\n@@ -81,3 +81,0 @@\n-         if ((active0 & 0x80004c10000000L) != 0L) {\n-            return 28;\n-         }\n@@ -92,1 +89,1 @@\n-         if ((active0 & 0x14400902040b000L) != 0L) {\n+         if ((active0 & 0x14400902040b000L) != 0L)\n@@ -94,1 +91,0 @@\n-         }\n@@ -97,0 +93,2 @@\n+         if ((active0 & 0x418a0000f034800L) != 0L)\n+            return 28;\n@@ -106,3 +104,0 @@\n-         if ((active0 & 0x418a0000f034800L) != 0L) {\n-            return 28;\n-         }\n@@ -111,0 +106,2 @@\n+         if ((active0 & 0x11582100200000L) != 0L)\n+            return 28;\n@@ -117,3 +114,0 @@\n-         if ((active0 & 0x11582100200000L) != 0L) {\n-            return 28;\n-         }\n@@ -128,1 +122,1 @@\n-         if ((active0 & 0x30004880400L) != 0L) {\n+         if ((active0 & 0x30004880400L) != 0L)\n@@ -130,1 +124,0 @@\n-         }\n@@ -133,0 +126,2 @@\n+         if ((active0 & 0x200000000040200L) != 0L)\n+            return 28;\n@@ -139,3 +134,0 @@\n-         if ((active0 & 0x200000000040200L) != 0L) {\n-            return 28;\n-         }\n@@ -144,0 +136,2 @@\n+         if ((active0 & 0x20040800000000L) != 0L)\n+            return 28;\n@@ -150,3 +144,0 @@\n-         if ((active0 & 0x20040800000000L) != 0L) {\n-            return 28;\n-         }\n@@ -161,1 +152,1 @@\n-         if ((active0 & 0x280000000L) != 0L) {\n+         if ((active0 & 0x280000000L) != 0L)\n@@ -163,1 +154,0 @@\n-         }\n@@ -181,1 +171,1 @@\n-private final int jjStopAtPos(int pos, int kind)\n+private int jjStopAtPos(int pos, int kind)\n@@ -187,9 +177,1 @@\n-private final int jjStartNfaWithStates_0(int pos, int kind, int state)\n-{\n-   jjmatchedKind = kind;\n-   jjmatchedPos = pos;\n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) { return pos + 1; }\n-   return jjMoveNfa_0(state, pos + 1);\n-}\n-private final int jjMoveStringLiteralDfa0_0()\n+private int jjMoveStringLiteralDfa0_0()\n@@ -295,1 +277,1 @@\n-private final int jjMoveStringLiteralDfa1_0(long active0, long active1)\n+private int jjMoveStringLiteralDfa1_0(long active0, long active1)\n@@ -305,1 +287,1 @@\n-         if ((active1 & 0x8000000L) != 0L) {\n+         if ((active1 & 0x8000000L) != 0L)\n@@ -307,1 +289,0 @@\n-         }\n@@ -310,1 +291,1 @@\n-         if ((active1 & 0x10000000L) != 0L) {\n+         if ((active1 & 0x10000000L) != 0L)\n@@ -312,1 +293,0 @@\n-         }\n@@ -315,1 +295,1 @@\n-         if ((active1 & 0x20000000L) != 0L) {\n+         if ((active1 & 0x20000000L) != 0L)\n@@ -317,1 +297,0 @@\n-         }\n@@ -327,1 +306,1 @@\n-         if ((active1 & 0x400000L) != 0L) {\n+         if ((active1 & 0x400000L) != 0L)\n@@ -329,1 +308,1 @@\n-         } else if ((active1 & 0x800000L) != 0L) {\n+         else if ((active1 & 0x800000L) != 0L)\n@@ -331,1 +310,1 @@\n-         } else if ((active1 & 0x1000000L) != 0L) {\n+         else if ((active1 & 0x1000000L) != 0L)\n@@ -333,1 +312,1 @@\n-         } else if ((active1 & 0x2000000L) != 0L) {\n+         else if ((active1 & 0x2000000L) != 0L)\n@@ -335,1 +314,1 @@\n-         } else if ((active1 & 0x20000000000L) != 0L) {\n+         else if ((active1 & 0x20000000000L) != 0L)\n@@ -337,1 +316,1 @@\n-         } else if ((active1 & 0x40000000000L) != 0L) {\n+         else if ((active1 & 0x40000000000L) != 0L)\n@@ -339,1 +318,1 @@\n-         } else if ((active1 & 0x80000000000L) != 0L) {\n+         else if ((active1 & 0x80000000000L) != 0L)\n@@ -341,1 +320,1 @@\n-         } else if ((active1 & 0x100000000000L) != 0L) {\n+         else if ((active1 & 0x100000000000L) != 0L)\n@@ -343,1 +322,1 @@\n-         } else if ((active1 & 0x200000000000L) != 0L) {\n+         else if ((active1 & 0x200000000000L) != 0L)\n@@ -345,1 +324,1 @@\n-         } else if ((active1 & 0x400000000000L) != 0L) {\n+         else if ((active1 & 0x400000000000L) != 0L)\n@@ -347,1 +326,1 @@\n-         } else if ((active1 & 0x800000000000L) != 0L) {\n+         else if ((active1 & 0x800000000000L) != 0L)\n@@ -349,1 +328,1 @@\n-         } else if ((active1 & 0x1000000000000L) != 0L) {\n+         else if ((active1 & 0x1000000000000L) != 0L)\n@@ -351,1 +330,0 @@\n-         }\n@@ -367,1 +345,1 @@\n-         if ((active0 & 0x40000000L) != 0L) {\n+         if ((active0 & 0x40000000L) != 0L)\n@@ -369,1 +347,0 @@\n-         }\n@@ -401,1 +378,1 @@\n-         if ((active1 & 0x4000000L) != 0L) {\n+         if ((active1 & 0x4000000L) != 0L)\n@@ -403,1 +380,0 @@\n-         }\n@@ -410,1 +386,1 @@\n-private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)\n+private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)\n@@ -412,1 +388,1 @@\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n@@ -414,1 +390,0 @@\n-   }\n@@ -423,1 +398,1 @@\n-         if ((active1 & 0x2000000000000L) != 0L) {\n+         if ((active1 & 0x2000000000000L) != 0L)\n@@ -425,1 +400,1 @@\n-         } else if ((active1 & 0x4000000000000L) != 0L) {\n+         else if ((active1 & 0x4000000000000L) != 0L)\n@@ -427,1 +402,0 @@\n-         }\n@@ -457,1 +431,1 @@\n-         if ((active0 & 0x10000000L) != 0L) {\n+         if ((active0 & 0x10000000L) != 0L)\n@@ -459,1 +433,0 @@\n-         }\n@@ -473,1 +446,1 @@\n-         if ((active0 & 0x4000000000L) != 0L) {\n+         if ((active0 & 0x4000000000L) != 0L)\n@@ -475,1 +448,0 @@\n-         }\n@@ -478,1 +450,1 @@\n-         if ((active0 & 0x80000000000000L) != 0L) {\n+         if ((active0 & 0x80000000000000L) != 0L)\n@@ -480,1 +452,0 @@\n-         }\n@@ -487,1 +458,1 @@\n-private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)\n+private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)\n@@ -489,1 +460,1 @@\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n@@ -491,1 +462,0 @@\n-   }\n@@ -500,1 +470,1 @@\n-         if ((active1 & 0x8000000000000L) != 0L) {\n+         if ((active1 & 0x8000000000000L) != 0L)\n@@ -502,1 +472,0 @@\n-         }\n@@ -511,1 +480,1 @@\n-         if ((active0 & 0x100000000000000L) != 0L) {\n+         if ((active0 & 0x100000000000000L) != 0L)\n@@ -513,1 +482,0 @@\n-         }\n@@ -516,1 +484,1 @@\n-         if ((active0 & 0x1000L) != 0L) {\n+         if ((active0 & 0x1000L) != 0L)\n@@ -518,1 +486,1 @@\n-         } else if ((active0 & 0x2000L) != 0L) {\n+         else if ((active0 & 0x2000L) != 0L)\n@@ -520,1 +488,1 @@\n-         } else if ((active0 & 0x400000L) != 0L) {\n+         else if ((active0 & 0x400000L) != 0L)\n@@ -522,1 +490,1 @@\n-         } else if ((active0 & 0x40000000000000L) != 0L) {\n+         else if ((active0 & 0x40000000000000L) != 0L)\n@@ -524,1 +492,0 @@\n-         }\n@@ -527,1 +494,1 @@\n-         if ((active0 & 0x1000000000L) != 0L) {\n+         if ((active0 & 0x1000000000L) != 0L)\n@@ -529,1 +496,0 @@\n-         }\n@@ -536,1 +502,1 @@\n-         if ((active0 & 0x8000000000L) != 0L) {\n+         if ((active0 & 0x8000000000L) != 0L)\n@@ -538,1 +504,0 @@\n-         }\n@@ -543,1 +508,1 @@\n-         if ((active0 & 0x20000000L) != 0L) {\n+         if ((active0 & 0x20000000L) != 0L)\n@@ -545,1 +510,0 @@\n-         }\n@@ -548,1 +512,1 @@\n-         if ((active0 & 0x8000L) != 0L) {\n+         if ((active0 & 0x8000L) != 0L)\n@@ -550,1 +514,0 @@\n-         }\n@@ -553,1 +516,1 @@\n-         if ((active0 & 0x4000000000000L) != 0L) {\n+         if ((active0 & 0x4000000000000L) != 0L)\n@@ -555,1 +518,0 @@\n-         }\n@@ -568,1 +530,1 @@\n-private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)\n+private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)\n@@ -570,1 +532,1 @@\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n@@ -572,1 +534,0 @@\n-   }\n@@ -585,1 +546,1 @@\n-         if ((active0 & 0x1000000L) != 0L) {\n+         if ((active0 & 0x1000000L) != 0L)\n@@ -587,1 +548,1 @@\n-         } else if ((active0 & 0x400000000000000L) != 0L) {\n+         else if ((active0 & 0x400000000000000L) != 0L)\n@@ -589,1 +550,0 @@\n-         }\n@@ -592,1 +552,1 @@\n-         if ((active0 & 0x4000L) != 0L) {\n+         if ((active0 & 0x4000L) != 0L)\n@@ -594,1 +554,0 @@\n-         }\n@@ -599,1 +558,1 @@\n-         if ((active0 & 0x800L) != 0L) {\n+         if ((active0 & 0x800L) != 0L)\n@@ -601,1 +560,0 @@\n-         }\n@@ -613,1 +571,1 @@\n-         if ((active0 & 0x800000000000L) != 0L) {\n+         if ((active0 & 0x800000000000L) != 0L)\n@@ -615,1 +573,0 @@\n-         }\n@@ -618,1 +575,1 @@\n-         if ((active0 & 0x10000L) != 0L) {\n+         if ((active0 & 0x10000L) != 0L)\n@@ -620,1 +577,0 @@\n-         }\n@@ -623,1 +579,1 @@\n-         if ((active0 & 0x20000L) != 0L) {\n+         if ((active0 & 0x20000L) != 0L)\n@@ -625,1 +581,1 @@\n-         } else if ((active0 & 0x8000000L) != 0L) {\n+         else if ((active0 & 0x8000000L) != 0L)\n@@ -627,1 +583,1 @@\n-         } else if ((active0 & 0x200000000000L) != 0L) {\n+         else if ((active0 & 0x200000000000L) != 0L)\n@@ -629,1 +585,0 @@\n-         }\n@@ -647,1 +602,1 @@\n-private final int jjMoveStringLiteralDfa5_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa5_0(long old0, long active0)\n@@ -649,1 +604,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -651,1 +606,0 @@\n-   }\n@@ -662,1 +616,1 @@\n-         if ((active0 & 0x80000000000L) != 0L) {\n+         if ((active0 & 0x80000000000L) != 0L)\n@@ -664,1 +618,1 @@\n-         } else if ((active0 & 0x400000000000L) != 0L) {\n+         else if ((active0 & 0x400000000000L) != 0L)\n@@ -666,1 +620,0 @@\n-         }\n@@ -671,1 +624,1 @@\n-         if ((active0 & 0x200000L) != 0L) {\n+         if ((active0 & 0x200000L) != 0L)\n@@ -673,1 +626,1 @@\n-         } else if ((active0 & 0x2000000000L) != 0L) {\n+         else if ((active0 & 0x2000000000L) != 0L)\n@@ -675,1 +628,0 @@\n-         }\n@@ -682,1 +634,1 @@\n-         if ((active0 & 0x1000000000000L) != 0L) {\n+         if ((active0 & 0x1000000000000L) != 0L)\n@@ -684,1 +636,0 @@\n-         }\n@@ -693,1 +644,1 @@\n-         if ((active0 & 0x100000000000L) != 0L) {\n+         if ((active0 & 0x100000000000L) != 0L)\n@@ -695,1 +646,0 @@\n-         }\n@@ -700,1 +650,1 @@\n-         if ((active0 & 0x10000000000000L) != 0L) {\n+         if ((active0 & 0x10000000000000L) != 0L)\n@@ -702,1 +652,0 @@\n-         }\n@@ -705,1 +654,1 @@\n-         if ((active0 & 0x100000000L) != 0L) {\n+         if ((active0 & 0x100000000L) != 0L)\n@@ -707,1 +656,0 @@\n-         }\n@@ -714,1 +662,1 @@\n-private final int jjMoveStringLiteralDfa6_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa6_0(long old0, long active0)\n@@ -716,1 +664,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -718,1 +666,0 @@\n-   }\n@@ -731,1 +678,1 @@\n-         if ((active0 & 0x10000000000L) != 0L) {\n+         if ((active0 & 0x10000000000L) != 0L)\n@@ -733,1 +680,1 @@\n-         } else if ((active0 & 0x20000000000L) != 0L) {\n+         else if ((active0 & 0x20000000000L) != 0L)\n@@ -735,1 +682,0 @@\n-         }\n@@ -740,1 +686,1 @@\n-         if ((active0 & 0x400L) != 0L) {\n+         if ((active0 & 0x400L) != 0L)\n@@ -742,1 +688,0 @@\n-         }\n@@ -747,1 +692,1 @@\n-         if ((active0 & 0x800000L) != 0L) {\n+         if ((active0 & 0x800000L) != 0L)\n@@ -749,1 +694,0 @@\n-         }\n@@ -752,1 +696,1 @@\n-         if ((active0 & 0x80000L) != 0L) {\n+         if ((active0 & 0x80000L) != 0L)\n@@ -754,1 +698,0 @@\n-         }\n@@ -759,1 +702,1 @@\n-         if ((active0 & 0x4000000L) != 0L) {\n+         if ((active0 & 0x4000000L) != 0L)\n@@ -761,1 +704,0 @@\n-         }\n@@ -768,1 +710,1 @@\n-private final int jjMoveStringLiteralDfa7_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa7_0(long old0, long active0)\n@@ -770,1 +712,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -772,1 +714,0 @@\n-   }\n@@ -783,1 +724,1 @@\n-         if ((active0 & 0x40000L) != 0L) {\n+         if ((active0 & 0x40000L) != 0L)\n@@ -785,1 +726,1 @@\n-         } else if ((active0 & 0x200000000000000L) != 0L) {\n+         else if ((active0 & 0x200000000000000L) != 0L)\n@@ -787,1 +728,0 @@\n-         }\n@@ -792,1 +732,1 @@\n-         if ((active0 & 0x200L) != 0L) {\n+         if ((active0 & 0x200L) != 0L)\n@@ -794,1 +734,0 @@\n-         }\n@@ -801,1 +740,1 @@\n-private final int jjMoveStringLiteralDfa8_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa8_0(long old0, long active0)\n@@ -803,1 +742,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -805,1 +744,0 @@\n-   }\n@@ -814,1 +752,1 @@\n-         if ((active0 & 0x40000000000L) != 0L) {\n+         if ((active0 & 0x40000000000L) != 0L)\n@@ -816,1 +754,0 @@\n-         }\n@@ -819,1 +756,1 @@\n-         if ((active0 & 0x800000000L) != 0L) {\n+         if ((active0 & 0x800000000L) != 0L)\n@@ -821,1 +758,0 @@\n-         }\n@@ -828,1 +764,1 @@\n-         if ((active0 & 0x20000000000000L) != 0L) {\n+         if ((active0 & 0x20000000000000L) != 0L)\n@@ -830,1 +766,0 @@\n-         }\n@@ -837,1 +772,1 @@\n-private final int jjMoveStringLiteralDfa9_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa9_0(long old0, long active0)\n@@ -839,1 +774,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -841,1 +776,0 @@\n-   }\n@@ -850,1 +784,1 @@\n-         if ((active0 & 0x200000000L) != 0L) {\n+         if ((active0 & 0x200000000L) != 0L)\n@@ -852,1 +786,0 @@\n-         }\n@@ -855,1 +788,1 @@\n-         if ((active0 & 0x80000000L) != 0L) {\n+         if ((active0 & 0x80000000L) != 0L)\n@@ -857,1 +790,0 @@\n-         }\n@@ -866,1 +798,1 @@\n-private final int jjMoveStringLiteralDfa10_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa10_0(long old0, long active0)\n@@ -868,1 +800,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -870,1 +802,0 @@\n-   }\n@@ -885,1 +816,1 @@\n-private final int jjMoveStringLiteralDfa11_0(long old0, long active0)\n+private int jjMoveStringLiteralDfa11_0(long old0, long active0)\n@@ -887,1 +818,1 @@\n-   if (((active0 &= old0)) == 0L) {\n+   if (((active0 &= old0)) == 0L)\n@@ -889,1 +820,0 @@\n-   }\n@@ -898,1 +828,1 @@\n-         if ((active0 & 0x2000000000000L) != 0L) {\n+         if ((active0 & 0x2000000000000L) != 0L)\n@@ -900,1 +830,0 @@\n-         }\n@@ -907,20 +836,1 @@\n-private final void jjCheckNAdd(int state)\n-{\n-   if (jjrounds[state] != jjround)\n-   {\n-      jjstateSet[jjnewStateCnt++] = state;\n-      jjrounds[state] = jjround;\n-   }\n-}\n-private final void jjAddStates(int start, int end)\n-{\n-   do {\n-      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\n-   } while (start++ != end);\n-}\n-private final void jjCheckNAddTwoStates(int state1, int state2)\n-{\n-   jjCheckNAdd(state1);\n-   jjCheckNAdd(state2);\n-}\n-private final void jjCheckNAddStates(int start, int end)\n+private int jjStartNfaWithStates_0(int pos, int kind, int state)\n@@ -928,8 +838,5 @@\n-   do {\n-      jjCheckNAdd(jjnextStates[start]);\n-   } while (start++ != end);\n-}\n-private final void jjCheckNAddStates(int start)\n-{\n-   jjCheckNAdd(jjnextStates[start]);\n-   jjCheckNAdd(jjnextStates[start + 1]);\n+   jjmatchedKind = kind;\n+   jjmatchedPos = pos;\n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) { return pos + 1; }\n+   return jjMoveNfa_0(state, pos + 1);\n@@ -961,1 +868,1 @@\n-private final int jjMoveNfa_0(int startState, int curPos)\n+private int jjMoveNfa_0(int startState, int curPos)\n@@ -970,1 +877,1 @@\n-      if (++jjround == 0x7fffffff) {\n+      if (++jjround == 0x7fffffff)\n@@ -972,1 +879,0 @@\n-      }\n@@ -976,1 +882,0 @@\n-         \/\/MatchLoop\n@@ -981,0 +886,8 @@\n+               case 49:\n+                  if (curChar == 42)\n+                     jjCheckNAddTwoStates(62, 63);\n+                  else if (curChar == 47)\n+                     jjCheckNAddStates(0, 2);\n+                  if (curChar == 42)\n+                     jjstateSet[jjnewStateCnt++] = 54;\n+                  break;\n@@ -982,5 +895,5 @@\n-                  if ((0x3ff000000000000L & l) != 0L) {\n-                     jjCheckNAddStates(0, 6);\n-                  } else if (curChar == 47) {\n-                     jjAddStates(7, 9);\n-                  } else if (curChar == 36)\n+                  if ((0x3ff000000000000L & l) != 0L)\n+                     jjCheckNAddStates(3, 9);\n+                  else if (curChar == 47)\n+                     jjAddStates(10, 12);\n+                  else if (curChar == 36)\n@@ -988,1 +901,1 @@\n-                     if (kind > 67) {\n+                     if (kind > 67)\n@@ -990,1 +903,0 @@\n-                     }\n@@ -993,5 +905,5 @@\n-                  else if (curChar == 34) {\n-                     jjCheckNAddStates(10, 12);\n-                  } else if (curChar == 39) {\n-                     jjAddStates(13, 14);\n-                  } else if (curChar == 46) {\n+                  else if (curChar == 34)\n+                     jjCheckNAddStates(13, 15);\n+                  else if (curChar == 39)\n+                     jjAddStates(16, 17);\n+                  else if (curChar == 46)\n@@ -999,1 +911,0 @@\n-                  }\n@@ -1002,1 +913,1 @@\n-                     if (kind > 59) {\n+                     if (kind > 59)\n@@ -1004,1 +915,0 @@\n-                     }\n@@ -1009,1 +919,1 @@\n-                     if (kind > 59) {\n+                     if (kind > 59)\n@@ -1011,8 +921,0 @@\n-                     }\n-                     jjCheckNAddStates(15, 17);\n-                  }\n-                  break;\n-               case 49:\n-                  if (curChar == 42) {\n-                     jjCheckNAddTwoStates(62, 63);\n-                  } else if (curChar == 47) {\n@@ -1021,3 +923,0 @@\n-                  if (curChar == 42) {\n-                     jjstateSet[jjnewStateCnt++] = 54;\n-                  }\n@@ -1026,1 +925,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1028,2 +927,1 @@\n-                  }\n-                  if (kind > 59) {\n+                  if (kind > 59)\n@@ -1031,1 +929,0 @@\n-                  }\n@@ -1035,1 +932,1 @@\n-                  if (curChar == 46) {\n+                  if (curChar == 46)\n@@ -1037,1 +934,0 @@\n-                  }\n@@ -1040,1 +936,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1042,2 +938,1 @@\n-                  }\n-                  if (kind > 63) {\n+                  if (kind > 63)\n@@ -1045,1 +940,0 @@\n-                  }\n@@ -1049,1 +943,1 @@\n-                  if ((0x280000000000L & l) != 0L) {\n+                  if ((0x280000000000L & l) != 0L)\n@@ -1051,1 +945,0 @@\n-                  }\n@@ -1054,1 +947,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1056,2 +949,1 @@\n-                  }\n-                  if (kind > 63) {\n+                  if (kind > 63)\n@@ -1059,1 +951,0 @@\n-                  }\n@@ -1063,3 +954,2 @@\n-                  if (curChar == 39) {\n-                     jjAddStates(13, 14);\n-                  }\n+                  if (curChar == 39)\n+                     jjAddStates(16, 17);\n@@ -1068,1 +958,1 @@\n-                  if ((0xffffff7fffffdbffL & l) != 0L) {\n+                  if ((0xffffff7fffffdbffL & l) != 0L)\n@@ -1070,1 +960,0 @@\n-                  }\n@@ -1073,1 +962,1 @@\n-                  if (curChar == 39 && kind > 65) {\n+                  if (curChar == 39 && kind > 65)\n@@ -1075,1 +964,0 @@\n-                  }\n@@ -1078,1 +966,1 @@\n-                  if ((0x8400000000L & l) != 0L) {\n+                  if ((0x8400000000L & l) != 0L)\n@@ -1080,1 +968,0 @@\n-                  }\n@@ -1083,1 +970,1 @@\n-                  if ((0xff000000000000L & l) != 0L) {\n+                  if ((0xff000000000000L & l) != 0L)\n@@ -1085,1 +972,0 @@\n-                  }\n@@ -1088,1 +974,1 @@\n-                  if ((0xff000000000000L & l) != 0L) {\n+                  if ((0xff000000000000L & l) != 0L)\n@@ -1090,1 +976,0 @@\n-                  }\n@@ -1093,1 +978,1 @@\n-                  if ((0xf000000000000L & l) != 0L) {\n+                  if ((0xf000000000000L & l) != 0L)\n@@ -1095,1 +980,0 @@\n-                  }\n@@ -1098,1 +982,1 @@\n-                  if ((0xff000000000000L & l) != 0L) {\n+                  if ((0xff000000000000L & l) != 0L)\n@@ -1100,1 +984,0 @@\n-                  }\n@@ -1103,3 +986,2 @@\n-                  if (curChar == 34) {\n-                     jjCheckNAddStates(10, 12);\n-                  }\n+                  if (curChar == 34)\n+                     jjCheckNAddStates(13, 15);\n@@ -1108,3 +990,2 @@\n-                  if ((0xfffffffbffffdbffL & l) != 0L) {\n-                     jjCheckNAddStates(10, 12);\n-                  }\n+                  if ((0xfffffffbffffdbffL & l) != 0L)\n+                     jjCheckNAddStates(13, 15);\n@@ -1113,3 +994,2 @@\n-                  if ((0x8400000000L & l) != 0L) {\n-                     jjCheckNAddStates(10, 12);\n-                  }\n+                  if ((0x8400000000L & l) != 0L)\n+                     jjCheckNAddStates(13, 15);\n@@ -1118,1 +998,1 @@\n-                  if (curChar == 34 && kind > 66) {\n+                  if (curChar == 34 && kind > 66)\n@@ -1120,1 +1000,0 @@\n-                  }\n@@ -1123,1 +1002,1 @@\n-                  if ((0xff000000000000L & l) != 0L) {\n+                  if ((0xff000000000000L & l) != 0L)\n@@ -1125,1 +1004,0 @@\n-                  }\n@@ -1128,3 +1006,2 @@\n-                  if ((0xff000000000000L & l) != 0L) {\n-                     jjCheckNAddStates(10, 12);\n-                  }\n+                  if ((0xff000000000000L & l) != 0L)\n+                     jjCheckNAddStates(13, 15);\n@@ -1133,1 +1010,1 @@\n-                  if ((0xf000000000000L & l) != 0L) {\n+                  if ((0xf000000000000L & l) != 0L)\n@@ -1135,1 +1012,0 @@\n-                  }\n@@ -1138,1 +1014,1 @@\n-                  if ((0xff000000000000L & l) != 0L) {\n+                  if ((0xff000000000000L & l) != 0L)\n@@ -1140,1 +1016,0 @@\n-                  }\n@@ -1143,1 +1018,1 @@\n-                  if (curChar != 36) {\n+                  if (curChar != 36)\n@@ -1145,2 +1020,1 @@\n-                  }\n-                  if (kind > 67) {\n+                  if (kind > 67)\n@@ -1148,1 +1022,0 @@\n-                  }\n@@ -1152,1 +1025,1 @@\n-                  if ((0x3ff001000000000L & l) == 0L) {\n+                  if ((0x3ff001000000000L & l) == 0L)\n@@ -1154,2 +1027,1 @@\n-                  }\n-                  if (kind > 67) {\n+                  if (kind > 67)\n@@ -1157,1 +1029,0 @@\n-                  }\n@@ -1161,3 +1032,2 @@\n-                  if ((0x3ff000000000000L & l) != 0L) {\n-                     jjCheckNAddStates(0, 6);\n-                  }\n+                  if ((0x3ff000000000000L & l) != 0L)\n+                     jjCheckNAddStates(3, 9);\n@@ -1166,1 +1036,1 @@\n-                  if ((0x3ff000000000000L & l) != 0L) {\n+                  if ((0x3ff000000000000L & l) != 0L)\n@@ -1168,1 +1038,0 @@\n-                  }\n@@ -1171,1 +1040,1 @@\n-                  if (curChar != 46) {\n+                  if (curChar != 46)\n@@ -1173,2 +1042,1 @@\n-                  }\n-                  if (kind > 63) {\n+                  if (kind > 63)\n@@ -1176,1 +1044,0 @@\n-                  }\n@@ -1180,1 +1047,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1182,2 +1049,1 @@\n-                  }\n-                  if (kind > 63) {\n+                  if (kind > 63)\n@@ -1185,1 +1051,0 @@\n-                  }\n@@ -1189,1 +1054,1 @@\n-                  if ((0x280000000000L & l) != 0L) {\n+                  if ((0x280000000000L & l) != 0L)\n@@ -1191,1 +1056,0 @@\n-                  }\n@@ -1194,1 +1058,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1196,2 +1060,1 @@\n-                  }\n-                  if (kind > 63) {\n+                  if (kind > 63)\n@@ -1199,1 +1062,0 @@\n-                  }\n@@ -1203,1 +1065,1 @@\n-                  if ((0x3ff000000000000L & l) != 0L) {\n+                  if ((0x3ff000000000000L & l) != 0L)\n@@ -1205,1 +1067,0 @@\n-                  }\n@@ -1208,1 +1069,1 @@\n-                  if ((0x280000000000L & l) != 0L) {\n+                  if ((0x280000000000L & l) != 0L)\n@@ -1210,1 +1071,0 @@\n-                  }\n@@ -1213,1 +1073,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1215,2 +1075,1 @@\n-                  }\n-                  if (kind > 63) {\n+                  if (kind > 63)\n@@ -1218,1 +1077,0 @@\n-                  }\n@@ -1222,1 +1080,1 @@\n-                  if ((0x3ff000000000000L & l) != 0L) {\n+                  if ((0x3ff000000000000L & l) != 0L)\n@@ -1224,1 +1082,0 @@\n-                  }\n@@ -1227,1 +1084,1 @@\n-                  if ((0x280000000000L & l) != 0L) {\n+                  if ((0x280000000000L & l) != 0L)\n@@ -1229,1 +1086,0 @@\n-                  }\n@@ -1232,1 +1088,1 @@\n-                  if ((0x3ff000000000000L & l) != 0L) {\n+                  if ((0x3ff000000000000L & l) != 0L)\n@@ -1234,1 +1090,0 @@\n-                  }\n@@ -1237,1 +1092,1 @@\n-                  if (curChar != 48) {\n+                  if (curChar != 48)\n@@ -1239,2 +1094,1 @@\n-                  }\n-                  if (kind > 59) {\n+                  if (kind > 59)\n@@ -1242,2 +1096,1 @@\n-                  }\n-                  jjCheckNAddStates(15, 17);\n+                  jjCheckNAddStates(18, 20);\n@@ -1246,1 +1099,1 @@\n-                  if ((0x3ff000000000000L & l) == 0L) {\n+                  if ((0x3ff000000000000L & l) == 0L)\n@@ -1248,2 +1101,1 @@\n-                  }\n-                  if (kind > 59) {\n+                  if (kind > 59)\n@@ -1251,1 +1103,0 @@\n-                  }\n@@ -1255,1 +1106,1 @@\n-                  if ((0xff000000000000L & l) == 0L) {\n+                  if ((0xff000000000000L & l) == 0L)\n@@ -1257,2 +1108,1 @@\n-                  }\n-                  if (kind > 59) {\n+                  if (kind > 59)\n@@ -1260,1 +1110,0 @@\n-                  }\n@@ -1264,3 +1113,2 @@\n-                  if (curChar == 47) {\n-                     jjAddStates(7, 9);\n-                  }\n+                  if (curChar == 47)\n+                     jjAddStates(10, 12);\n@@ -1269,3 +1117,2 @@\n-                  if ((0xffffffffffffdbffL & l) != 0L) {\n-                     jjCheckNAddStates(18, 20);\n-                  }\n+                  if ((0xffffffffffffdbffL & l) != 0L)\n+                     jjCheckNAddStates(0, 2);\n@@ -1274,1 +1121,1 @@\n-                  if ((0x2400L & l) != 0L && kind > 6) {\n+                  if ((0x2400L & l) != 0L && kind > 6)\n@@ -1276,1 +1123,0 @@\n-                  }\n@@ -1279,1 +1125,1 @@\n-                  if (curChar == 10 && kind > 6) {\n+                  if (curChar == 10 && kind > 6)\n@@ -1281,1 +1127,0 @@\n-                  }\n@@ -1284,1 +1129,1 @@\n-                  if (curChar == 13) {\n+                  if (curChar == 13)\n@@ -1286,1 +1131,0 @@\n-                  }\n@@ -1289,1 +1133,1 @@\n-                  if (curChar == 42) {\n+                  if (curChar == 42)\n@@ -1291,1 +1135,0 @@\n-                  }\n@@ -1294,1 +1137,1 @@\n-                  if ((0xfffffbffffffffffL & l) != 0L) {\n+                  if ((0xfffffbffffffffffL & l) != 0L)\n@@ -1296,1 +1139,0 @@\n-                  }\n@@ -1299,1 +1141,1 @@\n-                  if (curChar == 42) {\n+                  if (curChar == 42)\n@@ -1301,1 +1143,0 @@\n-                  }\n@@ -1304,1 +1145,1 @@\n-                  if ((0xffff7bffffffffffL & l) != 0L) {\n+                  if ((0xffff7bffffffffffL & l) != 0L)\n@@ -1306,1 +1147,0 @@\n-                  }\n@@ -1309,1 +1149,1 @@\n-                  if ((0xfffffbffffffffffL & l) != 0L) {\n+                  if ((0xfffffbffffffffffL & l) != 0L)\n@@ -1311,1 +1151,0 @@\n-                  }\n@@ -1314,1 +1153,1 @@\n-                  if (curChar == 47 && kind > 7) {\n+                  if (curChar == 47 && kind > 7)\n@@ -1316,1 +1155,0 @@\n-                  }\n@@ -1319,1 +1157,1 @@\n-                  if (curChar == 42) {\n+                  if (curChar == 42)\n@@ -1321,1 +1159,0 @@\n-                  }\n@@ -1324,1 +1161,1 @@\n-                  if (curChar == 42) {\n+                  if (curChar == 42)\n@@ -1326,1 +1163,0 @@\n-                  }\n@@ -1329,1 +1165,1 @@\n-                  if ((0xfffffbffffffffffL & l) != 0L) {\n+                  if ((0xfffffbffffffffffL & l) != 0L)\n@@ -1331,1 +1167,0 @@\n-                  }\n@@ -1334,1 +1169,1 @@\n-                  if (curChar == 42) {\n+                  if (curChar == 42)\n@@ -1336,1 +1171,0 @@\n-                  }\n@@ -1339,1 +1173,1 @@\n-                  if ((0xffff7bffffffffffL & l) != 0L) {\n+                  if ((0xffff7bffffffffffL & l) != 0L)\n@@ -1341,1 +1175,0 @@\n-                  }\n@@ -1344,1 +1177,1 @@\n-                  if ((0xfffffbffffffffffL & l) != 0L) {\n+                  if ((0xfffffbffffffffffL & l) != 0L)\n@@ -1346,1 +1179,0 @@\n-                  }\n@@ -1349,1 +1181,1 @@\n-                  if (curChar == 47 && kind > 8) {\n+                  if (curChar == 47 && kind > 8)\n@@ -1351,1 +1183,0 @@\n-                  }\n@@ -1360,1 +1191,0 @@\n-         \/\/MatchLoop\n@@ -1367,1 +1197,1 @@\n-                  if ((0x7fffffe87fffffeL & l) == 0L) {\n+                  if ((0x7fffffe87fffffeL & l) == 0L)\n@@ -1369,2 +1199,1 @@\n-                  }\n-                  if (kind > 67) {\n+                  if (kind > 67)\n@@ -1372,1 +1201,0 @@\n-                  }\n@@ -1376,1 +1204,1 @@\n-                  if ((0x100000001000L & l) != 0L && kind > 59) {\n+                  if ((0x100000001000L & l) != 0L && kind > 59)\n@@ -1378,1 +1206,0 @@\n-                  }\n@@ -1381,1 +1208,1 @@\n-                  if ((0x2000000020L & l) != 0L) {\n+                  if ((0x2000000020L & l) != 0L)\n@@ -1383,1 +1210,0 @@\n-                  }\n@@ -1386,1 +1212,1 @@\n-                  if ((0x5000000050L & l) != 0L && kind > 63) {\n+                  if ((0x5000000050L & l) != 0L && kind > 63)\n@@ -1388,1 +1214,0 @@\n-                  }\n@@ -1391,1 +1216,1 @@\n-                  if ((0xffffffffefffffffL & l) != 0L) {\n+                  if ((0xffffffffefffffffL & l) != 0L)\n@@ -1393,1 +1218,0 @@\n-                  }\n@@ -1396,1 +1220,1 @@\n-                  if (curChar == 92) {\n+                  if (curChar == 92)\n@@ -1398,1 +1222,0 @@\n-                  }\n@@ -1401,1 +1224,1 @@\n-                  if ((0x14404410000000L & l) != 0L) {\n+                  if ((0x14404410000000L & l) != 0L)\n@@ -1403,1 +1226,0 @@\n-                  }\n@@ -1406,3 +1228,2 @@\n-                  if ((0xffffffffefffffffL & l) != 0L) {\n-                     jjCheckNAddStates(10, 12);\n-                  }\n+                  if ((0xffffffffefffffffL & l) != 0L)\n+                     jjCheckNAddStates(13, 15);\n@@ -1411,1 +1232,1 @@\n-                  if (curChar == 92) {\n+                  if (curChar == 92)\n@@ -1413,1 +1234,0 @@\n-                  }\n@@ -1416,3 +1236,2 @@\n-                  if ((0x14404410000000L & l) != 0L) {\n-                     jjCheckNAddStates(10, 12);\n-                  }\n+                  if ((0x14404410000000L & l) != 0L)\n+                     jjCheckNAddStates(13, 15);\n@@ -1421,1 +1240,1 @@\n-                  if ((0x2000000020L & l) != 0L) {\n+                  if ((0x2000000020L & l) != 0L)\n@@ -1423,1 +1242,0 @@\n-                  }\n@@ -1426,1 +1244,1 @@\n-                  if ((0x2000000020L & l) != 0L) {\n+                  if ((0x2000000020L & l) != 0L)\n@@ -1428,1 +1246,0 @@\n-                  }\n@@ -1431,1 +1248,1 @@\n-                  if ((0x2000000020L & l) != 0L) {\n+                  if ((0x2000000020L & l) != 0L)\n@@ -1433,1 +1250,0 @@\n-                  }\n@@ -1436,1 +1252,1 @@\n-                  if ((0x100000001000000L & l) != 0L) {\n+                  if ((0x100000001000000L & l) != 0L)\n@@ -1438,1 +1254,0 @@\n-                  }\n@@ -1441,1 +1256,1 @@\n-                  if ((0x7e0000007eL & l) == 0L) {\n+                  if ((0x7e0000007eL & l) == 0L)\n@@ -1443,2 +1258,1 @@\n-                  }\n-                  if (kind > 59) {\n+                  if (kind > 59)\n@@ -1446,1 +1260,0 @@\n-                  }\n@@ -1450,1 +1263,1 @@\n-                  jjAddStates(18, 20);\n+                  jjAddStates(0, 2);\n@@ -1477,1 +1290,0 @@\n-         \/\/MatchLoop\n@@ -1484,1 +1296,1 @@\n-                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {\n+                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n@@ -1486,2 +1298,1 @@\n-                  }\n-                  if (kind > 67) {\n+                  if (kind > 67)\n@@ -1489,1 +1300,0 @@\n-                  }\n@@ -1493,1 +1303,1 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n@@ -1495,1 +1305,0 @@\n-                  }\n@@ -1498,3 +1307,2 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n-                     jjAddStates(10, 12);\n-                  }\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n+                     jjAddStates(13, 15);\n@@ -1503,3 +1311,2 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n-                     jjAddStates(18, 20);\n-                  }\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n+                     jjAddStates(0, 2);\n@@ -1508,1 +1315,1 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n@@ -1510,1 +1317,0 @@\n-                  }\n@@ -1514,1 +1320,1 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n@@ -1516,1 +1322,0 @@\n-                  }\n@@ -1519,1 +1324,1 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n@@ -1521,1 +1326,0 @@\n-                  }\n@@ -1525,1 +1329,1 @@\n-                  if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n@@ -1527,1 +1331,0 @@\n-                  }\n@@ -1540,1 +1343,1 @@\n-      if ((i = jjnewStateCnt) == (startsAt = 67 - (jjnewStateCnt = startsAt))) {\n+      if ((i = jjnewStateCnt) == (startsAt = 67 - (jjnewStateCnt = startsAt)))\n@@ -1542,1 +1345,0 @@\n-      }\n@@ -1548,2 +1350,2 @@\n-   30, 31, 36, 37, 40, 41, 8, 49, 60, 61, 19, 20, 22, 10, 12, 45,\n-   47, 2, 50, 51, 53, 4, 5, 8, 19, 20, 24, 22, 32, 33, 8, 40,\n+   50, 51, 53, 30, 31, 36, 37, 40, 41, 8, 49, 60, 61, 19, 20, 22,\n+   10, 12, 45, 47, 2, 4, 5, 8, 19, 20, 24, 22, 32, 33, 8, 40,\n@@ -1560,1 +1362,1 @@\n-         if ((jjbitVec0[i1] & l1) != 0L) {\n+         if ((jjbitVec0[i1] & l1) != 0L)\n@@ -1562,1 +1364,0 @@\n-         }\n@@ -1581,1 +1382,1 @@\n-         if ((jjbitVec3[i1] & l1) != 0L) {\n+         if ((jjbitVec3[i1] & l1) != 0L)\n@@ -1583,1 +1384,0 @@\n-         }\n@@ -1587,0 +1387,2 @@\n+\n+\/** Token literal values. *\/\n@@ -1609,0 +1411,2 @@\n+\n+\/** Lexer state names. *\/\n@@ -1621,1 +1425,1 @@\n-private ASCII_UCodeESC_CharStream input_stream;\n+protected JavaCharStream input_stream;\n@@ -1625,3 +1429,3 @@\n-public ExpressionParserTokenManager(ASCII_UCodeESC_CharStream stream)\n-{\n-   if (ASCII_UCodeESC_CharStream.staticFlag) {\n+\/** Constructor. *\/\n+public ExpressionParserTokenManager(JavaCharStream stream){\n+   if (JavaCharStream.staticFlag)\n@@ -1629,1 +1433,0 @@\n-   }\n@@ -1632,2 +1435,3 @@\n-public ExpressionParserTokenManager(ASCII_UCodeESC_CharStream stream, int lexState)\n-{\n+\n+\/** Constructor. *\/\n+public ExpressionParserTokenManager(JavaCharStream stream, int lexState){\n@@ -1637,1 +1441,3 @@\n-public void ReInit(ASCII_UCodeESC_CharStream stream)\n+\n+\/** Reinitialise parser. *\/\n+public void ReInit(JavaCharStream stream)\n@@ -1644,1 +1450,1 @@\n-private final void ReInitRounds()\n+private void ReInitRounds()\n@@ -1648,1 +1454,1 @@\n-   for (i = 67; i-- > 0;) {\n+   for (i = 67; i-- > 0;)\n@@ -1651,2 +1457,3 @@\n-}\n-public void ReInit(ASCII_UCodeESC_CharStream stream, int lexState)\n+\n+\/** Reinitialise parser. *\/\n+public void ReInit(JavaCharStream stream, int lexState)\n@@ -1657,0 +1464,2 @@\n+\n+\/** Switch to specified lex state. *\/\n@@ -1659,1 +1468,1 @@\n-   if (lexState >= 1 || lexState < 0) {\n+   if (lexState >= 1 || lexState < 0)\n@@ -1661,1 +1470,1 @@\n-   } else {\n+   else\n@@ -1664,1 +1473,0 @@\n-}\n@@ -1666,1 +1474,1 @@\n-private final Token jjFillToken()\n+protected Token jjFillToken()\n@@ -1668,2 +1476,6 @@\n-   Token t = Token.newToken(jjmatchedKind);\n-   t.kind = jjmatchedKind;\n+   final Token t;\n+   final String curTokenImage;\n+   final int beginLine;\n+   final int endLine;\n+   final int beginColumn;\n+   final int endColumn;\n@@ -1671,5 +1483,12 @@\n-   t.image = (im == null) ? input_stream.GetImage() : im;\n-   t.beginLine = input_stream.getBeginLine();\n-   t.beginColumn = input_stream.getBeginColumn();\n-   t.endLine = input_stream.getEndLine();\n-   t.endColumn = input_stream.getEndColumn();\n+   curTokenImage = (im == null) ? input_stream.GetImage() : im;\n+   beginLine = input_stream.getBeginLine();\n+   beginColumn = input_stream.getBeginColumn();\n+   endLine = input_stream.getEndLine();\n+   endColumn = input_stream.getEndColumn();\n+   t = Token.newToken(jjmatchedKind, curTokenImage);\n+\n+   t.beginLine = beginLine;\n+   t.endLine = endLine;\n+   t.beginColumn = beginColumn;\n+   t.endColumn = endColumn;\n+\n@@ -1686,1 +1505,2 @@\n-public final Token getNextToken()\n+\/** Get the next Token. *\/\n+public Token getNextToken()\n@@ -1707,2 +1527,2 @@\n-   try {\n-      while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L) {\n+   try { input_stream.backup(0);\n+      while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L)\n@@ -1711,1 +1531,0 @@\n-   }\n@@ -1718,1 +1537,1 @@\n-      if (jjmatchedPos + 1 < curPos) {\n+      if (jjmatchedPos + 1 < curPos)\n@@ -1720,1 +1539,0 @@\n-      }\n@@ -1732,1 +1550,1 @@\n-            if (specialToken == null) {\n+            if (specialToken == null)\n@@ -1734,1 +1552,1 @@\n-            } else\n+            else\n@@ -1754,2 +1572,0 @@\n-      } else {\n-         error_column++;\n@@ -1757,0 +1573,2 @@\n+      else\n+         error_column++;\n@@ -1766,0 +1584,27 @@\n+private void jjCheckNAdd(int state)\n+{\n+   if (jjrounds[state] != jjround)\n+   {\n+      jjstateSet[jjnewStateCnt++] = state;\n+      jjrounds[state] = jjround;\n+   }\n+}\n+private void jjAddStates(int start, int end)\n+{\n+   do {\n+      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\n+   } while (start++ != end);\n+}\n+private void jjCheckNAddTwoStates(int state1, int state2)\n+{\n+   jjCheckNAdd(state1);\n+   jjCheckNAdd(state2);\n+}\n+\n+private void jjCheckNAddStates(int start, int end)\n+{\n+   do {\n+      jjCheckNAdd(jjnextStates[start]);\n+   } while (start++ != end);\n+}\n+\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/ExpressionParserTokenManager.java","additions":337,"deletions":492,"binary":false,"changes":829,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,21 +25,1 @@\n-\/*\n- * Copyright (C) 2004-2011\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- *\/\n+\n@@ -48,1 +28,1 @@\n-package com.sun.xml.internal.rngom.parse.compact;\n+package com.sun.tools.example.debug.expr;\n@@ -350,1 +330,1 @@\n-          \/\/ We are returning one backslash so we should only backup (count-1)\n+      \/\/ We are returning one backslash so we should only backup (count-1)\n@@ -662,1 +642,1 @@\n-\/* JavaCC - OriginalChecksum=d4510307ecc248a96e4d3455ebf92ff3 (do not edit this line) *\/\n+\/* JavaCC - OriginalChecksum=17a580b005f6229e8445521923427bab (do not edit this line) *\/\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/JavaCharStream.java","additions":5,"deletions":25,"binary":false,"changes":30,"previous_filename":"jaxws\/src\/share\/jaxws_classes\/com\/sun\/xml\/internal\/rngom\/parse\/compact\/JavaCharStream.java","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -746,1 +746,24 @@\n-        return make(vm, Integer.parseInt(token.image));\n+        String image = token.image;\n+\n+        \/\/ Here we have to deal with the fact that an INTEGER_LITERAL\n+        \/\/ can be DECIMAL_LITERAL, HEX_LITERAL or OCTAL_LITERAL. All of these\n+        \/\/ can have an optional \"L\" or \"l\" at the end signifying that it is\n+        \/\/ a long value. Otherwise, we treat values that are in range for an\n+        \/\/ int as int and anything else as long.\n+\n+        if (image.endsWith(\"L\") || image.endsWith(\"l\")) {\n+          \/\/ This is a long without doubt - drop the final \"Ll\" and decode\n+          image = image.substring(0, image.length() - 1);\n+          return make(vm, Long.decode(image));\n+        }\n+\n+        long longValue = Long.decode(image);\n+        int intValue = (int) longValue;\n+        if (intValue == longValue) {\n+          \/\/ the value fits in an integer, lets return it as an integer\n+          return make(vm, intValue);\n+        }\n+        else {\n+          \/\/ otherwise treat it as a long\n+          return make(vm, longValue);\n+        }\n@@ -1068,0 +1091,72 @@\n+\n+    static LValue operation(VirtualMachine vm, Token token, LValue rightL,\n+            ExpressionParser.GetFrame frameGetter)\n+            throws ParseException {\n+        String op = token.image;\n+        Value right = rightL.interiorGetValue();\n+        if (right instanceof ObjectReference) {\n+            throw new ParseException(\"Invalid operation '\" + op\n+                    + \"' on an Object\");\n+        }\n+        if (right instanceof BooleanValue) {\n+            if (op.equals(\"!\")) {\n+                boolean rr = ((BooleanValue) right).value();\n+                return make(vm, !rr);\n+            }\n+            throw new ParseException(\"Invalid operation '\" + op\n+                    + \"' on a Boolean\");\n+        }\n+        \/\/ from here on, we know it is a integer kind of type\n+        PrimitiveValue primRight = (PrimitiveValue) right;\n+        if (primRight instanceof DoubleValue) {\n+            double rr = primRight.doubleValue();\n+            double res;\n+            if (op.equals(\"+\")) {\n+                res = rr;\n+            } else if (op.equals(\"-\")) {\n+                res = -rr;\n+            } else {\n+                throw new ParseException(\"Unknown operation: \" + op);\n+            }\n+            return make(vm, res);\n+        }\n+        if (primRight instanceof FloatValue) {\n+            float rr = primRight.floatValue();\n+            float res;\n+            if (op.equals(\"+\")) {\n+                res = rr;\n+            } else if (op.equals(\"-\")) {\n+                res = -rr;\n+            } else {\n+                throw new ParseException(\"Unknown operation: \" + op);\n+            }\n+            return make(vm, res);\n+        }\n+        if (primRight instanceof LongValue) {\n+            long rr = primRight.longValue();\n+            long res;\n+            if (op.equals(\"+\")) {\n+                res = rr;\n+            } else if (op.equals(\"-\")) {\n+                res = -rr;\n+            } else if (op.equals(\"~\")) {\n+                res = ~rr;\n+            } else {\n+                throw new ParseException(\"Unknown operation: \" + op);\n+            }\n+            return make(vm, res);\n+        } else {\n+            int rr = primRight.intValue();\n+            int res;\n+            if (op.equals(\"+\")) {\n+                res = rr;\n+            } else if (op.equals(\"-\")) {\n+                res = -rr;\n+            } else if (op.equals(\"~\")) {\n+                res = ~rr;\n+            } else {\n+                throw new ParseException(\"Unknown operation: \" + op);\n+            }\n+            return make(vm, res);\n+        }\n+    }\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/LValue.java","additions":97,"deletions":2,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,10 +26,2 @@\n-\/*\n- * This source code is provided to illustrate the usage of a given feature\n- * or technique and has been deliberately simplified. Additional steps\n- * required for a production-quality application, such as security checks,\n- * input validation and proper error handling, might not be present in\n- * this sample code.\n- *\/\n-\n-\n-\/* Generated By:JavaCC: Do not edit this line. ParseException.java Version 0.7pre6 *\/\n+\/* Generated By:JavaCC: Do not edit this line. ParseException.java Version 5.0 *\/\n+\/* JavaCCOptions:KEEP_LINE_COL=null *\/\n@@ -49,1 +41,6 @@\n-  private static final long serialVersionUID = 7978489144303647901L;\n+  \/**\n+   * The version identifier for this Serializable class.\n+   * Increment only if the <i>serialized<\/i> form of the\n+   * class changes.\n+   *\/\n+  private static final long serialVersionUID = 1L;\n@@ -55,7 +52,1 @@\n-   * \"expectedTokenSequences\", and \"tokenImage\" set.  The boolean\n-   * flag \"specialConstructor\" is also set to true to indicate that\n-   * this constructor was used to create this object.\n-   * This constructor calls its super class with the empty string\n-   * to force the \"toString\" method of parent class \"Throwable\" to\n-   * print the error message in the form:\n-   *     ParseException: <result of getMessage>\n+   * \"expectedTokenSequences\", and \"tokenImage\" set.\n@@ -68,2 +59,1 @@\n-    super(\"\");\n-    specialConstructor = true;\n+    super(initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal));\n@@ -87,1 +77,0 @@\n-    specialConstructor = false;\n@@ -90,0 +79,1 @@\n+  \/** Constructor with message. *\/\n@@ -92,1 +82,0 @@\n-    specialConstructor = false;\n@@ -95,6 +84,0 @@\n-  \/**\n-   * This variable determines which constructor was used to create\n-   * this object and thereby affects the semantics of the\n-   * \"getMessage\" method (see below).\n-   *\/\n-  protected boolean specialConstructor;\n@@ -124,3 +107,1 @@\n-   * This method has the standard behavior when this object has been\n-   * created using the standard constructors.  Otherwise, it uses\n-   * \"currentToken\" and \"expectedTokenSequences\" to generate a parse\n+   * It uses \"currentToken\" and \"expectedTokenSequences\" to generate a parse\n@@ -129,2 +110,1 @@\n-   * from the parser), then this method is called during the printing\n-   * of the final stack trace, and hence the correct error message\n+   * from the parser) the correct error message\n@@ -133,6 +113,5 @@\n-  @Override\n-  public String getMessage() {\n-    if (!specialConstructor) {\n-      return super.getMessage();\n-    }\n-    String expected = \"\";\n+  private static String initialise(Token currentToken,\n+                           int[][] expectedTokenSequences,\n+                           String[] tokenImage) {\n+    String eol = System.getProperty(\"line.separator\", \"\\n\");\n+    StringBuffer expected = new StringBuffer();\n@@ -140,3 +119,3 @@\n-    for (int[] expectedTokenSequence : expectedTokenSequences) {\n-      if (maxSize < expectedTokenSequence.length) {\n-        maxSize = expectedTokenSequence.length;\n+    for (int i = 0; i < expectedTokenSequences.length; i++) {\n+      if (maxSize < expectedTokenSequences[i].length) {\n+        maxSize = expectedTokenSequences[i].length;\n@@ -144,2 +123,2 @@\n-      for (int j = 0; j < expectedTokenSequence.length; j++) {\n-        expected += tokenImage[expectedTokenSequence[j]] + \" \";\n+      for (int j = 0; j < expectedTokenSequences[i].length; j++) {\n+        expected.append(tokenImage[expectedTokenSequences[i][j]]).append(' ');\n@@ -147,2 +126,2 @@\n-      if (expectedTokenSequence[expectedTokenSequence.length - 1] != 0) {\n-        expected += \"...\";\n+      if (expectedTokenSequences[i][expectedTokenSequences[i].length - 1] != 0) {\n+        expected.append(\"...\");\n@@ -150,1 +129,1 @@\n-      expected += eol + \"    \";\n+      expected.append(eol).append(\"    \");\n@@ -155,3 +134,1 @@\n-      if (i != 0) {\n-         retval += \" \";\n-      }\n+      if (i != 0) retval += \" \";\n@@ -162,0 +139,2 @@\n+      retval += \" \" + tokenImage[tok.kind];\n+      retval += \" \\\"\";\n@@ -163,0 +142,1 @@\n+      retval += \" \\\"\";\n@@ -165,1 +145,2 @@\n-    retval += \"\\\" at line \" + currentToken.next.beginLine + \", column \" + currentToken.next.beginColumn + \".\" + eol;\n+    retval += \"\\\" at line \" + currentToken.next.beginLine + \", column \" + currentToken.next.beginColumn;\n+    retval += \".\" + eol;\n@@ -171,1 +152,1 @@\n-    retval += expected;\n+    retval += expected.toString();\n@@ -185,1 +166,1 @@\n-  protected String add_escapes(String str) {\n+  static String add_escapes(String str) {\n@@ -231,0 +212,1 @@\n+\/* JavaCC - OriginalChecksum=3c9f049ed2bb6ade635c5bf58a386169 (do not edit this line) *\/\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/ParseException.java","additions":36,"deletions":54,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,10 +26,2 @@\n-\/*\n- * This source code is provided to illustrate the usage of a given feature\n- * or technique and has been deliberately simplified. Additional steps\n- * required for a production-quality application, such as security checks,\n- * input validation and proper error handling, might not be present in\n- * this sample code.\n- *\/\n-\n-\n-\/* Generated By:JavaCC: Do not edit this line. Token.java Version 0.7pre3 *\/\n+\/* Generated By:JavaCC: Do not edit this line. Token.java Version 5.0 *\/\n+\/* JavaCCOptions:TOKEN_EXTENDS=,KEEP_LINE_COL=null,SUPPORT_CLASS_VISIBILITY_PUBLIC=true *\/\n@@ -42,1 +34,8 @@\n-public class Token {\n+public class Token implements java.io.Serializable {\n+\n+  \/**\n+   * The version identifier for this Serializable class.\n+   * Increment only if the <i>serialized<\/i> form of the\n+   * class changes.\n+   *\/\n+  private static final long serialVersionUID = 1L;\n@@ -51,6 +50,8 @@\n-  \/**\n-   * beginLine and beginColumn describe the position of the first character\n-   * of this token; endLine and endColumn describe the position of the\n-   * last character of this token.\n-   *\/\n-  public int beginLine, beginColumn, endLine, endColumn;\n+  \/** The line number of the first character of this Token. *\/\n+  public int beginLine;\n+  \/** The column number of the first character of this Token. *\/\n+  public int beginColumn;\n+  \/** The line number of the last character of this Token. *\/\n+  public int endLine;\n+  \/** The column number of the last character of this Token. *\/\n+  public int endColumn;\n@@ -87,0 +88,34 @@\n+  \/**\n+   * An optional attribute value of the Token.\n+   * Tokens which are not used as syntactic sugar will often contain\n+   * meaningful values that will be used later on by the compiler or\n+   * interpreter. This attribute value is often different from the image.\n+   * Any subclass of Token that actually wants to return a non-null value can\n+   * override this method as appropriate.\n+   *\/\n+  public Object getValue() {\n+    return null;\n+  }\n+\n+  \/**\n+   * No-argument constructor\n+   *\/\n+  public Token() {}\n+\n+  \/**\n+   * Constructs a new token for the specified Image.\n+   *\/\n+  public Token(int kind)\n+  {\n+    this(kind, null);\n+  }\n+\n+  \/**\n+   * Constructs a new token for the specified Image and Kind.\n+   *\/\n+  public Token(int kind, String image)\n+  {\n+    this.kind = kind;\n+    this.image = image;\n+  }\n+\n@@ -90,2 +125,1 @@\n-  @Override\n-  public final String toString()\n+  public String toString()\n@@ -93,1 +127,1 @@\n-     return image;\n+    return image;\n@@ -101,1 +135,1 @@\n-   * you want to create if ofKind is ID, simlpy add something like :\n+   * you want to create if ofKind is ID, simply add something like :\n@@ -103,1 +137,1 @@\n-   *    case MyParserConstants.ID : return new IDToken();\n+   *    case MyParserConstants.ID : return new IDToken(ofKind, image);\n@@ -106,1 +140,1 @@\n-   * variable to the appropriate type and use it in your lexical actions.\n+   * variable to the appropriate type and use sit in your lexical actions.\n@@ -108,1 +142,9 @@\n-  public static final Token newToken(int ofKind)\n+  public static Token newToken(int ofKind, String image)\n+  {\n+    switch(ofKind)\n+    {\n+      default : return new Token(ofKind, image);\n+    }\n+  }\n+\n+  public static Token newToken(int ofKind)\n@@ -110,4 +152,1 @@\n-     switch(ofKind)\n-     {\n-       default : return new Token();\n-     }\n+    return newToken(ofKind, null);\n@@ -117,0 +156,1 @@\n+\/* JavaCC - OriginalChecksum=1f1783cae2d4cc94bc225889842dfa8b (do not edit this line) *\/\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/Token.java","additions":69,"deletions":29,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -26,10 +26,2 @@\n-\/*\n- * This source code is provided to illustrate the usage of a given feature\n- * or technique and has been deliberately simplified. Additional steps\n- * required for a production-quality application, such as security checks,\n- * input validation and proper error handling, might not be present in\n- * this sample code.\n- *\/\n-\n-\n-\/* Generated By:JavaCC: Do not edit this line. TokenMgrError.java Version 0.7pre2 *\/\n+\/* Generated By:JavaCC: Do not edit this line. TokenMgrError.java Version 5.0 *\/\n+\/* JavaCCOptions: *\/\n@@ -38,0 +30,1 @@\n+\/** Token Manager Error. *\/\n@@ -40,77 +33,82 @@\n-   \/*\n-    * Ordinals for various reasons why an Error of this type can be thrown.\n-    *\/\n-\n-    private static final long serialVersionUID = -6236440836177601522L;\n-\n-   \/**\n-    * Lexical error occurred.\n-    *\/\n-   static final int LEXICAL_ERROR = 0;\n-\n-   \/**\n-    * An attempt wass made to create a second instance of a static token manager.\n-    *\/\n-   static final int STATIC_LEXER_ERROR = 1;\n-\n-   \/**\n-    * Tried to change to an invalid lexical state.\n-    *\/\n-   static final int INVALID_LEXICAL_STATE = 2;\n-\n-   \/**\n-    * Detected (and bailed out of) an infinite loop in the token manager.\n-    *\/\n-   static final int LOOP_DETECTED = 3;\n-\n-   \/**\n-    * Indicates the reason why the exception is thrown. It will have\n-    * one of the above 4 values.\n-    *\/\n-   int errorCode;\n-\n-   \/**\n-    * Replaces unprintable characters by their espaced (or unicode escaped)\n-    * equivalents in the given string\n-    *\/\n-   protected static final String addEscapes(String str) {\n-      StringBuffer retval = new StringBuffer();\n-      char ch;\n-      for (int i = 0; i < str.length(); i++) {\n-        switch (str.charAt(i))\n-        {\n-           case 0 :\n-              continue;\n-           case '\\b':\n-              retval.append(\"\\\\b\");\n-              continue;\n-           case '\\t':\n-              retval.append(\"\\\\t\");\n-              continue;\n-           case '\\n':\n-              retval.append(\"\\\\n\");\n-              continue;\n-           case '\\f':\n-              retval.append(\"\\\\f\");\n-              continue;\n-           case '\\r':\n-              retval.append(\"\\\\r\");\n-              continue;\n-           case '\\\"':\n-              retval.append(\"\\\\\\\"\");\n-              continue;\n-           case '\\'':\n-              retval.append(\"\\\\\\'\");\n-              continue;\n-           case '\\\\':\n-              retval.append(\"\\\\\\\\\");\n-              continue;\n-           default:\n-              if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\n-                 String s = \"0000\" + Integer.toString(ch, 16);\n-                 retval.append(\"\\\\u\" + s.substring(s.length() - 4, s.length()));\n-              } else {\n-                 retval.append(ch);\n-              }\n-              continue;\n-        }\n+\n+  \/**\n+   * The version identifier for this Serializable class.\n+   * Increment only if the <i>serialized<\/i> form of the\n+   * class changes.\n+   *\/\n+  private static final long serialVersionUID = 1L;\n+\n+  \/*\n+   * Ordinals for various reasons why an Error of this type can be thrown.\n+   *\/\n+\n+  \/**\n+   * Lexical error occurred.\n+   *\/\n+  static final int LEXICAL_ERROR = 0;\n+\n+  \/**\n+   * An attempt was made to create a second instance of a static token manager.\n+   *\/\n+  static final int STATIC_LEXER_ERROR = 1;\n+\n+  \/**\n+   * Tried to change to an invalid lexical state.\n+   *\/\n+  static final int INVALID_LEXICAL_STATE = 2;\n+\n+  \/**\n+   * Detected (and bailed out of) an infinite loop in the token manager.\n+   *\/\n+  static final int LOOP_DETECTED = 3;\n+\n+  \/**\n+   * Indicates the reason why the exception is thrown. It will have\n+   * one of the above 4 values.\n+   *\/\n+  int errorCode;\n+\n+  \/**\n+   * Replaces unprintable characters by their escaped (or unicode escaped)\n+   * equivalents in the given string\n+   *\/\n+  protected static final String addEscapes(String str) {\n+    StringBuffer retval = new StringBuffer();\n+    char ch;\n+    for (int i = 0; i < str.length(); i++) {\n+      switch (str.charAt(i))\n+      {\n+        case 0 :\n+          continue;\n+        case '\\b':\n+          retval.append(\"\\\\b\");\n+          continue;\n+        case '\\t':\n+          retval.append(\"\\\\t\");\n+          continue;\n+        case '\\n':\n+          retval.append(\"\\\\n\");\n+          continue;\n+        case '\\f':\n+          retval.append(\"\\\\f\");\n+          continue;\n+        case '\\r':\n+          retval.append(\"\\\\r\");\n+          continue;\n+        case '\\\"':\n+          retval.append(\"\\\\\\\"\");\n+          continue;\n+        case '\\'':\n+          retval.append(\"\\\\\\'\");\n+          continue;\n+        case '\\\\':\n+          retval.append(\"\\\\\\\\\");\n+          continue;\n+        default:\n+          if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\n+            String s = \"0000\" + Integer.toString(ch, 16);\n+            retval.append(\"\\\\u\" + s.substring(s.length() - 4, s.length()));\n+          } else {\n+            retval.append(ch);\n+          }\n+          continue;\n@@ -118,52 +116,55 @@\n-      return retval.toString();\n-   }\n-\n-   \/**\n-    * Returns a detailed message for the Error when it is thrown by the\n-    * token manager to indicate a lexical error.\n-    * Parameters :\n-    *    EOFSeen     : indicates if EOF caused the lexicl error\n-    *    curLexState : lexical state in which this error occurred\n-    *    errorLine   : line number when the error occurred\n-    *    errorColumn : column number when the error occurred\n-    *    errorAfter  : prefix that was seen before this error occurred\n-    *    curchar     : the offending character\n-    * Note: You can customize the lexical error message by modifying this method.\n-    *\/\n-   private static final String LexicalError(boolean EOFSeen, int lexState, int errorLine, int errorColumn, String errorAfter, char curChar) {\n-      return(\"Lexical error at line \" +\n-           errorLine + \", column \" +\n-           errorColumn + \".  Encountered: \" +\n-           (EOFSeen ? \"<EOF> \" : (\"\\\"\" + addEscapes(String.valueOf(curChar)) + \"\\\"\") + \" (\" + (int)curChar + \"), \") +\n-           \"after : \\\"\" + addEscapes(errorAfter) + \"\\\"\");\n-   }\n-\n-   \/**\n-    * You can also modify the body of this method to customize your error messages.\n-    * For example, cases like LOOP_DETECTED and INVALID_LEXICAL_STATE are not\n-    * of end-users concern, so you can return something like :\n-    *\n-    *     \"Internal Error : Please file a bug report .... \"\n-    *\n-    * from this method for such cases in the release version of your parser.\n-    *\/\n-   @Override\n-   public String getMessage() {\n-      return super.getMessage();\n-   }\n-\n-   \/*\n-    * Constructors of various flavors follow.\n-    *\/\n-\n-   public TokenMgrError() {\n-   }\n-\n-   public TokenMgrError(String message, int reason) {\n-      super(message);\n-      errorCode = reason;\n-   }\n-\n-   public TokenMgrError(boolean EOFSeen, int lexState, int errorLine, int errorColumn, String errorAfter, char curChar, int reason) {\n-      this(LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar), reason);\n-   }\n+    }\n+    return retval.toString();\n+  }\n+\n+  \/**\n+   * Returns a detailed message for the Error when it is thrown by the\n+   * token manager to indicate a lexical error.\n+   * Parameters :\n+   *    EOFSeen     : indicates if EOF caused the lexical error\n+   *    curLexState : lexical state in which this error occurred\n+   *    errorLine   : line number when the error occurred\n+   *    errorColumn : column number when the error occurred\n+   *    errorAfter  : prefix that was seen before this error occurred\n+   *    curchar     : the offending character\n+   * Note: You can customize the lexical error message by modifying this method.\n+   *\/\n+  protected static String LexicalError(boolean EOFSeen, int lexState, int errorLine, int errorColumn, String errorAfter, char curChar) {\n+    return(\"Lexical error at line \" +\n+          errorLine + \", column \" +\n+          errorColumn + \".  Encountered: \" +\n+          (EOFSeen ? \"<EOF> \" : (\"\\\"\" + addEscapes(String.valueOf(curChar)) + \"\\\"\") + \" (\" + (int)curChar + \"), \") +\n+          \"after : \\\"\" + addEscapes(errorAfter) + \"\\\"\");\n+  }\n+\n+  \/**\n+   * You can also modify the body of this method to customize your error messages.\n+   * For example, cases like LOOP_DETECTED and INVALID_LEXICAL_STATE are not\n+   * of end-users concern, so you can return something like :\n+   *\n+   *     \"Internal Error : Please file a bug report .... \"\n+   *\n+   * from this method for such cases in the release version of your parser.\n+   *\/\n+  public String getMessage() {\n+    return super.getMessage();\n+  }\n+\n+  \/*\n+   * Constructors of various flavors follow.\n+   *\/\n+\n+  \/** No arg constructor. *\/\n+  public TokenMgrError() {\n+  }\n+\n+  \/** Constructor with message and reason. *\/\n+  public TokenMgrError(String message, int reason) {\n+    super(message);\n+    errorCode = reason;\n+  }\n+\n+  \/** Full Constructor. *\/\n+  public TokenMgrError(boolean EOFSeen, int lexState, int errorLine, int errorColumn, String errorAfter, char curChar, int reason) {\n+    this(LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar), reason);\n+  }\n@@ -171,0 +172,1 @@\n+\/* JavaCC - OriginalChecksum=9b5d040f247411cad7f77688386c48e7 (do not edit this line) *\/\n","filename":"jdk\/src\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/TokenMgrError.java","additions":141,"deletions":139,"binary":false,"changes":280,"status":"modified"},{"patch":"@@ -0,0 +1,158 @@\n+#!\/bin\/sh\n+\n+#\n+# Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#  @test\n+#  @bug 4660158\n+#  @author Staffan Larsen\n+#  @run shell JdbExprTest.sh\n+\n+# These are variables that can be set to control execution\n+\n+#pkg=untitled7\n+classname=JdbExprTest\n+compileOptions=-g\n+#java=\"java_g\"\n+#set -x\n+\n+createJavaFile()\n+{\n+    cat <<EOF > $classname.java.1\n+import java.util.*;\n+import java.net.URLClassLoader;\n+import java.net.URL;\n+\n+class $classname {\n+\n+    static long aLong;\n+    static int anInt;\n+    static boolean aBoolean;\n+\n+    public static void bkpt() {\n+       int i = 0;     \/\/@1 breakpoint\n+    }\n+    \n+    public static void main(String[] args) {\n+        bkpt();\n+    }\n+}\n+EOF\n+}\n+\n+\n+# drive jdb by sending cmds to it and examining its output\n+dojdbCmds()\n+{\n+    setBkpts @1\n+    runToBkpt @1\n+\n+    cmd print java.lang.Long.MAX_VALUE\n+    jdbFailIfNotPresent \" \\= 9223372036854775807\" 3\n+\n+    cmd print java.lang.Long.MIN_VALUE\n+    jdbFailIfNotPresent \" \\= \\-9223372036854775808\" 3\n+    \n+    cmd print 9223372036854775807L\n+    jdbFailIfNotPresent \"9223372036854775807L = 9223372036854775807\" 3\n+    cmd print 9223372036854775807\n+    jdbFailIfNotPresent \"9223372036854775807 = 9223372036854775807\" 3\n+\n+    cmd print -9223372036854775807L\n+    jdbFailIfNotPresent \"\\-9223372036854775807L = \\-9223372036854775807\" 3\n+    cmd print -9223372036854775807\n+    jdbFailIfNotPresent \"\\-9223372036854775807 = \\-9223372036854775807\" 3\n+    \n+    cmd print -1\n+    jdbFailIfNotPresent \"\\-1 = \\-1\" 3\n+    cmd print 1L\n+    jdbFailIfNotPresent \"1L = 1\" 3\n+    cmd print -1L\n+    jdbFailIfNotPresent \"\\-1L = \\-1\" 3\n+    cmd print 0x1\n+    jdbFailIfNotPresent \"0x1 = 1\" 3\n+    \n+    cmd set $classname.aLong = 9223372036854775807L\n+    cmd print $classname.aLong\n+    jdbFailIfNotPresent \"$classname.aLong = 9223372036854775807\" 3\n+\n+    cmd set $classname.anInt = java.lang.Integer.MAX_VALUE + 1\n+    cmd print $classname.anInt\n+    jdbFailIfNotPresent \"$classname.anInt = \\-2147483648\" 3\n+\n+    cmd set $classname.aLong = java.lang.Integer.MAX_VALUE + 1L\n+    cmd print $classname.aLong\n+    jdbFailIfNotPresent \"$classname.aLong = 2147483648\" 3\n+\n+    cmd set $classname.anInt = 0x80000000\n+    jdbFailIfNotPresent \"InvalidTypeException: .* convert 2147483648 to int\" 3\n+    cmd set $classname.anInt = 0x8000000000000000L\n+    jdbFailIfNotPresent \"java.lang.NumberFormatException: For input string: \\\"8000000000000000\\\"\" 3\n+\n+    cmd set $classname.anInt = 0x7fffffff\n+    jdbFailIfNotPresent \"0x7fffffff = 2147483647\" 3\n+    cmd set $classname.aLong = 0x7fffffffffffffff\n+    jdbFailIfNotPresent \"0x7fffffffffffffff = 9223372036854775807\" 3\n+\n+    cmd print 3.1415\n+    jdbFailIfNotPresent \"3.1415 = 3.1415\" 3\n+    cmd print -3.1415\n+    jdbFailIfNotPresent \"\\-3.1415 = \\-3.1415\" 3\n+    cmd print 011\n+    jdbFailIfNotPresent \"011 = 9\" 3\n+\n+    cmd set $classname.aBoolean = false\n+    jdbFailIfNotPresent \"JdbExprTest.aBoolean = false = false\" 3\n+    cmd print $classname.aBoolean\n+    jdbFailIfNotPresent \"JdbExprTest.aBoolean = false\" 3\n+    cmd print !$classname.aBoolean\n+    jdbFailIfNotPresent \"JdbExprTest.aBoolean = true\" 3\n+\n+    cmd print ~1\n+    jdbFailIfNotPresent \"~1 = -2\" 3\n+    \n+    cmd quit\n+}\n+\n+\n+mysetup()\n+{\n+    if [ -z \"$TESTSRC\" ] ; then\n+        TESTSRC=.\n+    fi\n+\n+    for ii in . $TESTSRC $TESTSRC\/.. ; do\n+        if [ -r \"$ii\/ShellScaffold.sh\" ] ; then\n+            . $ii\/ShellScaffold.sh \n+            break\n+        fi\n+    done\n+}\n+\n+# You could replace this next line with the contents\n+# of ShellScaffold.sh and this script will run just the same.\n+mysetup\n+\n+runit\n+jdbFailIfNotPresent \"Breakpoint hit\"\n+pass\n","filename":"jdk\/test\/com\/sun\/jdi\/JdbExprTest.sh","additions":158,"deletions":0,"binary":false,"changes":158,"status":"added"}]}