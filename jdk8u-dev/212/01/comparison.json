{"files":[{"patch":"@@ -7762,0 +7762,9 @@\n+        boolean ret = Component.requestFocusController.acceptRequestFocus(focusOwner,\n+                                                                          this,\n+                                                                          temporary,\n+                                                                          focusedWindowChangeAllowed,\n+                                                                          cause);\n+        if (focusLog.isLoggable(PlatformLogger.Level.FINEST)) {\n+            focusLog.finest(\"RequestFocusController returns {0}\", ret);\n+        }\n+\n@@ -7785,9 +7794,0 @@\n-        boolean ret = Component.requestFocusController.acceptRequestFocus(focusOwner,\n-                                                                          this,\n-                                                                          temporary,\n-                                                                          focusedWindowChangeAllowed,\n-                                                                          cause);\n-        if (focusLog.isLoggable(PlatformLogger.Level.FINEST)) {\n-            focusLog.finest(\"RequestFocusController returns {0}\", ret);\n-        }\n-\n","filename":"jdk\/src\/share\/classes\/java\/awt\/Component.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3568,0 +3568,16 @@\n+                if (to instanceof JToggleButton) {\n+                    JToggleButton tb = ((JToggleButton)to).getGroupSelection(cause);\n+                    if (tb != to) {\n+                        if (focusedWindowChangeAllowed) {\n+                            SwingUtilities.invokeLater(() -> {\n+                                tb.requestFocus();\n+                            });\n+                        } else {\n+                            SwingUtilities.invokeLater(() -> {\n+                                tb.requestFocusInWindow();\n+                            });\n+                        }\n+                        return false;\n+                    }\n+                }\n+\n","filename":"jdk\/src\/share\/classes\/javax\/swing\/JComponent.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.util.Enumeration;\n+import sun.awt.CausedFocusEvent;\n@@ -211,0 +213,35 @@\n+    JToggleButton getGroupSelection(CausedFocusEvent.Cause cause) {\n+        switch (cause) {\n+            case ACTIVATION:\n+            case TRAVERSAL:\n+            case TRAVERSAL_UP:\n+            case TRAVERSAL_DOWN:\n+            case TRAVERSAL_FORWARD:\n+            case TRAVERSAL_BACKWARD:\n+                ButtonModel model = getModel();\n+                JToggleButton selection = this;\n+                if (model instanceof DefaultButtonModel) {\n+                    ButtonGroup group = ((DefaultButtonModel) model).getGroup();\n+                    if (group != null && group.getSelection() != null\n+                                                      && !group.isSelected(model)) {\n+                        Enumeration<AbstractButton> iterator =\n+                                                   group.getElements();\n+                        while (iterator.hasMoreElements()) {\n+                            AbstractButton member = iterator.nextElement();\n+                            if (group.isSelected(member.getModel())) {\n+                                if (member instanceof JToggleButton &&\n+                                    member.isVisible() && member.isDisplayable() &&\n+                                    member.isEnabled() && member.isFocusable()) {\n+                                    selection = (JToggleButton) member;\n+                                }\n+                                break;\n+                            }\n+                        }\n+                    }\n+                }\n+                return selection;\n+            default:\n+                return this;\n+        }\n+    }\n+\n","filename":"jdk\/src\/share\/classes\/javax\/swing\/JToggleButton.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8074883\n+ * @summary Tab key should move to focused button in a button group\n+ * @run main ButtonGroupFocusTest\n+ *\/\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.KeyEvent;\n+\n+public class ButtonGroupFocusTest {\n+\n+    private static JRadioButton button1;\n+    private static JRadioButton button2;\n+    private static JRadioButton button3;\n+    private static JRadioButton button4;\n+    private static JRadioButton button5;\n+    private static Robot robot;\n+    private static JFrame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame();\n+            Container contentPane = frame.getContentPane();\n+            contentPane.setLayout(new FlowLayout());\n+            button1 = new JRadioButton(\"Button 1\");\n+            contentPane.add(button1);\n+            button2 = new JRadioButton(\"Button 2\");\n+            contentPane.add(button2);\n+            button3 = new JRadioButton(\"Button 3\");\n+            contentPane.add(button3);\n+            button4 = new JRadioButton(\"Button 4\");\n+            contentPane.add(button4);\n+            button5 = new JRadioButton(\"Button 5\");\n+            contentPane.add(button5);\n+            ButtonGroup group = new ButtonGroup();\n+            group.add(button1);\n+            group.add(button2);\n+            group.add(button3);\n+\n+            group = new ButtonGroup();\n+            group.add(button4);\n+            group.add(button5);\n+\n+            button2.setSelected(true);\n+\n+            frame.pack();\n+            frame.setVisible(true);\n+        });\n+\n+        robot.waitForIdle();\n+        robot.delay(200);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            if( !button2.hasFocus() ) {\n+                frame.dispose();\n+                throw new RuntimeException(\n+                        \"Button 2 should get focus after activation\");\n+            }\n+        });\n+\n+        robot.keyPress(KeyEvent.VK_TAB);\n+        robot.keyRelease(KeyEvent.VK_TAB);\n+\n+        robot.waitForIdle();\n+        robot.delay(200);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            if( !button4.hasFocus() ) {\n+                frame.dispose();\n+                throw new RuntimeException(\n+                        \"Button 4 should get focus\");\n+            }\n+            button3.setSelected(true);\n+        });\n+\n+        robot.keyPress(KeyEvent.VK_TAB);\n+        robot.keyRelease(KeyEvent.VK_TAB);\n+\n+        robot.waitForIdle();\n+        robot.delay(200);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            if( !button3.hasFocus() ) {\n+                frame.dispose();\n+                throw new RuntimeException(\n+                        \"selected Button 3 should get focus\");\n+            }\n+        });\n+\n+        SwingUtilities.invokeLater(frame::dispose);\n+    }\n+}\n","filename":"jdk\/test\/javax\/swing\/JRadioButton\/ButtonGroupFocus\/ButtonGroupFocusTest.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"}]}