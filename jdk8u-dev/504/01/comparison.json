{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug     5086470 6358247 7193302\n+ * @bug     5086470 6358247 7193302 8048215\n@@ -49,0 +49,1 @@\n+    static Object waiter = new Object();\n@@ -72,0 +73,6 @@\n+        \/\/ 'thread' holds the mutex, which means it must also have the monitor of\n+        \/\/ 'waiter' at least until it does the wait(). So we acquire the monitor of\n+        \/\/ 'waiter' here, which ensures that 'thread' must be in wait()\n+        synchronized(waiter) {\n+        }\n+\n@@ -112,3 +119,2 @@\n-                mutex.lock();\n-                Object o = new Object();\n-                synchronized(o) {\n+                synchronized(waiter) {\n+                    mutex.lock();\n@@ -116,1 +122,1 @@\n-                        o.wait();\n+                        waiter.wait();\n","filename":"jdk\/test\/java\/lang\/management\/ManagementFactory\/ThreadMXBeanProxy.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}