{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,6 @@\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.net.URL;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.ArrayDeque;\n@@ -32,1 +38,3 @@\n-import java.net.URL;\n+import java.util.List;\n+\n+import sun.security.action.GetIntegerAction;\n@@ -55,3 +63,2 @@\n-            result = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetIntegerAction(\"http.maxConnections\",\n-                                                         MAX_CONNECTIONS))\n+            result = AccessController.doPrivileged(\n+                new GetIntegerAction(\"http.maxConnections\", MAX_CONNECTIONS))\n@@ -59,1 +66,1 @@\n-            if (result <= 0)\n+            if (result <= 0) {\n@@ -61,0 +68,1 @@\n+            }\n@@ -62,1 +70,1 @@\n-            return result;\n+        return result;\n@@ -95,2 +103,1 @@\n-            java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<Void>() {\n+            AccessController.doPrivileged(new PrivilegedAction<Void>() {\n@@ -123,2 +130,2 @@\n-            v = new ClientVector(keepAliveTimeout > 0?\n-                                 keepAliveTimeout*1000 : LIFETIME);\n+            v = new ClientVector(keepAliveTimeout > 0 ?\n+                                 keepAliveTimeout * 1000 : LIFETIME);\n@@ -133,1 +140,1 @@\n-    public synchronized void remove (HttpClient h, Object obj) {\n+    public synchronized void remove(HttpClient h, Object obj) {\n@@ -138,1 +145,1 @@\n-            if (v.empty()) {\n+            if (v.isEmpty()) {\n@@ -174,10 +181,0 @@\n-            synchronized (this) {\n-                \/* Remove all unused HttpClients.  Starting from the\n-                 * bottom of the stack (the least-recently used first).\n-                 * REMIND: It'd be nice to not remove *all* connections\n-                 * that aren't presently in use.  One could have been added\n-                 * a second ago that's still perfectly valid, and we're\n-                 * needlessly axing it.  But it's not clear how to do this\n-                 * cleanly, and doing it right may be more trouble than it's\n-                 * worth.\n-                 *\/\n@@ -185,0 +182,2 @@\n+            \/\/ Remove all outdated HttpClients.\n+            synchronized (this) {\n@@ -186,3 +185,1 @@\n-\n-                ArrayList<KeepAliveKey> keysToRemove\n-                    = new ArrayList<KeepAliveKey>();\n+                List<KeepAliveKey> keysToRemove = new ArrayList<>();\n@@ -193,4 +190,2 @@\n-                        int i;\n-\n-                        for (i = 0; i < v.size(); i++) {\n-                            KeepAliveEntry e = v.elementAt(i);\n+                        KeepAliveEntry e = v.peek();\n+                        while (e != null) {\n@@ -198,2 +193,2 @@\n-                                HttpClient h = e.hc;\n-                                h.closeServer();\n+                                v.poll();\n+                                e.hc.closeServer();\n@@ -203,0 +198,1 @@\n+                            e = v.peek();\n@@ -204,1 +200,0 @@\n-                        v.subList(0, i).clear();\n@@ -206,1 +201,1 @@\n-                        if (v.size() == 0) {\n+                        if (v.isEmpty()) {\n@@ -216,3 +211,1 @@\n-        } while (size() > 0);\n-\n-        return;\n+        } while (!isEmpty());\n@@ -224,2 +217,1 @@\n-    private void writeObject(java.io.ObjectOutputStream stream)\n-    throws IOException {\n+    private void writeObject(ObjectOutputStream stream) throws IOException {\n@@ -229,2 +221,3 @@\n-    private void readObject(java.io.ObjectInputStream stream)\n-    throws IOException, ClassNotFoundException {\n+    private void readObject(ObjectInputStream stream)\n+        throws IOException, ClassNotFoundException\n+    {\n@@ -238,3 +231,1 @@\n-\n-\n-class ClientVector extends java.util.Stack<KeepAliveEntry> {\n+class ClientVector extends ArrayDeque<KeepAliveEntry> {\n@@ -246,3 +237,1 @@\n-\n-\n-    ClientVector (int nap) {\n+    ClientVector(int nap) {\n@@ -253,1 +242,1 @@\n-        if (empty()) {\n+        if (isEmpty()) {\n@@ -255,13 +244,0 @@\n-        } else {\n-            \/\/ Loop until we find a connection that has not timed out\n-            HttpClient hc = null;\n-            long currentTime = System.currentTimeMillis();\n-            do {\n-                KeepAliveEntry e = pop();\n-                if ((currentTime - e.idleStartTime) > nap) {\n-                    e.hc.closeServer();\n-                } else {\n-                    hc = e.hc;\n-                }\n-            } while ((hc== null) && (!empty()));\n-            return hc;\n@@ -269,0 +245,13 @@\n+\n+        \/\/ Loop until we find a connection that has not timed out\n+        HttpClient hc = null;\n+        long currentTime = System.currentTimeMillis();\n+        do {\n+            KeepAliveEntry e = pop();\n+            if ((currentTime - e.idleStartTime) > nap) {\n+                e.hc.closeServer();\n+            } else {\n+                hc = e.hc;\n+            }\n+        } while ((hc == null) && (!isEmpty()));\n+        return hc;\n@@ -280,0 +269,10 @@\n+    \/* remove an HttpClient *\/\n+    synchronized boolean remove(HttpClient h) {\n+        for (KeepAliveEntry curr : this) {\n+            if (curr.hc == h) {\n+                return super.remove(curr);\n+            }\n+        }\n+        return false;\n+    }\n+\n@@ -283,2 +282,1 @@\n-    private void writeObject(java.io.ObjectOutputStream stream)\n-    throws IOException {\n+    private void writeObject(ObjectOutputStream stream) throws IOException {\n@@ -288,2 +286,3 @@\n-    private void readObject(java.io.ObjectInputStream stream)\n-    throws IOException, ClassNotFoundException {\n+    private void readObject(ObjectInputStream stream)\n+        throws IOException, ClassNotFoundException\n+    {\n@@ -294,1 +293,0 @@\n-\n","filename":"jdk\/src\/share\/classes\/sun\/net\/www\/http\/KeepAliveCache.java","additions":64,"deletions":66,"binary":false,"changes":130,"status":"modified"}]}