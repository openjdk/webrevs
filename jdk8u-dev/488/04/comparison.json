{"files":[{"patch":"@@ -133,0 +133,3 @@\n+hotspot_containers = \\\n+  containers\n+\n@@ -262,0 +265,1 @@\n+  containers\/ \\\n","filename":"hotspot\/test\/TEST.groups","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"","filename":"hotspot\/test\/containers\/cgroup\/CgroupSubsystemFactory.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/cgroup\/CgroupSubsystemFactory.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/cgroup\/PlainRead.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/cgroup\/PlainRead.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/AttemptOOM.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/AttemptOOM.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/CPUSetsReader.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/CPUSetsReader.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/CheckContainerized.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/CheckContainerized.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/CheckOperatingSystemMXBean.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/CheckOperatingSystemMXBean.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/DockerBasicTest.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/DockerBasicTest.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/HelloDocker.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/HelloDocker.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/PrintContainerInfo.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/PrintContainerInfo.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/TEST.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/TEST.properties","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/TestCPUAwareness.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/TestCPUAwareness.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/TestCPUSets.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/TestCPUSets.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/TestMemoryAwareness.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/TestMemoryAwareness.java","status":"renamed"},{"patch":"","filename":"hotspot\/test\/containers\/docker\/TestMisc.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hotspot\/test\/runtime\/containers\/docker\/TestMisc.java","status":"renamed"},{"patch":"@@ -43,0 +43,1 @@\n+import jtreg.SkippedException;\n@@ -172,2 +173,11 @@\n-        execute(Container.ENGINE_COMMAND, \"build\", \"--no-cache\", \"--tag\", imageName, buildDir.toString())\n-            .shouldHaveExitValue(0);\n+        try {\n+            \/\/ Build the docker\n+            execute(Container.ENGINE_COMMAND, \"build\", \"--no-cache\", \"--tag\", imageName, buildDir.toString())\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"Successfully built\");\n+        } catch (Exception e) {\n+            \/\/ If docker image building fails there is a good chance it happens due to environment and\/or\n+            \/\/ configuration other than product failure. Throw jtreg skipped exception in such case\n+            \/\/ instead of failing the test.\n+            throw new SkippedException(\"Building docker image failed. Details: \\n\" + e.getMessage());\n+        }\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/DockerTestUtils.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}