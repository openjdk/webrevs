{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -332,2 +334,6 @@\n-\t\t\t\t\t\t\t\t\titemNode.appendChild(createValueNode(parent.getOwnerDocument(), \"value\", \/\/$NON-NLS-1$\n-\t\t\t\t\t\t\t\t\t\t\ttoString(a.getMember(item))));\n+\t\t\t\t\t\t\t\t\tif (a != null)\n+\t\t\t\t\t\t\t\t\t\titemNode.appendChild(createValueNode(parent.getOwnerDocument(), \"value\", \/\/$NON-NLS-1$\n+\t\t\t\t\t\t\t\t\t\t\t\ttoString(a.getMember(item))));\n+\t\t\t\t\t\t\t\t\telse\n+\t\t\t\t\t\t\t\t\t\tLogger.getLogger(JfrRulesReport.class.getName()).log(Level.WARNING,\n+\t\t\t\t\t\t\t\t\t\t\t\t\"Accessor is null: \" + item.getType()); \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/report\/JfrRulesReport.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -156,2 +156,2 @@\n-\tpublic static final IItemQuery JFR_DATA_LOST = fromWhere(JdkFilters.JFR_DATA_LOST)\n-\t\t\t.select(END_TIME, EVENT_THREAD, FLR_DATA_LOST).build();\n+\tpublic static final IItemQuery JFR_DATA_LOST = fromWhere(JdkFilters.JFR_DATA_LOST).select(END_TIME, FLR_DATA_LOST)\n+\t\t\t.build();\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkQueries.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}