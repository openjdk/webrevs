{"files":[{"patch":"@@ -39,1 +39,0 @@\n-import java.util.Iterator;\n@@ -188,7 +187,4 @@\n-\t\t\tList<IMCFrame> nonHiddenFrames = new ArrayList<IMCFrame>();\n-\t\t\tfor (Iterator<? extends IMCFrame> iterator = frames.iterator(); iterator.hasNext();) {\n-\t\t\t\tIMCFrame imcFrame = (IMCFrame) iterator.next();\n-\t\t\t\tif ((imcFrame.getMethod() != null)\n-\t\t\t\t\t\t&& ((imcFrame.getMethod().isHidden() == null) || (!imcFrame.getMethod().isHidden()))) {\n-\t\t\t\t\tnonHiddenFrames.add(imcFrame);\n-\t\t\t\t}\n+\t\t\tframes = frames.stream()\n+\t\t\t\t\t.filter(imcFrame -> ((imcFrame.getMethod() != null)\n+\t\t\t\t\t\t\t&& ((imcFrame.getMethod().isHidden() == null) || (!imcFrame.getMethod().isHidden()))))\n+\t\t\t\t\t.toList();\n@@ -196,4 +192,2 @@\n-\t\t\t}\n-\n-\t\t\tif (nonHiddenFrames != null && frameIndex < nonHiddenFrames.size()) {\n-\t\t\t\treturn nonHiddenFrames.get(threadRootAtTop ? nonHiddenFrames.size() - 1 - frameIndex : frameIndex);\n+\t\t\tif (frames != null && frameIndex < frames.size()) {\n+\t\t\t\treturn frames.get(threadRootAtTop ? frames.size() - 1 - frameIndex : frameIndex);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/StacktraceModel.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"}]}