{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Datadog, Inc. All rights reserved.\n@@ -139,0 +139,19 @@\n+\t\tswitch (type.getClassName()) {\n+\t\tcase \"boolean\":\n+\t\t\treturn boolean.class;\n+\t\tcase \"byte\":\n+\t\t\treturn byte.class;\n+\t\tcase \"short\":\n+\t\t\treturn short.class;\n+\t\tcase \"char\":\n+\t\t\treturn char.class;\n+\t\tcase \"int\":\n+\t\t\treturn int.class;\n+\t\tcase \"float\":\n+\t\t\treturn float.class;\n+\t\tcase \"long\":\n+\t\t\treturn long.class;\n+\t\tcase \"double\":\n+\t\t\treturn double.class;\n+\t\t}\n+\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/impl\/ResolvedConvertable.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Datadog, Inc. All rights reserved.\n@@ -36,0 +36,2 @@\n+import java.util.Date;\n+\n@@ -65,0 +67,32 @@\n+\n+\tpublic static String convert(boolean b) {\n+\t\treturn Boolean.toString(b);\n+\t}\n+\n+\tpublic static String convert(byte b) {\n+\t\treturn Byte.toString(b);\n+\t}\n+\n+\tpublic static String convert(short s) {\n+\t\treturn Short.toString(s);\n+\t}\n+\n+\tpublic static String convert(char c) {\n+\t\treturn \"\" + c;\n+\t}\n+\n+\tpublic static long convert(int i) {\n+\t\treturn i;\n+\t}\n+\n+\tpublic static int convert(float f) {\n+\t\treturn (int) f;\n+\t}\n+\n+\tpublic static String convert(long l) {\n+\t\treturn new Date(l).toString();\n+\t}\n+\n+\tpublic static String convert(double d) {\n+\t\treturn Integer.toString((int) d);\n+\t}\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/converters\/test\/GurkMultiDefaultConverter.java","additions":36,"deletions":2,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Datadog, Inc. All rights reserved.\n@@ -80,0 +80,8 @@\n+\t\t\t\t\tprintBooleanMultiDefault((TestToolkit.randomLong() & 1) == 0);\n+\t\t\t\t\tprintByteMultiDefault((byte) (TestToolkit.randomLong() & 255));\n+\t\t\t\t\tprintShortMultiDefault((short) (TestToolkit.randomLong() & 255));\n+\t\t\t\t\tprintCharMultiDefault(Double.toString(TestToolkit.randomLong()).charAt(0));\n+\t\t\t\t\tprintIntMultiDefault((int) TestToolkit.randomLong());\n+\t\t\t\t\tprintFloatMultiDefault((float) Math.random());\n+\t\t\t\t\tprintLongMultiDefault(System.currentTimeMillis());\n+\t\t\t\t\tprintDoubleMultiDefault(Math.random() * 500 - 250);\n@@ -176,0 +184,40 @@\n+\n+\tpublic static void printBooleanMultiDefault(boolean b) throws InterruptedException {\n+\t\tSystem.out.println(\"C boolean MC: \" + b);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printByteMultiDefault(byte b) throws InterruptedException {\n+\t\tSystem.out.println(\"C byte MC: \" + b);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printShortMultiDefault(short s) throws InterruptedException {\n+\t\tSystem.out.println(\"C short MC: \" + s);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printCharMultiDefault(char c) throws InterruptedException {\n+\t\tSystem.out.println(\"C char MC: \" + c);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printFloatMultiDefault(float f) throws InterruptedException {\n+\t\tSystem.out.println(\"C float MC: \" + f);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printIntMultiDefault(int i) throws InterruptedException {\n+\t\tSystem.out.println(\"C int MC: \" + i);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printLongMultiDefault(long l) throws InterruptedException {\n+\t\tSystem.out.println(\"C long MC: \" + l);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n+\n+\tpublic static void printDoubleMultiDefault(double d) throws InterruptedException {\n+\t\tSystem.out.println(\"C double MC: \" + d);\n+\t\tThread.sleep(SLEEP_TIME);\n+\t}\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/converters\/test\/InstrumentMeConverter.java","additions":50,"deletions":2,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-\t\t\t\t<descriptor>(Ljava\/lang\/Double;)V<\/descriptor>\n+\t\t\t\t<descriptor>(Ljava\/lang\/Double;)Z<\/descriptor>\n@@ -347,0 +347,184 @@\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimBoolean\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimBoolean<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printBooleanMultiDefault<\/name>\n+\t\t\t\t<descriptor>(Z)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>boolean as string<\/name>\n+\t\t\t\t\t\t<description>The converted boolean-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimByte\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimByte<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printByteMultiDefault<\/name>\n+\t\t\t\t<descriptor>(B)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>byte as string<\/name>\n+\t\t\t\t\t\t<description>The converted byte-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimShort\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimShort<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printShortMultiDefault<\/name>\n+\t\t\t\t<descriptor>(S)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>short as string<\/name>\n+\t\t\t\t\t\t<description>The converted short-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimChar\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimChar<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printCharMultiDefault<\/name>\n+\t\t\t\t<descriptor>(C)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>char as string<\/name>\n+\t\t\t\t\t\t<description>The converted char-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimInt\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimInt<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printIntMultiDefault<\/name>\n+\t\t\t\t<descriptor>(I)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>int as long<\/name>\n+\t\t\t\t\t\t<description>The converted long-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimFloat\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimFloat<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printFloatMultiDefault<\/name>\n+\t\t\t\t<descriptor>(F)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>float as int<\/name>\n+\t\t\t\t\t\t<description>The converted float-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimLong\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimLong<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printLongMultiDefault<\/name>\n+\t\t\t\t<descriptor>(J)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>long as string<\/name>\n+\t\t\t\t\t\t<description>The converted long-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n+\t\t<event id=\"demo.jfr.convertertest.ConverterEventMultiDefaultPrimDouble\">\n+\t\t\t<label>ConverterEventMultiDefaultPrimDouble<\/label>\n+\t\t\t<description>Testing picking the right method.\n+\t\t\t<\/description>\n+\t\t\t<path>demo\/converterevents<\/path>\n+\t\t\t<stacktrace>true<\/stacktrace>\n+\t\t\t<class>org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+\t\t\t<\/class>\n+\t\t\t<method>\n+\t\t\t\t<name>printDoubleMultiDefault<\/name>\n+\t\t\t\t<descriptor>(D)V<\/descriptor>\n+\t\t\t\t<parameters>\n+\t\t\t\t\t<parameter index=\"0\">\n+\t\t\t\t\t\t<name>double as string<\/name>\n+\t\t\t\t\t\t<description>The converted double-parameter<\/description>\n+\t\t\t\t\t\t<contenttype>None<\/contenttype>\n+\t\t\t\t\t\t<converter>org.openjdk.jmc.agent.converters.test.GurkMultiDefaultConverter\n+\t\t\t\t\t\t<\/converter>\n+\t\t\t\t\t<\/parameter>\n+\t\t\t\t<\/parameters>\n+\t\t\t<\/method>\n+\t\t\t<location>WRAP<\/location>\n+\t\t<\/event>\n","filename":"agent\/src\/test\/resources\/org\/openjdk\/jmc\/agent\/converters\/test\/jfrprobes_template.xml","additions":185,"deletions":1,"binary":false,"changes":186,"status":"modified"}]}