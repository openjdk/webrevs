{"files":[{"patch":"@@ -390,2 +390,26 @@\n-\tpublic static final IAttribute<IQuantity> RECORDING_ID = attr(\"id\", Messages.getString(Messages.ATTR_RECORDING_ID), \/\/$NON-NLS-1$\n-\t\t\tNUMBER);\n+\tprivate static IAttribute<IQuantity> convertNumberToQuantity(\n+\t\tString identifier, String name, String description, IAttribute<Number> attribute) {\n+\t\treturn Attribute.canonicalize(new Attribute<IQuantity>(identifier, name, \/\/$NON-NLS-1$\n+\t\t\t\tdescription, NUMBER) {\n+\t\t\t@Override\n+\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n+\n+\t\t\t\tfinal IMemberAccessor<Number, U> accessor = attribute.getAccessor(type);\n+\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic IQuantity getMember(U i) {\n+\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n+\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\tpublic static final IAttribute<Number> RECORDING_ID_NUMBER = attr(\"id\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_RECORDING_ID), Messages.getString(Messages.ATTR_RECORDING_ID), RAW_NUMBER);\n+\n+\tpublic static final IAttribute<IQuantity> RECORDING_ID = convertNumberToQuantity(\"id\",\n+\t\t\tMessages.getString(Messages.ATTR_RECORDING_ID), Messages.getString(Messages.ATTR_RECORDING_ID),\n+\t\t\tRECORDING_ID_NUMBER);\n+\n@@ -755,2 +779,9 @@\n-\tpublic static final IAttribute<IQuantity> FLAG_VALUE_NUMBER = attr(\"value\", \/\/$NON-NLS-1$\n-\t\t\tMessages.getString(Messages.ATTR_FLAG_VALUE_NUMBER), NUMBER);\n+\n+\tpublic static final IAttribute<Number> FLAG_VALUE_NUMBER_RAW = attr(\"value\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_FLAG_VALUE_NUMBER), Messages.getString(Messages.ATTR_FLAG_VALUE_NUMBER),\n+\t\t\tRAW_NUMBER);\n+\n+\tpublic static final IAttribute<IQuantity> FLAG_VALUE_NUMBER = convertNumberToQuantity(\"value\",\n+\t\t\tMessages.getString(Messages.ATTR_FLAG_VALUE_NUMBER), Messages.getString(Messages.ATTR_FLAG_VALUE_NUMBER),\n+\t\t\tFLAG_VALUE_NUMBER_RAW);\n+\n@@ -800,5 +831,3 @@\n-\tpublic static final IAttribute<IQuantity> CLASSLOADER_LOADED_COUNT = Attribute.canonicalize(\n-\t\t\tnew Attribute<IQuantity>(\"loadedClassCount\", Messages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT), \/\/$NON-NLS-1$\n-\t\t\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT_DESC), NUMBER) {\n-\t\t\t\t@Override\n-\t\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n+\tpublic static final IAttribute<IQuantity> CLASSLOADER_LOADED_COUNT = convertNumberToQuantity(\"loadedClassCount\",\n+\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT),\n+\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT_DESC), CLASSLOADER_LOADED_COUNT_NUMBER);\n@@ -806,10 +835,3 @@\n-\t\t\t\t\tfinal IMemberAccessor<Number, U> accessor = CLASSLOADER_LOADED_COUNT_NUMBER.getAccessor(type);\n-\t\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic IQuantity getMember(U i) {\n-\t\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n-\t\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t};\n-\t\t\t\t}\n-\t\t\t});\n+\tpublic static final IAttribute<Number> CLASSLOADER_UNLOADED_COUNT_NUMBER = attr(\"unloadedClassCount\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_UNLOADED_COUNT),\n+\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_UNLOADED_COUNT_DESC), RAW_NUMBER);\n@@ -817,1 +839,1 @@\n-\tpublic static final IAttribute<IQuantity> CLASSLOADER_UNLOADED_COUNT = attr(\"unloadedClassCount\", \/\/$NON-NLS-1$\n+\tpublic static final IAttribute<IQuantity> CLASSLOADER_UNLOADED_COUNT = convertNumberToQuantity(\"unloadedClassCount\",\n@@ -819,1 +841,2 @@\n-\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_UNLOADED_COUNT_DESC), NUMBER);\n+\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_UNLOADED_COUNT_DESC), CLASSLOADER_UNLOADED_COUNT_NUMBER);\n+\n@@ -1154,16 +1177,3 @@\n-\tpublic static final IAttribute<IQuantity> EXCEPTION_THROWABLES_COUNT = Attribute.canonicalize(\n-\t\t\tnew Attribute<IQuantity>(\"throwables\", Messages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT), \/\/$NON-NLS-1$\n-\t\t\t\t\tMessages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT_DESC), NUMBER) {\n-\t\t\t\t@Override\n-\t\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n-\n-\t\t\t\t\tfinal IMemberAccessor<Number, U> accessor = EXCEPTION_THROWABLES_COUNT_NUMBER.getAccessor(type);\n-\t\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic IQuantity getMember(U i) {\n-\t\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n-\t\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t};\n-\t\t\t\t}\n-\t\t\t});\n+\tpublic static final IAttribute<IQuantity> EXCEPTION_THROWABLES_COUNT = convertNumberToQuantity(\"throwables\",\n+\t\t\tMessages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT),\n+\t\t\tMessages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT_DESC), EXCEPTION_THROWABLES_COUNT_NUMBER);\n@@ -1215,2 +1225,9 @@\n-\tpublic static final IAttribute<IQuantity> REFERENCE_STATISTICS_COUNT = attr(\"count\", \/\/$NON-NLS-1$\n-\t\t\tMessages.getString(Messages.ATTR_REFERENCE_STATISTICS_COUNT), NUMBER);\n+\n+\tpublic static final IAttribute<Number> REFERENCE_STATISTICS_COUNT_NUMBER = attr(\"count\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_REFERENCE_STATISTICS_COUNT),\n+\t\t\tMessages.getString(Messages.ATTR_REFERENCE_STATISTICS_COUNT), RAW_NUMBER);\n+\n+\tpublic static final IAttribute<IQuantity> REFERENCE_STATISTICS_COUNT = convertNumberToQuantity(\"count\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_REFERENCE_STATISTICS_COUNT),\n+\t\t\tMessages.getString(Messages.ATTR_REFERENCE_STATISTICS_COUNT), REFERENCE_STATISTICS_COUNT_NUMBER);\n+\n@@ -1350,16 +1367,3 @@\n-\tpublic static final IAttribute<IQuantity> TOTAL_FINALIZERS_RUN = Attribute.canonicalize(\n-\t\t\tnew Attribute<IQuantity>(\"totalFinalizersRun\", Messages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN), \/\/$NON-NLS-1$\n-\t\t\t\t\tMessages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN_DESC), NUMBER) {\n-\t\t\t\t@Override\n-\t\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n-\n-\t\t\t\t\tfinal IMemberAccessor<Number, U> accessor = TOTAL_FINALIZERS_RUN_NUMBER.getAccessor(type);\n-\t\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic IQuantity getMember(U i) {\n-\t\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n-\t\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t};\n-\t\t\t\t}\n-\t\t\t});\n+\tpublic static final IAttribute<IQuantity> TOTAL_FINALIZERS_RUN = convertNumberToQuantity(\"totalFinalizersRun\",\n+\t\t\tMessages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN),\n+\t\t\tMessages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN_DESC), TOTAL_FINALIZERS_RUN_NUMBER);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAttributes.java","additions":59,"deletions":55,"binary":false,"changes":114,"status":"modified"}]}