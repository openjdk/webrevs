{"files":[{"patch":"@@ -116,0 +116,1 @@\n+\t\/\/ a cache to hold already computed stack frames\n@@ -117,0 +118,1 @@\n+\t\/\/ a cache to hold already resolved class loaders\n@@ -118,0 +120,1 @@\n+\t\/\/ a cache to hold already resolved modules\n","filename":"core\/org.openjdk.jmc.flightrecorder.writer\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/RecordingImpl.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,0 +58,8 @@\n+\t\/**\n+\t * Write a custom event defined as an instance of a {@link jdk.jfr.Event jfr event} subclass. If\n+\t * the event type has not been registered yet, it will be registered.\n+\t * \n+\t * @param event\n+\t *            the event instance\n+\t * @return {@literal this} for chaining\n+\t *\/\n@@ -70,0 +78,8 @@\n+\t\/**\n+\t * Try registering a user event type described by the custom {@link jdk.jfr.Event event} class.\n+\t * If a same-named event already exists it will be returned.\n+\t * \n+\t * @param eventType\n+\t *            the JFR event class\n+\t * @return a corresponding user event type\n+\t *\/\n","filename":"core\/org.openjdk.jmc.flightrecorder.writer\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/api\/Recording.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}