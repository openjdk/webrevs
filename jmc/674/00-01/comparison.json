{"files":[{"patch":"@@ -61,0 +61,1 @@\n+import org.openjdk.jmc.flightrecorder.JfrAttributes;\n@@ -111,0 +112,2 @@\n+\tpublic static final TypedResult<String> MOST_COMMON_ERROR_MESSAGE = new TypedResult<>(\"mostCommonErrorMessage\", \/\/$NON-NLS-1$\n+\t\t\t\"Most Common Error Message\", \"The most common error message.\", UnitLookup.PLAIN_TEXT, String.class);\n@@ -120,1 +123,1 @@\n-\t\t\tMOST_COMMON_ERROR_COUNT, MOST_COMMON_ERROR_STACKTRACE);\n+\t\t\tMOST_COMMON_ERROR_COUNT, MOST_COMMON_ERROR_MESSAGE, MOST_COMMON_ERROR_STACKTRACE);\n@@ -174,0 +177,1 @@\n+\t\t\tResultBuilder resultBuilder = ResultBuilder.createFor(this, vp);\n@@ -183,1 +187,0 @@\n-\t\t\tString stackTraceFrames = \"\"; \/\/$NON-NLS-1$\n@@ -185,4 +188,20 @@\n-\t\t\t\tIItemFilter errorTypeFilter = ItemFilters.equals(JdkAttributes.EXCEPTION_THROWNCLASS, mostCommonError);\n-\t\t\t\tIItemCollection mostCommonErrorItems = errorItems.apply(errorTypeFilter);\n-\t\t\t\tstackTraceFrames = RulesToolkit.getTopNFramesInMostCommonTrace(mostCommonErrorItems, 10);\n-\t\t\t\tlongMessage += \"\\n\" + Messages.getString(Messages.ErrorRule_TEXT_WARN_MOST_COMMON_STACKTRACE); \/\/$NON-NLS-1$\n+\t\t\t\tIItemCollection mostCommonErrorItems = errorItems\n+\t\t\t\t\t\t.apply(ItemFilters.equals(JdkAttributes.EXCEPTION_THROWNCLASS, mostCommonError));\n+\t\t\t\tIItemCollection itemsWithMessage = mostCommonErrorItems\n+\t\t\t\t\t\t.apply(ItemFilters.notEquals(JdkAttributes.EXCEPTION_MESSAGE, null));\n+\t\t\t\tif (itemsWithMessage.hasItems()) {\n+\t\t\t\t\tList<IntEntry<String>> mostCommonErrorMessageGrouping = RulesToolkit\n+\t\t\t\t\t\t\t.calculateGroupingScore(itemsWithMessage, JdkAttributes.EXCEPTION_MESSAGE);\n+\t\t\t\t\tString mostCommonErrorMessage = mostCommonErrorMessageGrouping\n+\t\t\t\t\t\t\t.get(mostCommonErrorMessageGrouping.size() - 1).getKey();\n+\t\t\t\t\tlongMessage += \"\\n\" + Messages.getString(Messages.ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_MESSAGE);\n+\t\t\t\t\tresultBuilder.addResult(MOST_COMMON_ERROR_MESSAGE, mostCommonErrorMessage);\n+\t\t\t\t}\n+\t\t\t\tIItemCollection itemsWithStackTrace = mostCommonErrorItems\n+\t\t\t\t\t\t.apply(ItemFilters.notEquals(JfrAttributes.EVENT_STACKTRACE, null));\n+\t\t\t\tif (itemsWithStackTrace.hasItems()) {\n+\t\t\t\t\tString mostCommonErrorStacktraceFrames = RulesToolkit\n+\t\t\t\t\t\t\t.getTopNFramesInMostCommonTrace(itemsWithStackTrace, 10);\n+\t\t\t\t\tlongMessage += \"\\n\" + Messages.getString(Messages.ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_STACKTRACE);\n+\t\t\t\t\tresultBuilder.addResult(MOST_COMMON_ERROR_STACKTRACE, mostCommonErrorStacktraceFrames);\n+\t\t\t\t}\n@@ -190,1 +209,1 @@\n-\t\t\treturn ResultBuilder.createFor(this, vp).setSeverity(Severity.get(score))\n+\t\t\treturn resultBuilder.setSeverity(Severity.get(score))\n@@ -196,2 +215,1 @@\n-\t\t\t\t\t.addResult(MOST_COMMON_ERROR_COUNT, UnitLookup.NUMBER_UNITY.quantity(errorsThrown))\n-\t\t\t\t\t.addResult(MOST_COMMON_ERROR_STACKTRACE, stackTraceFrames).build();\n+\t\t\t\t\t.addResult(MOST_COMMON_ERROR_COUNT, UnitLookup.NUMBER_UNITY.quantity(errorsThrown)).build();\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/exceptions\/ErrorRule.java","additions":27,"deletions":9,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import org.openjdk.jmc.common.item.IItemFilter;\n@@ -101,0 +100,3 @@\n+\tpublic static final TypedResult<String> MOST_COMMON_EXCEPTION_MESSAGE = new TypedResult<>(\n+\t\t\t\"mostCommonExceptionMessage\", \/\/$NON-NLS-1$\n+\t\t\t\"Most Common Exception Message\", \"The most common exception message.\", UnitLookup.PLAIN_TEXT, String.class);\n@@ -106,1 +108,1 @@\n-\t\t\tTypedResult.SCORE, EXCEPTION_RATE, EXCEPTION_WINDOW, MOST_COMMON_EXCEPTION,\n+\t\t\tTypedResult.SCORE, EXCEPTION_RATE, EXCEPTION_WINDOW, MOST_COMMON_EXCEPTION, MOST_COMMON_EXCEPTION_MESSAGE,\n@@ -134,1 +136,0 @@\n-\t\t\t\tString stackTraceFrames = \"\"; \/\/$NON-NLS-1$\n@@ -136,4 +137,22 @@\n-\t\t\t\t\tIItemFilter exceptionTypeFilter = ItemFilters.equals(JdkAttributes.EXCEPTION_THROWNCLASS,\n-\t\t\t\t\t\t\tmostCommonException);\n-\t\t\t\t\tIItemCollection mostCommonExceptionItems = exceptionItems.apply(exceptionTypeFilter);\n-\t\t\t\t\tstackTraceFrames = RulesToolkit.getTopNFramesInMostCommonTrace(mostCommonExceptionItems, 10);\n+\t\t\t\t\tIItemCollection mostCommonExceptionItems = exceptionItems\n+\t\t\t\t\t\t\t.apply(ItemFilters.equals(JdkAttributes.EXCEPTION_THROWNCLASS, mostCommonException));\n+\t\t\t\t\tIItemCollection itemsWithMessage = mostCommonExceptionItems\n+\t\t\t\t\t\t\t.apply(ItemFilters.notEquals(JdkAttributes.EXCEPTION_MESSAGE, null));\n+\t\t\t\t\tif (itemsWithMessage.hasItems()) {\n+\t\t\t\t\t\tList<IntEntry<String>> mostCommonExceptionMessageGrouping = RulesToolkit\n+\t\t\t\t\t\t\t\t.calculateGroupingScore(itemsWithMessage, JdkAttributes.EXCEPTION_MESSAGE);\n+\t\t\t\t\t\tString mostCommonExceptionMessage = mostCommonExceptionMessageGrouping\n+\t\t\t\t\t\t\t\t.get(mostCommonExceptionMessageGrouping.size() - 1).getKey();\n+\t\t\t\t\t\texplanation += \"\\n\"\n+\t\t\t\t\t\t\t\t+ Messages.getString(Messages.ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_MESSAGE);\n+\t\t\t\t\t\tresultBuilder.addResult(MOST_COMMON_EXCEPTION_MESSAGE, mostCommonExceptionMessage);\n+\t\t\t\t\t}\n+\t\t\t\t\tIItemCollection itemsWithStackTrace = mostCommonExceptionItems\n+\t\t\t\t\t\t\t.apply(ItemFilters.notEquals(JfrAttributes.EVENT_STACKTRACE, null));\n+\t\t\t\t\tif (itemsWithStackTrace.hasItems()) {\n+\t\t\t\t\t\tString mostCommonExceptionstackTraceFrames = RulesToolkit\n+\t\t\t\t\t\t\t\t.getTopNFramesInMostCommonTrace(itemsWithStackTrace, 10);\n+\t\t\t\t\t\texplanation += \"\\n\"\n+\t\t\t\t\t\t\t\t+ Messages.getString(Messages.ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_STACKTRACE);\n+\t\t\t\t\t\tresultBuilder.addResult(MOST_COMMON_EXCEPTION_STACKTRACE, mostCommonExceptionstackTraceFrames);\n+\t\t\t\t\t}\n@@ -141,4 +160,0 @@\n-\t\t\t\texplanation = Messages.getString(Messages.ExceptionRule_TEXT_MOST_COMMON_EXCEPTION) + explanation + \"\\n\" \/\/$NON-NLS-1$\n-\t\t\t\t\t\t+ Messages.getString(Messages.ExceptionRule_TEXT_MOST_COMMON_STACKTRACE);\n-\t\t\t\tresultBuilder.addResult(MOST_COMMON_EXCEPTION, mostCommonException)\n-\t\t\t\t\t\t.addResult(MOST_COMMON_EXCEPTION_STACKTRACE, stackTraceFrames);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/exceptions\/ExceptionRule.java","additions":26,"deletions":11,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -234,1 +234,2 @@\n-\tpublic static final String ErrorRule_TEXT_WARN_MOST_COMMON_STACKTRACE = \"ErrorRule_TEXT_WARN_MOST_COMMON_STACKTRACE\"; \/\/$NON-NLS-1$\n+\tpublic static final String ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_MESSAGE = \"ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_MESSAGE\"; \/\/$NON-NLS-1$\n+\tpublic static final String ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_STACKTRACE = \"ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_STACKTRACE\"; \/\/$NON-NLS-1$\n@@ -242,1 +243,2 @@\n-\tpublic static final String ExceptionRule_TEXT_MOST_COMMON_STACKTRACE = \"ExceptionRule_TEXT_MOST_COMMON_STACKTRACE\"; \/\/$NON-NLS-1$\n+\tpublic static final String ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_MESSAGE = \"ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_MESSAGE\"; \/\/$NON-NLS-1$\n+\tpublic static final String ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_STACKTRACE = \"ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_STACKTRACE\"; \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/messages\/internal\/Messages.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -235,0 +235,2 @@\n+# {mostCommonErrorMessage} is a string.\n+ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_MESSAGE=The most common error message was : \\n {mostCommonErrorMessage}\n@@ -236,1 +238,1 @@\n-ErrorRule_TEXT_WARN_MOST_COMMON_STACKTRACE=The most common error stackrace was : \\n {mostCommonErrorStacktrace}\n+ErrorRule_TEXT_WARN_MOST_COMMON_ERROR_STACKTRACE=The most common error stackrace was : \\n {mostCommonErrorStacktrace}\n@@ -247,2 +249,4 @@\n-{mostCommonExceptionStacktrace} is a string.\n-ExceptionRule_TEXT_MOST_COMMON_STACKTRACE=The most common exception stacktrace was : \\n {mostCommonExceptionStacktrace}\n+#{mostCommonExceptionMessage} is a string\n+ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_MESSAGE=The most common exception message was : \\n {mostCommonExceptionMessage}\n+#{mostCommonExceptionStacktrace} is a string.\n+ExceptionRule_TEXT_MOST_COMMON_EXCEPTION_STACKTRACE=The most common exception stacktrace was : \\n {mostCommonExceptionStacktrace}\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/messages\/internal\/messages.properties","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -6293,0 +6293,2 @@\n+The most common error message was : \n+ &amp;lt;clinit&amp;gt;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.jdk.test\/src\/main\/resources\/baseline\/JfrRuleBaseline.xml","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}