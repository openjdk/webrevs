{"files":[{"patch":"@@ -44,12 +44,1 @@\n-import javax.management.Attribute;\n-import javax.management.AttributeNotFoundException;\n-import javax.management.InstanceNotFoundException;\n-import javax.management.IntrospectionException;\n-import javax.management.InvalidAttributeValueException;\n-import javax.management.MBeanAttributeInfo;\n-import javax.management.MBeanException;\n-import javax.management.MBeanServerConnection;\n-import javax.management.MalformedObjectNameException;\n-import javax.management.ObjectName;\n-import javax.management.OperationsException;\n-import javax.management.ReflectionException;\n+import javax.management.*;\n@@ -76,1 +65,1 @@\n-\tprivate static MBeanServerConnection jolokiaConnection;\n+\tprivate static MBeanServerConnection jolokiaConnection, localConnection;\n@@ -84,0 +73,1 @@\n+\t\tlocalConnection = MBeanServerFactory.createMBeanServer();\n@@ -92,3 +82,6 @@\n-\t\t\t\tif (!unsafeAttributes.contains(attributeInfo.getName())) {\n-\t\t\t\t\tSystem.out.println(\"Getting attribute \" + objectName + \"\/\" + attributeInfo.getName());\n-\t\t\t\t\tgetJolokiaMBeanConnector().getAttribute(objectName, attributeInfo.getName());\n+\t\t\t\tString attributeName = attributeInfo.getName();\n+\t\t\t\tif (!unsafeAttributes.contains(attributeName)) {\n+\t\t\t\t\tObject attribute = getJolokiaMBeanConnector().getAttribute(objectName, attributeName);\n+\t\t\t\t\tif( attribute instanceof String || attribute instanceof Boolean ) { \/\/ Assume strings and booleans are safe to compare directly\n+\t\t\t\t\t\tAssert.assertEquals(\"Comparing returned value of \" + objectName + \".\" + attributeName,  localConnection.getAttribute(objectName, attributeName), attribute);\n+\t\t\t\t\t}\n","filename":"application\/tests\/org.openjdk.jmc.jolokia.test\/src\/test\/java\/org\/openjdk\/jmc\/jolokia\/JolokiaTest.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -27,0 +27,13 @@\n+\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target\/classes\" path=\"src\/main\/resources\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"\/>\n+\t\t\t<attribute name=\"optional\" value=\"true\"\/>\n+\t\t<\/attributes>\n+\t<\/classpathentry>\n+\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/resources\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"\/>\n+\t\t\t<attribute name=\"test\" value=\"true\"\/>\n+\t\t\t<attribute name=\"optional\" value=\"true\"\/>\n+\t\t<\/attributes>\n+\t<\/classpathentry>\n","filename":"core\/org.openjdk.jmc.rjmx.common\/.classpath","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}