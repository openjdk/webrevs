{"files":[{"patch":"@@ -91,0 +91,1 @@\n+\t\tint fetched = 0, compared = 0, unavailable = 0;\n@@ -97,2 +98,5 @@\n-\t\t\t\t\tif (!\"jolokia:type=Config\".equals(objectName.toString())) {\/\/Jolokia will not be visible in the native connection\n-\t\t\t\t\t\tif (attribute instanceof String || attribute instanceof Boolean) { \/\/ Assume strings and booleans are safe to compare directly\n+\t\t\t\t\tfetched++;\n+\t\t\t\t\tif (attribute instanceof String || attribute instanceof Boolean) { \/\/ Assume strings and booleans are safe to compare directly\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tObject locallyRetrievedAttribute = localConnection.getAttribute(objectName, attributeName);\n+\t\t\t\t\t\t\tcompared++;\n@@ -100,1 +104,3 @@\n-\t\t\t\t\t\t\t\t\tlocalConnection.getAttribute(objectName, attributeName), attribute);\n+\t\t\t\t\t\t\t\t\tlocallyRetrievedAttribute, attribute);\n+\t\t\t\t\t\t} catch (InstanceNotFoundException e) {\n+\t\t\t\t\t\t\tunavailable++;\n@@ -106,0 +112,2 @@\n+\t\tSystem.out.println(\n+\t\t\t\t\"  attribute test stats: fetched: \" + fetched + \", compared: \" + compared + \", unavailable: \" + unavailable);\n","filename":"application\/tests\/org.openjdk.jmc.jolokia.test\/src\/test\/java\/org\/openjdk\/jmc\/jolokia\/JolokiaTest.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}