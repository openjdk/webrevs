{"files":[{"patch":"@@ -48,1 +48,1 @@\n-\t\t\tthrow new MalformedURLException(Messages.getString(\"JmcJolokiaJmxConnectionProvider.0\")); \/\/$NON-NLS-1$\n+\t\t\tthrow new MalformedURLException(Messages.getString(\"JmcJolokiaJmxConnectionProvider.JMC_JOLOKIA_JMX_CONNECTION_PROVIDER_EXCEPTION_MSG\")); \/\/$NON-NLS-1$\n","filename":"application\/org.openjdk.jmc.jolokia\/src\/main\/java\/org\/openjdk\/jmc\/jolokia\/JmcJolokiaJmxConnectionProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-JmcJolokiaJmxConnectionProvider.0=I only serve Jolokia connections\n+JmcJolokiaJmxConnectionProvider.JMC_JOLOKIA_JMX_CONNECTION_PROVIDER_EXCEPTION_MSG=I only serve Jolokia connections\n","filename":"application\/org.openjdk.jmc.jolokia\/src\/main\/java\/org\/openjdk\/jmc\/jolokia\/messages.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,13 @@\n-import javax.management.*;\n+import javax.management.Attribute;\n+import javax.management.AttributeNotFoundException;\n+import javax.management.InstanceNotFoundException;\n+import javax.management.IntrospectionException;\n+import javax.management.InvalidAttributeValueException;\n+import javax.management.MBeanAttributeInfo;\n+import javax.management.MBeanException;\n+import javax.management.MBeanServerConnection;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.OperationsException;\n+import javax.management.ReflectionException;\n+import javax.management.MBeanServerFactory;\n@@ -63,1 +75,1 @@\n-\t\t\t\t\t\"CollectionUsageThreshold\", \"CollectionUsageThresholdExceeded\", \"CollectionUsageThresholdCount\"));\n+\t\t\t\t\t\"CollectionUsageThreshold\", \"CollectionUsageThresholdExceeded\", \"CollectionUsageThresholdCount\", \"Config\"));\n@@ -85,2 +97,3 @@\n-\t\t\t\t\tif( attribute instanceof String || attribute instanceof Boolean ) { \/\/ Assume strings and booleans are safe to compare directly\n-\t\t\t\t\t\tAssert.assertEquals(\"Comparing returned value of \" + objectName + \".\" + attributeName,  localConnection.getAttribute(objectName, attributeName), attribute);\n+\t\t\t\t\tif (attribute instanceof String || attribute instanceof Boolean) { \/\/ Assume strings and booleans are safe to compare directly\n+\t\t\t\t\t\tAssert.assertEquals(\"Comparing returned value of \" + objectName + \".\" + attributeName,\n+\t\t\t\t\t\t\t\tlocalConnection.getAttribute(objectName, attributeName), attribute);\n","filename":"application\/tests\/org.openjdk.jmc.jolokia.test\/src\/test\/java\/org\/openjdk\/jmc\/jolokia\/JolokiaTest.java","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"}]}