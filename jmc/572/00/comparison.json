{"files":[{"patch":"@@ -471,0 +471,1 @@\n+\t\tboolean isLong = PrimitiveReader.isLong(typeIdentifier);\n@@ -486,1 +487,1 @@\n-\t\t\t\t\t\t|| JfrInternalConstants.CERTIFICATE_ID_ID.equals(f.fieldIdentifier)) {\n+\t\t\t\t\t\t|| JfrInternalConstants.CERTIFICATE_ID_ID.equals(f.fieldIdentifier) || isLong) {\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v1\/TypeManager.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -411,0 +411,4 @@\n+\t\tstatic boolean isLong(String typeIdentifier) {\n+\t\t\treturn LONG.equals(typeIdentifier);\n+\t\t}\n+\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v1\/ValueReaders.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+import static org.openjdk.jmc.common.unit.UnitLookup.RAW_NUMBER;\n@@ -795,1 +796,1 @@\n-\tpublic static final IAttribute<IQuantity> CLASSLOADER_LOADED_COUNT = attr(\"loadedClassCount\", \/\/$NON-NLS-1$\n+\tpublic static final IAttribute<Number> CLASSLOADER_LOADED_COUNT_NUMBER = attr(\"loadedClassCount\", \/\/$NON-NLS-1$\n@@ -797,1 +798,19 @@\n-\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT_DESC), NUMBER);\n+\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT_DESC), RAW_NUMBER);\n+\n+\tpublic static final IAttribute<IQuantity> CLASSLOADER_LOADED_COUNT = Attribute.canonicalize(\n+\t\t\tnew Attribute<IQuantity>(\"loadedClassCount\", Messages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT), \/\/$NON-NLS-1$\n+\t\t\t\t\tMessages.getString(Messages.ATTR_CLASSLOADER_LOADED_COUNT_DESC), NUMBER) {\n+\t\t\t\t@Override\n+\t\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n+\n+\t\t\t\t\tfinal IMemberAccessor<Number, U> accessor = CLASSLOADER_LOADED_COUNT_NUMBER.getAccessor(type);\n+\t\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic IQuantity getMember(U i) {\n+\t\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n+\t\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t};\n+\t\t\t\t}\n+\t\t\t});\n+\n@@ -1131,1 +1150,1 @@\n-\tpublic static final IAttribute<IQuantity> EXCEPTION_THROWABLES_COUNT = attr(\"throwables\", \/\/$NON-NLS-1$\n+\tpublic static final IAttribute<Number> EXCEPTION_THROWABLES_COUNT_NUMBER = attr(\"throwables\", \/\/$NON-NLS-1$\n@@ -1133,1 +1152,19 @@\n-\t\t\tMessages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT_DESC), NUMBER);\n+\t\t\tMessages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT_DESC), RAW_NUMBER);\n+\n+\tpublic static final IAttribute<IQuantity> EXCEPTION_THROWABLES_COUNT = Attribute.canonicalize(\n+\t\t\tnew Attribute<IQuantity>(\"throwables\", Messages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT), \/\/$NON-NLS-1$\n+\t\t\t\t\tMessages.getString(Messages.ATTR_EXCEPTION_THROWABLES_COUNT_DESC), NUMBER) {\n+\t\t\t\t@Override\n+\t\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n+\n+\t\t\t\t\tfinal IMemberAccessor<Number, U> accessor = EXCEPTION_THROWABLES_COUNT_NUMBER.getAccessor(type);\n+\t\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic IQuantity getMember(U i) {\n+\t\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n+\t\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t};\n+\t\t\t\t}\n+\t\t\t});\n+\n@@ -1309,1 +1346,1 @@\n-\tpublic static final IAttribute<IQuantity> TOTAL_FINALIZERS_RUN = attr(\"totalFinalizersRun\", \/\/$NON-NLS-1$\n+\tpublic static final IAttribute<Number> TOTAL_FINALIZERS_RUN_NUMBER = attr(\"totalFinalizersRun\", \/\/$NON-NLS-1$\n@@ -1311,1 +1348,19 @@\n-\t\t\tMessages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN_DESC), NUMBER);\n+\t\t\tMessages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN_DESC), RAW_NUMBER);\n+\n+\tpublic static final IAttribute<IQuantity> TOTAL_FINALIZERS_RUN = Attribute.canonicalize(\n+\t\t\tnew Attribute<IQuantity>(\"totalFinalizersRun\", Messages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN), \/\/$NON-NLS-1$\n+\t\t\t\t\tMessages.getString(Messages.ATTR_TOTAL_FINALIZERS_RUN_DESC), NUMBER) {\n+\t\t\t\t@Override\n+\t\t\t\tpublic <U> IMemberAccessor<IQuantity, U> customAccessor(IType<U> type) {\n+\n+\t\t\t\t\tfinal IMemberAccessor<Number, U> accessor = TOTAL_FINALIZERS_RUN_NUMBER.getAccessor(type);\n+\t\t\t\t\treturn accessor == null ? null : new IMemberAccessor<IQuantity, U>() {\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic IQuantity getMember(U i) {\n+\t\t\t\t\t\t\tNumber countNumber = accessor.getMember(i);\n+\t\t\t\t\t\t\treturn countNumber == null ? null : UnitLookup.NUMBER_UNITY.quantity(countNumber);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t};\n+\t\t\t\t}\n+\t\t\t});\n+\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAttributes.java","additions":61,"deletions":6,"binary":false,"changes":67,"status":"modified"}]}