{"files":[{"patch":"@@ -364,12 +364,0 @@\n-\t\t<dependency>\n-\t\t\t<groupId>org.openjdk.jmc<\/groupId>\n-\t\t\t<artifactId>org.openjdk.jmc.flightrecorder.configuration.test<\/artifactId>\n-\t\t\t<scope>test<\/scope>\n-\t\t\t<version>${project.version}<\/version>\n-\t\t<\/dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.openjdk.jmc<\/groupId>\n-\t\t\t<artifactId>org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test<\/artifactId>\n-\t\t\t<scope>test<\/scope>\n-\t\t\t<version>${project.version}<\/version>\n-\t\t<\/dependency>\n","filename":"application\/coverage\/pom.xml","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>org.openjdk.jmc.flightrecorder.configuration<\/name>\n-\t<comment><\/comment>\n-\t<projects>\n-\t<\/projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.pde.ManifestBuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.pde.SchemaBuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.m2e.core.maven2Builder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t<\/buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.m2e.core.maven2Nature<\/nature>\n-\t\t<nature>org.eclipse.pde.PluginNature<\/nature>\n-\t\t<nature>org.eclipse.jdt.core.javanature<\/nature>\n-\t<\/natures>\n-<\/projectDescription>\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/.project","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,15 +0,0 @@\n-Manifest-Version: 1.0\n-Bundle-ManifestVersion: 2\n-Bundle-Name: JDK Flight Recorder Configuration\n-Bundle-SymbolicName: org.openjdk.jmc.flightrecorder.configuration;singleton:=true\n-Bundle-Version: 9.0.0.qualifier\n-Bundle-Vendor: Oracle Corporation\n-Bundle-RequiredExecutionEnvironment: JavaSE-17\n-Require-Bundle: org.openjdk.jmc.common\n-Export-Package: org.openjdk.jmc.flightrecorder.configuration,\n- org.openjdk.jmc.flightrecorder.configuration.events,\n- org.openjdk.jmc.flightrecorder.configuration.internal,\n- org.openjdk.jmc.flightrecorder.configuration.recording,\n- org.openjdk.jmc.flightrecorder.configuration.spi\n-Import-Package: org.openjdk.jmc.flightrecorder.internal\n-Automatic-Module-Name: org.openjdk.jmc.flightrecorder.configuration\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/META-INF\/MANIFEST.MF","additions":0,"deletions":15,"binary":false,"changes":15,"status":"deleted"},{"patch":"@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--   \n-   Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n-   \n-   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-   \n-   The contents of this file are subject to the terms of either the Universal Permissive License \n-   v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-   \n-   or the following license:\n-   \n-   Redistribution and use in source and binary forms, with or without modification, are permitted\n-   provided that the following conditions are met:\n-   \n-   1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-   and the following disclaimer.\n-   \n-   2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-   conditions and the following disclaimer in the documentation and\/or other materials provided with\n-   the distribution.\n-   \n-   3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-   endorse or promote products derived from this software without specific prior written permission.\n-   \n-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-<?eclipse version=\"3.4\"?>\n-<plugin>\n-   <extension-point id=\"storageProvider\" name=\"Storage Providers for Flight Recording Configuration Templates\" schema=\"schema\/storageProvider.exsd\"\/>\n-<\/plugin>\n\\ No newline at end of file\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/plugin.xml","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n-\n-   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-   The contents of this file are subject to the terms of either the Universal Permissive License\n-   v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-\n-   or the following license:\n-\n-   Redistribution and use in source and binary forms, with or without modification, are permitted\n-   provided that the following conditions are met:\n-\n-   1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-   and the following disclaimer.\n-\n-   2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-   conditions and the following disclaimer in the documentation and\/or other materials provided with\n-   the distribution.\n-\n-   3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-   endorse or promote products derived from this software without specific prior written permission.\n-\n-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n-\t<modelVersion>4.0.0<\/modelVersion>\n-\t<parent>\n-\t\t<groupId>org.openjdk.jmc<\/groupId>\n-\t\t<artifactId>missioncontrol.application<\/artifactId>\n-\t\t<version>${revision}${changelist}<\/version>\n-\t<\/parent>\n-\t<artifactId>org.openjdk.jmc.flightrecorder.configuration<\/artifactId>\n-\t<packaging>eclipse-plugin<\/packaging>\n-\t<properties>\n-\t\t<jmc.config.path>${project.basedir}\/..\/..\/configuration<\/jmc.config.path>\n-\t<\/properties>\n-<\/project>\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/pom.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,67 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * \n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- * \n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- * \n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- * \n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- * \n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.configuration.internal;\n-\n-import java.util.MissingResourceException;\n-import java.util.ResourceBundle;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-\n-public class Messages {\n-\tprivate static final String BUNDLE_NAME = \"org.openjdk.jmc.flightrecorder.configuration.internal.messages\"; \/\/$NON-NLS-1$\n-\n-\tprivate static final ResourceBundle RESOURCE_BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);\n-\n-\tpublic static final String CommonConstraints_BEGINNING_OF_EVERY_CHUNK = \"CommonConstraints_BEGINNING_OF_EVERY_CHUNK\"; \/\/$NON-NLS-1$\n-\tpublic static final String CommonConstraints_END_OF_EVERY_CHUNK = \"CommonConstraints_END_OF_EVERY_CHUNK\"; \/\/$NON-NLS-1$\n-\tpublic static final String CommonConstraints_ONCE_EVERY_CHUNK = \"CommonConstraints_ONCE_EVERY_CHUNK\"; \/\/$NON-NLS-1$\n-\tpublic static final String OptionInfo_DISALLOWED_OPTION = \"OptionInfo_DISALLOWED_OPTION\"; \/\/$NON-NLS-1$\n-\tpublic static final String RecordingOption_DEFAULT_RECORDING_NAME = \"RecordingOption_DEFAULT_RECORDING_NAME\"; \/\/$NON-NLS-1$\n-\tpublic static final String SchemaVersion_JDK_7_OR_8 = \"SchemaVersion_JDK_7_OR_8\"; \/\/$NON-NLS-1$\n-\tpublic static final String SchemaVersion_JDK_9_AND_ABOVE = \"SchemaVersion_JDK_9_AND_ABOVE\"; \/\/$NON-NLS-1$\n-\n-\t\/\/ Not the most logical place for this, but at least it has something to do with messages.\n-\tstatic final Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.configuration\"); \/\/$NON-NLS-1$\n-\n-\tprivate Messages() {\n-\t}\n-\n-\tpublic static String getString(String key) {\n-\t\ttry {\n-\t\t\treturn RESOURCE_BUNDLE.getString(key);\n-\t\t} catch (MissingResourceException e) {\n-\t\t\tLOGGER.log(Level.WARNING, \"Missing option translation!\", e); \/\/$NON-NLS-1$\n-\t\t\treturn '!' + key + '!';\n-\t\t}\n-\t}\n-}\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/Messages.java","additions":0,"deletions":67,"binary":false,"changes":67,"status":"deleted"},{"patch":"@@ -12,2 +12,1 @@\n-Export-Package: org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.gui,\n- org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml\n+Export-Package: org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.gui\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/META-INF\/MANIFEST.MF","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/gui\/FlagNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,30 +36,30 @@\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTENT_TYPE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTROL_REFERENCE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_DESCRIPTION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_FALSE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL_MANDATORY;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_MAXIMUM;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_MINIMUM;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME_DEFINITION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME_REFERENCE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_OPERATOR;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_TRUE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_URI;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_VALUE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_VERSION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_AND;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CATEGORY;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CONDITION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CONTROL;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V1;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V2;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_FLAG;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_NOT;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_OPTION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_OR;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_PRODUCER;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_SELECTION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_SETTING;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_TEST;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_TEXT;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTENT_TYPE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTROL_REFERENCE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_DESCRIPTION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_FALSE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL_MANDATORY;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_MAXIMUM;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_MINIMUM;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME_DEFINITION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME_REFERENCE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_OPERATOR;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_TRUE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_URI;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_VALUE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_VERSION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_AND;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CATEGORY;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CONDITION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CONTROL;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V1;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V2;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_FLAG;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_NOT;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_OPTION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_OR;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_PRODUCER;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_SELECTION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_SETTING;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_TEST;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_TEXT;\n@@ -80,4 +80,4 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLAttribute;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTag;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLAttribute;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTag;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/gui\/GUIModel.java","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,3 +52,3 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/gui\/SelectionNode.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/gui\/SettingNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,2 +49,2 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/gui\/TextNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/gui\/WidgetNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-Import-Package: org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml,\n+Import-Package: org.openjdk.jmc.flightrecorder.configuration.model.xml,\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/META-INF\/MANIFEST.MF","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,2 +183,0 @@\n-\tpublic static String VOLATILE_CONFIGURATION_RUNNING_RECORDING;\n-\tpublic static String VOLATILE_CONFIGURATION_WORKING_COPY;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/messages\/internal\/Messages.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,2 @@\n+import org.openjdk.jmc.flightrecorder.configuration.model.VolatileStorageDelegate;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n@@ -51,1 +53,0 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/ConfigurationRepositoryFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,16 +36,16 @@\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTENT_TYPE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTROL_REFERENCE;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_DESCRIPTION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL_MANDATORY;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_PATH;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_URI;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_VERSION;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CATEGORY;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CONFIGURATION_V1;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CONTROL;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V1;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V2;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_PRODUCER;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_SETTING;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTENT_TYPE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_CONTROL_REFERENCE;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_DESCRIPTION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL_MANDATORY;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_PATH;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_URI;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_VERSION;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CATEGORY;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CONFIGURATION_V1;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CONTROL;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V1;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_EVENTTYPE_V2;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_PRODUCER;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_SETTING;\n@@ -86,0 +86,7 @@\n+import org.openjdk.jmc.flightrecorder.configuration.model.VolatileStorageDelegate;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCXMLValidator;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLAttribute;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTag;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n@@ -88,6 +95,0 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCXMLValidator;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLAttribute;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTag;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/EventConfiguration.java","additions":24,"deletions":23,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -1,112 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * \n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- * \n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- * \n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- * \n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- * \n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.model;\n-\n-import java.io.InputStream;\n-\n-import org.openjdk.jmc.flightrecorder.configuration.spi.IConfigurationStorageDelegate;\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.messages.internal.Messages;\n-\n-\/**\n- * Storage delegate for templates that cannot be saved back to where they came from. In other words,\n- * read only templates.\n- *\/\n-public class VolatileStorageDelegate implements IConfigurationStorageDelegate {\n-\tprivate static VolatileStorageDelegate LAST_STARTED = new VolatileStorageDelegate(\n-\t\t\tMessages.VOLATILE_CONFIGURATION_LAST_STARTED, false);\n-\tprivate static VolatileStorageDelegate ON_SERVER = new VolatileStorageDelegate(\n-\t\t\tMessages.VOLATILE_CONFIGURATION_ON_SERVER, false);\n-\tprivate static VolatileStorageDelegate RUNNING_RECORDING = new VolatileStorageDelegate(\n-\t\t\tMessages.VOLATILE_CONFIGURATION_RUNNING_RECORDING, false);\n-\tprivate static VolatileStorageDelegate WORKING_COPY = new VolatileStorageDelegate(\n-\t\t\tMessages.VOLATILE_CONFIGURATION_WORKING_COPY, true);\n-\n-\tprivate final String locationInfo;\n-\tprivate final boolean deleteable;\n-\n-\tpublic static IConfigurationStorageDelegate getLastStartedDelegate() {\n-\t\treturn LAST_STARTED;\n-\t}\n-\n-\tpublic static IConfigurationStorageDelegate getOnServerDelegate() {\n-\t\treturn ON_SERVER;\n-\t}\n-\n-\tpublic static IConfigurationStorageDelegate getRunningRecordingDelegate() {\n-\t\treturn RUNNING_RECORDING;\n-\t}\n-\n-\tpublic static IConfigurationStorageDelegate getWorkingCopyDelegate() {\n-\t\treturn WORKING_COPY;\n-\t}\n-\n-\tprivate VolatileStorageDelegate(String locationInfo, boolean deleteable) {\n-\t\tthis.locationInfo = locationInfo;\n-\t\tthis.deleteable = deleteable;\n-\t}\n-\n-\t@Override\n-\tpublic InputStream getContents() {\n-\t\treturn null;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isSaveable() {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic boolean save(String fileContent) {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isDeletable() {\n-\t\treturn deleteable;\n-\t}\n-\n-\t@Override\n-\tpublic boolean delete() {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic String getLocationInfo() {\n-\t\treturn locationInfo;\n-\t}\n-\n-\t@Override\n-\tpublic String getLocationPath() {\n-\t\treturn null;\n-\t}\n-}\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/VolatileStorageDelegate.java","additions":0,"deletions":112,"binary":false,"changes":112,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.PERIOD_EVERY_CHUNK;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.SETTING_PERIOD;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.PERIOD_EVERY_CHUNK;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.SETTING_PERIOD;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/recordingconfiguration\/PropertyLabelProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n@@ -50,1 +51,0 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/AdvancedWizardPage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,1 @@\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n@@ -48,1 +49,0 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/RecordingEventOptionsWizardPage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,1 @@\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n@@ -49,1 +50,0 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/RecordingTemplateControlView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,1 @@\n+import org.openjdk.jmc.flightrecorder.configuration.model.VolatileStorageDelegate;\n@@ -68,1 +69,0 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.model.VolatileStorageDelegate;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/RecordingWizardModel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/TemplateToolkit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,3 +232,0 @@\n-VOLATILE_CONFIGURATION_RUNNING_RECORDING=running recording\n-# Not yet shown in GUI\n-VOLATILE_CONFIGURATION_WORKING_COPY=working copy\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/messages\/internal\/messages.properties","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -81,1 +81,0 @@\n-\t\t<module>org.openjdk.jmc.flightrecorder.configuration<\/module>\n@@ -143,0 +142,5 @@\n+\t\t<\/dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.openjdk.jmc<\/groupId>\n+\t\t\t<artifactId>flightrecorder.configuration<\/artifactId>\n+\t\t\t<version>${revision}${changelist}<\/version>\n","filename":"application\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,37 +0,0 @@\n-#\n-#  Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n-#\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  The contents of this file are subject to the terms of either the Universal Permissive License \n-#  v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-#   \n-#  or the following license:\n-#   \n-#  Redistribution and use in source and binary forms, with or without modification, are permitted\n-#  provided that the following conditions are met:\n-#   \n-#  1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-#  and the following disclaimer.\n-#   \n-#  2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-#  conditions and the following disclaimer in the documentation and\/or other materials provided with\n-#  the distribution.\n-#   \n-#  3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-#  endorse or promote products derived from this software without specific prior written permission.\n-#\n-#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-#\n-source.. = src\/test\/java\/\n-output.. = target\/test-classes\/\n-bin.includes = META-INF\/,\\\n-               .\n-pde.match.rule.bundle=compatible\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/build.properties","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n-\n-   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-   The contents of this file are subject to the terms of either the Universal Permissive License\n-   v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-\n-   or the following license:\n-\n-   Redistribution and use in source and binary forms, with or without modification, are permitted\n-   provided that the following conditions are met:\n-\n-   1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-   and the following disclaimer.\n-\n-   2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-   conditions and the following disclaimer in the documentation and\/or other materials provided with\n-   the distribution.\n-\n-   3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-   endorse or promote products derived from this software without specific prior written permission.\n-\n-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n-\t<modelVersion>4.0.0<\/modelVersion>\n-\t<parent>\n-\t\t<groupId>org.openjdk.jmc<\/groupId>\n-\t\t<artifactId>missioncontrol.application.tests<\/artifactId>\n-\t\t<version>${revision}${changelist}<\/version>\n-\t<\/parent>\n-\t<artifactId>org.openjdk.jmc.flightrecorder.configuration.test<\/artifactId>\n-\t<packaging>eclipse-test-plugin<\/packaging>\n-\t<properties>\n-\t\t<jmc.config.path>${project.basedir}\/..\/..\/..\/configuration<\/jmc.config.path>\n-\t<\/properties>\n-<\/project>\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/pom.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,11 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<classpath>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType\/JavaSE-17\"\/>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.pde.core.requiredPlugins\"\/>\n-\t<classpathentry kind=\"src\" path=\"src\/test\/java\/\">\n-\t\t<attributes>\n-\t\t\t<attribute name=\"test\" value=\"true\"\/>\n-\t\t<\/attributes>\n-\t<\/classpathentry>\n-\t<classpathentry kind=\"output\" path=\"target\/test-classes\"\/>\n-<\/classpath>\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\/.classpath","additions":0,"deletions":11,"binary":false,"changes":11,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test<\/name>\n-\t<comment><\/comment>\n-\t<projects>\n-\t<\/projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.pde.ManifestBuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.pde.SchemaBuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.m2e.core.maven2Builder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t<\/buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.m2e.core.maven2Nature<\/nature>\n-\t\t<nature>org.eclipse.pde.PluginNature<\/nature>\n-\t\t<nature>org.eclipse.jdt.core.javanature<\/nature>\n-\t<\/natures>\n-<\/projectDescription>\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\/.project","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,11 +0,0 @@\n-Manifest-Version: 1.0\n-Bundle-ManifestVersion: 2\n-Bundle-Name: Flight Recorder Configuration UI Test\n-Bundle-SymbolicName: org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test;singleton:=true\n-Bundle-Version: 9.0.0.qualifier\n-Bundle-Vendor: Oracle Corporation\n-Fragment-Host: org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\n-Bundle-RequiredExecutionEnvironment: JavaSE-17\n-Bundle-ActivationPolicy: lazy\n-Require-Bundle: org.junit\n-Automatic-Module-Name: org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\/META-INF\/MANIFEST.MF","additions":0,"deletions":11,"binary":false,"changes":11,"status":"deleted"},{"patch":"@@ -1,37 +0,0 @@\n-#\n-#  Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n-#\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  The contents of this file are subject to the terms of either the Universal Permissive License \n-#  v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-#   \n-#  or the following license:\n-#   \n-#  Redistribution and use in source and binary forms, with or without modification, are permitted\n-#  provided that the following conditions are met:\n-#   \n-#  1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-#  and the following disclaimer.\n-#   \n-#  2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-#  conditions and the following disclaimer in the documentation and\/or other materials provided with\n-#  the distribution.\n-#   \n-#  3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-#  endorse or promote products derived from this software without specific prior written permission.\n-#\n-#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-#\n-source.. = src\/test\/java\/\n-output.. = target\/test-classes\/\n-bin.includes = META-INF\/,\\\n-               .\n-pde.match.rule.bundle=compatible\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\/build.properties","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * \n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- * \n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- * \n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- * \n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- * \n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n-\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-import org.junit.Test;\n-\n-@SuppressWarnings(\"nls\")\n-public class XMLTagInstanceTest {\n-\n-\t@Test\n-\tpublic void testGetTagsInstances() {\n-\t\tXMLTagInstance root = new XMLTagInstance(null, new XMLTag(\"root\"));\n-\t\tXMLTagInstance first = new XMLTagInstance(root, new XMLTag(\"first\"));\n-\t\tXMLTag secondTag = new XMLTag(\"second\");\n-\t\t\/* XMLTagInstance second = *\/new XMLTagInstance(first, secondTag);\n-\t\tassertTrue(root.getTagsInstances(secondTag).size() == 0);\n-\t\tassertTrue(first.getTagsInstances(secondTag).size() >= 0);\n-\t}\n-\n-\t@Test\n-\tpublic void testFindTagWithAttribute() {\n-\t\tXMLTag rootTag = new XMLTag(\"root\");\n-\t\tXMLTag firstTag = new XMLTag(\"first\");\n-\t\trootTag.add(firstTag);\n-\t\tXMLTag secondTag = new XMLTag(\"second\");\n-\t\tfirstTag.add(secondTag);\n-\t\tXMLAttribute attribute = new XMLAttribute(\"testAttribute\", false, XMLNodeType.TEXT);\n-\t\tsecondTag.add(attribute);\n-\n-\t\tXMLTagInstance root = new XMLTagInstance(null, rootTag);\n-\t\tXMLTagInstance first = root.create(firstTag);\n-\t\tMap<String, String> attributeMap = new HashMap<>();\n-\t\tString value = \"hejsan\";\n-\t\tattributeMap.put(attribute.getName(), value);\n-\t\t\/* XMLTagInstance second = *\/first.create(secondTag.getName(), attributeMap);\n-\t\tassertNull(root.findTagWithAttribute(secondTag, attribute, value));\n-\t\tassertNotNull(first.findTagWithAttribute(secondTag, attribute, value));\n-\t}\n-}\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLTagInstanceTest.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/test\/EventConfigurationModelTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/test\/EventConfigurationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-import org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLModel;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLModel;\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/test\/JfrControlTestCase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,2 +44,0 @@\n-\t\t<module>org.openjdk.jmc.flightrecorder.configuration.test<\/module>\n-\t\t<module>org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test<\/module>\n","filename":"application\/tests\/pom.xml","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,5 @@\n+\t\t<dependency>\n+\t\t\t<groupId>org.openjdk.jmc<\/groupId>\n+\t\t\t<artifactId>flightrecorder.configuration<\/artifactId>\n+\t\t\t<version>${project.version}<\/version>\n+\t\t<\/dependency>\n@@ -97,0 +102,6 @@\n+\t\t<dependency>\n+\t\t\t<groupId>org.openjdk.jmc<\/groupId>\n+\t\t\t<artifactId>flightrecorder.configuration.test<\/artifactId>\n+\t\t\t<scope>test<\/scope>\n+\t\t\t<version>${project.version}<\/version>\n+\t\t<\/dependency>\n","filename":"core\/coverage\/pom.xml","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-\t *\n+\t * \n@@ -204,1 +204,1 @@\n-\t *             for other security problems, e.g. provided cipher is not available.\n+\t *             for other security problems. e.g. provided cipher is not available.\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/security\/ISecurityManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/.classpath","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/.classpath","status":"renamed"},{"patch":"@@ -0,0 +1,16 @@\n+Manifest-Version: 1.0\n+Bundle-ManifestVersion: 2\n+Bundle-Name: JDK Flight Recorder Configuration\n+Bundle-SymbolicName: org.openjdk.jmc.flightrecorder.configuration;singleton:=true\n+Bundle-Version: 9.0.0.qualifier\n+Bundle-Vendor: Oracle Corporation\n+Bundle-RequiredExecutionEnvironment: JavaSE-17\n+Require-Bundle: org.openjdk.jmc.common, org.openjdk.jmc.flightrecorder\n+Export-Package: org.openjdk.jmc.flightrecorder.configuration,\n+ org.openjdk.jmc.flightrecorder.configuration.events,\n+ org.openjdk.jmc.flightrecorder.configuration.internal,\n+ org.openjdk.jmc.flightrecorder.configuration.model,\n+ org.openjdk.jmc.flightrecorder.configuration.model.xml,\n+ org.openjdk.jmc.flightrecorder.configuration.recording,\n+ org.openjdk.jmc.flightrecorder.configuration.spi\n+Automatic-Module-Name: org.openjdk.jmc.flightrecorder.configuration\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/META-INF\/MANIFEST.MF","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-#  Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/build.properties","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/build.properties","status":"renamed"},{"patch":"","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/plugin.xml","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.test\/pom.xml","status":"renamed"},{"patch":"@@ -3,1 +3,1 @@\n-   Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,4 +41,2 @@\n-\t<artifactId>testlib<\/artifactId>\n-\t<properties>\n-\t\t<jmc.config.path>${project.basedir}\/..\/..\/configuration<\/jmc.config.path>\n-\t<\/properties>\n+\t<artifactId>flightrecorder.configuration<\/artifactId>\n+\n@@ -46,4 +44,0 @@\n-\t\t<dependency>\n-\t\t\t<groupId>junit<\/groupId>\n-\t\t\t<artifactId>junit<\/artifactId>\n-\t\t<\/dependency>\n@@ -61,0 +55,3 @@\n+\t<properties>\n+\t\t<jmc.config.path>${project.basedir}\/..\/..\/configuration<\/jmc.config.path>\n+\t<\/properties>\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/pom.xml","additions":6,"deletions":9,"binary":false,"changes":15,"previous_filename":"core\/org.openjdk.jmc.testlib\/pom.xml","status":"copied"},{"patch":"@@ -3,1 +3,1 @@\n-   Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/schema\/storageProvider.exsd","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/schema\/storageProvider.exsd","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/ConfigurationToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/ConfigurationToolkit.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/IRecorderConfigurationService.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/IRecorderConfigurationService.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/OptionInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/OptionInfo.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/EventOptionID.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/EventOptionID.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/IEventConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/IEventConfiguration.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/IEventTypeID.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/IEventTypeID.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/SchemaVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/SchemaVersion.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/CommonConstraints.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/CommonConstraints.java","status":"renamed"},{"patch":"","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/DefaultValueMap.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/DefaultValueMap.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/EventOptionDescriptorMapper.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/EventOptionDescriptorMapper.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/EventTypeIDV1.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/EventTypeIDV1.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/EventTypeIDV2.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/EventTypeIDV2.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/FixedDescriptorMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/FixedDescriptorMap.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/IMapper.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/IMapper.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/KeyTranslatingMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/KeyTranslatingMap.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/KnownEventOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/KnownEventOptions.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/KnownRecordingOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/KnownRecordingOptions.java","status":"renamed"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * \n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ * \n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ * \n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ * \n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ * \n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+package org.openjdk.jmc.flightrecorder.configuration.internal;\n+\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+public class Messages {\n+\tprivate static final String BUNDLE_NAME = \"org.openjdk.jmc.flightrecorder.configuration.internal.messages\"; \/\/$NON-NLS-1$\n+\n+\tprivate static final ResourceBundle RESOURCE_BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);\n+\n+\tpublic static final String CommonConstraints_BEGINNING_OF_EVERY_CHUNK = \"CommonConstraints_BEGINNING_OF_EVERY_CHUNK\"; \/\/$NON-NLS-1$\n+\tpublic static final String CommonConstraints_END_OF_EVERY_CHUNK = \"CommonConstraints_END_OF_EVERY_CHUNK\"; \/\/$NON-NLS-1$\n+\tpublic static final String CommonConstraints_ONCE_EVERY_CHUNK = \"CommonConstraints_ONCE_EVERY_CHUNK\"; \/\/$NON-NLS-1$\n+\tpublic static final String OptionInfo_DISALLOWED_OPTION = \"OptionInfo_DISALLOWED_OPTION\"; \/\/$NON-NLS-1$\n+\tpublic static final String RecordingOption_DEFAULT_RECORDING_NAME = \"RecordingOption_DEFAULT_RECORDING_NAME\"; \/\/$NON-NLS-1$\n+\tpublic static final String SchemaVersion_JDK_7_OR_8 = \"SchemaVersion_JDK_7_OR_8\"; \/\/$NON-NLS-1$\n+\tpublic static final String SchemaVersion_JDK_9_AND_ABOVE = \"SchemaVersion_JDK_9_AND_ABOVE\"; \/\/$NON-NLS-1$\n+\tpublic static final String VOLATILE_CONFIGURATION_LAST_STARTED = \"VOLATILE_CONFIGURATION_LAST_STARTED\"; \/\/$NON-NLS-1$\n+\tpublic static final String VOLATILE_CONFIGURATION_ON_SERVER = \"VOLATILE_CONFIGURATION_ON_SERVER\"; \/\/$NON-NLS-1$\n+\tpublic static final String VOLATILE_CONFIGURATION_RUNNING_RECORDING = \"VOLATILE_CONFIGURATION_RUNNING_RECORDING\"; \/\/$NON-NLS-1$\n+\tpublic static final String VOLATILE_CONFIGURATION_WORKING_COPY = \"VOLATILE_CONFIGURATION_WORKING_COPY\"; \/\/$NON-NLS-1$\n+\n+\t\/\/ Not the most logical place for this, but at least it has something to do with messages.\n+\tstatic final Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.configuration\"); \/\/$NON-NLS-1$\n+\n+\tprivate Messages() {\n+\t}\n+\n+\tpublic static String getString(String key) {\n+\t\ttry {\n+\t\t\treturn RESOURCE_BUNDLE.getString(key);\n+\t\t} catch (MissingResourceException e) {\n+\t\t\tLOGGER.log(Level.WARNING, \"Missing option translation!\", e); \/\/$NON-NLS-1$\n+\t\t\treturn '!' + key + '!';\n+\t\t}\n+\t}\n+}\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/Messages.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/ValidationException.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/ValidationException.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/ValidationToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/ValidationToolkit.java","status":"renamed"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * \n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ * \n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ * \n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ * \n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ * \n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+package org.openjdk.jmc.flightrecorder.configuration.model;\n+\n+import java.io.InputStream;\n+\n+import org.openjdk.jmc.flightrecorder.configuration.spi.IConfigurationStorageDelegate;\n+import org.openjdk.jmc.flightrecorder.configuration.internal.Messages;\n+\n+\/**\n+ * Storage delegate for templates that cannot be saved back to where they came from. In other words,\n+ * read only templates.\n+ *\/\n+public class VolatileStorageDelegate implements IConfigurationStorageDelegate {\n+\tprivate static VolatileStorageDelegate LAST_STARTED = new VolatileStorageDelegate(\n+\t\t\tMessages.getString(Messages.VOLATILE_CONFIGURATION_LAST_STARTED), false);\n+\tprivate static VolatileStorageDelegate ON_SERVER = new VolatileStorageDelegate(\n+\t\t\tMessages.getString(Messages.VOLATILE_CONFIGURATION_ON_SERVER), false);\n+\tprivate static VolatileStorageDelegate RUNNING_RECORDING = new VolatileStorageDelegate(\n+\t\t\tMessages.getString(Messages.VOLATILE_CONFIGURATION_RUNNING_RECORDING), false);\n+\tprivate static VolatileStorageDelegate WORKING_COPY = new VolatileStorageDelegate(\n+\t\t\tMessages.getString(Messages.VOLATILE_CONFIGURATION_WORKING_COPY), true);\n+\n+\tprivate final String locationInfo;\n+\tprivate final boolean deleteable;\n+\n+\tpublic static IConfigurationStorageDelegate getLastStartedDelegate() {\n+\t\treturn LAST_STARTED;\n+\t}\n+\n+\tpublic static IConfigurationStorageDelegate getOnServerDelegate() {\n+\t\treturn ON_SERVER;\n+\t}\n+\n+\tpublic static IConfigurationStorageDelegate getRunningRecordingDelegate() {\n+\t\treturn RUNNING_RECORDING;\n+\t}\n+\n+\tpublic static IConfigurationStorageDelegate getWorkingCopyDelegate() {\n+\t\treturn WORKING_COPY;\n+\t}\n+\n+\tprivate VolatileStorageDelegate(String locationInfo, boolean deleteable) {\n+\t\tthis.locationInfo = locationInfo;\n+\t\tthis.deleteable = deleteable;\n+\t}\n+\n+\t@Override\n+\tpublic InputStream getContents() {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSaveable() {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic boolean save(String fileContent) {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic boolean isDeletable() {\n+\t\treturn deleteable;\n+\t}\n+\n+\t@Override\n+\tpublic boolean delete() {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic String getLocationInfo() {\n+\t\treturn locationInfo;\n+\t}\n+\n+\t@Override\n+\tpublic String getLocationPath() {\n+\t\treturn null;\n+\t}\n+}\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/VolatileStorageDelegate.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/IXMLValidator.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/IXMLValidator.java","status":"renamed"},{"patch":"@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/JFCGrammar.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/JFCGrammar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n@@ -35,3 +35,3 @@\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL_MANDATORY;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME;\n-import static org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml.JFCGrammar.TAG_CONFIGURATION_V1;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_LABEL_MANDATORY;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.ATTRIBUTE_NAME;\n+import static org.openjdk.jmc.flightrecorder.configuration.model.xml.JFCGrammar.TAG_CONFIGURATION_V1;\n@@ -50,2 +50,1 @@\n-\n-import org.openjdk.jmc.ui.UIPlugin;\n+import java.util.logging.Logger;\n@@ -60,0 +59,2 @@\n+\tprivate static final Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.configuration.model.xml\");\n+\n@@ -178,1 +179,1 @@\n-\t\tUIPlugin.getDefault().getLogger().log(Level.FINE, \"Running JFC validation on \" + label); \/\/$NON-NLS-1$\n+\t\tLOGGER.log(Level.FINE, \"Running JFC validation on \" + label); \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/JFCXMLValidator.java","additions":9,"deletions":8,"binary":false,"changes":17,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/JFCXMLValidator.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/PrettyPrinter.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/PrettyPrinter.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLAttribute.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLAttribute.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLAttributeInstance.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLAttributeInstance.java","status":"renamed"},{"patch":"@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLModel.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n@@ -35,1 +35,1 @@\n-abstract class XMLNode {\n+public abstract class XMLNode {\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLNode.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLNodeType.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLNodeType.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLTag.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLTag.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n@@ -52,1 +52,1 @@\n-\tXMLTagInstance(XMLTagInstance parent, XMLTag tag) {\n+\tpublic XMLTagInstance(XMLTagInstance parent, XMLTag tag) {\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLTagInstance.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLTagInstance.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-package org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml;\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml;\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/XMLValidationResult.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLValidationResult.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/recording\/RecordingOptionsBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/recording\/RecordingOptionsBuilder.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/spi\/IConfigurationStorageDelegate.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/spi\/IConfigurationStorageDelegate.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/spi\/IStorageProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/spi\/IStorageProvider.java","status":"renamed"},{"patch":"@@ -3,1 +3,1 @@\n-   Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/jfc_v1.xsd","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/jfc_v1.xsd","status":"renamed"},{"patch":"@@ -3,1 +3,1 @@\n-   Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/jfc_v2.xsd","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/events\/jfc_v2.xsd","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-#  Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,0 +80,7 @@\n+\n+# These are appended to Flight Recording configurations visible in Recording Wizard and Template Manager\n+VOLATILE_CONFIGURATION_LAST_STARTED=last started\n+VOLATILE_CONFIGURATION_ON_SERVER=on server\n+VOLATILE_CONFIGURATION_RUNNING_RECORDING=running recording\n+# Not yet shown in GUI\n+VOLATILE_CONFIGURATION_WORKING_COPY=working copy\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/messages.properties","additions":8,"deletions":1,"binary":false,"changes":9,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/messages.properties","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-#  Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/messages_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/messages_ja.properties","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-#  Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/messages_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/messages_zh_CN.properties","status":"renamed"},{"patch":"@@ -124,0 +124,1 @@\n+\t\t<module>org.openjdk.jmc.flightrecorder.configuration<\/module>\n","filename":"core\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/.classpath","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"application\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/.classpath","status":"renamed"},{"patch":"","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/META-INF\/MANIFEST.MF","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"application\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/META-INF\/MANIFEST.MF","status":"renamed"},{"patch":"@@ -36,3 +36,1 @@\n-               .,\\\n-               plugin.xml,\\\n-               appicons\/\n+               .\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/build.properties","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"application\/uitests\/org.openjdk.jmc.test.jemmy\/build.properties","status":"copied"},{"patch":"@@ -41,1 +41,1 @@\n-\t<artifactId>flightrecorder.test<\/artifactId>\n+\t<artifactId>flightrecorder.configuration.test<\/artifactId>\n@@ -48,1 +48,1 @@\n-\t\t\t<artifactId>flightrecorder<\/artifactId>\n+\t\t\t<artifactId>common<\/artifactId>\n@@ -53,1 +53,1 @@\n-\t\t\t<artifactId>flightrecorder.rules<\/artifactId>\n+\t\t\t<artifactId>flightrecorder<\/artifactId>\n@@ -58,1 +58,1 @@\n-\t\t\t<artifactId>testlib<\/artifactId>\n+\t\t\t<artifactId>flightrecorder.configuration<\/artifactId>\n@@ -61,0 +61,4 @@\n+\t\t<dependency>\n+\t\t\t<groupId>junit<\/groupId>\n+\t\t\t<artifactId>junit<\/artifactId>\n+\t\t<\/dependency>\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/pom.xml","additions":8,"deletions":4,"binary":false,"changes":12,"previous_filename":"core\/tests\/org.openjdk.jmc.flightrecorder.test\/pom.xml","status":"copied"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * \n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ * \n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ * \n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ * \n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ * \n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+package org.openjdk.jmc.flightrecorder.configuration.model.xml.test;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLAttribute;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLNodeType;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTag;\n+import org.openjdk.jmc.flightrecorder.configuration.model.xml.XMLTagInstance;\n+\n+@SuppressWarnings(\"nls\")\n+public class XMLTagInstanceTest {\n+\n+\t@Test\n+\tpublic void testGetTagsInstances() {\n+\t\tXMLTagInstance root = new XMLTagInstance(null, new XMLTag(\"root\"));\n+\t\tXMLTagInstance first = new XMLTagInstance(root, new XMLTag(\"first\"));\n+\t\tXMLTag secondTag = new XMLTag(\"second\");\n+\t\t\/* XMLTagInstance second = *\/new XMLTagInstance(first, secondTag);\n+\t\tassertTrue(root.getTagsInstances(secondTag).size() == 0);\n+\t\tassertTrue(first.getTagsInstances(secondTag).size() >= 0);\n+\t}\n+\n+\t@Test\n+\tpublic void testFindTagWithAttribute() {\n+\t\tXMLTag rootTag = new XMLTag(\"root\");\n+\t\tXMLTag firstTag = new XMLTag(\"first\");\n+\t\trootTag.add(firstTag);\n+\t\tXMLTag secondTag = new XMLTag(\"second\");\n+\t\tfirstTag.add(secondTag);\n+\t\tXMLAttribute attribute = new XMLAttribute(\"testAttribute\", false, XMLNodeType.TEXT);\n+\t\tsecondTag.add(attribute);\n+\n+\t\tXMLTagInstance root = new XMLTagInstance(null, rootTag);\n+\t\tXMLTagInstance first = root.create(firstTag);\n+\t\tMap<String, String> attributeMap = new HashMap<>();\n+\t\tString value = \"hejsan\";\n+\t\tattributeMap.put(attribute.getName(), value);\n+\t\t\/* XMLTagInstance second = *\/first.create(secondTag.getName(), attributeMap);\n+\t\tassertNull(root.findTagWithAttribute(secondTag, attribute, value));\n+\t\tassertNotNull(first.findTagWithAttribute(secondTag, attribute, value));\n+\t}\n+}\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/model\/xml\/test\/XMLTagInstanceTest.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/test\/OfflineEventOptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"application\/tests\/org.openjdk.jmc.flightrecorder.configuration.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/test\/OfflineEventOptionsTest.java","status":"renamed"},{"patch":"@@ -47,0 +47,1 @@\n+\t\t<module>org.openjdk.jmc.flightrecorder.configuration.test<\/module>\n","filename":"core\/tests\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}