{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-\t\t\tinfoViewer.addAggregate(JdkAggregators.JVM_PID_ID);\n+\t\t\tinfoViewer.addAggregate(JdkAggregators.JVM_PID);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/JVMInformationPage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1051,3 +1051,4 @@\n-\tpublic static IAggregator<String, ?> convertAsString(String typeId, IAttribute<IQuantity> attribute) {\n-\t\tIAggregator<Set<IQuantity>, ?> aggregator = Aggregators.distinct(attribute);\n-\t\treturn Aggregators.valueBuilderAggregator(aggregator, new IValueBuilder<String, Set<IQuantity>>() {\n+\tpublic static <T> IAggregator<Number, ?> getIdentifier(String typeId, IAttribute<T> attribute) {\n+\t\tIAggregator<Set<T>, ?> aggregator = Aggregators.distinct(attribute);\n+\t\taggregator = filter(aggregator, ItemFilters.type(typeId));\n+\t\treturn Aggregators.valueBuilderAggregator(aggregator, new IValueBuilder<Number, Set<T>>() {\n@@ -1055,2 +1056,2 @@\n-\t\t\tpublic IType<? super String> getValueType() {\n-\t\t\t\treturn UnitLookup.PLAIN_TEXT;\n+\t\t\tpublic IType<? super Number> getValueType() {\n+\t\t\t\treturn UnitLookup.RAW_NUMBER;\n@@ -1060,2 +1061,2 @@\n-\t\t\tpublic String getValue(Set<IQuantity> source) {\n-\n+\t\t\tpublic Number getValue(Set<T> source) {\n+\t\t\t\tNumber value = 0;\n@@ -1065,2 +1066,1 @@\n-\t\t\t\t\tString value = \"\";\n-\t\t\t\t\tIterator<IQuantity> itr = source.iterator();\n+\t\t\t\t\tIterator<?> itr = source.iterator();\n@@ -1068,3 +1068,1 @@\n-\t\t\t\t\t\tLong l = itr.next().longValue();\n-\t\t\t\t\t\tvalue = l.toString();\n-\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tvalue = (Number) itr.next();\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/item\/Aggregators.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -485,1 +485,2 @@\n-\t\t\t\t\t\t|| JfrInternalConstants.JAVA_THREAD_ID_ID.equals(f.fieldIdentifier)) {\n+\t\t\t\t\t\t|| JfrInternalConstants.JAVA_THREAD_ID_ID.equals(f.fieldIdentifier)\n+\t\t\t\t\t\t|| JfrInternalConstants.JVM_PID.equals(f.fieldIdentifier)) {\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v1\/TypeManager.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+\tpublic static final String JVM_PID = \"pid\"; \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/util\/JfrInternalConstants.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import static org.openjdk.jmc.common.item.Aggregators.convertAsString;\n+import static org.openjdk.jmc.common.item.Aggregators.getIdentifier;\n@@ -119,3 +119,2 @@\n-\tpublic static final IAggregator<IQuantity, ?> JVM_PID = min(JdkAttributes.JVM_PID.getName(), null, VM_INFO,\n-\t\t\tJdkAttributes.JVM_PID);\n-\tpublic static final IAggregator<String, ?> JVM_PID_ID = convertAsString(VM_INFO, JdkAttributes.JVM_PID);\n+\tpublic static final IAggregator<Number, ?> JVM_PID = getIdentifier(VM_INFO, JdkAttributes.JVM_PID);\n+\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAggregators.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+import static org.openjdk.jmc.common.unit.UnitLookup.RAW_NUMBER;\n@@ -460,2 +461,2 @@\n-\tpublic static final IAttribute<IQuantity> JVM_PID = attr(\"pid\", Messages.getString(Messages.ATTR_JVM_PID), \/\/$NON-NLS-1$\n-\t\t\tNUMBER);\n+\tpublic static final IAttribute<Number> JVM_PID = attr(\"pid\", Messages.getString(Messages.ATTR_JVM_PID), \/\/$NON-NLS-1$\n+\t\t\tRAW_NUMBER);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAttributes.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}