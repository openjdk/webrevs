{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-\t\t\tinfoViewer.addAggregate(JdkAggregators.JVM_PID);\n+\t\t\tinfoViewer.addAggregate(JdkAggregators.JVM_PID_ID);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/JVMInformationPage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1051,0 +1051,27 @@\n+\tpublic static IAggregator<String, ?> convertAsString(String typeId, IAttribute<IQuantity> attribute) {\n+\t\tIAggregator<Set<IQuantity>, ?> aggregator = Aggregators.distinct(attribute);\n+\t\treturn Aggregators.valueBuilderAggregator(aggregator, new IValueBuilder<String, Set<IQuantity>>() {\n+\t\t\t@Override\n+\t\t\tpublic IType<? super String> getValueType() {\n+\t\t\t\treturn UnitLookup.PLAIN_TEXT;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic String getValue(Set<IQuantity> source) {\n+\n+\t\t\t\tif (source.isEmpty()) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t} else {\n+\t\t\t\t\tString value = \"\";\n+\t\t\t\t\tIterator<IQuantity> itr = source.iterator();\n+\t\t\t\t\twhile (itr.hasNext()) {\n+\t\t\t\t\t\tLong l = itr.next().longValue();\n+\t\t\t\t\t\tvalue = l.toString();\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn value;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}, attribute.getName(), attribute.getDescription());\n+\t}\n+\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/item\/Aggregators.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import static org.openjdk.jmc.common.item.Aggregators.convertAsString;\n@@ -120,0 +121,1 @@\n+\tpublic static final IAggregator<String, ?> JVM_PID_ID = convertAsString(VM_INFO, JdkAttributes.JVM_PID);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAggregators.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}