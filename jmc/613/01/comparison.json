{"files":[{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ *\n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+package org.openjdk.jmc.flightrecorder.rules.jdk.general;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.FutureTask;\n+import java.util.concurrent.RunnableFuture;\n+import java.util.logging.Logger;\n+\n+import org.openjdk.jmc.common.item.Aggregators;\n+import org.openjdk.jmc.common.item.IAggregator;\n+import org.openjdk.jmc.common.item.IItemCollection;\n+import org.openjdk.jmc.common.item.ItemFilters;\n+import org.openjdk.jmc.common.util.IPreferenceValueProvider;\n+import org.openjdk.jmc.common.util.TypedPreference;\n+import org.openjdk.jmc.flightrecorder.jdk.JdkAttributes;\n+import org.openjdk.jmc.flightrecorder.jdk.JdkTypeIDs;\n+import org.openjdk.jmc.flightrecorder.rules.IResult;\n+import org.openjdk.jmc.flightrecorder.rules.IResultValueProvider;\n+import org.openjdk.jmc.flightrecorder.rules.IRule;\n+import org.openjdk.jmc.flightrecorder.rules.ResultBuilder;\n+import org.openjdk.jmc.flightrecorder.rules.Severity;\n+import org.openjdk.jmc.flightrecorder.rules.TypedResult;\n+import org.openjdk.jmc.flightrecorder.rules.jdk.messages.internal.Messages;\n+import org.openjdk.jmc.flightrecorder.rules.util.JfrRuleTopics;\n+import org.openjdk.jmc.flightrecorder.rules.util.RulesToolkit;\n+\n+public class PID1Rule implements IRule {\n+\tprivate static final String PID1Rule_RESULT_ID = \"PID1Rule\"; \/\/$NON-NLS-1$\n+\n+\tprivate static final Map<String, RulesToolkit.EventAvailability> REQUIRED_EVENTS = RulesToolkit.RequiredEventsBuilder\n+\t\t\t.create().addEventType(JdkTypeIDs.VM_INFO, RulesToolkit.EventAvailability.AVAILABLE).build();\n+\n+\t@Override\n+\tpublic String getId() {\n+\t\treturn PID1Rule_RESULT_ID;\n+\t}\n+\n+\t@Override\n+\tpublic String getTopic() {\n+\t\treturn JfrRuleTopics.JVM_INFORMATION;\n+\t}\n+\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn Messages.getString(Messages.PID1Rule_RULE_NAME);\n+\t}\n+\n+\t@Override\n+\tpublic Map<String, RulesToolkit.EventAvailability> getRequiredEvents() {\n+\t\treturn REQUIRED_EVENTS;\n+\t}\n+\n+\t@Override\n+\tpublic RunnableFuture<IResult> createEvaluation(\n+\t\tIItemCollection items, IPreferenceValueProvider valueProvider, IResultValueProvider resultProvider) {\n+\t\treturn new FutureTask<>(() -> getResult(items, valueProvider));\n+\t}\n+\n+\tprivate IResult getResult(IItemCollection items, IPreferenceValueProvider valueProvider) {\n+\t\tIItemCollection vmInfoEvents = items.apply(ItemFilters.type(JdkTypeIDs.VM_INFO));\n+\t\tIAggregator<Set<String>, ?> distinct = Aggregators.distinct(JdkAttributes.PID);\n+\t\tSet<String> aggregate = vmInfoEvents.getAggregate(distinct);\n+\t\tif (aggregate == null || aggregate.isEmpty()) {\n+\t\t\treturn ResultBuilder.createFor(this, valueProvider).setSeverity(Severity.IGNORE)\n+\t\t\t\t\t.setSummary(Messages.getString(Messages.PID1Rule_NO_PID)).build();\n+\t\t}\n+\n+\t\tif (aggregate.size() > 1) {\n+\t\t\tString warningMessage = \"There is more than one PID information available. This should not be possible.\"; \/\/$NON-NLS-1$\n+\t\t\tLogger.getLogger(this.getClass().getName()).warning(warningMessage);\n+\t\t\treturn RulesToolkit.getNotApplicableResult(this, valueProvider, warningMessage);\n+\t\t}\n+\n+\t\tString pid = aggregate.iterator().next();\n+\t\tif (\"1\".equals(pid)) {\n+\t\t\treturn ResultBuilder.createFor(this, valueProvider).setSeverity(Severity.WARNING)\n+\t\t\t\t\t.setSummary(Messages.getString(Messages.PID1Rule_TEXT_INFO))\n+\t\t\t\t\t.setExplanation(Messages.getString(Messages.PID1Rule_TEXT_INFO_LONG))\n+\t\t\t\t\t.setSolution(Messages.getString(Messages.PID1Rule_TEXT_SOLUTION)).build();\n+\t\t}\n+\n+\t\treturn ResultBuilder.createFor(this, valueProvider).setSeverity(Severity.OK)\n+\t\t\t\t.setSummary(Messages.PID1Rule_TEXT_OK).build();\n+\t}\n+\n+\t@Override\n+\tpublic Collection<TypedPreference<?>> getConfigurationAttributes() {\n+\t\treturn Collections.emptyList();\n+\t}\n+\n+\t@Override\n+\tpublic Collection<TypedResult<?>> getResults() {\n+\t\treturn Collections.emptyList();\n+\t}\n+}\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/general\/PID1Rule.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"},{"patch":"@@ -657,0 +657,6 @@\n+\tpublic static final String PID1Rule_RULE_NAME = \"PID1Rule_RULE_NAME\"; \/\/$NON-NLS-1$\n+\tpublic static final String PID1Rule_TEXT_OK = \"PID1Rule_TEXT_OK\"; \/\/$NON-NLS-1$\n+\tpublic static final String PID1Rule_TEXT_INFO_LONG = \"PID1Rule_TEXT_INFO_LONG\"; \/\/$NON-NLS-1$\n+\tpublic static final String PID1Rule_TEXT_INFO = \"PID1Rule_TEXT_INFO\"; \/\/$NON-NLS-1$\n+\tpublic static final String PID1Rule_TEXT_SOLUTION = \"PID1Rule_TEXT_SOLUTION\"; \/\/$NON-NLS-1$\n+\tpublic static final String PID1Rule_NO_PID = \"PID1Rule_NO_PID\"; \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/messages\/internal\/Messages.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+org.openjdk.jmc.flightrecorder.rules.jdk.general.PID1Rule\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/resources\/META-INF\/services\/org.openjdk.jmc.flightrecorder.rules.IRule","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -646,0 +646,6 @@\n+PID1Rule_RULE_NAME=PID-1 Rule\n+PID1Rule_TEXT_OK=No Process runs with PID 1.\n+PID1Rule_TEXT_INFO=Process runs with PID 1.\n+PID1Rule_TEXT_INFO_LONG=Java processes should not run with PID 1 as this PID is reserved for the init process in Linux, which is responsible for signal handling and process management. Java processes do not natively handle signals like SIGTERM correctly, leading to issues such as unclean shutdowns and orphaned child processes.\n+PID1Rule_TEXT_SOLUTION=Enforce the process does not run with PID 1. In Docker, this can be achieved by using the lightweight init system tini with the '--init' flag. For an example with Docker Compose refer to the [documentation from Docker Compose](https:\/\/docs.docker.com\/reference\/compose-file\/services\/#init).\n+PID1Rule_NO_PID=There is no PID information available.\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/messages\/internal\/messages.properties","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -257,1 +257,2 @@\n-            <summary>No undocumented, deprecated or non-recommended option flags were detected.<\/summary>\n+            <summary>Deprecated option flags were detected.<\/summary>\n+            <explanation>The following option flag is or will be deprecated. &lt;ul&gt;&lt;li&gt;-XX:+UnlockCommercialFeatures: Deprecated in Java 11.&lt;\/li&gt;&lt;\/ul&gt; Deprecated option flags should be avoided. In some cases they enable legacy code and in other cases they are ignored completely. They will usually be removed in a later Java release.<\/explanation>\n@@ -263,0 +264,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.jdk.test\/baseline\/Generated_One_JfrRuleBaseline.xml","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -264,0 +264,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -566,0 +571,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -832,0 +842,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -1102,0 +1116,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -1392,0 +1410,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -1657,0 +1680,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -1924,0 +1951,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -2229,0 +2260,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -2529,0 +2564,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -2813,0 +2853,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -3094,0 +3138,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -3376,0 +3424,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -3643,0 +3695,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -3903,0 +3959,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -4209,0 +4269,4 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n@@ -4483,0 +4547,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>OK<\/severity>\n+            <summary>PID1Rule_TEXT_OK<\/summary>\n+        <\/rule>\n@@ -4748,0 +4817,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>OK<\/severity>\n+            <summary>PID1Rule_TEXT_OK<\/summary>\n+        <\/rule>\n@@ -5053,0 +5127,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -5368,0 +5447,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -5430,0 +5514,274 @@\n+    <report>\n+        <file>pid1.jfr<\/file>\n+        <rule>\n+            <id>Allocations.class<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>Allocations.thread<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>ApplicationHalts<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>BufferLost<\/id>\n+            <severity>OK<\/severity>\n+            <summary>No Flight Recorder buffers were lost during the recording.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>BytecodeVerification<\/id>\n+            <severity>OK<\/severity>\n+            <summary>The application ran with bytecode verification enabled.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>ClassLeak<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>ClassLoading<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>CodeCache<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>CompareCpu<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>CompressedOops<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>ContextSwitch<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>DMSIncident<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>DebugNonSafepoints<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>DiscouragedVmOptions<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>DumpReason<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>DuplicateFlags<\/id>\n+            <severity>OK<\/severity>\n+            <summary>There were no duplicate JVM flags on the command line.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>DynamicAgents<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>Errors<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>Exceptions<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>Fatal Errors<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>FewSampledThreads<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>FileForce<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>FileRead<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>FileWrite<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>FinalizersRun<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>FlightRecordingSupport<\/id>\n+            <severity>OK<\/severity>\n+            <summary>The JVM version used for this recording has full Flight Recorder support.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>FullGc<\/id>\n+            <severity>Not Applicable<\/severity>\n+            <summary>This rule is only valid for CMS and G1 Garbage Collectors, neither of which were detected for this JVM.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>GarbageCollectionInfoRule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>GcFreedRatio<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>GcInvertedParallelism<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>GcOptions<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>GcPauseRatio<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>GcPauseTargetRule<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>HeapContent<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>HeapDump<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>HighGc<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>HighJvmCpu<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>IncreasingLiveSet<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>IncreasingMetaSpaceLiveSet<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>JavaBlocking<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>JfrPeriodicEventsFix<\/id>\n+            <severity>OK<\/severity>\n+            <summary>The version of Java you are running is not affected by a performance issue related to periodic events.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>LongGcPause<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>LowOnPhysicalMemory<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>ManagementAgent<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>ManyRunningProcesses<\/id>\n+            <severity>OK<\/severity>\n+            <summary>1 processes were running while this Flight Recording was made.<\/summary>\n+            <explanation>At 11\/30\/24 8:41:01.780 AM, a total of 1 other processes were running on the host machine that this Flight Recording was made on.<\/explanation>\n+            <solution>If this is a server environment, it may be good to only run other critical processes on that machine.<\/solution>\n+        <\/rule>\n+        <rule>\n+            <id>MetaspaceOom<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>MethodProfiling<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>MultipleAgents<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>Options<\/id>\n+            <severity>OK<\/severity>\n+            <summary>No undocumented, deprecated or non-recommended option flags were detected.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>OverAggressiveRecordingSetting<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Warning<\/severity>\n+            <summary>Process runs with PID 1.<\/summary>\n+            <explanation>Java processes should not run with PID 1 as this PID is reserved for the init process in Linux, which is responsible for signal handling and process management. Java processes do not natively handle signals like SIGTERM correctly, leading to issues such as unclean shutdowns and orphaned child processes.<\/explanation>\n+            <solution>Enforce the process does not run with PID 1. In Docker, this can be achieved by using the lightweight init system tini with the '--init' flag. For an example with Docker Compose refer to the [documentation from Docker Compose](https:\/\/docs.docker.com\/reference\/compose-file\/services\/#init).<\/solution>\n+        <\/rule>\n+        <rule>\n+            <id>PasswordsInArguments<\/id>\n+            <severity>OK<\/severity>\n+            <summary>The recording does not seem to contain passwords in the application arguments.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>PasswordsInEnvironment<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>PasswordsInSystemProperties<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>PrimitiveToObjectConversion<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>ProcessStarted<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>SocketRead<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>SocketWrite<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>StackdepthSetting<\/id>\n+            <severity>OK<\/severity>\n+            <summary>No stack traces were truncated in this recording.<\/summary>\n+        <\/rule>\n+        <rule>\n+            <id>StringDeduplication<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>TlabAllocationRatio<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>VMOperations<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>biasedLockingRevocation<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+        <rule>\n+            <id>biasedLockingRevocationPause<\/id>\n+            <severity>Not Applicable<\/severity>\n+        <\/rule>\n+    <\/report>\n@@ -5685,0 +6043,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -6027,0 +6390,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n@@ -6322,0 +6690,5 @@\n+        <rule>\n+            <id>PID1Rule<\/id>\n+            <severity>Ignore<\/severity>\n+            <summary>There is no PID information available.<\/summary>\n+        <\/rule>\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.jdk.test\/src\/main\/resources\/baseline\/JfrRuleBaseline.xml","additions":373,"deletions":0,"binary":false,"changes":373,"status":"modified"},{"patch":"@@ -19,0 +19,1 @@\n+pid1.jfr\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.jdk.test\/src\/main\/resources\/jfr\/index.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.jdk.test\/src\/main\/resources\/jfr\/pid1.jfr","binary":true,"status":"added"}]}