{"files":[{"patch":"@@ -184,1 +184,1 @@\n-\tprivate static boolean traverseAlready = false;\n+\tprivate boolean traverseAlready = false;\n@@ -512,43 +512,5 @@\n-\t\t\t\tflamegraphComponent.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,\n-\t\t\t\t\t\tCollections.emptySet());\n-\t\t\t\tflamegraphComponent.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,\n-\t\t\t\t\t\tCollections.emptySet());\n-\t\t\t\tflamegraphComponent.setFocusable(true);\n-\t\t\t\tflamegraphComponent.setFocusTraversalKeysEnabled(true);\n-\n-\t\t\t\tflamegraphComponent.addKeyListener(new KeyAdapter() {\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void keyPressed(KeyEvent e) {\n-\t\t\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n-\t\t\t\t\t\t\tif (e.getModifiersEx() > 0) {\n-\t\t\t\t\t\t\t\te.getComponent().transferFocusBackward();\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tDisplay.getDefault().syncExec(new Runnable() {\n-\t\t\t\t\t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\t\t\t\t\tsetTraverseAlready(!traverseAlready);\n-\t\t\t\t\t\t\t\t\t\tif (traverseAlready) {\n-\t\t\t\t\t\t\t\t\t\t\tIWorkbenchPage activePage = PlatformUI.getWorkbench()\n-\t\t\t\t\t\t\t\t\t\t\t\t\t.getWorkbenchWindows()[0].getActivePage();\n-\t\t\t\t\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\t\t\t\t\tIViewPart outlineView = activePage.showView(OUTLINE_VIEW_ID);\n-\t\t\t\t\t\t\t\t\t\t\t\tif (activePage.getActiveEditor() != null) {\n-\t\t\t\t\t\t\t\t\t\t\t\t\toutlineView.setFocus();\n-\t\t\t\t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\t\t\t\tIViewPart showView = activePage.showView(JVM_BROWSER_VIEW_ID);\n-\t\t\t\t\t\t\t\t\t\t\t\t\tshowView.setFocus();\n-\t\t\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t\t\t} catch (PartInitException e) {\n-\t\t\t\t\t\t\t\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Failed to set focus\", e); \/\/$NON-NLS-1$\n-\t\t\t\t\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\t\te.getComponent().transferFocus();\n-\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t});\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\te.consume();\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t});\n+\n+\t\t\t\t\/\/ Adding focus traversal and key listener for flamegraph component \n+\t\t\t\tsetFocusTraversalProperties(flamegraphComponent);\n+\t\t\t\taddKeyListenerForFwdFocusToSWT(flamegraphComponent);\n+\n@@ -558,4 +520,0 @@\n-\t\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n-\t\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n-\t\t\tpanel.setFocusable(true);\n-\t\t\tpanel.setFocusTraversalKeysEnabled(true);\n@@ -563,29 +521,3 @@\n-\t\t\tpanel.addKeyListener(new KeyAdapter() {\n-\t\t\t\t@Override\n-\t\t\t\tpublic void keyPressed(KeyEvent e) {\n-\t\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n-\t\t\t\t\t\tif (e.getModifiersEx() > 0) {\n-\t\t\t\t\t\t\tDisplay.getDefault().syncExec(new Runnable() {\n-\t\t\t\t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\t\t\t\tsetTraverseAlready(!traverseAlready);\n-\t\t\t\t\t\t\t\t\tif (traverseAlready) {\n-\t\t\t\t\t\t\t\t\t\tIWorkbenchPage activePage = PlatformUI.getWorkbench().getWorkbenchWindows()[0]\n-\t\t\t\t\t\t\t\t\t\t\t\t.getActivePage();\n-\t\t\t\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\t\t\t\tIViewPart outlineView = activePage.showView(OUTLINE_VIEW_ID);\n-\t\t\t\t\t\t\t\t\t\t\tif (activePage.getActiveEditor() != null) {\n-\t\t\t\t\t\t\t\t\t\t\t\toutlineView.setFocus();\n-\t\t\t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\t\t\tIViewPart showView = activePage.showView(JVM_BROWSER_VIEW_ID);\n-\t\t\t\t\t\t\t\t\t\t\t\tshowView.setFocus();\n-\t\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t\t} catch (PartInitException e) {\n-\t\t\t\t\t\t\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\"Failed to set focus\", e); \/\/$NON-NLS-1$\n-\t\t\t\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\te.getComponent().transferFocusBackward();\n-\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t});\n+\t\t\t\/\/ Adding focus traversal and key listener for main panel\n+\t\t\tsetFocusTraversalProperties(panel);\n+\t\t\taddKeyListenerForBkwdFocustoSWT(panel);\n@@ -593,7 +525,0 @@\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\te.getComponent().transferFocus();\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\te.consume();\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t});\n@@ -604,4 +529,0 @@\n-\tprivate static void setTraverseAlready(boolean isTraverseAlready) {\n-\t\ttraverseAlready = isTraverseAlready;\n-\t}\n-\n@@ -659,4 +580,3 @@\n-\t\tsearchField.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n-\t\tsearchField.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n-\t\tsearchField.setFocusable(true);\n-\t\tsearchField.setFocusTraversalKeysEnabled(true);\n+\t\t\/\/ Adding focus traversal and key listener for search field\n+\t\tsetFocusTraversalProperties(searchField);\n+\t\taddKeyListener(searchField);\n@@ -664,1 +584,41 @@\n-\t\tsearchField.addKeyListener(new KeyAdapter() {\n+\t\tvar panel = new JPanel(new FlowLayout(FlowLayout.LEFT));\n+\t\tpanel.add(new JLabel(getFlamegraphMessage(\"FLAMEVIEW_SEARCH\")));\n+\n+\t\t\/\/ Adding focus traversal and key listener for panel\n+\t\tsetFocusTraversalProperties(panel);\n+\t\taddKeyListener(panel);\n+\n+\t\tpanel.add(searchField);\n+\t\treturn panel;\n+\t}\n+\n+\t\/**\n+\t * This method sets the focus from swing to SWT. If outline page is active focus will be set to\n+\t * outline view else to JVM Browser\n+\t *\/\n+\tprivate void setFocusBackToSWT() {\n+\t\tDisplay.getDefault().syncExec(new Runnable() {\n+\t\t\tpublic void run() {\n+\t\t\t\tIWorkbenchPage activePage = PlatformUI.getWorkbench().getWorkbenchWindows()[0].getActivePage();\n+\t\t\t\ttry {\n+\t\t\t\t\tIViewPart outlineView = activePage.showView(OUTLINE_VIEW_ID);\n+\t\t\t\t\tif (activePage.getActiveEditor() != null) {\n+\t\t\t\t\t\toutlineView.setFocus();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tIViewPart showView = activePage.showView(JVM_BROWSER_VIEW_ID);\n+\t\t\t\t\t\tshowView.setFocus();\n+\t\t\t\t\t}\n+\t\t\t\t} catch (PartInitException e) {\n+\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO, \"Failed to set focus\", e); \/\/$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\t\/**\n+\t * Adding key listener to transfer focus forward or backward based on 'TAB' or 'Shift + TAB'\n+\t * \n+\t * @param comp\n+\t *\/\n+\tprivate void addKeyListener(JComponent comp) {\n+\t\tcomp.addKeyListener(new KeyAdapter() {\n@@ -668,0 +628,1 @@\n+\t\t\t\t\t\/\/ Shift + TAB\n@@ -677,6 +638,1 @@\n-\t\tvar panel = new JPanel(new FlowLayout(FlowLayout.LEFT));\n-\t\tpanel.add(new JLabel(getFlamegraphMessage(\"FLAMEVIEW_SEARCH\")));\n-\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n-\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n-\t\tpanel.setFocusable(true);\n-\t\tpanel.setFocusTraversalKeysEnabled(true);\n+\t}\n@@ -684,1 +640,8 @@\n-\t\tpanel.addKeyListener(new KeyAdapter() {\n+\t\/**\n+\t * Adding key listener and checking if all the swing components are already cycled (Fwd) once.\n+\t * On completion of swing component cycle transferring focus back to SWT.\n+\t * \n+\t * @param comp\n+\t *\/\n+\tprivate void addKeyListenerForFwdFocusToSWT(JComponent comp) {\n+\t\tcomp.addKeyListener(new KeyAdapter() {\n@@ -688,0 +651,1 @@\n+\t\t\t\t\t\/\/ Shift + TAB\n@@ -690,0 +654,35 @@\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttraverseAlready = !traverseAlready;\n+\t\t\t\t\t\t\/\/ If already cycled (Fwd) within swing component then transfer the focus back to SWT\n+\t\t\t\t\t\tif (traverseAlready) {\n+\t\t\t\t\t\t\tsetFocusBackToSWT();\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\te.getComponent().transferFocus();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\te.consume();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\t\/**\n+\t * Adding key listener and checking if all the swing components are already cycled (Bkwd) once.\n+\t * On completion of swing component cycle transferring focus back to SWT.\n+\t * \n+\t * @param comp\n+\t *\/\n+\tprivate void addKeyListenerForBkwdFocustoSWT(JComponent comp) {\n+\t\tcomp.addKeyListener(new KeyAdapter() {\n+\t\t\t@Override\n+\t\t\tpublic void keyPressed(KeyEvent e) {\n+\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n+\t\t\t\t\t\/\/ Shift + TAB\n+\t\t\t\t\tif (e.getModifiersEx() > 0) {\n+\t\t\t\t\t\ttraverseAlready = !traverseAlready;\n+\t\t\t\t\t\t\/\/ If already cycled (Bkwd) within swing component then transfer the focus back to SWT\n+\t\t\t\t\t\tif (traverseAlready) {\n+\t\t\t\t\t\t\tsetFocusBackToSWT();\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\te.getComponent().transferFocusBackward();\n+\t\t\t\t\t\t}\n@@ -697,2 +696,12 @@\n-\t\tpanel.add(searchField);\n-\t\treturn panel;\n+\t}\n+\n+\t\/**\n+\t * Setting the focus traversal properties.\n+\t * \n+\t * @param comp\n+\t *\/\n+\tprivate void setFocusTraversalProperties(JComponent comp) {\n+\t\tcomp.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\tcomp.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\tcomp.setFocusable(true);\n+\t\tcomp.setFocusTraversalKeysEnabled(true);\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flamegraph\/views\/FlamegraphSwingView.java","additions":111,"deletions":102,"binary":false,"changes":213,"status":"modified"}]}