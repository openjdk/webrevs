{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, 2021 Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Red Hat Inc. All rights reserved.\n@@ -209,0 +209,1 @@\n+\t\t\t\ttableInspector.setFocus();\n@@ -216,0 +217,1 @@\n+\t\t\t\t\ttableInspector.setFocus();\n@@ -230,0 +232,1 @@\n+\t\ttableInspector.setFocus();\n","filename":"application\/org.openjdk.jmc.console.agent\/src\/main\/java\/org\/openjdk\/jmc\/console\/agent\/manager\/wizards\/PresetManagerPage.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,2 @@\n+import org.eclipse.swt.events.TraverseEvent;\n+import org.eclipse.swt.events.TraverseListener;\n@@ -187,0 +189,8 @@\n+\t\tdescriptionControl.addTraverseListener(new TraverseListener() {\n+\t\t\t@Override\n+\t\t\tpublic void keyTraversed(TraverseEvent e) {\n+\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_NEXT || e.detail == SWT.TRAVERSE_TAB_PREVIOUS) {\n+\t\t\t\t\te.doit = true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/TemplateEditPage.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Datadog, Inc. All rights reserved.\n@@ -36,0 +36,15 @@\n+import static java.util.Collections.emptySet;\n+import static java.util.Collections.reverseOrder;\n+import static java.util.Map.Entry.comparingByValue;\n+import static java.util.stream.Collectors.toMap;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_FLAME_GRAPH;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_ICICLE_GRAPH;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_JPEG_IMAGE;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PNG_IMAGE;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PRINT;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_RESET_ZOOM;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_AS;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_FLAME_GRAPH_AS;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_TOGGLE_MINIMAP;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.MessagesUtils.getFlamegraphMessage;\n+\n@@ -38,0 +53,3 @@\n+import java.awt.KeyboardFocusManager;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n@@ -95,0 +113,1 @@\n+import org.eclipse.ui.IViewPart;\n@@ -96,0 +115,1 @@\n+import org.eclipse.ui.IWorkbenchPage;\n@@ -132,15 +152,0 @@\n-import static java.util.Collections.emptySet;\n-import static java.util.Collections.reverseOrder;\n-import static java.util.Map.Entry.comparingByValue;\n-import static java.util.stream.Collectors.toMap;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_FLAME_GRAPH;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_ICICLE_GRAPH;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_JPEG_IMAGE;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PNG_IMAGE;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PRINT;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_RESET_ZOOM;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_AS;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_FLAME_GRAPH_AS;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_TOGGLE_MINIMAP;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.MessagesUtils.getFlamegraphMessage;\n-\n@@ -165,0 +170,2 @@\n+\tprivate static final String OUTLINE_VIEW_ID = \"org.eclipse.ui.views.ContentOutline\";\n+\tprivate static final String JVM_BROWSER_VIEW_ID = \"org.openjdk.jmc.browser.views.JVMBrowserView\";\n@@ -177,0 +184,1 @@\n+\tprivate static boolean traverseAlready = false;\n@@ -502,2 +510,46 @@\n-\t\t\t\tflamegraphView.component.setBackground(bgColorAwtColor);\n-\t\t\t\tpanel.add(flamegraphView.component, BorderLayout.CENTER);\n+\t\t\t\tJComponent flamegraphComponent = flamegraphView.component;\n+\t\t\t\tflamegraphComponent.setBackground(bgColorAwtColor);\n+\t\t\t\tflamegraphComponent.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,\n+\t\t\t\t\t\tCollections.emptySet());\n+\t\t\t\tflamegraphComponent.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,\n+\t\t\t\t\t\tCollections.emptySet());\n+\t\t\t\tflamegraphComponent.setFocusable(true);\n+\t\t\t\tflamegraphComponent.setFocusTraversalKeysEnabled(true);\n+\n+\t\t\t\tflamegraphComponent.addKeyListener(new KeyAdapter() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void keyPressed(KeyEvent e) {\n+\t\t\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n+\t\t\t\t\t\t\tif (e.getModifiersEx() > 0) {\n+\t\t\t\t\t\t\t\te.getComponent().transferFocusBackward();\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\tDisplay.getDefault().syncExec(new Runnable() {\n+\t\t\t\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\t\t\t\tsetTraverseAlready(!traverseAlready);\n+\t\t\t\t\t\t\t\t\t\tif (traverseAlready) {\n+\t\t\t\t\t\t\t\t\t\t\tIWorkbenchPage activePage = PlatformUI.getWorkbench()\n+\t\t\t\t\t\t\t\t\t\t\t\t\t.getWorkbenchWindows()[0].getActivePage();\n+\t\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\t\tIViewPart outlineView = activePage.showView(OUTLINE_VIEW_ID);\n+\t\t\t\t\t\t\t\t\t\t\t\tif (activePage.getActiveEditor() != null) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\toutlineView.setFocus();\n+\t\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\t\tIViewPart showView = activePage.showView(JVM_BROWSER_VIEW_ID);\n+\t\t\t\t\t\t\t\t\t\t\t\t\tshowView.setFocus();\n+\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t\t\t} catch (PartInitException e) {\n+\t\t\t\t\t\t\t\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Failed to set focus\", e); \/\/$NON-NLS-1$\n+\t\t\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\te.getComponent().transferFocus();\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\te.consume();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tpanel.add(flamegraphComponent, BorderLayout.CENTER);\n@@ -506,0 +558,42 @@\n+\t\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\t\tpanel.setFocusable(true);\n+\t\t\tpanel.setFocusTraversalKeysEnabled(true);\n+\n+\t\t\tpanel.addKeyListener(new KeyAdapter() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void keyPressed(KeyEvent e) {\n+\t\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n+\t\t\t\t\t\tif (e.getModifiersEx() > 0) {\n+\t\t\t\t\t\t\tDisplay.getDefault().syncExec(new Runnable() {\n+\t\t\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\t\t\tsetTraverseAlready(!traverseAlready);\n+\t\t\t\t\t\t\t\t\tif (traverseAlready) {\n+\t\t\t\t\t\t\t\t\t\tIWorkbenchPage activePage = PlatformUI.getWorkbench().getWorkbenchWindows()[0]\n+\t\t\t\t\t\t\t\t\t\t\t\t.getActivePage();\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tIViewPart outlineView = activePage.showView(OUTLINE_VIEW_ID);\n+\t\t\t\t\t\t\t\t\t\t\tif (activePage.getActiveEditor() != null) {\n+\t\t\t\t\t\t\t\t\t\t\t\toutlineView.setFocus();\n+\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\tIViewPart showView = activePage.showView(JVM_BROWSER_VIEW_ID);\n+\t\t\t\t\t\t\t\t\t\t\t\tshowView.setFocus();\n+\t\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t\t} catch (PartInitException e) {\n+\t\t\t\t\t\t\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\"Failed to set focus\", e); \/\/$NON-NLS-1$\n+\t\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\te.getComponent().transferFocusBackward();\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t});\n+\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\te.getComponent().transferFocus();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\te.consume();\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t});\n@@ -510,0 +604,4 @@\n+\tprivate static void setTraverseAlready(boolean isTraverseAlready) {\n+\t\ttraverseAlready = isTraverseAlready;\n+\t}\n+\n@@ -560,0 +658,19 @@\n+\n+\t\tsearchField.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\tsearchField.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\tsearchField.setFocusable(true);\n+\t\tsearchField.setFocusTraversalKeysEnabled(true);\n+\n+\t\tsearchField.addKeyListener(new KeyAdapter() {\n+\t\t\t@Override\n+\t\t\tpublic void keyPressed(KeyEvent e) {\n+\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n+\t\t\t\t\tif (e.getModifiersEx() > 0) {\n+\t\t\t\t\t\te.getComponent().transferFocusBackward();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\te.getComponent().transferFocus();\n+\t\t\t\t\t}\n+\t\t\t\t\te.consume();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n@@ -562,0 +679,18 @@\n+\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\tpanel.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, Collections.emptySet());\n+\t\tpanel.setFocusable(true);\n+\t\tpanel.setFocusTraversalKeysEnabled(true);\n+\n+\t\tpanel.addKeyListener(new KeyAdapter() {\n+\t\t\t@Override\n+\t\t\tpublic void keyPressed(KeyEvent e) {\n+\t\t\t\tif (e.getKeyCode() == KeyEvent.VK_TAB) {\n+\t\t\t\t\tif (e.getModifiersEx() > 0) {\n+\t\t\t\t\t\te.getComponent().transferFocusBackward();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\te.getComponent().transferFocus();\n+\t\t\t\t\t}\n+\t\t\t\t\te.consume();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n@@ -681,3 +816,3 @@\n-\t\t\tfd.setFilterNames(new String[] {getFlamegraphMessage(FLAMEVIEW_PNG_IMAGE),\n-\t\t\t\t\tgetFlamegraphMessage(FLAMEVIEW_JPEG_IMAGE)});\n-\t\t\tfd.setFilterExtensions(new String[] {\"*.png\", \"*.jpg\"}); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n+\t\t\tfd.setFilterNames(new String[] { getFlamegraphMessage(FLAMEVIEW_PNG_IMAGE),\n+\t\t\t\t\tgetFlamegraphMessage(FLAMEVIEW_JPEG_IMAGE) });\n+\t\t\tfd.setFilterExtensions(new String[] { \"*.png\", \"*.jpg\" }); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n@@ -692,1 +827,2 @@\n-\t\t\t\/\/ FIXME: FileDialog filterIndex returns -1 (https:\/\/bugs.eclipse.org\/bugs\/show_bug.cgi?id=546256)\n+\t\t\t\/\/ FIXME: FileDialog filterIndex returns -1\n+\t\t\t\/\/ (https:\/\/bugs.eclipse.org\/bugs\/show_bug.cgi?id=546256)\n@@ -728,1 +864,1 @@\n-\t\t\t\t\t.map(f -> switch (f.substring(f.lastIndexOf('.') + 1)) { \/\/$NON-NLS-1$\n+\t\t\t\t\t.map(f -> switch (f.substring(f.lastIndexOf('.') + 1)) { \/\/ $NON-NLS-1$\n@@ -730,1 +866,1 @@\n-\t\t\t\t\t\t\t\"jpg\"; \/\/$NON-NLS-1$\n+\t\t\t\t\t\t\"jpg\"; \/\/$NON-NLS-1$\n@@ -732,1 +868,1 @@\n-\t\t\t\t\t\t\t\"png\"; \/\/$NON-NLS-1$\n+\t\t\t\t\t\t\"png\"; \/\/$NON-NLS-1$\n@@ -742,2 +878,4 @@\n-\t\t\t\t\t\/\/ JPG does not have an alpha channel, and ImageIO.write will simply write a 0 byte file\n-\t\t\t\t\t\/\/ to workaround this it is required to copy the image to a BufferedImage without alpha channel\n+\t\t\t\t\t\/\/ JPG does not have an alpha channel, and ImageIO.write will simply write a 0\n+\t\t\t\t\t\/\/ byte file\n+\t\t\t\t\t\/\/ to workaround this it is required to copy the image to a BufferedImage\n+\t\t\t\t\t\/\/ without alpha channel\n@@ -761,1 +899,1 @@\n-\t\treturn ResourceLocator.imageDescriptorFromBundle(PLUGIN_ID, DIR_ICONS + iconName).orElse(null); \/\/$NON-NLS-1$\n+\t\treturn ResourceLocator.imageDescriptorFromBundle(PLUGIN_ID, DIR_ICONS + iconName).orElse(null); \/\/ $NON-NLS-1$\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flamegraph\/views\/FlamegraphSwingView.java","additions":167,"deletions":29,"binary":false,"changes":196,"status":"modified"}]}