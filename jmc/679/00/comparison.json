{"files":[{"patch":"@@ -144,0 +144,2 @@\n+\t\tcase JdkTypeIDs.TENURING_DISTRIBUTION:\n+\t\t\treturn new Color(0x4682B4);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/common\/TypeLabelProvider.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -243,0 +243,4 @@\n+\tpublic static String GarbageCollectionsPage_TENURING_DISTRIBUTION_TITLE;\n+\tpublic static String GarbageCollectionsPage_TENURING_DISTRIBUTION_NO_SELECTION_MESSAGE;\n+\tpublic static String GarbageCollectionsPage_TENURING_DISTRIBUTION_MULTI_SELECTION_MESSAGE;\n+\tpublic static String GarbageCollectionsPage_TENURING_SIZE;\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/Messages.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+import org.eclipse.swt.custom.StackLayout;\n@@ -70,0 +71,1 @@\n+import org.eclipse.swt.widgets.Label;\n@@ -95,0 +97,1 @@\n+import org.openjdk.jmc.flightrecorder.jdk.JdkAggregators;\n@@ -109,0 +112,1 @@\n+import org.openjdk.jmc.flightrecorder.ui.common.BucketBuilder;\n@@ -122,0 +126,1 @@\n+import org.openjdk.jmc.ui.charts.IQuantitySeries;\n@@ -128,0 +133,1 @@\n+import org.openjdk.jmc.ui.charts.XYDataRenderer;\n@@ -180,0 +186,3 @@\n+\tprivate static final Color TENURING_DISTRIBUTION_EVENT_COLOR = TypeLabelProvider\n+\t\t\t.getColorOrDefault(JdkTypeIDs.TENURING_DISTRIBUTION);\n+\n@@ -190,0 +199,2 @@\n+\tprivate static final IAggregator<IQuantity, ?> tenuringAgeSizeAggregator = JdkAggregators.TENURING_AGE_SIZE;\n+\n@@ -291,0 +302,6 @@\n+\t\tprivate Composite tenuringComposite;\n+\t\tprivate StackLayout tenuringLayout;\n+\t\tprivate ChartCanvas tenuringChartCanvas;\n+\t\tprivate XYChart tenuringChart;\n+\t\tprivate Label noGcIdSelectionLabel;\n+\t\tprivate Label multiGcIdSelectionLabel;\n@@ -344,0 +361,1 @@\n+\t\t\t\tupdateTenuringHistogram();\n@@ -391,0 +409,18 @@\n+\t\t\ttenuringComposite = toolkit.createComposite(gcInfoFolder);\n+\t\t\ttenuringLayout = new StackLayout();\n+\t\t\ttenuringComposite.setLayout(tenuringLayout);\n+\t\t\tnoGcIdSelectionLabel = new Label(tenuringComposite, SWT.CENTER);\n+\t\t\tnoGcIdSelectionLabel.setText(Messages.GarbageCollectionsPage_TENURING_DISTRIBUTION_NO_SELECTION_MESSAGE);\n+\t\t\tmultiGcIdSelectionLabel = new Label(tenuringComposite, SWT.CENTER);\n+\t\t\tmultiGcIdSelectionLabel\n+\t\t\t\t\t.setText(Messages.GarbageCollectionsPage_TENURING_DISTRIBUTION_MULTI_SELECTION_MESSAGE);\n+\t\t\ttenuringChart = new XYChart(UnitLookup.NUMBER.getDefaultUnit().quantity(0),\n+\t\t\t\t\tUnitLookup.NUMBER.getDefaultUnit().quantity(16), RendererToolkit.empty(), 95);\n+\t\t\ttenuringChartCanvas = new ChartCanvas(tenuringComposite);\n+\t\t\ttenuringChartCanvas.setChart(tenuringChart);\n+\t\t\tDataPageToolkit.createChartTooltip(tenuringChartCanvas);\n+\t\t\ttenuringLayout.topControl = noGcIdSelectionLabel;\n+\t\t\ttenuringComposite.layout();\n+\t\t\tDataPageToolkit.addTabItem(gcInfoFolder, tenuringComposite,\n+\t\t\t\t\tMessages.GarbageCollectionsPage_TENURING_DISTRIBUTION_TITLE);\n+\n@@ -455,0 +491,24 @@\n+\t\tprivate void updateTenuringHistogram() {\n+\t\t\tSet<IQuantity> selectedGcIds = getSelectedGcIds();\n+\t\t\tif (selectedGcIds.isEmpty()) {\n+\t\t\t\ttenuringLayout.topControl = noGcIdSelectionLabel;\n+\t\t\t} else if (selectedGcIds.size() > 1) {\n+\t\t\t\ttenuringLayout.topControl = multiGcIdSelectionLabel;\n+\t\t\t} else {\n+\t\t\t\tIQuantity selectedGcId = selectedGcIds.iterator().next();\n+\t\t\t\tIItemCollection items = getDataSource().getItems()\n+\t\t\t\t\t\t.apply(ItemFilters.type(JdkTypeIDs.TENURING_DISTRIBUTION))\n+\t\t\t\t\t\t.apply(ItemFilters.equals(JdkAttributes.GC_ID, selectedGcId));\n+\t\t\t\tIQuantitySeries<IQuantity[]> series = BucketBuilder.aggregatorSeries(items, tenuringAgeSizeAggregator,\n+\t\t\t\t\t\tJdkAttributes.TENURING_DISTRIBUTION_AGE);\n+\t\t\t\tXYDataRenderer renderer = new XYDataRenderer(UnitLookup.MEMORY.getDefaultUnit().quantity(0),\n+\t\t\t\t\t\ttenuringAgeSizeAggregator.getName(), tenuringAgeSizeAggregator.getDescription());\n+\t\t\t\trenderer.addBarChart(tenuringAgeSizeAggregator.getName(), series, TENURING_DISTRIBUTION_EVENT_COLOR);\n+\t\t\t\tIXDataRenderer itemRow = new ItemRow(Messages.GarbageCollectionsPage_TENURING_SIZE,\n+\t\t\t\t\t\ttenuringAgeSizeAggregator.getDescription(), renderer, items);\n+\t\t\t\ttenuringChartCanvas.replaceRenderer(itemRow);\n+\t\t\t\ttenuringLayout.topControl = tenuringChartCanvas;\n+\t\t\t}\n+\t\t\ttenuringComposite.layout();\n+\t\t}\n+\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/GarbageCollectionsPage.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -347,0 +347,4 @@\n+GarbageCollectionsPage_TENURING_DISTRIBUTION_TITLE=Tenuring Distribution\n+GarbageCollectionsPage_TENURING_DISTRIBUTION_NO_SELECTION_MESSAGE=No valid Selection\n+GarbageCollectionsPage_TENURING_DISTRIBUTION_MULTI_SELECTION_MESSAGE=Distribution is shown for a single GC cycle\n+GarbageCollectionsPage_TENURING_SIZE=Size\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/messages.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -527,0 +527,5 @@\n+\tpublic static final IAggregator<IQuantity, ?> TENURING_AGE_SIZE = Aggregators.sum(\n+\t\t\tMessages.getString(Messages.AGGR_TENURING_AGE_SIZE),\n+\t\t\tMessages.getString(Messages.AGGR_TENURING_AGE_SIZE_DESC), JdkTypeIDs.TENURING_DISTRIBUTION,\n+\t\t\tJdkAttributes.TENURING_DISTRIBUTION_SIZE);\n+\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAggregators.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -690,0 +690,6 @@\n+\tpublic static final IAttribute<IQuantity> TENURING_DISTRIBUTION_SIZE = attr(\"size\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_TENURING_DISTRIBUTION_SIZE),\n+\t\t\tMessages.getString(Messages.ATTR_TENURING_DISTRIBUTION_SIZE_DESC), MEMORY);\n+\tpublic static final IAttribute<IQuantity> TENURING_DISTRIBUTION_AGE = attr(\"age\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_TENURING_DISTRIBUTION_AGE),\n+\t\t\tMessages.getString(Messages.ATTR_TENURING_DISTRIBUTION_AGE_DESC), NUMBER);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAttributes.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -189,0 +189,1 @@\n+\tpublic static final String TENURING_DISTRIBUTION = PREFIX + \"TenuringDistribution\";\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkTypeIDs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -144,0 +144,2 @@\n+\tpublic static final String AGGR_TENURING_AGE_SIZE = \"AGGR_TENURING_AGE_SIZE\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_TENURING_AGE_SIZE_DESC = \"AGGR_TENURING_AGE_SIZE_DESC\"; \/\/$NON-NLS-1$\n@@ -535,0 +537,4 @@\n+\tpublic static final String ATTR_TENURING_DISTRIBUTION_SIZE = \"ATTR_TENURING_DISTRIBUTION_SIZE\"; \/\/$NON-NLS-1$\n+\tpublic static final String ATTR_TENURING_DISTRIBUTION_SIZE_DESC = \"ATTR_TENURING_DISTRIBUTION_SIZE_DESC\"; \/\/$NON-NLS-1$\n+\tpublic static final String ATTR_TENURING_DISTRIBUTION_AGE = \"ATTR_TENURING_DISTRIBUTION_AGE\"; \/\/$NON-NLS-1$\n+\tpublic static final String ATTR_TENURING_DISTRIBUTION_AGE_DESC = \"ATTR_TENURING_DISTRIBUTION_AGE_DESC\"; \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/messages\/internal\/Messages.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -180,0 +180,4 @@\n+ATTR_TENURING_DISTRIBUTION_SIZE=Tenuring Distribution Size\n+ATTR_TENURING_DISTRIBUTION_SIZE_DESC=Total size of objects of the corresponding age in the young generation.\n+ATTR_TENURING_DISTRIBUTION_AGE=Tenuring Distribution Age\n+ATTR_TENURING_DISTRIBUTION_AGE_DESC=Age of objects in the young generation.\n@@ -473,0 +477,2 @@\n+AGGR_TENURING_AGE_SIZE=Tenuring Age Size\n+AGGR_TENURING_AGE_SIZE_DESC=The total size of surviving objects by age in the young garbage collection.\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/jdk\/messages\/internal\/messages.properties","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}