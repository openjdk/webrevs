{"files":[{"patch":"@@ -1096,0 +1096,25 @@\n+\tpublic static <T> IAggregator<IQuantity, ?> getJvmPid(String typeId, IAttribute<T> attribute) {\n+\t\tIAggregator<Set<T>, ?> aggregator = Aggregators.distinct(attribute);\n+\t\taggregator = filter(aggregator, ItemFilters.type(typeId));\n+\t\treturn Aggregators.valueBuilderAggregator(aggregator, new IValueBuilder<IQuantity, Set<T>>() {\n+\t\t\t@Override\n+\t\t\tpublic IType<? super IQuantity> getValueType() {\n+\t\t\t\treturn UnitLookup.NUMBER;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic IQuantity getValue(Set<T> source) {\n+\t\t\t\tLong value = 0L;\n+\t\t\t\tif (source.isEmpty()) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t} else {\n+\t\t\t\t\tIterator<?> itr = source.iterator();\n+\t\t\t\t\twhile (itr.hasNext()) {\n+\t\t\t\t\t\tvalue = Long.valueOf((String) itr.next());\n+\t\t\t\t\t}\n+\t\t\t\t\treturn UnitLookup.NUMBER_UNITY.quantity(value);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}, attribute.getName(), attribute.getDescription());\n+\t}\n+\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/item\/Aggregators.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -118,0 +118,2 @@\n+\t@Deprecated\n+\tpublic static final IAggregator<IQuantity, ?> JVM_PID = Aggregators.getJvmPid(VM_INFO, JdkAttributes.PID);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAggregators.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}