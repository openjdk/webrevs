{"files":[{"patch":"@@ -166,1 +166,1 @@\n-        NavigableMap<Integer, AnnotationMirror> toBeFound;\n+        NavigableMap<Integer, List<AnnotationMirror>> toBeFound;\n@@ -174,1 +174,1 @@\n-            NavigableMap<Integer, AnnotationMirror> testByPos = new TreeMap<>();\n+            NavigableMap<Integer, List<AnnotationMirror>> testByPos = new TreeMap<>();\n@@ -177,1 +177,1 @@\n-                    testByPos.put(pos, test);\n+                    testByPos.computeIfAbsent(pos, ArrayList::new).add(test);\n@@ -199,9 +199,5 @@\n-                            AnnotationMirror test = toBeFound.pollFirstEntry().getValue();\n-                            String annoType = getAnnoType(test);\n-                            AnnotationMirror anno = getAnnotation(t, annoType);\n-                            if (anno == null) {\n-                                error(elem, \"annotation not found on \" + count + \": \" + t);\n-                            } else {\n-                                String v = getValue(anno, \"value\").toString();\n-                                if (v.equals(getExpect(test))) {\n-                                    out.println(\"found \" + anno + \" as expected\");\n+                            for (AnnotationMirror test : toBeFound.pollFirstEntry().getValue()) {\n+                                String annoType = getAnnoType(test);\n+                                AnnotationMirror anno = getAnnotation(t, annoType);\n+                                if (anno == null) {\n+                                    error(elem, \"annotation not found on \" + count + \": \" + t);\n@@ -209,1 +205,6 @@\n-                                    error(elem, \"Unexpected value: \" + v + \", expected: \" + getExpect(test));\n+                                    String v = getValue(anno, \"value\").toString();\n+                                    if (v.equals(getExpect(test))) {\n+                                        out.println(\"found \" + anno + \" as expected\");\n+                                    } else {\n+                                        error(elem, \"Unexpected value: \" + v + \", expected: \" + getExpect(test));\n+                                    }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"}]}