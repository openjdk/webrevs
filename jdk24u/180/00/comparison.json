{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,5 +91,0 @@\n-    @Override\n-    protected boolean isExtendedAttributesEnabled(UnixPath path) {\n-        return false;\n-    }\n-\n@@ -98,0 +93,16 @@\n+        \/\/ support UserDefinedAttributeView if extended attributes enabled\n+        if (type == UserDefinedFileAttributeView.class) {\n+            \/\/ lookup fstypes.properties\n+            FeatureStatus status = checkIfFeaturePresent(\"user_xattr\");\n+            if (status == FeatureStatus.PRESENT)\n+                return true;\n+            if (status == FeatureStatus.NOT_PRESENT)\n+                return false;\n+\n+            \/\/ typical AIX file system types that support xattr (JFS2 with EA enabled)\n+            String fstype = entry().fstype();\n+            if (\"jfs2\".equals(fstype)) {\n+                UnixPath dir = new UnixPath(file().getFileSystem(), entry().dir());\n+                return isExtendedAttributesEnabled(dir);\n+            }\n+        }\n@@ -103,0 +114,2 @@\n+        if (name.equals(\"user\"))\n+            return supportsFileAttributeView(UserDefinedFileAttributeView.class);\n@@ -105,0 +118,1 @@\n+\n","filename":"src\/java.base\/aix\/classes\/sun\/nio\/fs\/AixFileStore.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+            result.add(\"user\");\n","filename":"src\/java.base\/aix\/classes\/sun\/nio\/fs\/AixFileSystem.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import java.nio.file.*;\n+import java.nio.file.attribute.*;\n@@ -52,0 +54,25 @@\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public <V extends FileAttributeView> V getFileAttributeView(Path obj,\n+                                                                Class<V> type,\n+                                                                LinkOption... options)\n+    {\n+        if (type == UserDefinedFileAttributeView.class) {\n+            return (V) new AixUserDefinedFileAttributeView(UnixPath.toUnixPath(obj),\n+                    Util.followLinks(options));\n+        }\n+        return super.getFileAttributeView(obj, type, options);\n+    }\n+\n+    @Override\n+    public DynamicFileAttributeView getFileAttributeView(Path obj,\n+                                                         String name,\n+                                                         LinkOption... options)\n+    {\n+        if (name.equals(\"user\")) {\n+            return new AixUserDefinedFileAttributeView(UnixPath.toUnixPath(obj),\n+                    Util.followLinks(options));\n+        }\n+        return super.getFileAttributeView(obj, name, options);\n+    }\n","filename":"src\/java.base\/aix\/classes\/sun\/nio\/fs\/AixFileSystemProvider.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.nio.fs;\n+\n+class AixUserDefinedFileAttributeView\n+    extends UnixUserDefinedFileAttributeView\n+{\n+\n+    AixUserDefinedFileAttributeView(UnixPath file, boolean followLinks) {\n+        super(file, followLinks);\n+    }\n+\n+    @Override\n+    protected int maxNameLength() {\n+        return 255;\n+    }\n+\n+}\n","filename":"src\/java.base\/aix\/classes\/sun\/nio\/fs\/AixUserDefinedFileAttributeView.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,0 +127,2 @@\n+#elif defined(_AIX)\n+    static final int PREFIX_XATTR_NOT_FOUND = ENOATTR;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixConstants.java.template","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,4 @@\n+#if defined(_AIX)\n+#include <sys\/ea.h>\n+#endif\n+\n@@ -390,1 +394,1 @@\n-#if defined(_SYS_XATTR_H) || defined(_SYS_XATTR_H_)\n+#if defined(_SYS_XATTR_H) || defined(_SYS_XATTR_H_) || defined(_AIX)\n@@ -1384,0 +1388,2 @@\n+#elif defined(_AIX)\n+    res = fgetea(fd, name, value, valueLen);\n@@ -1405,0 +1411,2 @@\n+#elif defined(_AIX)\n+    res = fsetea(fd, name, value, valueLen, 0);\n@@ -1424,0 +1432,2 @@\n+#elif defined(_AIX)\n+    res = fremoveea(fd, name);\n@@ -1443,0 +1453,2 @@\n+#elif defined(_AIX)\n+    res = flistea(fd, list, (size_t)size);\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"}]}