{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallByRefHighArity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"--add-opens=java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"--add-opens=java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    @Fork(value = 3, jvmArgsAppend = \"-XX:CompileCommand=inline,jdk.internal.foreign.AbstractMemorySegmentImpl::ofBuffer,false\")\n+    @Fork(value = 3, jvmArgs = \"-XX:CompileCommand=inline,jdk.internal.foreign.AbstractMemorySegmentImpl::ofBuffer,false\")\n@@ -66,1 +66,1 @@\n-    @Fork(value = 3, jvmArgsAppend = \"-XX:CompileCommand=inline,jdk.internal.foreign.AbstractMemorySegmentImpl::ofBuffer,true\")\n+    @Fork(value = 3, jvmArgs = \"-XX:CompileCommand=inline,jdk.internal.foreign.AbstractMemorySegmentImpl::ofBuffer,true\")\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/SegmentOfBuffer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-opens\", \"java.base\/sun.security.provider=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-opens\", \"java.base\/sun.security.provider=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/MLDSA.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-opens\", \"java.base\/com.sun.crypto.provider=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-opens\", \"java.base\/com.sun.crypto.provider=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/MLKEMBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-@Fork(jvmArgsAppend = {\"-Xms20g\", \"-Xmx20g\", \"-XX:+UseZGC\"})\n+@Fork(jvmArgs = {\"-Xms20g\", \"-Xmx20g\", \"-XX:+UseZGC\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/AESBench.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorMultiplyOptBenchmark.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorXXH3HashingBenchmark.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -746,2 +746,4 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n-        \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-MergeStores\"\n+    @Fork(value = 1, jvmArgs = {\n+        \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-MergeStores\",\n+        \"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+        \"--add-exports\", \"java.base\/jdk.internal.util=ALL-UNNAMED\"\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStores.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}