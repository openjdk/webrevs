{"files":[{"patch":"@@ -51,1 +51,0 @@\n-* Reference external CSR pages with small intro that is unlikely to need updates\n","filename":"README.md","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,118 +0,0 @@\n-# Fixing a Bug\n-\n-This is the list of steps which should be performed when fixing a small bug. Small bugs include typos in code or specification, algorithm improvements for correctness or performance, and code changes required to correctly implement the specification.\n-\n-::: {.note}\n-Some steps refer to operations which can't be performed directly without the assistance of a [Project Committer](https:\/\/openjdk.org\/bylaws#committer). For example, any changes to the [bug database](https:\/\/bugs.openjdk.org) fall into this category. Since these steps are required, [Contributors](https:\/\/openjdk.org\/bylaws#contributor) are urged to work with their [Sponsors](https:\/\/openjdk.org\/sponsor\/) to complete these tasks.\n-:::\n-\n-For the purposes of brevity this document will use the term \"bug\" to refer to both bugs and enhancements unless otherwise noted. Hence \"fix for a bug\" could also imply \"implementation for an enhancement\".\n-\n-#. **Discuss the intended change**\n-\n-   Send an e-mail to the appropriate development mailing list for the Project that maintains the code. The e-mail should have a subject line of the form:\n-\n-       6543210: My favorite bug\n-\n-   where `6543210` is replaced with the actual bug id number or \"[NEW BUG]\" if the bug id isn't known and `My favorite bug` is replaced with the bug's summary.  The message should describe the intended change, which components may be affected, and any other risks or concerns.\n-\n-#. **Does a bug id exist for the work?**\n-\n-   **Yes**\n-   :   Continue\n-\n-   **No**\n-   :   Create a bug in an appropriate component\/sub-component.\n-\n-#. **Set the bug status to \"Open\"**\n-\n-   This communicates intent to fix the bug to other members of the Project. It also sets the expectation for downstream teams such as SQE and JCK that the bug will be fixed in an upcoming integration.\n-\n-#. **Does the fix for the bug require a specification change, directly affect an external interface, or otherwise have a compatibility impact?**\n-\n-   **Yes**\n-   :   Submission of a CSR request is required. The CSR must be [approved](#approved) before the bug fix is pushed to a feature release or update release repository. The work may begin concurrently with the CSR review, but may need to be modified in response to CSR feedback.\n-\n-   **No**\n-   :   Continue\n-\n-#. **Fix the bug**\n-\n-   Assuming that the development team approves of the intended approach, begin working on the code using the latest source available from the appropriate OpenJDK Project [repository](https:\/\/hg.openjdk.java.net).\n-\n-#. **Is it possible to write a test to detect the bug?**\n-\n-   **Yes**\n-   :   For bugs, provide a [jtreg](https:\/\/openjdk.org\/jtreg\/) regression test as part of the changeset. For enhancements that directly affect one or more exported interfaces, add an adequate set of jtreg unit tests as part of the changeset. By convention all regression and unit tests should contain a [\\@bug tag](https:\/\/openjdk.org\/jtreg\/tag-spec.html#INFORMATIONAL_TAGS9) referencing at least one bugid.\n-\n-   :   An entirely new test (or tests) may not be required. For example, if the bug is an existing regression test failure, then when fixing the bug you should just add the new bug ID to the list of space-delimited bugs in the [\\@bug tag](https:\/\/openjdk.org\/jtreg\/tag-spec.html#INFORMATIONAL_TAGS) of the failing regression test, even if the test didn't need to be updated.\n-\n-   **No**\n-   :   An explanation for why a test is unnecessary or infeasible is required. Such an explanation is recorded by adding a label, and possibly a comment, to the bug report. The label has the prefix [noreg]{.jbs-label} for regression tests and [nounit]{.jbs-label} for unit tests. The suffix of the label is described in detail in the [JBS Label Dictionary](#noreg)\n-\n-#. **Is modification of shared Java code needed?**\n-\n-   **Yes**\n-   :   It's often sufficient to build and test on a single platform, but sometimes it's not. Use discretion.\n-\n-   **No**\n-   :   Continue\n-\n-#. **Is modification of shared C code needed?**\n-\n-   **Yes**\n-   :   Build and test on at least one instance of all three of the supported operating systems (Solaris, Linux, and Windows).\n-\n-   **No**\n-   :   Continue\n-\n-#. **Is modification of C or Java platform-specific code needed?**\n-\n-   **Yes**\n-   :   Build and test on all relevant platforms.  Code under `src\/solaris` builds on Solaris, Linux, and MacOS X despite its name.\n-\n-   **No**\n-   :   Continue\n-\n-#. **Run relevant regression and unit tests on all relevant platforms**\n-\n-   These include tests for external interfaces as well as other kinds of tests, e.g., HotSpot tests that use internal verification mechanisms.\n-\n-#. **Run relevant JCK tests on all relevant platforms**\n-\n-   Running JCK tests is particularly important if the change may have unexpected side-effects.\n-\n-#. **Request a review of the changes by sending an e-mail to the development alias**\n-\n-   A patch can be submitted as described in [Contributing](https:\/\/openjdk.org\/contribute\/). Alternatively, a [\"webrev\"](webrevHelp.html) may be generated and uploaded to the [community code review](https:\/\/cr.openjdk.java.net\/) server. The complete webrev generation and upload procedure is described at [https:\/\/cr.openjdk.java.net](https:\/\/cr.openjdk.java.net\/).\n-\n-   Changeset pushes before the [Feature Complete](https:\/\/openjdk.org\/projects\/jdk8\/milestones#Feature_Complete) require at least one [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer); pushes after the Feature Complete require at least two Reviewers. In either case, the more the merrier. Some teams may require more Reviewers. Check with members of the Project.\n-\n-   Reviewers should examine not only the code being added or changed but also the relevant unit or regression tests.\n-\n-   A change may require multiple Reviewers because it affects multiple areas.  Reviewers should be aware that they take full responsibility for the appropriateness and correctness of any changes in their area of expertise.  If something goes wrong (e.g., the build breaks) and the change&apos;s author is unavailable, they may be asked to deal with the problem. Potential Reviewers are encouraged to refuse to review code for which they aren't qualified.\n-\n-#. **Create a changeset**\n-\n-   Follow the instructions in [Working With Pull Requests].\n-\n-#. **Update the bug content**\n-\n-   Bug descriptions and comments should be written in a professional manner.\n-\n-#. **Push the changeset into the Project's forest**\n-\n-   Follow the instructions in [Working With Pull Requests]. If working with a Sponsor, send the changeset to the development mailing list so that they can handle the final push.\n-\n-   The push will trigger a update to the bug which will make the following changes:\n-\n-    * Set the bug's \"Status\" to \"Resolved\" and \"Resolution to \"Fixed\".\n-    * Set the bug's \"Fix Version\/s\" to an appropriate release.\n-    * Set the bug's \"Resolved in Build\" to \"team\".\n-    * Add a Comment containing a reference to the changeset.\n-\n-_Congratulations!_ Your changeset will now make its way towards a promoted build. When the changeset becomes part of a promoted build, the bug's \"Resolved in Build\" will have a value of \\\"b\\[1-9\\]\\[0-9\\]&ast;\\\" to indicate the build number.\n-\n-::: {.box}\n-[To the top](#){.boxheader}\n-:::\n","filename":"src\/guide\/fixing-a-bug.md","additions":0,"deletions":118,"binary":false,"changes":118,"status":"deleted"},{"patch":"@@ -16,1 +16,1 @@\n-When filing an issue, try to make the report as complete as possible in order to make it easier to triage, investigate and resolve the issue.\n+When filing an issue, try to make the report as complete as possible in order to make it easier to triage, investigate and resolve the issue. Bug descriptions and comments should be written in a professional manner.\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+# Making a Change\n+\n+::: {.box}\n+[Quick Links]{.boxheader}\n+\n+* [CSR Wiki](https:\/\/wiki.openjdk.org\/display\/csr\/Main)\n+:::\n+\n+In case you jumped directly here and skipped reading the earlier sections of this guide, please keep in mind that there's a lot more to it than just making a change in the code and submit a PR to GitHub. The list below shows the bare minimum required before a change can be accepted into OpenJDK.\n+\n+#. **Discuss the intended change** -- See [Contributing to an OpenJDK Project]\n+#. **Make sure an issue id exists for the work** -- See [Filing an issue]\n+#. **Initiate a CSR request if your change have a compatibility impact** -- See [Working with the CSR]\n+#. **Fix the issue** -- See [Cloning the JDK], [Working with git branches], and [Building the JDK]\n+#. **Write regression tests and run relevant regression and unit tests on all relevant platforms** -- See [Testing the JDK]\n+#. **Create a changeset** -- See [Working With Pull Requests]\n+#. **Update the bug content** -- See [Updating an issue while fixing]\n+#. **Request a review of the changes** -- See [Life of a PR]\n+#. **Merge with the latest upstream changes and test again**\n+#. **Integrate the changeset** -- See [Working With Pull Requests]\n+#. **Write a release note if appropriate** -- See [Release Notes]\n+\n+## Working with the CSR\n+\n+Changes that have a compatibility impact will require a separate approval besides the code review. This is handled through a [Compatibility and Specification Review](https:\/\/wiki.openjdk.org\/display\/csr\/Main), a.k.a. CSR. Compatibility impact can be things like requiring a specification change, directly affect an external interface, changing command line options, or otherwise alter the behavior of the JDK in ways that could cause issues for users when upgrading to the next JDK version.\n+\n+See the [CSR wiki](https:\/\/wiki.openjdk.org\/display\/csr\/Main) for information on how to work through the CSR process.\n+\n+The CSR must be approved before the change is allowed to be integrated to a feature release or update release repository. Feature design and implementation work may begin concurrently with the CSR review, but may need to be modified in response to CSR feedback.\n+\n+## Copyright Headers\n+\n+All source code files in OpenJDK have a header with copyright statements and a license. Since this is legal documentation it shall not be updated or modified without seeking guidance from your legal representative. For that reason this guide can't really give detailed information on what you can or should do. There are however a few generic things that can be clarified.\n+\n+This is an example copyright\/license header:\n+\n+```\n+\/*\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+```\n+\n+This header has two copyright notices at the top (Oracle and SAP SE) and below them the license text.\n+\n+As stated in the header, don't make changes to the copyright notices or the license text below them. If your affiliation has a copyright notice at the top of the header, consult your legal representative on how to update it. If your affiliation doesn't have a copyright notice, again consult your legal representative to see if you should add one. Do not update a copyright notice if you don't belong to that affiliation.\n+\n+If you create a new file, copy the license text from a nearby file. Do not add copyright notices for affiliations to which you don't belong.\n+\n+If you move code from an existing file to a new file, bring the entire copyright + license header over to the new file.\n+\n+::: {.box}\n+[To the top](#){.boxheader}\n+:::\n","filename":"src\/guide\/making-a-change.md","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -11,1 +11,1 @@\n-If you are new to an area, reviewing changes is also a great way to learn the code and see what general styles and types of changes that are relevant in the area. Be mindful though, if you don't know the area well you should state this in your review comments. As a **R**eviewer you have a responsibility to make sure changes are sound and aline with the general direction of the area. If you, as a **R**eviever, review a change in an area that you don't know well you probably shouldn't be the one to approve the change.\n+If you are new to an area, reviewing changes is also a great way to learn the code and see what general styles and types of changes are relevant in the area. Be mindful though, if you don't know the area well you should state this in your review comments.\n@@ -17,2 +17,0 @@\n-As a **R**eviewer, Contributors will look up to you for guidance to get their contributions into the project - your actions will determine whether Contributors will feel welcome and want to engage further with the project beyond their initial attempt, or not. Let's not lose enthusiastic, engaged and technically competent Contributors due to a lack of communication. If you see a request in your area of expertise and you can't address it, at least acknowledge receipt of the request and provide an estimate for when you'll be able to give it your attention. A frank explanation of your time constraints or commitments will be appreciated and respected.\n-\n@@ -21,0 +19,10 @@\n+## Responsibilities of a Reviewer\n+\n+As a [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer) you have a responsibility to make sure changes are sound and align with the general direction of the area. If you, as a [Reviever](https:\/\/openjdk.org\/bylaws#reviewer), review a change in an area that you don't know well you probably shouldn't be the one to approve the change.\n+\n+[Reviewers](https:\/\/openjdk.org\/bylaws#reviewer) should be aware that they take full responsibility for the appropriateness and correctness of any changes in their area of expertise. If something goes wrong (e.g., the build breaks) and the change's author is unavailable, they may be asked to deal with the problem. Potential [Reviewers](https:\/\/openjdk.org\/bylaws#reviewer) are encouraged to refuse to review code for which they aren't qualified.\n+\n+[Reviewers](https:\/\/openjdk.org\/bylaws#reviewer) should examine not only the code being added or changed but also the relevant unit or regression tests. If no tests are being added for a change that isn't already covered by existing tests and have the appropriate [noreg-]{.jbs-label} label, the [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer) should question this.\n+\n+As a [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer), Contributors will look up to you for guidance to get their contributions into the project - your actions will determine whether Contributors will feel welcome and want to engage further with the project beyond their initial attempt, or not. Let's not lose enthusiastic, engaged and technically competent Contributors due to a lack of communication. If you see a request in your area of expertise and you can't address it, at least acknowledge receipt of the request and provide an estimate for when you'll be able to give it your attention. A frank explanation of your time constraints or commitments will be appreciated and respected.\n+\n","filename":"src\/guide\/reviewing-and-sponsoring-a-change.md","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-   At least one [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer) knowledgeable in each area being changed must approve every change. Some areas (e.g. Client and HotSpot) require two reviewers in most cases, so be sure to read the relevant [OpenJDK Group](https:\/\/openjdk.org\/bylaws#group) pages for advice or ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor).\n+   At least one [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer) knowledgeable in each area being changed must approve every change. A change may therefore require multiple [Reviewers](https:\/\/openjdk.org\/bylaws#reviewer) because it affects multiple areas. Some areas (e.g. Client and HotSpot) require two reviewers in most cases, so be sure to read the relevant [OpenJDK Group](https:\/\/openjdk.org\/bylaws#group) pages for advice or ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor).\n","filename":"src\/guide\/working-with-pull-requests.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,0 @@\n-fixing-a-bug.md\n@@ -9,0 +8,1 @@\n+making-a-change.md\n","filename":"src\/toc.conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}