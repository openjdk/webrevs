{"files":[{"patch":"@@ -8,15 +8,51 @@\n-:::\n-\n-[JBS](https:\/\/bugs.openjdk.org\/) is a public issue tracker used by many OpenJDK projects. It's open for anyone to read and search. In order to get write access you need to be registered in the [OpenJDK Census](https:\/\/openjdk.org\/census), for instance by becoming an [Author](https:\/\/openjdk.org\/bylaws#author) in an OpenJDK [Project](https:\/\/openjdk.org\/bylaws#project).\n-\n-## Filing a bug\n-\n-When a new failure is found in the JDK a bug should be filed to describe and track the issue. Depending on your role in OpenJDK you can either use the [Bug Report Tool](https:\/\/bugreport.java.com\/) or, if you are registered in the [OpenJDK Census](https:\/\/openjdk.org\/census), report the bug directly in [JBS](https:\/\/bugs.openjdk.org\/). Try to make the bug report as complete as possible to make it easier to triage and investigate the bug.\n-\n-A few things to keep in mind when filing a new bug:\n-\n-* Before filing a bug, verify that there isn't already a bug filed for this issue.\n-  * Search [JBS](https:\/\/bugs.openjdk.org\/) for things like the name of the failing test, assert messages, the name of the source code file where a crash occurred etc.\n-* If you suspect that the bug is a vulnerability, **don't file a JBS issue**. Instead send your bug report to [vuln-report@openjdk.org](mailto:vuln-report@openjdk.org).\n-  * Please do *not* report or discuss potential vulnerabilities on any open lists or other public channels.\n-  * See [OpenJDK Vulnerabilities](https:\/\/openjdk.org\/groups\/vulnerability\/report) for more information.\n+  :::\n+\n+[JBS](https:\/\/bugs.openjdk.org\/) is a public issue tracker used by many OpenJDK projects and is open for anyone to read and search. In order to get write access you need to be registered in the [OpenJDK Census](https:\/\/openjdk.org\/census) by becoming, for instance, an [Author](https:\/\/openjdk.org\/bylaws#author) in an OpenJDK [Project](https:\/\/openjdk.org\/bylaws#project).\n+\n+## Filing an issue\n+\n+When a new failure is found, or an improvement identified, an issue should be filed to describe and track its resolution.\n+Depending on your role in OpenJDK you can either use the [Bug Report Tool](https:\/\/bugreport.java.com\/) or, if you\n+are registered in the [OpenJDK Census](https:\/\/openjdk.org\/census), you can report the issue directly in [JBS](https:\/\/bugs.\n+openjdk.org\/).\n+\n+When filing an Issue, try to make the report as complete as possible in order to make it easier to triage, investigate and resolve the issue.\n+\n+#### Types of Issues\n+\n+The most common [Issue]{.jbs-field} types are:\n+<br \/>\n+<table class=\"dictionary\" summary=\"JBS Issue Types\">\n+<tr style=\"text-align:left;\"><th>Issue Type<\/th><th>Covers<\/th><\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Bug]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Used when reporting a problem: crashes; hangs; failures of functionality etc.<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Enhancement]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">For a small improvement to existing functionality<br \/>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[New Feature]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Not recommended to use<br \/><\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[JEP]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">For a proposal for a significant change or new feature which will take 4 weeks or more of work - see [JEP-1](https:\/\/openjdk.org\/jeps\/1)<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Sub-task]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Can be used to break up the work for an issue, such as the changes to the docs, tests etc. This is not recommended as a way to break up a large amount of code change associated with a new feature - see \"Implementing a JEP or any Large Change\" below<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Task]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Where something needs to happen other than a code change - for example a request for a new JBS version, or other work associated with a release<\/td>\n+<\/tr>\n+<\/table>\n+Note: If you suspect that the issue is a vulnerability, **don't file a JBS issue**, instead send your report to [vuln-report@openjdk.org](mailto:vuln-report@openjdk.org), also use this alias if you find an existing report which may be a vulnerability. Please do *not* report or discuss potential vulnerabilities on any open lists or other public channels - see [OpenJDK Vulnerabilities](https:\/\/openjdk.org\/groups\/vulnerability\/report) for more information.\n+\n+<br>\n+A few things to keep in mind when filing an issue to report a problem:\n+\n+* Before filing, verify that there isn't an issue already filed.\n+    * Search [JBS](https:\/\/bugs.openjdk.org\/) for things like the name of the failing test, assert messages, the name of the source code file where a crash occurred etc.\n@@ -25,6 +61,6 @@\n-  * To find relevant labels see the [JBS Label Dictionary](#jbs-label-dictionary)\n-* Set [Affects Version\/s]{.jbs-field} to the JDK version(s) where the failure was seen.\n-  * If the failure is found in an update train of the JDK (e.g. 11.0.x), please make an effort to see if the bug is also present in [mainline](https:\/\/github.com\/openjdk\/jdk).\n-* Set priority\n-  * It's not the reporter's responsibility to set a correct priority, but a qualified guess is always better than a default value.\n-  * To help with setting the right priority consider things like how the bug impacts the product and our testing, how likely is it that the bug triggers, how difficult is it to work around the bug if it's not fixed soon, and whether it's a regression, since that may break existing applications. Regressions are often higher priority than long standing bugs and may block a release if not fixed.\n+    * For more information see the [JBS Label Dictionary](#jbs-label-dictionary)\n+* Set [Affects Version\/s]{.jbs-field} to the earliest JDK version(s) where the failure was seen.\n+    * If the failure is found in an update train of the JDK (e.g. 11.0.x), please make an effort to see if it is also present in [mainline](https:\/\/github.com\/openjdk\/jdk).\n+* Set the priority\n+    * It's not the reporter's responsibility to set a correct priority, but a qualified guess is always better than the default.\n+    * To help with setting the right priority, consider things like how the bug impacts the product and our testing, how likely is it that the bug is triggered, how difficult is it to work around, and whether it's a regression, since that may break existing applications. Regressions are often higher priority than long-standing bugs and may block a release if not fixed. An example of a P1 would be an issue that is blocking a build or a release, whereas a P5 would be a minor typo in a code comment - most bugs will be P3 or P4.\n@@ -32,8 +68,13 @@\n-  * full name of the failing tests\n-  * error messages\n-  * assert messages\n-  * stack trace\n-  * command line information\n-  * relevant information from the logs\n-* If the failure isn't reproducible with an existing OpenJDK test, attach a reproducer if possible.\n-* Only set [CPU]{.jbs-field} and\/or [OS]{.jbs-field} fields if the bug **ONLY** happens on that particular platform.\n+    * error messages\n+    * assert messages\n+    * stack trace\n+    * command line information\n+    * relevant information from the logs\n+    * full name of any failing tests\n+* Avoid including in the description or comments:\n+    * personal information\n+    * passwords, logins, machine names\n+    * logs which may include sensitive data\n+* If the failure isn't reproducible with an existing OpenJDK test, attach a reproducer if possible, while in a number of cases it isn't possible, having a test case will decrease the time required to resolve the issue.\n+* Only set [CPU]{.jbs-field} and\/or [OS]{.jbs-field} fields if the bug **ONLY** happens on that particular platform or set of platforms.\n+* Including the java -fullversion is encouraged for bugs in the JVM, hangs, network issues where the exact version can be critical to determine what fixes may be missing from an older version.\n@@ -41,1 +82,6 @@\n-  * If two crashes looks related but not similar enough to for sure be the same, it's easier to close a bug as a duplicate than it is to extract the relevant info from a bug to create a new one later.\n+    * If two crashes looks related, but not similar enough to be sure they are the same, it's easier to later close a bug as a duplicate than it is to separate out one bug into two.\n+\n+Things to keep in mind when requesting an improvement:\n+\n+* Unlike reporting a problem, when it comes to improvements what constitutes a reasonable request can take discussion, and in general it is encouraged that the mailing list for the area is used to suggest an improvement before filing.\n+* Enhancements to The Java Language Specification and The JVM Specification are managed through the [Java Community Process](http:\/\/jcp.org\/)\n@@ -45,0 +91,111 @@\n+### Implementing a Large Change\n+When managing the work for a large change, especially when the work involves multiple engineers, it is recommended that the work is distributed across one or more \"implementation\" issues which should be linked to the main [Enhancement]{.jbs-field} with a \"blocks\" link along with any relevant CSRs. The [Enhancement]{.jbs-field} should not be considered done until all the blocking elements are completed.  The use of subTasks for [Enhancement]{.jbs}s is not recommended unless all the [Sub-task]{.jbs-field}s are relevant to the fix, if it were to be backported.\n+\n+### Implementing a JEP\n+It recommended that for [JEP]{.jbs-field}s that the implementation is spread across one or more [Enhancement]{.jbs-field}s as above.\n+\n+## Issue states\n+\n+JBS only has a few states in which an issue can be in:\n+\n+<table class=\"dictionary\" summary=\"JBS Label Dictionary\">\n+  <tr style=\"text-align:left;\"><th>Type<\/th><th>Covers<\/th><\/tr>\n+<tr>\n+    <td class=\"dictionary\">[New]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Initial state after an issue is filed. [Bugs]{.jbs-field} in the JDK Project must be taken out of the [New]{.jbs-field} state (Triaged - see below) in a timely manner. In general, this is recommended to be done for all issue types and projects as a sign that the issue is correctly filed, and will be seen by the right group - this is especially important towards the end of a release.<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Open]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Most straightforward issues stay in this state until they are closed.  If the issue has some attention then use [In Progress]{.jbs-field} to show more clearly that the issue is being worked<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[In Progress]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">The [In Progress]{.jbs-field} state has the option of the sub-states ([Understanding]{.jbs-field}): [Cause Known]{.jbs-field}, [Fix Understood]{.jbs-field}, [In Review]{.jbs-field}.<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Closed]{.jbs-field}\/[Resolved]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">While [Closed]{.jbs-field} and [Resolved]{.jbs-field} are essentially equivalent, when it comes to fixing issues there is an additional [Verify]{.jbs-field} step available between the [Resolved]{.jbs-field} and [Closed]{.jbs-field} states<\/td>\n+<\/tr>\n+<\/table>\n+\n+::: {style=\"text-align:center;\"}\n+~~~{.mermaid caption=\"JBS Issue Flow\" format=svg theme=neutral}\n+flowchart TD\n+\n+subgraph top[\" \"]\n+\n+New\n+triage\n+ResolvedIncomplete\n+ClosedIncomplete\n+Open\n+InProgress\n+states\n+Resolved\n+Verify\n+Closed\n+\n+  New(NEW) --> triage\n+  Open --> |Move to new component|New\n+\n+  triage --> |sync with submitter|ResolvedIncomplete(<font color=white>RESOLVED:Incomplete)\n+  ResolvedIncomplete --> |Clarified|triage\n+  ResolvedIncomplete --> |Not Clarified|ClosedIncomplete\n+  ClosedIncomplete(<font color=green>CLOSED:Incomplete) --> Closed\n+\n+  triage --> Open(OPEN)\n+  Open --> states\n+\n+  Open <--> InProgress(<font color=blue>IN PROGRESS)\n+  InProgress --> states\n+\n+  states[Fixed, Won't Fix, Duplicate etc.] --> Closed\n+  states --> Resolved\n+  Resolved(<font color=white>RESOLVED) -.-> Verify[Verify]\n+  Verify --> Closed(<font color=green>CLOSED)\n+end\n+\n+style top fill:white\n+style New fill:lightgrey\n+style Open fill:lightgrey\n+style triage fill:white\n+style states fill:white\n+style Verify fill:white\n+style Resolved fill:green\n+style ResolvedIncomplete fill:green\n+style Closed fill:lightgreen\n+style ClosedIncomplete fill:lightgreen\n+~~~\n+:::\n+\n+## Triaging an issue\n+\n+First give the issue a general review\n+\n+1. If the issue is a duplicate, close it as such.\n+1. If the issue belongs to a different area (it was filed in libraries, but it is an HotSpot issue), transfer it to the correct component\/subcomponent making sure that the state remains [New]{.jbs-field}.\n+1. If the issue is incomplete, add a comment noting what is needed and close the bug as [Resolved]{.jbs-field} - 'Incomplete'. If no more information is obtained within reasonable time, the issue should be closed ([Closed]{.jbs-field} - `Incomplete`).\n+\n+Now that the issue is in the right component and has the basic information, the analysis continues to get a more detailed understanding of the issue, and what should be done:\n+\n+1. ensure the priority is correct - an approach that has been used for getting a consistent view of priority is to consider three aspects of the issue: [Impact]{.jbs-field} or issue; [Likelihood]{.jbs-field} of it occurring; and, whether there is a [Workaround]{.jbs-field}. The higher the [Impact]{.jbs-field} and [Likelihood]{.jbs-field} the higher the priority; then, having a [Workaround]{.jbs-field} reduces that priority - but mostly where the Impact and Likelihood are not that severe.\n+1. ensure the 'Affects Version\/s' field is correct (within reason)\n+    1. this may involve reproducing the bug, if doing so is fast and easy\n+    1. In addition to the version where the bug was found, take special care to also investigate if the bug affects the supported releases - the latest LTS release and the latest six-month release.\n+    1. The affects version is not meant to be an exhaustive list of releases the issue is relevant to - it should initially be set to the release the issue was reproduced or identified on, and by implication it will be relevant on all releases past that point (see (Rel)-na label). If it is later found to be applicable to an earlier release family then adding that earlier release is encouraged if the issue needs to be fixed in that release.\n+    1.  Do not add additional release values to `Affected Versions` for the same release family: if there is the value 11.0.2 do not add 11.0.5, 11.0.7 etc.  Adding an additional value for a separate release family where it is still reproducible, 12 say, is not necessary but ok, especially if the bug is old (reported on 8 say) but still relevant to the latest release (20 say).\n+1. set the 'Fix Version'\n+    1. a bug should be fixed first in the most recent version where it exists, if you don't know what version it will go into set it to `tbd`\n+    1. if the bug also exists in older versions it may require backporting\n+        * the decision to backport should be made inline with the guidelines of the lead for the release\n+        * There are two options for creating backport issue(s) to track the backport: one is to create it manually once it is agreed that the bug should be backported; the second, is to let the bots create the backport issue once you push the fix to the repo.\n+    1. Only one fixversion should ever be set, if the issue is to be fixed in additional releases then a separate backport must be created (See Working with backports in JBS).  There are exceptions to this rule for: CSRs; and, Release Notes.\n+1. make sure the bug has all the required labels – JBS Label Dictionary\n+    1. bugs that are new in the current release: 'regression'\n+    1. bugs that do not affect product code, but are only against the regression test: 'noreg-self'\n+    1. issues that seem to be trivial to fix: 'starter'\n+    1. RFEs that are pure cleanups: 'noreg-cleanup'\n+    1. project specific issues usually have their own labels as well\n+\n+At this point move the issue into the [Open]{.jbs-field} state, bring high priority (P1, P2) bugs to the attention of the team.\n+\n@@ -51,1 +208,11 @@\n-## Resolved - Incomplete\n+## Updating an issue while fixing\n+\n+Once you are made, or you make yourself, the assignee of an Issue you take on the responsibility of moving the issue through to resolution and providing the current status, and ultimately leaving a record for others in the future to understand what happened.  There are no set rules for how you manage the bug while you are assigned to it, as it depends on the type and importance of an issue.  A simple update to the doc needs little to be done, fix the problem and close the issue; an intricate timing issue or crash should be handled differently - documenting your progress in identifying the problem (for example\n+[JDK-8212207](https:\/\/bugs.openjdk.org\/browse\/JDK-8212207),\n+[JDK-6984895](https:\/\/bugs.openjdk.org\/browse\/JDK-6984895),\n+[JDK-8287982](https:\/\/bugs.openjdk.org\/browse\/JDK-8287982)\n+), this is especially helpful if you ultimately move the Issue to a different area as you have found that the problem lies elsewhere, or is closed as [Will Not Fix]{.jbs-field}.  Your updates then provide a resource to others to better understand what has been done or the code. See [The Importance of Writing Stuff Down](https:\/\/stuartmarks.wordpress.com\/2023\/02\/22\/the-importance-of-writing-stuff-down) for a good explanation as to why it is also important to write an evaluation when something is not fixed.\n+\n+Some additional fields should be filled in as you get a better understanding of the issue:\n+- for a regression, if you identify the fix that caused it add a link to that issue (and add a [regression_]{.jbs-field}*(ID)* label) and set the _Introduced in Release_ field.\n+- The [Description]{.jbs-field} usually explains what went wrong and how the failure was found, then there's some investigation and eventually the root cause is found. At this point the [Summary]{.jbs-field} should be updated to correctly describe the bug. The [Description]{.jbs-field} however should remain a description of how the failure was found.\n@@ -53,1 +220,73 @@\n-To resolve an issue as `Incomplete` is JBS lingo for \"Need More Information\". An issue that is `Resolved - Incomplete` is *not* closed but more information is needed to be able to work on it. If no more information is obtained within reasonable time the issue should be closed (`Closed - Incomplete`). Closing a resolved issue is done using the `Verify` option.\n+## Resolving an issue\n+\n+Once the work on an issue has been completed this should be indicated in JBS by moving the issue to a \"closed\" state.  There are two \"closed\" states: [Resolved]{.jbs-field} and [Closed]{.jbs-field} which can be used interchangeably except in the case of [Fixed]{.jbs-field}, or when flagged as  [Incomplete]{.jbs-field} (See Triaging).\n+\n+<table class=\"dictionary\" summary=\"JBS Label Dictionary\">\n+  <tr style=\"text-align:left;\"><th>Type<\/th><th>Covers<\/th><\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Fixed]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">If a change is required in a repo to address an issue then the [Fixed]{.jbs-field} status should be used - for the JDK project in almost all cases the bots will transition the issue to [Fixed]{.jbs-field} when the changeset is pushed to the repo.<br \/>\n+<ul>\n+        <li>Once a bug is marked as fixed there is now the option of someone, other than the person that fixed it, marking it as [Verified]{.jbs-field} to confirm that the issue is fix after testing; marking it as [Fix Failed]{.jbs-field} if it did not solve the issue; or, [Not Verified]{.jbs-field} to indicate that it wasn't explicitly tested.  Note that the UI does not highlight when [Fix Failed]{.jbs-field} has been set, you need to look for the [Verification]{.jbs-label} Field at the bottom of the left-hand colum in the Details section.<\/li>\n+<\/ul><br \/>\n+    If there is not a fix in the repo (and so no associated changeset) then the issue should not be marked as [Fixed]{.jbs-field}, but set to [Delivered]{.jbs-field}<br \/>\n+    If you know that an issue was fixed, try searching for the issue that resolved it and close it as a duplicate of that issue. If that would entail a significant effort, and\/or it isn't a critical issue, close it out as Not Reproducible.<br \/>\n+    <\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Won't Fix]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Used when the issue is describing behavior which, while maybe problematic or not ideal, is not going to be changed - for compatibility reasons for example<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Duplicate]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Where the same issue is described in another issue then close one against the other as a [Duplicate]{.jbs-field}. In general the new issue is closed as a duplicate of the older one, but where the newer issue has a clearer description then doing it the other way round is ok<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Incomplete]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Described above<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Cannot Reproduce]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Use when a reproducer is provided (or clear steps) but it is not possible to see the same behavior. When you can't reproduce an issue, where feasible try on the release the issue was reported against, as a way of confirming that it is indeed addressed on the latest release, rather than you not having the right environment in which to reproduce the issue<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Other]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Used where none of the other statuses fit the situation<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Future Project]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">This status is not recommended<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[External]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Use where the issue is due to a problem in a Java library (not shipped with the JDK) or an IDE or other external tool<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Not an Issue]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Use when the behavior is expected and valid (cf. [Won't Fix]{.jbs-field}) and the reporter perhaps has misunderstood what the behavior should be<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Migrated]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Used rarely, but can be seen when issues are transferred into another Project by opening up a separate issue in that Project, with the issue in the original Project being [Closed]{.jbs-field}<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Rejected]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">This status should not be used<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Withdrawn]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Is essentially the partner state to Delivered for issues that would not have resulted in a fix to the repo, and also part of the [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) and Release Note process<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Delivered]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Use to close out issues where a change to the code is not required, common examples are Release Notes<\/td>\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">[Approved]{.jbs-field}<\/td>\n+    <td class=\"dictionary\">Used as part of the [CSR process](https:\/\/wiki.openjdk.org\/display\/csr\/Main)\n+<\/tr>\n+<tr>\n+    <td class=\"dictionary\">Challenge States<\/td>\n+    <td class=\"dictionary\">[Exclude [Challenge]]{.jbs-field}, [Alternative Tests [Challenge]]{.jbs-field}, and [Reject [Challenge]]{.jbs-field} are only relevant within the context of the JCK Project<\/td>\n+<\/tr>\n+<\/table>\n@@ -64,1 +303,1 @@\n-> When using labels in Jira gadgets (like pie charts, heat maps, and statistics tables) Jira will be case sensitive and treat e.g. OpenJDK and openjdk as two different labels. Searching however is case insensitive. This means that if you group a set of issues in a gadget based on a label, and then click one of the groups to see the list of issues, that list will contain more results than the gadget if there are usages of the label with different casing. This can be very confusing and for this reason the recommendation is to stick with the commonly used case for all labels, regardless of your personal taste for upper or lower case letters. Most labels are lower case only, but there are examples where upper case letters are used in the most common version of a label. Use of the autocomplete popup window (described above) when adding labels will avoid inadvertent introduction of labels with differing case.\n+> When using labels in Jira gadgets (like pie charts, heat maps, and statistics tables) Jira will be case-sensitive and treat e.g. OpenJDK and openjdk as two different labels. Searching however is case-insensitive. This means that if you group a set of issues in a gadget based on a label, and then click one of the groups to see the list of issues, that list will contain more results than the gadget if there are usages of the label with different casing. This can be very confusing and for this reason the recommendation is to stick with the commonly used case for all labels, regardless of your personal taste for upper or lower case letters. Most labels are lower case only, but there are examples where upper case letters are used in the most common version of a label. Use of the autocomplete popup window (described above) when adding labels will avoid inadvertent introduction of labels with differing case.\n@@ -70,1 +309,1 @@\n-This table contains some frequently used JBS labels and their meaning. Please help keeping this dictionary up to date by adding your favorite labels. This table doesn’t dictate how to use labels, but rather document how they are used. That said, obviously it will help everyone if we try to follow a common standard and use similar labels in the same way across all entities that use JBS.\n+This table contains some frequently used JBS labels and their meaning. Please help keeping this dictionary up to date by adding your favorite labels. This table doesn't dictate how to use labels, but rather document how they are used. That said, obviously it will help everyone if we try to follow a common standard and use similar labels in the same way across all entities that use JBS.\n@@ -151,1 +390,1 @@\n-      Used to indicate that the issue doesn't affect release *(Rel)* or later. Could for instance be a bug in code that was removed in *(Rel)*. Note that there should only be **one** *(Rel)*[-na]{.jbs-label} label on any JBS issue. The [Affects Version\/s]{.jbs-field} field is used to indicate the releases where the issue has been seen.\n+      The [Affects Version\/s]{.jbs-field} field is used to indicate the releases where an issue has been seen - it is implied that the issue is also applicable to newer releases. Where this is not the case - for instance a bug in code that was removed in *(Rel)* - then use the *(Rel)-na* to indicate this. Note that there should only be **one** *(Rel)*[-na]{.jbs-label} label on any JBS issue.\n@@ -332,1 +571,1 @@\n-    <\/td>\n+<\/td>\n@@ -372,1 +611,1 @@\n-:    Testing requires a very long running time (e.g., more than a few minutes).\n+:    Testing requires a very long running-time (e.g., more than a few minutes).\n@@ -393,1 +632,1 @@\n-    <\/td>\n+<\/td>\n@@ -412,1 +651,1 @@\n-      One or more tests has been problemlisted due to this bug.\n+      One or more tests has been problem-listed due to this bug.\n@@ -423,0 +662,6 @@\n+  <tr>\n+    <td class=\"dictionary\">[[regression_]{.jbs-label}*(ID)*]{#regressionId}<\/td>\n+    <td class=\"dictionary\">\n+      Used to identify the fix that caused the regression, where known.\n+    <\/td>\n+  <\/tr>\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":284,"deletions":39,"binary":false,"changes":323,"status":"modified"}]}