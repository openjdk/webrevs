{"files":[{"patch":"@@ -261,1 +261,5 @@\n-### Linking Issues\n+::: {.note}\n+**Note:** If during your investigation of the bug you determine that the issue is in the wrong component, make sure to move it back to the [New]{.jbs-value} state before moving it to the new component, so that it will be picked up by the component's triage team. Make sure there is a comment outlining the reason for the move, as explained above.\n+:::\n+\n+## Linking Issues\n@@ -267,11 +271,8 @@\n-[duplicate of]{.jbs-value} - Normally set automatically - see [Closing issues as duplicates] for more information\n-\n-[backported by]{.jbs-value} - Normally set automatically when creating a backport with the “More -> Create Backport” option, or by the Skara tooling\n-\n-[CSR for]{.jbs-value} - When creating a CSR with the “More -> Create CSR” option, a link is automatically created between the main issue and the new CSR\n-\n-[blocks]{.jbs-value} - For when other issues are dependent on the current issue being resolved\/fixed before they can be. For example, when a fix is broken down into a number of parts the [blocks]{.jbs-value} link should be used to ensure they are all fixed before the main issue is considered resolved - see [implementing large changes](#implementing-large-changes]\n-\n-[relates to]{.jbs-value} - To avoid lots of [relates to]{.jbs-value} links, the links should have some significance in relation to the cause and\/or fix, for the current issue. In addition, relates links should not duplicate an existing [duplicated by]{.jbs-value}, [backported by]{.jbs-value}, [csr for]{.jbs-value} or [blocked by]{.jbs-value} link.  In particular, it may be necessary to manually remove a [relates to]{.jbs-value} link if it is later added as a [duplicated by]{.jbs-value} or [caused by]{.jbs-value} link\n-\n-[causes]{.jbs-value}\/[caused by]{.jbs-value} - the [causes]{.jbs-value} link implies a stronger relationship than [relates to]{.jbs-value}. If an issue 'B' can be traced back to the fix for issue 'A' then ‘A causes B’ (or ‘B is caused by A’)\n+| Type | Usage |\n+|:-|:----------|\n+| [duplicate of]{.jbs-value} | Normally set automatically when an issue is closed as a duplicate - see [Closing issues as duplicates] for more information. |\n+| [backported by]{.jbs-value} | Normally set automatically when creating a backport with the “More -> Create Backport” option, or by the Skara tooling. |\n+| [CSR for]{.jbs-value} | When creating a CSR with the “More -> Create CSR” option, a link is automatically created between the main issue and the new CSR. |\n+| [blocks]{.jbs-value} | For when other issues are dependent on the current issue being resolved\/fixed before they can be. For example, when a fix is broken down into a number of parts the [blocks]{.jbs-value} link should be used to ensure they are all fixed before the main issue is considered resolved - see [Implementing a large change]. |\n+| [relates to]{.jbs-value} | Used to indicate a relationship between two issues. To avoid lots of [relates to]{.jbs-value} links, the links should have some significance in relation to the cause and\/or fix, for the current issue. |\n+| [causes]{.jbs-value}\/[caused by]{.jbs-value} | The [causes]{.jbs-value} link implies a stronger relationship than [relates to]{.jbs-value}. If an issue 'B' can be traced back to the fix for issue 'A' then ‘A causes B’ (or ‘B is caused by A’). |\n@@ -280,1 +281,1 @@\n-**Note:** If during your investigation of the bug you determine that the issue is in the wrong component, make sure to move it back to the [New]{.jbs-value} state before moving it to the new component, so that it will be picked up by the component's triage team. Make sure there is a comment outlining the reason for the move, as explained above.\n+**Note:** There should never be more than one type of link between two issues. It may be necessary to manually remove a link, e.g. [relates to]{.jbs-value}, if later a [duplicated by]{.jbs-value} or [caused by]{.jbs-value} link is added.\n@@ -313,1 +314,1 @@\n-:::{.note}\n+::: {.note}\n@@ -317,1 +318,1 @@\n-:::{.note}\n+::: {.note}\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-   In general all PRs should be open for at least 24 hours to allow for reviewers in all time zones to get a chance to see it. It may actually happen that even 24 hours isn't enough. Take into account weekends, holidays, and vacation times throughout the world and you'll realize that a change that requires more than just a trivial review may have to be open for a while. In some areas [trivial] changes are allowed to be integrated without the 24 hour delay. Ask your reviewers if you think this applies to your change.\n+   In general all PRs should be open for at least 24 hours to allow for reviewers in all time zones to get a chance to see it. It may actually happen that even 24 hours isn't enough. Take into account weekends, holidays, and vacation times throughout the world and you'll realize that a change that requires more than just a trivial review may have to be open for a while. In some areas [trivial changes] are allowed to be integrated without the 24 hour delay. Ask your reviewers if you think this applies to your change.\n@@ -93,1 +93,1 @@\n-   Be open to comments and polite in replies. Remember that the reviewer wants to improve the world just as much as you do, only in a slightly different way. If you don't understand some comment, ask the reviewer to clarify. Accept authority when applicable. If you're making changes in an area where you're not the area expert, acknowledge that your reviewers may be. Take their advice seriously, even if it is to not make the change. There are many reasons [why a change may get rejected](#why-is-my-change-rejected). And you did read the section [Things to consider before changing OpenJDK code], right?\n+   Be open to comments and polite in replies. Remember that the reviewer wants to improve the world just as much as you do, only in a slightly different way. If you don't understand some comment, ask the reviewer to clarify. Accept authority when applicable. If you're making changes in an area where you're not the area expert, acknowledge that your reviewers may be. Take their advice seriously, even if it is to not make the change. There are many reasons [why a change may get rejected](#why-is-my-change-rejected). And you did read the section [Things to consider before proposing changes to OpenJDK code], right?\n","filename":"src\/guide\/working-with-pull-requests.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,0 +119,18 @@\n+\n+div#TOC {\n+    position: fixed;\n+    z-index: 2;\n+    top: 0;\n+    right: 0;\n+    width: 27em;\n+    max-height: 100vh;\n+    overflow-y: auto;\n+}\n+\n+@media (max-width: 81em) {\n+  div#TOC {\n+    position: static;\n+    max-height: none;\n+    overflow-y: visible;\n+  }\n+}\n","filename":"src\/guidestyle.css","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}