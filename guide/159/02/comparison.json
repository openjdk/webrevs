{"files":[{"patch":"@@ -47,17 +47,0 @@\n-\n-## Todo\n-\n-The Developers' Guide is continuously updated and there are several parts still missing. This todo list isn't complete and there is no limitation on current work being tied to any item on this list. It's just a list of things that we know are missing or needs to be updated. The list isn't ordered in any way.\n-\n-* JEPs - When do I need one? - Working with JEPs\n-* Add \"stakeholders\" for each section\n-* Add references to current code conventions for Java, C++, Markdown, Makefiles\n-* Text about adding an API\n-* Text about adding a feature\n-* Text about JCK\n-* List JTReg `@key` conventions for different areas\n-* Document best practices around TEST.properties usage. See [PR#30](https:\/\/github.com\/openjdk\/guide\/pull\/30#issuecomment-714589551)\n-* How to work with the code in an IDE\n-* Where to find JTReg bundles\n-* How to run tests with your fork and how to navigate the test result ZIP\n-* Logging in hotspot - available strategies, what is preferred and where, how to log in special conditions\n","filename":"README.md","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-This list is intended to make it easier to identify which email list to include in code reviews when making changes in different areas. The list may also help when assigning bugs based on which code they are found in. Please note that some directories may have been created or removed between releases. The intention here is to include directories that exists in mainline, LTS releases and other releases (post JDK 9) commonly being updated.\n+This list is intended to make it easier to identify which email list to include in code reviews when making changes in different areas. The list may also help when assigning bugs based on which code they are found in. Please note that some directories may have been created or removed between releases. The intention is to include directories that exist in mainline and other commonly updated releases (post JDK 9).\n","filename":"src\/guide\/code-owners.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-Socializing your change on the mailing lists also prevents the surprise that would otherwise make the community choke on their morning coffee when they see a huge patch in a new, unknown PR. As a new developer in the community you'll need to make a few friends that agree with your change. There are many good reasons to make friends, but the one relevant here is that for your first changes you'll need a [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) to facilitate the integration of your work. The [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) will perform any number of administrative tasks like JBS updates, additional testing, etc. It's usual for a [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) to also be a reviewer of a change and thus familiar with it, but it's not a requirement.\n+Socializing your change on the mailing lists also prevents the surprise that would otherwise make the community choke on their morning coffee when they see a huge patch in a new, unknown PR. As a new developer in the community you'll need to make a few friends that agree with your change. There are many good reasons to make friends, but the one relevant here is that for your first changes you'll need a [sponsor](#reviewing-and-sponsoring-a-change) to facilitate the integration of your work. The [sponsor](#reviewing-and-sponsoring-a-change) will perform any number of administrative tasks like JBS updates, additional testing, etc. It's usual for a [sponsor](#reviewing-and-sponsoring-a-change) to also be a reviewer of a change and thus familiar with it, but it's not a requirement.\n@@ -84,1 +84,1 @@\n-Many [OpenJDK Projects](https:\/\/openjdk.org\/bylaws#project) require a tracking issue to be filed in the [JDK Bug System (JBS)](https:\/\/bugs.openjdk.org\/) before a change can be integrated. This is the case for instance for the JDK and the JDK Updates Projects. In order to obtain write access to JBS you need to be an [Author](https:\/\/openjdk.org\/bylaws#author) in an [OpenJDK Project](https:\/\/openjdk.org\/bylaws#project) (see [Becoming an Author]). For your first changes, ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) to help you create the issue or file the bug through the [Bug Report Tool](https:\/\/bugreport.java.com\/).\n+Many [OpenJDK Projects](https:\/\/openjdk.org\/bylaws#project) require a tracking issue to be filed in the [JDK Bug System (JBS)](https:\/\/bugs.openjdk.org\/) before a change can be integrated. This is the case for instance for the JDK and the JDK Updates Projects. In order to obtain write access to JBS you need to be an [Author](https:\/\/openjdk.org\/bylaws#author) in an [OpenJDK Project](https:\/\/openjdk.org\/bylaws#project) (see [Becoming an Author]). For your first changes, ask your [sponsor](#reviewing-and-sponsoring-a-change) to help you create the issue or file the bug through the [Bug Report Tool](https:\/\/bugreport.java.com\/).\n@@ -88,1 +88,1 @@\n-Even though we strive to unify how things are done within OpenJDK, different areas and [Projects](https:\/\/openjdk.org\/bylaws#project) in OpenJDK may have slight variations in how they work. Some of these differences are highlighted throughout this guide, some aren't. If you're new to an area, make sure you understand local differences before you proceed. Ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) who should be your main point of contact through your first developer experience in OpenJDK.\n+Even though we strive to unify how things are done within OpenJDK, different areas and [Projects](https:\/\/openjdk.org\/bylaws#project) in OpenJDK may have slight variations in how they work. Some of these differences are highlighted throughout this guide, some aren't. If you're new to an area, make sure you understand local differences before you proceed. Ask your [sponsor](#reviewing-and-sponsoring-a-change) who should be your main point of contact through your first developer experience in OpenJDK.\n","filename":"src\/guide\/contributing-to-an-open-jdk-project.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-To see who the Project lead is for your [Project](https:\/\/openjdk.org\/bylaws#project), see the [OpenJDK Census](https:\/\/openjdk.org\/census). The [Census](https:\/\/openjdk.org\/census) unfortunately doesn't provide email addresses for people, but assuming you have been active on the Project mailing list (since you are applying for [Author](https:\/\/openjdk.org\/bylaws#author) after all), you should be able to find the lead's email address in your local email archive, or ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor).\n+To see who the Project lead is for your [Project](https:\/\/openjdk.org\/bylaws#project), see the [OpenJDK Census](https:\/\/openjdk.org\/census). The [Census](https:\/\/openjdk.org\/census) unfortunately doesn't provide email addresses for people, but assuming you have been active on the Project mailing list (since you are applying for [Author](https:\/\/openjdk.org\/bylaws#author) after all), you should be able to find the lead's email address in your local email archive, or ask your [sponsor](#reviewing-and-sponsoring-a-change).\n@@ -42,1 +42,1 @@\n-As an [Author](https:\/\/openjdk.org\/bylaws#author) you will get your OpenJDK user name. Once you have gotten the user name, this should be associated with your GitHub account in order for the bots to be able to identify you on [GitHub](http:\/\/www.github.com). See the [Skara documentation](https:\/\/wiki.openjdk.org\/display\/SKARA#Skara-AssociatingyourGitHubaccountandyourOpenJDKusername) for more details on that. Once that's done you can create PRs and get them reviewed, but you'll still need a [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) to integrate changes. You'll also get write access to [JBS](#jbs---jdk-bug-system) and the [OpenJDK wiki](https:\/\/wiki.openjdk.org) related to the [Project](https:\/\/openjdk.org\/bylaws#project) in question, and to [cr.openjdk.org](https:\/\/cr.openjdk.org) via an SSH key provided at the time you accept your invitation.\n+As an [Author](https:\/\/openjdk.org\/bylaws#author) you will get your OpenJDK user name. Once you have gotten the user name, this should be associated with your GitHub account in order for the bots to be able to identify you on [GitHub](http:\/\/www.github.com). See the [Skara documentation](https:\/\/wiki.openjdk.org\/display\/SKARA#Skara-AssociatingyourGitHubaccountandyourOpenJDKusername) for more details on that. Once that's done you can create PRs and get them reviewed, but you'll still need a [sponsor](#reviewing-and-sponsoring-a-change) to integrate changes. You'll also get write access to [JBS](#jbs---jdk-bug-system) and the [OpenJDK wiki](https:\/\/wiki.openjdk.org) related to the [Project](https:\/\/openjdk.org\/bylaws#project) in question, and to [cr.openjdk.org](https:\/\/cr.openjdk.org) via an SSH key provided at the time you accept your invitation.\n@@ -48,1 +48,1 @@\n-To become a [Committer](https:\/\/openjdk.org\/bylaws#committer) you should show that you intend to actively contribute to the [Project](https:\/\/openjdk.org\/bylaws#project) and that you can produce non-trivial changes that are accepted for inclusion into the Project code base. The number eight has been seen as a formal lower limit on the number of changes, but since the changes must be non-trivial, or \"significant\" as the [OpenJDK Project description](https:\/\/openjdk.org\/projects\/) says, and the definition of significant is subjective, the general recommendation is to wait with a [Committer](https:\/\/openjdk.org\/bylaws#committer) nomination until there's at least 10-12 changes integrated to have some margin for different interpretations of \"significant\". In practice though, we have seen several examples where the number of significant changes hasn't been the dominating factor in a [Committer](https:\/\/openjdk.org\/bylaws#committer) vote. A [Contributor's](https:\/\/openjdk.org\/bylaws#contributor) work in another [OpenJDK Project](https:\/\/openjdk.org\/bylaws#project) may also be relevant for the vote. What the vote should ultimately test is the [Contributor's](https:\/\/openjdk.org\/bylaws#contributor) commitment to the [OpenJDK Project](https:\/\/openjdk.org\/bylaws#project) for which the vote applies - is it believed that the person is dedicated and willing to spend time and effort on the [Project](https:\/\/openjdk.org\/bylaws#project)? Is the person believed to be a good citizen of the [Project](https:\/\/openjdk.org\/bylaws#project)? It's always a good idea to seek the advice of a [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) who can guide you through the process to becoming a [Committer](https:\/\/openjdk.org\/bylaws#committer) - you will need one to run the Committer vote anyway. They will probably also have a better idea of what constitutes a \"significant\" change.\n+To become a [Committer](https:\/\/openjdk.org\/bylaws#committer) you should show that you intend to actively contribute to the [Project](https:\/\/openjdk.org\/bylaws#project) and that you can produce non-trivial changes that are accepted for inclusion into the Project code base. The number eight has been seen as a formal lower limit on the number of changes, but since the changes must be non-trivial, or \"significant\" as the [OpenJDK Project description](https:\/\/openjdk.org\/projects\/) says, and the definition of significant is subjective, the general recommendation is to wait with a [Committer](https:\/\/openjdk.org\/bylaws#committer) nomination until there's at least 10-12 changes integrated to have some margin for different interpretations of \"significant\". In practice though, we have seen several examples where the number of significant changes hasn't been the dominating factor in a [Committer](https:\/\/openjdk.org\/bylaws#committer) vote. A [Contributor's](https:\/\/openjdk.org\/bylaws#contributor) work in another [OpenJDK Project](https:\/\/openjdk.org\/bylaws#project) may also be relevant for the vote. What the vote should ultimately test is the [Contributor's](https:\/\/openjdk.org\/bylaws#contributor) commitment to the [OpenJDK Project](https:\/\/openjdk.org\/bylaws#project) for which the vote applies - is it believed that the person is dedicated and willing to spend time and effort on the [Project](https:\/\/openjdk.org\/bylaws#project)? Is the person believed to be a good citizen of the [Project](https:\/\/openjdk.org\/bylaws#project)? It's always a good idea to seek the advice of a [sponsor](#reviewing-and-sponsoring-a-change) who can guide you through the process to becoming a [Committer](https:\/\/openjdk.org\/bylaws#committer) - you will need one to run the Committer vote anyway. They will probably also have a better idea of what constitutes a \"significant\" change.\n@@ -52,1 +52,1 @@\n-A [Committer](https:\/\/openjdk.org\/bylaws#committer) is allowed to integrate changes without the aid of a [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor). A [Committer](https:\/\/openjdk.org\/bylaws#committer) is also allowed to nominate other non-Committers to become [Committers](https:\/\/openjdk.org\/bylaws#committer) in the [Project](https:\/\/openjdk.org\/bylaws#project).\n+A [Committer](https:\/\/openjdk.org\/bylaws#committer) is allowed to integrate changes without the aid of a [sponsor](#reviewing-and-sponsoring-a-change). A [Committer](https:\/\/openjdk.org\/bylaws#committer) is also allowed to nominate other non-Committers to become [Committers](https:\/\/openjdk.org\/bylaws#committer) in the [Project](https:\/\/openjdk.org\/bylaws#project).\n","filename":"src\/guide\/introduction.md","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+* Never set [FixVersion\/s]{.jbs-field} to an already released version. If you intend for the change to be fixed in a JDK 21 update, set [FixVersion\/s]{.jbs-field} to [21-pool]{.jbs-value}. A fix version of [21]{.jbs-value} would indicate the mainline release of JDK 21, which was released in 2023, and it is too late to add more changes there.\n@@ -82,1 +83,1 @@\n-1) If an issue is applicable to release N, then it can't be assumed that it is applicable to older releases less than N. It may be, but in general this is less important to know, as the majority of issues are only fixed in the latest feature release. If the issue is a crash or important in another way, then it becomes worthwhile to take the time to determine if it's relevant to earlier LTS releases.\n+1) If an issue is applicable to release N, then it can't be assumed that it is applicable to older releases less than N. It may be, but in general this is less important to know, as the majority of issues are only fixed in the latest feature release. If the issue is a crash or important in another way, then it becomes worthwhile to take the time to determine if it's relevant to earlier maintained releases.\n@@ -95,1 +96,2 @@\n-* Don't add additional release values to [Affects Version\/s]{.jbs-field} for the same release family. For example, if there is the value [11.0.2]{.jbs-value}, don't add [11.0.5]{.jbs-value}, [11.0.7]{.jbs-value} etc. Adding an additional value for a separate release family where it's still reproducible, e.g. JDK [21]{.jbs-value}, is encouraged if there isn't currently a feature release value set, or, it has been a few releases since it was last reproduced\/reviewed. For example, if the [Affects Version\/s]{.jbs-field} is JDK [8]{.jbs-value}, but it is still relevant to the latest mainline release.\n+* Don't add additional release values to [Affects Version\/s]{.jbs-field} for the same release family. For example, if there is the value [11.0.2]{.jbs-value}, don't add [11.0.5]{.jbs-value}, [11.0.7]{.jbs-value} etc. Adding an additional value for a separate release family where it's still reproducible, e.g. JDK 21, is encouraged if there isn't currently a feature release value set, or, it has been a few releases since it was last reproduced\/reviewed. For example, if the [Affects Version\/s]{.jbs-field} is [8]{.jbs-value}, but it is still relevant to the latest mainline release.\n+* [Affects Version\/s]{.jbs-field} should never use any of the \"special\" values available in JBS like [tbd]{.jbs-value}, [na]{.jbs-value}, [unknown]{.jbs-value}, [(Rel)-pool]{.jbs-value} or similar. Only actual JDK release numbers should be used. If you want to reflect that an issue is relevant to an older release, use a family release value or an exact release if you know where the issue was introduced: [8]{.jbs-value}, [17]{.jbs-value}, [21u4]{.jbs-value}.\n@@ -131,8 +133,0 @@\n-### Things to keep in mind when requesting an improvement\n-\n-Unlike reporting a problem, when it comes to improvements, what constitutes a reasonable request can take discussion, and in general it's encouraged that the [mailing list](#mailing-lists) for the area is used to suggest an improvement before filing.\n-\n-Enhancements to the Java Language Specification and the JVM Specification are managed through the [Java Community Process](http:\/\/jcp.org\/).\n-\n-To find out which component to use for different bugs, consult the [directory to area mapping].\n-\n@@ -143,1 +137,1 @@\n-### Implementing a JEP\n+#### Implementing a JEP\n@@ -218,0 +212,1 @@\n+   * If the reason for transfer isn't completely obvious, please also add a comment on why the issue belongs to the new component.\n@@ -227,3 +222,1 @@\n-      * See [Indicating what releases an issue is applicable to](#indicating-what-releases-an-issue-is-applicable-to) for more details.\n-    * For enhancements the [Affects Version\/s]{.jbs-field} should be empty unless you feel that the enhancement is only relevant to a particular release family, and shouldn't go into a future mainline release.\n-    * [Affects Version\/s]{.jbs-field} should never use any of the \"special\" values available in JBS like [tbd]{.jbs-value}, [na]{.jbs-value}, [unknown]{.jbs-value}, [(Rel)-pool]{.jbs-value} or similar. Only actual JDK release numbers should be used. If you want to reflect that an issue is relevant to an older release, use a family release value or an exact release if you know where the issue was introduced: [8]{.jbs-value}, [17]{.jbs-value}, [21u4]{.jbs-value}.\n+    * See [Indicating what releases an issue is applicable to](#indicating-what-releases-an-issue-is-applicable-to) for more details.\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-      * If more than one release note is required for the same set of fixes, then open additional sub-tasks with the same [Affects Version]{.jbs-field} - see [JDK-8073861](https:\/\/bugs.openjdk.org\/browse\/JDK-8073861) as an example.\n+      * If more than one release note is required for the same set of fixes, then open additional sub-tasks with the same affects version - see [JDK-8073861](https:\/\/bugs.openjdk.org\/browse\/JDK-8073861) as an example.\n@@ -81,2 +81,2 @@\n-    * If an issue is backported to earlier releases the same note will be used - just add the new release version in the [Affects Version]{.jbs-field} field of the release note.\n-    * Where a different release note is required, then create a separate note with the [Affects Version]{.jbs-field} for the new release - see [JDK-8308194](https:\/\/bugs.openjdk.org\/browse\/JDK-8308194) and [JDK-8322473](https:\/\/bugs.openjdk.org\/browse\/JDK-8322473) for an example.\n+    * If an issue is backported to earlier releases the same note will be used - just add the new release version in the [Affects Version\/s]{.jbs-field} field of the release note.\n+    * Where a different release note is required, then create a separate note with the affects version for the new release - see [JDK-8308194](https:\/\/bugs.openjdk.org\/browse\/JDK-8308194) and [JDK-8322473](https:\/\/bugs.openjdk.org\/browse\/JDK-8322473) for an example.\n","filename":"src\/guide\/release-notes.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-It will happen of course when the build is broken or the JDK is DOA and similar situations that a change is immediately backed out without further investigation. Backing out a change is however seldom the first course of action if the change has been done in accordance with the guidance in [Working With Pull Requests]. If, when investigated, it is found that a change didn't go through relevant testing or there are other issues that should have been caught before integration if proper procedure had been followed, it's quite possible that a change is backed out even if the author is desperately working on a fix. The JDK source code is deliberately menat to have a high bar for acceptance of changes. If something crawls in underneath that bar it should most likely be backed out.\n+It will happen of course when the build is broken or the JDK is DOA and similar situations that a change is immediately backed out without further investigation. Backing out a change is however seldom the first course of action if the change has been done in accordance with the guidance in [Working With Pull Requests]. If, when investigated, it is found that a change didn't go through relevant testing or there are other issues that should have been caught before integration if proper procedure had been followed, it's quite possible that a change is backed out even if the author is desperately working on a fix. The JDK source code is deliberately meant to have a high bar for acceptance of changes. If something crawls in underneath that bar it should most likely be backed out.\n@@ -314,1 +314,1 @@\n-   * \"Verify\" the issue and choose \"Fix Failed\".\n+   * \"Verify\" the issue with verification [Fix Failed]{.jbs-value}.\n@@ -319,1 +319,1 @@\n-#. Create a backout-issue **(B)**:\n+#. Setup a backout-issue **(B)**.\n@@ -321,1 +321,3 @@\n-     * Create a sub-task to **(R)** with the same summary prefixed with `[BACKOUT]`.\n+     * Create a new issue of type [Bug]{.jbs-value}. This new issue will be the backout-issue **(B)**.\n+     * Use the same summary as **(R)** prefixed with `[BACKOUT]`.\n+     * Add a _relates to_ link between **(B)** and **(O)**.\n@@ -323,1 +325,1 @@\n-     * Use the investigation issue **(I)** for the backout.\n+     * Use the investigation issue **(I)** for the backout. (Don't create a new **(B)**.)\n@@ -325,4 +327,1 @@\n-     * Move and change type of **(I)** to become a sub-task of **(R)**.\n-   * Alternative 3 - no redo issue was created.\n-     * Create a backout-issue **(B)** with the same summary as **(O)**, prefix with `[BACKOUT]`.\n-     * Add a _relates to_ link between **(B)** and **(O)**.\n+     * Add a _relates to_ link between **(I)** and **(O)**.\n@@ -330,1 +329,1 @@\n-   * Add a csr-for link from the CSR to **(R)**.\n+   * Add a _csr-for_ link from the CSR to **(R)**.\n@@ -332,1 +331,1 @@\n-   * Move the CSR back into the Finalized state for re-review. (It's necessary to first move the CSR back to the Draft state before moving it to the Finalized state.)\n+   * Move the CSR back into the [Finalized]{.jbs-value} state for re-review. (It's necessary to first move the CSR back to the [Draft]{.jbs-value} state before moving it to the [Finalized]{.jbs-value} state.)\n","filename":"src\/guide\/testing-the-jdk.md","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-   At least one [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer) knowledgeable in each area being changed must approve every change. A change may therefore require multiple [Reviewers](https:\/\/openjdk.org\/bylaws#reviewer) because it affects multiple areas. Some areas (e.g. Client and HotSpot) require two reviewers in most cases, so be sure to read the relevant [OpenJDK Group](https:\/\/openjdk.org\/bylaws#group) pages for advice or ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor).\n+   At least one [Reviewer](https:\/\/openjdk.org\/bylaws#reviewer) knowledgeable in each area being changed must approve every change. A change may therefore require multiple [Reviewers](https:\/\/openjdk.org\/bylaws#reviewer) because it affects multiple areas. Some areas (e.g. Client and HotSpot) require two reviewers in most cases, so be sure to read the relevant [OpenJDK Group](https:\/\/openjdk.org\/bylaws#group) pages for advice or ask your [sponsor](#reviewing-and-sponsoring-a-change).\n@@ -111,1 +111,1 @@\n-   If there are upstream changes that might affect your change, it's likely a good idea to rerun relevant testing as well. The [GHA testing](#github-actions) that's done automatically by [GitHub](https:\/\/github.com) should only be seen as a smoke test that finds the most severe problems with your change. It's highly unlikely that it will test your actual change in any greater detail - or even at all execute the code that you have changed in most cases.\n+   Once changes have been merged, rerun all relevant testing even if you think nothing in the merge affected your change. The [GHA testing](#github-actions) that's done automatically by [GitHub](https:\/\/github.com) should only be seen as a smoke test that finds the most severe problems. It's highly unlikely that it will test your actual change in any greater detail - or even at all execute the code that you have changed in most cases.\n@@ -115,1 +115,1 @@\n-   When you have the required reviews and have made sure all relevant areas have had a chance to look at your change, integrate by entering the command [`\/integrate`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/integrate) in a comment on the PR. If you are not yet a [Committer](https:\/\/openjdk.org\/bylaws#committer) in the [Project](https:\/\/openjdk.org\/bylaws#project), ask your [Sponsor](https:\/\/openjdk.org\/bylaws#sponsor) to enter the command [`\/sponsor`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/sponsor) in the PR as well in order for your change to be allowed to be integrated.\n+   When you have the required reviews and have made sure all relevant areas have had a chance to look at your change, integrate by entering the command [`\/integrate`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/integrate) in a comment on the PR. If you are not yet a [Committer](https:\/\/openjdk.org\/bylaws#committer) in the [Project](https:\/\/openjdk.org\/bylaws#project), ask your [sponsor](#reviewing-and-sponsoring-a-change) to enter the command [`\/sponsor`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/sponsor) in the PR as well in order for your change to be allowed to be integrated.\n","filename":"src\/guide\/working-with-pull-requests.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}