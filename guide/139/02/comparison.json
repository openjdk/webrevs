{"files":[{"patch":"@@ -32,0 +32,2 @@\n+Whenever looking to backport a fix the developer should look for both ‘blocked by’ and ‘causes’ links in order to understand the set of fixes that should be backported. Likewise, if A has already been backported the new causes linked issues will need to be assessed to see if it is important enough to be backported as well.\n+\n","filename":"src\/guide\/backporting.md","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,0 @@\n-   * Bugs where behavior has _incorrectly_ changed from a previous build or release: [[regression]{.jbs-label}](#regression)\n@@ -237,0 +236,1 @@\n+1. Managing regressions - for a bug (B) where behavior has _incorrectly_ changed from a previous fix (A) sure that the label [[regression]{.jbs-label}](#regression) is added.  Once it is known what fix caused the regression a 'caused by' link should be added to 'B' or a causes link to 'A'. A ‘causes’ link would be added to A if after the integration or release of A it is found that additional work needs to be done. This might be that extra work in another area forgotten and needs to be completed or the more common case would be that a fix ‘causes’ a change of behavior (intentional or otherwise).  If 'A' has been identifed as well as a caused-by link to that issue and set the [Introduced in Build]{.jbs-field} and [Introduced in Version]{.jbs-field} fields of 'B', based on which release 'A' was fixed in.  \n@@ -252,1 +252,0 @@\n-* For a regression, if you identify the fix that caused it, add a relates-to link to that issue (and add a [[regression_]{.jbs-label}(ID)](#regression_id) label) and set the [Introduced in Build]{.jbs-field} or [Introduced in Version]{.jbs-field} field.\n@@ -256,0 +255,18 @@\n+### Linking Issues\n+\n+An important aspect of any issue is making clear how it is connected\/related to other issues. This can occur at any stage of the issue's lifecycle. For example, as information becomes available that might suggest a cause, or similar issue (relates to); or when a Backport or CSR request is created; or when closing as a duplicate of another issue.\n+\n+There are the following link types:\n+\n+’duplicate of` - Normally set automatically - see [Closing issues as duplicates] for more information\n+\n+‘backported by’ - Normally set automatically when creating a backport with the “More -> Create Backport” option\n+\n+‘CSR for’ - When creating a CSR with the “More -> Create CSR” option a link is automatically created between the main issue and the new CSR\n+\n+‘blocks’ - For when other issues are dependent on the current issue being resolved\/fixed before they can be. For example, when a fix is broken down into a number of parts the ‘blocks’ link should be used to ensure they are all fixed before the main issue is considered resolved - see [implementing large changes](#implementing-large-changes]\n+\n+‘relates to’ - there are no rules as to when or why to create a relates link apart from not duplicating an existing “duplicated by”, ‘backported by’, ‘csr for’ or ‘blocked by’ links. In general, you should link any other issue that has a bearing on the situation where you feel the related issue should be reviewed in order to have a better understanding of what is going on\n+\n+‘causes’\/‘caused by’ - the causes link implies a stronger relationship than relates. If an issue B is filed which can be traced back to the fix for issue A then ‘A causes B’ (or ‘B was caused by A’)\n+\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"}]}