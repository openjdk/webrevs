{"files":[{"patch":"@@ -32,1 +32,1 @@\n-Whenever looking to backport a fix the developer should look for both ‘blocked by’ and ‘causes’ links in order to understand the set of fixes that should be backported. Likewise, if A has already been backported the new causes linked issues will need to be assessed to see if it is important enough to be backported as well.\n+Whenever looking to backport a fix the developer should look for both [blocked by]{.jbs-value} and [causes]{.jbs-value} links in order to understand the set of fixes that should be backported. Likewise, if A has already been backported the new [causes]{.jbs-value} linked issues will need to be assessed to see if it is important enough to be backported as well.\n","filename":"src\/guide\/backporting.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-1. Managing regressions - for a bug (B) where behavior has _incorrectly_ changed from a previous fix (A) sure that the label [[regression]{.jbs-label}](#regression) is added.  Once it is known what fix caused the regression a 'caused by' link should be added to 'B' or a causes link to 'A'. A ‘causes’ link would be added to A if after the integration or release of A, it is found that additional work needs to be done. This might be that extra work in another area forgotten and needs to be completed or the more common case would be that a fix ‘causes’ a change of behavior (intentional or otherwise).  If 'A' has been identifed as well as a caused-by link to that issue and set the [Introduced in Build]{.jbs-field} and [Introduced in Version]{.jbs-field} fields of 'B', based on which release 'A' was fixed in.  Do not add a `caused by` link if there was no specific product fix which _caused it_, for the additon of a test which finds an underlying problem should not be linked.\n+1. Managing regressions - for a bug (B) where behavior has _incorrectly_ changed from a previous fix (A) sure that the label [[regression]{.jbs-label}](#regression) is added.  Once it is known what fix caused the regression a [caused by]{.jbs-value} link should be added to 'B' or a causes link to 'A'. A ‘causes’ link would be added to A if after the integration or release of A, it is found that additional work needs to be done. This might be that extra work in another area forgotten and needs to be completed or the more common case would be that a fix ‘causes’ a change of behavior (intentional or otherwise).  If 'A' has been identifed as well as a caused-by link to that issue and set the [Introduced in Build]{.jbs-field} and [Introduced in Version]{.jbs-field} fields of 'B', based on which release 'A' was fixed in.  Do not add a [caused by]{.jbs-value} link if there was no specific product fix which _caused it_, for the additon of a test which finds an underlying problem should not be linked.\n@@ -261,1 +261,1 @@\n-’duplicate of` - Normally set automatically - see [Closing issues as duplicates] for more information\n+[duplicate of]{.jbs-value} - Normally set automatically - see [Closing issues as duplicates] for more information\n@@ -263,1 +263,1 @@\n-‘backported by’ - Normally set automatically when creating a backport with the “More -> Create Backport” option\n+[backported by]{.jbs-value} - Normally set automatically when creating a backport with the “More -> Create Backport” option\n@@ -265,1 +265,1 @@\n-‘CSR for’ - When creating a CSR with the “More -> Create CSR” option a link is automatically created between the main issue and the new CSR\n+[CSR for]{.jbs-value} - When creating a CSR with the “More -> Create CSR” option a link is automatically created between the main issue and the new CSR\n@@ -267,1 +267,1 @@\n-‘blocks’ - For when other issues are dependent on the current issue being resolved\/fixed before they can be. For example, when a fix is broken down into a number of parts the ‘blocks’ link should be used to ensure they are all fixed before the main issue is considered resolved - see [implementing large changes](#implementing-large-changes]\n+[blocks]{.jbs-value} - For when other issues are dependent on the current issue being resolved\/fixed before they can be. For example, when a fix is broken down into a number of parts the [blocks]{.jbs-value} link should be used to ensure they are all fixed before the main issue is considered resolved - see [implementing large changes](#implementing-large-changes]\n@@ -269,1 +269,1 @@\n-‘relates to’ - To avoid lots of relates links, the links should have some significance in relation to the cause and\/or fix, for the current issue. In addition, relates links should not duplicate an existing `duplicated by`, `backported by`, `csr for` or `blocked by` link.  In particular, it may be necessary to manually remove a `relates to` link if it is later added as a `duplicated by` or `caused by` link\n+[relates to]{.jbs-value} - To avoid lots of relates links, the links should have some significance in relation to the cause and\/or fix, for the current issue. In addition, relates links should not duplicate an existing [duplicated by]{.jbs-value}, [backported by]{.jbs-value}, [csr for]{.jbs-value} or [blocked by]{.jbs-value} link.  In particular, it may be necessary to manually remove a [relates to]{.jbs-value} link if it is later added as a [duplicated by]{.jbs-value} or [caused by]{.jbs-value} link\n@@ -271,1 +271,1 @@\n-‘causes’\/‘caused by’ - the causes link implies a stronger relationship than relates. If an issue B is filed which can be traced back to the fix for issue A then ‘A causes B’ (or ‘B was caused by A’)\n+[causes]{.jbs-value}\/[caused by]{.jbs-value} - the causes link implies a stronger relationship than relates. If an issue B is filed which can be traced back to the fix for issue A then ‘A causes B’ (or ‘B was caused by A’)\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}