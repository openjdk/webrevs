{"files":[{"patch":"@@ -41,2 +41,2 @@\n-* [OCA Signatories List][https:\/\/oca.opensource.oracle.com\/?ojr=contrib-list]\n-* [OpenJDK Legal Documents][https:\/\/openjdk.org\/legal\/]\n+* [OCA Signatories List](https:\/\/oca.opensource.oracle.com\/?ojr=contrib-list)\n+* [OpenJDK Legal Documents](https:\/\/openjdk.org\/legal\/)\n@@ -51,1 +51,1 @@\n-Like many other open-source communities, the OpenJDK Community requires Contributors to jointly assign their copyright on contributed code. Oracle is the steward of OpenJDK and if you haven't yet signed the [Oracle Contributor Agreement](https:\/\/oca.opensource.oracle.com\/) (OCA), and are not covered by a company-level agreement, then please do so. This is required in order to make your patch available for review. The OCA gives Oracle and you as a Contributor joint copyright interests in the code. You will retain your copyright while also granting those rights to Oracle. If you don't know if your organization has signed the OCA you can check the [OCA Signatories List][https:\/\/oca.opensource.oracle.com\/?ojr=contrib-list], or ask your legal advisor.\n+Like many other open-source communities, the OpenJDK Community requires Contributors to jointly assign their copyright on contributed code. Oracle is the steward of OpenJDK and if you haven't yet signed the [Oracle Contributor Agreement](https:\/\/oca.opensource.oracle.com\/) (OCA), and are not covered by a company-level agreement, then please do so. This is required in order to make your patch available for review. The OCA gives Oracle and you as a Contributor joint copyright interests in the code. You will retain your copyright while also granting those rights to Oracle. If you don't know if your organization has signed the OCA you can check the [OCA Signatories List](https:\/\/oca.opensource.oracle.com\/?ojr=contrib-list), or ask your legal advisor.\n","filename":"src\/guide\/contributing-to-an-open-jdk-project.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-A full description of the syntax of `-Xlog` is available in [JEP 158](https:\/\/openjdk.java.net\/jeps\/158).\n+A full description of the syntax of `-Xlog` is available in [JEP 158](https:\/\/openjdk.org\/jeps\/158).\n","filename":"src\/guide\/hotspot-development.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,3 +228,3 @@\n-     * There are two options for creating backport issues to track the backport: one is to create it manually once it's agreed that the bug should be backported; the second, is to let the bots create the backport issue once you push the fix to the repo (see [Working with backports in JBS]). In most cases, letting the bots create the backport issue is preferred.\n-   * For project internal changes intended to be pushed to a project repository rather than the JDK or JDK Updates repositories, the [Fix Version\/s]{.jbs-field} should be set to [internal]{.jbs-value}, or if the project is large enough to have its own [repo-*]{.jbs-value} fix version, use that.\n-   * Only one [Fix Version\/s]{.jbs-field} should ever be set, if the issue is to be fixed in additional releases then a separate backport must be created (see [Working with backports in JBS]). There are exceptions to this rule for CSRs and Release Notes.\n+     * There are two options for creating backport issues to track the backport: one is to create it manually once it's agreed that the bug should be backported; the second, is to let the bots create the backport issue once you integrate the fix to the repository (see [Working with backports in JBS]). In most cases, letting the bots create the backport issue is preferred.\n+   * For project internal changes intended to be integrated to a project repository rather than the JDK or JDK Updates repositories, the [Fix Version\/s]{.jbs-field} should be set to [internal]{.jbs-value}, or if the project is large enough to have its own [repo-*]{.jbs-value} fix version, use that.\n+   * Only one [Fix Version\/s]{.jbs-field} should ever be set. If the issue is to be fixed in additional releases then a separate backport issue must be created (see [Working with backports in JBS]). There are exceptions to this rule for CSRs and Release Notes.\n@@ -263,1 +263,5 @@\n-Once the work on an issue has been completed the issues [Status]{.jbs-field} should be in a \"completed\" state. There are two \"completed\" states: [Resolved]{.jbs-value} and [Closed]{.jbs-value}. These are accompanied by a [Resolution]{.jbs-field}. Which combination of [Status]{.jbs-field} and [Resolution]{.jbs-field} you should use depends on how the issue is completed.\n+Once the work on an issue has been completed the issues [Status]{.jbs-field} should be in a \"completed\" state. There are two \"completed\" states: [Resolved]{.jbs-value} and [Closed]{.jbs-value}. These are accompanied by a [Resolution]{.jbs-field} and a [Fix Version\/s]{.jbs-value}. Which combination of [Status]{.jbs-field}, [Resolution]{.jbs-field}, and [Fix Version\/s]{.jbs-value} you should use depends on how the issue is completed.\n+\n+Most resolutions are used to close an issue so that it ends up being [Closed]{.jbs-value} directly, but resolutions that indicates that a change has been integrated into a Project repository must go through the [Resolved]{.jbs-value} state. An issue in [Resolved]{.jbs-value} state needs to go through [verification](#verifying-an-issue) to end up as [Closed]{.jbs-value}. For the JDK project in almost all cases the bots will transition the issue to [Resolved]{.jbs-value}\/[Fixed]{.jbs-value} when the changeset is integrated to the repository.\n+\n+The [Fix Version\/s]{.jbs-field} field should indicate when an issue was fixed. The most common value for this field is a JDK version number. There are some special values available for this field in JBS, these should only be used is special cases as outlined in this Guide.\n@@ -269,17 +273,29 @@\n-| Resolution | Use with status | Covers |\n-|:-|:-|:----------|\n-| [Fixed]{.jbs-value} | [Resolved]{.jbs-value} \/ [Closed]{.jbs-value} |Â The [Fixed]{.jbs-value} resolution should be used **only** if a change has been integrated in a repo to address the issue. For the JDK project in almost all cases the bots will transition the issue to [Resolved]{.jbs-value}\/[Fixed]{.jbs-value} when the changeset is pushed to the repo. An issue in [Resolved]{.jbs-value}\/[Fixed]{.jbs-value} state needs to go through [verification](#verifying-an-issue) to end up as [Closed]{.jbs-value}\/[Fixed]{.jbs-value}.<br \/>If there isn't a fix in the repo (and so no associated changeset) then the issue should **not** be marked as [Fixed]{.jbs-field}. |\n-| [Won't Fix]{.jbs-value} | [Closed]{.jbs-value} | Used when the issue is describing behavior which, while maybe problematic or not ideal, isn't going to be changed - for compatibility reasons for example. |\n-| [Duplicate]{.jbs-value} | [Closed]{.jbs-value} | Used to indicate that the same issue is described in another JBS issue. See [Closing issues as duplicates] for more information. |\n-| [Incomplete]{.jbs-value} | [Resolved]{.jbs-value} \/ [Closed]{.jbs-value} | Used to indicate that the JBS issue doesn't contain enough information to work on the issue. See [Closing incomplete issues] for more information. |\n-| [Cannot Reproduce]{.jbs-value} | [Closed]{.jbs-value} | Use when a reproducer is provided (or clear steps) but it's not possible to see the faulty behavior. When you can't reproduce an issue, where feasible try on the release the issue was reported against as a way of confirming that it's indeed addressed on the latest release, rather than you not having the right environment in which to reproduce the issue. |\n-| [Other]{.jbs-value} | [Closed]{.jbs-value} | Used in rare cases where none of the other statuses fit the situation. |\n-| [External]{.jbs-value} | [Closed]{.jbs-value} | Use where the issue is due to a problem in a Java library (not part of the JDK code base), an IDE or other external tool etc. Where known, it's good to provide a link to the site where the issue should be reported. |\n-| [Not an Issue]{.jbs-value} | [Closed]{.jbs-value} | Use when the behavior is expected and valid (cf. [Won't Fix]{.jbs-value}) and the reporter perhaps has misunderstood what the behavior should be. |\n-| [Migrated]{.jbs-value} | [Closed]{.jbs-value} | Used rarely, but can be seen when issues are transferred into another project by opening up a separate issue in that project, with the issue in the original project being [Closed]{.jbs-value} |\n-| [Delivered]{.jbs-value} | [Resolved]{.jbs-value} \/ [Closed]{.jbs-value} | Used to close out issues where a change to the code isn't required, common examples are Tasks, Release Notes, and umbrella issues for larger changes. |\n-| [Withdrawn]{.jbs-value} | [Closed]{.jbs-value} | [Withdrawn]{.jbs-value} is essentially the partner state to [Delivered]{.jbs-value} for issues that would not have resulted in a fix to the repo, and also part of the [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) and [Release Note](#release-notes) process. |\n-| [Approved]{.jbs-value} | [Closed]{.jbs-value} | Used as part of the [CSR process](https:\/\/wiki.openjdk.org\/display\/csr\/Main). |\n-| Challenge States | --- | [Exclude [Challenge]]{.jbs-value}, [Alternative Tests [Challenge]]{.jbs-value}, and [Reject [Challenge]]{.jbs-value} are only relevant within the context of the JCK Project. |\n-| [Future Project]{.jbs-value} | --- | This status is not recommended for use. |\n-| [Rejected]{.jbs-value} | --- | This status should not be used. |\n+| Status<br>Resolution | Covers |\n+|:-|:-----------|\n+| [Resolved]{.jbs-value}\/[Closed]{.jbs-value}<br \/>[Fixed]{.jbs-value} | The resolution [Fixed]{.jbs-value} should be used **only** if a change has been integrated in a Project repository to address the issue, and the [Fix Version\/s]{.jbs-field} must always correspond to the version where the change was integrated, or be one of the [repo-*]{.jbs-value} fix versions or [internal]{.jbs-value}. If there isn't a fix in the repository (and so no associated changeset) then the issue should **not** be marked as [Fixed]{.jbs-field}. |\n+| [Closed]{.jbs-value}<br \/>[Won't Fix]{.jbs-value} | Used when the issue is describing behavior which, while maybe problematic or not ideal, isn't going to be changed - for compatibility reasons for example. |\n+| [Closed]{.jbs-value}<br \/>[Duplicate]{.jbs-value} | Used to indicate that the same issue is described in another JBS issue. See [Closing issues as duplicates] for more information. |\n+| [Resolved]{.jbs-value}\/[Closed]{.jbs-value}<br \/>[Incomplete]{.jbs-value} | Used to indicate that the JBS issue doesn't contain enough information to work on the issue. See [Closing incomplete issues] for more information. |\n+| [Closed]{.jbs-value}<br \/>[Cannot Reproduce]{.jbs-value} | Use when a reproducer is provided (or clear steps) but it's not possible to see the faulty behavior. When you can't reproduce an issue, where feasible try on the release the issue was reported against as a way of confirming that it's indeed addressed on the latest release, rather than you not having the right environment in which to reproduce the issue. |\n+| [Closed]{.jbs-value}<br \/>[Other]{.jbs-value} | Used in rare cases where none of the other statuses fit the situation. |\n+| [Closed]{.jbs-value}<br \/>[External]{.jbs-value} | Use where the issue is due to a problem in a Java library (not part of the OpenJDK code base), an IDE or other external tool etc. Where known, it's good to provide a link to the site where the issue should be reported. |\n+| [Closed]{.jbs-value}<br \/>[Not an Issue]{.jbs-value} | Use when the behavior is expected and valid (cf. [Won't Fix]{.jbs-value}) and the reporter perhaps has misunderstood what the behavior should be. |\n+| [Closed]{.jbs-value}<br \/>[Migrated]{.jbs-value} | Used rarely, but can be seen when issues are transferred into another project by opening up a separate issue in that project, with the issue in the original project being [Closed]{.jbs-value}. |\n+| [Resolved]{.jbs-value}\/[Closed]{.jbs-value}<br \/>[Delivered]{.jbs-value} | Used to close out issues where a change to the code isn't required, common examples are Tasks, Release Notes, and umbrella issues for larger changes. |\n+| [Closed]{.jbs-value}<br \/>[Withdrawn]{.jbs-value} | [Withdrawn]{.jbs-value} is essentially the partner state to [Delivered]{.jbs-value} for issues that would not have resulted in a fix to the repo, and also part of the [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) and [Release Note](#release-notes) process. |\n+| [Closed]{.jbs-value}<br \/>[Approved]{.jbs-value} | Used as part of the [CSR process](https:\/\/wiki.openjdk.org\/display\/csr\/Main). |\n+| Challenge States| [Exclude [Challenge]]{.jbs-value}, [Alternative Tests [Challenge]]{.jbs-value}, and [Reject [Challenge]]{.jbs-value} are only relevant within the context of the JCK Project. |\n+| [Future Project]{.jbs-value} | This status is not recommended for use. |\n+| [Rejected]{.jbs-value} | This status should not be used. |\n+\n+:::{.note}\n+When an issue is closed as [Won't Fix]{.jbs-value}, do not remove the [Fix Version\/s]{.jbs-field}. It's valuable information to know what version it was decided not to fix an issue in. The same goes for resolutions such as [Duplicate]{.jbs-value}, [Cannot Reproduce]{.jbs-value} and [Not an Issue]{.jbs-value}.\n+:::\n+\n+:::{.note}\n+The fix version [na]{.jbs-value} should only be used on backport issues that was created by mistake. See [How to fix an incorrect backport creation in JBS].\n+:::\n+\n+### Closing issues without knowing what fixed it\n+\n+If it's determined that an issue has been fixed, but it's unknown what change that fixed it, closing as [Fixed]{.jbs-value} is not an option as this requires a changeset in a project repository. [Duplicate]{.jbs-value} is also not an option since this requires a duplicate-link to the issue that fixed it. A common way to handle such cases is to close the issue as [Delivered]{.jbs-value} with the [Fix version\/s]{.jbs-value} set to [unknown]{.jbs-value}. Closing an issue as [Cannot Reproduce]{.jbs-value} has also been common practice but is no longer recommended if it's known that the issue has actually been fixed.\n@@ -295,0 +311,4 @@\n+::: {.note}\n+Be mindful of labels on issues closed as [Duplicate]{.jbs-value}. Some labels needs to be copied over to the duplicating issue, see for instance the [[tck-red-]{.jbs-label}*(Rel)*](#tck-red-rel) label.\n+:::\n+\n@@ -747,0 +767,2 @@\n+      If an issue with a [tck-red-]{.jbs-label}*(Rel)* label is closed as a [Duplicate]{.jbs-value}, the label **must** be added to the duplicating issue as well.\n+\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":43,"deletions":21,"binary":false,"changes":64,"status":"modified"}]}