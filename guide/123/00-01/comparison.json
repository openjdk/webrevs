{"files":[{"patch":"@@ -20,1 +20,1 @@\n-During ramp down of a feature release there are two branches of the mainline repository in play, the release stabilization branch for the outgoing release, and the master branch where the next release is being developed. Any change going into the release stabilization branch is likely to be desired in the master branch as well. When making a change intended for both the stabilization and the master branches, you should always create your pull request targeting the master branch first, and then, once the pull request is integrated, backport the resulting commit to the release stabilization branch. For bug fixes that are **only** applicable to the release stabilization branch, regular pull requests targeting the stabilization branch should be created.\n+During ramp down of a feature release there are two branches of the mainline repository in play, the release stabilization branch for the outgoing release, and the `master` branch where the next release is being developed. Any change going into the release stabilization branch is likely to be desired in `master` as well. When making a change intended for both the stabilization branch and `master`, you should always create your pull request targeting `master` first, and then, once the pull request is integrated, backport the resulting commit to the release stabilization branch. For bug fixes that are **only** applicable to the release stabilization branch, regular pull requests targeting the stabilization branch should be created.\n@@ -22,1 +22,1 @@\n-Please note that special rules applies during ramp down regarding what can and can't be included into the ramp down branch. See the [The JDK Release Process] for more information.\n+Please note that special rules applies during ramp down regarding what can and can't be included into the stabilization branch. See the [The JDK Release Process] for more information.\n@@ -65,1 +65,1 @@\n-If an issue is targeted to a release and a fix referring to that issue is pushed to a different release repository, then a backport issue is automatically created in JBS. Usually this is a \"good thing\", e.g., when you are backporting a fix to an earlier release, but not always... If the main issue is targeted to a later release (due to schedule planning) but someone finds the time to fix that issue in the current release, or if the main issue is targeted to a feature release in ramp down and the fix is pushed to the mainline master branch, then the issue should be retargeted to the correct release before pushing the fix. However, sometimes we forget.\n+If an issue is targeted to a release and a fix referring to that issue is pushed to a different release repository, then a backport issue is automatically created in JBS. Usually this is a \"good thing\", e.g., when you are backporting a fix to an earlier release, but not always... If the main issue is targeted to a later release (due to schedule planning) but someone finds the time to fix that issue in the current release, or if the main issue is targeted to a feature release in ramp down and the fix is pushed to the master branch, then the issue should be retargeted to the correct release before pushing the fix. However, sometimes we forget.\n","filename":"src\/guide\/backporting.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,4 +50,0 @@\n-:::{.note}\n-If you intend to work on a backport to a feature release stabilization branch, your new local branch should of course be based on the stabilization branch instead of `master`.\n-:::\n-\n@@ -58,0 +54,4 @@\n+If you intend to work on a backport to a feature release stabilization branch, your new local branch should of course be based on the stabilization branch instead of `master`.\n+\n+    $ git switch -c JDK-8272373 origin\/jdk23u\n+\n","filename":"src\/guide\/cloning-the-jdk.md","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-:    Since development is always ongoing in the master branch of the mainline repository ([openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk)), the start of a new release can be said to be when the former release is branched out. After the start of the release follows six months of development to implement and integrate all the cool stuff that will go into the next release. After these six months ramp down begins.\n+:    Since development is always ongoing in the master branch of the mainline repository ([openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk)), the start of a new release can be said to be when the former release is branched for stabilization. After the start of the release follows six months of development to implement and integrate all the cool stuff that will go into the next release. After these six months ramp down begins.\n","filename":"src\/guide\/the-jdk-release-process.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-   If your clone was based on some other branch than `master`, make sure to pull from the correct upstream branch. Verify that your PR doesn't include changes from some other branch (e.g. `master`) that aren't supposed to be there.\n+   If your PR is targeting some other branch than `master`, make sure to merge the correct upstream branch (the target branch). Verify that your PR doesn't include changes from some other branch (e.g. `master`) that aren't supposed to be there.\n","filename":"src\/guide\/working-with-pull-requests.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}