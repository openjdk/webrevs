{"files":[{"patch":"@@ -651,1 +651,1 @@\n-      The [noreg-]{.jbs-label}`.*` and [nounit-]{.jbs-label}`.*` labels are used to explain why a bugfix doesn't need\/have a regression test or a unit test. The suffix of the label is described below.\n+      The [noreg-]{.jbs-label}`.*` and [nounit-]{.jbs-label}`.*` labels are used to explain why a bugfix doesn't need\/have a regression test or a unit test. The suffix of the label is described below. Every change that is integrated into the JDK source code must either have a regression\/unit test, or have at least one of these labels on its JBS issue. It's quite possible to have more than one of these labels on the same issue. For instance, an integration could contain both changes to documentation and test code. In that case it would be logical to label the issue with both [noreg-doc]{.jbs-label} and [noreg-self]{.jbs-label}.\n","filename":"src\/guide\/jbs-jdk-bug-system.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-There are a few examples where it doesn't make sense to write an explicit regression test. These should be tagged in JBS with one of the [noreg-labels](#noreg).\n+There are a few cases where it doesn't make sense to write an explicit regression test. These should be tagged in JBS with one of the [noreg-labels](#noreg).\n","filename":"src\/guide\/testing-the-jdk.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}