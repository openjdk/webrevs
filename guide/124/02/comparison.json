{"files":[{"patch":"@@ -61,1 +61,11 @@\n-The Skara tooling includes support for backports. [The official Skara documentation](https:\/\/wiki.openjdk.org\/display\/SKARA\/Backports) describes in detail how to work with the tooling to create backport PRs on [GitHub](https:\/\/github.com) or using the CLI tools. As described in the documentation, the [`\/backport`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Commit+Commands#CommitCommands-\/backport) command can be used on a commit or a PR to create the backport PR. If a backport PR is manually created, set the PR title to `Backport <original commit hash>`. This ensures that the bots will recognize it as a backport as opposed to a main fix specifically targeting an older release. One can tell whether or not the bots recognized a PR as a backport by the [backport]{.label} label being added if it's recognized.\n+The Skara tooling includes support for backports. [The official Skara documentation](https:\/\/wiki.openjdk.org\/display\/SKARA\/Backports) describes in detail how to work with the tooling to create backport PRs on [GitHub](https:\/\/github.com) or using the CLI tools. As described in the documentation, the [`\/backport`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Commit+Commands#CommitCommands-\/backport) command can be used on a commit or a PR to create the backport PR:\n+\n+    \/backport jdk21u-dev\n+    \/backport jdk jdk23\n+    \/backport :jdk23\n+\n+In the first example we backport the change to the JDK 21 update release. To backport to other update releases, replace `jdk21u` with the corresponding name for the target update repository.\n+\n+The second and third example above will backport the change to a stabilization branch, in this case JDK 23. As before `jdk` is the name of the target repository, and `jdk23` is the name of the stabilization branch.\n+\n+Using the `\/backport` command is the recommended way to perform backports as the tooling will automatically handle all the necessary steps in the background. If a backport PR is manually created, set the PR title to `Backport <original commit hash>`. This ensures that the bots will recognize it as a backport as opposed to a main fix specifically targeting an older release. One can tell whether or not the bots recognized a PR as a backport by the [backport]{.label} label being added if it's recognized.\n","filename":"src\/guide\/backporting.md","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    $ git switch -c JDK-8272373 origin\/jdk23u\n+    $ git switch -c JDK-8272373 jdk23\n","filename":"src\/guide\/cloning-the-jdk.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}