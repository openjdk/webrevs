{"files":[{"patch":"@@ -1780,3 +1780,6 @@\n-          \/\/ Scalarize null in src block to be able to merge it with inline type in target block\n-          assert(gvn().type(n)->is_zero_type(), \"Should have been scalarized\");\n-          map()->set_req(j, InlineTypeNode::make_null(gvn(), t->inline_klass()));\n+          AllocateNode* alloc = AllocateNode::Ideal_allocation(n);\n+          if (alloc == nullptr || !alloc->_larval) {\n+            \/\/ Scalarize null in src block to be able to merge it with inline type in target block\n+            assert(gvn().type(n)->is_zero_type(), \"Should have been scalarized\");\n+            map()->set_req(j, InlineTypeNode::make_null(gvn(), t->inline_klass()));\n+          }\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+    public static final Unsafe U =  Unsafe.getUnsafe();\n+\n@@ -47,1 +49,1 @@\n-        res = Unsafe.getUnsafe().makePrivateBuffer(res);\n+        res = U.makePrivateBuffer(res);\n@@ -50,2 +52,2 @@\n-            boolean b = Unsafe.getUnsafe().getBoolean(payload, mOffset + i + offset);\n-            Unsafe.getUnsafe().putBoolean(res, mOffset + i, b);\n+            boolean b = U.getBoolean(payload, mOffset + i + offset);\n+            U.putBoolean(res, mOffset + i, b);\n@@ -53,1 +55,1 @@\n-        res = Unsafe.getUnsafe().finishPrivateBuffer(res);\n+        res = U.finishPrivateBuffer(res);\n@@ -60,1 +62,1 @@\n-        res = Unsafe.getUnsafe().makePrivateBuffer(res);\n+        res = U.makePrivateBuffer(res);\n@@ -63,1 +65,1 @@\n-            Unsafe.getUnsafe().putBoolean(res, mOffset + i, val);\n+            U.putBoolean(res, mOffset + i, val);\n@@ -65,1 +67,1 @@\n-        res = Unsafe.getUnsafe().finishPrivateBuffer(res);\n+        res = U.finishPrivateBuffer(res);\n@@ -80,1 +82,1 @@\n-        res = Unsafe.getUnsafe().makePrivateBuffer(res);\n+        res = U.makePrivateBuffer(res);\n@@ -83,2 +85,2 @@\n-            boolean b = Unsafe.getUnsafe().getBoolean(bits, mOffset + i);\n-            Unsafe.getUnsafe().putBoolean(res, mOffset + i, f.apply(i, b));\n+            boolean b = U.getBoolean(bits, mOffset + i);\n+            U.putBoolean(res, mOffset + i, f.apply(i, b));\n@@ -86,1 +88,1 @@\n-        res = Unsafe.getUnsafe().finishPrivateBuffer(res);\n+        res = U.finishPrivateBuffer(res);\n@@ -102,1 +104,1 @@\n-        res = Unsafe.getUnsafe().makePrivateBuffer(res);\n+        res = U.makePrivateBuffer(res);\n@@ -105,3 +107,3 @@\n-            boolean b = Unsafe.getUnsafe().getBoolean(bits, mOffset + i);\n-            boolean mb = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i);\n-            Unsafe.getUnsafe().putBoolean(res, mOffset + i, f.apply(i, b, mb));\n+            boolean b = U.getBoolean(bits, mOffset + i);\n+            boolean mb = U.getBoolean(mbits, mOffset + i);\n+            U.putBoolean(res, mOffset + i, f.apply(i, b, mb));\n@@ -109,1 +111,1 @@\n-        res = Unsafe.getUnsafe().finishPrivateBuffer(res);\n+        res = U.finishPrivateBuffer(res);\n@@ -119,1 +121,1 @@\n-            arr[idx++] = Unsafe.getUnsafe().getBoolean(bits, mOffset + i);\n+            arr[idx++] = U.getBoolean(bits, mOffset + i);\n@@ -219,1 +221,1 @@\n-        return Unsafe.getUnsafe().getBoolean(bits, bits.multiFieldOffset() + idx);\n+        return U.getBoolean(bits, bits.multiFieldOffset() + idx);\n@@ -228,1 +230,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(bits, mOffset + i)) return true;\n+            if (U.getBoolean(bits, mOffset + i)) return true;\n@@ -239,1 +241,1 @@\n-            if (!Unsafe.getUnsafe().getBoolean(bits, mOffset + i)) return false;\n+            if (!U.getBoolean(bits, mOffset + i)) return false;\n@@ -250,1 +252,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(bits, mOffset + i)) c++;\n+            if (U.getBoolean(bits, mOffset + i)) c++;\n@@ -260,1 +262,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(bits, mOffset + i)) return i;\n+            if (U.getBoolean(bits, mOffset + i)) return i;\n@@ -270,1 +272,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(bits, mOffset + i)) return i;\n+            if (U.getBoolean(bits, mOffset + i)) return i;\n@@ -282,1 +284,1 @@\n-            res = Unsafe.getUnsafe().getBoolean(bits, mOffset + i) ? res | set : res;\n+            res = U.getBoolean(bits, mOffset + i) ? res | set : res;\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractMask.java","additions":26,"deletions":24,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+    public static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -46,1 +48,1 @@\n-        payload = Unsafe.getUnsafe().makePrivateBuffer(payload);\n+        payload = U.makePrivateBuffer(payload);\n@@ -51,1 +53,1 @@\n-            Unsafe.getUnsafe().putByte(payload, mf_offset + i * Byte.BYTES, (byte) si);\n+            U.putByte(payload, mf_offset + i * Byte.BYTES, (byte) si);\n@@ -53,1 +55,1 @@\n-        payload = Unsafe.getUnsafe().finishPrivateBuffer(payload);\n+        payload = U.finishPrivateBuffer(payload);\n@@ -61,1 +63,1 @@\n-        payload = Unsafe.getUnsafe().makePrivateBuffer(payload);\n+        payload = U.makePrivateBuffer(payload);\n@@ -66,1 +68,1 @@\n-            Unsafe.getUnsafe().putByte(payload, offset + i * Byte.BYTES, (byte) si);\n+            U.putByte(payload, offset + i * Byte.BYTES, (byte) si);\n@@ -68,1 +70,1 @@\n-        payload = Unsafe.getUnsafe().finishPrivateBuffer(payload);\n+        payload = U.finishPrivateBuffer(payload);\n@@ -88,1 +90,1 @@\n-            int sourceIndex = Unsafe.getUnsafe().getByte(indices, mf_offset + i * Byte.BYTES);\n+            int sourceIndex = U.getByte(indices, mf_offset + i * Byte.BYTES);\n@@ -126,1 +128,1 @@\n-            throw checkIndexFailed(Unsafe.getUnsafe().getByte(indices, offset + vecmask.firstTrue() * Byte.BYTES), length());\n+            throw checkIndexFailed(U.getByte(indices, offset + vecmask.firstTrue() * Byte.BYTES), length());\n@@ -149,1 +151,1 @@\n-        indices = Unsafe.getUnsafe().makePrivateBuffer(indices);\n+        indices = U.makePrivateBuffer(indices);\n@@ -151,1 +153,1 @@\n-            int si = Unsafe.getUnsafe().getByte(oldIndices, offset + i * Byte.BYTES);\n+            int si = U.getByte(oldIndices, offset + i * Byte.BYTES);\n@@ -160,1 +162,1 @@\n-            Unsafe.getUnsafe().putByte(indices, offset + i * Byte.BYTES, (byte) si);\n+            U.putByte(indices, offset + i * Byte.BYTES, (byte) si);\n@@ -162,1 +164,1 @@\n-        indices = Unsafe.getUnsafe().finishPrivateBuffer(indices);\n+        indices = U.finishPrivateBuffer(indices);\n@@ -228,1 +230,1 @@\n-            byte si = Unsafe.getUnsafe().getByte(indices, offset + i * Byte.BYTES);\n+            byte si = U.getByte(indices, offset + i * Byte.BYTES);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -83,0 +84,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,2 +64,0 @@\n-    static final Unsafe U = Unsafe.getUnsafe();\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}