{"files":[{"patch":"@@ -28,2 +28,0 @@\n- * @modules jdk.compiler\n- * @compile HiddenPoint.jcod\n@@ -41,1 +39,0 @@\n-\n@@ -43,1 +40,0 @@\n-    String hello = \"hello\";\n@@ -66,0 +62,14 @@\n+value class HiddenPoint {\n+    int x;\n+    int y;\n+\n+    HiddenPoint() {\n+        this.x = 0;\n+        this.y = 0;\n+    }\n+\n+    public String getValue() {\n+        return \"x: \" + x + \", y: \" + y;\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/HiddenInlineClassTest.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,195 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ These classes are based on the following source.  The return type of factory\n-\/\/ method <vnew> in class HiddenPoint was changed to java.lang.Object because\n-\/\/ HiddenPoint will be defined as an inline hidden class.\n-\/\/\n-\/\/  inline class HiddenPoint {\n-\/\/      int x;\n-\/\/      int y;\n-\/\/\n-\/\/      HiddenPoint() {\n-\/\/          this.x = 0;\n-\/\/          this.y = 0;\n-\/\/      }\n-\/\/      public String getValue() {\n-\/\/          return \"x: \" + x + \", y: \" + y;\n-\/\/      }\n-\/\/  }\n-\n-class HiddenPoint {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  66; \/\/ version\n-  [40] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"HiddenPoint\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x1B\n-    NameAndType #5 #6; \/\/ #4     at 0x20\n-    Utf8 \"x\"; \/\/ #5     at 0x25\n-    Utf8 \"I\"; \/\/ #6     at 0x29\n-    Field #1 #8; \/\/ #7     at 0x2D\n-    NameAndType #9 #6; \/\/ #8     at 0x32\n-    Utf8 \"y\"; \/\/ #9     at 0x37\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x3B\n-    NameAndType #12 #13; \/\/ #11     at 0x40\n-    Utf8 \"makeConcatWithConstants\"; \/\/ #12     at 0x45\n-    Utf8 \"(II)Ljava\/lang\/String;\"; \/\/ #13     at 0x5F\n-    class #15; \/\/ #14     at 0x78\n-    Utf8 \"java\/lang\/Object\"; \/\/ #15     at 0x7B\n-    Utf8 \"getValue\"; \/\/ #16     at 0x8E\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #17     at 0x99\n-    Utf8 \"Code\"; \/\/ #18     at 0xB0\n-    Utf8 \"LineNumberTable\"; \/\/ #19     at 0xB7\n-    Utf8 \"<vnew>\"; \/\/ #20     at 0xC9\n-    Utf8 \"()Ljava\/lang\/Object;\"; \/\/ #21     at 0xD2\n-    Utf8 \"SourceFile\"; \/\/ #22     at 0xE4\n-    Utf8 \"HiddenPoint.java\"; \/\/ #23     at 0xF1\n-    Utf8 \"BootstrapMethods\"; \/\/ #24     at 0x0104\n-    MethodHandle 6b #26; \/\/ #25     at 0x0117\n-    Method #27 #28; \/\/ #26     at 0x011B\n-    class #29; \/\/ #27     at 0x0120\n-    NameAndType #12 #30; \/\/ #28     at 0x0123\n-    Utf8 \"java\/lang\/invoke\/StringConcatFactory\"; \/\/ #29     at 0x0128\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/String;[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #30     at 0x014F\n-    String #32; \/\/ #31     at 0x01EA\n-    Utf8 \"x: , y: \"; \/\/ #32     at 0x01ED\n-    Utf8 \"InnerClasses\"; \/\/ #33     at 0x01FA\n-    class #35; \/\/ #34     at 0x0209\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #35     at 0x020C\n-    class #37; \/\/ #36     at 0x0234\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #37     at 0x0237\n-    Utf8 \"Lookup\"; \/\/ #38     at 0x0258\n-    Utf8 \"Preload\"; \/\/ #39     at 0x0261\n-  } \/\/ Constant Pool\n-\n-  0x0050; \/\/ access [ ACC_VALUE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #14;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ Fields\n-    {  \/\/ field at 0x0275\n-      0x0010; \/\/ access\n-      #5; \/\/ name_index       : x\n-      #6; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ field at 0x027D\n-      0x0010; \/\/ access\n-      #9; \/\/ name_index       : y\n-      #6; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [2] { \/\/ Methods\n-    {  \/\/ method at 0x0287\n-      0x0001; \/\/ access\n-      #16; \/\/ name_index       : getValue\n-      #17; \/\/ descriptor_index : ()Ljava\/lang\/String;\n-      [1] { \/\/ Attributes\n-        Attr(#18, 38) { \/\/ Code at 0x028F\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[14]{\n-            0x2AB400032AB40007;\n-            0xBA000A0000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#19, 6) { \/\/ LineNumberTable at 0x02AF\n-              [1] { \/\/ line_number_table\n-                0  10; \/\/  at 0x02BB\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x02BB\n-      0x0008; \/\/ access\n-      #20; \/\/ name_index       : <vnew>\n-      #21; \/\/ descriptor_index : ()LHiddenPoint;\n-      [1] { \/\/ Attributes\n-        Attr(#18, 56) { \/\/ Code at 0x02C3\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#19, 18) { \/\/ LineNumberTable at 0x02E9\n-              [4] { \/\/ line_number_table\n-                0  5; \/\/  at 0x02F5\n-                4  6; \/\/  at 0x02F9\n-                11  7; \/\/  at 0x02FD\n-                18  8; \/\/  at 0x0301\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [4] { \/\/ Attributes\n-    Attr(#22, 2) { \/\/ SourceFile at 0x0303\n-      #23;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#24, 8) { \/\/ BootstrapMethods at 0x030B\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #25; \/\/ bootstrap_method_ref\n-          [1] { \/\/ bootstrap_arguments\n-            #31; \/\/  at 0x0319\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#33, 10) { \/\/ InnerClasses at 0x0319\n-      [1] { \/\/ classes\n-        #34 #36 #38 25; \/\/  at 0x0329\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#39, 4) { \/\/ Preload at 0x0329\n-      0x00010001;\n-    } \/\/ end Preload\n-  } \/\/ Attributes\n-} \/\/ end class HiddenPoint\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/HiddenPoint.jcod","additions":0,"deletions":195,"binary":false,"changes":195,"status":"deleted"},{"patch":"@@ -27,1 +27,0 @@\n- * @compile ValueImpl.jcod\n@@ -29,2 +28,1 @@\n- * @summary a hidden value class can only be defined without \"<vnew>\" static\n- *          factory method.  It will have to provide a different instance creation.\n+ * @summary Test that a value class can be defined as a hidden class\n@@ -33,1 +31,0 @@\n-import java.lang.invoke.MethodHandle;\n@@ -35,1 +32,0 @@\n-import java.lang.invoke.MethodHandles.Lookup;\n@@ -44,1 +40,0 @@\n-import static org.testng.Assert.*;\n@@ -47,5 +42,0 @@\n-\n-    value class Impl implements Runnable {\n-        public void run() {}\n-    }\n-\n@@ -55,5 +45,1 @@\n-     * ClassFormatError when defining HiddenValueClass$Impl as a hidden class\n-     * as it defines \"<vnew>()LHiddenValueClass$Impl;\" which is illegal.\n-     *\n-     * A hidden class cannot have \"<vnew>\" factory method since it cannot\n-     * be named.\n+     * Defines ValueImpl as a hidden class.\n@@ -62,12 +48,1 @@\n-    public void illegalHiddenValueClass() throws Throwable {\n-        byte[] bytes = Files.readAllBytes(CLASSES_DIR.resolve(\"HiddenValueClass$Impl.class\"));\n-        assertThrows(ClassFormatError.class, () -> MethodHandles.lookup().defineHiddenClass(bytes, false));\n-    }\n-\n-    \/*\n-     * ValueImpl is a value class without \"<vnew>\" method but instead\n-     * a special factory method named \"$make\" (no bracket) with\n-     * \"()java\/lang\/Runnable;\" descriptor defined.\n-     *\/\n-    @Test\n-    public void hiddenValueClassWithMakeFactory() throws Throwable {\n+    public void hiddenValueClass() throws Throwable {\n@@ -75,2 +50,3 @@\n-        Lookup lookup = MethodHandles.lookup().defineHiddenClass(bytes, false);\n-        MethodHandle mh = lookup.findStatic(lookup.lookupClass(), \"$make\", methodType(Runnable.class));\n+        var lookup = MethodHandles.lookup().defineHiddenClass(bytes, false);\n+        var mh = lookup.findConstructor(lookup.lookupClass(), methodType(void.class))\n+                                    .asType(methodType(Runnable.class));\n@@ -81,0 +57,4 @@\n+\n+value class ValueImpl implements Runnable {\n+    public void run() {}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/HiddenValueClass.java","additions":10,"deletions":30,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -1,139 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/\/ Generated from this source:\n-\/\/\n-\/\/ value class ValueImpl implements Runnable {\n-\/\/     public void run() {\n-\/\/         System.out.println(\"ValueImpl::run\");\n-\/\/     }\n-\/\/ }\n-\/\/\n-\/\/ then modified \"<vnew>()LValueImpl;\" to \"$make()Ljava\/lang\/Runnable;\"\n-\n-class ValueImpl {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  66; \/\/ version\n-  [29] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"ValueImpl\"; \/\/ #2     at 0x0D\n-    Field #4 #5; \/\/ #3     at 0x19\n-    class #6; \/\/ #4     at 0x1E\n-    NameAndType #7 #8; \/\/ #5     at 0x21\n-    Utf8 \"java\/lang\/System\"; \/\/ #6     at 0x26\n-    Utf8 \"out\"; \/\/ #7     at 0x39\n-    Utf8 \"Ljava\/io\/PrintStream;\"; \/\/ #8     at 0x3F\n-    String #10; \/\/ #9     at 0x57\n-    Utf8 \"ValueImpl::run\"; \/\/ #10     at 0x5A\n-    Method #12 #13; \/\/ #11     at 0x6B\n-    class #14; \/\/ #12     at 0x70\n-    NameAndType #15 #16; \/\/ #13     at 0x73\n-    Utf8 \"java\/io\/PrintStream\"; \/\/ #14     at 0x78\n-    Utf8 \"println\"; \/\/ #15     at 0x8E\n-    Utf8 \"(Ljava\/lang\/String;)V\"; \/\/ #16     at 0x98\n-    class #18; \/\/ #17     at 0xB0\n-    Utf8 \"java\/lang\/Object\"; \/\/ #18     at 0xB3\n-    class #20; \/\/ #19     at 0xC6\n-    Utf8 \"java\/lang\/Runnable\"; \/\/ #20     at 0xC9\n-    Utf8 \"run\"; \/\/ #21     at 0xDE\n-    Utf8 \"()V\"; \/\/ #22     at 0xE4\n-    Utf8 \"Code\"; \/\/ #23     at 0xEA\n-    Utf8 \"LineNumberTable\"; \/\/ #24     at 0xF1\n-    Utf8 \"$make\"; \/\/ #25     at 0x0103\n-    Utf8 \"()Ljava\/lang\/Runnable;\"; \/\/ #26     at 0x010C\n-    Utf8 \"SourceFile\"; \/\/ #27     at 0x011C\n-    Utf8 \"ValueImpl.java\"; \/\/ #28     at 0x0129\n-  } \/\/ Constant Pool\n-\n-  0x0050; \/\/ access [ ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #17;\/\/ super_cpx\n-\n-  [1] { \/\/ Interfaces\n-    #19;\n-  } \/\/ Interfaces\n-\n-  [0] { \/\/ fields\n-  } \/\/ fields\n-\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0x0148\n-      0x0001; \/\/ access\n-      #21; \/\/ name_cpx\n-      #22; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#23, 37) { \/\/ Code at 0x0150\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[9]{\n-            0xB200031209B6000B;\n-            0xB1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#24, 10) { \/\/ LineNumberTable at 0x016B\n-              [2] { \/\/ LineNumberTable\n-                0  3; \/\/  at 0x0177\n-                8  4; \/\/  at 0x017B\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x017B\n-      0x0008; \/\/ access\n-      #25; \/\/ name_cpx\n-      #26; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#23, 30) { \/\/ Code at 0x0183\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[6]{\n-            0xCB00014B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#24, 6) { \/\/ LineNumberTable at 0x019B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x01A7\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [1] { \/\/ Attributes\n-    Attr(#27, 2) { \/\/ SourceFile at 0x01A9\n-      #28;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ValueImpl\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/ValueImpl.jcod","additions":0,"deletions":139,"binary":false,"changes":139,"status":"deleted"}]}