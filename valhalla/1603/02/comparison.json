{"files":[{"patch":"@@ -1964,1 +1964,1 @@\n-  int remove_scalarized_frames(StackChunkFrameStream<ChunkFrames::CompiledOnly>& scfs, stackChunkOop chunk, int &argsize);\n+  int remove_scalarized_frames(StackChunkFrameStream<ChunkFrames::CompiledOnly>& scfs, int &argsize);\n@@ -2075,2 +2075,1 @@\n-int ThawBase::remove_scalarized_frames(StackChunkFrameStream<ChunkFrames::CompiledOnly>& f, stackChunkOop chunk, int &argsize) {\n-  DEBUG_ONLY(intptr_t* const chunk_sp = chunk->start_address() + chunk->sp();)\n+int ThawBase::remove_scalarized_frames(StackChunkFrameStream<ChunkFrames::CompiledOnly>& f, int &argsize) {\n@@ -2079,1 +2078,1 @@\n-  while (f.cb()->as_nmethod_or_null()->needs_stack_repair()) {\n+  while (f.cb()->as_nmethod()->needs_stack_repair()) {\n@@ -2087,27 +2086,1 @@\n-  int frames_size = bottom - top;\n-\n-  f.next(SmallRegisterMap::instance(), true \/* stop *\/);\n-  bool empty = f.is_done();\n-  assert(!empty || argsize == chunk->argsize(), \"\");\n-\n-  if (empty) {\n-    clear_chunk(chunk);\n-  } else {\n-    chunk->set_sp(chunk->sp() + frames_size);\n-    chunk->set_max_thawing_size(chunk->max_thawing_size() - frames_size);\n-    \/\/ We set chunk->pc to the return pc into the next frame\n-    chunk->set_pc(f.pc());\n-#ifdef ASSERT\n-    {\n-      intptr_t* retaddr_slot = (chunk_sp\n-                                + frames_size\n-                                - frame::sender_sp_ret_address_offset());\n-      assert(f.pc() == ContinuationHelper::return_address_at(retaddr_slot),\n-             \"unexpected pc\");\n-    }\n-#endif\n-  }\n-  assert(empty == chunk->is_empty(), \"\");\n-  \/\/ returns the size required to store the frame on stack, and because it is a\n-  \/\/ compiled frame, it must include a copy of the arguments passed by the caller\n-  return frames_size + argsize + frame::metadata_words_at_top;\n+  return bottom - top;\n@@ -2124,4 +2097,0 @@\n-  if (f.cb()->as_nmethod_or_null()->needs_stack_repair()) {\n-    return remove_scalarized_frames(f, chunk, argsize);\n-  }\n-\n@@ -2141,3 +2110,0 @@\n-    frame_size += f.cb()->frame_size();\n-    argsize = f.stack_argsize();\n-\n@@ -2150,0 +2116,9 @@\n+\n+    if (f.cb()->as_nmethod()->needs_stack_repair()) {\n+      frame_size += remove_scalarized_frames(f, argsize);\n+    } else {\n+      frame_size += f.cb()->frame_size();\n+      argsize = f.stack_argsize();\n+    }\n+  } else if (f.cb()->as_nmethod()->needs_stack_repair()) {\n+    frame_size = remove_scalarized_frames(f, argsize);\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":13,"deletions":38,"binary":false,"changes":51,"status":"modified"}]}