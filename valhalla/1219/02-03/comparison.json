{"files":[{"patch":"@@ -188,0 +188,1 @@\n+        allowNullRestrictedTypesForValueClassesOnly = options.isSet(\"allowNullRestrictedTypesForValueClassesOnly\");\n@@ -221,0 +222,4 @@\n+    \/** Are null-restricted types allowed for value classes only\n+     *\/\n+    private final boolean allowNullRestrictedTypesForValueClassesOnly;\n+\n@@ -1370,8 +1375,8 @@\n-\/\/                @@@ Maybe guard with flag?\n-\/\/                if ((result.isNonNullable() || elemOrType.isNonNullable()) && (!elemOrType.isValueClass() || !elemOrType.hasImplicitConstructor())) {\n-\/\/                    log.error(tree.pos(),\n-\/\/                            types.elemtype(result) == null?\n-\/\/                                    Errors.TypeCantBeNullRestricted(result) :\n-\/\/                                    Errors.TypeCantBeNullRestricted2(result)\n-\/\/                    );\n-\/\/                }\n+                if (allowNullRestrictedTypesForValueClassesOnly &&\n+                        ((result.isNonNullable() || elemOrType.isNonNullable()) && (!elemOrType.isValueClass() || !elemOrType.hasImplicitConstructor()))) {\n+                    log.error(tree.pos(),\n+                            types.elemtype(result) == null?\n+                                    Errors.TypeCantBeNullRestricted(result) :\n+                                    Errors.TypeCantBeNullRestricted2(result)\n+                    );\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -239,2 +239,0 @@\n-compiler.err.type.cant.be.null.restricted\n-compiler.err.type.cant.be.null.restricted.2\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.type.cant.be.null.restricted\n+\/\/ key: compiler.err.type.cant.be.null.restricted.2\n+\/\/ key: compiler.note.preview.filename\n+\/\/ key: compiler.note.preview.recompile\n+\/\/ options: --enable-preview -source ${jdk.version} -XDallowNullRestrictedTypesForValueClassesOnly\n+\n+public class CantBeNonNullableType {\n+    String! s;\n+    String[]! sa;\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/CantBeNonNullableType.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"}]}