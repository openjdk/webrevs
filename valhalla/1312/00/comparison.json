{"files":[{"patch":"@@ -577,0 +577,2 @@\n+     *\n+     * @since Valhalla\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -188,0 +188,1 @@\n+    * @since Valhalla\n","filename":"src\/java.base\/share\/classes\/java\/util\/Objects.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -253,0 +253,1 @@\n+     * @since Valhalla\n@@ -304,0 +305,2 @@\n+     *\n+     * @since Valhalla\n@@ -331,0 +334,2 @@\n+     *\n+     * @since Valhalla\n","filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -842,1 +842,0 @@\n-tools\/sincechecker\/modules\/java_base\/CheckSince_javaBase.java 8344541 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -104,0 +104,4 @@\n+To help projects still in development, unsure of actual `@since` tag value, one may want to use token name instead of continuely\n+updating the current version since tags. For example, `@since LongRunningProjectName`. The option `--ignoreSince` maybe used to\n+ignore these tags (`--ignoreSince LongRunningProjectName`). Maybe be specified multiple times.\n+\n@@ -105,1 +109,1 @@\n-        `@run main SinceChecker <moduleName> [--exclude package1,package2 | --exclude package1 package2]`\n+        `@run main SinceChecker <moduleName> [--ignoreSince <string>] [--exclude package1,package2 | --exclude package1 package2]`\n@@ -114,0 +118,5 @@\n+    \/\/ Ignored since tags\n+    private static final Set<String> IGNORE_SINCE = new HashSet<>();\n+    \/\/ Simply replace ignored since tags with the latest version\n+    private static final Version     IGNORE_VERSION = Version.parse(Integer.toString(Runtime.version().major()));\n+\n@@ -130,1 +139,5 @@\n-            if (\"--exclude\".equals(args[i])) {\n+            if (\"--ignoreSince\".equals(args[i])) {\n+                i++;\n+                IGNORE_SINCE.add(\"@since \" + args[i]);\n+            }\n+            else if (\"--exclude\".equals(args[i])) {\n@@ -455,0 +468,5 @@\n+        for (String ignoreSince : IGNORE_SINCE) {\n+            if (documentation.contains(ignoreSince)) {\n+                return IGNORE_VERSION;\n+            }\n+        }\n","filename":"test\/jdk\/tools\/sincechecker\/SinceChecker.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @run main SinceChecker java.base --exclude java.lang.classfile\n+ * @run main SinceChecker java.base --ignoreSince Valhalla --exclude java.lang.classfile\n","filename":"test\/jdk\/tools\/sincechecker\/modules\/java_base\/CheckSince_javaBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}