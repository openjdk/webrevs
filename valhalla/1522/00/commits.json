[{"commit":{"message":"Comment print inlining flag usage"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"8adfff69f92fa4e4a7797440b6c09f0ba9734cca"},{"commit":{"message":"Added ForceInline to make sure constructor gets inlined\n\n* But the bug still remains"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"f7dc66a86ff8241c78fe3ca0466a5dd1ae5463d3"},{"commit":{"message":"Discovered bug in int[] box"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"dd069ec30a8fea560698dc93287eab3d7c9e2d53"},{"commit":{"message":"Remove hardcoded MyTimeInstant references"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"d8b4ffa481a34b3cf64f0b6ddef9008b05986b94"},{"commit":{"message":"Add a multi type that works just about"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"153d5b867dffcb037a1f7c3665aa7a43e23466a6"},{"commit":{"message":"Merge branch 'valhalla.lworld' into topic.template-101"},"files":[],"sha":"897827c619e46b8b1f776703c9bb2727137658df"},{"commit":{"message":"Comment failing IR test combination"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"80cf3400ffb4d023777baed0faada338b6ea6b41"},{"commit":{"message":"Test value class within value class failing but reason unknown"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"8f45b118247ccc7d6113e88e659d96a0fd3a801a"},{"commit":{"message":"Avoid using FieldConstant on uni field test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"ce1352b2bd1110acc91afa7948e719a719178758"},{"commit":{"message":"Basic test with multiple fields of boolean"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"7d104a326319f0af8dd919234c96be731c5e460c"},{"commit":{"message":"Take advantage of $ substitution to avoid tracking ids"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"102cd6eded73fdd73814a9cf31bf2d7a313a811d"},{"commit":{"message":"Add a hash method computed from the fields of the type"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"b144b058d005c6308db41795765f35195627bf42"},{"commit":{"message":"Product a type with multiple fields"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"edce03579f8f5cf2ddbb1223f6af6fc5c9eb795c"},{"commit":{"message":"Change structure to make it easier to add multiple types"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"e3ee7ad896afc812126bf8dc6302dd8b660256fa"},{"commit":{"message":"Test with all primitive types"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"a24c6861cd6043e4b6683dda100fa66eb5086e4e"},{"commit":{"message":"Separate IRNode definitions from test template"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"a4597e6716cb85e97cbea6dcd086712690808971"},{"commit":{"message":"Basic type parameterized template value class test\n\n* The most basic of tests\n* Switch to more precise IRNode failure conditions\n* Disable EA, easily test with non-value class and add report stdout\n* Simplify and align with Box1\/test1\n* Use @Check instead of @Run\n* Make it public to access it from template\n* Port test over to the template framework\n* Parameterize box type"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/InlineTypeIRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/templating\/TestOne.java"}],"sha":"f3fb29d5e8c2c0d9fc2790877b4b47fab8ae5b29"},{"commit":{"message":"8352869: Verify.checkEQ: extension for NaN, VectorAPI and arbitrary Objects\n\nReviewed-by: chagedorn, thartmann"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/verify\/Verify.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/verify\/examples\/TestWithVectorAPI.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/verify\/tests\/TestVerify.java"}],"sha":"68e4a60c1ff62f4d0b8b31cb0bd729f1d67748e2"},{"commit":{"message":"8358772: Template-Framework Library: Primitive Types\n\nReviewed-by: mhaessig, chagedorn"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Hook.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Token.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TokenParser.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/CodeGenerationDataNameType.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/PrimitiveType.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestPrimitiveTypes.java"}],"sha":"469fc3719d05b4e99200ca2062a56f76152bd98b"},{"commit":{"message":"8358600: Template-Framework Library: Template for TestFramework test class\n\nReviewed-by: chagedorn, mhaessig"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/TestFrameworkClass.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestWithTestFrameworkClass.java"}],"sha":"2e258443f58c632fc924dee43177644c844ea384"},{"commit":{"message":"8344942: Template-Based Testing Framework\n\nCo-authored-by: Tobias Hartmann <thartmann@openjdk.org>\nCo-authored-by: Tobias Holenstein <tholenstein@openjdk.org>\nCo-authored-by: Theo Weidmann <tweidmann@openjdk.org>\nCo-authored-by: Roberto Castañeda Lozano <rcastanedalo@openjdk.org>\nCo-authored-by: Christian Hagedorn <chagedorn@openjdk.org>\nCo-authored-by: Manuel Hässig <mhaessig@openjdk.org>\nReviewed-by: chagedorn, mhaessig, rcastanedalo"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/AddNameToken.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Code.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/CodeFrame.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/DataName.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Hook.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/HookAnchorToken.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/HookInsertToken.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Name.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/NameSet.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/NothingToken.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/README.md"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Renderer.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/RendererException.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/StringToken.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/StructuralName.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateBinding.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateBody.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateFrame.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateToken.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Token.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/Hooks.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestAdvanced.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestSimple.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestTutorial.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestFormat.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestTemplate.java"}],"sha":"c7eca0069319c91eeb0b3f6631e56a7e7f010deb"}]