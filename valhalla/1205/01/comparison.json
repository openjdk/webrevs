{"files":[{"patch":"@@ -77,1 +77,1 @@\n-    if (value->is_InlineType() && no_circularity) {\n+    if (type->is_inlinetype() && no_circularity) {\n@@ -115,0 +115,2 @@\n+  assert(inline_klass() == other->inline_klass(), \"Merging incompatible types\");\n+\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-  bool is_larval() { return _is_larval; }\n+  bool is_larval() const { return _is_larval; }\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4390,0 +4390,96 @@\n+\n+    static value class MyValueContainer {\n+        private final Object value;\n+\n+        private MyValueContainer(Object value) {\n+            this.value = value;\n+        }\n+    }\n+\n+    static value class MyValue161 {\n+        int x = 0;\n+    }\n+\n+    @Test\n+    public MyValueContainer test161(boolean b) {\n+        MyValueContainer res = b ? new MyValueContainer(new MyValue161()) : null;\n+        \/\/ Cast to verify that merged values are of correct type\n+        Object obj = b ? (MyValue161)res.value : null;\n+        return res;\n+    }\n+\n+    @Run(test = \"test161\")\n+    public void test161_verifier() {\n+        Asserts.assertEquals(test161(true), new MyValueContainer(new MyValue161()));\n+        Asserts.assertEquals(test161(false), null);\n+    }\n+\n+    @Test\n+    public MyValueContainer test162(boolean b) {\n+        MyValueContainer res = b ? null : new MyValueContainer(new MyValue161());\n+        \/\/ Cast to verify that merged values are of correct type\n+        Object obj = b ? null : (MyValue161)res.value;\n+        return res;\n+    }\n+\n+    @Run(test = \"test162\")\n+    public void test162_verifier() {\n+        Asserts.assertEquals(test162(true), null);\n+        Asserts.assertEquals(test162(false), new MyValueContainer(new MyValue161()));\n+    }\n+\n+    @Test\n+    public MyValueContainer test163(boolean b) {\n+        MyValueContainer res = b ? new MyValueContainer(new MyValue161()) : new MyValueContainer(null);\n+        \/\/ Cast to verify that merged values are of correct type\n+        Object obj = b ? (MyValue161)res.value : (MyValue161)res.value;\n+        return res;\n+    }\n+\n+    @Run(test = \"test163\")\n+    public void test163_verifier() {\n+        Asserts.assertEquals(test163(true), new MyValueContainer(new MyValue161()));\n+        Asserts.assertEquals(test163(false), new MyValueContainer(null));\n+    }\n+\n+    @Test\n+    public MyValueContainer test164(boolean b) {\n+        MyValueContainer res = b ? new MyValueContainer(null) : new MyValueContainer(new MyValue161());\n+        \/\/ Cast to verify that merged values are of correct type\n+        Object obj = b ? (MyValue161)res.value : (MyValue161)res.value;\n+        return res;\n+    }\n+\n+    @Run(test = \"test164\")\n+    public void test164_verifier() {\n+        Asserts.assertEquals(test164(true), new MyValueContainer(null));\n+        Asserts.assertEquals(test164(false), new MyValueContainer(new MyValue161()));\n+    }\n+\n+    @Test\n+    public MyValueContainer test165(boolean b) {\n+        MyValueContainer res = b ? new MyValueContainer(new MyValue161()) : new MyValueContainer(42);\n+        \/\/ Cast to verify that merged values are of correct type\n+        Object obj = b ? (MyValue161)res.value : (Integer)res.value;\n+        return res;\n+    }\n+\n+    @Run(test = \"test165\")\n+    public void test165_verifier() {\n+        Asserts.assertEquals(test165(true), new MyValueContainer(new MyValue161()));\n+        Asserts.assertEquals(test165(false), new MyValueContainer(42));\n+    }\n+\n+    @Test\n+    public MyValueContainer test166(boolean b) {\n+        MyValueContainer res = b ? new MyValueContainer(42) : new MyValueContainer(new MyValue161());\n+        \/\/ Cast to verify that merged values are of correct type\n+        Object obj = b ? (Integer)res.value : (MyValue161)res.value;\n+        return res;\n+    }\n+\n+    @Run(test = \"test166\")\n+    public void test166_verifier() {\n+        Asserts.assertEquals(test166(true), new MyValueContainer(42));\n+        Asserts.assertEquals(test166(false), new MyValueContainer(new MyValue161()));\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestLWorld.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"modified"}]}