{"files":[{"patch":"@@ -3990,2 +3990,3 @@\n-int java_lang_boxing_object::_value_offset;\n-int java_lang_boxing_object::_long_value_offset;\n+int java_lang_boxing_object::_sub32bits_value_offset;\n+int java_lang_boxing_object::_32bits_value_offset;\n+int java_lang_boxing_object::_64bits_value_offset;\n@@ -3994,2 +3995,3 @@\n-  macro(_value_offset,      byteKlass, \"value\", byte_signature, false); \\\n-  macro(_long_value_offset, longKlass, \"value\", long_signature, false);\n+  macro(_sub32bits_value_offset, byteKlass, \"value\", byte_signature, false); \\\n+  macro(_32bits_value_offset,    intKlass,  \"value\", int_signature,  false); \\\n+  macro(_64bits_value_offset,    longKlass, \"value\", long_signature, false);\n@@ -3999,0 +4001,1 @@\n+  InstanceKlass* intKlass = vmClasses::Integer_klass();\n@@ -4025,1 +4028,1 @@\n-      box->bool_field_put(_value_offset, value->z);\n+      box->bool_field_put(_sub32bits_value_offset, value->z);\n@@ -4028,1 +4031,1 @@\n-      box->char_field_put(_value_offset, value->c);\n+      box->char_field_put(_sub32bits_value_offset, value->c);\n@@ -4031,1 +4034,1 @@\n-      box->float_field_put(_value_offset, value->f);\n+      box->float_field_put(_32bits_value_offset, value->f);\n@@ -4034,1 +4037,1 @@\n-      box->double_field_put(_long_value_offset, value->d);\n+      box->double_field_put(_64bits_value_offset, value->d);\n@@ -4037,1 +4040,1 @@\n-      box->byte_field_put(_value_offset, value->b);\n+      box->byte_field_put(_sub32bits_value_offset, value->b);\n@@ -4040,1 +4043,1 @@\n-      box->short_field_put(_value_offset, value->s);\n+      box->short_field_put(_sub32bits_value_offset, value->s);\n@@ -4043,1 +4046,1 @@\n-      box->int_field_put(_value_offset, value->i);\n+      box->int_field_put(_32bits_value_offset, value->i);\n@@ -4046,1 +4049,1 @@\n-      box->long_field_put(_long_value_offset, value->j);\n+      box->long_field_put(_64bits_value_offset, value->j);\n@@ -4068,1 +4071,1 @@\n-    value->z = box->bool_field(_value_offset);\n+    value->z = box->bool_field(_sub32bits_value_offset);\n@@ -4071,1 +4074,1 @@\n-    value->c = box->char_field(_value_offset);\n+    value->c = box->char_field(_sub32bits_value_offset);\n@@ -4074,1 +4077,1 @@\n-    value->f = box->float_field(_value_offset);\n+      value->f = box->float_field(_32bits_value_offset);\n@@ -4077,1 +4080,1 @@\n-    value->d = box->double_field(_long_value_offset);\n+    value->d = box->double_field(_64bits_value_offset);\n@@ -4080,1 +4083,1 @@\n-    value->b = box->byte_field(_value_offset);\n+    value->b = box->byte_field(_sub32bits_value_offset);\n@@ -4083,1 +4086,1 @@\n-    value->s = box->short_field(_value_offset);\n+    value->s = box->short_field(_sub32bits_value_offset);\n@@ -4086,1 +4089,1 @@\n-    value->i = box->int_field(_value_offset);\n+      value->i = box->int_field(_32bits_value_offset);\n@@ -4089,1 +4092,1 @@\n-    value->j = box->long_field(_long_value_offset);\n+    value->j = box->long_field(_64bits_value_offset);\n@@ -4102,1 +4105,1 @@\n-    box->bool_field_put(_value_offset, value->z);\n+    box->bool_field_put(_sub32bits_value_offset, value->z);\n@@ -4105,1 +4108,1 @@\n-    box->char_field_put(_value_offset, value->c);\n+    box->char_field_put(_sub32bits_value_offset, value->c);\n@@ -4108,1 +4111,1 @@\n-    box->float_field_put(_value_offset, value->f);\n+    box->float_field_put(_32bits_value_offset, value->f);\n@@ -4111,1 +4114,1 @@\n-    box->double_field_put(_long_value_offset, value->d);\n+    box->double_field_put(_64bits_value_offset, value->d);\n@@ -4114,1 +4117,1 @@\n-    box->byte_field_put(_value_offset, value->b);\n+    box->byte_field_put(_sub32bits_value_offset, value->b);\n@@ -4117,1 +4120,1 @@\n-    box->short_field_put(_value_offset, value->s);\n+    box->short_field_put(_sub32bits_value_offset, value->s);\n@@ -4120,1 +4123,1 @@\n-    box->int_field_put(_value_offset, value->i);\n+    box->int_field_put(_32bits_value_offset, value->i);\n@@ -4123,1 +4126,1 @@\n-    box->long_field_put(_long_value_offset, value->j);\n+    box->long_field_put(_64bits_value_offset, value->j);\n@@ -5523,2 +5526,8 @@\n-#define CHECK_OFFSET(klass_name, cpp_klass_name, field_name, field_sig) \\\n-  valid &= check_offset(klass_name, cpp_klass_name :: _##field_name ## _offset, #field_name, field_sig)\n+#define CHECK_SUB32BITS_OFFSET(klass_name, cpp_klass_name, field_name, field_sig) \\\n+  valid &= check_offset(klass_name, cpp_klass_name :: _ ##sub32bits_ ## field_name ## _offset, #field_name, field_sig)\n+\n+#define CHECK_32BITS_OFFSET(klass_name, cpp_klass_name, field_name, field_sig) \\\n+  valid &= check_offset(klass_name, cpp_klass_name :: _##32bits_ ## field_name ## _offset, #field_name, field_sig)\n+\n+#define CHECK_64BITS_OFFSET(klass_name, cpp_klass_name, field_name, field_sig) \\\n+  valid &= check_offset(klass_name, cpp_klass_name :: _##64bits_ ## field_name ## _offset, #field_name, field_sig)\n@@ -5526,2 +5535,0 @@\n-#define CHECK_LONG_OFFSET(klass_name, cpp_klass_name, field_name, field_sig) \\\n-  valid &= check_offset(klass_name, cpp_klass_name :: _##long_ ## field_name ## _offset, #field_name, field_sig)\n@@ -5531,16 +5538,8 @@\n-  CHECK_OFFSET(\"java\/lang\/Boolean\",   java_lang_boxing_object, value, \"Z\");\n-  CHECK_OFFSET(\"java\/lang\/Character\", java_lang_boxing_object, value, \"C\");\n-  if (Arguments::enable_preview() && UseNullableValueFlattening && (UseFieldFlattening || UseArrayFlattening)) {\n-    CHECK_LONG_OFFSET(\"java\/lang\/Float\",     java_lang_boxing_object, value, \"F\");\n-  } else {\n-    CHECK_OFFSET(\"java\/lang\/Float\",     java_lang_boxing_object, value, \"F\");\n-  }\n-  CHECK_LONG_OFFSET(\"java\/lang\/Double\", java_lang_boxing_object, value, \"D\");\n-  CHECK_OFFSET(\"java\/lang\/Byte\",      java_lang_boxing_object, value, \"B\");\n-  CHECK_OFFSET(\"java\/lang\/Short\",     java_lang_boxing_object, value, \"S\");\n-  if (Arguments::enable_preview() && UseNullableValueFlattening && (UseFieldFlattening || UseArrayFlattening)) {\n-    CHECK_LONG_OFFSET(\"java\/lang\/Integer\",   java_lang_boxing_object, value, \"I\");\n-  } else {\n-    CHECK_OFFSET(\"java\/lang\/Integer\",   java_lang_boxing_object, value, \"I\");\n-  }\n-  CHECK_LONG_OFFSET(\"java\/lang\/Long\", java_lang_boxing_object, value, \"J\");\n+  CHECK_SUB32BITS_OFFSET(\"java\/lang\/Boolean\",   java_lang_boxing_object, value, \"Z\");\n+  CHECK_SUB32BITS_OFFSET(\"java\/lang\/Character\", java_lang_boxing_object, value, \"C\");\n+  CHECK_32BITS_OFFSET(\"java\/lang\/Float\",     java_lang_boxing_object, value, \"F\");\n+  CHECK_64BITS_OFFSET(\"java\/lang\/Double\", java_lang_boxing_object, value, \"D\");\n+  CHECK_SUB32BITS_OFFSET(\"java\/lang\/Byte\",      java_lang_boxing_object, value, \"B\");\n+  CHECK_SUB32BITS_OFFSET(\"java\/lang\/Short\",     java_lang_boxing_object, value, \"S\");\n+  CHECK_32BITS_OFFSET(\"java\/lang\/Integer\",   java_lang_boxing_object, value, \"I\");\n+  CHECK_64BITS_OFFSET(\"java\/lang\/Long\", java_lang_boxing_object, value, \"J\");\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":47,"deletions":48,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -976,2 +976,3 @@\n-  static int _value_offset;\n-  static int _long_value_offset;\n+  static int _sub32bits_value_offset;\n+  static int _32bits_value_offset;\n+  static int _64bits_value_offset;\n@@ -994,1 +995,2 @@\n-    return is_double_word_type(type) ? _long_value_offset : _value_offset;\n+    if (type == T_INT || type == T_FLOAT) return _32bits_value_offset;\n+    return is_double_word_type(type) ? _64bits_value_offset : _sub32bits_value_offset;\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}