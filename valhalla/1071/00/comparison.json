{"files":[{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.misc;\n-\n-\/**\n- * Defines static methods to test if Valhalla features are enabled at run-time.\n- *\/\n-public class ValhallaFeatures {\n-    private static final boolean ENABLED = isValhallaEnabled();\n-\n-    private ValhallaFeatures() {\n-    }\n-\n-    \/**\n-     * {@return true if Valhalla features are enabled, otherwise false}\n-     *\/\n-    public static boolean isEnabled() {\n-        return ENABLED;\n-    }\n-\n-    \/**\n-     * Ensures that EnableValhalla features are enabled.\n-     * @throws UnsupportedOperationException if EnableValhalla features are not enabled\n-     *\/\n-    public static void ensureValhallaEnabled() {\n-        if (!ENABLED) {\n-            throw new UnsupportedOperationException(\n-                    \"ValhallaFeatures Features not enabled, need to run with -XX:+EnableValhalla\");\n-        }\n-    }\n-\n-    private static native boolean isValhallaEnabled();\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/ValhallaFeatures.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"jni.h\"\n-#include \"jvm.h\"\n-\n-#include \"jdk_internal_misc_ValhallaFeatures.h\"\n-\n-JNIEXPORT jboolean JNICALL\n-Java_jdk_internal_misc_ValhallaFeatures_isValhallaEnabled(JNIEnv *env, jclass cls) {\n-    return JVM_IsValhallaEnabled();\n-}\n","filename":"src\/java.base\/share\/native\/libjava\/ValhallaFeatures.c","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,61 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.internal.misc.ValhallaFeatures;\n-\n-import org.junit.*;\n-import static org.junit.Assert.*;\n-\n-\/*\n- * @test\n- * @summary Test feature flags reflect command line flags\n- * @modules java.base\/jdk.internal.misc\n- * @run junit\/othervm -Dexpected=true ValhallaFeaturesTest\n- * @run junit\/othervm --enable-preview -Dexpected=true ValhallaFeaturesTest\n- *\/\n-\n-public class ValhallaFeaturesTest {\n-\n-    \/\/ Save the expected enable from the command line -Dexpected\n-    private static boolean expected = Boolean.getBoolean(\"expected\");\n-\n-    @Test\n-    public void checkEnable() {\n-        boolean enabled = ValhallaFeatures.isEnabled();\n-        System.out.println(\"ValhallaFeatures.isEnabled(): \" + enabled);\n-        assertEquals(\"ValhallaFeatures.isEnabled() Flag\", expected, enabled);\n-    }\n-\n-    @Test\n-    public void checkEnsure() {\n-        if (expected) {\n-            \/\/ Throwing an exception is an error\n-            ValhallaFeatures.ensureValhallaEnabled();\n-        } else {\n-            assertThrows(\"ValhallaFeatures.ensureValhallaEnabled() Flag\", UnsupportedOperationException.class,\n-                    () -> ValhallaFeatures.ensureValhallaEnabled());\n-        }\n-    }\n-}\n","filename":"test\/jdk\/valhalla\/valuetypes\/ValhallaFeaturesTest.java","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"}]}