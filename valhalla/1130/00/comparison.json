{"files":[{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/ConditionalExpressionResolvePending.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T8204610.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @library \/tools\/javac\/lib\n@@ -31,0 +30,1 @@\n+ * @library \/tools\/javac\/lib\n","filename":"test\/langtools\/tools\/javac\/T7093325.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/cast\/intersection\/IntersectionTypeCastTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/hiding\/InterfaceMethodHidingTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/super\/TestDefaultSuperCall.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/failover\/CheckAttributedTree.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/7046778\/DiamondAndInnerClassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8176534\/TestUncheckedCalls.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/7062745\/GenericOverrideTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/FunctionalInterfaceConversionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaParserTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReferenceParserTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8235564.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/TestLambdaToMethodStats.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @library \/tools\/javac\/lib\n@@ -31,0 +30,1 @@\n+ * @library \/tools\/javac\/lib\n","filename":"test\/langtools\/tools\/javac\/lambda\/bytecode\/TestLambdaBytecode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @library \/tools\/javac\/lib\n@@ -31,0 +30,1 @@\n+ * @library \/tools\/javac\/lib\n","filename":"test\/langtools\/tools\/javac\/lambda\/bytecode\/TestLambdaBytecodeTargetRelease14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/mostSpecific\/StructuralMostSpecificTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/combo\/TypeInferenceComboTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/multicatch\/7030606\/DisjunctiveTypeWellFormednessTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsInitializer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n@@ -34,1 +35,0 @@\n- * @enablePreview\n@@ -241,1 +241,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/BreakAndLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/CaseStructureTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/ConditionalTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/LocalVariableReuse.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfComboTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/ScopeResizeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/processing\/GenerateAndError.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestErrorCount.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/processing\/werror\/WErrorLast.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/records\/LocalStaticDeclarations.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/records\/mandated_members\/CheckRecordMembers.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n@@ -141,1 +142,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/recovery\/ClassBlockExits.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/resolve\/BitWiseOperators.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/SwitchExpressionNoValue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/tree\/MakeTypeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @library \/tools\/javac\/lib\n@@ -31,0 +30,1 @@\n+ * @library \/tools\/javac\/lib\n","filename":"test\/langtools\/tools\/javac\/varargs\/7042566\/T7042566.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}