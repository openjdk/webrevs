{"files":[{"patch":"@@ -906,1 +906,1 @@\n-UNSAFE_ENTRY(jint, Unsafe_ArrayBaseOffset1(JNIEnv *env, jobject unsafe, jarray array)) {\n+UNSAFE_ENTRY(jint, Unsafe_ArrayInstanceBaseOffset0(JNIEnv *env, jobject unsafe, jarray array)) {\n@@ -950,1 +950,1 @@\n-UNSAFE_ENTRY(jint, Unsafe_ArrayIndexScale1(JNIEnv *env, jobject unsafe, jarray array)) {\n+UNSAFE_ENTRY(jint, Unsafe_ArrayInstanceIndexScale0(JNIEnv *env, jobject unsafe, jarray array)) {\n@@ -1239,1 +1239,1 @@\n-    {CC \"arrayBaseOffset1\",   CC \"(\" OBJ_ARR \")I\",       FN_PTR(Unsafe_ArrayBaseOffset1)},\n+    {CC \"arrayInstanceBaseOffset0\",   CC \"(\" OBJ_ARR \")I\", FN_PTR(Unsafe_ArrayInstanceBaseOffset0)},\n@@ -1241,1 +1241,1 @@\n-    {CC \"arrayIndexScale1\",   CC \"(\" OBJ_ARR \")I\",       FN_PTR(Unsafe_ArrayIndexScale1)},\n+    {CC \"arrayInstanceIndexScale0\",   CC \"(\" OBJ_ARR \")I\", FN_PTR(Unsafe_ArrayInstanceIndexScale0)},\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -126,2 +126,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -145,2 +145,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -167,2 +167,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -186,2 +186,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -208,2 +208,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -227,2 +227,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -249,2 +249,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -272,2 +272,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -295,2 +295,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -318,2 +318,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -341,2 +341,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -364,2 +364,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -387,2 +387,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -410,2 +410,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -433,2 +433,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -454,2 +454,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n@@ -475,2 +475,2 @@\n-            int aoffset = (int) UNSAFE.arrayBaseOffset(array);\n-            int ascale = UNSAFE.arrayIndexScale(array);\n+            int aoffset = (int) UNSAFE.arrayInstanceBaseOffset(array);\n+            int ascale = UNSAFE.arrayInstanceIndexScale(array);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ArrayVarHandle.java","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -1424,0 +1424,5 @@\n+     * <p>\n+     * This method doesn't support arrays with an element type that is\n+     * a value class, because this type of array can have multiple layouts.\n+     * For these arrays, {@code arrayInstanceBaseOffset(Object[] array)}\n+     * must be used instead.\n@@ -1436,1 +1441,1 @@\n-    public long arrayBaseOffset(Object[] array) {\n+    public long arrayInstanceBaseOffset(Object[] array) {\n@@ -1441,1 +1446,1 @@\n-        return arrayBaseOffset1(array);\n+        return arrayInstanceBaseOffset0(array);\n@@ -1489,0 +1494,5 @@\n+     * <p>\n+     * This method doesn't support arrays with an element type that is\n+     * a value class, because this type of array can have multiple layouts.\n+     * For these arrays, {@code arrayInstanceIndexScale(Object[] array)}\n+     * must be used instead.\n@@ -1502,1 +1512,1 @@\n-    public int arrayIndexScale(Object[] array) {\n+    public int arrayInstanceIndexScale(Object[] array) {\n@@ -1507,1 +1517,1 @@\n-        return arrayIndexScale1(array);\n+        return arrayInstanceIndexScale0(array);\n@@ -2907,2 +2917,2 @@\n-        long base = arrayBaseOffset(expectedArray);\n-        int scale = arrayIndexScale(expectedArray);\n+        long base = arrayInstanceBaseOffset(expectedArray);\n+        int scale = arrayInstanceIndexScale(expectedArray);\n@@ -4437,1 +4447,1 @@\n-    private native int arrayBaseOffset1(Object[] array);\n+    private native int arrayInstanceBaseOffset0(Object[] array);\n@@ -4439,1 +4449,1 @@\n-    private native int arrayIndexScale1(Object[] array);\n+    private native int arrayInstanceIndexScale0(Object[] array);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -652,2 +652,2 @@\n-            TEST33_BASE_OFFSET = U.arrayBaseOffset(TEST33_ARRAY);\n-            TEST33_INDEX_SCALE = U.arrayIndexScale(TEST33_ARRAY);\n+            TEST33_BASE_OFFSET = U.arrayInstanceBaseOffset(TEST33_ARRAY);\n+            TEST33_INDEX_SCALE = U.arrayInstanceIndexScale(TEST33_ARRAY);\n@@ -1260,2 +1260,2 @@\n-            TEST64_BASE_OFFSET = U.arrayBaseOffset(TEST64_ARRAY);\n-            TEST64_INDEX_SCALE = U.arrayIndexScale(TEST64_ARRAY);\n+            TEST64_BASE_OFFSET = U.arrayInstanceBaseOffset(TEST64_ARRAY);\n+            TEST64_INDEX_SCALE = U.arrayInstanceIndexScale(TEST64_ARRAY);\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestIntrinsics.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -304,2 +304,2 @@\n-        long baseOffset = U.arrayBaseOffset(array);\n-        int scaleIndex = U.arrayIndexScale(array);\n+        long baseOffset = U.arrayInstanceBaseOffset(array);\n+        int scaleIndex = U.arrayInstanceIndexScale(array);\n@@ -359,2 +359,2 @@\n-        long baseOffset = U.arrayBaseOffset(array);\n-        int scaleIndex = U.arrayIndexScale(array);\n+        long baseOffset = U.arrayInstanceBaseOffset(array);\n+        int scaleIndex = U.arrayInstanceIndexScale(array);\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/UnsafeTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -849,1 +849,0 @@\n-jdk\/internal\/misc\/Unsafe\/AddressComputationContractTest.java 8368933 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}