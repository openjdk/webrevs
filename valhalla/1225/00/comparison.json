{"files":[{"patch":"@@ -285,1 +285,1 @@\n-        if (value < -65_504L) {\n+        if (value <= -65_520L) {  \/\/ -(Float16.MAX_VALUE + Float16.ulp(Float16.MAX_VALUE) \/ 2)\n@@ -288,2 +288,2 @@\n-            if (value > 65_504L) {\n-                return NEGATIVE_INFINITY;\n+            if (value >= 65_520L) {  \/\/ Float16.MAX_VALUE + Float16.ulp(Float16.MAX_VALUE) \/ 2\n+                return POSITIVE_INFINITY;\n@@ -859,1 +859,0 @@\n-     * @see Math#sqrt(float)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Float16.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8329817 8334432\n+ * @bug 8329817 8334432 8339076\n@@ -50,0 +50,1 @@\n+        checkValueOfLong();\n@@ -429,0 +430,9 @@\n+    private static void checkValueOfLong() {\n+        checkFloat16(valueOf(-65_521), Float.NEGATIVE_INFINITY, \"-infinity\");\n+        checkFloat16(valueOf(-65_520), Float.NEGATIVE_INFINITY, \"-infinity\");\n+        checkFloat16(valueOf(-65_519), -MAX_VALUE.floatValue(), \"-MAX_VALUE\");\n+        checkFloat16(valueOf(65_519), MAX_VALUE.floatValue(), \"MAX_VALUE\");\n+        checkFloat16(valueOf(65_520), Float.POSITIVE_INFINITY, \"+infinity\");\n+        checkFloat16(valueOf(65_521), Float.POSITIVE_INFINITY, \"+infinity\");\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/Float16\/BasicFloat16ArithTests.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}