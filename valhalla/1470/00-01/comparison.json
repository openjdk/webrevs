{"files":[{"patch":"@@ -482,1 +482,2 @@\n-      value = make_from_flat_impl(kit, fvk, base, field_ptr, field_adr_type(ptr_type, field_off), atomic, immutable_memory, field_null_free, trust_null_free_oop & field_null_free, decorators, visited);\n+      value = make_from_flat_impl(kit, fvk, base, field_ptr, field_adr_type(ptr_type, field_off),\n+                                  atomic, immutable_memory, field_null_free, trust_null_free_oop && field_null_free, decorators, visited);\n@@ -530,1 +531,1 @@\n-void InlineTypeNode::convert_from_payload(GraphKit* kit, BasicType bt, Node* payload, int holder_offset, bool null_free, int null_marker_offset) {\n+void InlineTypeNode::convert_from_payload(GraphKit* kit, BasicType bt, Node* payload, int holder_offset, bool null_free, bool trust_null_free_oop) {\n@@ -532,0 +533,1 @@\n+  ciInlineKlass* vk = inline_klass();\n@@ -535,1 +537,1 @@\n-    value = get_payload_value(gvn, payload, bt, T_BOOLEAN, null_marker_offset);\n+    value = get_payload_value(gvn, payload, bt, T_BOOLEAN, holder_offset + vk->null_marker_offset_in_payload());\n@@ -542,1 +544,1 @@\n-    int offset = holder_offset + field_offset(i) - inline_klass()->payload_offset();\n+    int offset = holder_offset + field_offset(i) - vk->payload_offset();\n@@ -544,1 +546,0 @@\n-      null_marker_offset = holder_offset + field_null_marker_offset(i) - inline_klass()->payload_offset();\n@@ -546,1 +547,1 @@\n-      vt->convert_from_payload(kit, bt, payload, offset, field_null_free, null_marker_offset);\n+      vt->convert_from_payload(kit, bt, payload, offset, field_null_free, trust_null_free_oop && field_null_free);\n@@ -554,1 +555,1 @@\n-        if (field_null_free) {\n+        if (trust_null_free_oop && field_null_free) {\n@@ -1199,1 +1200,1 @@\n-  return make_from_flat_impl(kit, vk, base, ptr, ptr_type, atomic, immutable_memory, null_free, true, decorators, visited);\n+  return make_from_flat_impl(kit, vk, base, ptr, ptr_type, atomic, immutable_memory, null_free, null_free, decorators, visited);\n@@ -1205,0 +1206,1 @@\n+  assert(null_free || !trust_null_free_oop, \"cannot trust null-free oop when the holder object is not null-free\");\n@@ -1237,1 +1239,1 @@\n-  vt->convert_from_payload(kit, load_bt, kit->gvn().transform(payload), 0, null_free, vk->null_marker_offset_in_payload());\n+  vt->convert_from_payload(kit, load_bt, kit->gvn().transform(payload), 0, null_free, trust_null_free_oop);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-  void convert_from_payload(GraphKit* kit, BasicType bt, Node* payload, int holder_offset, bool null_free, int null_marker_offset);\n+  void convert_from_payload(GraphKit* kit, BasicType bt, Node* payload, int holder_offset, bool null_free, bool trust_null_free_oop);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}